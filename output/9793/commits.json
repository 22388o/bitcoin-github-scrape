[
  {
    "sha": "701411fd009ca3cc8cc30579d484f3a5ef8e3116",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDE0MTFmZDAwOWNhM2NjOGNjMzA1NzlkNDg0ZjNhNWVmOGUzMTE2",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T06:57:16Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T06:57:16Z"
      },
      "message": "msvc gitignore",
      "tree": {
        "sha": "7fec1e32bf673f30edf6256e9b68ace4753e8752",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fec1e32bf673f30edf6256e9b68ace4753e8752"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/701411fd009ca3cc8cc30579d484f3a5ef8e3116",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/701411fd009ca3cc8cc30579d484f3a5ef8e3116",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/701411fd009ca3cc8cc30579d484f3a5ef8e3116",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/701411fd009ca3cc8cc30579d484f3a5ef8e3116/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d978c41e1ec4fcf2c4d096f09af035f9e8a7ad81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d978c41e1ec4fcf2c4d096f09af035f9e8a7ad81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d978c41e1ec4fcf2c4d096f09af035f9e8a7ad81"
      }
    ],
    "stats": {
      "total": 257,
      "additions": 257,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f6192589408e4824dfa583972a47d2f6d1e6457f",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 257,
        "deletions": 0,
        "changes": 257,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/701411fd009ca3cc8cc30579d484f3a5ef8e3116/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/701411fd009ca3cc8cc30579d484f3a5ef8e3116/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=701411fd009ca3cc8cc30579d484f3a5ef8e3116",
        "patch": "@@ -110,3 +110,260 @@ qa/cache/*\n \n libbitcoinconsensus.pc\n contrib/devtools/split-debug.sh\n+\n+\n+\n+## -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ##\n+## Ignore Visual Studio temporary files, build results, and\n+## files generated by popular Visual Studio add-ons.\n+## -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ##\n+\n+# User-specific files\n+*.suo\n+*.user\n+*.userosscache\n+*.sln.docstates\n+\n+# User-specific files (MonoDevelop/Xamarin Studio)\n+*.userprefs\n+\n+# Build results\n+[Dd]ebug/\n+[Dd]ebugPublic/\n+[Rr]elease/\n+[Rr]eleases/\n+x64/\n+x86/\n+bld/\n+[Bb]in/\n+[Oo]bj/\n+[Ll]og/\n+\n+# Visual Studio 2015 cache/options directory\n+.vs/\n+# Uncomment if you have tasks that create the project's static files in wwwroot\n+#wwwroot/\n+\n+# MSTest test Results\n+[Tt]est[Rr]esult*/\n+[Bb]uild[Ll]og.*\n+\n+# NUNIT\n+*.VisualState.xml\n+TestResult.xml\n+\n+# Build Results of an ATL Project\n+[Dd]ebugPS/\n+[Rr]eleasePS/\n+dlldata.c\n+\n+# DNX\n+project.lock.json\n+artifacts/\n+\n+*_i.c\n+*_p.c\n+*_i.h\n+*.ilk\n+*.meta\n+*.obj\n+*.pch\n+*.pdb\n+*.pgc\n+*.pgd\n+*.rsp\n+*.sbr\n+*.tlb\n+*.tli\n+*.tlh\n+*.tmp\n+*.tmp_proj\n+*.log\n+*.vspscc\n+*.vssscc\n+.builds\n+*.pidb\n+*.svclog\n+*.scc\n+\n+# Chutzpah Test files\n+_Chutzpah*\n+\n+# Visual C++ cache files\n+ipch/\n+*.aps\n+*.ncb\n+*.opendb\n+*.opensdf\n+*.sdf\n+*.cachefile\n+*.VC.db\n+*.VC.VC.opendb\n+\n+# Visual Studio profiler\n+*.psess\n+*.vsp\n+*.vspx\n+*.sap\n+\n+# TFS 2012 Local Workspace\n+$tf/\n+\n+# Guidance Automation Toolkit\n+*.gpState\n+\n+# ReSharper is a .NET coding add-in\n+_ReSharper*/\n+*.[Rr]e[Ss]harper\n+*.DotSettings.user\n+\n+# JustCode is a .NET coding add-in\n+.JustCode\n+\n+# TeamCity is a build add-in\n+_TeamCity*\n+\n+# DotCover is a Code Coverage Tool\n+*.dotCover\n+\n+# NCrunch\n+_NCrunch_*\n+.*crunch*.local.xml\n+nCrunchTemp_*\n+\n+# MightyMoose\n+*.mm.*\n+AutoTest.Net/\n+\n+# Web workbench (sass)\n+.sass-cache/\n+\n+# Installshield output folder\n+[Ee]xpress/\n+\n+# DocProject is a documentation generator add-in\n+DocProject/buildhelp/\n+DocProject/Help/*.HxT\n+DocProject/Help/*.HxC\n+DocProject/Help/*.hhc\n+DocProject/Help/*.hhk\n+DocProject/Help/*.hhp\n+DocProject/Help/Html2\n+DocProject/Help/html\n+\n+# Click-Once directory\n+publish/\n+\n+# Publish Web Output\n+*.[Pp]ublish.xml\n+*.azurePubxml\n+# TODO: Comment the next line if you want to checkin your web deploy settings\n+# but database connection strings (with potential passwords) will be unencrypted\n+*.pubxml\n+*.publishproj\n+\n+# Microsoft Azure Web App publish settings. Comment the next line if you want to\n+# checkin your Azure Web App publish settings, but sensitive information contained\n+# in these scripts will be unencrypted\n+PublishScripts/\n+\n+# NuGet Packages\n+*.nupkg\n+# The packages folder can be ignored because of Package Restore\n+**/packages/*\n+# except build/, which is used as an MSBuild target.\n+!**/packages/build/\n+# Uncomment if necessary however generally it will be regenerated when needed\n+#!**/packages/repositories.config\n+# NuGet v3's project.json files produces more ignoreable files\n+*.nuget.props\n+*.nuget.targets\n+\n+# Microsoft Azure Build Output\n+csx/\n+*.build.csdef\n+\n+# Microsoft Azure Emulator\n+ecf/\n+rcf/\n+\n+# Windows Store app package directories and files\n+AppPackages/\n+BundleArtifacts/\n+Package.StoreAssociation.xml\n+_pkginfo.txt\n+\n+# Visual Studio cache files\n+# files ending in .cache can be ignored\n+*.[Cc]ache\n+# but keep track of directories ending in .cache\n+!*.[Cc]ache/\n+\n+# Others\n+ClientBin/\n+~$*\n+*~\n+*.dbmdl\n+*.dbproj.schemaview\n+*.pfx\n+*.publishsettings\n+node_modules/\n+orleans.codegen.cs\n+\n+# Since there are multiple workflows, uncomment next line to ignore bower_components\n+# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n+#bower_components/\n+\n+# RIA/Silverlight projects\n+Generated_Code/\n+\n+# Backup & report files from converting an old project file\n+# to a newer Visual Studio version. Backup files are not needed,\n+# because we have git ;-)\n+_UpgradeReport_Files/\n+Backup*/\n+UpgradeLog*.XML\n+UpgradeLog*.htm\n+\n+# SQL Server files\n+*.mdf\n+*.ldf\n+\n+# Business Intelligence projects\n+*.rdl.data\n+*.bim.layout\n+*.bim_*.settings\n+\n+# Microsoft Fakes\n+FakesAssemblies/\n+\n+# GhostDoc plugin setting file\n+*.GhostDoc.xml\n+\n+# Node.js Tools for Visual Studio\n+.ntvs_analysis.dat\n+\n+# Visual Studio 6 build log\n+*.plg\n+\n+# Visual Studio 6 workspace options file\n+*.opt\n+\n+# Visual Studio LightSwitch build output\n+**/*.HTMLClient/GeneratedArtifacts\n+**/*.DesktopClient/GeneratedArtifacts\n+**/*.DesktopClient/ModelManifest.xml\n+**/*.Server/GeneratedArtifacts\n+**/*.Server/ModelManifest.xml\n+_Pvt_Extensions\n+\n+# Paket dependency manager\n+.paket/paket.exe\n+paket-files/\n+\n+# FAKE - F# Make\n+.fake/\n+\n+# JetBrains Rider\n+.idea/\n+*.sln.iml"
      }
    ]
  },
  {
    "sha": "da09d63c397fa46a97ad7026409005365d63f987",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTA5ZDYzYzM5N2ZhNDZhOTdhZDcwMjY0MDkwMDUzNjVkNjNmOTg3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T06:57:54Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T06:57:54Z"
      },
      "message": "Visual Studio 2015 project",
      "tree": {
        "sha": "81a8e7acf5e5529f1e729e9f71a3f28651dc776a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81a8e7acf5e5529f1e729e9f71a3f28651dc776a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da09d63c397fa46a97ad7026409005365d63f987",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da09d63c397fa46a97ad7026409005365d63f987",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da09d63c397fa46a97ad7026409005365d63f987",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da09d63c397fa46a97ad7026409005365d63f987/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "701411fd009ca3cc8cc30579d484f3a5ef8e3116",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/701411fd009ca3cc8cc30579d484f3a5ef8e3116",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/701411fd009ca3cc8cc30579d484f3a5ef8e3116"
      }
    ],
    "stats": {
      "total": 198,
      "additions": 198,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bf0e154313d65ba8419a49d27a95cca56392fede",
        "filename": "bitcoin-msvc.sln",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da09d63c397fa46a97ad7026409005365d63f987/bitcoin-msvc.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da09d63c397fa46a97ad7026409005365d63f987/bitcoin-msvc.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.sln?ref=da09d63c397fa46a97ad7026409005365d63f987",
        "patch": "@@ -0,0 +1,28 @@\n+\ufeff\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 14\n+VisualStudioVersion = 14.0.25420.1\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-msvc\", \"bitcoin-msvc.vcxproj\", \"{8EFFD767-7623-4556-9A30-36533462915E}\"\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|x64 = Debug|x64\n+\t\tDebug|x86 = Debug|x86\n+\t\tRelease|x64 = Release|x64\n+\t\tRelease|x86 = Release|x86\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Debug|x64.Build.0 = Debug|x64\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Debug|x86.ActiveCfg = Debug|Win32\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Debug|x86.Build.0 = Debug|Win32\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Release|x64.ActiveCfg = Release|x64\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Release|x64.Build.0 = Release|x64\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Release|x86.ActiveCfg = Release|Win32\n+\t\t{8EFFD767-7623-4556-9A30-36533462915E}.Release|x86.Build.0 = Release|Win32\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+EndGlobal"
      },
      {
        "sha": "9486c1c5663e7858571ba31205a18f541e4fac99",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da09d63c397fa46a97ad7026409005365d63f987/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da09d63c397fa46a97ad7026409005365d63f987/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=da09d63c397fa46a97ad7026409005365d63f987",
        "patch": "@@ -0,0 +1,153 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{8EFFD767-7623-4556-9A30-36533462915E}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bitcoinmsvc</RootNamespace>\n+    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v140</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v140</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v140</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v140</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <WarningLevel>Level3</WarningLevel>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <WarningLevel>Level3</WarningLevel>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "6a1782f7d75e3eee655efe5b8a48a12726b2d9e1",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da09d63c397fa46a97ad7026409005365d63f987/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da09d63c397fa46a97ad7026409005365d63f987/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=da09d63c397fa46a97ad7026409005365d63f987",
        "patch": "@@ -0,0 +1,17 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup>\n+    <Filter Include=\"Source Files\">\n+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\n+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\n+    </Filter>\n+    <Filter Include=\"Header Files\">\n+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\n+      <Extensions>h;hh;hpp;hxx;hm;inl;inc;xsd</Extensions>\n+    </Filter>\n+    <Filter Include=\"Resource Files\">\n+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\n+    </Filter>\n+  </ItemGroup>\n+</Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDI3ZTdhMzRhZDUwMzhjNGVkZWY5MGRjZDZjNmNmOTU1M2M5OGFl",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T09:01:06Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T09:01:06Z"
      },
      "message": "vcxproj: add bitcoind.cpp",
      "tree": {
        "sha": "e8c79af442ea46bd3ac008a3a8ed5514dd4bea1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8c79af442ea46bd3ac008a3a8ed5514dd4bea1b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da09d63c397fa46a97ad7026409005365d63f987",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da09d63c397fa46a97ad7026409005365d63f987",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da09d63c397fa46a97ad7026409005365d63f987"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "837ba3428d54738f32c5e4f5fa4d4c972e4676b7",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
        "patch": "@@ -146,6 +146,7 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n+    <ClCompile Include=\"src\\bitcoind.cpp\" />\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">"
      },
      {
        "sha": "6d9fa0cefe69644a8869306a48ab98eef3278be9",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
        "patch": "@@ -14,4 +14,9 @@\n       <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\n     </Filter>\n   </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"src\\bitcoind.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+  </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "0106f96358af9fbfcd7f463d00ed160114b2a24c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTA2Zjk2MzU4YWY5ZmJmY2Q3ZjQ2M2QwMGVkMTYwMTE0YjJhMjRj",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T09:03:31Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T09:03:31Z"
      },
      "message": "Install-Package boost-vc140",
      "tree": {
        "sha": "7e5cf4e06bdd544642dd14705c2bcbfc11941caa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e5cf4e06bdd544642dd14705c2bcbfc11941caa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0106f96358af9fbfcd7f463d00ed160114b2a24c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0106f96358af9fbfcd7f463d00ed160114b2a24c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0106f96358af9fbfcd7f463d00ed160114b2a24c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0106f96358af9fbfcd7f463d00ed160114b2a24c/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7027e7a34ad5038c4edef90dcd6c6cf9553c98ae"
      }
    ],
    "stats": {
      "total": 131,
      "additions": 131,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b3f3a87919009cf8dae80a862b3feace1c332817",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0106f96358af9fbfcd7f463d00ed160114b2a24c/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0106f96358af9fbfcd7f463d00ed160114b2a24c/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=0106f96358af9fbfcd7f463d00ed160114b2a24c",
        "patch": "@@ -148,7 +148,93 @@\n   <ItemGroup>\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n   </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">\n+    <Import Project=\"packages\\boost.1.63.0.0\\build\\native\\boost.targets\" Condition=\"Exists('packages\\boost.1.63.0.0\\build\\native\\boost.targets')\" />\n+    <Import Project=\"packages\\boost_atomic-vc140.1.63.0.0\\build\\native\\boost_atomic-vc140.targets\" Condition=\"Exists('packages\\boost_atomic-vc140.1.63.0.0\\build\\native\\boost_atomic-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_bzip2-vc140.1.63.0.0\\build\\native\\boost_bzip2-vc140.targets\" Condition=\"Exists('packages\\boost_bzip2-vc140.1.63.0.0\\build\\native\\boost_bzip2-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_chrono-vc140.1.63.0.0\\build\\native\\boost_chrono-vc140.targets\" Condition=\"Exists('packages\\boost_chrono-vc140.1.63.0.0\\build\\native\\boost_chrono-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_container-vc140.1.63.0.0\\build\\native\\boost_container-vc140.targets\" Condition=\"Exists('packages\\boost_container-vc140.1.63.0.0\\build\\native\\boost_container-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_context-vc140.1.63.0.0\\build\\native\\boost_context-vc140.targets\" Condition=\"Exists('packages\\boost_context-vc140.1.63.0.0\\build\\native\\boost_context-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_coroutine-vc140.1.63.0.0\\build\\native\\boost_coroutine-vc140.targets\" Condition=\"Exists('packages\\boost_coroutine-vc140.1.63.0.0\\build\\native\\boost_coroutine-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_date_time-vc140.1.63.0.0\\build\\native\\boost_date_time-vc140.targets\" Condition=\"Exists('packages\\boost_date_time-vc140.1.63.0.0\\build\\native\\boost_date_time-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_exception-vc140.1.63.0.0\\build\\native\\boost_exception-vc140.targets\" Condition=\"Exists('packages\\boost_exception-vc140.1.63.0.0\\build\\native\\boost_exception-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_fiber-vc140.1.63.0.0\\build\\native\\boost_fiber-vc140.targets\" Condition=\"Exists('packages\\boost_fiber-vc140.1.63.0.0\\build\\native\\boost_fiber-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_filesystem-vc140.1.63.0.0\\build\\native\\boost_filesystem-vc140.targets\" Condition=\"Exists('packages\\boost_filesystem-vc140.1.63.0.0\\build\\native\\boost_filesystem-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_graph-vc140.1.63.0.0\\build\\native\\boost_graph-vc140.targets\" Condition=\"Exists('packages\\boost_graph-vc140.1.63.0.0\\build\\native\\boost_graph-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_iostreams-vc140.1.63.0.0\\build\\native\\boost_iostreams-vc140.targets\" Condition=\"Exists('packages\\boost_iostreams-vc140.1.63.0.0\\build\\native\\boost_iostreams-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_locale-vc140.1.63.0.0\\build\\native\\boost_locale-vc140.targets\" Condition=\"Exists('packages\\boost_locale-vc140.1.63.0.0\\build\\native\\boost_locale-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_log-vc140.1.63.0.0\\build\\native\\boost_log-vc140.targets\" Condition=\"Exists('packages\\boost_log-vc140.1.63.0.0\\build\\native\\boost_log-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_log_setup-vc140.1.63.0.0\\build\\native\\boost_log_setup-vc140.targets\" Condition=\"Exists('packages\\boost_log_setup-vc140.1.63.0.0\\build\\native\\boost_log_setup-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_math_c99-vc140.1.63.0.0\\build\\native\\boost_math_c99-vc140.targets\" Condition=\"Exists('packages\\boost_math_c99-vc140.1.63.0.0\\build\\native\\boost_math_c99-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_math_c99f-vc140.1.63.0.0\\build\\native\\boost_math_c99f-vc140.targets\" Condition=\"Exists('packages\\boost_math_c99f-vc140.1.63.0.0\\build\\native\\boost_math_c99f-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_math_c99l-vc140.1.63.0.0\\build\\native\\boost_math_c99l-vc140.targets\" Condition=\"Exists('packages\\boost_math_c99l-vc140.1.63.0.0\\build\\native\\boost_math_c99l-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_math_tr1-vc140.1.63.0.0\\build\\native\\boost_math_tr1-vc140.targets\" Condition=\"Exists('packages\\boost_math_tr1-vc140.1.63.0.0\\build\\native\\boost_math_tr1-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_math_tr1f-vc140.1.63.0.0\\build\\native\\boost_math_tr1f-vc140.targets\" Condition=\"Exists('packages\\boost_math_tr1f-vc140.1.63.0.0\\build\\native\\boost_math_tr1f-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_math_tr1l-vc140.1.63.0.0\\build\\native\\boost_math_tr1l-vc140.targets\" Condition=\"Exists('packages\\boost_math_tr1l-vc140.1.63.0.0\\build\\native\\boost_math_tr1l-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_prg_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_prg_exec_monitor-vc140.targets\" Condition=\"Exists('packages\\boost_prg_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_prg_exec_monitor-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_program_options-vc140.1.63.0.0\\build\\native\\boost_program_options-vc140.targets\" Condition=\"Exists('packages\\boost_program_options-vc140.1.63.0.0\\build\\native\\boost_program_options-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_python-vc140.1.63.0.0\\build\\native\\boost_python-vc140.targets\" Condition=\"Exists('packages\\boost_python-vc140.1.63.0.0\\build\\native\\boost_python-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_random-vc140.1.63.0.0\\build\\native\\boost_random-vc140.targets\" Condition=\"Exists('packages\\boost_random-vc140.1.63.0.0\\build\\native\\boost_random-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_regex-vc140.1.63.0.0\\build\\native\\boost_regex-vc140.targets\" Condition=\"Exists('packages\\boost_regex-vc140.1.63.0.0\\build\\native\\boost_regex-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_serialization-vc140.1.63.0.0\\build\\native\\boost_serialization-vc140.targets\" Condition=\"Exists('packages\\boost_serialization-vc140.1.63.0.0\\build\\native\\boost_serialization-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_signals-vc140.1.63.0.0\\build\\native\\boost_signals-vc140.targets\" Condition=\"Exists('packages\\boost_signals-vc140.1.63.0.0\\build\\native\\boost_signals-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_system-vc140.1.63.0.0\\build\\native\\boost_system-vc140.targets\" Condition=\"Exists('packages\\boost_system-vc140.1.63.0.0\\build\\native\\boost_system-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_test_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_test_exec_monitor-vc140.targets\" Condition=\"Exists('packages\\boost_test_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_test_exec_monitor-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_thread-vc140.1.63.0.0\\build\\native\\boost_thread-vc140.targets\" Condition=\"Exists('packages\\boost_thread-vc140.1.63.0.0\\build\\native\\boost_thread-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_timer-vc140.1.63.0.0\\build\\native\\boost_timer-vc140.targets\" Condition=\"Exists('packages\\boost_timer-vc140.1.63.0.0\\build\\native\\boost_timer-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_type_erasure-vc140.1.63.0.0\\build\\native\\boost_type_erasure-vc140.targets\" Condition=\"Exists('packages\\boost_type_erasure-vc140.1.63.0.0\\build\\native\\boost_type_erasure-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_unit_test_framework-vc140.1.63.0.0\\build\\native\\boost_unit_test_framework-vc140.targets\" Condition=\"Exists('packages\\boost_unit_test_framework-vc140.1.63.0.0\\build\\native\\boost_unit_test_framework-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_wave-vc140.1.63.0.0\\build\\native\\boost_wave-vc140.targets\" Condition=\"Exists('packages\\boost_wave-vc140.1.63.0.0\\build\\native\\boost_wave-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets\" Condition=\"Exists('packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets')\" />\n+    <Import Project=\"packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets\" Condition=\"Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" />\n+    <Import Project=\"packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets\" Condition=\"Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" />\n   </ImportGroup>\n+  <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\n+    </PropertyGroup>\n+    <Error Condition=\"!Exists('packages\\boost.1.63.0.0\\build\\native\\boost.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost.1.63.0.0\\build\\native\\boost.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_atomic-vc140.1.63.0.0\\build\\native\\boost_atomic-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_atomic-vc140.1.63.0.0\\build\\native\\boost_atomic-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_bzip2-vc140.1.63.0.0\\build\\native\\boost_bzip2-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_bzip2-vc140.1.63.0.0\\build\\native\\boost_bzip2-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_chrono-vc140.1.63.0.0\\build\\native\\boost_chrono-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_chrono-vc140.1.63.0.0\\build\\native\\boost_chrono-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_container-vc140.1.63.0.0\\build\\native\\boost_container-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_container-vc140.1.63.0.0\\build\\native\\boost_container-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_context-vc140.1.63.0.0\\build\\native\\boost_context-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_context-vc140.1.63.0.0\\build\\native\\boost_context-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_coroutine-vc140.1.63.0.0\\build\\native\\boost_coroutine-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_coroutine-vc140.1.63.0.0\\build\\native\\boost_coroutine-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_date_time-vc140.1.63.0.0\\build\\native\\boost_date_time-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_date_time-vc140.1.63.0.0\\build\\native\\boost_date_time-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_exception-vc140.1.63.0.0\\build\\native\\boost_exception-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_exception-vc140.1.63.0.0\\build\\native\\boost_exception-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_fiber-vc140.1.63.0.0\\build\\native\\boost_fiber-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_fiber-vc140.1.63.0.0\\build\\native\\boost_fiber-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_filesystem-vc140.1.63.0.0\\build\\native\\boost_filesystem-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_filesystem-vc140.1.63.0.0\\build\\native\\boost_filesystem-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_graph-vc140.1.63.0.0\\build\\native\\boost_graph-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_graph-vc140.1.63.0.0\\build\\native\\boost_graph-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_iostreams-vc140.1.63.0.0\\build\\native\\boost_iostreams-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_iostreams-vc140.1.63.0.0\\build\\native\\boost_iostreams-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_locale-vc140.1.63.0.0\\build\\native\\boost_locale-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_locale-vc140.1.63.0.0\\build\\native\\boost_locale-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_log-vc140.1.63.0.0\\build\\native\\boost_log-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_log-vc140.1.63.0.0\\build\\native\\boost_log-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_log_setup-vc140.1.63.0.0\\build\\native\\boost_log_setup-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_log_setup-vc140.1.63.0.0\\build\\native\\boost_log_setup-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_math_c99-vc140.1.63.0.0\\build\\native\\boost_math_c99-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_math_c99-vc140.1.63.0.0\\build\\native\\boost_math_c99-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_math_c99f-vc140.1.63.0.0\\build\\native\\boost_math_c99f-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_math_c99f-vc140.1.63.0.0\\build\\native\\boost_math_c99f-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_math_c99l-vc140.1.63.0.0\\build\\native\\boost_math_c99l-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_math_c99l-vc140.1.63.0.0\\build\\native\\boost_math_c99l-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_math_tr1-vc140.1.63.0.0\\build\\native\\boost_math_tr1-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_math_tr1-vc140.1.63.0.0\\build\\native\\boost_math_tr1-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_math_tr1f-vc140.1.63.0.0\\build\\native\\boost_math_tr1f-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_math_tr1f-vc140.1.63.0.0\\build\\native\\boost_math_tr1f-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_math_tr1l-vc140.1.63.0.0\\build\\native\\boost_math_tr1l-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_math_tr1l-vc140.1.63.0.0\\build\\native\\boost_math_tr1l-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_prg_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_prg_exec_monitor-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_prg_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_prg_exec_monitor-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_program_options-vc140.1.63.0.0\\build\\native\\boost_program_options-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_program_options-vc140.1.63.0.0\\build\\native\\boost_program_options-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_python-vc140.1.63.0.0\\build\\native\\boost_python-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_python-vc140.1.63.0.0\\build\\native\\boost_python-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_random-vc140.1.63.0.0\\build\\native\\boost_random-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_random-vc140.1.63.0.0\\build\\native\\boost_random-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_regex-vc140.1.63.0.0\\build\\native\\boost_regex-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_regex-vc140.1.63.0.0\\build\\native\\boost_regex-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_serialization-vc140.1.63.0.0\\build\\native\\boost_serialization-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_serialization-vc140.1.63.0.0\\build\\native\\boost_serialization-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_signals-vc140.1.63.0.0\\build\\native\\boost_signals-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_signals-vc140.1.63.0.0\\build\\native\\boost_signals-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_system-vc140.1.63.0.0\\build\\native\\boost_system-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_system-vc140.1.63.0.0\\build\\native\\boost_system-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_test_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_test_exec_monitor-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_test_exec_monitor-vc140.1.63.0.0\\build\\native\\boost_test_exec_monitor-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_thread-vc140.1.63.0.0\\build\\native\\boost_thread-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_thread-vc140.1.63.0.0\\build\\native\\boost_thread-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_timer-vc140.1.63.0.0\\build\\native\\boost_timer-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_timer-vc140.1.63.0.0\\build\\native\\boost_timer-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_type_erasure-vc140.1.63.0.0\\build\\native\\boost_type_erasure-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_type_erasure-vc140.1.63.0.0\\build\\native\\boost_type_erasure-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_unit_test_framework-vc140.1.63.0.0\\build\\native\\boost_unit_test_framework-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_unit_test_framework-vc140.1.63.0.0\\build\\native\\boost_unit_test_framework-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_wave-vc140.1.63.0.0\\build\\native\\boost_wave-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_wave-vc140.1.63.0.0\\build\\native\\boost_wave-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets'))\" />\n+  </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "4b27b23b7e5ff6cb9253430c4b668cb4d66796bd",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0106f96358af9fbfcd7f463d00ed160114b2a24c/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0106f96358af9fbfcd7f463d00ed160114b2a24c/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=0106f96358af9fbfcd7f463d00ed160114b2a24c",
        "patch": "@@ -19,4 +19,7 @@\n       <Filter>Source Files</Filter>\n     </ClCompile>\n   </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "5be26c275cea22af8f00862c07db1aeb86164046",
        "filename": "packages.config",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0106f96358af9fbfcd7f463d00ed160114b2a24c/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0106f96358af9fbfcd7f463d00ed160114b2a24c/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=0106f96358af9fbfcd7f463d00ed160114b2a24c",
        "patch": "@@ -0,0 +1,42 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<packages>\n+  <package id=\"boost\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_atomic-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_bzip2-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_chrono-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_container-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_context-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_coroutine-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_date_time-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_exception-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_fiber-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_filesystem-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_graph-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_iostreams-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_locale-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_log_setup-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_log-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_math_c99f-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_math_c99l-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_math_c99-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_math_tr1f-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_math_tr1l-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_math_tr1-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_prg_exec_monitor-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_program_options-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_python-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_random-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_regex-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_serialization-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_signals-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_system-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_test_exec_monitor-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_thread-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_timer-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_type_erasure-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_unit_test_framework-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_wave-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_wserialization-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost_zlib-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"boost-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+</packages>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "357987a4a27bed1eb64071ea9500d2c89b9b6c36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTc5ODdhNGEyN2JlZDFlYjY0MDcxZWE5NTAwZDJjODliOWI2YzM2",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T09:20:48Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T10:12:30Z"
      },
      "message": "not ignore files about autogen.sh and configure",
      "tree": {
        "sha": "d44f4eac86dc64ff92257b06271436342150f5c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d44f4eac86dc64ff92257b06271436342150f5c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/357987a4a27bed1eb64071ea9500d2c89b9b6c36",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/357987a4a27bed1eb64071ea9500d2c89b9b6c36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/357987a4a27bed1eb64071ea9500d2c89b9b6c36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/357987a4a27bed1eb64071ea9500d2c89b9b6c36/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0106f96358af9fbfcd7f463d00ed160114b2a24c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0106f96358af9fbfcd7f463d00ed160114b2a24c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0106f96358af9fbfcd7f463d00ed160114b2a24c"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 30,
      "deletions": 28
    },
    "files": [
      {
        "sha": "2af2e3631c1cd91fddf40a57f02e5ba39f297ba0",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 21,
        "deletions": 19,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/357987a4a27bed1eb64071ea9500d2c89b9b6c36/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/357987a4a27bed1eb64071ea9500d2c89b9b6c36/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=357987a4a27bed1eb64071ea9500d2c89b9b6c36",
        "patch": "@@ -10,7 +10,7 @@ src/test/test_bitcoin_fuzzy\n src/qt/test/test_bitcoin-qt\n \n # autoreconf\n-Makefile.in\n+# Makefile.in\n aclocal.m4\n autom4te.cache/\n build-aux/config.guess\n@@ -28,21 +28,21 @@ build-aux/compile\n build-aux/test-driver\n config.log\n config.status\n-configure\n+# configure\n libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n+# src/config/bitcoin-config.h\n+# src/config/bitcoin-config.h.in\n src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n \n-src/univalue/gen\n+# src/univalue/gen\n \n-src/qt/*.moc\n-src/qt/moc_*.cpp\n-src/qt/forms/ui_*.h\n+# src/qt/*.moc\n+# src/qt/moc_*.cpp\n+# src/qt/forms/ui_*.h\n \n-src/qt/test/moc*.cpp\n+# src/qt/test/moc*.cpp\n \n .deps\n .dirstamp\n@@ -58,32 +58,32 @@ src/qt/test/moc*.cpp\n *.patch\n *.a\n *.pb.cc\n-*.pb.h\n+# *.pb.h\n \n *.log\n *.trs\n *.dmg\n \n-*.json.h\n-*.raw.h\n+# *.json.h\n+# *.raw.h\n \n #libtool object files\n *.lo\n *.la\n \n # Compilation and Qt preprocessor part\n *.qm\n-Makefile\n+# Makefile\n bitcoin-qt\n Bitcoin-Qt.app\n \n # Unit-tests\n-Makefile.test\n+# Makefile.test\n bitcoin-qt_test\n src/test/buildenv.py\n \n # Resources cpp\n-qrc_*.cpp\n+# qrc_*.cpp\n \n # Mac specific\n .DS_Store\n@@ -113,6 +113,8 @@ contrib/devtools/split-debug.sh\n \n \n \n+autom4te.cache/*\n+\n ## -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ##\n ## Ignore Visual Studio temporary files, build results, and\n ## files generated by popular Visual Studio add-ons.\n@@ -155,15 +157,15 @@ TestResult.xml\n # Build Results of an ATL Project\n [Dd]ebugPS/\n [Rr]eleasePS/\n-dlldata.c\n+# dlldata.c\n \n # DNX\n project.lock.json\n artifacts/\n \n-*_i.c\n-*_p.c\n-*_i.h\n+# *_i.c\n+# *_p.c\n+# *_i.h\n *.ilk\n *.meta\n *.obj"
      },
      {
        "sha": "9d24d37d0411ffe933c953f9a94415601dc9ce6f",
        "filename": "src/secp256k1/.gitignore",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/357987a4a27bed1eb64071ea9500d2c89b9b6c36/src/secp256k1/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/357987a4a27bed1eb64071ea9500d2c89b9b6c36/src/secp256k1/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/.gitignore?ref=357987a4a27bed1eb64071ea9500d2c89b9b6c36",
        "patch": "@@ -13,10 +13,10 @@ gen_context\n *.a\n !.gitignore\n \n-Makefile\n-configure\n+# Makefile\n+# configure\n .libs/\n-Makefile.in\n+# Makefile.in\n aclocal.m4\n autom4te.cache/\n config.log\n@@ -29,9 +29,9 @@ libtool\n *.lo\n *.o\n *~\n-src/libsecp256k1-config.h\n-src/libsecp256k1-config.h.in\n-src/ecmult_static_context.h\n+# src/libsecp256k1-config.h\n+# src/libsecp256k1-config.h.in\n+# src/ecmult_static_context.h\n build-aux/config.guess\n build-aux/config.sub\n build-aux/depcomp"
      },
      {
        "sha": "db0f0a89ea3830d1cceec04eb6c7b487dd4dfe4e",
        "filename": "src/univalue/.gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/357987a4a27bed1eb64071ea9500d2c89b9b6c36/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/357987a4a27bed1eb64071ea9500d2c89b9b6c36/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=357987a4a27bed1eb64071ea9500d2c89b9b6c36",
        "patch": "@@ -1,7 +1,7 @@\n .deps/\n INSTALL\n-Makefile\n-Makefile.in\n+# Makefile\n+# Makefile.in\n aclocal.m4\n autom4te.cache/\n compile\n@@ -14,7 +14,7 @@ depcomp\n install-sh\n missing\n stamp-h1\n-univalue-config.h*\n+# univalue-config.h*\n test-driver\n libtool\n ltmain.sh"
      }
    ]
  },
  {
    "sha": "9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGI3NmMwNzQzZTMxY2RmMmVlMGI3MjRmMjc3MzhlNGRkYmJkZGFi",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T16:41:25Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T16:41:25Z"
      },
      "message": "cd depends; make HOST=i686-w64-mingw32b; cd ..; ./autogen.sh (Bash on Ubuntu on Windows)",
      "tree": {
        "sha": "1a2db2634352d0dc40dba2ed9d01e2c88ad14df4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a2db2634352d0dc40dba2ed9d01e2c88ad14df4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "357987a4a27bed1eb64071ea9500d2c89b9b6c36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/357987a4a27bed1eb64071ea9500d2c89b9b6c36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/357987a4a27bed1eb64071ea9500d2c89b9b6c36"
      }
    ],
    "stats": {
      "total": 64905,
      "additions": 64905,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5e88c7667e75e7e7300914ce6e12aeb064b1759b",
        "filename": "Makefile.in",
        "status": "added",
        "additions": 1244,
        "deletions": 0,
        "changes": 1244,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/Makefile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/Makefile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,1244 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+VPATH = @srcdir@\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+@ENABLE_MAN_TRUE@am__append_1 = doc/man\n+subdir = .\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(top_srcdir)/src/config/bitcoin-config.h.in \\\n+\t$(srcdir)/libbitcoinconsensus.pc.in \\\n+\t$(top_srcdir)/share/setup.nsi.in \\\n+\t$(top_srcdir)/share/qt/Info.plist.in \\\n+\t$(top_srcdir)/src/test/buildenv.py.in \\\n+\t$(top_srcdir)/qa/pull-tester/tests_config.py.in \\\n+\t$(top_srcdir)/contrib/devtools/split-debug.sh.in \\\n+\t$(top_srcdir)/qa/pull-tester/rpc-tests.py \\\n+\t$(dist_noinst_SCRIPTS) COPYING build-aux/compile \\\n+\tbuild-aux/config.guess build-aux/config.sub build-aux/depcomp \\\n+\tbuild-aux/install-sh build-aux/missing build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/compile \\\n+\t$(top_srcdir)/build-aux/config.guess \\\n+\t$(top_srcdir)/build-aux/config.sub \\\n+\t$(top_srcdir)/build-aux/install-sh \\\n+\t$(top_srcdir)/build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/missing\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_pthread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \\\n+\t$(top_srcdir)/build-aux/m4/l_atomic.m4 \\\n+\t$(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h\n+CONFIG_CLEAN_FILES = libbitcoinconsensus.pc share/setup.nsi \\\n+\tshare/qt/Info.plist src/test/buildenv.py \\\n+\tqa/pull-tester/tests_config.py contrib/devtools/split-debug.sh\n+CONFIG_CLEAN_VPATH_FILES = qa/pull-tester/rpc-tests.py\n+SCRIPTS = $(dist_noinst_SCRIPTS)\n+AM_V_P = $(am__v_P_@AM_V@)\n+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_@AM_V@)\n+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_@AM_V@)\n+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\n+am__v_at_0 = @\n+am__v_at_1 = \n+SOURCES =\n+DIST_SOURCES =\n+RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\\n+\tctags-recursive dvi-recursive html-recursive info-recursive \\\n+\tinstall-data-recursive install-dvi-recursive \\\n+\tinstall-exec-recursive install-html-recursive \\\n+\tinstall-info-recursive install-pdf-recursive \\\n+\tinstall-ps-recursive install-recursive installcheck-recursive \\\n+\tinstalldirs-recursive pdf-recursive ps-recursive \\\n+\ttags-recursive uninstall-recursive\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(pkgconfigdir)\"\n+DATA = $(pkgconfig_DATA)\n+RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n+  distclean-recursive maintainer-clean-recursive\n+am__recursive_targets = \\\n+  $(RECURSIVE_TARGETS) \\\n+  $(RECURSIVE_CLEAN_TARGETS) \\\n+  $(am__extra_recursive_targets)\n+AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\\n+\tcscope distdir dist dist-all distcheck\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+CSCOPE = cscope\n+DIST_SUBDIRS = src doc/man\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+am__remove_distdir = \\\n+  if test -d \"$(distdir)\"; then \\\n+    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n+      && rm -rf \"$(distdir)\" \\\n+      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n+  else :; fi\n+am__post_remove_distdir = $(am__remove_distdir)\n+am__relativize = \\\n+  dir0=`pwd`; \\\n+  sed_first='s,^\\([^/]*\\)/.*$$,\\1,'; \\\n+  sed_rest='s,^[^/]*/*,,'; \\\n+  sed_last='s,^.*/\\([^/]*\\)$$,\\1,'; \\\n+  sed_butlast='s,/*[^/]*$$,,'; \\\n+  while test -n \"$$dir1\"; do \\\n+    first=`echo \"$$dir1\" | sed -e \"$$sed_first\"`; \\\n+    if test \"$$first\" != \".\"; then \\\n+      if test \"$$first\" = \"..\"; then \\\n+        dir2=`echo \"$$dir0\" | sed -e \"$$sed_last\"`/\"$$dir2\"; \\\n+        dir0=`echo \"$$dir0\" | sed -e \"$$sed_butlast\"`; \\\n+      else \\\n+        first2=`echo \"$$dir2\" | sed -e \"$$sed_first\"`; \\\n+        if test \"$$first2\" = \"$$first\"; then \\\n+          dir2=`echo \"$$dir2\" | sed -e \"$$sed_rest\"`; \\\n+        else \\\n+          dir2=\"../$$dir2\"; \\\n+        fi; \\\n+        dir0=\"$$dir0\"/\"$$first\"; \\\n+      fi; \\\n+    fi; \\\n+    dir1=`echo \"$$dir1\" | sed -e \"$$sed_rest\"`; \\\n+  done; \\\n+  reldir=\"$$dir2\"\n+DIST_ARCHIVES = $(distdir).tar.gz\n+DIST_TARGETS = dist-gzip\n+distuninstallcheck_listfiles = find . -type f -print\n+am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n+  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\n+distcleancheck_listfiles = find . -type f -print\n+ACLOCAL = @ACLOCAL@\n+AMTAR = @AMTAR@\n+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n+AR = @AR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BDB_CFLAGS = @BDB_CFLAGS@\n+BDB_CPPFLAGS = @BDB_CPPFLAGS@\n+BDB_LIBS = @BDB_LIBS@\n+BITCOIN_CLI_NAME = @BITCOIN_CLI_NAME@\n+BITCOIN_DAEMON_NAME = @BITCOIN_DAEMON_NAME@\n+BITCOIN_GUI_NAME = @BITCOIN_GUI_NAME@\n+BITCOIN_TX_NAME = @BITCOIN_TX_NAME@\n+BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@\n+BOOST_CPPFLAGS = @BOOST_CPPFLAGS@\n+BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@\n+BOOST_LDFLAGS = @BOOST_LDFLAGS@\n+BOOST_LIBS = @BOOST_LIBS@\n+BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@\n+BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@\n+BOOST_THREAD_LIB = @BOOST_THREAD_LIB@\n+BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@\n+BREW = @BREW@\n+CC = @CC@\n+CCACHE = @CCACHE@\n+CCDEPMODE = @CCDEPMODE@\n+CFLAGS = @CFLAGS@\n+CLIENT_VERSION_BUILD = @CLIENT_VERSION_BUILD@\n+CLIENT_VERSION_IS_RELEASE = @CLIENT_VERSION_IS_RELEASE@\n+CLIENT_VERSION_MAJOR = @CLIENT_VERSION_MAJOR@\n+CLIENT_VERSION_MINOR = @CLIENT_VERSION_MINOR@\n+CLIENT_VERSION_REVISION = @CLIENT_VERSION_REVISION@\n+COPYRIGHT_HOLDERS = @COPYRIGHT_HOLDERS@\n+COPYRIGHT_HOLDERS_FINAL = @COPYRIGHT_HOLDERS_FINAL@\n+COPYRIGHT_HOLDERS_SUBSTITUTION = @COPYRIGHT_HOLDERS_SUBSTITUTION@\n+COPYRIGHT_YEAR = @COPYRIGHT_YEAR@\n+CPP = @CPP@\n+CPPFILT = @CPPFILT@\n+CPPFLAGS = @CPPFLAGS@\n+CRYPTO_CFLAGS = @CRYPTO_CFLAGS@\n+CRYPTO_LIBS = @CRYPTO_LIBS@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+DLLTOOL = @DLLTOOL@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EVENT_CFLAGS = @EVENT_CFLAGS@\n+EVENT_LIBS = @EVENT_LIBS@\n+EVENT_PTHREADS_CFLAGS = @EVENT_PTHREADS_CFLAGS@\n+EVENT_PTHREADS_LIBS = @EVENT_PTHREADS_LIBS@\n+EXEEXT = @EXEEXT@\n+EXTENDED_RPC_TESTS = @EXTENDED_RPC_TESTS@\n+FGREP = @FGREP@\n+GCOV = @GCOV@\n+GENHTML = @GENHTML@\n+GENISOIMAGE = @GENISOIMAGE@\n+GIT = @GIT@\n+GREP = @GREP@\n+HARDENED_CPPFLAGS = @HARDENED_CPPFLAGS@\n+HARDENED_CXXFLAGS = @HARDENED_CXXFLAGS@\n+HARDENED_LDFLAGS = @HARDENED_LDFLAGS@\n+HAVE_CXX11 = @HAVE_CXX11@\n+HEXDUMP = @HEXDUMP@\n+IMAGEMAGICK_CONVERT = @IMAGEMAGICK_CONVERT@\n+INSTALL = @INSTALL@\n+INSTALLNAMETOOL = @INSTALLNAMETOOL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LCOV = @LCOV@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LEVELDB_CPPFLAGS = @LEVELDB_CPPFLAGS@\n+LEVELDB_TARGET_FLAGS = @LEVELDB_TARGET_FLAGS@\n+LIBLEVELDB = @LIBLEVELDB@\n+LIBMEMENV = @LIBMEMENV@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIBTOOL_APP_LDFLAGS = @LIBTOOL_APP_LDFLAGS@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LRELEASE = @LRELEASE@\n+LTLIBOBJS = @LTLIBOBJS@\n+LUPDATE = @LUPDATE@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MAKENSIS = @MAKENSIS@\n+MANIFEST_TOOL = @MANIFEST_TOOL@\n+MINIUPNPC_CPPFLAGS = @MINIUPNPC_CPPFLAGS@\n+MINIUPNPC_LIBS = @MINIUPNPC_LIBS@\n+MKDIR_P = @MKDIR_P@\n+MOC = @MOC@\n+MOC_DEFS = @MOC_DEFS@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJCOPY = @OBJCOPY@\n+OBJCXX = @OBJCXX@\n+OBJCXXDEPMODE = @OBJCXXDEPMODE@\n+OBJCXXFLAGS = @OBJCXXFLAGS@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PIC_FLAGS = @PIC_FLAGS@\n+PIE_FLAGS = @PIE_FLAGS@\n+PKG_CONFIG = @PKG_CONFIG@\n+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@\n+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@\n+PORT = @PORT@\n+PROTOBUF_CFLAGS = @PROTOBUF_CFLAGS@\n+PROTOBUF_LIBS = @PROTOBUF_LIBS@\n+PROTOC = @PROTOC@\n+PTHREAD_CC = @PTHREAD_CC@\n+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@\n+PTHREAD_LIBS = @PTHREAD_LIBS@\n+PYTHON = @PYTHON@\n+PYTHONPATH = @PYTHONPATH@\n+QR_CFLAGS = @QR_CFLAGS@\n+QR_LIBS = @QR_LIBS@\n+QTPLATFORM_CFLAGS = @QTPLATFORM_CFLAGS@\n+QTPLATFORM_LIBS = @QTPLATFORM_LIBS@\n+QTPRINT_CFLAGS = @QTPRINT_CFLAGS@\n+QTPRINT_LIBS = @QTPRINT_LIBS@\n+QTXCBQPA_CFLAGS = @QTXCBQPA_CFLAGS@\n+QTXCBQPA_LIBS = @QTXCBQPA_LIBS@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_DBUS_CFLAGS = @QT_DBUS_CFLAGS@\n+QT_DBUS_INCLUDES = @QT_DBUS_INCLUDES@\n+QT_DBUS_LIBS = @QT_DBUS_LIBS@\n+QT_INCLUDES = @QT_INCLUDES@\n+QT_LDFLAGS = @QT_LDFLAGS@\n+QT_LIBS = @QT_LIBS@\n+QT_PIE_FLAGS = @QT_PIE_FLAGS@\n+QT_SELECT = @QT_SELECT@\n+QT_TEST_CFLAGS = @QT_TEST_CFLAGS@\n+QT_TEST_INCLUDES = @QT_TEST_INCLUDES@\n+QT_TEST_LIBS = @QT_TEST_LIBS@\n+QT_TRANSLATION_DIR = @QT_TRANSLATION_DIR@\n+RANLIB = @RANLIB@\n+RCC = @RCC@\n+READELF = @READELF@\n+RELDFLAGS = @RELDFLAGS@\n+RSVG_CONVERT = @RSVG_CONVERT@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+SSL_CFLAGS = @SSL_CFLAGS@\n+SSL_LIBS = @SSL_LIBS@\n+STRIP = @STRIP@\n+TESTDEFS = @TESTDEFS@\n+TIFFCP = @TIFFCP@\n+UIC = @UIC@\n+UNIVALUE_CFLAGS = @UNIVALUE_CFLAGS@\n+UNIVALUE_LIBS = @UNIVALUE_LIBS@\n+USE_QRCODE = @USE_QRCODE@\n+USE_UPNP = @USE_UPNP@\n+VERSION = @VERSION@\n+WINDOWS_BITS = @WINDOWS_BITS@\n+WINDRES = @WINDRES@\n+X11XCB_CFLAGS = @X11XCB_CFLAGS@\n+X11XCB_LIBS = @X11XCB_LIBS@\n+XGETTEXT = @XGETTEXT@\n+ZMQ_CFLAGS = @ZMQ_CFLAGS@\n+ZMQ_LIBS = @ZMQ_LIBS@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_ct_OBJCXX = @ac_ct_OBJCXX@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+ax_pthread_config = @ax_pthread_config@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+exec_prefix = @exec_prefix@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+subdirs = @subdirs@\n+sysconfdir = @sysconfdir@\n+target_alias = @target_alias@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+SUBDIRS = src $(am__append_1)\n+GZIP_ENV = \"-9n\"\n+@BUILD_BITCOIN_LIBS_TRUE@pkgconfigdir = $(libdir)/pkgconfig\n+@BUILD_BITCOIN_LIBS_TRUE@pkgconfig_DATA = libbitcoinconsensus.pc\n+BITCOIND_BIN = $(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN = $(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN = $(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n+BITCOIN_WIN_INSTALLER = $(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+empty := \n+space := $(empty) $(empty)\n+OSX_APP = Bitcoin-Qt.app\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG = background.svg\n+OSX_BACKGROUND_IMAGE = background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS = 36 72\n+OSX_DSSTORE_GEN = $(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n+OSX_DEPLOY_SCRIPT = $(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST = $(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_INSTALLER_ICONS = $(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST = $(top_builddir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n+DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n+\t       $(top_srcdir)/contrib/init \\\n+\t       $(top_srcdir)/contrib/rpm\n+\n+BIN_CHECKS = $(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n+\n+COVERAGE_INFO = baseline_filtered_combined.info baseline.info \\\n+  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info rpc_test.info rpc_test_filtered.info \\\n+  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+\n+OSX_APP_BUILT = $(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+\n+@BUILD_DARWIN_FALSE@APP_DIST_DIR = $(top_builddir)/dist\n+@BUILD_DARWIN_FALSE@APP_DIST_EXTRAS = $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+@BUILD_DARWIN_FALSE@OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+dist_noinst_SCRIPTS = autogen.sh\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+# This file is problematic for out-of-tree builds if it exists.\n+DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n+DISTCHECK_CONFIGURE_FLAGS = --enable-man\n+all: all-recursive\n+\n+.SUFFIXES:\n+am--refresh: Makefile\n+\t@:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+src/config/bitcoin-config.h: src/config/stamp-h1\n+\t@test -f $@ || rm -f src/config/stamp-h1\n+\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/config/stamp-h1\n+\n+src/config/stamp-h1: $(top_srcdir)/src/config/bitcoin-config.h.in $(top_builddir)/config.status\n+\t@rm -f src/config/stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status src/config/bitcoin-config.h\n+$(top_srcdir)/src/config/bitcoin-config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f src/config/stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f src/config/bitcoin-config.h src/config/stamp-h1\n+libbitcoinconsensus.pc: $(top_builddir)/config.status $(srcdir)/libbitcoinconsensus.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+share/setup.nsi: $(top_builddir)/config.status $(top_srcdir)/share/setup.nsi.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+share/qt/Info.plist: $(top_builddir)/config.status $(top_srcdir)/share/qt/Info.plist.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+src/test/buildenv.py: $(top_builddir)/config.status $(top_srcdir)/src/test/buildenv.py.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+qa/pull-tester/tests_config.py: $(top_builddir)/config.status $(top_srcdir)/qa/pull-tester/tests_config.py.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+contrib/devtools/split-debug.sh: $(top_builddir)/config.status $(top_srcdir)/contrib/devtools/split-debug.sh.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+install-pkgconfigDATA: $(pkgconfig_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-pkgconfigDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\n+\n+# This directory's subdirectories are mostly independent; you can cd\n+# into them and run 'make' without going through this Makefile.\n+# To change the values of 'make' variables: instead of editing Makefiles,\n+# (1) if the variable is set in 'config.status', edit 'config.status'\n+#     (which will cause the Makefiles to be regenerated when you run 'make');\n+# (2) otherwise, pass the desired values on the 'make' command line.\n+$(am__recursive_targets):\n+\t@fail=; \\\n+\tif $(am__make_keepgoing); then \\\n+\t  failcom='fail=yes'; \\\n+\telse \\\n+\t  failcom='exit 1'; \\\n+\tfi; \\\n+\tdot_seen=no; \\\n+\ttarget=`echo $@ | sed s/-recursive//`; \\\n+\tcase \"$@\" in \\\n+\t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n+\t  *) list='$(SUBDIRS)' ;; \\\n+\tesac; \\\n+\tfor subdir in $$list; do \\\n+\t  echo \"Making $$target in $$subdir\"; \\\n+\t  if test \"$$subdir\" = \".\"; then \\\n+\t    dot_seen=yes; \\\n+\t    local_target=\"$$target-am\"; \\\n+\t  else \\\n+\t    local_target=\"$$target\"; \\\n+\t  fi; \\\n+\t  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n+\t  || eval $$failcom; \\\n+\tdone; \\\n+\tif test \"$$dot_seen\" = \"no\"; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n+\tfi; test -z \"$$fail\"\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-recursive\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\tif ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \\\n+\t  include_option=--etags-include; \\\n+\t  empty_fix=.; \\\n+\telse \\\n+\t  include_option=--include; \\\n+\t  empty_fix=; \\\n+\tfi; \\\n+\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n+\t  if test \"$$subdir\" = .; then :; else \\\n+\t    test ! -f $$subdir/TAGS || \\\n+\t      set \"$$@\" \"$$include_option=$$here/$$subdir/TAGS\"; \\\n+\t  fi; \\\n+\tdone; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-recursive\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscope: cscope.files\n+\ttest ! -s cscope.files \\\n+\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\n+clean-cscope:\n+\t-rm -f cscope.files\n+cscope.files: clean-cscope cscopelist\n+cscopelist: cscopelist-recursive\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+distdir: $(DISTFILES)\n+\t$(am__remove_distdir)\n+\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\\n+\t  if test \"$$subdir\" = .; then :; else \\\n+\t    $(am__make_dryrun) \\\n+\t      || test -d \"$(distdir)/$$subdir\" \\\n+\t      || $(MKDIR_P) \"$(distdir)/$$subdir\" \\\n+\t      || exit 1; \\\n+\t    dir1=$$subdir; dir2=\"$(distdir)/$$subdir\"; \\\n+\t    $(am__relativize); \\\n+\t    new_distdir=$$reldir; \\\n+\t    dir1=$$subdir; dir2=\"$(top_distdir)\"; \\\n+\t    $(am__relativize); \\\n+\t    new_top_distdir=$$reldir; \\\n+\t    echo \" (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=\"$$new_top_distdir\" distdir=\"$$new_distdir\" \\\\\"; \\\n+\t    echo \"     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)\"; \\\n+\t    ($(am__cd) $$subdir && \\\n+\t      $(MAKE) $(AM_MAKEFLAGS) \\\n+\t        top_distdir=\"$$new_top_distdir\" \\\n+\t        distdir=\"$$new_distdir\" \\\n+\t\tam__remove_distdir=: \\\n+\t\tam__skip_length_check=: \\\n+\t\tam__skip_mode_fix=: \\\n+\t        distdir) \\\n+\t      || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t$(MAKE) $(AM_MAKEFLAGS) \\\n+\t  top_distdir=\"$(top_distdir)\" distdir=\"$(distdir)\" \\\n+\t  dist-hook\n+\t-test -n \"$(am__skip_mode_fix)\" \\\n+\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n+\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r \"$(distdir)\"\n+dist-gzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-bzip2: distdir\n+\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n+\t$(am__post_remove_distdir)\n+\n+dist-lzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n+\t$(am__post_remove_distdir)\n+\n+dist-xz: distdir\n+\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n+\t$(am__post_remove_distdir)\n+\n+dist-tarZ: distdir\n+\t@echo WARNING: \"Support for shar distribution archives is\" \\\n+\t               \"deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n+\t$(am__post_remove_distdir)\n+\n+dist-shar: distdir\n+\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n+\t\t       \"legacy program 'compress' is deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-zip: distdir\n+\t-rm -f $(distdir).zip\n+\tzip -rq $(distdir).zip $(distdir)\n+\t$(am__post_remove_distdir)\n+\n+dist dist-all:\n+\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n+\t$(am__post_remove_distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\tcase '$(DIST_ARCHIVES)' in \\\n+\t*.tar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n+\t*.tar.bz2*) \\\n+\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n+\t*.tar.lz*) \\\n+\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n+\t*.tar.xz*) \\\n+\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n+\t*.tar.Z*) \\\n+\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n+\t*.shar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\\n+\t*.zip*) \\\n+\t  unzip $(distdir).zip ;;\\\n+\tesac\n+\tchmod -R a-w $(distdir)\n+\tchmod u+w $(distdir)\n+\tmkdir $(distdir)/_build $(distdir)/_inst\n+\tchmod a-w $(distdir)\n+\ttest -d $(distdir)/_build || exit 0; \\\n+\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n+\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n+\t  && am__cwd=`pwd` \\\n+\t  && $(am__cd) $(distdir)/_build \\\n+\t  && ../configure \\\n+\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    --srcdir=.. --prefix=\"$$dc_install_base\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n+\t        distuninstallcheck \\\n+\t  && chmod -R a-w \"$$dc_install_base\" \\\n+\t  && ({ \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n+\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n+\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n+\t  && rm -rf \"$$dc_destdir\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n+\t  && rm -rf $(DIST_ARCHIVES) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n+\t  && cd \"$$am__cwd\" \\\n+\t  || exit 1\n+\t$(am__post_remove_distdir)\n+\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n+\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n+\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\n+distuninstallcheck:\n+\t@test -n '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: trying to run $@ with an empty' \\\n+\t       '$$(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n+\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n+\t        if test -n \"$(DESTDIR)\"; then \\\n+\t          echo \"  (check DESTDIR support)\"; \\\n+\t        fi ; \\\n+\t        $(distuninstallcheck_listfiles) ; \\\n+\t        exit 1; } >&2\n+distcleancheck: distclean\n+\t@if test '$(srcdir)' = . ; then \\\n+\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n+\t  exit 1 ; \\\n+\tfi\n+\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n+\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n+\t       $(distcleancheck_listfiles) ; \\\n+\t       exit 1; } >&2\n+check-am: all-am\n+check: check-recursive\n+all-am: Makefile $(SCRIPTS) $(DATA)\n+installdirs: installdirs-recursive\n+installdirs-am:\n+\tfor dir in \"$(DESTDIR)$(pkgconfigdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-recursive\n+install-exec: install-exec-recursive\n+install-data: install-data-recursive\n+uninstall: uninstall-recursive\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-recursive\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\n+clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-recursive\n+\n+clean-am: clean-generic clean-libtool clean-local mostlyclean-am\n+\n+distclean: distclean-recursive\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-generic distclean-hdr \\\n+\tdistclean-libtool distclean-tags\n+\n+dvi: dvi-recursive\n+\n+dvi-am:\n+\n+html: html-recursive\n+\n+html-am:\n+\n+info: info-recursive\n+\n+info-am:\n+\n+install-data-am: install-pkgconfigDATA\n+\n+install-dvi: install-dvi-recursive\n+\n+install-dvi-am:\n+\n+install-exec-am:\n+\n+install-html: install-html-recursive\n+\n+install-html-am:\n+\n+install-info: install-info-recursive\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-recursive\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-recursive\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-recursive\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-recursive\n+\n+mostlyclean-am: mostlyclean-generic mostlyclean-libtool\n+\n+pdf: pdf-recursive\n+\n+pdf-am:\n+\n+ps: ps-recursive\n+\n+ps-am:\n+\n+uninstall-am: uninstall-pkgconfigDATA\n+\n+.MAKE: $(am__recursive_targets) install-am install-strip\n+\n+.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \\\n+\tam--refresh check check-am clean clean-cscope clean-generic \\\n+\tclean-libtool clean-local cscope cscopelist-am ctags ctags-am \\\n+\tdist dist-all dist-bzip2 dist-gzip dist-hook dist-lzip \\\n+\tdist-shar dist-tarZ dist-xz dist-zip distcheck distclean \\\n+\tdistclean-generic distclean-hdr distclean-libtool \\\n+\tdistclean-tags distcleancheck distdir distuninstallcheck dvi \\\n+\tdvi-am html html-am info info-am install install-am \\\n+\tinstall-data install-data-am install-dvi install-dvi-am \\\n+\tinstall-exec install-exec-am install-html install-html-am \\\n+\tinstall-info install-info-am install-man install-pdf \\\n+\tinstall-pdf-am install-pkgconfigDATA install-ps install-ps-am \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tinstalldirs-am maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \\\n+\tps ps-am tags tags-am uninstall uninstall-am \\\n+\tuninstall-pkgconfigDATA\n+\n+.PHONY: deploy FORCE\n+export PYTHONPATH\n+\n+dist-hook:\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n+\t$(MKDIR_P) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n+\t  echo error: could not build $@\n+\t@echo built $@\n+\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@ \n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+\t$(MKDIR_P) $(@D)\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n+\t$(MKDIR_P) $(@D)\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n+\n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n+@BUILD_DARWIN_TRUE@$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n+@BUILD_DARWIN_TRUE@\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n+\n+@BUILD_DARWIN_TRUE@$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+@BUILD_DARWIN_TRUE@\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n+@BUILD_DARWIN_TRUE@$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+@BUILD_DARWIN_TRUE@\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n+@BUILD_DARWIN_TRUE@$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n+@BUILD_DARWIN_TRUE@\ttiffutil -cathidpicheck $^ -out $@\n+\n+@BUILD_DARWIN_TRUE@deploydir: $(OSX_DMG)\n+\n+@BUILD_DARWIN_FALSE@$(APP_DIST_DIR)/Applications:\n+@BUILD_DARWIN_FALSE@\t@rm -f $@\n+@BUILD_DARWIN_FALSE@\t@cd $(@D); $(LN_S) /Applications $(@F)\n+\n+@BUILD_DARWIN_FALSE@$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+\n+@BUILD_DARWIN_FALSE@$(OSX_DMG): $(APP_DIST_EXTRAS)\n+@BUILD_DARWIN_FALSE@\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\n+@BUILD_DARWIN_FALSE@dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+@BUILD_DARWIN_FALSE@\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+@BUILD_DARWIN_FALSE@$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n+@BUILD_DARWIN_FALSE@\t$(MKDIR_P) $(@D)\n+@BUILD_DARWIN_FALSE@\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+@BUILD_DARWIN_FALSE@$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+@BUILD_DARWIN_FALSE@\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n+\n+@BUILD_DARWIN_FALSE@$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+@BUILD_DARWIN_FALSE@\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\n+@BUILD_DARWIN_FALSE@deploydir: $(APP_DIST_EXTRAS)\n+\n+@TARGET_DARWIN_TRUE@appbundle: $(OSX_APP_BUILT)\n+@TARGET_DARWIN_TRUE@deploy: $(OSX_DMG)\n+@TARGET_WINDOWS_TRUE@deploy: $(BITCOIN_WIN_INSTALLER)\n+\n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+@USE_LCOV_TRUE@baseline.info:\n+@USE_LCOV_TRUE@\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+@USE_LCOV_TRUE@baseline_filtered.info: baseline.info\n+@USE_LCOV_TRUE@\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+@USE_LCOV_TRUE@leveldb_baseline.info: baseline_filtered.info\n+@USE_LCOV_TRUE@\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n+\n+@USE_LCOV_TRUE@leveldb_baseline_filtered.info: leveldb_baseline.info\n+@USE_LCOV_TRUE@\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+@USE_LCOV_TRUE@baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n+@USE_LCOV_TRUE@\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n+\n+@USE_LCOV_TRUE@test_bitcoin.info: baseline_filtered_combined.info\n+@USE_LCOV_TRUE@\t$(MAKE) -C src/ check\n+@USE_LCOV_TRUE@\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+@USE_LCOV_TRUE@\t$(LCOV) -z -d $(abs_builddir)/src\n+@USE_LCOV_TRUE@\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+@USE_LCOV_TRUE@test_bitcoin_filtered.info: test_bitcoin.info\n+@USE_LCOV_TRUE@\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+@USE_LCOV_TRUE@rpc_test.info: test_bitcoin_filtered.info\n+@USE_LCOV_TRUE@\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+@USE_LCOV_TRUE@\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+@USE_LCOV_TRUE@\t$(LCOV) -z -d $(abs_builddir)/src\n+@USE_LCOV_TRUE@\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+@USE_LCOV_TRUE@rpc_test_filtered.info: rpc_test.info\n+@USE_LCOV_TRUE@\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+@USE_LCOV_TRUE@test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n+@USE_LCOV_TRUE@\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+\n+@USE_LCOV_TRUE@total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info rpc_test_filtered.info\n+@USE_LCOV_TRUE@\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+@USE_LCOV_TRUE@test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+@USE_LCOV_TRUE@\t$(GENHTML) -s $< -o $(@D)\n+@USE_LCOV_TRUE@\t@touch $@\n+\n+@USE_LCOV_TRUE@total.coverage/.dirstamp: total_coverage.info\n+@USE_LCOV_TRUE@\t$(GENHTML) -s $< -o $(@D)\n+@USE_LCOV_TRUE@\t@touch $@\n+\n+@USE_LCOV_TRUE@cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+\n+.INTERMEDIATE: $(COVERAGE_INFO)\n+\n+clean-local:\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf qa/pull-tester/__pycache__\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "280901d95408c535026dfe1d18ec0dd143ddc441",
        "filename": "configure",
        "status": "added",
        "additions": 32722,
        "deletions": 0,
        "changes": 32722,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/configure",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/configure",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab"
      },
      {
        "sha": "7ab270034c0f84dad4ce4f56f4c7cb0104553e7b",
        "filename": "doc/man/Makefile.in",
        "status": "added",
        "additions": 647,
        "deletions": 0,
        "changes": 647,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/doc/man/Makefile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/doc/man/Makefile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,647 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+VPATH = @srcdir@\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+subdir = doc/man\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(dist_man1_MANS)\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_pthread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \\\n+\t$(top_srcdir)/build-aux/m4/l_atomic.m4 \\\n+\t$(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h\n+CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_VPATH_FILES =\n+AM_V_P = $(am__v_P_@AM_V@)\n+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_@AM_V@)\n+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_@AM_V@)\n+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\n+am__v_at_0 = @\n+am__v_at_1 = \n+SOURCES =\n+DIST_SOURCES =\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+man1dir = $(mandir)/man1\n+am__installdirs = \"$(DESTDIR)$(man1dir)\"\n+NROFF = nroff\n+MANS = $(dist_man1_MANS)\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+ACLOCAL = @ACLOCAL@\n+AMTAR = @AMTAR@\n+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n+AR = @AR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BDB_CFLAGS = @BDB_CFLAGS@\n+BDB_CPPFLAGS = @BDB_CPPFLAGS@\n+BDB_LIBS = @BDB_LIBS@\n+BITCOIN_CLI_NAME = @BITCOIN_CLI_NAME@\n+BITCOIN_DAEMON_NAME = @BITCOIN_DAEMON_NAME@\n+BITCOIN_GUI_NAME = @BITCOIN_GUI_NAME@\n+BITCOIN_TX_NAME = @BITCOIN_TX_NAME@\n+BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@\n+BOOST_CPPFLAGS = @BOOST_CPPFLAGS@\n+BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@\n+BOOST_LDFLAGS = @BOOST_LDFLAGS@\n+BOOST_LIBS = @BOOST_LIBS@\n+BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@\n+BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@\n+BOOST_THREAD_LIB = @BOOST_THREAD_LIB@\n+BOOST_UNIT_TEST_FRAMEWORK_LIB = @BOOST_UNIT_TEST_FRAMEWORK_LIB@\n+BREW = @BREW@\n+CC = @CC@\n+CCACHE = @CCACHE@\n+CCDEPMODE = @CCDEPMODE@\n+CFLAGS = @CFLAGS@\n+CLIENT_VERSION_BUILD = @CLIENT_VERSION_BUILD@\n+CLIENT_VERSION_IS_RELEASE = @CLIENT_VERSION_IS_RELEASE@\n+CLIENT_VERSION_MAJOR = @CLIENT_VERSION_MAJOR@\n+CLIENT_VERSION_MINOR = @CLIENT_VERSION_MINOR@\n+CLIENT_VERSION_REVISION = @CLIENT_VERSION_REVISION@\n+COPYRIGHT_HOLDERS = @COPYRIGHT_HOLDERS@\n+COPYRIGHT_HOLDERS_FINAL = @COPYRIGHT_HOLDERS_FINAL@\n+COPYRIGHT_HOLDERS_SUBSTITUTION = @COPYRIGHT_HOLDERS_SUBSTITUTION@\n+COPYRIGHT_YEAR = @COPYRIGHT_YEAR@\n+CPP = @CPP@\n+CPPFILT = @CPPFILT@\n+CPPFLAGS = @CPPFLAGS@\n+CRYPTO_CFLAGS = @CRYPTO_CFLAGS@\n+CRYPTO_LIBS = @CRYPTO_LIBS@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+DLLTOOL = @DLLTOOL@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EVENT_CFLAGS = @EVENT_CFLAGS@\n+EVENT_LIBS = @EVENT_LIBS@\n+EVENT_PTHREADS_CFLAGS = @EVENT_PTHREADS_CFLAGS@\n+EVENT_PTHREADS_LIBS = @EVENT_PTHREADS_LIBS@\n+EXEEXT = @EXEEXT@\n+EXTENDED_RPC_TESTS = @EXTENDED_RPC_TESTS@\n+FGREP = @FGREP@\n+GCOV = @GCOV@\n+GENHTML = @GENHTML@\n+GENISOIMAGE = @GENISOIMAGE@\n+GIT = @GIT@\n+GREP = @GREP@\n+HARDENED_CPPFLAGS = @HARDENED_CPPFLAGS@\n+HARDENED_CXXFLAGS = @HARDENED_CXXFLAGS@\n+HARDENED_LDFLAGS = @HARDENED_LDFLAGS@\n+HAVE_CXX11 = @HAVE_CXX11@\n+HEXDUMP = @HEXDUMP@\n+IMAGEMAGICK_CONVERT = @IMAGEMAGICK_CONVERT@\n+INSTALL = @INSTALL@\n+INSTALLNAMETOOL = @INSTALLNAMETOOL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LCOV = @LCOV@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LEVELDB_CPPFLAGS = @LEVELDB_CPPFLAGS@\n+LEVELDB_TARGET_FLAGS = @LEVELDB_TARGET_FLAGS@\n+LIBLEVELDB = @LIBLEVELDB@\n+LIBMEMENV = @LIBMEMENV@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIBTOOL_APP_LDFLAGS = @LIBTOOL_APP_LDFLAGS@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LRELEASE = @LRELEASE@\n+LTLIBOBJS = @LTLIBOBJS@\n+LUPDATE = @LUPDATE@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MAKENSIS = @MAKENSIS@\n+MANIFEST_TOOL = @MANIFEST_TOOL@\n+MINIUPNPC_CPPFLAGS = @MINIUPNPC_CPPFLAGS@\n+MINIUPNPC_LIBS = @MINIUPNPC_LIBS@\n+MKDIR_P = @MKDIR_P@\n+MOC = @MOC@\n+MOC_DEFS = @MOC_DEFS@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJCOPY = @OBJCOPY@\n+OBJCXX = @OBJCXX@\n+OBJCXXDEPMODE = @OBJCXXDEPMODE@\n+OBJCXXFLAGS = @OBJCXXFLAGS@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PIC_FLAGS = @PIC_FLAGS@\n+PIE_FLAGS = @PIE_FLAGS@\n+PKG_CONFIG = @PKG_CONFIG@\n+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@\n+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@\n+PORT = @PORT@\n+PROTOBUF_CFLAGS = @PROTOBUF_CFLAGS@\n+PROTOBUF_LIBS = @PROTOBUF_LIBS@\n+PROTOC = @PROTOC@\n+PTHREAD_CC = @PTHREAD_CC@\n+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@\n+PTHREAD_LIBS = @PTHREAD_LIBS@\n+PYTHON = @PYTHON@\n+PYTHONPATH = @PYTHONPATH@\n+QR_CFLAGS = @QR_CFLAGS@\n+QR_LIBS = @QR_LIBS@\n+QTPLATFORM_CFLAGS = @QTPLATFORM_CFLAGS@\n+QTPLATFORM_LIBS = @QTPLATFORM_LIBS@\n+QTPRINT_CFLAGS = @QTPRINT_CFLAGS@\n+QTPRINT_LIBS = @QTPRINT_LIBS@\n+QTXCBQPA_CFLAGS = @QTXCBQPA_CFLAGS@\n+QTXCBQPA_LIBS = @QTXCBQPA_LIBS@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_DBUS_CFLAGS = @QT_DBUS_CFLAGS@\n+QT_DBUS_INCLUDES = @QT_DBUS_INCLUDES@\n+QT_DBUS_LIBS = @QT_DBUS_LIBS@\n+QT_INCLUDES = @QT_INCLUDES@\n+QT_LDFLAGS = @QT_LDFLAGS@\n+QT_LIBS = @QT_LIBS@\n+QT_PIE_FLAGS = @QT_PIE_FLAGS@\n+QT_SELECT = @QT_SELECT@\n+QT_TEST_CFLAGS = @QT_TEST_CFLAGS@\n+QT_TEST_INCLUDES = @QT_TEST_INCLUDES@\n+QT_TEST_LIBS = @QT_TEST_LIBS@\n+QT_TRANSLATION_DIR = @QT_TRANSLATION_DIR@\n+RANLIB = @RANLIB@\n+RCC = @RCC@\n+READELF = @READELF@\n+RELDFLAGS = @RELDFLAGS@\n+RSVG_CONVERT = @RSVG_CONVERT@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+SSL_CFLAGS = @SSL_CFLAGS@\n+SSL_LIBS = @SSL_LIBS@\n+STRIP = @STRIP@\n+TESTDEFS = @TESTDEFS@\n+TIFFCP = @TIFFCP@\n+UIC = @UIC@\n+UNIVALUE_CFLAGS = @UNIVALUE_CFLAGS@\n+UNIVALUE_LIBS = @UNIVALUE_LIBS@\n+USE_QRCODE = @USE_QRCODE@\n+USE_UPNP = @USE_UPNP@\n+VERSION = @VERSION@\n+WINDOWS_BITS = @WINDOWS_BITS@\n+WINDRES = @WINDRES@\n+X11XCB_CFLAGS = @X11XCB_CFLAGS@\n+X11XCB_LIBS = @X11XCB_LIBS@\n+XGETTEXT = @XGETTEXT@\n+ZMQ_CFLAGS = @ZMQ_CFLAGS@\n+ZMQ_LIBS = @ZMQ_LIBS@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_ct_OBJCXX = @ac_ct_OBJCXX@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+ax_pthread_config = @ax_pthread_config@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+exec_prefix = @exec_prefix@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+subdirs = @subdirs@\n+sysconfdir = @sysconfdir@\n+target_alias = @target_alias@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+dist_man1_MANS = bitcoind.1 bitcoin-qt.1 bitcoin-cli.1 bitcoin-tx.1\n+all: all-am\n+\n+.SUFFIXES:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n+\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign doc/man/Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign doc/man/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(am__aclocal_m4_deps):\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+install-man1: $(dist_man1_MANS)\n+\t@$(NORMAL_INSTALL)\n+\t@list1='$(dist_man1_MANS)'; \\\n+\tlist2=''; \\\n+\ttest -n \"$(man1dir)\" \\\n+\t  && test -n \"`echo $$list1$$list2`\" \\\n+\t  || exit 0; \\\n+\techo \" $(MKDIR_P) '$(DESTDIR)$(man1dir)'\"; \\\n+\t$(MKDIR_P) \"$(DESTDIR)$(man1dir)\" || exit 1; \\\n+\t{ for i in $$list1; do echo \"$$i\"; done;  \\\n+\tif test -n \"$$list2\"; then \\\n+\t  for i in $$list2; do echo \"$$i\"; done \\\n+\t    | sed -n '/\\.1[a-z]*$$/p'; \\\n+\tfi; \\\n+\t} | while read p; do \\\n+\t  if test -f $$p; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; echo \"$$p\"; \\\n+\tdone | \\\n+\tsed -e 'n;s,.*/,,;p;h;s,.*\\.,,;s,^[^1][0-9a-z]*$$,1,;x' \\\n+\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,' | \\\n+\tsed 'N;N;s,\\n, ,g' | { \\\n+\tlist=; while read file base inst; do \\\n+\t  if test \"$$base\" = \"$$inst\"; then list=\"$$list $$file\"; else \\\n+\t    echo \" $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'\"; \\\n+\t    $(INSTALL_DATA) \"$$file\" \"$(DESTDIR)$(man1dir)/$$inst\" || exit $$?; \\\n+\t  fi; \\\n+\tdone; \\\n+\tfor i in $$list; do echo \"$$i\"; done | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  test -z \"$$files\" || { \\\n+\t    echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'\"; \\\n+\t    $(INSTALL_DATA) $$files \"$(DESTDIR)$(man1dir)\" || exit $$?; }; \\\n+\tdone; }\n+\n+uninstall-man1:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(dist_man1_MANS)'; test -n \"$(man1dir)\" || exit 0; \\\n+\tfiles=`{ for i in $$list; do echo \"$$i\"; done; \\\n+\t} | sed -e 's,.*/,,;h;s,.*\\.,,;s,^[^1][0-9a-z]*$$,1,;x' \\\n+\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,'`; \\\n+\tdir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)\n+tags TAGS:\n+\n+ctags CTAGS:\n+\n+cscope cscopelist:\n+\n+\n+distdir: $(DISTFILES)\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(MANS)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(man1dir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-generic\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-man\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am:\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man: install-man1\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-generic mostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-man\n+\n+uninstall-man: uninstall-man1\n+\n+.MAKE: install-am install-strip\n+\n+.PHONY: all all-am check check-am clean clean-generic clean-libtool \\\n+\tcscopelist-am ctags-am distclean distclean-generic \\\n+\tdistclean-libtool distdir dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-data install-data-am install-dvi \\\n+\tinstall-dvi-am install-exec install-exec-am install-html \\\n+\tinstall-html-am install-info install-info-am install-man \\\n+\tinstall-man1 install-pdf install-pdf-am install-ps \\\n+\tinstall-ps-am install-strip installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \\\n+\tps ps-am tags-am uninstall uninstall-am uninstall-man \\\n+\tuninstall-man1\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "eefd43305417254ec563575f9511f0645395ff94",
        "filename": "src/Makefile.in",
        "status": "added",
        "additions": 9537,
        "deletions": 0,
        "changes": 9537,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/Makefile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/Makefile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab"
      },
      {
        "sha": "e7d53e0058ec9f0deb217d209969e7404c36cb3c",
        "filename": "src/config/bitcoin-config.h.in",
        "status": "added",
        "additions": 385,
        "deletions": 0,
        "changes": 385,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/config/bitcoin-config.h.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/config/bitcoin-config.h.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/config/bitcoin-config.h.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,385 @@\n+/* src/config/bitcoin-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+#ifndef BITCOIN_CONFIG_H\n+\n+#define BITCOIN_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+#undef AC_APPLE_UNIVERSAL_BUILD\n+\n+/* Version Build */\n+#undef CLIENT_VERSION_BUILD\n+\n+/* Version is release */\n+#undef CLIENT_VERSION_IS_RELEASE\n+\n+/* Major version */\n+#undef CLIENT_VERSION_MAJOR\n+\n+/* Minor version */\n+#undef CLIENT_VERSION_MINOR\n+\n+/* Build revision */\n+#undef CLIENT_VERSION_REVISION\n+\n+/* Copyright holder(s) before %s replacement */\n+#undef COPYRIGHT_HOLDERS\n+\n+/* Copyright holder(s) */\n+#undef COPYRIGHT_HOLDERS_FINAL\n+\n+/* Replacement for %s in copyright holders string */\n+#undef COPYRIGHT_HOLDERS_SUBSTITUTION\n+\n+/* Copyright year */\n+#undef COPYRIGHT_YEAR\n+\n+/* Define to 1 to enable wallet functions */\n+#undef ENABLE_WALLET\n+\n+/* Define to 1 to enable ZMQ functions */\n+#undef ENABLE_ZMQ\n+\n+/* parameter and return value type for __fdelt_chk */\n+#undef FDELT_TYPE\n+\n+/* define if the Boost library is available */\n+#undef HAVE_BOOST\n+\n+/* define if the Boost::Chrono library is available */\n+#undef HAVE_BOOST_CHRONO\n+\n+/* define if the Boost::Filesystem library is available */\n+#undef HAVE_BOOST_FILESYSTEM\n+\n+/* define if the Boost::PROGRAM_OPTIONS library is available */\n+#undef HAVE_BOOST_PROGRAM_OPTIONS\n+\n+/* define if the Boost::System library is available */\n+#undef HAVE_BOOST_SYSTEM\n+\n+/* define if the Boost::Thread library is available */\n+#undef HAVE_BOOST_THREAD\n+\n+/* define if the Boost::Unit_Test_Framework library is available */\n+#undef HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+\n+/* Define to 1 if you have the <byteswap.h> header file. */\n+#undef HAVE_BYTESWAP_H\n+\n+/* Define this symbol if the consensus lib has been built */\n+#undef HAVE_CONSENSUS_LIB\n+\n+/* define if the compiler supports basic C++11 syntax */\n+#undef HAVE_CXX11\n+\n+/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BE16TOH\n+\n+/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BE32TOH\n+\n+/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BE64TOH\n+\n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_16\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_32\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_BSWAP_64\n+\n+/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+   */\n+#undef HAVE_DECL_DAEMON\n+\n+/* Define to 1 if you have the declaration of `EVP_MD_CTX_new', and to 0 if\n+   you don't. */\n+#undef HAVE_DECL_EVP_MD_CTX_NEW\n+\n+/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_HTOBE16\n+\n+/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_HTOBE32\n+\n+/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_HTOBE64\n+\n+/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_HTOLE16\n+\n+/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_HTOLE32\n+\n+/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_HTOLE64\n+\n+/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_LE16TOH\n+\n+/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_LE32TOH\n+\n+/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_LE64TOH\n+\n+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_STRERROR_R\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_STRNLEN\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#undef HAVE_DLFCN_H\n+\n+/* Define to 1 if you have the <endian.h> header file. */\n+#undef HAVE_ENDIAN_H\n+\n+/* Define to 1 if the system has the `dllexport' function attribute */\n+#undef HAVE_FUNC_ATTRIBUTE_DLLEXPORT\n+\n+/* Define to 1 if the system has the `dllimport' function attribute */\n+#undef HAVE_FUNC_ATTRIBUTE_DLLIMPORT\n+\n+/* Define to 1 if the system has the `visibility' function attribute */\n+#undef HAVE_FUNC_ATTRIBUTE_VISIBILITY\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have the `advapi32' library (-ladvapi32). */\n+#undef HAVE_LIBADVAPI32\n+\n+/* Define to 1 if you have the `comctl32' library (-lcomctl32). */\n+#undef HAVE_LIBCOMCTL32\n+\n+/* Define to 1 if you have the `comdlg32' library (-lcomdlg32). */\n+#undef HAVE_LIBCOMDLG32\n+\n+/* Define to 1 if you have the `crypt32' library (-lcrypt32). */\n+#undef HAVE_LIBCRYPT32\n+\n+/* Define to 1 if you have the `gdi32' library (-lgdi32). */\n+#undef HAVE_LIBGDI32\n+\n+/* Define to 1 if you have the `imm32' library (-limm32). */\n+#undef HAVE_LIBIMM32\n+\n+/* Define to 1 if you have the `iphlpapi' library (-liphlpapi). */\n+#undef HAVE_LIBIPHLPAPI\n+\n+/* Define to 1 if you have the `kernel32' library (-lkernel32). */\n+#undef HAVE_LIBKERNEL32\n+\n+/* Define to 1 if you have the `mingwthrd' library (-lmingwthrd). */\n+#undef HAVE_LIBMINGWTHRD\n+\n+/* Define to 1 if you have the `mswsock' library (-lmswsock). */\n+#undef HAVE_LIBMSWSOCK\n+\n+/* Define to 1 if you have the `ole32' library (-lole32). */\n+#undef HAVE_LIBOLE32\n+\n+/* Define to 1 if you have the `oleaut32' library (-loleaut32). */\n+#undef HAVE_LIBOLEAUT32\n+\n+/* Define to 1 if you have the `rpcrt4' library (-lrpcrt4). */\n+#undef HAVE_LIBRPCRT4\n+\n+/* Define to 1 if you have the `rt' library (-lrt). */\n+#undef HAVE_LIBRT\n+\n+/* Define to 1 if you have the `shell32' library (-lshell32). */\n+#undef HAVE_LIBSHELL32\n+\n+/* Define to 1 if you have the `shlwapi' library (-lshlwapi). */\n+#undef HAVE_LIBSHLWAPI\n+\n+/* Define to 1 if you have the `ssp' library (-lssp). */\n+#undef HAVE_LIBSSP\n+\n+/* Define to 1 if you have the `user32' library (-luser32). */\n+#undef HAVE_LIBUSER32\n+\n+/* Define to 1 if you have the `uuid' library (-luuid). */\n+#undef HAVE_LIBUUID\n+\n+/* Define to 1 if you have the `winmm' library (-lwinmm). */\n+#undef HAVE_LIBWINMM\n+\n+/* Define to 1 if you have the `winspool' library (-lwinspool). */\n+#undef HAVE_LIBWINSPOOL\n+\n+/* Define to 1 if you have the `ws2_32' library (-lws2_32). */\n+#undef HAVE_LIBWS2_32\n+\n+/* Define to 1 if you have the `z ' library (-lz ). */\n+#undef HAVE_LIBZ_\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n+#undef HAVE_MINIUPNPC_MINIUPNPC_H\n+\n+/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n+#undef HAVE_MINIUPNPC_MINIWGET_H\n+\n+/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n+#undef HAVE_MINIUPNPC_UPNPCOMMANDS_H\n+\n+/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n+#undef HAVE_MINIUPNPC_UPNPERRORS_H\n+\n+/* Define this symbol if you have MSG_NOSIGNAL */\n+#undef HAVE_MSG_NOSIGNAL\n+\n+/* Define if you have POSIX threads libraries and header files. */\n+#undef HAVE_PTHREAD\n+\n+/* Have PTHREAD_PRIO_INHERIT. */\n+#undef HAVE_PTHREAD_PRIO_INHERIT\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#undef HAVE_STDIO_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the `strerror_r' function. */\n+#undef HAVE_STRERROR_R\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/endian.h> header file. */\n+#undef HAVE_SYS_ENDIAN_H\n+\n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+#undef HAVE_SYS_PRCTL_H\n+\n+/* Define to 1 if you have the <sys/select.h> header file. */\n+#undef HAVE_SYS_SELECT_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define if the visibility attribute is supported. */\n+#undef HAVE_VISIBILITY_ATTRIBUTE\n+\n+/* Define this symbol if boost sleep works */\n+#undef HAVE_WORKING_BOOST_SLEEP\n+\n+/* Define this symbol if boost sleep_for works */\n+#undef HAVE_WORKING_BOOST_SLEEP_FOR\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#undef LT_OBJDIR\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+#undef PTHREAD_CREATE_JOINABLE\n+\n+/* Define this symbol if the qt platform is cocoa */\n+#undef QT_QPA_PLATFORM_COCOA\n+\n+/* Define this symbol if the qt platform is windows */\n+#undef QT_QPA_PLATFORM_WINDOWS\n+\n+/* Define this symbol if the qt platform is xcb */\n+#undef QT_QPA_PLATFORM_XCB\n+\n+/* Define this symbol if qt plugins are static */\n+#undef QT_STATICPLUGIN\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Define to 1 if strerror_r returns char *. */\n+#undef STRERROR_R_CHAR_P\n+\n+/* Define if dbus support should be compiled in */\n+#undef USE_DBUS\n+\n+/* Define if QR support should be compiled in */\n+#undef USE_QRCODE\n+\n+/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n+   default state */\n+#undef USE_UPNP\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+#  undef WORDS_BIGENDIAN\n+# endif\n+#endif\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#undef _FILE_OFFSET_BITS\n+\n+/* Define for large files, on AIX-style hosts. */\n+#undef _LARGE_FILES\n+\n+#endif //BITCOIN_CONFIG_H"
      },
      {
        "sha": "bb843806cecc5997871c33d12d3f33b35a13a57f",
        "filename": "src/secp256k1/Makefile.in",
        "status": "added",
        "additions": 1684,
        "deletions": 0,
        "changes": 1684,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/secp256k1/Makefile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/secp256k1/Makefile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/Makefile.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,1684 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+\n+\n+\n+VPATH = @srcdir@\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n+\t$(am__EXEEXT_4) $(am__EXEEXT_5)\n+@USE_BENCHMARK_TRUE@am__append_1 = bench_verify bench_sign bench_internal\n+TESTS = $(am__EXEEXT_2) $(am__EXEEXT_3)\n+@USE_TESTS_TRUE@am__append_2 = tests\n+@USE_TESTS_TRUE@am__append_3 = tests\n+@USE_EXHAUSTIVE_TESTS_TRUE@am__append_4 = exhaustive_tests\n+@USE_EXHAUSTIVE_TESTS_TRUE@am__append_5 = exhaustive_tests\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@am__append_6 = -I$(top_srcdir)\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@am__append_7 = -Wall -Wextra -Wno-unused-function\n+DIST_COMMON = $(srcdir)/src/modules/ecdh/Makefile.am.include \\\n+\t$(srcdir)/src/modules/recovery/Makefile.am.include \\\n+\t$(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(top_srcdir)/src/libsecp256k1-config.h.in \\\n+\t$(srcdir)/libsecp256k1.pc.in $(top_srcdir)/build-aux/depcomp \\\n+\t$(am__include_HEADERS_DIST) $(am__noinst_HEADERS_DIST) \\\n+\t$(top_srcdir)/build-aux/test-driver COPYING TODO \\\n+\tbuild-aux/compile build-aux/config.guess build-aux/config.sub \\\n+\tbuild-aux/depcomp build-aux/install-sh build-aux/missing \\\n+\tbuild-aux/ltmain.sh $(top_srcdir)/build-aux/compile \\\n+\t$(top_srcdir)/build-aux/config.guess \\\n+\t$(top_srcdir)/build-aux/config.sub \\\n+\t$(top_srcdir)/build-aux/install-sh \\\n+\t$(top_srcdir)/build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/missing\n+@ENABLE_MODULE_ECDH_TRUE@am__append_8 = include/secp256k1_ecdh.h\n+@ENABLE_MODULE_ECDH_TRUE@am__append_9 = src/modules/ecdh/main_impl.h \\\n+@ENABLE_MODULE_ECDH_TRUE@\tsrc/modules/ecdh/tests_impl.h\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@am__append_10 = bench_ecdh\n+@ENABLE_MODULE_RECOVERY_TRUE@am__append_11 = include/secp256k1_recovery.h\n+@ENABLE_MODULE_RECOVERY_TRUE@am__append_12 =  \\\n+@ENABLE_MODULE_RECOVERY_TRUE@\tsrc/modules/recovery/main_impl.h \\\n+@ENABLE_MODULE_RECOVERY_TRUE@\tsrc/modules/recovery/tests_impl.h\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@am__append_13 = bench_recover\n+subdir = .\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps =  \\\n+\t$(top_srcdir)/build-aux/m4/ax_jni_include_dir.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_prog_cc_for_build.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_secp.m4 \\\n+\t$(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = $(top_builddir)/src/libsecp256k1-config.h\n+CONFIG_CLEAN_FILES = libsecp256k1.pc\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \\\n+\t\"$(DESTDIR)$(includedir)\"\n+LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)\n+@USE_JNI_TRUE@am__DEPENDENCIES_1 = libsecp256k1_jni.la\n+am__DEPENDENCIES_2 =\n+@USE_EXTERNAL_ASM_TRUE@am__DEPENDENCIES_3 = libsecp256k1_common.la\n+libsecp256k1_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\\n+\t$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)\n+am__dirstamp = $(am__leading_dot)dirstamp\n+am_libsecp256k1_la_OBJECTS = src/libsecp256k1_la-secp256k1.lo\n+libsecp256k1_la_OBJECTS = $(am_libsecp256k1_la_OBJECTS)\n+AM_V_lt = $(am__v_lt_@AM_V@)\n+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n+am__v_lt_0 = --silent\n+am__v_lt_1 = \n+libsecp256k1_common_la_LIBADD =\n+am__libsecp256k1_common_la_SOURCES_DIST = src/asm/field_10x26_arm.s\n+@USE_ASM_ARM_TRUE@@USE_EXTERNAL_ASM_TRUE@am_libsecp256k1_common_la_OBJECTS = src/asm/field_10x26_arm.lo\n+libsecp256k1_common_la_OBJECTS = $(am_libsecp256k1_common_la_OBJECTS)\n+@USE_EXTERNAL_ASM_TRUE@am_libsecp256k1_common_la_rpath =\n+libsecp256k1_jni_la_LIBADD =\n+am_libsecp256k1_jni_la_OBJECTS =  \\\n+\tsrc/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo \\\n+\tsrc/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo\n+libsecp256k1_jni_la_OBJECTS = $(am_libsecp256k1_jni_la_OBJECTS)\n+@USE_JNI_TRUE@am_libsecp256k1_jni_la_rpath =\n+@USE_BENCHMARK_TRUE@am__EXEEXT_1 = bench_verify$(EXEEXT) \\\n+@USE_BENCHMARK_TRUE@\tbench_sign$(EXEEXT) \\\n+@USE_BENCHMARK_TRUE@\tbench_internal$(EXEEXT)\n+@USE_TESTS_TRUE@am__EXEEXT_2 = tests$(EXEEXT)\n+@USE_EXHAUSTIVE_TESTS_TRUE@am__EXEEXT_3 = exhaustive_tests$(EXEEXT)\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@am__EXEEXT_4 = bench_ecdh$(EXEEXT)\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@am__EXEEXT_5 = bench_recover$(EXEEXT)\n+PROGRAMS = $(noinst_PROGRAMS)\n+am__bench_ecdh_SOURCES_DIST = src/bench_ecdh.c\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@am_bench_ecdh_OBJECTS = src/bench_ecdh.$(OBJEXT)\n+bench_ecdh_OBJECTS = $(am_bench_ecdh_OBJECTS)\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@bench_ecdh_DEPENDENCIES =  \\\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@\tlibsecp256k1.la \\\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_3)\n+am__bench_internal_SOURCES_DIST = src/bench_internal.c\n+@USE_BENCHMARK_TRUE@am_bench_internal_OBJECTS = src/bench_internal-bench_internal.$(OBJEXT)\n+bench_internal_OBJECTS = $(am_bench_internal_OBJECTS)\n+@USE_BENCHMARK_TRUE@bench_internal_DEPENDENCIES =  \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_3)\n+am__bench_recover_SOURCES_DIST = src/bench_recover.c\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@am_bench_recover_OBJECTS = src/bench_recover.$(OBJEXT)\n+bench_recover_OBJECTS = $(am_bench_recover_OBJECTS)\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@bench_recover_DEPENDENCIES = libsecp256k1.la \\\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_3)\n+am__bench_sign_SOURCES_DIST = src/bench_sign.c\n+@USE_BENCHMARK_TRUE@am_bench_sign_OBJECTS = src/bench_sign.$(OBJEXT)\n+bench_sign_OBJECTS = $(am_bench_sign_OBJECTS)\n+@USE_BENCHMARK_TRUE@bench_sign_DEPENDENCIES = libsecp256k1.la \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_3)\n+am__bench_verify_SOURCES_DIST = src/bench_verify.c\n+@USE_BENCHMARK_TRUE@am_bench_verify_OBJECTS =  \\\n+@USE_BENCHMARK_TRUE@\tsrc/bench_verify.$(OBJEXT)\n+bench_verify_OBJECTS = $(am_bench_verify_OBJECTS)\n+@USE_BENCHMARK_TRUE@bench_verify_DEPENDENCIES = libsecp256k1.la \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_2) \\\n+@USE_BENCHMARK_TRUE@\t$(am__DEPENDENCIES_3)\n+am__exhaustive_tests_SOURCES_DIST = src/tests_exhaustive.c\n+@USE_EXHAUSTIVE_TESTS_TRUE@am_exhaustive_tests_OBJECTS = src/exhaustive_tests-tests_exhaustive.$(OBJEXT)\n+exhaustive_tests_OBJECTS = $(am_exhaustive_tests_OBJECTS)\n+@USE_EXHAUSTIVE_TESTS_TRUE@exhaustive_tests_DEPENDENCIES =  \\\n+@USE_EXHAUSTIVE_TESTS_TRUE@\t$(am__DEPENDENCIES_2)\n+exhaustive_tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n+\t$(AM_CFLAGS) $(CFLAGS) $(exhaustive_tests_LDFLAGS) $(LDFLAGS) \\\n+\t-o $@\n+am__tests_SOURCES_DIST = src/tests.c\n+@USE_TESTS_TRUE@am_tests_OBJECTS = src/tests-tests.$(OBJEXT)\n+tests_OBJECTS = $(am_tests_OBJECTS)\n+@USE_TESTS_TRUE@tests_DEPENDENCIES = $(am__DEPENDENCIES_2) \\\n+@USE_TESTS_TRUE@\t$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)\n+tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(tests_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_P = $(am__v_P_@AM_V@)\n+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_@AM_V@)\n+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_@AM_V@)\n+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\n+am__v_at_0 = @\n+am__v_at_1 = \n+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src\n+depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp\n+am__depfiles_maybe = depfiles\n+am__mv = mv -f\n+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n+\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+\t$(AM_CFLAGS) $(CFLAGS)\n+AM_V_CC = $(am__v_CC_@AM_V@)\n+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)\n+am__v_CC_0 = @echo \"  CC      \" $@;\n+am__v_CC_1 = \n+CCLD = $(CC)\n+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_CCLD = $(am__v_CCLD_@AM_V@)\n+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\n+am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n+am__v_CCLD_1 = \n+CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)\n+LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \\\n+\t$(CCASFLAGS)\n+AM_V_CCAS = $(am__v_CCAS_@AM_V@)\n+am__v_CCAS_ = $(am__v_CCAS_@AM_DEFAULT_V@)\n+am__v_CCAS_0 = @echo \"  CCAS    \" $@;\n+am__v_CCAS_1 = \n+SOURCES = $(libsecp256k1_la_SOURCES) $(libsecp256k1_common_la_SOURCES) \\\n+\t$(libsecp256k1_jni_la_SOURCES) $(bench_ecdh_SOURCES) \\\n+\t$(bench_internal_SOURCES) $(bench_recover_SOURCES) \\\n+\t$(bench_sign_SOURCES) $(bench_verify_SOURCES) \\\n+\t$(exhaustive_tests_SOURCES) $(tests_SOURCES)\n+DIST_SOURCES = $(libsecp256k1_la_SOURCES) \\\n+\t$(am__libsecp256k1_common_la_SOURCES_DIST) \\\n+\t$(libsecp256k1_jni_la_SOURCES) $(am__bench_ecdh_SOURCES_DIST) \\\n+\t$(am__bench_internal_SOURCES_DIST) \\\n+\t$(am__bench_recover_SOURCES_DIST) \\\n+\t$(am__bench_sign_SOURCES_DIST) \\\n+\t$(am__bench_verify_SOURCES_DIST) \\\n+\t$(am__exhaustive_tests_SOURCES_DIST) $(am__tests_SOURCES_DIST)\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+DATA = $(pkgconfig_DATA)\n+am__include_HEADERS_DIST = include/secp256k1.h \\\n+\tinclude/secp256k1_ecdh.h include/secp256k1_recovery.h\n+am__noinst_HEADERS_DIST = src/scalar.h src/scalar_4x64.h \\\n+\tsrc/scalar_8x32.h src/scalar_low.h src/scalar_impl.h \\\n+\tsrc/scalar_4x64_impl.h src/scalar_8x32_impl.h \\\n+\tsrc/scalar_low_impl.h src/group.h src/group_impl.h \\\n+\tsrc/num_gmp.h src/num_gmp_impl.h src/ecdsa.h src/ecdsa_impl.h \\\n+\tsrc/eckey.h src/eckey_impl.h src/ecmult.h src/ecmult_impl.h \\\n+\tsrc/ecmult_const.h src/ecmult_const_impl.h src/ecmult_gen.h \\\n+\tsrc/ecmult_gen_impl.h src/num.h src/num_impl.h \\\n+\tsrc/field_10x26.h src/field_10x26_impl.h src/field_5x52.h \\\n+\tsrc/field_5x52_impl.h src/field_5x52_int128_impl.h \\\n+\tsrc/field_5x52_asm_impl.h \\\n+\tsrc/java/org_bitcoin_NativeSecp256k1.h \\\n+\tsrc/java/org_bitcoin_Secp256k1Context.h src/util.h \\\n+\tsrc/testrand.h src/testrand_impl.h src/hash.h src/hash_impl.h \\\n+\tsrc/field.h src/field_impl.h src/bench.h \\\n+\tcontrib/lax_der_parsing.h contrib/lax_der_parsing.c \\\n+\tcontrib/lax_der_privatekey_parsing.h \\\n+\tcontrib/lax_der_privatekey_parsing.c \\\n+\tsrc/modules/ecdh/main_impl.h src/modules/ecdh/tests_impl.h \\\n+\tsrc/modules/recovery/main_impl.h \\\n+\tsrc/modules/recovery/tests_impl.h\n+HEADERS = $(include_HEADERS) $(noinst_HEADERS)\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+CSCOPE = cscope\n+AM_RECURSIVE_TARGETS = cscope check recheck\n+am__tty_colors_dummy = \\\n+  mgn= red= grn= lgn= blu= brg= std=; \\\n+  am__color_tests=no\n+am__tty_colors = { \\\n+  $(am__tty_colors_dummy); \\\n+  if test \"X$(AM_COLOR_TESTS)\" = Xno; then \\\n+    am__color_tests=no; \\\n+  elif test \"X$(AM_COLOR_TESTS)\" = Xalways; then \\\n+    am__color_tests=yes; \\\n+  elif test \"X$$TERM\" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n+    am__color_tests=yes; \\\n+  fi; \\\n+  if test $$am__color_tests = yes; then \\\n+    red='\u001b[0;31m'; \\\n+    grn='\u001b[0;32m'; \\\n+    lgn='\u001b[1;32m'; \\\n+    blu='\u001b[1;34m'; \\\n+    mgn='\u001b[0;35m'; \\\n+    brg='\u001b[1m'; \\\n+    std='\u001b[m'; \\\n+  fi; \\\n+}\n+am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n+am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n+am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n+# A command that, given a newline-separated list of test names on the\n+# standard input, print the name of the tests that are to be re-run\n+# upon \"make recheck\".\n+am__list_recheck_tests = $(AWK) '{ \\\n+  recheck = 1; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+        { \\\n+          if ((getline line2 < ($$0 \".log\")) < 0) \\\n+\t    recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n+        { \\\n+          recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n+        { \\\n+          break; \\\n+        } \\\n+    }; \\\n+  if (recheck) \\\n+    print $$0; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# A command that, given a newline-separated list of test names on the\n+# standard input, create the global log from their .trs and .log files.\n+am__create_global_log = $(AWK) ' \\\n+function fatal(msg) \\\n+{ \\\n+  print \"fatal: making $@: \" msg | \"cat >&2\"; \\\n+  exit 1; \\\n+} \\\n+function rst_section(header) \\\n+{ \\\n+  print header; \\\n+  len = length(header); \\\n+  for (i = 1; i <= len; i = i + 1) \\\n+    printf \"=\"; \\\n+  printf \"\\n\\n\"; \\\n+} \\\n+{ \\\n+  copy_in_global_log = 1; \\\n+  global_test_result = \"RUN\"; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+         fatal(\"failed to read from \" $$0 \".trs\"); \\\n+      if (line ~ /$(am__global_test_result_rx)/) \\\n+        { \\\n+          sub(\"$(am__global_test_result_rx)\", \"\", line); \\\n+          sub(\"[ \t]*$$\", \"\", line); \\\n+          global_test_result = line; \\\n+        } \\\n+      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n+        copy_in_global_log = 0; \\\n+    }; \\\n+  if (copy_in_global_log) \\\n+    { \\\n+      rst_section(global_test_result \": \" $$0); \\\n+      while ((rc = (getline line < ($$0 \".log\"))) != 0) \\\n+      { \\\n+        if (rc < 0) \\\n+          fatal(\"failed to read from \" $$0 \".log\"); \\\n+        print line; \\\n+      }; \\\n+      printf \"\\n\"; \\\n+    }; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# Restructured Text title.\n+am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n+# Solaris 10 'make', and several other traditional 'make' implementations,\n+# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n+# by disabling -e (using the XSI extension \"set +e\") if it's set.\n+am__sh_e_setup = case $$- in *e*) set +e;; esac\n+# Default flags passed to test drivers.\n+am__common_driver_flags = \\\n+  --color-tests \"$$am__color_tests\" \\\n+  --enable-hard-errors \"$$am__enable_hard_errors\" \\\n+  --expect-failure \"$$am__expect_failure\"\n+# To be inserted before the command running the test.  Creates the\n+# directory for the log if needed.  Stores in $dir the directory\n+# containing $f, in $tst the test, in $log the log.  Executes the\n+# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n+# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n+# will run the test scripts (or their associated LOG_COMPILER, if\n+# thy have one).\n+am__check_pre = \\\n+$(am__sh_e_setup);\t\t\t\t\t\\\n+$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n+$(am__tty_colors);\t\t\t\t\t\\\n+srcdir=$(srcdir); export srcdir;\t\t\t\\\n+case \"$@\" in\t\t\t\t\t\t\\\n+  */*) am__odir=`echo \"./$@\" | sed 's|/[^/]*$$||'`;;\t\\\n+    *) am__odir=.;; \t\t\t\t\t\\\n+esac;\t\t\t\t\t\t\t\\\n+test \"x$$am__odir\" = x\".\" || test -d \"$$am__odir\" \t\\\n+  || $(MKDIR_P) \"$$am__odir\" || exit $$?;\t\t\\\n+if test -f \"./$$f\"; then dir=./;\t\t\t\\\n+elif test -f \"$$f\"; then dir=;\t\t\t\t\\\n+else dir=\"$(srcdir)/\"; fi;\t\t\t\t\\\n+tst=$$dir$$f; log='$@'; \t\t\t\t\\\n+if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n+  am__enable_hard_errors=no; \t\t\t\t\\\n+else\t\t\t\t\t\t\t\\\n+  am__enable_hard_errors=yes; \t\t\t\t\\\n+fi; \t\t\t\t\t\t\t\\\n+case \" $(XFAIL_TESTS) \" in\t\t\t\t\\\n+  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n+    am__expect_failure=yes;;\t\t\t\t\\\n+  *)\t\t\t\t\t\t\t\\\n+    am__expect_failure=no;;\t\t\t\t\\\n+esac; \t\t\t\t\t\t\t\\\n+$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n+# A shell command to get the names of the tests scripts with any registered\n+# extension removed (i.e., equivalently, the names of the test logs, with\n+# the '.log' extension removed).  The result is saved in the shell variable\n+# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n+# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n+# since that might cause problem with VPATH rewrites for suffix-less tests.\n+# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n+am__set_TESTS_bases = \\\n+  bases='$(TEST_LOGS)'; \\\n+  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n+  bases=`echo $$bases`\n+RECHECK_LOGS = $(TEST_LOGS)\n+TEST_SUITE_LOG = test-suite.log\n+TEST_EXTENSIONS = @EXEEXT@ .test\n+LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n+am__set_b = \\\n+  case '$@' in \\\n+    */*) \\\n+      case '$*' in \\\n+        */*) b='$*';; \\\n+          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n+       esac;; \\\n+    *) \\\n+      b='$*';; \\\n+  esac\n+am__test_logs1 = $(TESTS:=.log)\n+am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)\n+TEST_LOGS = $(am__test_logs2:.test.log=.log)\n+TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n+\t$(TEST_LOG_FLAGS)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+am__remove_distdir = \\\n+  if test -d \"$(distdir)\"; then \\\n+    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n+      && rm -rf \"$(distdir)\" \\\n+      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n+  else :; fi\n+am__post_remove_distdir = $(am__remove_distdir)\n+DIST_ARCHIVES = $(distdir).tar.gz\n+GZIP_ENV = --best\n+DIST_TARGETS = dist-gzip\n+distuninstallcheck_listfiles = find . -type f -print\n+am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n+  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\n+distcleancheck_listfiles = find . -type f -print\n+ACLOCAL = @ACLOCAL@\n+AMTAR = @AMTAR@\n+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n+AR = @AR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BREW = @BREW@\n+BUILD_EXEEXT = @BUILD_EXEEXT@\n+BUILD_OBJEXT = @BUILD_OBJEXT@\n+CC = @CC@\n+CCAS = @CCAS@\n+CCASDEPMODE = @CCASDEPMODE@\n+CCASFLAGS = @CCASFLAGS@\n+CCDEPMODE = @CCDEPMODE@\n+CC_FOR_BUILD = @CC_FOR_BUILD@\n+CFLAGS = @CFLAGS@\n+CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@ $(am__append_7)\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@ $(am__append_6)\n+CPP_FOR_BUILD = @CPP_FOR_BUILD@\n+CRYPTO_CFLAGS = @CRYPTO_CFLAGS@\n+CRYPTO_LIBS = @CRYPTO_LIBS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+DLLTOOL = @DLLTOOL@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EXEEXT = @EXEEXT@\n+FGREP = @FGREP@\n+GREP = @GREP@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JNI_INCLUDES = @JNI_INCLUDES@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAKEINFO = @MAKEINFO@\n+MANIFEST_TOOL = @MANIFEST_TOOL@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PKG_CONFIG = @PKG_CONFIG@\n+PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@\n+PKG_CONFIG_PATH = @PKG_CONFIG_PATH@\n+PORT = @PORT@\n+RANLIB = @RANLIB@\n+SECP_INCLUDES = @SECP_INCLUDES@\n+SECP_LIBS = @SECP_LIBS@\n+SECP_TEST_INCLUDES = @SECP_TEST_INCLUDES@\n+SECP_TEST_LIBS = @SECP_TEST_LIBS@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+VERSION = @VERSION@\n+_ACJNI_JAVAC = @_ACJNI_JAVAC@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CC_FOR_BUILD = @ac_ct_CC_FOR_BUILD@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+exec_prefix = @exec_prefix@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target_alias = @target_alias@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+lib_LTLIBRARIES = libsecp256k1.la\n+@USE_JNI_FALSE@JNI_LIB = \n+@USE_JNI_TRUE@JNI_LIB = libsecp256k1_jni.la\n+@USE_EXTERNAL_ASM_TRUE@noinst_LTLIBRARIES = $(COMMON_LIB)\n+@USE_JNI_TRUE@noinst_LTLIBRARIES = $(JNI_LIB)\n+include_HEADERS = include/secp256k1.h $(am__append_8) $(am__append_11)\n+noinst_HEADERS = src/scalar.h src/scalar_4x64.h src/scalar_8x32.h \\\n+\tsrc/scalar_low.h src/scalar_impl.h src/scalar_4x64_impl.h \\\n+\tsrc/scalar_8x32_impl.h src/scalar_low_impl.h src/group.h \\\n+\tsrc/group_impl.h src/num_gmp.h src/num_gmp_impl.h src/ecdsa.h \\\n+\tsrc/ecdsa_impl.h src/eckey.h src/eckey_impl.h src/ecmult.h \\\n+\tsrc/ecmult_impl.h src/ecmult_const.h src/ecmult_const_impl.h \\\n+\tsrc/ecmult_gen.h src/ecmult_gen_impl.h src/num.h \\\n+\tsrc/num_impl.h src/field_10x26.h src/field_10x26_impl.h \\\n+\tsrc/field_5x52.h src/field_5x52_impl.h \\\n+\tsrc/field_5x52_int128_impl.h src/field_5x52_asm_impl.h \\\n+\tsrc/java/org_bitcoin_NativeSecp256k1.h \\\n+\tsrc/java/org_bitcoin_Secp256k1Context.h src/util.h \\\n+\tsrc/testrand.h src/testrand_impl.h src/hash.h src/hash_impl.h \\\n+\tsrc/field.h src/field_impl.h src/bench.h \\\n+\tcontrib/lax_der_parsing.h contrib/lax_der_parsing.c \\\n+\tcontrib/lax_der_privatekey_parsing.h \\\n+\tcontrib/lax_der_privatekey_parsing.c $(am__append_9) \\\n+\t$(am__append_12)\n+@USE_EXTERNAL_ASM_FALSE@COMMON_LIB = \n+@USE_EXTERNAL_ASM_TRUE@COMMON_LIB = libsecp256k1_common.la\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libsecp256k1.pc\n+@USE_ASM_ARM_TRUE@@USE_EXTERNAL_ASM_TRUE@libsecp256k1_common_la_SOURCES = src/asm/field_10x26_arm.s\n+libsecp256k1_la_SOURCES = src/secp256k1.c\n+libsecp256k1_la_CPPFLAGS = -DSECP256K1_BUILD -I$(top_srcdir)/include -I$(top_srcdir)/src $(SECP_INCLUDES)\n+libsecp256k1_la_LIBADD = $(JNI_LIB) $(SECP_LIBS) $(COMMON_LIB)\n+libsecp256k1_jni_la_SOURCES = src/java/org_bitcoin_NativeSecp256k1.c src/java/org_bitcoin_Secp256k1Context.c\n+libsecp256k1_jni_la_CPPFLAGS = -DSECP256K1_BUILD $(JNI_INCLUDES)\n+@USE_BENCHMARK_TRUE@bench_verify_SOURCES = src/bench_verify.c\n+@USE_BENCHMARK_TRUE@bench_verify_LDADD = libsecp256k1.la $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)\n+@USE_BENCHMARK_TRUE@bench_sign_SOURCES = src/bench_sign.c\n+@USE_BENCHMARK_TRUE@bench_sign_LDADD = libsecp256k1.la $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)\n+@USE_BENCHMARK_TRUE@bench_internal_SOURCES = src/bench_internal.c\n+@USE_BENCHMARK_TRUE@bench_internal_LDADD = $(SECP_LIBS) $(COMMON_LIB)\n+@USE_BENCHMARK_TRUE@bench_internal_CPPFLAGS = -DSECP256K1_BUILD $(SECP_INCLUDES)\n+@USE_TESTS_TRUE@tests_SOURCES = src/tests.c\n+@USE_TESTS_TRUE@tests_CPPFLAGS = -DSECP256K1_BUILD -DVERIFY -I$(top_srcdir)/src -I$(top_srcdir)/include $(SECP_INCLUDES) $(SECP_TEST_INCLUDES)\n+@USE_TESTS_TRUE@tests_LDADD = $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)\n+@USE_TESTS_TRUE@tests_LDFLAGS = -static\n+@USE_EXHAUSTIVE_TESTS_TRUE@exhaustive_tests_SOURCES = src/tests_exhaustive.c\n+@USE_EXHAUSTIVE_TESTS_TRUE@exhaustive_tests_CPPFLAGS = -DSECP256K1_BUILD -DVERIFY -I$(top_srcdir)/src $(SECP_INCLUDES)\n+@USE_EXHAUSTIVE_TESTS_TRUE@exhaustive_tests_LDADD = $(SECP_LIBS)\n+@USE_EXHAUSTIVE_TESTS_TRUE@exhaustive_tests_LDFLAGS = -static\n+JAVAROOT = src/java\n+JAVAORG = org/bitcoin\n+JAVA_GUAVA = $(srcdir)/$(JAVAROOT)/guava/guava-18.0.jar\n+CLASSPATH_ENV = CLASSPATH=$(JAVA_GUAVA)\n+JAVA_FILES = \\\n+  $(JAVAROOT)/$(JAVAORG)/NativeSecp256k1.java \\\n+  $(JAVAROOT)/$(JAVAORG)/NativeSecp256k1Test.java \\\n+  $(JAVAROOT)/$(JAVAORG)/NativeSecp256k1Util.java \\\n+  $(JAVAROOT)/$(JAVAORG)/Secp256k1Context.java\n+\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@gen_context_OBJECTS = gen_context.o\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@gen_context_BIN = gen_context$(BUILD_EXEEXT)\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@CLEANFILES = $(gen_context_BIN) src/ecmult_static_context.h $(JAVAROOT)/$(JAVAORG)/*.class .stamp-java\n+EXTRA_DIST = autogen.sh src/gen_context.c src/basic-config.h $(JAVA_FILES)\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@bench_ecdh_SOURCES = src/bench_ecdh.c\n+@ENABLE_MODULE_ECDH_TRUE@@USE_BENCHMARK_TRUE@bench_ecdh_LDADD = libsecp256k1.la $(SECP_LIBS) $(COMMON_LIB)\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@bench_recover_SOURCES = src/bench_recover.c\n+@ENABLE_MODULE_RECOVERY_TRUE@@USE_BENCHMARK_TRUE@bench_recover_LDADD = libsecp256k1.la $(SECP_LIBS) $(COMMON_LIB)\n+all: all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .lo .log .o .obj .s .test .test$(EXEEXT) .trs\n+am--refresh: Makefile\n+\t@:\n+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/src/modules/ecdh/Makefile.am.include $(srcdir)/src/modules/recovery/Makefile.am.include $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+$(srcdir)/src/modules/ecdh/Makefile.am.include $(srcdir)/src/modules/recovery/Makefile.am.include:\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure:  $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+src/libsecp256k1-config.h: src/stamp-h1\n+\t@test -f $@ || rm -f src/stamp-h1\n+\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/stamp-h1\n+\n+src/stamp-h1: $(top_srcdir)/src/libsecp256k1-config.h.in $(top_builddir)/config.status\n+\t@rm -f src/stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status src/libsecp256k1-config.h\n+$(top_srcdir)/src/libsecp256k1-config.h.in:  $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f src/stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f src/libsecp256k1-config.h src/stamp-h1\n+libsecp256k1.pc: $(top_builddir)/config.status $(srcdir)/libsecp256k1.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+\n+install-libLTLIBRARIES: $(lib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(libdir)\" || exit 1; \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(libdir)\"; \\\n+\t}\n+\n+uninstall-libLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(libdir)/$$f\"; \\\n+\tdone\n+\n+clean-libLTLIBRARIES:\n+\t-test -z \"$(lib_LTLIBRARIES)\" || rm -f $(lib_LTLIBRARIES)\n+\t@list='$(lib_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+\n+clean-noinstLTLIBRARIES:\n+\t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n+\t@list='$(noinst_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+src/$(am__dirstamp):\n+\t@$(MKDIR_P) src\n+\t@: > src/$(am__dirstamp)\n+src/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) src/$(DEPDIR)\n+\t@: > src/$(DEPDIR)/$(am__dirstamp)\n+src/libsecp256k1_la-secp256k1.lo: src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+libsecp256k1.la: $(libsecp256k1_la_OBJECTS) $(libsecp256k1_la_DEPENDENCIES) $(EXTRA_libsecp256k1_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) -rpath $(libdir) $(libsecp256k1_la_OBJECTS) $(libsecp256k1_la_LIBADD) $(LIBS)\n+src/asm/$(am__dirstamp):\n+\t@$(MKDIR_P) src/asm\n+\t@: > src/asm/$(am__dirstamp)\n+src/asm/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) src/asm/$(DEPDIR)\n+\t@: > src/asm/$(DEPDIR)/$(am__dirstamp)\n+src/asm/field_10x26_arm.lo: src/asm/$(am__dirstamp) \\\n+\tsrc/asm/$(DEPDIR)/$(am__dirstamp)\n+\n+libsecp256k1_common.la: $(libsecp256k1_common_la_OBJECTS) $(libsecp256k1_common_la_DEPENDENCIES) $(EXTRA_libsecp256k1_common_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) $(am_libsecp256k1_common_la_rpath) $(libsecp256k1_common_la_OBJECTS) $(libsecp256k1_common_la_LIBADD) $(LIBS)\n+src/java/$(am__dirstamp):\n+\t@$(MKDIR_P) src/java\n+\t@: > src/java/$(am__dirstamp)\n+src/java/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) src/java/$(DEPDIR)\n+\t@: > src/java/$(DEPDIR)/$(am__dirstamp)\n+src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo:  \\\n+\tsrc/java/$(am__dirstamp) src/java/$(DEPDIR)/$(am__dirstamp)\n+src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo:  \\\n+\tsrc/java/$(am__dirstamp) src/java/$(DEPDIR)/$(am__dirstamp)\n+\n+libsecp256k1_jni.la: $(libsecp256k1_jni_la_OBJECTS) $(libsecp256k1_jni_la_DEPENDENCIES) $(EXTRA_libsecp256k1_jni_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) $(am_libsecp256k1_jni_la_rpath) $(libsecp256k1_jni_la_OBJECTS) $(libsecp256k1_jni_la_LIBADD) $(LIBS)\n+\n+clean-noinstPROGRAMS:\n+\t@list='$(noinst_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list || exit $$?; \\\n+\ttest -n \"$(EXEEXT)\" || exit 0; \\\n+\tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list\n+src/bench_ecdh.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_ecdh$(EXEEXT): $(bench_ecdh_OBJECTS) $(bench_ecdh_DEPENDENCIES) $(EXTRA_bench_ecdh_DEPENDENCIES) \n+\t@rm -f bench_ecdh$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_ecdh_OBJECTS) $(bench_ecdh_LDADD) $(LIBS)\n+src/bench_internal-bench_internal.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_internal$(EXEEXT): $(bench_internal_OBJECTS) $(bench_internal_DEPENDENCIES) $(EXTRA_bench_internal_DEPENDENCIES) \n+\t@rm -f bench_internal$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_internal_OBJECTS) $(bench_internal_LDADD) $(LIBS)\n+src/bench_recover.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_recover$(EXEEXT): $(bench_recover_OBJECTS) $(bench_recover_DEPENDENCIES) $(EXTRA_bench_recover_DEPENDENCIES) \n+\t@rm -f bench_recover$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_recover_OBJECTS) $(bench_recover_LDADD) $(LIBS)\n+src/bench_sign.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_sign$(EXEEXT): $(bench_sign_OBJECTS) $(bench_sign_DEPENDENCIES) $(EXTRA_bench_sign_DEPENDENCIES) \n+\t@rm -f bench_sign$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_sign_OBJECTS) $(bench_sign_LDADD) $(LIBS)\n+src/bench_verify.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_verify$(EXEEXT): $(bench_verify_OBJECTS) $(bench_verify_DEPENDENCIES) $(EXTRA_bench_verify_DEPENDENCIES) \n+\t@rm -f bench_verify$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_verify_OBJECTS) $(bench_verify_LDADD) $(LIBS)\n+src/exhaustive_tests-tests_exhaustive.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+exhaustive_tests$(EXEEXT): $(exhaustive_tests_OBJECTS) $(exhaustive_tests_DEPENDENCIES) $(EXTRA_exhaustive_tests_DEPENDENCIES) \n+\t@rm -f exhaustive_tests$(EXEEXT)\n+\t$(AM_V_CCLD)$(exhaustive_tests_LINK) $(exhaustive_tests_OBJECTS) $(exhaustive_tests_LDADD) $(LIBS)\n+src/tests-tests.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+tests$(EXEEXT): $(tests_OBJECTS) $(tests_DEPENDENCIES) $(EXTRA_tests_DEPENDENCIES) \n+\t@rm -f tests$(EXEEXT)\n+\t$(AM_V_CCLD)$(tests_LINK) $(tests_OBJECTS) $(tests_LDADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\t-rm -f src/*.$(OBJEXT)\n+\t-rm -f src/*.lo\n+\t-rm -f src/asm/*.$(OBJEXT)\n+\t-rm -f src/asm/*.lo\n+\t-rm -f src/java/*.$(OBJEXT)\n+\t-rm -f src/java/*.lo\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bench_ecdh.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bench_internal-bench_internal.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bench_recover.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bench_sign.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bench_verify.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libsecp256k1_la-secp256k1.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/tests-tests.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Plo@am__quote@\n+\n+.c.o:\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n+@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<\n+\n+.c.obj:\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.obj$$||'`;\\\n+@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\\\n+@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.c.lo:\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.lo$$||'`;\\\n+@am__fastdepCC_TRUE@\t$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<\n+\n+src/libsecp256k1_la-secp256k1.lo: src/secp256k1.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/libsecp256k1_la-secp256k1.lo -MD -MP -MF src/$(DEPDIR)/libsecp256k1_la-secp256k1.Tpo -c -o src/libsecp256k1_la-secp256k1.lo `test -f 'src/secp256k1.c' || echo '$(srcdir)/'`src/secp256k1.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/libsecp256k1_la-secp256k1.Tpo src/$(DEPDIR)/libsecp256k1_la-secp256k1.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/secp256k1.c' object='src/libsecp256k1_la-secp256k1.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/libsecp256k1_la-secp256k1.lo `test -f 'src/secp256k1.c' || echo '$(srcdir)/'`src/secp256k1.c\n+\n+src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo: src/java/org_bitcoin_NativeSecp256k1.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo -MD -MP -MF src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Tpo -c -o src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo `test -f 'src/java/org_bitcoin_NativeSecp256k1.c' || echo '$(srcdir)/'`src/java/org_bitcoin_NativeSecp256k1.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Tpo src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/java/org_bitcoin_NativeSecp256k1.c' object='src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo `test -f 'src/java/org_bitcoin_NativeSecp256k1.c' || echo '$(srcdir)/'`src/java/org_bitcoin_NativeSecp256k1.c\n+\n+src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo: src/java/org_bitcoin_Secp256k1Context.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo -MD -MP -MF src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Tpo -c -o src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo `test -f 'src/java/org_bitcoin_Secp256k1Context.c' || echo '$(srcdir)/'`src/java/org_bitcoin_Secp256k1Context.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Tpo src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/java/org_bitcoin_Secp256k1Context.c' object='src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo `test -f 'src/java/org_bitcoin_Secp256k1Context.c' || echo '$(srcdir)/'`src/java/org_bitcoin_Secp256k1Context.c\n+\n+src/bench_internal-bench_internal.o: src/bench_internal.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/bench_internal-bench_internal.o -MD -MP -MF src/$(DEPDIR)/bench_internal-bench_internal.Tpo -c -o src/bench_internal-bench_internal.o `test -f 'src/bench_internal.c' || echo '$(srcdir)/'`src/bench_internal.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/bench_internal-bench_internal.Tpo src/$(DEPDIR)/bench_internal-bench_internal.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/bench_internal.c' object='src/bench_internal-bench_internal.o' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/bench_internal-bench_internal.o `test -f 'src/bench_internal.c' || echo '$(srcdir)/'`src/bench_internal.c\n+\n+src/bench_internal-bench_internal.obj: src/bench_internal.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/bench_internal-bench_internal.obj -MD -MP -MF src/$(DEPDIR)/bench_internal-bench_internal.Tpo -c -o src/bench_internal-bench_internal.obj `if test -f 'src/bench_internal.c'; then $(CYGPATH_W) 'src/bench_internal.c'; else $(CYGPATH_W) '$(srcdir)/src/bench_internal.c'; fi`\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/bench_internal-bench_internal.Tpo src/$(DEPDIR)/bench_internal-bench_internal.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/bench_internal.c' object='src/bench_internal-bench_internal.obj' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/bench_internal-bench_internal.obj `if test -f 'src/bench_internal.c'; then $(CYGPATH_W) 'src/bench_internal.c'; else $(CYGPATH_W) '$(srcdir)/src/bench_internal.c'; fi`\n+\n+src/exhaustive_tests-tests_exhaustive.o: src/tests_exhaustive.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/exhaustive_tests-tests_exhaustive.o -MD -MP -MF src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo -c -o src/exhaustive_tests-tests_exhaustive.o `test -f 'src/tests_exhaustive.c' || echo '$(srcdir)/'`src/tests_exhaustive.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/tests_exhaustive.c' object='src/exhaustive_tests-tests_exhaustive.o' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/exhaustive_tests-tests_exhaustive.o `test -f 'src/tests_exhaustive.c' || echo '$(srcdir)/'`src/tests_exhaustive.c\n+\n+src/exhaustive_tests-tests_exhaustive.obj: src/tests_exhaustive.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/exhaustive_tests-tests_exhaustive.obj -MD -MP -MF src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo -c -o src/exhaustive_tests-tests_exhaustive.obj `if test -f 'src/tests_exhaustive.c'; then $(CYGPATH_W) 'src/tests_exhaustive.c'; else $(CYGPATH_W) '$(srcdir)/src/tests_exhaustive.c'; fi`\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/tests_exhaustive.c' object='src/exhaustive_tests-tests_exhaustive.obj' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/exhaustive_tests-tests_exhaustive.obj `if test -f 'src/tests_exhaustive.c'; then $(CYGPATH_W) 'src/tests_exhaustive.c'; else $(CYGPATH_W) '$(srcdir)/src/tests_exhaustive.c'; fi`\n+\n+src/tests-tests.o: src/tests.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tests-tests.o -MD -MP -MF src/$(DEPDIR)/tests-tests.Tpo -c -o src/tests-tests.o `test -f 'src/tests.c' || echo '$(srcdir)/'`src/tests.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/tests-tests.Tpo src/$(DEPDIR)/tests-tests.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/tests.c' object='src/tests-tests.o' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tests-tests.o `test -f 'src/tests.c' || echo '$(srcdir)/'`src/tests.c\n+\n+src/tests-tests.obj: src/tests.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tests-tests.obj -MD -MP -MF src/$(DEPDIR)/tests-tests.Tpo -c -o src/tests-tests.obj `if test -f 'src/tests.c'; then $(CYGPATH_W) 'src/tests.c'; else $(CYGPATH_W) '$(srcdir)/src/tests.c'; fi`\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/tests-tests.Tpo src/$(DEPDIR)/tests-tests.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='src/tests.c' object='src/tests-tests.obj' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tests-tests.obj `if test -f 'src/tests.c'; then $(CYGPATH_W) 'src/tests.c'; else $(CYGPATH_W) '$(srcdir)/src/tests.c'; fi`\n+\n+.s.o:\n+\t$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ $<\n+\n+.s.obj:\n+\t$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.s.lo:\n+\t$(AM_V_CCAS)$(LTCCASCOMPILE) -c -o $@ $<\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\t-rm -rf src/.libs src/_libs\n+\t-rm -rf src/asm/.libs src/asm/_libs\n+\t-rm -rf src/java/.libs src/java/_libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+install-pkgconfigDATA: $(pkgconfig_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-pkgconfigDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\n+install-includeHEADERS: $(include_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(includedir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(includedir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-includeHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-am\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-am\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscope: cscope.files\n+\ttest ! -s cscope.files \\\n+\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\n+clean-cscope:\n+\t-rm -f cscope.files\n+cscope.files: clean-cscope cscopelist\n+cscopelist: cscopelist-am\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+# Recover from deleted '.trs' file; this should ensure that\n+# \"rm -f foo.log; make foo.trs\" re-run 'foo.test', and re-create\n+# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n+# to avoid problems with \"make -n\".\n+.log.trs:\n+\trm -f $< $@\n+\t$(MAKE) $(AM_MAKEFLAGS) $<\n+\n+# Leading 'am--fnord' is there to ensure the list of targets does not\n+# expand to empty, as could happen e.g. with make check TESTS=''.\n+am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n+am--force-recheck:\n+\t@:\n+\n+$(TEST_SUITE_LOG): $(TEST_LOGS)\n+\t@$(am__set_TESTS_bases); \\\n+\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n+\tredo_bases=`for i in $$bases; do \\\n+\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n+\t            done`; \\\n+\tif test -n \"$$redo_bases\"; then \\\n+\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n+\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n+\t  if $(am__make_dryrun); then :; else \\\n+\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n+\t  fi; \\\n+\tfi; \\\n+\tif test -n \"$$am__remaking_logs\"; then \\\n+\t  echo \"fatal: making $(TEST_SUITE_LOG): possible infinite\" \\\n+\t       \"recursion detected\" >&2; \\\n+\telse \\\n+\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n+\tfi; \\\n+\tif $(am__make_dryrun); then :; else \\\n+\t  st=0;  \\\n+\t  errmsg=\"fatal: making $(TEST_SUITE_LOG): failed to create\"; \\\n+\t  for i in $$redo_bases; do \\\n+\t    test -f $$i.trs && test -r $$i.trs \\\n+\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n+\t    test -f $$i.log && test -r $$i.log \\\n+\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n+\t  done; \\\n+\t  test $$st -eq 0 || exit 1; \\\n+\tfi\n+\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n+\tws='[ \t]'; \\\n+\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n+\ttest -n \"$$results\" || results=/dev/null; \\\n+\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n+\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n+\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n+\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n+\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n+\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n+\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n+\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n+\t  success=true; \\\n+\telse \\\n+\t  success=false; \\\n+\tfi; \\\n+\tbr='==================='; br=$$br$$br$$br$$br; \\\n+\tresult_count () \\\n+\t{ \\\n+\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n+\t      maybe_colorize=yes; \\\n+\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n+\t      maybe_colorize=no; \\\n+\t    else \\\n+\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n+\t    fi; \\\n+\t    shift; \\\n+\t    desc=$$1 count=$$2; \\\n+\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n+\t      color_start=$$3 color_end=$$std; \\\n+\t    else \\\n+\t      color_start= color_end=; \\\n+\t    fi; \\\n+\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n+\t}; \\\n+\tcreate_testsuite_report () \\\n+\t{ \\\n+\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n+\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n+\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n+\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n+\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n+\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n+\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n+\t}; \\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n+\t    $(am__rst_title);\t\t\t\t\t\t\\\n+\t  create_testsuite_report --no-color;\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n+\t    | $(am__create_global_log);\t\t\t\t\t\\\n+\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n+\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n+\tif $$success; then\t\t\t\t\t\t\\\n+\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n+\t else\t\t\t\t\t\t\t\t\\\n+\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n+\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n+\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n+\tif $$success; then :; else\t\t\t\t\t\\\n+\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n+\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n+\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n+\t  fi;\t\t\t\t\t\t\t\t\\\n+\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\t$$success || exit 1\n+\n+check-TESTS:\n+\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n+\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n+\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?;\n+recheck: all \n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tbases=`for i in $$bases; do echo $$i; done \\\n+\t         | $(am__list_recheck_tests)` || exit 1; \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\tlog_list=`echo $$log_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n+\t        am__force_recheck=am--force-recheck \\\n+\t        TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?\n+tests.log: tests$(EXEEXT)\n+\t@p='tests$(EXEEXT)'; \\\n+\tb='tests'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+exhaustive_tests.log: exhaustive_tests$(EXEEXT)\n+\t@p='exhaustive_tests$(EXEEXT)'; \\\n+\tb='exhaustive_tests'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test.log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+@am__EXEEXT_TRUE@.test$(EXEEXT).log:\n+@am__EXEEXT_TRUE@\t@p='$<'; \\\n+@am__EXEEXT_TRUE@\t$(am__set_b); \\\n+@am__EXEEXT_TRUE@\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+@am__EXEEXT_TRUE@\t--log-file $$b.log --trs-file $$b.trs \\\n+@am__EXEEXT_TRUE@\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+@am__EXEEXT_TRUE@\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+\n+distdir: $(DISTFILES)\n+\t$(am__remove_distdir)\n+\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t-test -n \"$(am__skip_mode_fix)\" \\\n+\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n+\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r \"$(distdir)\"\n+dist-gzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-bzip2: distdir\n+\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n+\t$(am__post_remove_distdir)\n+\n+dist-lzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n+\t$(am__post_remove_distdir)\n+\n+dist-xz: distdir\n+\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n+\t$(am__post_remove_distdir)\n+\n+dist-tarZ: distdir\n+\t@echo WARNING: \"Support for shar distribution archives is\" \\\n+\t               \"deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n+\t$(am__post_remove_distdir)\n+\n+dist-shar: distdir\n+\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n+\t\t       \"legacy program 'compress' is deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-zip: distdir\n+\t-rm -f $(distdir).zip\n+\tzip -rq $(distdir).zip $(distdir)\n+\t$(am__post_remove_distdir)\n+\n+dist dist-all:\n+\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n+\t$(am__post_remove_distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\tcase '$(DIST_ARCHIVES)' in \\\n+\t*.tar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n+\t*.tar.bz2*) \\\n+\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n+\t*.tar.lz*) \\\n+\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n+\t*.tar.xz*) \\\n+\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n+\t*.tar.Z*) \\\n+\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n+\t*.shar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\\n+\t*.zip*) \\\n+\t  unzip $(distdir).zip ;;\\\n+\tesac\n+\tchmod -R a-w $(distdir)\n+\tchmod u+w $(distdir)\n+\tmkdir $(distdir)/_build $(distdir)/_inst\n+\tchmod a-w $(distdir)\n+\ttest -d $(distdir)/_build || exit 0; \\\n+\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n+\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n+\t  && am__cwd=`pwd` \\\n+\t  && $(am__cd) $(distdir)/_build \\\n+\t  && ../configure \\\n+\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    --srcdir=.. --prefix=\"$$dc_install_base\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n+\t        distuninstallcheck \\\n+\t  && chmod -R a-w \"$$dc_install_base\" \\\n+\t  && ({ \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n+\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n+\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n+\t  && rm -rf \"$$dc_destdir\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n+\t  && rm -rf $(DIST_ARCHIVES) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n+\t  && cd \"$$am__cwd\" \\\n+\t  || exit 1\n+\t$(am__post_remove_distdir)\n+\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n+\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n+\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\n+distuninstallcheck:\n+\t@test -n '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: trying to run $@ with an empty' \\\n+\t       '$$(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n+\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n+\t        if test -n \"$(DESTDIR)\"; then \\\n+\t          echo \"  (check DESTDIR support)\"; \\\n+\t        fi ; \\\n+\t        $(distuninstallcheck_listfiles) ; \\\n+\t        exit 1; } >&2\n+distcleancheck: distclean\n+\t@if test '$(srcdir)' = . ; then \\\n+\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n+\t  exit 1 ; \\\n+\tfi\n+\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n+\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n+\t       $(distcleancheck_listfiles) ; \\\n+\t       exit 1; } >&2\n+check-am: all-am\n+\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(includedir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\t-test -z \"$(TEST_LOGS)\" || rm -f $(TEST_LOGS)\n+\t-test -z \"$(TEST_LOGS:.log=.trs)\" || rm -f $(TEST_LOGS:.log=.trs)\n+\t-test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\n+clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-rm -f src/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/$(am__dirstamp)\n+\t-rm -f src/asm/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/asm/$(am__dirstamp)\n+\t-rm -f src/java/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/java/$(am__dirstamp)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \\\n+\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf src/$(DEPDIR) src/java/$(DEPDIR)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-includeHEADERS install-pkgconfigDATA\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-libLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -rf src/$(DEPDIR) src/java/$(DEPDIR)\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+.MAKE: check-am install-am install-strip\n+\n+.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \\\n+\tcheck-am clean clean-cscope clean-generic clean-libLTLIBRARIES \\\n+\tclean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \\\n+\tcscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \\\n+\tdist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \\\n+\tdistcheck distclean distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags distcleancheck \\\n+\tdistdir distuninstallcheck dvi dvi-am html html-am info \\\n+\tinfo-am install install-am install-data install-data-am \\\n+\tinstall-dvi install-dvi-am install-exec install-exec-am \\\n+\tinstall-html install-html-am install-includeHEADERS \\\n+\tinstall-info install-info-am install-libLTLIBRARIES \\\n+\tinstall-man install-pdf install-pdf-am install-pkgconfigDATA \\\n+\tinstall-ps install-ps-am install-strip installcheck \\\n+\tinstallcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\trecheck tags tags-am uninstall uninstall-am \\\n+\tuninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+\n+@USE_JNI_TRUE@$(JAVA_GUAVA):\n+@USE_JNI_TRUE@\t@echo Guava is missing. Fetch it via: \\\n+@USE_JNI_TRUE@\twget https://search.maven.org/remotecontent?filepath=com/google/guava/guava/18.0/guava-18.0.jar -O $(@)\n+@USE_JNI_TRUE@\t@false\n+\n+@USE_JNI_TRUE@.stamp-java: $(JAVA_FILES)\n+@USE_JNI_TRUE@\t@echo   Compiling $^\n+@USE_JNI_TRUE@\t$(AM_V_at)$(CLASSPATH_ENV) javac $^\n+@USE_JNI_TRUE@\t@touch $@\n+\n+@USE_JNI_TRUE@@USE_TESTS_TRUE@check-java: libsecp256k1.la $(JAVA_GUAVA) .stamp-java\n+@USE_JNI_TRUE@@USE_TESTS_TRUE@\t$(AM_V_at)java -Djava.library.path=\"./:./src:./src/.libs:.libs/\" -cp \"$(JAVA_GUAVA):$(JAVAROOT)\" $(JAVAORG)/NativeSecp256k1Test\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@gen_%.o: src/gen_%.c\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@\t$(CC_FOR_BUILD) $(CPPFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD) -c $< -o $@\n+\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@$(gen_context_BIN): $(gen_context_OBJECTS)\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@\t$(CC_FOR_BUILD) $^ -o $@\n+\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@$(libsecp256k1_la_OBJECTS): src/ecmult_static_context.h\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@$(tests_OBJECTS): src/ecmult_static_context.h\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@$(bench_internal_OBJECTS): src/ecmult_static_context.h\n+\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@src/ecmult_static_context.h: $(gen_context_BIN)\n+@USE_ECMULT_STATIC_PRECOMPUTATION_TRUE@\t./$(gen_context_BIN)\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "475ed55e7cc1f8f854857eeac2351b398b3098e5",
        "filename": "src/secp256k1/configure",
        "status": "added",
        "additions": 17055,
        "deletions": 0,
        "changes": 17055,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/secp256k1/configure",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/secp256k1/configure",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/configure?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab"
      },
      {
        "sha": "ebc6e3b8ef43f08895640236300de49d856aff70",
        "filename": "src/secp256k1/src/libsecp256k1-config.h.in",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/secp256k1/src/libsecp256k1-config.h.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/secp256k1/src/libsecp256k1-config.h.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/libsecp256k1-config.h.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,147 @@\n+/* src/libsecp256k1-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+#ifndef LIBSECP256K1_CONFIG_H\n+\n+#define LIBSECP256K1_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+#undef AC_APPLE_UNIVERSAL_BUILD\n+\n+/* Define this symbol to enable the ECDH module */\n+#undef ENABLE_MODULE_ECDH\n+\n+/* Define this symbol to enable the ECDSA pubkey recovery module */\n+#undef ENABLE_MODULE_RECOVERY\n+\n+/* Define this symbol if OpenSSL EC functions are available */\n+#undef ENABLE_OPENSSL_TESTS\n+\n+/* Define this symbol if __builtin_expect is available */\n+#undef HAVE_BUILTIN_EXPECT\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#undef HAVE_DLFCN_H\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define this symbol if libcrypto is installed */\n+#undef HAVE_LIBCRYPTO\n+\n+/* Define this symbol if libgmp is installed */\n+#undef HAVE_LIBGMP\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define to 1 if the system has the type `__int128'. */\n+#undef HAVE___INT128\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#undef LT_OBJDIR\n+\n+/* Name of package */\n+#undef PACKAGE\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Define this symbol to enable x86_64 assembly optimizations */\n+#undef USE_ASM_X86_64\n+\n+/* Define this symbol to use a statically generated ecmult table */\n+#undef USE_ECMULT_STATIC_PRECOMPUTATION\n+\n+/* Define this symbol to use endomorphism optimization */\n+#undef USE_ENDOMORPHISM\n+\n+/* Define this symbol if an external (non-inline) assembly implementation is\n+   used */\n+#undef USE_EXTERNAL_ASM\n+\n+/* Define this symbol to use the FIELD_10X26 implementation */\n+#undef USE_FIELD_10X26\n+\n+/* Define this symbol to use the FIELD_5X52 implementation */\n+#undef USE_FIELD_5X52\n+\n+/* Define this symbol to use the native field inverse implementation */\n+#undef USE_FIELD_INV_BUILTIN\n+\n+/* Define this symbol to use the num-based field inverse implementation */\n+#undef USE_FIELD_INV_NUM\n+\n+/* Define this symbol to use the gmp implementation for num */\n+#undef USE_NUM_GMP\n+\n+/* Define this symbol to use no num implementation */\n+#undef USE_NUM_NONE\n+\n+/* Define this symbol to use the 4x64 scalar implementation */\n+#undef USE_SCALAR_4X64\n+\n+/* Define this symbol to use the 8x32 scalar implementation */\n+#undef USE_SCALAR_8X32\n+\n+/* Define this symbol to use the native scalar inverse implementation */\n+#undef USE_SCALAR_INV_BUILTIN\n+\n+/* Define this symbol to use the num-based scalar inverse implementation */\n+#undef USE_SCALAR_INV_NUM\n+\n+/* Version number of package */\n+#undef VERSION\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+#  undef WORDS_BIGENDIAN\n+# endif\n+#endif\n+\n+#endif /*LIBSECP256K1_CONFIG_H*/"
      },
      {
        "sha": "14624e79c83760d8584dd8210692c74c015818fc",
        "filename": "src/univalue/Makefile.in",
        "status": "added",
        "additions": 1422,
        "deletions": 0,
        "changes": 1422,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/univalue/Makefile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/univalue/Makefile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,1422 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+\n+\n+\n+VPATH = @srcdir@\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+TESTS = test/unitester$(EXEEXT)\n+noinst_PROGRAMS = $(am__EXEEXT_1)\n+subdir = .\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(srcdir)/univalue-config.h.in \\\n+\t$(top_srcdir)/pc/libunivalue.pc.in \\\n+\t$(top_srcdir)/pc/libunivalue-uninstalled.pc.in \\\n+\t$(top_srcdir)/build-aux/depcomp $(include_HEADERS) \\\n+\t$(noinst_HEADERS) $(top_srcdir)/build-aux/test-driver COPYING \\\n+\tREADME TODO build-aux/compile build-aux/config.guess \\\n+\tbuild-aux/config.sub build-aux/depcomp build-aux/install-sh \\\n+\tbuild-aux/missing build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/compile \\\n+\t$(top_srcdir)/build-aux/config.guess \\\n+\t$(top_srcdir)/build-aux/config.sub \\\n+\t$(top_srcdir)/build-aux/install-sh \\\n+\t$(top_srcdir)/build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/missing\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = univalue-config.h\n+CONFIG_CLEAN_FILES = pc/libunivalue.pc pc/libunivalue-uninstalled.pc\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \\\n+\t\"$(DESTDIR)$(includedir)\"\n+LTLIBRARIES = $(lib_LTLIBRARIES)\n+libunivalue_la_LIBADD =\n+am__dirstamp = $(am__leading_dot)dirstamp\n+am_libunivalue_la_OBJECTS = lib/libunivalue_la-univalue.lo \\\n+\tlib/libunivalue_la-univalue_read.lo \\\n+\tlib/libunivalue_la-univalue_write.lo\n+libunivalue_la_OBJECTS = $(am_libunivalue_la_OBJECTS)\n+AM_V_lt = $(am__v_lt_@AM_V@)\n+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n+am__v_lt_0 = --silent\n+am__v_lt_1 = \n+libunivalue_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \\\n+\t$(libunivalue_la_CXXFLAGS) $(CXXFLAGS) \\\n+\t$(libunivalue_la_LDFLAGS) $(LDFLAGS) -o $@\n+am__EXEEXT_1 = test/unitester$(EXEEXT)\n+PROGRAMS = $(noinst_PROGRAMS)\n+am_test_unitester_OBJECTS = test/test_unitester-unitester.$(OBJEXT)\n+test_unitester_OBJECTS = $(am_test_unitester_OBJECTS)\n+test_unitester_DEPENDENCIES = libunivalue.la\n+test_unitester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \\\n+\t$(test_unitester_CXXFLAGS) $(CXXFLAGS) \\\n+\t$(test_unitester_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_P = $(am__v_P_@AM_V@)\n+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_@AM_V@)\n+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_@AM_V@)\n+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\n+am__v_at_0 = @\n+am__v_at_1 = \n+DEFAULT_INCLUDES = -I.@am__isrc@\n+depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp\n+am__depfiles_maybe = depfiles\n+am__mv = mv -f\n+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \\\n+\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+\t$(AM_CXXFLAGS) $(CXXFLAGS)\n+AM_V_CXX = $(am__v_CXX_@AM_V@)\n+am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)\n+am__v_CXX_0 = @echo \"  CXX     \" $@;\n+am__v_CXX_1 = \n+CXXLD = $(CXX)\n+CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)\n+am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)\n+am__v_CXXLD_0 = @echo \"  CXXLD   \" $@;\n+am__v_CXXLD_1 = \n+SOURCES = $(libunivalue_la_SOURCES) $(test_unitester_SOURCES)\n+DIST_SOURCES = $(libunivalue_la_SOURCES) $(test_unitester_SOURCES)\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+DATA = $(pkgconfig_DATA)\n+HEADERS = $(include_HEADERS) $(noinst_HEADERS)\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\\n+\t$(LISP)univalue-config.h.in\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+CSCOPE = cscope\n+AM_RECURSIVE_TARGETS = cscope check recheck\n+am__tty_colors_dummy = \\\n+  mgn= red= grn= lgn= blu= brg= std=; \\\n+  am__color_tests=no\n+am__tty_colors = { \\\n+  $(am__tty_colors_dummy); \\\n+  if test \"X$(AM_COLOR_TESTS)\" = Xno; then \\\n+    am__color_tests=no; \\\n+  elif test \"X$(AM_COLOR_TESTS)\" = Xalways; then \\\n+    am__color_tests=yes; \\\n+  elif test \"X$$TERM\" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n+    am__color_tests=yes; \\\n+  fi; \\\n+  if test $$am__color_tests = yes; then \\\n+    red='\u001b[0;31m'; \\\n+    grn='\u001b[0;32m'; \\\n+    lgn='\u001b[1;32m'; \\\n+    blu='\u001b[1;34m'; \\\n+    mgn='\u001b[0;35m'; \\\n+    brg='\u001b[1m'; \\\n+    std='\u001b[m'; \\\n+  fi; \\\n+}\n+am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n+am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n+am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n+# A command that, given a newline-separated list of test names on the\n+# standard input, print the name of the tests that are to be re-run\n+# upon \"make recheck\".\n+am__list_recheck_tests = $(AWK) '{ \\\n+  recheck = 1; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+        { \\\n+          if ((getline line2 < ($$0 \".log\")) < 0) \\\n+\t    recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n+        { \\\n+          recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n+        { \\\n+          break; \\\n+        } \\\n+    }; \\\n+  if (recheck) \\\n+    print $$0; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# A command that, given a newline-separated list of test names on the\n+# standard input, create the global log from their .trs and .log files.\n+am__create_global_log = $(AWK) ' \\\n+function fatal(msg) \\\n+{ \\\n+  print \"fatal: making $@: \" msg | \"cat >&2\"; \\\n+  exit 1; \\\n+} \\\n+function rst_section(header) \\\n+{ \\\n+  print header; \\\n+  len = length(header); \\\n+  for (i = 1; i <= len; i = i + 1) \\\n+    printf \"=\"; \\\n+  printf \"\\n\\n\"; \\\n+} \\\n+{ \\\n+  copy_in_global_log = 1; \\\n+  global_test_result = \"RUN\"; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+         fatal(\"failed to read from \" $$0 \".trs\"); \\\n+      if (line ~ /$(am__global_test_result_rx)/) \\\n+        { \\\n+          sub(\"$(am__global_test_result_rx)\", \"\", line); \\\n+          sub(\"[ \t]*$$\", \"\", line); \\\n+          global_test_result = line; \\\n+        } \\\n+      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n+        copy_in_global_log = 0; \\\n+    }; \\\n+  if (copy_in_global_log) \\\n+    { \\\n+      rst_section(global_test_result \": \" $$0); \\\n+      while ((rc = (getline line < ($$0 \".log\"))) != 0) \\\n+      { \\\n+        if (rc < 0) \\\n+          fatal(\"failed to read from \" $$0 \".log\"); \\\n+        print line; \\\n+      }; \\\n+      printf \"\\n\"; \\\n+    }; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# Restructured Text title.\n+am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n+# Solaris 10 'make', and several other traditional 'make' implementations,\n+# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n+# by disabling -e (using the XSI extension \"set +e\") if it's set.\n+am__sh_e_setup = case $$- in *e*) set +e;; esac\n+# Default flags passed to test drivers.\n+am__common_driver_flags = \\\n+  --color-tests \"$$am__color_tests\" \\\n+  --enable-hard-errors \"$$am__enable_hard_errors\" \\\n+  --expect-failure \"$$am__expect_failure\"\n+# To be inserted before the command running the test.  Creates the\n+# directory for the log if needed.  Stores in $dir the directory\n+# containing $f, in $tst the test, in $log the log.  Executes the\n+# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n+# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n+# will run the test scripts (or their associated LOG_COMPILER, if\n+# thy have one).\n+am__check_pre = \\\n+$(am__sh_e_setup);\t\t\t\t\t\\\n+$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n+$(am__tty_colors);\t\t\t\t\t\\\n+srcdir=$(srcdir); export srcdir;\t\t\t\\\n+case \"$@\" in\t\t\t\t\t\t\\\n+  */*) am__odir=`echo \"./$@\" | sed 's|/[^/]*$$||'`;;\t\\\n+    *) am__odir=.;; \t\t\t\t\t\\\n+esac;\t\t\t\t\t\t\t\\\n+test \"x$$am__odir\" = x\".\" || test -d \"$$am__odir\" \t\\\n+  || $(MKDIR_P) \"$$am__odir\" || exit $$?;\t\t\\\n+if test -f \"./$$f\"; then dir=./;\t\t\t\\\n+elif test -f \"$$f\"; then dir=;\t\t\t\t\\\n+else dir=\"$(srcdir)/\"; fi;\t\t\t\t\\\n+tst=$$dir$$f; log='$@'; \t\t\t\t\\\n+if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n+  am__enable_hard_errors=no; \t\t\t\t\\\n+else\t\t\t\t\t\t\t\\\n+  am__enable_hard_errors=yes; \t\t\t\t\\\n+fi; \t\t\t\t\t\t\t\\\n+case \" $(XFAIL_TESTS) \" in\t\t\t\t\\\n+  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n+    am__expect_failure=yes;;\t\t\t\t\\\n+  *)\t\t\t\t\t\t\t\\\n+    am__expect_failure=no;;\t\t\t\t\\\n+esac; \t\t\t\t\t\t\t\\\n+$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n+# A shell command to get the names of the tests scripts with any registered\n+# extension removed (i.e., equivalently, the names of the test logs, with\n+# the '.log' extension removed).  The result is saved in the shell variable\n+# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n+# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n+# since that might cause problem with VPATH rewrites for suffix-less tests.\n+# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n+am__set_TESTS_bases = \\\n+  bases='$(TEST_LOGS)'; \\\n+  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n+  bases=`echo $$bases`\n+RECHECK_LOGS = $(TEST_LOGS)\n+TEST_SUITE_LOG = test-suite.log\n+TEST_EXTENSIONS = @EXEEXT@ .test\n+LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n+am__set_b = \\\n+  case '$@' in \\\n+    */*) \\\n+      case '$*' in \\\n+        */*) b='$*';; \\\n+          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n+       esac;; \\\n+    *) \\\n+      b='$*';; \\\n+  esac\n+am__test_logs1 = $(TESTS:=.log)\n+am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)\n+TEST_LOGS = $(am__test_logs2:.test.log=.log)\n+TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n+\t$(TEST_LOG_FLAGS)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+am__remove_distdir = \\\n+  if test -d \"$(distdir)\"; then \\\n+    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n+      && rm -rf \"$(distdir)\" \\\n+      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n+  else :; fi\n+am__post_remove_distdir = $(am__remove_distdir)\n+DIST_ARCHIVES = $(distdir).tar.gz\n+GZIP_ENV = --best\n+DIST_TARGETS = dist-gzip\n+distuninstallcheck_listfiles = find . -type f -print\n+am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n+  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\n+distcleancheck_listfiles = find . -type f -print\n+ACLOCAL = @ACLOCAL@\n+AMTAR = @AMTAR@\n+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n+AR = @AR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BUILD_EXEEXT = @BUILD_EXEEXT@\n+CC = @CC@\n+CCDEPMODE = @CCDEPMODE@\n+CFLAGS = @CFLAGS@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+DLLTOOL = @DLLTOOL@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EXEEXT = @EXEEXT@\n+FGREP = @FGREP@\n+GREP = @GREP@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIBTOOL_APP_LDFLAGS = @LIBTOOL_APP_LDFLAGS@\n+LIBUNIVALUE_AGE = @LIBUNIVALUE_AGE@\n+LIBUNIVALUE_CURRENT = @LIBUNIVALUE_CURRENT@\n+LIBUNIVALUE_REVISION = @LIBUNIVALUE_REVISION@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAKEINFO = @MAKEINFO@\n+MANIFEST_TOOL = @MANIFEST_TOOL@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+RANLIB = @RANLIB@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+VERSION = @VERSION@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+exec_prefix = @exec_prefix@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target_alias = @target_alias@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+include_HEADERS = include/univalue.h\n+noinst_HEADERS = lib/univalue_escapes.h lib/univalue_utffilter.h\n+lib_LTLIBRARIES = libunivalue.la\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = pc/libunivalue.pc\n+libunivalue_la_SOURCES = \\\n+\tlib/univalue.cpp \\\n+\tlib/univalue_read.cpp \\\n+\tlib/univalue_write.cpp\n+\n+libunivalue_la_LDFLAGS = \\\n+\t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n+\t-no-undefined\n+\n+libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+GENBIN = gen/gen$(BUILD_EXEEXT)\n+GEN_SRCS = gen/gen.cpp\n+TEST_DATA_DIR = test\n+test_unitester_SOURCES = test/unitester.cpp\n+test_unitester_LDADD = libunivalue.la\n+test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n+test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n+TEST_FILES = \\\n+\t$(TEST_DATA_DIR)/fail10.json \\\n+\t$(TEST_DATA_DIR)/fail11.json \\\n+\t$(TEST_DATA_DIR)/fail12.json \\\n+\t$(TEST_DATA_DIR)/fail13.json \\\n+\t$(TEST_DATA_DIR)/fail14.json \\\n+\t$(TEST_DATA_DIR)/fail15.json \\\n+\t$(TEST_DATA_DIR)/fail16.json \\\n+\t$(TEST_DATA_DIR)/fail17.json \\\n+\t$(TEST_DATA_DIR)/fail18.json \\\n+\t$(TEST_DATA_DIR)/fail19.json \\\n+\t$(TEST_DATA_DIR)/fail1.json \\\n+\t$(TEST_DATA_DIR)/fail20.json \\\n+\t$(TEST_DATA_DIR)/fail21.json \\\n+\t$(TEST_DATA_DIR)/fail22.json \\\n+\t$(TEST_DATA_DIR)/fail23.json \\\n+\t$(TEST_DATA_DIR)/fail24.json \\\n+\t$(TEST_DATA_DIR)/fail25.json \\\n+\t$(TEST_DATA_DIR)/fail26.json \\\n+\t$(TEST_DATA_DIR)/fail27.json \\\n+\t$(TEST_DATA_DIR)/fail28.json \\\n+\t$(TEST_DATA_DIR)/fail29.json \\\n+\t$(TEST_DATA_DIR)/fail2.json \\\n+\t$(TEST_DATA_DIR)/fail30.json \\\n+\t$(TEST_DATA_DIR)/fail31.json \\\n+\t$(TEST_DATA_DIR)/fail32.json \\\n+\t$(TEST_DATA_DIR)/fail33.json \\\n+\t$(TEST_DATA_DIR)/fail34.json \\\n+\t$(TEST_DATA_DIR)/fail35.json \\\n+\t$(TEST_DATA_DIR)/fail36.json \\\n+\t$(TEST_DATA_DIR)/fail37.json \\\n+\t$(TEST_DATA_DIR)/fail38.json \\\n+\t$(TEST_DATA_DIR)/fail39.json \\\n+\t$(TEST_DATA_DIR)/fail40.json \\\n+\t$(TEST_DATA_DIR)/fail41.json \\\n+\t$(TEST_DATA_DIR)/fail3.json \\\n+\t$(TEST_DATA_DIR)/fail4.json \\\n+\t$(TEST_DATA_DIR)/fail5.json \\\n+\t$(TEST_DATA_DIR)/fail6.json \\\n+\t$(TEST_DATA_DIR)/fail7.json \\\n+\t$(TEST_DATA_DIR)/fail8.json \\\n+\t$(TEST_DATA_DIR)/fail9.json \\\n+\t$(TEST_DATA_DIR)/pass1.json \\\n+\t$(TEST_DATA_DIR)/pass2.json \\\n+\t$(TEST_DATA_DIR)/pass3.json \\\n+\t$(TEST_DATA_DIR)/round1.json \\\n+\t$(TEST_DATA_DIR)/round2.json\n+\n+EXTRA_DIST = $(TEST_FILES) $(GEN_SRCS)\n+all: univalue-config.h\n+\t$(MAKE) $(AM_MAKEFLAGS) all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs\n+am--refresh: Makefile\n+\t@:\n+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure:  $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+univalue-config.h: stamp-h1\n+\t@test -f $@ || rm -f stamp-h1\n+\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1\n+\n+stamp-h1: $(srcdir)/univalue-config.h.in $(top_builddir)/config.status\n+\t@rm -f stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status univalue-config.h\n+$(srcdir)/univalue-config.h.in:  $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f univalue-config.h stamp-h1\n+pc/libunivalue.pc: $(top_builddir)/config.status $(top_srcdir)/pc/libunivalue.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+pc/libunivalue-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/pc/libunivalue-uninstalled.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+\n+install-libLTLIBRARIES: $(lib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(libdir)\" || exit 1; \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(libdir)\"; \\\n+\t}\n+\n+uninstall-libLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(libdir)/$$f\"; \\\n+\tdone\n+\n+clean-libLTLIBRARIES:\n+\t-test -z \"$(lib_LTLIBRARIES)\" || rm -f $(lib_LTLIBRARIES)\n+\t@list='$(lib_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+lib/$(am__dirstamp):\n+\t@$(MKDIR_P) lib\n+\t@: > lib/$(am__dirstamp)\n+lib/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) lib/$(DEPDIR)\n+\t@: > lib/$(DEPDIR)/$(am__dirstamp)\n+lib/libunivalue_la-univalue.lo: lib/$(am__dirstamp) \\\n+\tlib/$(DEPDIR)/$(am__dirstamp)\n+lib/libunivalue_la-univalue_read.lo: lib/$(am__dirstamp) \\\n+\tlib/$(DEPDIR)/$(am__dirstamp)\n+lib/libunivalue_la-univalue_write.lo: lib/$(am__dirstamp) \\\n+\tlib/$(DEPDIR)/$(am__dirstamp)\n+\n+libunivalue.la: $(libunivalue_la_OBJECTS) $(libunivalue_la_DEPENDENCIES) $(EXTRA_libunivalue_la_DEPENDENCIES) \n+\t$(AM_V_CXXLD)$(libunivalue_la_LINK) -rpath $(libdir) $(libunivalue_la_OBJECTS) $(libunivalue_la_LIBADD) $(LIBS)\n+\n+clean-noinstPROGRAMS:\n+\t@list='$(noinst_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list || exit $$?; \\\n+\ttest -n \"$(EXEEXT)\" || exit 0; \\\n+\tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list\n+test/$(am__dirstamp):\n+\t@$(MKDIR_P) test\n+\t@: > test/$(am__dirstamp)\n+test/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) test/$(DEPDIR)\n+\t@: > test/$(DEPDIR)/$(am__dirstamp)\n+test/test_unitester-unitester.$(OBJEXT): test/$(am__dirstamp) \\\n+\ttest/$(DEPDIR)/$(am__dirstamp)\n+\n+test/unitester$(EXEEXT): $(test_unitester_OBJECTS) $(test_unitester_DEPENDENCIES) $(EXTRA_test_unitester_DEPENDENCIES) test/$(am__dirstamp)\n+\t@rm -f test/unitester$(EXEEXT)\n+\t$(AM_V_CXXLD)$(test_unitester_LINK) $(test_unitester_OBJECTS) $(test_unitester_LDADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\t-rm -f lib/*.$(OBJEXT)\n+\t-rm -f lib/*.lo\n+\t-rm -f test/*.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libunivalue_la-univalue.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libunivalue_la-univalue_read.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/libunivalue_la-univalue_write.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test_unitester-unitester.Po@am__quote@\n+\n+.cpp.o:\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n+@am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+@am__fastdepCXX_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<\n+\n+.cpp.obj:\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.obj$$||'`;\\\n+@am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\\\n+@am__fastdepCXX_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.cpp.lo:\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.lo$$||'`;\\\n+@am__fastdepCXX_TRUE@\t$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+@am__fastdepCXX_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Plo\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<\n+\n+lib/libunivalue_la-univalue.lo: lib/univalue.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libunivalue_la-univalue.lo -MD -MP -MF lib/$(DEPDIR)/libunivalue_la-univalue.Tpo -c -o lib/libunivalue_la-univalue.lo `test -f 'lib/univalue.cpp' || echo '$(srcdir)/'`lib/univalue.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libunivalue_la-univalue.Tpo lib/$(DEPDIR)/libunivalue_la-univalue.Plo\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='lib/univalue.cpp' object='lib/libunivalue_la-univalue.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libunivalue_la-univalue.lo `test -f 'lib/univalue.cpp' || echo '$(srcdir)/'`lib/univalue.cpp\n+\n+lib/libunivalue_la-univalue_read.lo: lib/univalue_read.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libunivalue_la-univalue_read.lo -MD -MP -MF lib/$(DEPDIR)/libunivalue_la-univalue_read.Tpo -c -o lib/libunivalue_la-univalue_read.lo `test -f 'lib/univalue_read.cpp' || echo '$(srcdir)/'`lib/univalue_read.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libunivalue_la-univalue_read.Tpo lib/$(DEPDIR)/libunivalue_la-univalue_read.Plo\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='lib/univalue_read.cpp' object='lib/libunivalue_la-univalue_read.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libunivalue_la-univalue_read.lo `test -f 'lib/univalue_read.cpp' || echo '$(srcdir)/'`lib/univalue_read.cpp\n+\n+lib/libunivalue_la-univalue_write.lo: lib/univalue_write.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libunivalue_la-univalue_write.lo -MD -MP -MF lib/$(DEPDIR)/libunivalue_la-univalue_write.Tpo -c -o lib/libunivalue_la-univalue_write.lo `test -f 'lib/univalue_write.cpp' || echo '$(srcdir)/'`lib/univalue_write.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libunivalue_la-univalue_write.Tpo lib/$(DEPDIR)/libunivalue_la-univalue_write.Plo\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='lib/univalue_write.cpp' object='lib/libunivalue_la-univalue_write.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libunivalue_la-univalue_write.lo `test -f 'lib/univalue_write.cpp' || echo '$(srcdir)/'`lib/univalue_write.cpp\n+\n+test/test_unitester-unitester.o: test/unitester.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -MT test/test_unitester-unitester.o -MD -MP -MF test/$(DEPDIR)/test_unitester-unitester.Tpo -c -o test/test_unitester-unitester.o `test -f 'test/unitester.cpp' || echo '$(srcdir)/'`test/unitester.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_unitester-unitester.Tpo test/$(DEPDIR)/test_unitester-unitester.Po\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='test/unitester.cpp' object='test/test_unitester-unitester.o' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -c -o test/test_unitester-unitester.o `test -f 'test/unitester.cpp' || echo '$(srcdir)/'`test/unitester.cpp\n+\n+test/test_unitester-unitester.obj: test/unitester.cpp\n+@am__fastdepCXX_TRUE@\t$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -MT test/test_unitester-unitester.obj -MD -MP -MF test/$(DEPDIR)/test_unitester-unitester.Tpo -c -o test/test_unitester-unitester.obj `if test -f 'test/unitester.cpp'; then $(CYGPATH_W) 'test/unitester.cpp'; else $(CYGPATH_W) '$(srcdir)/test/unitester.cpp'; fi`\n+@am__fastdepCXX_TRUE@\t$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_unitester-unitester.Tpo test/$(DEPDIR)/test_unitester-unitester.Po\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\t$(AM_V_CXX)source='test/unitester.cpp' object='test/test_unitester-unitester.obj' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCXX_FALSE@\t$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -c -o test/test_unitester-unitester.obj `if test -f 'test/unitester.cpp'; then $(CYGPATH_W) 'test/unitester.cpp'; else $(CYGPATH_W) '$(srcdir)/test/unitester.cpp'; fi`\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\t-rm -rf lib/.libs lib/_libs\n+\t-rm -rf test/.libs test/_libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+install-pkgconfigDATA: $(pkgconfig_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-pkgconfigDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\n+install-includeHEADERS: $(include_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(includedir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(includedir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-includeHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-am\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-am\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscope: cscope.files\n+\ttest ! -s cscope.files \\\n+\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\n+clean-cscope:\n+\t-rm -f cscope.files\n+cscope.files: clean-cscope cscopelist\n+cscopelist: cscopelist-am\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+# Recover from deleted '.trs' file; this should ensure that\n+# \"rm -f foo.log; make foo.trs\" re-run 'foo.test', and re-create\n+# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n+# to avoid problems with \"make -n\".\n+.log.trs:\n+\trm -f $< $@\n+\t$(MAKE) $(AM_MAKEFLAGS) $<\n+\n+# Leading 'am--fnord' is there to ensure the list of targets does not\n+# expand to empty, as could happen e.g. with make check TESTS=''.\n+am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n+am--force-recheck:\n+\t@:\n+\n+$(TEST_SUITE_LOG): $(TEST_LOGS)\n+\t@$(am__set_TESTS_bases); \\\n+\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n+\tredo_bases=`for i in $$bases; do \\\n+\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n+\t            done`; \\\n+\tif test -n \"$$redo_bases\"; then \\\n+\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n+\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n+\t  if $(am__make_dryrun); then :; else \\\n+\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n+\t  fi; \\\n+\tfi; \\\n+\tif test -n \"$$am__remaking_logs\"; then \\\n+\t  echo \"fatal: making $(TEST_SUITE_LOG): possible infinite\" \\\n+\t       \"recursion detected\" >&2; \\\n+\telse \\\n+\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n+\tfi; \\\n+\tif $(am__make_dryrun); then :; else \\\n+\t  st=0;  \\\n+\t  errmsg=\"fatal: making $(TEST_SUITE_LOG): failed to create\"; \\\n+\t  for i in $$redo_bases; do \\\n+\t    test -f $$i.trs && test -r $$i.trs \\\n+\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n+\t    test -f $$i.log && test -r $$i.log \\\n+\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n+\t  done; \\\n+\t  test $$st -eq 0 || exit 1; \\\n+\tfi\n+\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n+\tws='[ \t]'; \\\n+\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n+\ttest -n \"$$results\" || results=/dev/null; \\\n+\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n+\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n+\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n+\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n+\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n+\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n+\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n+\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n+\t  success=true; \\\n+\telse \\\n+\t  success=false; \\\n+\tfi; \\\n+\tbr='==================='; br=$$br$$br$$br$$br; \\\n+\tresult_count () \\\n+\t{ \\\n+\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n+\t      maybe_colorize=yes; \\\n+\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n+\t      maybe_colorize=no; \\\n+\t    else \\\n+\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n+\t    fi; \\\n+\t    shift; \\\n+\t    desc=$$1 count=$$2; \\\n+\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n+\t      color_start=$$3 color_end=$$std; \\\n+\t    else \\\n+\t      color_start= color_end=; \\\n+\t    fi; \\\n+\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n+\t}; \\\n+\tcreate_testsuite_report () \\\n+\t{ \\\n+\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n+\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n+\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n+\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n+\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n+\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n+\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n+\t}; \\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n+\t    $(am__rst_title);\t\t\t\t\t\t\\\n+\t  create_testsuite_report --no-color;\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n+\t    | $(am__create_global_log);\t\t\t\t\t\\\n+\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n+\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n+\tif $$success; then\t\t\t\t\t\t\\\n+\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n+\t else\t\t\t\t\t\t\t\t\\\n+\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n+\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n+\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n+\tif $$success; then :; else\t\t\t\t\t\\\n+\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n+\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n+\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n+\t  fi;\t\t\t\t\t\t\t\t\\\n+\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\t$$success || exit 1\n+\n+check-TESTS:\n+\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n+\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n+\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?;\n+recheck: all \n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tbases=`for i in $$bases; do echo $$i; done \\\n+\t         | $(am__list_recheck_tests)` || exit 1; \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\tlog_list=`echo $$log_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n+\t        am__force_recheck=am--force-recheck \\\n+\t        TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?\n+test/unitester.log: test/unitester$(EXEEXT)\n+\t@p='test/unitester$(EXEEXT)'; \\\n+\tb='test/unitester'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test.log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+@am__EXEEXT_TRUE@.test$(EXEEXT).log:\n+@am__EXEEXT_TRUE@\t@p='$<'; \\\n+@am__EXEEXT_TRUE@\t$(am__set_b); \\\n+@am__EXEEXT_TRUE@\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+@am__EXEEXT_TRUE@\t--log-file $$b.log --trs-file $$b.trs \\\n+@am__EXEEXT_TRUE@\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+@am__EXEEXT_TRUE@\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+\n+distdir: $(DISTFILES)\n+\t$(am__remove_distdir)\n+\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t-test -n \"$(am__skip_mode_fix)\" \\\n+\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n+\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r \"$(distdir)\"\n+dist-gzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-bzip2: distdir\n+\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n+\t$(am__post_remove_distdir)\n+\n+dist-lzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n+\t$(am__post_remove_distdir)\n+\n+dist-xz: distdir\n+\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n+\t$(am__post_remove_distdir)\n+\n+dist-tarZ: distdir\n+\t@echo WARNING: \"Support for shar distribution archives is\" \\\n+\t               \"deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n+\t$(am__post_remove_distdir)\n+\n+dist-shar: distdir\n+\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n+\t\t       \"legacy program 'compress' is deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-zip: distdir\n+\t-rm -f $(distdir).zip\n+\tzip -rq $(distdir).zip $(distdir)\n+\t$(am__post_remove_distdir)\n+\n+dist dist-all:\n+\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n+\t$(am__post_remove_distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\tcase '$(DIST_ARCHIVES)' in \\\n+\t*.tar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n+\t*.tar.bz2*) \\\n+\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n+\t*.tar.lz*) \\\n+\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n+\t*.tar.xz*) \\\n+\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n+\t*.tar.Z*) \\\n+\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n+\t*.shar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\\n+\t*.zip*) \\\n+\t  unzip $(distdir).zip ;;\\\n+\tesac\n+\tchmod -R a-w $(distdir)\n+\tchmod u+w $(distdir)\n+\tmkdir $(distdir)/_build $(distdir)/_inst\n+\tchmod a-w $(distdir)\n+\ttest -d $(distdir)/_build || exit 0; \\\n+\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n+\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n+\t  && am__cwd=`pwd` \\\n+\t  && $(am__cd) $(distdir)/_build \\\n+\t  && ../configure \\\n+\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    --srcdir=.. --prefix=\"$$dc_install_base\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n+\t        distuninstallcheck \\\n+\t  && chmod -R a-w \"$$dc_install_base\" \\\n+\t  && ({ \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n+\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n+\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n+\t  && rm -rf \"$$dc_destdir\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n+\t  && rm -rf $(DIST_ARCHIVES) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n+\t  && cd \"$$am__cwd\" \\\n+\t  || exit 1\n+\t$(am__post_remove_distdir)\n+\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n+\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n+\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\n+distuninstallcheck:\n+\t@test -n '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: trying to run $@ with an empty' \\\n+\t       '$$(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n+\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n+\t        if test -n \"$(DESTDIR)\"; then \\\n+\t          echo \"  (check DESTDIR support)\"; \\\n+\t        fi ; \\\n+\t        $(distuninstallcheck_listfiles) ; \\\n+\t        exit 1; } >&2\n+distcleancheck: distclean\n+\t@if test '$(srcdir)' = . ; then \\\n+\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n+\t  exit 1 ; \\\n+\tfi\n+\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n+\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n+\t       $(distcleancheck_listfiles) ; \\\n+\t       exit 1; } >&2\n+check-am: all-am\n+\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) \\\n+\t\tunivalue-config.h\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(includedir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\t-test -z \"$(TEST_LOGS)\" || rm -f $(TEST_LOGS)\n+\t-test -z \"$(TEST_LOGS:.log=.trs)\" || rm -f $(TEST_LOGS:.log=.trs)\n+\t-test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-rm -f lib/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f lib/$(am__dirstamp)\n+\t-rm -f test/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f test/$(am__dirstamp)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \\\n+\tclean-noinstPROGRAMS mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf lib/$(DEPDIR) test/$(DEPDIR)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-includeHEADERS install-pkgconfigDATA\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-libLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -rf lib/$(DEPDIR) test/$(DEPDIR)\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+.MAKE: all check-am install-am install-strip\n+\n+.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \\\n+\tcheck-am clean clean-cscope clean-generic clean-libLTLIBRARIES \\\n+\tclean-libtool clean-noinstPROGRAMS cscope cscopelist-am ctags \\\n+\tctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \\\n+\tdist-shar dist-tarZ dist-xz dist-zip distcheck distclean \\\n+\tdistclean-compile distclean-generic distclean-hdr \\\n+\tdistclean-libtool distclean-tags distcleancheck distdir \\\n+\tdistuninstallcheck dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-data install-data-am install-dvi \\\n+\tinstall-dvi-am install-exec install-exec-am install-html \\\n+\tinstall-html-am install-includeHEADERS install-info \\\n+\tinstall-info-am install-libLTLIBRARIES install-man install-pdf \\\n+\tinstall-pdf-am install-pkgconfigDATA install-ps install-ps-am \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n+\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n+\tpdf pdf-am ps ps-am recheck tags tags-am uninstall \\\n+\tuninstall-am uninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+.PHONY: gen\n+.INTERMEDIATE: $(GENBIN)\n+\n+$(GENBIN): $(GEN_SRCS)\n+\t@echo Building $@\n+\t$(AM_V_at)c++ -I$(top_srcdir)/include -o $@ $<\n+\n+gen: lib/univalue_escapes.h $(GENBIN)\n+\t@echo Updating $<\n+\t$(AM_V_at)$(GENBIN) > lib/univalue_escapes.h\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "f3aab8b70af9c1531a2a4478f0aab9600b706cc8",
        "filename": "src/univalue/univalue-config.h.in",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/univalue/univalue-config.h.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9db76c0743e31cdf2ee0b724f27738e4ddbbddab/src/univalue/univalue-config.h.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue-config.h.in?ref=9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "patch": "@@ -0,0 +1,62 @@\n+/* univalue-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#undef HAVE_DLFCN_H\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#undef LT_OBJDIR\n+\n+/* Name of package */\n+#undef PACKAGE\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Version number of package */\n+#undef VERSION"
      }
    ]
  },
  {
    "sha": "ef3d4522857db523809fdbced15cb18ab62de853",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjNkNDUyMjg1N2RiNTIzODA5ZmRiY2VkMTVjYjE4YWI2MmRlODUz",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T16:53:58Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T17:03:02Z"
      },
      "message": "CONFIG_SITE=$PWD/depends/i686-w64-mingw32/share/config.site ./configure --enable-debug (Bash on Ubuntu on Windows)",
      "tree": {
        "sha": "095d0e7c6e5205f4e51b1d7d1612ff4826771ce7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/095d0e7c6e5205f4e51b1d7d1612ff4826771ce7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef3d4522857db523809fdbced15cb18ab62de853",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef3d4522857db523809fdbced15cb18ab62de853",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef3d4522857db523809fdbced15cb18ab62de853",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef3d4522857db523809fdbced15cb18ab62de853/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9db76c0743e31cdf2ee0b724f27738e4ddbbddab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9db76c0743e31cdf2ee0b724f27738e4ddbbddab"
      }
    ],
    "stats": {
      "total": 25635,
      "additions": 25635,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b7fcc4a24c24506d5d876c29ff75d7d25510da14",
        "filename": "Makefile",
        "status": "added",
        "additions": 1244,
        "deletions": 0,
        "changes": 1244,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,1244 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# Makefile.  Generated from Makefile.in by configure.\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+\n+\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/bitcoin\n+pkgincludedir = $(includedir)/bitcoin\n+pkglibdir = $(libdir)/bitcoin\n+pkglibexecdir = $(libexecdir)/bitcoin\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = x86_64-unknown-linux-gnu\n+host_triplet = i686-w64-mingw32\n+am__append_1 = doc/man\n+subdir = .\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(top_srcdir)/src/config/bitcoin-config.h.in \\\n+\t$(srcdir)/libbitcoinconsensus.pc.in \\\n+\t$(top_srcdir)/share/setup.nsi.in \\\n+\t$(top_srcdir)/share/qt/Info.plist.in \\\n+\t$(top_srcdir)/src/test/buildenv.py.in \\\n+\t$(top_srcdir)/qa/pull-tester/tests_config.py.in \\\n+\t$(top_srcdir)/contrib/devtools/split-debug.sh.in \\\n+\t$(top_srcdir)/qa/pull-tester/rpc-tests.py \\\n+\t$(dist_noinst_SCRIPTS) COPYING build-aux/compile \\\n+\tbuild-aux/config.guess build-aux/config.sub build-aux/depcomp \\\n+\tbuild-aux/install-sh build-aux/missing build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/compile \\\n+\t$(top_srcdir)/build-aux/config.guess \\\n+\t$(top_srcdir)/build-aux/config.sub \\\n+\t$(top_srcdir)/build-aux/install-sh \\\n+\t$(top_srcdir)/build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/missing\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_pthread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \\\n+\t$(top_srcdir)/build-aux/m4/l_atomic.m4 \\\n+\t$(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h\n+CONFIG_CLEAN_FILES = libbitcoinconsensus.pc share/setup.nsi \\\n+\tshare/qt/Info.plist src/test/buildenv.py \\\n+\tqa/pull-tester/tests_config.py contrib/devtools/split-debug.sh\n+CONFIG_CLEAN_VPATH_FILES = qa/pull-tester/rpc-tests.py\n+SCRIPTS = $(dist_noinst_SCRIPTS)\n+AM_V_P = $(am__v_P_$(V))\n+am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_$(V))\n+am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_$(V))\n+am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n+am__v_at_0 = @\n+am__v_at_1 = \n+SOURCES =\n+DIST_SOURCES =\n+RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\\n+\tctags-recursive dvi-recursive html-recursive info-recursive \\\n+\tinstall-data-recursive install-dvi-recursive \\\n+\tinstall-exec-recursive install-html-recursive \\\n+\tinstall-info-recursive install-pdf-recursive \\\n+\tinstall-ps-recursive install-recursive installcheck-recursive \\\n+\tinstalldirs-recursive pdf-recursive ps-recursive \\\n+\ttags-recursive uninstall-recursive\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(pkgconfigdir)\"\n+DATA = $(pkgconfig_DATA)\n+RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n+  distclean-recursive maintainer-clean-recursive\n+am__recursive_targets = \\\n+  $(RECURSIVE_TARGETS) \\\n+  $(RECURSIVE_CLEAN_TARGETS) \\\n+  $(am__extra_recursive_targets)\n+AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\\n+\tcscope distdir dist dist-all distcheck\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+CSCOPE = cscope\n+DIST_SUBDIRS = src doc/man\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+am__remove_distdir = \\\n+  if test -d \"$(distdir)\"; then \\\n+    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n+      && rm -rf \"$(distdir)\" \\\n+      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n+  else :; fi\n+am__post_remove_distdir = $(am__remove_distdir)\n+am__relativize = \\\n+  dir0=`pwd`; \\\n+  sed_first='s,^\\([^/]*\\)/.*$$,\\1,'; \\\n+  sed_rest='s,^[^/]*/*,,'; \\\n+  sed_last='s,^.*/\\([^/]*\\)$$,\\1,'; \\\n+  sed_butlast='s,/*[^/]*$$,,'; \\\n+  while test -n \"$$dir1\"; do \\\n+    first=`echo \"$$dir1\" | sed -e \"$$sed_first\"`; \\\n+    if test \"$$first\" != \".\"; then \\\n+      if test \"$$first\" = \"..\"; then \\\n+        dir2=`echo \"$$dir0\" | sed -e \"$$sed_last\"`/\"$$dir2\"; \\\n+        dir0=`echo \"$$dir0\" | sed -e \"$$sed_butlast\"`; \\\n+      else \\\n+        first2=`echo \"$$dir2\" | sed -e \"$$sed_first\"`; \\\n+        if test \"$$first2\" = \"$$first\"; then \\\n+          dir2=`echo \"$$dir2\" | sed -e \"$$sed_rest\"`; \\\n+        else \\\n+          dir2=\"../$$dir2\"; \\\n+        fi; \\\n+        dir0=\"$$dir0\"/\"$$first\"; \\\n+      fi; \\\n+    fi; \\\n+    dir1=`echo \"$$dir1\" | sed -e \"$$sed_rest\"`; \\\n+  done; \\\n+  reldir=\"$$dir2\"\n+DIST_ARCHIVES = $(distdir).tar.gz\n+DIST_TARGETS = dist-gzip\n+distuninstallcheck_listfiles = find . -type f -print\n+am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n+  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\n+distcleancheck_listfiles = find . -type f -print\n+ACLOCAL = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing aclocal-1.14\n+AMTAR = $${TAR-tar}\n+AM_DEFAULT_VERBOSITY = 0\n+AR = /usr/bin/i686-w64-mingw32-ar\n+AUTOCONF = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing autoconf\n+AUTOHEADER = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing autoheader\n+AUTOMAKE = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing automake-1.14\n+AWK = gawk\n+BDB_CFLAGS = \n+BDB_CPPFLAGS = \n+BDB_LIBS = -ldb_cxx-4.8\n+BITCOIN_CLI_NAME = bitcoin-cli\n+BITCOIN_DAEMON_NAME = bitcoind\n+BITCOIN_GUI_NAME = bitcoin-qt\n+BITCOIN_TX_NAME = bitcoin-tx\n+BOOST_CHRONO_LIB = -lboost_chrono-mt-s\n+BOOST_CPPFLAGS = -mthreads -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include\n+BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt-s\n+BOOST_LDFLAGS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\n+BOOST_LIBS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib -lboost_system-mt-s -lboost_filesystem-mt-s -lboost_program_options-mt-s -lboost_thread_win32-mt-s -lboost_chrono-mt-s\n+BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt-s\n+BOOST_SYSTEM_LIB = -lboost_system-mt-s\n+BOOST_THREAD_LIB = -lboost_thread_win32-mt-s\n+BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt-s\n+BREW = \n+CC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-gcc\n+CCACHE = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache\n+CCDEPMODE = depmode=gcc3\n+CFLAGS = -pipe -O2  -g3 -O0\n+CLIENT_VERSION_BUILD = 0\n+CLIENT_VERSION_IS_RELEASE = false\n+CLIENT_VERSION_MAJOR = 0\n+CLIENT_VERSION_MINOR = 13\n+CLIENT_VERSION_REVISION = 99\n+COPYRIGHT_HOLDERS = The %s developers\n+COPYRIGHT_HOLDERS_FINAL = The Bitcoin Core developers\n+COPYRIGHT_HOLDERS_SUBSTITUTION = Bitcoin Core\n+COPYRIGHT_YEAR = 2017\n+CPP = i686-w64-mingw32-gcc -E\n+CPPFILT = /usr/bin/i686-w64-mingw32-c++filt\n+CPPFLAGS = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/  -DDEBUG -DDEBUG_LOCKORDER -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_FILE_OFFSET_BITS=64\n+CRYPTO_CFLAGS = \n+CRYPTO_LIBS = -lcrypto\n+CXX = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-g++ -std=c++11\n+CXXCPP = i686-w64-mingw32-g++ -std=c++11 -E\n+CXXDEPMODE = depmode=gcc3\n+CXXFLAGS = -pipe -O2  -g3 -O0\n+CYGPATH_W = echo\n+DEFS = -DHAVE_CONFIG_H\n+DEPDIR = .deps\n+DLLTOOL = i686-w64-mingw32-dlltool\n+DSYMUTIL = \n+DUMPBIN = \n+ECHO_C = \n+ECHO_N = -n\n+ECHO_T = \n+EGREP = /bin/grep -E\n+EVENT_CFLAGS = \n+EVENT_LIBS = -levent\n+EVENT_PTHREADS_CFLAGS = \n+EVENT_PTHREADS_LIBS = \n+EXEEXT = .exe\n+EXTENDED_RPC_TESTS = \n+FGREP = /bin/grep -F\n+GCOV = /usr/bin/i686-w64-mingw32-gcov\n+GENHTML = \n+GENISOIMAGE = \n+GIT = /usr/bin/git\n+GREP = /bin/grep\n+HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2\n+HARDENED_CXXFLAGS =  -Wstack-protector -fstack-protector-all\n+HARDENED_LDFLAGS =  -Wl,--dynamicbase -Wl,--nxcompat\n+HAVE_CXX11 = 1\n+HEXDUMP = /usr/bin/hexdump\n+IMAGEMAGICK_CONVERT = \n+INSTALL = /usr/bin/install -c\n+INSTALLNAMETOOL = \n+INSTALL_DATA = ${INSTALL} -m 644\n+INSTALL_PROGRAM = ${INSTALL}\n+INSTALL_SCRIPT = ${INSTALL}\n+INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n+LCOV = \n+LD = /usr/bin/i686-w64-mingw32-ld\n+LDFLAGS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib  -Wl,--large-address-aware\n+LEVELDB_CPPFLAGS = \n+LEVELDB_TARGET_FLAGS = -DOS_WINDOWS\n+LIBLEVELDB = \n+LIBMEMENV = \n+LIBOBJS = \n+LIBS = -lQt5PlatformSupport -lssp -lcrypt32 -liphlpapi -lshlwapi -lmswsock -lws2_32 -ladvapi32 -lrpcrt4 -luuid -loleaut32 -lole32 -lcomctl32 -lshell32 -lwinmm -lwinspool -lcomdlg32 -lgdi32 -luser32 -lkernel32 -lmingwthrd \n+LIBTOOL = $(SHELL) $(top_builddir)/libtool\n+LIBTOOL_APP_LDFLAGS =  -all-static\n+LIPO = \n+LN_S = ln -s\n+LRELEASE = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/lrelease\n+LTLIBOBJS = \n+LUPDATE = \n+MAINT = \n+MAKEINFO = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing makeinfo\n+MAKENSIS = none\n+MANIFEST_TOOL = :\n+MINIUPNPC_CPPFLAGS = -DSTATICLIB -DMINIUPNP_STATICLIB\n+MINIUPNPC_LIBS = -lminiupnpc\n+MKDIR_P = /bin/mkdir -p\n+MOC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/moc\n+MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)\n+NM = i686-w64-mingw32-nm\n+NMEDIT = \n+OBJCOPY = /usr/bin/i686-w64-mingw32-objcopy\n+OBJCXX = i686-w64-mingw32-g++ -std=c++11\n+OBJCXXDEPMODE = depmode=gcc3\n+OBJCXXFLAGS = \n+OBJDUMP = i686-w64-mingw32-objdump\n+OBJEXT = o\n+OTOOL = \n+OTOOL64 = \n+PACKAGE = bitcoin\n+PACKAGE_BUGREPORT = https://github.com/bitcoin/bitcoin/issues\n+PACKAGE_NAME = Bitcoin Core\n+PACKAGE_STRING = Bitcoin Core 0.13.99\n+PACKAGE_TARNAME = bitcoin\n+PACKAGE_URL = https://bitcoincore.org/\n+PACKAGE_VERSION = 0.13.99\n+PATH_SEPARATOR = :\n+PIC_FLAGS = \n+PIE_FLAGS = \n+PKG_CONFIG = /usr/bin/pkg-config --static\n+PKG_CONFIG_LIBDIR = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib/pkgconfig\n+PKG_CONFIG_PATH = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../share/pkgconfig\n+PORT = \n+PROTOBUF_CFLAGS = \n+PROTOBUF_LIBS = -lprotobuf\n+PROTOC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/protoc\n+PTHREAD_CC = i686-w64-mingw32-gcc\n+PTHREAD_CFLAGS = -pthread\n+PTHREAD_LIBS = \n+PYTHON = /usr/bin/python3.4\n+PYTHONPATH = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/lib/python/dist-packages:\n+QR_CFLAGS = \n+QR_LIBS = -lqrencode\n+QTPLATFORM_CFLAGS = \n+QTPLATFORM_LIBS = \n+QTPRINT_CFLAGS = \n+QTPRINT_LIBS = \n+QTXCBQPA_CFLAGS = \n+QTXCBQPA_LIBS = \n+QT_CFLAGS = \n+QT_DBUS_CFLAGS = \n+QT_DBUS_INCLUDES = \n+QT_DBUS_LIBS = -lQt5DBus -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\n+QT_INCLUDES = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtCore -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtGui -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtWidgets -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtNetwork -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtTest -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtDBus\n+QT_LDFLAGS =  -mwindows\n+QT_LIBS = -lqwindows -lQt5Widgets -lQt5Network -lQt5Gui     -lQt5Core    -lqtharfbuzzng -lqtpcre -lqtpng -lz  -limm32  -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../plugins/platforms\n+QT_PIE_FLAGS = \n+QT_SELECT = qt5\n+QT_TEST_CFLAGS = \n+QT_TEST_INCLUDES = \n+QT_TEST_LIBS = -lQt5Test -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\n+QT_TRANSLATION_DIR = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../translations\n+RANLIB = /usr/bin/i686-w64-mingw32-ranlib\n+RCC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/rcc\n+READELF = /usr/bin/i686-w64-mingw32-readelf\n+RELDFLAGS = \n+RSVG_CONVERT = \n+SED = /bin/sed\n+SET_MAKE = \n+SHELL = /bin/bash\n+SSL_CFLAGS = \n+SSL_LIBS = -lssl\n+STRIP = /usr/bin/i686-w64-mingw32-strip\n+TESTDEFS = \n+TIFFCP = \n+UIC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/uic\n+UNIVALUE_CFLAGS = -I$(srcdir)/univalue/include\n+UNIVALUE_LIBS = univalue/libunivalue.la\n+USE_QRCODE = \n+USE_UPNP = \n+VERSION = 0.13.99\n+WINDOWS_BITS = 32\n+WINDRES = /usr/bin/i686-w64-mingw32-windres\n+X11XCB_CFLAGS = \n+X11XCB_LIBS = \n+XGETTEXT = \n+ZMQ_CFLAGS =  -DZMQ_STATIC\n+ZMQ_LIBS = -lzmq\n+abs_builddir = /mnt/c/opensource/bitcoin-msvc\n+abs_srcdir = /mnt/c/opensource/bitcoin-msvc\n+abs_top_builddir = /mnt/c/opensource/bitcoin-msvc\n+abs_top_srcdir = /mnt/c/opensource/bitcoin-msvc\n+ac_ct_AR = \n+ac_ct_CC = \n+ac_ct_CXX = \n+ac_ct_DUMPBIN = \n+ac_ct_OBJCXX = \n+am__include = include\n+am__leading_dot = .\n+am__quote = \n+am__tar = $${TAR-tar} chof - \"$$tardir\"\n+am__untar = $${TAR-tar} xf -\n+ax_pthread_config = \n+bindir = ${exec_prefix}/bin\n+build = x86_64-unknown-linux-gnu\n+build_alias = \n+build_cpu = x86_64\n+build_os = linux-gnu\n+build_vendor = unknown\n+builddir = .\n+datadir = ${datarootdir}\n+datarootdir = ${prefix}/share\n+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}\n+dvidir = ${docdir}\n+exec_prefix = ${prefix}\n+host = i686-w64-mingw32\n+host_alias = i686-w64-mingw32\n+host_cpu = i686\n+host_os = mingw32\n+host_vendor = w64\n+htmldir = ${docdir}\n+includedir = ${prefix}/include\n+infodir = ${datarootdir}/info\n+install_sh = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/install-sh\n+libdir = ${exec_prefix}/lib\n+libexecdir = ${exec_prefix}/libexec\n+localedir = ${datarootdir}/locale\n+localstatedir = ${prefix}/var\n+mandir = ${datarootdir}/man\n+mkdir_p = $(MKDIR_P)\n+oldincludedir = /usr/include\n+pdfdir = ${docdir}\n+prefix = /usr/local\n+program_transform_name = s,x,x,\n+psdir = ${docdir}\n+sbindir = ${exec_prefix}/sbin\n+sharedstatedir = ${prefix}/com\n+srcdir = .\n+subdirs =  src/univalue src/secp256k1\n+sysconfdir = ${prefix}/etc\n+target_alias = \n+top_build_prefix = \n+top_builddir = .\n+top_srcdir = .\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+SUBDIRS = src $(am__append_1)\n+GZIP_ENV = \"-9n\"\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libbitcoinconsensus.pc\n+BITCOIND_BIN = $(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN = $(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN = $(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n+BITCOIN_WIN_INSTALLER = $(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+empty := \n+space := $(empty) $(empty)\n+OSX_APP = Bitcoin-Qt.app\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG = background.svg\n+OSX_BACKGROUND_IMAGE = background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS = 36 72\n+OSX_DSSTORE_GEN = $(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n+OSX_DEPLOY_SCRIPT = $(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST = $(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_INSTALLER_ICONS = $(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST = $(top_builddir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n+DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n+\t       $(top_srcdir)/contrib/init \\\n+\t       $(top_srcdir)/contrib/rpm\n+\n+BIN_CHECKS = $(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n+\n+COVERAGE_INFO = baseline_filtered_combined.info baseline.info \\\n+  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info rpc_test.info rpc_test_filtered.info \\\n+  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+\n+OSX_APP_BUILT = $(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+\n+APP_DIST_DIR = $(top_builddir)/dist\n+APP_DIST_EXTRAS = $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+dist_noinst_SCRIPTS = autogen.sh\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+# This file is problematic for out-of-tree builds if it exists.\n+DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n+DISTCHECK_CONFIGURE_FLAGS = --enable-man\n+all: all-recursive\n+\n+.SUFFIXES:\n+am--refresh: Makefile\n+\t@:\n+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure:  $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+src/config/bitcoin-config.h: src/config/stamp-h1\n+\t@test -f $@ || rm -f src/config/stamp-h1\n+\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/config/stamp-h1\n+\n+src/config/stamp-h1: $(top_srcdir)/src/config/bitcoin-config.h.in $(top_builddir)/config.status\n+\t@rm -f src/config/stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status src/config/bitcoin-config.h\n+$(top_srcdir)/src/config/bitcoin-config.h.in:  $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f src/config/stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f src/config/bitcoin-config.h src/config/stamp-h1\n+libbitcoinconsensus.pc: $(top_builddir)/config.status $(srcdir)/libbitcoinconsensus.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+share/setup.nsi: $(top_builddir)/config.status $(top_srcdir)/share/setup.nsi.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+share/qt/Info.plist: $(top_builddir)/config.status $(top_srcdir)/share/qt/Info.plist.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+src/test/buildenv.py: $(top_builddir)/config.status $(top_srcdir)/src/test/buildenv.py.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+qa/pull-tester/tests_config.py: $(top_builddir)/config.status $(top_srcdir)/qa/pull-tester/tests_config.py.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+contrib/devtools/split-debug.sh: $(top_builddir)/config.status $(top_srcdir)/contrib/devtools/split-debug.sh.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+install-pkgconfigDATA: $(pkgconfig_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-pkgconfigDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\n+\n+# This directory's subdirectories are mostly independent; you can cd\n+# into them and run 'make' without going through this Makefile.\n+# To change the values of 'make' variables: instead of editing Makefiles,\n+# (1) if the variable is set in 'config.status', edit 'config.status'\n+#     (which will cause the Makefiles to be regenerated when you run 'make');\n+# (2) otherwise, pass the desired values on the 'make' command line.\n+$(am__recursive_targets):\n+\t@fail=; \\\n+\tif $(am__make_keepgoing); then \\\n+\t  failcom='fail=yes'; \\\n+\telse \\\n+\t  failcom='exit 1'; \\\n+\tfi; \\\n+\tdot_seen=no; \\\n+\ttarget=`echo $@ | sed s/-recursive//`; \\\n+\tcase \"$@\" in \\\n+\t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n+\t  *) list='$(SUBDIRS)' ;; \\\n+\tesac; \\\n+\tfor subdir in $$list; do \\\n+\t  echo \"Making $$target in $$subdir\"; \\\n+\t  if test \"$$subdir\" = \".\"; then \\\n+\t    dot_seen=yes; \\\n+\t    local_target=\"$$target-am\"; \\\n+\t  else \\\n+\t    local_target=\"$$target\"; \\\n+\t  fi; \\\n+\t  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n+\t  || eval $$failcom; \\\n+\tdone; \\\n+\tif test \"$$dot_seen\" = \"no\"; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n+\tfi; test -z \"$$fail\"\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-recursive\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\tif ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \\\n+\t  include_option=--etags-include; \\\n+\t  empty_fix=.; \\\n+\telse \\\n+\t  include_option=--include; \\\n+\t  empty_fix=; \\\n+\tfi; \\\n+\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n+\t  if test \"$$subdir\" = .; then :; else \\\n+\t    test ! -f $$subdir/TAGS || \\\n+\t      set \"$$@\" \"$$include_option=$$here/$$subdir/TAGS\"; \\\n+\t  fi; \\\n+\tdone; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-recursive\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscope: cscope.files\n+\ttest ! -s cscope.files \\\n+\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\n+clean-cscope:\n+\t-rm -f cscope.files\n+cscope.files: clean-cscope cscopelist\n+cscopelist: cscopelist-recursive\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+distdir: $(DISTFILES)\n+\t$(am__remove_distdir)\n+\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\\n+\t  if test \"$$subdir\" = .; then :; else \\\n+\t    $(am__make_dryrun) \\\n+\t      || test -d \"$(distdir)/$$subdir\" \\\n+\t      || $(MKDIR_P) \"$(distdir)/$$subdir\" \\\n+\t      || exit 1; \\\n+\t    dir1=$$subdir; dir2=\"$(distdir)/$$subdir\"; \\\n+\t    $(am__relativize); \\\n+\t    new_distdir=$$reldir; \\\n+\t    dir1=$$subdir; dir2=\"$(top_distdir)\"; \\\n+\t    $(am__relativize); \\\n+\t    new_top_distdir=$$reldir; \\\n+\t    echo \" (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=\"$$new_top_distdir\" distdir=\"$$new_distdir\" \\\\\"; \\\n+\t    echo \"     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)\"; \\\n+\t    ($(am__cd) $$subdir && \\\n+\t      $(MAKE) $(AM_MAKEFLAGS) \\\n+\t        top_distdir=\"$$new_top_distdir\" \\\n+\t        distdir=\"$$new_distdir\" \\\n+\t\tam__remove_distdir=: \\\n+\t\tam__skip_length_check=: \\\n+\t\tam__skip_mode_fix=: \\\n+\t        distdir) \\\n+\t      || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t$(MAKE) $(AM_MAKEFLAGS) \\\n+\t  top_distdir=\"$(top_distdir)\" distdir=\"$(distdir)\" \\\n+\t  dist-hook\n+\t-test -n \"$(am__skip_mode_fix)\" \\\n+\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n+\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r \"$(distdir)\"\n+dist-gzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-bzip2: distdir\n+\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n+\t$(am__post_remove_distdir)\n+\n+dist-lzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n+\t$(am__post_remove_distdir)\n+\n+dist-xz: distdir\n+\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n+\t$(am__post_remove_distdir)\n+\n+dist-tarZ: distdir\n+\t@echo WARNING: \"Support for shar distribution archives is\" \\\n+\t               \"deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n+\t$(am__post_remove_distdir)\n+\n+dist-shar: distdir\n+\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n+\t\t       \"legacy program 'compress' is deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-zip: distdir\n+\t-rm -f $(distdir).zip\n+\tzip -rq $(distdir).zip $(distdir)\n+\t$(am__post_remove_distdir)\n+\n+dist dist-all:\n+\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n+\t$(am__post_remove_distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\tcase '$(DIST_ARCHIVES)' in \\\n+\t*.tar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n+\t*.tar.bz2*) \\\n+\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n+\t*.tar.lz*) \\\n+\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n+\t*.tar.xz*) \\\n+\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n+\t*.tar.Z*) \\\n+\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n+\t*.shar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\\n+\t*.zip*) \\\n+\t  unzip $(distdir).zip ;;\\\n+\tesac\n+\tchmod -R a-w $(distdir)\n+\tchmod u+w $(distdir)\n+\tmkdir $(distdir)/_build $(distdir)/_inst\n+\tchmod a-w $(distdir)\n+\ttest -d $(distdir)/_build || exit 0; \\\n+\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n+\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n+\t  && am__cwd=`pwd` \\\n+\t  && $(am__cd) $(distdir)/_build \\\n+\t  && ../configure \\\n+\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    --srcdir=.. --prefix=\"$$dc_install_base\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n+\t        distuninstallcheck \\\n+\t  && chmod -R a-w \"$$dc_install_base\" \\\n+\t  && ({ \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n+\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n+\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n+\t  && rm -rf \"$$dc_destdir\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n+\t  && rm -rf $(DIST_ARCHIVES) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n+\t  && cd \"$$am__cwd\" \\\n+\t  || exit 1\n+\t$(am__post_remove_distdir)\n+\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n+\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n+\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\n+distuninstallcheck:\n+\t@test -n '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: trying to run $@ with an empty' \\\n+\t       '$$(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n+\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n+\t        if test -n \"$(DESTDIR)\"; then \\\n+\t          echo \"  (check DESTDIR support)\"; \\\n+\t        fi ; \\\n+\t        $(distuninstallcheck_listfiles) ; \\\n+\t        exit 1; } >&2\n+distcleancheck: distclean\n+\t@if test '$(srcdir)' = . ; then \\\n+\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n+\t  exit 1 ; \\\n+\tfi\n+\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n+\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n+\t       $(distcleancheck_listfiles) ; \\\n+\t       exit 1; } >&2\n+check-am: all-am\n+check: check-recursive\n+all-am: Makefile $(SCRIPTS) $(DATA)\n+installdirs: installdirs-recursive\n+installdirs-am:\n+\tfor dir in \"$(DESTDIR)$(pkgconfigdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-recursive\n+install-exec: install-exec-recursive\n+install-data: install-data-recursive\n+uninstall: uninstall-recursive\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-recursive\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\n+clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-recursive\n+\n+clean-am: clean-generic clean-libtool clean-local mostlyclean-am\n+\n+distclean: distclean-recursive\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-generic distclean-hdr \\\n+\tdistclean-libtool distclean-tags\n+\n+dvi: dvi-recursive\n+\n+dvi-am:\n+\n+html: html-recursive\n+\n+html-am:\n+\n+info: info-recursive\n+\n+info-am:\n+\n+install-data-am: install-pkgconfigDATA\n+\n+install-dvi: install-dvi-recursive\n+\n+install-dvi-am:\n+\n+install-exec-am:\n+\n+install-html: install-html-recursive\n+\n+install-html-am:\n+\n+install-info: install-info-recursive\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-recursive\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-recursive\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-recursive\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-recursive\n+\n+mostlyclean-am: mostlyclean-generic mostlyclean-libtool\n+\n+pdf: pdf-recursive\n+\n+pdf-am:\n+\n+ps: ps-recursive\n+\n+ps-am:\n+\n+uninstall-am: uninstall-pkgconfigDATA\n+\n+.MAKE: $(am__recursive_targets) install-am install-strip\n+\n+.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \\\n+\tam--refresh check check-am clean clean-cscope clean-generic \\\n+\tclean-libtool clean-local cscope cscopelist-am ctags ctags-am \\\n+\tdist dist-all dist-bzip2 dist-gzip dist-hook dist-lzip \\\n+\tdist-shar dist-tarZ dist-xz dist-zip distcheck distclean \\\n+\tdistclean-generic distclean-hdr distclean-libtool \\\n+\tdistclean-tags distcleancheck distdir distuninstallcheck dvi \\\n+\tdvi-am html html-am info info-am install install-am \\\n+\tinstall-data install-data-am install-dvi install-dvi-am \\\n+\tinstall-exec install-exec-am install-html install-html-am \\\n+\tinstall-info install-info-am install-man install-pdf \\\n+\tinstall-pdf-am install-pkgconfigDATA install-ps install-ps-am \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tinstalldirs-am maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \\\n+\tps ps-am tags tags-am uninstall uninstall-am \\\n+\tuninstall-pkgconfigDATA\n+\n+.PHONY: deploy FORCE\n+export PYTHONPATH\n+\n+dist-hook:\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n+\t$(MKDIR_P) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n+\t  echo error: could not build $@\n+\t@echo built $@\n+\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@ \n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+\t$(MKDIR_P) $(@D)\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n+\t$(MKDIR_P) $(@D)\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n+\n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n+#$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n+#\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n+\n+#$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+#\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n+#$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+#\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n+#$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n+#\ttiffutil -cathidpicheck $^ -out $@\n+\n+#deploydir: $(OSX_DMG)\n+\n+$(APP_DIST_DIR)/Applications:\n+\t@rm -f $@\n+\t@cd $(@D); $(LN_S) /Applications $(@F)\n+\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+\n+$(OSX_DMG): $(APP_DIST_EXTRAS)\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n+\t$(MKDIR_P) $(@D)\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n+\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\n+deploydir: $(APP_DIST_EXTRAS)\n+\n+#appbundle: $(OSX_APP_BUILT)\n+#deploy: $(OSX_DMG)\n+deploy: $(BITCOIN_WIN_INSTALLER)\n+\n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+#baseline.info:\n+#\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+#baseline_filtered.info: baseline.info\n+#\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+#leveldb_baseline.info: baseline_filtered.info\n+#\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n+\n+#leveldb_baseline_filtered.info: leveldb_baseline.info\n+#\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+#baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n+#\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n+\n+#test_bitcoin.info: baseline_filtered_combined.info\n+#\t$(MAKE) -C src/ check\n+#\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+#\t$(LCOV) -z -d $(abs_builddir)/src\n+#\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+#test_bitcoin_filtered.info: test_bitcoin.info\n+#\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+#rpc_test.info: test_bitcoin_filtered.info\n+#\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+#\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+#\t$(LCOV) -z -d $(abs_builddir)/src\n+#\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+#rpc_test_filtered.info: rpc_test.info\n+#\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+#test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n+#\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+\n+#total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info rpc_test_filtered.info\n+#\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+#test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+#\t$(GENHTML) -s $< -o $(@D)\n+#\t@touch $@\n+\n+#total.coverage/.dirstamp: total_coverage.info\n+#\t$(GENHTML) -s $< -o $(@D)\n+#\t@touch $@\n+\n+#cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+\n+.INTERMEDIATE: $(COVERAGE_INFO)\n+\n+clean-local:\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf qa/pull-tester/__pycache__\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "f76f0b525be7e0bf292320e1f5f18a72823f667e",
        "filename": "config.log",
        "status": "added",
        "additions": 7905,
        "deletions": 0,
        "changes": 7905,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/config.log",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/config.log",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/config.log?ref=ef3d4522857db523809fdbced15cb18ab62de853"
      },
      {
        "sha": "d152d5398306c56cf3d5c48273e79b40f6188049",
        "filename": "config.status",
        "status": "added",
        "additions": 2599,
        "deletions": 0,
        "changes": 2599,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/config.status",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/config.status",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/config.status?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,2599 @@\n+#! /bin/bash\n+# Generated by configure.\n+# Run this file to recreate the current configuration.\n+# Compiler output produced by configure, useful for debugging\n+# configure, is in config.log if it exists.\n+\n+debug=false\n+ac_cs_recheck=false\n+ac_cs_silent=false\n+\n+SHELL=${CONFIG_SHELL-/bin/bash}\n+export SHELL\n+## -------------------- ##\n+## M4sh Initialization. ##\n+## -------------------- ##\n+\n+# Be more Bourne compatible\n+DUALCASE=1; export DUALCASE # for MKS sh\n+if test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n+  emulate sh\n+  NULLCMD=:\n+  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n+  # is contrary to our usage.  Disable this feature.\n+  alias -g '${1+\"$@\"}'='\"$@\"'\n+  setopt NO_GLOB_SUBST\n+else\n+  case `(set -o) 2>/dev/null` in #(\n+  *posix*) :\n+    set -o posix ;; #(\n+  *) :\n+     ;;\n+esac\n+fi\n+\n+\n+as_nl='\n+'\n+export as_nl\n+# Printing a long string crashes Solaris 7 /usr/bin/printf.\n+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\n+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n+# Prefer a ksh shell builtin over an external printf program on Solaris,\n+# but without wasting forks for bash or zsh.\n+if test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n+    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n+  as_echo='print -r --'\n+  as_echo_n='print -rn --'\n+elif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n+  as_echo='printf %s\\n'\n+  as_echo_n='printf %s'\n+else\n+  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n+    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n+    as_echo_n='/usr/ucb/echo -n'\n+  else\n+    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n+    as_echo_n_body='eval\n+      arg=$1;\n+      case $arg in #(\n+      *\"$as_nl\"*)\n+\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n+\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n+      esac;\n+      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n+    '\n+    export as_echo_n_body\n+    as_echo_n='sh -c $as_echo_n_body as_echo'\n+  fi\n+  export as_echo_body\n+  as_echo='sh -c $as_echo_body as_echo'\n+fi\n+\n+# The user is always right.\n+if test \"${PATH_SEPARATOR+set}\" != set; then\n+  PATH_SEPARATOR=:\n+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n+      PATH_SEPARATOR=';'\n+  }\n+fi\n+\n+\n+# IFS\n+# We need space, tab and new line, in precisely that order.  Quoting is\n+# there to prevent editors from complaining about space-tab.\n+# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n+# splitting by setting IFS to empty value.)\n+IFS=\" \"\"\t$as_nl\"\n+\n+# Find who we are.  Look in the path if we contain no directory separator.\n+as_myself=\n+case $0 in #((\n+  *[\\\\/]* ) as_myself=$0 ;;\n+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n+  done\n+IFS=$as_save_IFS\n+\n+     ;;\n+esac\n+# We did not find ourselves, most probably we were run as `sh COMMAND'\n+# in which case we are not to be found in the path.\n+if test \"x$as_myself\" = x; then\n+  as_myself=$0\n+fi\n+if test ! -f \"$as_myself\"; then\n+  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n+  exit 1\n+fi\n+\n+# Unset variables that we do not need and which cause bugs (e.g. in\n+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n+# suppresses any \"Segmentation fault\" message there.  '((' could\n+# trigger a bug in pdksh 5.2.14.\n+for as_var in BASH_ENV ENV MAIL MAILPATH\n+do eval test x\\${$as_var+set} = xset \\\n+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\n+done\n+PS1='$ '\n+PS2='> '\n+PS4='+ '\n+\n+# NLS nuisances.\n+LC_ALL=C\n+export LC_ALL\n+LANGUAGE=C\n+export LANGUAGE\n+\n+# CDPATH.\n+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n+\n+\n+# as_fn_error STATUS ERROR [LINENO LOG_FD]\n+# ----------------------------------------\n+# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n+# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n+# script with STATUS, using 1 if that was 0.\n+as_fn_error ()\n+{\n+  as_status=$1; test $as_status -eq 0 && as_status=1\n+  if test \"$4\"; then\n+    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n+  fi\n+  $as_echo \"$as_me: error: $2\" >&2\n+  as_fn_exit $as_status\n+} # as_fn_error\n+\n+\n+# as_fn_set_status STATUS\n+# -----------------------\n+# Set $? to STATUS, without forking.\n+as_fn_set_status ()\n+{\n+  return $1\n+} # as_fn_set_status\n+\n+# as_fn_exit STATUS\n+# -----------------\n+# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\n+as_fn_exit ()\n+{\n+  set +e\n+  as_fn_set_status $1\n+  exit $1\n+} # as_fn_exit\n+\n+# as_fn_unset VAR\n+# ---------------\n+# Portably unset VAR.\n+as_fn_unset ()\n+{\n+  { eval $1=; unset $1;}\n+}\n+as_unset=as_fn_unset\n+# as_fn_append VAR VALUE\n+# ----------------------\n+# Append the text in VALUE to the end of the definition contained in VAR. Take\n+# advantage of any shell optimizations that allow amortized linear growth over\n+# repeated appends, instead of the typical quadratic growth present in naive\n+# implementations.\n+if (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n+  eval 'as_fn_append ()\n+  {\n+    eval $1+=\\$2\n+  }'\n+else\n+  as_fn_append ()\n+  {\n+    eval $1=\\$$1\\$2\n+  }\n+fi # as_fn_append\n+\n+# as_fn_arith ARG...\n+# ------------------\n+# Perform arithmetic evaluation on the ARGs, and store the result in the\n+# global $as_val. Take advantage of shells that can avoid forks. The arguments\n+# must be portable across $(()) and expr.\n+if (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n+  eval 'as_fn_arith ()\n+  {\n+    as_val=$(( $* ))\n+  }'\n+else\n+  as_fn_arith ()\n+  {\n+    as_val=`expr \"$@\" || test $? -eq 1`\n+  }\n+fi # as_fn_arith\n+\n+\n+if expr a : '\\(a\\)' >/dev/null 2>&1 &&\n+   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n+  as_expr=expr\n+else\n+  as_expr=false\n+fi\n+\n+if (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n+  as_basename=basename\n+else\n+  as_basename=false\n+fi\n+\n+if (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n+  as_dirname=dirname\n+else\n+  as_dirname=false\n+fi\n+\n+as_me=`$as_basename -- \"$0\" ||\n+$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n+\t X\"$0\" : 'X\\(//\\)$' \\| \\\n+\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X/\"$0\" |\n+    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\/\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\/\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'`\n+\n+# Avoid depending upon Character Ranges.\n+as_cr_letters='abcdefghijklmnopqrstuvwxyz'\n+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n+as_cr_Letters=$as_cr_letters$as_cr_LETTERS\n+as_cr_digits='0123456789'\n+as_cr_alnum=$as_cr_Letters$as_cr_digits\n+\n+ECHO_C= ECHO_N= ECHO_T=\n+case `echo -n x` in #(((((\n+-n*)\n+  case `echo 'xy\\c'` in\n+  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n+  xy)  ECHO_C='\\c';;\n+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n+       ECHO_T='\t';;\n+  esac;;\n+*)\n+  ECHO_N='-n';;\n+esac\n+\n+rm -f conf$$ conf$$.exe conf$$.file\n+if test -d conf$$.dir; then\n+  rm -f conf$$.dir/conf$$.file\n+else\n+  rm -f conf$$.dir\n+  mkdir conf$$.dir 2>/dev/null\n+fi\n+if (echo >conf$$.file) 2>/dev/null; then\n+  if ln -s conf$$.file conf$$ 2>/dev/null; then\n+    as_ln_s='ln -s'\n+    # ... but there are two gotchas:\n+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n+    # In both cases, we have to default to `cp -pR'.\n+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n+      as_ln_s='cp -pR'\n+  elif ln conf$$.file conf$$ 2>/dev/null; then\n+    as_ln_s=ln\n+  else\n+    as_ln_s='cp -pR'\n+  fi\n+else\n+  as_ln_s='cp -pR'\n+fi\n+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\n+rmdir conf$$.dir 2>/dev/null\n+\n+\n+# as_fn_mkdir_p\n+# -------------\n+# Create \"$as_dir\" as a directory, including parents if necessary.\n+as_fn_mkdir_p ()\n+{\n+\n+  case $as_dir in #(\n+  -*) as_dir=./$as_dir;;\n+  esac\n+  test -d \"$as_dir\" || eval $as_mkdir_p || {\n+    as_dirs=\n+    while :; do\n+      case $as_dir in #(\n+      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n+      *) as_qdir=$as_dir;;\n+      esac\n+      as_dirs=\"'$as_qdir' $as_dirs\"\n+      as_dir=`$as_dirname -- \"$as_dir\" ||\n+$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n+\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n+\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n+\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X\"$as_dir\" |\n+    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)[^/].*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'`\n+      test -d \"$as_dir\" && break\n+    done\n+    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n+  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n+\n+\n+} # as_fn_mkdir_p\n+if mkdir -p . 2>/dev/null; then\n+  as_mkdir_p='mkdir -p \"$as_dir\"'\n+else\n+  test -d ./-p && rmdir ./-p\n+  as_mkdir_p=false\n+fi\n+\n+\n+# as_fn_executable_p FILE\n+# -----------------------\n+# Test if FILE is an executable regular file.\n+as_fn_executable_p ()\n+{\n+  test -f \"$1\" && test -x \"$1\"\n+} # as_fn_executable_p\n+as_test_x='test -x'\n+as_executable_p=as_fn_executable_p\n+\n+# Sed expression to map a string onto a valid CPP name.\n+as_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n+\n+# Sed expression to map a string onto a valid variable name.\n+as_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n+\n+\n+exec 6>&1\n+## ----------------------------------- ##\n+## Main body of $CONFIG_STATUS script. ##\n+## ----------------------------------- ##\n+# Save the log message, to keep $0 and so on meaningful, and to\n+# report actual input values of CONFIG_FILES etc. instead of their\n+# values after options handling.\n+ac_log=\"\n+This file was extended by Bitcoin Core $as_me 0.13.99, which was\n+generated by GNU Autoconf 2.69.  Invocation command line was\n+\n+  CONFIG_FILES    = $CONFIG_FILES\n+  CONFIG_HEADERS  = $CONFIG_HEADERS\n+  CONFIG_LINKS    = $CONFIG_LINKS\n+  CONFIG_COMMANDS = $CONFIG_COMMANDS\n+  $ $0 $@\n+\n+on `(hostname || uname -n) 2>/dev/null | sed 1q`\n+\"\n+\n+# Files that config.status was made for.\n+config_files=\" libbitcoinconsensus.pc:libbitcoinconsensus.pc.in Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py qa/pull-tester/tests_config.py contrib/devtools/split-debug.sh\"\n+config_headers=\" src/config/bitcoin-config.h\"\n+config_links=\" qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py\"\n+config_commands=\" depfiles libtool\"\n+\n+ac_cs_usage=\"\\\n+\\`$as_me' instantiates files and other configuration actions\n+from templates according to the current configuration.  Unless the files\n+and actions are specified as TAGs, all are instantiated by default.\n+\n+Usage: $0 [OPTION]... [TAG]...\n+\n+  -h, --help       print this help, then exit\n+  -V, --version    print version number and configuration settings, then exit\n+      --config     print configuration, then exit\n+  -q, --quiet, --silent\n+                   do not print progress messages\n+  -d, --debug      don't remove temporary files\n+      --recheck    update $as_me by reconfiguring in the same conditions\n+      --file=FILE[:TEMPLATE]\n+                   instantiate the configuration file FILE\n+      --header=FILE[:TEMPLATE]\n+                   instantiate the configuration header FILE\n+\n+Configuration files:\n+$config_files\n+\n+Configuration headers:\n+$config_headers\n+\n+Configuration links:\n+$config_links\n+\n+Configuration commands:\n+$config_commands\n+\n+Report bugs to <https://github.com/bitcoin/bitcoin/issues>.\n+Bitcoin Core home page: <https://bitcoincore.org/>.\"\n+\n+ac_cs_config=\"'--enable-debug' --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+ac_cs_version=\"\\\n+Bitcoin Core config.status 0.13.99\n+configured by ./configure, generated by GNU Autoconf 2.69,\n+  with options \\\"$ac_cs_config\\\"\n+\n+Copyright (C) 2012 Free Software Foundation, Inc.\n+This config.status script is free software; the Free Software Foundation\n+gives unlimited permission to copy, distribute and modify it.\"\n+\n+ac_pwd='/mnt/c/opensource/bitcoin-msvc'\n+srcdir='.'\n+INSTALL='/usr/bin/install -c'\n+MKDIR_P='/bin/mkdir -p'\n+AWK='gawk'\n+test -n \"$AWK\" || AWK=awk\n+# The default lists apply if the user does not specify any file.\n+ac_need_defaults=:\n+while test $# != 0\n+do\n+  case $1 in\n+  --*=?*)\n+    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n+    ac_optarg=`expr \"X$1\" : 'X[^=]*=\\(.*\\)'`\n+    ac_shift=:\n+    ;;\n+  --*=)\n+    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n+    ac_optarg=\n+    ac_shift=:\n+    ;;\n+  *)\n+    ac_option=$1\n+    ac_optarg=$2\n+    ac_shift=shift\n+    ;;\n+  esac\n+\n+  case $ac_option in\n+  # Handling of the options.\n+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)\n+    ac_cs_recheck=: ;;\n+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )\n+    $as_echo \"$ac_cs_version\"; exit ;;\n+  --config | --confi | --conf | --con | --co | --c )\n+    $as_echo \"$ac_cs_config\"; exit ;;\n+  --debug | --debu | --deb | --de | --d | -d )\n+    debug=: ;;\n+  --file | --fil | --fi | --f )\n+    $ac_shift\n+    case $ac_optarg in\n+    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n+    '') as_fn_error $? \"missing file argument\" ;;\n+    esac\n+    as_fn_append CONFIG_FILES \" '$ac_optarg'\"\n+    ac_need_defaults=false;;\n+  --header | --heade | --head | --hea )\n+    $ac_shift\n+    case $ac_optarg in\n+    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n+    esac\n+    as_fn_append CONFIG_HEADERS \" '$ac_optarg'\"\n+    ac_need_defaults=false;;\n+  --he | --h)\n+    # Conflict between --help and --header\n+    as_fn_error $? \"ambiguous option: \\`$1'\n+Try \\`$0 --help' for more information.\";;\n+  --help | --hel | -h )\n+    $as_echo \"$ac_cs_usage\"; exit ;;\n+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n+  | -silent | --silent | --silen | --sile | --sil | --si | --s)\n+    ac_cs_silent=: ;;\n+\n+  # This is an error.\n+  -*) as_fn_error $? \"unrecognized option: \\`$1'\n+Try \\`$0 --help' for more information.\" ;;\n+\n+  *) as_fn_append ac_config_targets \" $1\"\n+     ac_need_defaults=false ;;\n+\n+  esac\n+  shift\n+done\n+\n+ac_configure_extra_args=\n+\n+if $ac_cs_silent; then\n+  exec 6>/dev/null\n+  ac_configure_extra_args=\"$ac_configure_extra_args --silent\"\n+fi\n+\n+if $ac_cs_recheck; then\n+  set X /bin/bash './configure'  '--enable-debug' --disable-shared --with-pic --with-bignum=no --enable-module-recovery $ac_configure_extra_args --no-create --no-recursion\n+  shift\n+  $as_echo \"running CONFIG_SHELL=/bin/bash $*\" >&6\n+  CONFIG_SHELL='/bin/bash'\n+  export CONFIG_SHELL\n+  exec \"$@\"\n+fi\n+\n+exec 5>>config.log\n+{\n+  echo\n+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX\n+## Running $as_me. ##\n+_ASBOX\n+  $as_echo \"$ac_log\"\n+} >&5\n+\n+#\n+# INIT-COMMANDS\n+#\n+AMDEP_TRUE=\"\" ac_aux_dir=\"build-aux\"\n+\n+\n+# The HP-UX ksh and POSIX shell print the target directory to stdout\n+# if CDPATH is set.\n+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n+\n+sed_quote_subst='s/\\([\"`$\\\\]\\)/\\\\\\1/g'\n+double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n+delay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n+macro_version='2.4.2'\n+macro_revision='1.3337'\n+pic_mode='default'\n+enable_shared='yes'\n+enable_static='yes'\n+enable_fast_install='needless'\n+SHELL='/bin/bash'\n+ECHO='printf %s\\n'\n+PATH_SEPARATOR=':'\n+host_alias='i686-w64-mingw32'\n+host='i686-w64-mingw32'\n+host_os='mingw32'\n+build_alias=''\n+build='x86_64-unknown-linux-gnu'\n+build_os='linux-gnu'\n+SED='/bin/sed'\n+Xsed='/bin/sed -e 1s/^X//'\n+GREP='/bin/grep'\n+EGREP='/bin/grep -E'\n+FGREP='/bin/grep -F'\n+LD='/usr/bin/i686-w64-mingw32-ld'\n+NM='i686-w64-mingw32-nm'\n+LN_S='ln -s'\n+max_cmd_len='1572864'\n+ac_objext='o'\n+exeext=''\n+lt_unset='unset'\n+lt_SP2NL='tr \\040 \\012'\n+lt_NL2SP='tr \\015\\012 \\040\\040'\n+lt_cv_to_host_file_cmd='func_convert_file_nix_to_w32'\n+lt_cv_to_tool_file_cmd='func_convert_file_noop'\n+reload_flag=' -r'\n+reload_cmds='$LD$reload_flag -o $output$reload_objs'\n+OBJDUMP='i686-w64-mingw32-objdump'\n+deplibs_check_method='pass_all'\n+file_magic_cmd=''\n+file_magic_glob=''\n+want_nocaseglob='no'\n+DLLTOOL='i686-w64-mingw32-dlltool'\n+sharedlib_from_linklib_cmd='func_cygming_dll_for_implib'\n+AR='/usr/bin/i686-w64-mingw32-ar'\n+AR_FLAGS='cru'\n+archiver_list_spec='@'\n+STRIP='/usr/bin/i686-w64-mingw32-strip'\n+RANLIB='/usr/bin/i686-w64-mingw32-ranlib'\n+old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'\n+old_postuninstall_cmds=''\n+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'\n+lock_old_archive_extraction='no'\n+CC='/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-gcc'\n+CFLAGS='-pipe -O2  -g3 -O0'\n+compiler='i686-w64-mingw32-g++ -std=c++11'\n+GCC='yes'\n+lt_cv_sys_global_symbol_pipe='sed -n -e '\\''s/^.*[\t ]\\([ABCDGIRSTW][ABCDGIRSTW]*\\)[\t ][\t ]*_\\([_A-Za-z][_A-Za-z0-9]*\\)$/\\1 _\\2 \\2/p'\\'' | sed '\\''/ __gnu_lto/d'\\'''\n+lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\\''s/^T .* \\(.*\\)$/extern int \\1();/p'\\'' -e '\\''s/^[ABCDGIRSTW]* .* \\(.*\\)$/extern char \\1;/p'\\'''\n+lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\\''s/^: \\([^ ]*\\)[ ]*$/  {\\\"\\1\\\", (void *) 0},/p'\\'' -e '\\''s/^[ABCDGIRSTW]* \\([^ ]*\\) \\([^ ]*\\)$/  {\"\\2\", (void *) \\&\\2},/p'\\'''\n+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\\''s/^: \\([^ ]*\\)[ ]*$/  {\\\"\\1\\\", (void *) 0},/p'\\'' -e '\\''s/^[ABCDGIRSTW]* \\([^ ]*\\) \\(lib[^ ]*\\)$/  {\"\\2\", (void *) \\&\\2},/p'\\'' -e '\\''s/^[ABCDGIRSTW]* \\([^ ]*\\) \\([^ ]*\\)$/  {\"lib\\2\", (void *) \\&\\2},/p'\\'''\n+nm_file_list_spec='@'\n+lt_sysroot=''\n+objdir='.libs'\n+MAGIC_CMD='file'\n+lt_prog_compiler_no_builtin_flag=' -fno-builtin'\n+lt_prog_compiler_pic=' -DDLL_EXPORT -DPIC'\n+lt_prog_compiler_wl='-Wl,'\n+lt_prog_compiler_static='-static'\n+lt_cv_prog_compiler_c_o='yes'\n+need_locks='no'\n+MANIFEST_TOOL=':'\n+DSYMUTIL=''\n+NMEDIT=''\n+LIPO=''\n+OTOOL=''\n+OTOOL64=''\n+libext='a'\n+shrext_cmds='.dll'\n+extract_expsyms_cmds=''\n+archive_cmds_need_lc='yes'\n+enable_shared_with_static_runtimes='yes'\n+export_dynamic_flag_spec='${wl}--export-all-symbols'\n+whole_archive_flag_spec='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n+compiler_needs_object='no'\n+old_archive_from_new_cmds=''\n+old_archive_from_expsyms_cmds=''\n+archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n+archive_expsym_cmds='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n+\t  cp $export_symbols $output_objdir/$soname.def;\n+\telse\n+\t  echo EXPORTS > $output_objdir/$soname.def;\n+\t  cat $export_symbols >> $output_objdir/$soname.def;\n+\tfi~\n+\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n+module_cmds=''\n+module_expsym_cmds=''\n+with_gnu_ld='yes'\n+allow_undefined_flag='unsupported'\n+no_undefined_flag=''\n+hardcode_libdir_flag_spec='-L$libdir'\n+hardcode_libdir_separator=''\n+hardcode_direct='no'\n+hardcode_direct_absolute='no'\n+hardcode_minus_L='no'\n+hardcode_shlibpath_var='unsupported'\n+hardcode_automatic='no'\n+inherit_rpath='no'\n+link_all_deplibs='unknown'\n+always_export_symbols='no'\n+export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1 DATA/;s/^.*[ ]__nm__\\([^ ]*\\)[ ][^ ]*/\\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\\'' | sort | uniq > $export_symbols'\n+exclude_expsyms='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'\n+include_expsyms=''\n+prelink_cmds=''\n+postlink_cmds=''\n+file_list_spec=''\n+variables_saved_for_relink='PATH PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'\n+need_lib_prefix='no'\n+need_version='no'\n+version_type='windows'\n+runpath_var='LD_RUN_PATH'\n+shlibpath_var='PATH'\n+shlibpath_overrides_runpath='yes'\n+libname_spec='lib$name'\n+library_names_spec='$libname.dll.a'\n+soname_spec='${libname}`echo ${release} | $SED -e s/[.]/-/g`${versuffix}${shared_ext}'\n+install_override_mode=''\n+postinstall_cmds='base_file=`basename \\${file}`~\n+      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n+      dldir=$destdir/`dirname \\$dlpath`~\n+      test -d \\$dldir || mkdir -p \\$dldir~\n+      $install_prog $dir/$dlname \\$dldir/$dlname~\n+      chmod a+x \\$dldir/$dlname~\n+      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n+        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n+      fi'\n+postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n+      dlpath=$dir/\\$dldll~\n+       $RM \\$dlpath'\n+finish_cmds=''\n+finish_eval=''\n+hardcode_into_libs='no'\n+sys_lib_search_path_spec='/usr/i686-w64-mingw32/lib '\n+sys_lib_dlsearch_path_spec='/lib /usr/lib'\n+hardcode_action='immediate'\n+enable_dlopen='unknown'\n+enable_dlopen_self='unknown'\n+enable_dlopen_self_static='unknown'\n+old_striplib='i686-w64-mingw32-strip --strip-debug'\n+striplib='i686-w64-mingw32-strip --strip-unneeded'\n+compiler_lib_search_dirs=''\n+predep_objects=''\n+postdep_objects=''\n+predeps=''\n+postdeps=''\n+compiler_lib_search_path=''\n+LD_CXX='/usr/bin/i686-w64-mingw32-ld'\n+reload_flag_CXX=' -r'\n+reload_cmds_CXX='$LD$reload_flag -o $output$reload_objs'\n+old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'\n+compiler_CXX='i686-w64-mingw32-g++ -std=c++11'\n+GCC_CXX='yes'\n+lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'\n+lt_prog_compiler_pic_CXX=' -DDLL_EXPORT -DPIC'\n+lt_prog_compiler_wl_CXX='-Wl,'\n+lt_prog_compiler_static_CXX='-static'\n+lt_cv_prog_compiler_c_o_CXX='yes'\n+archive_cmds_need_lc_CXX='no'\n+enable_shared_with_static_runtimes_CXX='yes'\n+export_dynamic_flag_spec_CXX='${wl}--export-all-symbols'\n+whole_archive_flag_spec_CXX='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n+compiler_needs_object_CXX='no'\n+old_archive_from_new_cmds_CXX=''\n+old_archive_from_expsyms_cmds_CXX=''\n+archive_cmds_CXX='$CC -shared $libobjs $deplibs $compiler_flags -static -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n+archive_expsym_cmds_CXX='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n+\t      cp $export_symbols $output_objdir/$soname.def;\n+\t    else\n+\t      echo EXPORTS > $output_objdir/$soname.def;\n+\t      cat $export_symbols >> $output_objdir/$soname.def;\n+\t    fi~\n+\t    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n+module_cmds_CXX=''\n+module_expsym_cmds_CXX=''\n+with_gnu_ld_CXX='yes'\n+allow_undefined_flag_CXX='unsupported'\n+no_undefined_flag_CXX=''\n+hardcode_libdir_flag_spec_CXX='-L$libdir'\n+hardcode_libdir_separator_CXX=''\n+hardcode_direct_CXX='no'\n+hardcode_direct_absolute_CXX='no'\n+hardcode_minus_L_CXX='no'\n+hardcode_shlibpath_var_CXX='unsupported'\n+hardcode_automatic_CXX='no'\n+inherit_rpath_CXX='no'\n+link_all_deplibs_CXX='unknown'\n+always_export_symbols_CXX='no'\n+export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1 DATA/;s/^.*[ ]__nm__\\([^ ]*\\)[ ][^ ]*/\\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\\'' | sort | uniq > $export_symbols'\n+exclude_expsyms_CXX='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'\n+include_expsyms_CXX=''\n+prelink_cmds_CXX=''\n+postlink_cmds_CXX=''\n+file_list_spec_CXX=''\n+hardcode_action_CXX='immediate'\n+compiler_lib_search_dirs_CXX='/usr/lib/gcc/i686-w64-mingw32/4.8 /usr/lib/gcc/i686-w64-mingw32/4.8/../../../../i686-w64-mingw32/lib/../lib /usr/lib/gcc/i686-w64-mingw32/4.8/../../../../i686-w64-mingw32/lib'\n+predep_objects_CXX='/usr/lib/gcc/i686-w64-mingw32/4.8/../../../../i686-w64-mingw32/lib/../lib/dllcrt2.o /usr/lib/gcc/i686-w64-mingw32/4.8/crtbegin.o'\n+postdep_objects_CXX='/usr/lib/gcc/i686-w64-mingw32/4.8/crtend.o'\n+predeps_CXX=''\n+postdeps_CXX=''\n+compiler_lib_search_path_CXX='-L/usr/lib/gcc/i686-w64-mingw32/4.8 -L/usr/lib/gcc/i686-w64-mingw32/4.8/../../../../i686-w64-mingw32/lib/../lib -L/usr/lib/gcc/i686-w64-mingw32/4.8/../../../../i686-w64-mingw32/lib'\n+\n+LTCC='i686-w64-mingw32-gcc'\n+LTCFLAGS='-pipe -O2 '\n+compiler='i686-w64-mingw32-gcc'\n+\n+# A function that is used when there is no print builtin or printf.\n+func_fallback_echo ()\n+{\n+  eval 'cat <<_LTECHO_EOF\n+$1\n+_LTECHO_EOF'\n+}\n+\n+# Quote evaled strings.\n+for var in SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD NM LN_S lt_SP2NL lt_NL2SP reload_flag OBJDUMP deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob DLLTOOL sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix nm_file_list_spec lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX reload_flag_CXX compiler_CXX lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_pic_CXX lt_prog_compiler_wl_CXX lt_prog_compiler_static_CXX lt_cv_prog_compiler_c_o_CXX export_dynamic_flag_spec_CXX whole_archive_flag_spec_CXX compiler_needs_object_CXX with_gnu_ld_CXX allow_undefined_flag_CXX no_undefined_flag_CXX hardcode_libdir_flag_spec_CXX hardcode_libdir_separator_CXX exclude_expsyms_CXX include_expsyms_CXX file_list_spec_CXX compiler_lib_search_dirs_CXX predep_objects_CXX postdep_objects_CXX predeps_CXX postdeps_CXX compiler_lib_search_path_CXX; do\n+    case `eval \\\\$ECHO \\\\\"\"\\\\$$var\"\\\\\"` in\n+    *[\\\\\\`\\\"\\$]*)\n+      eval \"lt_$var=\\\\\\\"\\`\\$ECHO \\\"\\$$var\\\" | \\$SED \\\"\\$sed_quote_subst\\\"\\`\\\\\\\"\"\n+      ;;\n+    *)\n+      eval \"lt_$var=\\\\\\\"\\$$var\\\\\\\"\"\n+      ;;\n+    esac\n+done\n+\n+# Double-quote double-evaled strings.\n+for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec sys_lib_dlsearch_path_spec reload_cmds_CXX old_archive_cmds_CXX old_archive_from_new_cmds_CXX old_archive_from_expsyms_cmds_CXX archive_cmds_CXX archive_expsym_cmds_CXX module_cmds_CXX module_expsym_cmds_CXX export_symbols_cmds_CXX prelink_cmds_CXX postlink_cmds_CXX; do\n+    case `eval \\\\$ECHO \\\\\"\"\\\\$$var\"\\\\\"` in\n+    *[\\\\\\`\\\"\\$]*)\n+      eval \"lt_$var=\\\\\\\"\\`\\$ECHO \\\"\\$$var\\\" | \\$SED -e \\\"\\$double_quote_subst\\\" -e \\\"\\$sed_quote_subst\\\" -e \\\"\\$delay_variable_subst\\\"\\`\\\\\\\"\"\n+      ;;\n+    *)\n+      eval \"lt_$var=\\\\\\\"\\$$var\\\\\\\"\"\n+      ;;\n+    esac\n+done\n+\n+ac_aux_dir='build-aux'\n+xsi_shell='yes'\n+lt_shell_append='yes'\n+\n+# See if we are running on zsh, and set the options which allow our\n+# commands through without removal of \\ escapes INIT.\n+if test -n \"${ZSH_VERSION+set}\" ; then\n+   setopt NO_GLOB_SUBST\n+fi\n+\n+\n+    PACKAGE='bitcoin'\n+    VERSION='0.13.99'\n+    TIMESTAMP=''\n+    RM='rm -f'\n+    ofile='libtool'\n+\n+\n+\n+\n+\n+\n+\n+# Handling of arguments.\n+for ac_config_target in $ac_config_targets\n+do\n+  case $ac_config_target in\n+    \"src/config/bitcoin-config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS src/config/bitcoin-config.h\" ;;\n+    \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n+    \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n+    \"libbitcoinconsensus.pc\") CONFIG_FILES=\"$CONFIG_FILES libbitcoinconsensus.pc:libbitcoinconsensus.pc.in\" ;;\n+    \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n+    \"src/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/Makefile\" ;;\n+    \"doc/man/Makefile\") CONFIG_FILES=\"$CONFIG_FILES doc/man/Makefile\" ;;\n+    \"share/setup.nsi\") CONFIG_FILES=\"$CONFIG_FILES share/setup.nsi\" ;;\n+    \"share/qt/Info.plist\") CONFIG_FILES=\"$CONFIG_FILES share/qt/Info.plist\" ;;\n+    \"src/test/buildenv.py\") CONFIG_FILES=\"$CONFIG_FILES src/test/buildenv.py\" ;;\n+    \"qa/pull-tester/tests_config.py\") CONFIG_FILES=\"$CONFIG_FILES qa/pull-tester/tests_config.py\" ;;\n+    \"contrib/devtools/split-debug.sh\") CONFIG_FILES=\"$CONFIG_FILES contrib/devtools/split-debug.sh\" ;;\n+    \"qa/pull-tester/rpc-tests.py\") CONFIG_LINKS=\"$CONFIG_LINKS qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py\" ;;\n+\n+  *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n+  esac\n+done\n+\n+\n+# If the user did not use the arguments to specify the items to instantiate,\n+# then the envvar interface is used.  Set only those that are not.\n+# We use the long form for the default assignment because of an extremely\n+# bizarre bug on SunOS 4.1.3.\n+if $ac_need_defaults; then\n+  test \"${CONFIG_FILES+set}\" = set || CONFIG_FILES=$config_files\n+  test \"${CONFIG_HEADERS+set}\" = set || CONFIG_HEADERS=$config_headers\n+  test \"${CONFIG_LINKS+set}\" = set || CONFIG_LINKS=$config_links\n+  test \"${CONFIG_COMMANDS+set}\" = set || CONFIG_COMMANDS=$config_commands\n+fi\n+\n+# Have a temporary directory for convenience.  Make it in the build tree\n+# simply because there is no reason against having it here, and in addition,\n+# creating and moving files from /tmp can sometimes cause problems.\n+# Hook for its removal unless debugging.\n+# Note that there is a small window in which the directory will not be cleaned:\n+# after its creation but before its name has been assigned to `$tmp'.\n+$debug ||\n+{\n+  tmp= ac_tmp=\n+  trap 'exit_status=$?\n+  : \"${ac_tmp:=$tmp}\"\n+  { test ! -d \"$ac_tmp\" || rm -fr \"$ac_tmp\"; } && exit $exit_status\n+' 0\n+  trap 'as_fn_exit 1' 1 2 13 15\n+}\n+# Create a (secure) tmp directory for tmp files.\n+\n+{\n+  tmp=`(umask 077 && mktemp -d \"./confXXXXXX\") 2>/dev/null` &&\n+  test -d \"$tmp\"\n+}  ||\n+{\n+  tmp=./conf$$-$RANDOM\n+  (umask 077 && mkdir \"$tmp\")\n+} || as_fn_error $? \"cannot create a temporary directory in .\" \"$LINENO\" 5\n+ac_tmp=$tmp\n+\n+# Set up the scripts for CONFIG_FILES section.\n+# No need to generate them if there are no CONFIG_FILES.\n+# This happens for instance with `./config.status config.h'.\n+if test -n \"$CONFIG_FILES\"; then\n+\n+\n+ac_cr=`echo X | tr X '\\015'`\n+# On cygwin, bash can eat \\r inside `` if the user requested igncr.\n+# But we know of no other shell where ac_cr would be empty at this\n+# point, so we can use a bashism as a fallback.\n+if test \"x$ac_cr\" = x; then\n+  eval ac_cr=\\$\\'\\\\r\\'\n+fi\n+ac_cs_awk_cr=`$AWK 'BEGIN { print \"a\\rb\" }' </dev/null 2>/dev/null`\n+if test \"$ac_cs_awk_cr\" = \"a${ac_cr}b\"; then\n+  ac_cs_awk_cr='\\\\r'\n+else\n+  ac_cs_awk_cr=$ac_cr\n+fi\n+\n+echo 'BEGIN {' >\"$ac_tmp/subs1.awk\" &&\n+cat >>\"$ac_tmp/subs1.awk\" <<\\_ACAWK &&\n+S[\"am__EXEEXT_FALSE\"]=\"#\"\n+S[\"am__EXEEXT_TRUE\"]=\"\"\n+S[\"LTLIBOBJS\"]=\"\"\n+S[\"LIBOBJS\"]=\"\"\n+S[\"subdirs\"]=\" src/univalue src/secp256k1\"\n+S[\"MINIUPNPC_LIBS\"]=\"-lminiupnpc\"\n+S[\"MINIUPNPC_CPPFLAGS\"]=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n+S[\"LEVELDB_TARGET_FLAGS\"]=\"-DOS_WINDOWS\"\n+S[\"TESTDEFS\"]=\"\"\n+S[\"BOOST_LIBS\"]=\"-L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib -lboost_system-mt-s -lboost_filesystem-mt-s -lboost_program_options-mt-s -lbo\"\\\n+\"ost_thread_win32-mt-s -lboost_chrono-mt-s\"\n+S[\"USE_QRCODE\"]=\"\"\n+S[\"USE_UPNP\"]=\"\"\n+S[\"LIBTOOL_APP_LDFLAGS\"]=\" -all-static\"\n+S[\"PIE_FLAGS\"]=\"\"\n+S[\"PIC_FLAGS\"]=\"\"\n+S[\"HARDENED_LDFLAGS\"]=\" -Wl,--dynamicbase -Wl,--nxcompat\"\n+S[\"HARDENED_CPPFLAGS\"]=\" -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2\"\n+S[\"HARDENED_CXXFLAGS\"]=\" -Wstack-protector -fstack-protector-all\"\n+S[\"RELDFLAGS\"]=\"\"\n+S[\"BITCOIN_TX_NAME\"]=\"bitcoin-tx\"\n+S[\"BITCOIN_CLI_NAME\"]=\"bitcoin-cli\"\n+S[\"BITCOIN_GUI_NAME\"]=\"bitcoin-qt\"\n+S[\"BITCOIN_DAEMON_NAME\"]=\"bitcoind\"\n+S[\"COPYRIGHT_HOLDERS_FINAL\"]=\"The Bitcoin Core developers\"\n+S[\"COPYRIGHT_HOLDERS_SUBSTITUTION\"]=\"Bitcoin Core\"\n+S[\"COPYRIGHT_HOLDERS\"]=\"The %s developers\"\n+S[\"COPYRIGHT_YEAR\"]=\"2017\"\n+S[\"CLIENT_VERSION_IS_RELEASE\"]=\"false\"\n+S[\"CLIENT_VERSION_BUILD\"]=\"0\"\n+S[\"CLIENT_VERSION_REVISION\"]=\"99\"\n+S[\"CLIENT_VERSION_MINOR\"]=\"13\"\n+S[\"CLIENT_VERSION_MAJOR\"]=\"0\"\n+S[\"HARDEN_FALSE\"]=\"#\"\n+S[\"HARDEN_TRUE\"]=\"\"\n+S[\"GLIBC_BACK_COMPAT_FALSE\"]=\"\"\n+S[\"GLIBC_BACK_COMPAT_TRUE\"]=\"#\"\n+S[\"USE_LCOV_FALSE\"]=\"\"\n+S[\"USE_LCOV_TRUE\"]=\"#\"\n+S[\"USE_QRCODE_FALSE\"]=\"#\"\n+S[\"USE_QRCODE_TRUE\"]=\"\"\n+S[\"ENABLE_BENCH_FALSE\"]=\"#\"\n+S[\"ENABLE_BENCH_TRUE\"]=\"\"\n+S[\"ENABLE_QT_TESTS_FALSE\"]=\"#\"\n+S[\"ENABLE_QT_TESTS_TRUE\"]=\"\"\n+S[\"ENABLE_QT_FALSE\"]=\"#\"\n+S[\"ENABLE_QT_TRUE\"]=\"\"\n+S[\"ENABLE_TESTS_FALSE\"]=\"#\"\n+S[\"ENABLE_TESTS_TRUE\"]=\"\"\n+S[\"ENABLE_WALLET_FALSE\"]=\"#\"\n+S[\"ENABLE_WALLET_TRUE\"]=\"\"\n+S[\"TARGET_WINDOWS_FALSE\"]=\"#\"\n+S[\"TARGET_WINDOWS_TRUE\"]=\"\"\n+S[\"BUILD_DARWIN_FALSE\"]=\"\"\n+S[\"BUILD_DARWIN_TRUE\"]=\"#\"\n+S[\"TARGET_DARWIN_FALSE\"]=\"\"\n+S[\"TARGET_DARWIN_TRUE\"]=\"#\"\n+S[\"ENABLE_ZMQ_FALSE\"]=\"#\"\n+S[\"ENABLE_ZMQ_TRUE\"]=\"\"\n+S[\"BUILD_BITCOIN_LIBS_FALSE\"]=\"#\"\n+S[\"BUILD_BITCOIN_LIBS_TRUE\"]=\"\"\n+S[\"BUILD_BITCOIN_UTILS_FALSE\"]=\"#\"\n+S[\"BUILD_BITCOIN_UTILS_TRUE\"]=\"\"\n+S[\"BUILD_BITCOIND_FALSE\"]=\"#\"\n+S[\"BUILD_BITCOIND_TRUE\"]=\"\"\n+S[\"PROTOC\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/protoc\"\n+S[\"EMBEDDED_UNIVALUE_FALSE\"]=\"#\"\n+S[\"EMBEDDED_UNIVALUE_TRUE\"]=\"\"\n+S[\"UNIVALUE_LIBS\"]=\"univalue/libunivalue.la\"\n+S[\"UNIVALUE_CFLAGS\"]=\"-I$(srcdir)/univalue/include\"\n+S[\"ZMQ_LIBS\"]=\"-lzmq\"\n+S[\"ZMQ_CFLAGS\"]=\" -DZMQ_STATIC\"\n+S[\"EVENT_PTHREADS_LIBS\"]=\"\"\n+S[\"EVENT_PTHREADS_CFLAGS\"]=\"\"\n+S[\"EVENT_LIBS\"]=\"-levent\"\n+S[\"EVENT_CFLAGS\"]=\"\"\n+S[\"QR_LIBS\"]=\"-lqrencode\"\n+S[\"QR_CFLAGS\"]=\"\"\n+S[\"PROTOBUF_LIBS\"]=\"-lprotobuf\"\n+S[\"PROTOBUF_CFLAGS\"]=\"\"\n+S[\"CRYPTO_LIBS\"]=\"-lcrypto\"\n+S[\"CRYPTO_CFLAGS\"]=\"\"\n+S[\"SSL_LIBS\"]=\"-lssl\"\n+S[\"SSL_CFLAGS\"]=\"\"\n+S[\"BOOST_UNIT_TEST_FRAMEWORK_LIB\"]=\"-lboost_unit_test_framework-mt-s\"\n+S[\"BOOST_CHRONO_LIB\"]=\"-lboost_chrono-mt-s\"\n+S[\"BOOST_THREAD_LIB\"]=\"-lboost_thread_win32-mt-s\"\n+S[\"BOOST_PROGRAM_OPTIONS_LIB\"]=\"-lboost_program_options-mt-s\"\n+S[\"BOOST_FILESYSTEM_LIB\"]=\"-lboost_filesystem-mt-s\"\n+S[\"BOOST_SYSTEM_LIB\"]=\"-lboost_system-mt-s\"\n+S[\"BOOST_LDFLAGS\"]=\"-L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\"\n+S[\"BOOST_CPPFLAGS\"]=\"-mthreads -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include\"\n+S[\"MOC_DEFS\"]=\"-DHAVE_CONFIG_H -I$(srcdir)\"\n+S[\"QT_SELECT\"]=\"qt5\"\n+S[\"QT_TEST_INCLUDES\"]=\"\"\n+S[\"QT_DBUS_INCLUDES\"]=\"\"\n+S[\"QT_LDFLAGS\"]=\" -mwindows\"\n+S[\"QT_INCLUDES\"]=\"-I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../includ\"\\\n+\"e/QtCore -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtGui -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/\"\\\n+\"share/../include/QtWidgets -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtNetwork -I/mnt/c/opensource/bitcoin-msvc/dep\"\\\n+\"ends/i686-w64-mingw32/share/../include/QtTest -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtDBus\"\n+S[\"QT_PIE_FLAGS\"]=\"\"\n+S[\"LUPDATE\"]=\"\"\n+S[\"LRELEASE\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/lrelease\"\n+S[\"RCC\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/rcc\"\n+S[\"UIC\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/uic\"\n+S[\"MOC\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/moc\"\n+S[\"QTPRINT_LIBS\"]=\"\"\n+S[\"QTPRINT_CFLAGS\"]=\"\"\n+S[\"QTXCBQPA_LIBS\"]=\"\"\n+S[\"QTXCBQPA_CFLAGS\"]=\"\"\n+S[\"X11XCB_LIBS\"]=\"\"\n+S[\"X11XCB_CFLAGS\"]=\"\"\n+S[\"QTPLATFORM_LIBS\"]=\"\"\n+S[\"QTPLATFORM_CFLAGS\"]=\"\"\n+S[\"QT_DBUS_LIBS\"]=\"-lQt5DBus -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\"\n+S[\"QT_DBUS_CFLAGS\"]=\"\"\n+S[\"QT_TEST_LIBS\"]=\"-lQt5Test -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\"\n+S[\"QT_TEST_CFLAGS\"]=\"\"\n+S[\"QT_LIBS\"]=\"-lqwindows -lQt5Widgets -lQt5Network -lQt5Gui     -lQt5Core    -lqtharfbuzzng -lqtpcre -lqtpng -lz  -limm32  -L/mnt/c/opensource/bitcoin-msvc/depend\"\\\n+\"s/i686-w64-mingw32/share/../lib -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../plugins/platforms\"\n+S[\"QT_CFLAGS\"]=\"\"\n+S[\"QT_TRANSLATION_DIR\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../translations\"\n+S[\"BDB_CPPFLAGS\"]=\"\"\n+S[\"BDB_LIBS\"]=\"-ldb_cxx-4.8\"\n+S[\"BDB_CFLAGS\"]=\"\"\n+S[\"LIBMEMENV\"]=\"\"\n+S[\"LIBLEVELDB\"]=\"\"\n+S[\"LEVELDB_CPPFLAGS\"]=\"\"\n+S[\"EMBEDDED_LEVELDB_FALSE\"]=\"#\"\n+S[\"EMBEDDED_LEVELDB_TRUE\"]=\"\"\n+S[\"PTHREAD_CFLAGS\"]=\"-pthread\"\n+S[\"PTHREAD_LIBS\"]=\"\"\n+S[\"PTHREAD_CC\"]=\"i686-w64-mingw32-gcc\"\n+S[\"ax_pthread_config\"]=\"\"\n+S[\"EXTENDED_RPC_TESTS\"]=\"\"\n+S[\"PKG_CONFIG_LIBDIR\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib/pkgconfig\"\n+S[\"PKG_CONFIG_PATH\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../share/pkgconfig\"\n+S[\"PKG_CONFIG\"]=\"/usr/bin/pkg-config --static\"\n+S[\"TIFFCP\"]=\"\"\n+S[\"IMAGEMAGICK_CONVERT\"]=\"\"\n+S[\"GENISOIMAGE\"]=\"\"\n+S[\"INSTALLNAMETOOL\"]=\"\"\n+S[\"BREW\"]=\"\"\n+S[\"RSVG_CONVERT\"]=\"\"\n+S[\"PORT\"]=\"\"\n+S[\"WINDOWS_BITS\"]=\"32\"\n+S[\"WINDRES\"]=\"/usr/bin/i686-w64-mingw32-windres\"\n+S[\"MAKENSIS\"]=\"none\"\n+S[\"ENABLE_MAN_FALSE\"]=\"#\"\n+S[\"ENABLE_MAN_TRUE\"]=\"\"\n+S[\"PYTHONPATH\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/lib/python/dist-packages:\"\n+S[\"OBJCOPY\"]=\"/usr/bin/i686-w64-mingw32-objcopy\"\n+S[\"CPPFILT\"]=\"/usr/bin/i686-w64-mingw32-c++filt\"\n+S[\"READELF\"]=\"/usr/bin/i686-w64-mingw32-readelf\"\n+S[\"HEXDUMP\"]=\"/usr/bin/hexdump\"\n+S[\"XGETTEXT\"]=\"\"\n+S[\"CCACHE\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache\"\n+S[\"GIT\"]=\"/usr/bin/git\"\n+S[\"GENHTML\"]=\"\"\n+S[\"PYTHON\"]=\"/usr/bin/python3.4\"\n+S[\"LCOV\"]=\"\"\n+S[\"GCOV\"]=\"/usr/bin/i686-w64-mingw32-gcov\"\n+S[\"CXXCPP\"]=\"i686-w64-mingw32-g++ -std=c++11 -E\"\n+S[\"CPP\"]=\"i686-w64-mingw32-gcc -E\"\n+S[\"OTOOL64\"]=\"\"\n+S[\"OTOOL\"]=\"\"\n+S[\"LIPO\"]=\"\"\n+S[\"NMEDIT\"]=\"\"\n+S[\"DSYMUTIL\"]=\"\"\n+S[\"MANIFEST_TOOL\"]=\":\"\n+S[\"RANLIB\"]=\"/usr/bin/i686-w64-mingw32-ranlib\"\n+S[\"ac_ct_AR\"]=\"\"\n+S[\"AR\"]=\"/usr/bin/i686-w64-mingw32-ar\"\n+S[\"DLLTOOL\"]=\"i686-w64-mingw32-dlltool\"\n+S[\"OBJDUMP\"]=\"i686-w64-mingw32-objdump\"\n+S[\"LN_S\"]=\"ln -s\"\n+S[\"NM\"]=\"i686-w64-mingw32-nm\"\n+S[\"ac_ct_DUMPBIN\"]=\"\"\n+S[\"DUMPBIN\"]=\"\"\n+S[\"LD\"]=\"/usr/bin/i686-w64-mingw32-ld\"\n+S[\"FGREP\"]=\"/bin/grep -F\"\n+S[\"EGREP\"]=\"/bin/grep -E\"\n+S[\"GREP\"]=\"/bin/grep\"\n+S[\"SED\"]=\"/bin/sed\"\n+S[\"am__fastdepCC_FALSE\"]=\"#\"\n+S[\"am__fastdepCC_TRUE\"]=\"\"\n+S[\"CCDEPMODE\"]=\"depmode=gcc3\"\n+S[\"ac_ct_CC\"]=\"\"\n+S[\"CFLAGS\"]=\"-pipe -O2  -g3 -O0\"\n+S[\"CC\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-gcc\"\n+S[\"LIBTOOL\"]=\"$(SHELL) $(top_builddir)/libtool\"\n+S[\"am__fastdepOBJCXX_FALSE\"]=\"#\"\n+S[\"am__fastdepOBJCXX_TRUE\"]=\"\"\n+S[\"OBJCXXDEPMODE\"]=\"depmode=gcc3\"\n+S[\"ac_ct_OBJCXX\"]=\"\"\n+S[\"OBJCXXFLAGS\"]=\"\"\n+S[\"OBJCXX\"]=\"i686-w64-mingw32-g++ -std=c++11\"\n+S[\"HAVE_CXX11\"]=\"1\"\n+S[\"am__fastdepCXX_FALSE\"]=\"#\"\n+S[\"am__fastdepCXX_TRUE\"]=\"\"\n+S[\"CXXDEPMODE\"]=\"depmode=gcc3\"\n+S[\"am__nodep\"]=\"_no\"\n+S[\"AMDEPBACKSLASH\"]=\"\\\\\"\n+S[\"AMDEP_FALSE\"]=\"#\"\n+S[\"AMDEP_TRUE\"]=\"\"\n+S[\"am__quote\"]=\"\"\n+S[\"am__include\"]=\"include\"\n+S[\"DEPDIR\"]=\".deps\"\n+S[\"OBJEXT\"]=\"o\"\n+S[\"EXEEXT\"]=\".exe\"\n+S[\"ac_ct_CXX\"]=\"\"\n+S[\"CPPFLAGS\"]=\"-I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/  -DDEBUG -DDEBUG_LOCKORDER -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_M\"\\\n+\"T -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_FILE_OFFSET_BITS=64\"\n+S[\"LDFLAGS\"]=\"-L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib  -Wl,--large-address-aware\"\n+S[\"CXXFLAGS\"]=\"-pipe -O2  -g3 -O0\"\n+S[\"CXX\"]=\"/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-g++ -std=c++11\"\n+S[\"MAINT\"]=\"\"\n+S[\"MAINTAINER_MODE_FALSE\"]=\"#\"\n+S[\"MAINTAINER_MODE_TRUE\"]=\"\"\n+S[\"AM_BACKSLASH\"]=\"\\\\\"\n+S[\"AM_DEFAULT_VERBOSITY\"]=\"0\"\n+S[\"AM_DEFAULT_V\"]=\"$(AM_DEFAULT_VERBOSITY)\"\n+S[\"AM_V\"]=\"$(V)\"\n+S[\"am__untar\"]=\"$${TAR-tar} xf -\"\n+S[\"am__tar\"]=\"$${TAR-tar} chof - \\\"$$tardir\\\"\"\n+S[\"AMTAR\"]=\"$${TAR-tar}\"\n+S[\"am__leading_dot\"]=\".\"\n+S[\"SET_MAKE\"]=\"\"\n+S[\"AWK\"]=\"gawk\"\n+S[\"mkdir_p\"]=\"$(MKDIR_P)\"\n+S[\"MKDIR_P\"]=\"/bin/mkdir -p\"\n+S[\"INSTALL_STRIP_PROGRAM\"]=\"$(install_sh) -c -s\"\n+S[\"STRIP\"]=\"/usr/bin/i686-w64-mingw32-strip\"\n+S[\"install_sh\"]=\"${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/install-sh\"\n+S[\"MAKEINFO\"]=\"${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing makeinfo\"\n+S[\"AUTOHEADER\"]=\"${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing autoheader\"\n+S[\"AUTOMAKE\"]=\"${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing automake-1.14\"\n+S[\"AUTOCONF\"]=\"${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing autoconf\"\n+S[\"ACLOCAL\"]=\"${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing aclocal-1.14\"\n+S[\"VERSION\"]=\"0.13.99\"\n+S[\"PACKAGE\"]=\"bitcoin\"\n+S[\"CYGPATH_W\"]=\"echo\"\n+S[\"am__isrc\"]=\"\"\n+S[\"INSTALL_DATA\"]=\"${INSTALL} -m 644\"\n+S[\"INSTALL_SCRIPT\"]=\"${INSTALL}\"\n+S[\"INSTALL_PROGRAM\"]=\"${INSTALL}\"\n+S[\"host_os\"]=\"mingw32\"\n+S[\"host_vendor\"]=\"w64\"\n+S[\"host_cpu\"]=\"i686\"\n+S[\"host\"]=\"i686-w64-mingw32\"\n+S[\"build_os\"]=\"linux-gnu\"\n+S[\"build_vendor\"]=\"unknown\"\n+S[\"build_cpu\"]=\"x86_64\"\n+S[\"build\"]=\"x86_64-unknown-linux-gnu\"\n+S[\"target_alias\"]=\"\"\n+S[\"host_alias\"]=\"i686-w64-mingw32\"\n+S[\"build_alias\"]=\"\"\n+S[\"LIBS\"]=\"-lQt5PlatformSupport -lssp -lcrypt32 -liphlpapi -lshlwapi -lmswsock -lws2_32 -ladvapi32 -lrpcrt4 -luuid -loleaut32 -lole32 -lcomctl32 -lshell32 -lwi\"\\\n+\"nmm -lwinspool -lcomdlg32 -lgdi32 -luser32 -lkernel32 -lmingwthrd \"\n+S[\"ECHO_T\"]=\"\"\n+S[\"ECHO_N\"]=\"-n\"\n+S[\"ECHO_C\"]=\"\"\n+S[\"DEFS\"]=\"-DHAVE_CONFIG_H\"\n+S[\"mandir\"]=\"${datarootdir}/man\"\n+S[\"localedir\"]=\"${datarootdir}/locale\"\n+S[\"libdir\"]=\"${exec_prefix}/lib\"\n+S[\"psdir\"]=\"${docdir}\"\n+S[\"pdfdir\"]=\"${docdir}\"\n+S[\"dvidir\"]=\"${docdir}\"\n+S[\"htmldir\"]=\"${docdir}\"\n+S[\"infodir\"]=\"${datarootdir}/info\"\n+S[\"docdir\"]=\"${datarootdir}/doc/${PACKAGE_TARNAME}\"\n+S[\"oldincludedir\"]=\"/usr/include\"\n+S[\"includedir\"]=\"${prefix}/include\"\n+S[\"localstatedir\"]=\"${prefix}/var\"\n+S[\"sharedstatedir\"]=\"${prefix}/com\"\n+S[\"sysconfdir\"]=\"${prefix}/etc\"\n+S[\"datadir\"]=\"${datarootdir}\"\n+S[\"datarootdir\"]=\"${prefix}/share\"\n+S[\"libexecdir\"]=\"${exec_prefix}/libexec\"\n+S[\"sbindir\"]=\"${exec_prefix}/sbin\"\n+S[\"bindir\"]=\"${exec_prefix}/bin\"\n+S[\"program_transform_name\"]=\"s,x,x,\"\n+S[\"prefix\"]=\"/usr/local\"\n+S[\"exec_prefix\"]=\"${prefix}\"\n+S[\"PACKAGE_URL\"]=\"https://bitcoincore.org/\"\n+S[\"PACKAGE_BUGREPORT\"]=\"https://github.com/bitcoin/bitcoin/issues\"\n+S[\"PACKAGE_STRING\"]=\"Bitcoin Core 0.13.99\"\n+S[\"PACKAGE_VERSION\"]=\"0.13.99\"\n+S[\"PACKAGE_TARNAME\"]=\"bitcoin\"\n+S[\"PACKAGE_NAME\"]=\"Bitcoin Core\"\n+S[\"PATH_SEPARATOR\"]=\":\"\n+S[\"SHELL\"]=\"/bin/bash\"\n+_ACAWK\n+cat >>\"$ac_tmp/subs1.awk\" <<_ACAWK &&\n+  for (key in S) S_is_set[key] = 1\n+  FS = \"\u0007\"\n+\n+}\n+{\n+  line = $ 0\n+  nfields = split(line, field, \"@\")\n+  substed = 0\n+  len = length(field[1])\n+  for (i = 2; i < nfields; i++) {\n+    key = field[i]\n+    keylen = length(key)\n+    if (S_is_set[key]) {\n+      value = S[key]\n+      line = substr(line, 1, len) \"\" value \"\" substr(line, len + keylen + 3)\n+      len += length(value) + length(field[++i])\n+      substed = 1\n+    } else\n+      len += 1 + keylen\n+  }\n+\n+  print line\n+}\n+\n+_ACAWK\n+if sed \"s/$ac_cr//\" < /dev/null > /dev/null 2>&1; then\n+  sed \"s/$ac_cr\\$//; s/$ac_cr/$ac_cs_awk_cr/g\"\n+else\n+  cat\n+fi < \"$ac_tmp/subs1.awk\" > \"$ac_tmp/subs.awk\" \\\n+  || as_fn_error $? \"could not setup config files machinery\" \"$LINENO\" 5\n+fi # test -n \"$CONFIG_FILES\"\n+\n+# Set up the scripts for CONFIG_HEADERS section.\n+# No need to generate them if there are no CONFIG_HEADERS.\n+# This happens for instance with `./config.status Makefile'.\n+if test -n \"$CONFIG_HEADERS\"; then\n+cat >\"$ac_tmp/defines.awk\" <<\\_ACAWK ||\n+BEGIN {\n+D[\"PACKAGE_NAME\"]=\" \\\"Bitcoin Core\\\"\"\n+D[\"PACKAGE_TARNAME\"]=\" \\\"bitcoin\\\"\"\n+D[\"PACKAGE_VERSION\"]=\" \\\"0.13.99\\\"\"\n+D[\"PACKAGE_STRING\"]=\" \\\"Bitcoin Core 0.13.99\\\"\"\n+D[\"PACKAGE_BUGREPORT\"]=\" \\\"https://github.com/bitcoin/bitcoin/issues\\\"\"\n+D[\"PACKAGE_URL\"]=\" \\\"https://bitcoincore.org/\\\"\"\n+D[\"HAVE_CXX11\"]=\" 1\"\n+D[\"STDC_HEADERS\"]=\" 1\"\n+D[\"HAVE_SYS_TYPES_H\"]=\" 1\"\n+D[\"HAVE_SYS_STAT_H\"]=\" 1\"\n+D[\"HAVE_STDLIB_H\"]=\" 1\"\n+D[\"HAVE_STRING_H\"]=\" 1\"\n+D[\"HAVE_MEMORY_H\"]=\" 1\"\n+D[\"HAVE_STRINGS_H\"]=\" 1\"\n+D[\"HAVE_INTTYPES_H\"]=\" 1\"\n+D[\"HAVE_STDINT_H\"]=\" 1\"\n+D[\"HAVE_UNISTD_H\"]=\" 1\"\n+D[\"LT_OBJDIR\"]=\" \\\".libs/\\\"\"\n+D[\"HAVE_LIBMINGWTHRD\"]=\" 1\"\n+D[\"HAVE_LIBKERNEL32\"]=\" 1\"\n+D[\"HAVE_LIBUSER32\"]=\" 1\"\n+D[\"HAVE_LIBGDI32\"]=\" 1\"\n+D[\"HAVE_LIBCOMDLG32\"]=\" 1\"\n+D[\"HAVE_LIBWINSPOOL\"]=\" 1\"\n+D[\"HAVE_LIBWINMM\"]=\" 1\"\n+D[\"HAVE_LIBSHELL32\"]=\" 1\"\n+D[\"HAVE_LIBCOMCTL32\"]=\" 1\"\n+D[\"HAVE_LIBOLE32\"]=\" 1\"\n+D[\"HAVE_LIBOLEAUT32\"]=\" 1\"\n+D[\"HAVE_LIBUUID\"]=\" 1\"\n+D[\"HAVE_LIBRPCRT4\"]=\" 1\"\n+D[\"HAVE_LIBADVAPI32\"]=\" 1\"\n+D[\"HAVE_LIBWS2_32\"]=\" 1\"\n+D[\"HAVE_LIBMSWSOCK\"]=\" 1\"\n+D[\"HAVE_LIBSHLWAPI\"]=\" 1\"\n+D[\"HAVE_LIBIPHLPAPI\"]=\" 1\"\n+D[\"HAVE_LIBCRYPT32\"]=\" 1\"\n+D[\"HAVE_PTHREAD_PRIO_INHERIT\"]=\" 1\"\n+D[\"HAVE_PTHREAD\"]=\" 1\"\n+D[\"_FILE_OFFSET_BITS\"]=\" 64\"\n+D[\"HAVE_DECL_STRERROR_R\"]=\" 0\"\n+D[\"HAVE_FUNC_ATTRIBUTE_VISIBILITY\"]=\" 1\"\n+D[\"HAVE_FUNC_ATTRIBUTE_DLLEXPORT\"]=\" 1\"\n+D[\"HAVE_FUNC_ATTRIBUTE_DLLIMPORT\"]=\" 1\"\n+D[\"HAVE_LIBSSP\"]=\" 1\"\n+D[\"HAVE_STDIO_H\"]=\" 1\"\n+D[\"HAVE_STDLIB_H\"]=\" 1\"\n+D[\"HAVE_UNISTD_H\"]=\" 1\"\n+D[\"HAVE_STRINGS_H\"]=\" 1\"\n+D[\"HAVE_SYS_TYPES_H\"]=\" 1\"\n+D[\"HAVE_SYS_STAT_H\"]=\" 1\"\n+D[\"HAVE_DECL_STRNLEN\"]=\" 1\"\n+D[\"HAVE_DECL_DAEMON\"]=\" 0\"\n+D[\"HAVE_DECL_LE16TOH\"]=\" 0\"\n+D[\"HAVE_DECL_LE32TOH\"]=\" 0\"\n+D[\"HAVE_DECL_LE64TOH\"]=\" 0\"\n+D[\"HAVE_DECL_HTOLE16\"]=\" 0\"\n+D[\"HAVE_DECL_HTOLE32\"]=\" 0\"\n+D[\"HAVE_DECL_HTOLE64\"]=\" 0\"\n+D[\"HAVE_DECL_BE16TOH\"]=\" 0\"\n+D[\"HAVE_DECL_BE32TOH\"]=\" 0\"\n+D[\"HAVE_DECL_BE64TOH\"]=\" 0\"\n+D[\"HAVE_DECL_HTOBE16\"]=\" 0\"\n+D[\"HAVE_DECL_HTOBE32\"]=\" 0\"\n+D[\"HAVE_DECL_HTOBE64\"]=\" 0\"\n+D[\"HAVE_DECL_BSWAP_16\"]=\" 0\"\n+D[\"HAVE_DECL_BSWAP_32\"]=\" 0\"\n+D[\"HAVE_DECL_BSWAP_64\"]=\" 0\"\n+D[\"HAVE_VISIBILITY_ATTRIBUTE\"]=\" 1\"\n+D[\"HAVE_MINIUPNPC_MINIWGET_H\"]=\" 1\"\n+D[\"HAVE_MINIUPNPC_MINIUPNPC_H\"]=\" 1\"\n+D[\"HAVE_MINIUPNPC_UPNPCOMMANDS_H\"]=\" 1\"\n+D[\"HAVE_MINIUPNPC_UPNPERRORS_H\"]=\" 1\"\n+D[\"HAVE_LIBIMM32\"]=\" 1\"\n+D[\"HAVE_LIBZ_\"]=\" 1\"\n+D[\"HAVE_LIBQT5CORE___\"]=\" 1\"\n+D[\"HAVE_LIBQT5GUI____\"]=\" 1\"\n+D[\"HAVE_LIBQT5NETWORK\"]=\" 1\"\n+D[\"HAVE_LIBQT5WIDGETS\"]=\" 1\"\n+D[\"HAVE_LIBQT5TEST\"]=\" 1\"\n+D[\"HAVE_LIBQT5DBUS\"]=\" 1\"\n+D[\"HAVE_LIBQT5PLATFORMSUPPORT\"]=\" 1\"\n+D[\"QT_STATICPLUGIN\"]=\" 1\"\n+D[\"QT_QPA_PLATFORM_WINDOWS\"]=\" 1\"\n+D[\"HAVE_BOOST\"]=\" /**/\"\n+D[\"HAVE_BOOST_SYSTEM\"]=\" /**/\"\n+D[\"HAVE_BOOST_FILESYSTEM\"]=\" /**/\"\n+D[\"HAVE_BOOST_PROGRAM_OPTIONS\"]=\" /**/\"\n+D[\"HAVE_BOOST_THREAD\"]=\" /**/\"\n+D[\"HAVE_BOOST_CHRONO\"]=\" /**/\"\n+D[\"HAVE_BOOST_UNIT_TEST_FRAMEWORK\"]=\" /**/\"\n+D[\"HAVE_WORKING_BOOST_SLEEP_FOR\"]=\" 1\"\n+D[\"ENABLE_ZMQ\"]=\" 1\"\n+D[\"HAVE_DECL_EVP_MD_CTX_NEW\"]=\" 0\"\n+D[\"HAVE_CONSENSUS_LIB\"]=\" 1\"\n+D[\"ENABLE_WALLET\"]=\" 1\"\n+D[\"USE_UPNP\"]=\" 0\"\n+D[\"USE_QRCODE\"]=\" 1\"\n+D[\"CLIENT_VERSION_MAJOR\"]=\" 0\"\n+D[\"CLIENT_VERSION_MINOR\"]=\" 13\"\n+D[\"CLIENT_VERSION_REVISION\"]=\" 99\"\n+D[\"CLIENT_VERSION_BUILD\"]=\" 0\"\n+D[\"CLIENT_VERSION_IS_RELEASE\"]=\" false\"\n+D[\"COPYRIGHT_YEAR\"]=\" 2017\"\n+D[\"COPYRIGHT_HOLDERS\"]=\" \\\"The %s developers\\\"\"\n+D[\"COPYRIGHT_HOLDERS_SUBSTITUTION\"]=\" \\\"Bitcoin Core\\\"\"\n+D[\"COPYRIGHT_HOLDERS_FINAL\"]=\" \\\"The Bitcoin Core developers\\\"\"\n+  for (key in D) D_is_set[key] = 1\n+  FS = \"\u0007\"\n+}\n+/^[\\t ]*#[\\t ]*(define|undef)[\\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\\t (]|$)/ {\n+  line = $ 0\n+  split(line, arg, \" \")\n+  if (arg[1] == \"#\") {\n+    defundef = arg[2]\n+    mac1 = arg[3]\n+  } else {\n+    defundef = substr(arg[1], 2)\n+    mac1 = arg[2]\n+  }\n+  split(mac1, mac2, \"(\") #)\n+  macro = mac2[1]\n+  prefix = substr(line, 1, index(line, defundef) - 1)\n+  if (D_is_set[macro]) {\n+    # Preserve the white space surrounding the \"#\".\n+    print prefix \"define\", macro P[macro] D[macro]\n+    next\n+  } else {\n+    # Replace #undef with comments.  This is necessary, for example,\n+    # in the case of _POSIX_SOURCE, which is predefined and required\n+    # on some systems where configure will not decide to define it.\n+    if (defundef == \"undef\") {\n+      print \"/*\", prefix defundef, macro, \"*/\"\n+      next\n+    }\n+  }\n+}\n+{ print }\n+_ACAWK\n+  as_fn_error $? \"could not setup config headers machinery\" \"$LINENO\" 5\n+fi # test -n \"$CONFIG_HEADERS\"\n+\n+\n+eval set X \"  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS\"\n+shift\n+for ac_tag\n+do\n+  case $ac_tag in\n+  :[FHLC]) ac_mode=$ac_tag; continue;;\n+  esac\n+  case $ac_mode$ac_tag in\n+  :[FHL]*:*);;\n+  :L* | :C*:*) as_fn_error $? \"invalid tag \\`$ac_tag'\" \"$LINENO\" 5;;\n+  :[FH]-) ac_tag=-:-;;\n+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;\n+  esac\n+  ac_save_IFS=$IFS\n+  IFS=:\n+  set x $ac_tag\n+  IFS=$ac_save_IFS\n+  shift\n+  ac_file=$1\n+  shift\n+\n+  case $ac_mode in\n+  :L) ac_source=$1;;\n+  :[FH])\n+    ac_file_inputs=\n+    for ac_f\n+    do\n+      case $ac_f in\n+      -) ac_f=\"$ac_tmp/stdin\";;\n+      *) # Look for the file first in the build tree, then in the source tree\n+\t # (if the path is not absolute).  The absolute path cannot be DOS-style,\n+\t # because $ac_f cannot contain `:'.\n+\t test -f \"$ac_f\" ||\n+\t   case $ac_f in\n+\t   [\\\\/$]*) false;;\n+\t   *) test -f \"$srcdir/$ac_f\" && ac_f=\"$srcdir/$ac_f\";;\n+\t   esac ||\n+\t   as_fn_error 1 \"cannot find input file: \\`$ac_f'\" \"$LINENO\" 5;;\n+      esac\n+      case $ac_f in *\\'*) ac_f=`$as_echo \"$ac_f\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; esac\n+      as_fn_append ac_file_inputs \" '$ac_f'\"\n+    done\n+\n+    # Let's still pretend it is `configure' which instantiates (i.e., don't\n+    # use $as_me), people would be surprised to read:\n+    #    /* config.h.  Generated by config.status.  */\n+    configure_input='Generated from '`\n+\t  $as_echo \"$*\" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'\n+\t`' by configure.'\n+    if test x\"$ac_file\" != x-; then\n+      configure_input=\"$ac_file.  $configure_input\"\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: creating $ac_file\" >&5\n+$as_echo \"$as_me: creating $ac_file\" >&6;}\n+    fi\n+    # Neutralize special characters interpreted by sed in replacement strings.\n+    case $configure_input in #(\n+    *\\&* | *\\|* | *\\\\* )\n+       ac_sed_conf_input=`$as_echo \"$configure_input\" |\n+       sed 's/[\\\\\\\\&|]/\\\\\\\\&/g'`;; #(\n+    *) ac_sed_conf_input=$configure_input;;\n+    esac\n+\n+    case $ac_tag in\n+    *:-:* | *:-) cat >\"$ac_tmp/stdin\" \\\n+      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5 ;;\n+    esac\n+    ;;\n+  esac\n+\n+  ac_dir=`$as_dirname -- \"$ac_file\" ||\n+$as_expr X\"$ac_file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n+\t X\"$ac_file\" : 'X\\(//\\)[^/]' \\| \\\n+\t X\"$ac_file\" : 'X\\(//\\)$' \\| \\\n+\t X\"$ac_file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X\"$ac_file\" |\n+    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)[^/].*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'`\n+  as_dir=\"$ac_dir\"; as_fn_mkdir_p\n+  ac_builddir=.\n+\n+case \"$ac_dir\" in\n+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n+*)\n+  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n+  # A \"..\" for each directory in $ac_dir_suffix.\n+  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n+  case $ac_top_builddir_sub in\n+  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n+  esac ;;\n+esac\n+ac_abs_top_builddir=$ac_pwd\n+ac_abs_builddir=$ac_pwd$ac_dir_suffix\n+# for backward compatibility:\n+ac_top_builddir=$ac_top_build_prefix\n+\n+case $srcdir in\n+  .)  # We are building in place.\n+    ac_srcdir=.\n+    ac_top_srcdir=$ac_top_builddir_sub\n+    ac_abs_top_srcdir=$ac_pwd ;;\n+  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n+    ac_srcdir=$srcdir$ac_dir_suffix;\n+    ac_top_srcdir=$srcdir\n+    ac_abs_top_srcdir=$srcdir ;;\n+  *) # Relative name.\n+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n+    ac_top_srcdir=$ac_top_build_prefix$srcdir\n+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\n+esac\n+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n+\n+\n+  case $ac_mode in\n+  :F)\n+  #\n+  # CONFIG_FILE\n+  #\n+\n+  case $INSTALL in\n+  [\\\\/$]* | ?:[\\\\/]* ) ac_INSTALL=$INSTALL ;;\n+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;\n+  esac\n+  ac_MKDIR_P=$MKDIR_P\n+  case $MKDIR_P in\n+  [\\\\/$]* | ?:[\\\\/]* ) ;;\n+  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;\n+  esac\n+# If the template does not know about datarootdir, expand it.\n+# FIXME: This hack should be removed a few years after 2.60.\n+ac_datarootdir_hack=; ac_datarootdir_seen=\n+ac_sed_dataroot='\n+/datarootdir/ {\n+  p\n+  q\n+}\n+/@datadir@/p\n+/@docdir@/p\n+/@infodir@/p\n+/@localedir@/p\n+/@mandir@/p'\n+case `eval \"sed -n \\\"\\$ac_sed_dataroot\\\" $ac_file_inputs\"` in\n+*datarootdir*) ac_datarootdir_seen=yes;;\n+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&5\n+$as_echo \"$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&2;}\n+  ac_datarootdir_hack='\n+  s&@datadir@&${datarootdir}&g\n+  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g\n+  s&@infodir@&${datarootdir}/info&g\n+  s&@localedir@&${datarootdir}/locale&g\n+  s&@mandir@&${datarootdir}/man&g\n+  s&\\${datarootdir}&${prefix}/share&g' ;;\n+esac\n+ac_sed_extra=\"/^[\t ]*VPATH[\t ]*=[\t ]*/{\n+h\n+s///\n+s/^/:/\n+s/[\t ]*$/:/\n+s/:\\$(srcdir):/:/g\n+s/:\\${srcdir}:/:/g\n+s/:@srcdir@:/:/g\n+s/^:*//\n+s/:*$//\n+x\n+s/\\(=[\t ]*\\).*/\\1/\n+G\n+s/\\n//\n+s/^[^=]*=[\t ]*$//\n+}\n+\n+:t\n+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b\n+s|@configure_input@|$ac_sed_conf_input|;t t\n+s&@top_builddir@&$ac_top_builddir_sub&;t t\n+s&@top_build_prefix@&$ac_top_build_prefix&;t t\n+s&@srcdir@&$ac_srcdir&;t t\n+s&@abs_srcdir@&$ac_abs_srcdir&;t t\n+s&@top_srcdir@&$ac_top_srcdir&;t t\n+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t\n+s&@builddir@&$ac_builddir&;t t\n+s&@abs_builddir@&$ac_abs_builddir&;t t\n+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t\n+s&@INSTALL@&$ac_INSTALL&;t t\n+s&@MKDIR_P@&$ac_MKDIR_P&;t t\n+$ac_datarootdir_hack\n+\"\n+eval sed \\\"\\$ac_sed_extra\\\" \"$ac_file_inputs\" | $AWK -f \"$ac_tmp/subs.awk\" \\\n+  >$ac_tmp/out || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n+\n+test -z \"$ac_datarootdir_hack$ac_datarootdir_seen\" &&\n+  { ac_out=`sed -n '/\\${datarootdir}/p' \"$ac_tmp/out\"`; test -n \"$ac_out\"; } &&\n+  { ac_out=`sed -n '/^[\t ]*datarootdir[\t ]*:*=/p' \\\n+      \"$ac_tmp/out\"`; test -z \"$ac_out\"; } &&\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\n+which seems to be undefined.  Please make sure it is defined\" >&5\n+$as_echo \"$as_me: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\n+which seems to be undefined.  Please make sure it is defined\" >&2;}\n+\n+  rm -f \"$ac_tmp/stdin\"\n+  case $ac_file in\n+  -) cat \"$ac_tmp/out\" && rm -f \"$ac_tmp/out\";;\n+  *) rm -f \"$ac_file\" && mv \"$ac_tmp/out\" \"$ac_file\";;\n+  esac \\\n+  || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n+ ;;\n+  :H)\n+  #\n+  # CONFIG_HEADER\n+  #\n+  if test x\"$ac_file\" != x-; then\n+    {\n+      $as_echo \"/* $configure_input  */\" \\\n+      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\"\n+    } >\"$ac_tmp/config.h\" \\\n+      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n+    if diff \"$ac_file\" \"$ac_tmp/config.h\" >/dev/null 2>&1; then\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: $ac_file is unchanged\" >&5\n+$as_echo \"$as_me: $ac_file is unchanged\" >&6;}\n+    else\n+      rm -f \"$ac_file\"\n+      mv \"$ac_tmp/config.h\" \"$ac_file\" \\\n+\t|| as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n+    fi\n+  else\n+    $as_echo \"/* $configure_input  */\" \\\n+      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\" \\\n+      || as_fn_error $? \"could not create -\" \"$LINENO\" 5\n+  fi\n+# Compute \"$ac_file\"'s index in $config_headers.\n+_am_arg=\"$ac_file\"\n+_am_stamp_count=1\n+for _am_header in $config_headers :; do\n+  case $_am_header in\n+    $_am_arg | $_am_arg:* )\n+      break ;;\n+    * )\n+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n+  esac\n+done\n+echo \"timestamp for $_am_arg\" >`$as_dirname -- \"$_am_arg\" ||\n+$as_expr X\"$_am_arg\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n+\t X\"$_am_arg\" : 'X\\(//\\)[^/]' \\| \\\n+\t X\"$_am_arg\" : 'X\\(//\\)$' \\| \\\n+\t X\"$_am_arg\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X\"$_am_arg\" |\n+    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)[^/].*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'`/stamp-h$_am_stamp_count\n+ ;;\n+  :L)\n+  #\n+  # CONFIG_LINK\n+  #\n+\n+  if test \"$ac_source\" = \"$ac_file\" && test \"$srcdir\" = '.'; then\n+    :\n+  else\n+    # Prefer the file from the source tree if names are identical.\n+    if test \"$ac_source\" = \"$ac_file\" || test ! -r \"$ac_source\"; then\n+      ac_source=$srcdir/$ac_source\n+    fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file\" >&5\n+$as_echo \"$as_me: linking $ac_source to $ac_file\" >&6;}\n+\n+    if test ! -r \"$ac_source\"; then\n+      as_fn_error $? \"$ac_source: file not found\" \"$LINENO\" 5\n+    fi\n+    rm -f \"$ac_file\"\n+\n+    # Try a relative symlink, then a hard link, then a copy.\n+    case $ac_source in\n+    [\\\\/$]* | ?:[\\\\/]* ) ac_rel_source=$ac_source ;;\n+\t*) ac_rel_source=$ac_top_build_prefix$ac_source ;;\n+    esac\n+    ln -s \"$ac_rel_source\" \"$ac_file\" 2>/dev/null ||\n+      ln \"$ac_source\" \"$ac_file\" 2>/dev/null ||\n+      cp -p \"$ac_source\" \"$ac_file\" ||\n+      as_fn_error $? \"cannot link or copy $ac_source to $ac_file\" \"$LINENO\" 5\n+  fi\n+ ;;\n+  :C)  { $as_echo \"$as_me:${as_lineno-$LINENO}: executing $ac_file commands\" >&5\n+$as_echo \"$as_me: executing $ac_file commands\" >&6;}\n+ ;;\n+  esac\n+\n+\n+  case $ac_file$ac_mode in\n+    \"depfiles\":C) test x\"$AMDEP_TRUE\" != x\"\" || {\n+  # Older Autoconf quotes --file arguments for eval, but not when files\n+  # are listed without --file.  Let's play safe and only enable the eval\n+  # if we detect the quoting.\n+  case $CONFIG_FILES in\n+  *\\'*) eval set x \"$CONFIG_FILES\" ;;\n+  *)   set x $CONFIG_FILES ;;\n+  esac\n+  shift\n+  for mf\n+  do\n+    # Strip MF so we end up with the name of the file.\n+    mf=`echo \"$mf\" | sed -e 's/:.*$//'`\n+    # Check whether this is an Automake generated Makefile or not.\n+    # We used to match only the files named 'Makefile.in', but\n+    # some people rename them; so instead we look at the file content.\n+    # Grep'ing the first line is not enough: some people post-process\n+    # each Makefile.in and add a new line on top of each file to say so.\n+    # Grep'ing the whole file is not good either: AIX grep has a line\n+    # limit of 2048, but all sed's we know have understand at least 4000.\n+    if sed -n 's,^#.*generated by automake.*,X,p' \"$mf\" | grep X >/dev/null 2>&1; then\n+      dirpart=`$as_dirname -- \"$mf\" ||\n+$as_expr X\"$mf\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n+\t X\"$mf\" : 'X\\(//\\)[^/]' \\| \\\n+\t X\"$mf\" : 'X\\(//\\)$' \\| \\\n+\t X\"$mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X\"$mf\" |\n+    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)[^/].*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'`\n+    else\n+      continue\n+    fi\n+    # Extract the definition of DEPDIR, am__include, and am__quote\n+    # from the Makefile without running 'make'.\n+    DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n+    test -z \"$DEPDIR\" && continue\n+    am__include=`sed -n 's/^am__include = //p' < \"$mf\"`\n+    test -z \"$am__include\" && continue\n+    am__quote=`sed -n 's/^am__quote = //p' < \"$mf\"`\n+    # Find all dependency output files, they are included files with\n+    # $(DEPDIR) in their names.  We invoke sed twice because it is the\n+    # simplest approach to changing $(DEPDIR) to its actual value in the\n+    # expansion.\n+    for file in `sed -n \"\n+      s/^$am__include $am__quote\\(.*(DEPDIR).*\\)$am__quote\"'$/\\1/p' <\"$mf\" | \\\n+\t sed -e 's/\\$(DEPDIR)/'\"$DEPDIR\"'/g'`; do\n+      # Make sure the directory exists.\n+      test -f \"$dirpart/$file\" && continue\n+      fdir=`$as_dirname -- \"$file\" ||\n+$as_expr X\"$file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n+\t X\"$file\" : 'X\\(//\\)[^/]' \\| \\\n+\t X\"$file\" : 'X\\(//\\)$' \\| \\\n+\t X\"$file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X\"$file\" |\n+    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)[^/].*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'`\n+      as_dir=$dirpart/$fdir; as_fn_mkdir_p\n+      # echo \"creating $dirpart/$file\"\n+      echo '# dummy' > \"$dirpart/$file\"\n+    done\n+  done\n+}\n+ ;;\n+    \"libtool\":C)\n+\n+    # See if we are running on zsh, and set the options which allow our\n+    # commands through without removal of \\ escapes.\n+    if test -n \"${ZSH_VERSION+set}\" ; then\n+      setopt NO_GLOB_SUBST\n+    fi\n+\n+    cfgfile=\"${ofile}T\"\n+    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n+    $RM \"$cfgfile\"\n+\n+    cat <<_LT_EOF >> \"$cfgfile\"\n+#! $SHELL\n+\n+# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n+# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION\n+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n+# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n+#\n+#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n+#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+#                 Foundation, Inc.\n+#   Written by Gordon Matzigkeit, 1996\n+#\n+#   This file is part of GNU Libtool.\n+#\n+# GNU Libtool is free software; you can redistribute it and/or\n+# modify it under the terms of the GNU General Public License as\n+# published by the Free Software Foundation; either version 2 of\n+# the License, or (at your option) any later version.\n+#\n+# As a special exception to the GNU General Public License,\n+# if you distribute this file as part of a program or library that\n+# is built using GNU Libtool, you may include this file under the\n+# same distribution terms that you use for the rest of that program.\n+#\n+# GNU Libtool is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GNU Libtool; see the file COPYING.  If not, a copy\n+# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n+# obtained by writing to the Free Software Foundation, Inc.,\n+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n+\n+\n+# The names of the tagged configurations supported by this script.\n+available_tags=\"CXX \"\n+\n+# ### BEGIN LIBTOOL CONFIG\n+\n+# Which release of libtool.m4 was used?\n+macro_version=$macro_version\n+macro_revision=$macro_revision\n+\n+# What type of objects to build.\n+pic_mode=$pic_mode\n+\n+# Whether or not to build shared libraries.\n+build_libtool_libs=$enable_shared\n+\n+# Whether or not to build static libraries.\n+build_old_libs=$enable_static\n+\n+# Whether or not to optimize for fast installation.\n+fast_install=$enable_fast_install\n+\n+# Shell to use when invoking shell scripts.\n+SHELL=$lt_SHELL\n+\n+# An echo program that protects backslashes.\n+ECHO=$lt_ECHO\n+\n+# The PATH separator for the build system.\n+PATH_SEPARATOR=$lt_PATH_SEPARATOR\n+\n+# The host system.\n+host_alias=$host_alias\n+host=$host\n+host_os=$host_os\n+\n+# The build system.\n+build_alias=$build_alias\n+build=$build\n+build_os=$build_os\n+\n+# A sed program that does not truncate output.\n+SED=$lt_SED\n+\n+# Sed that helps us avoid accidentally triggering echo(1) options like -n.\n+Xsed=\"\\$SED -e 1s/^X//\"\n+\n+# A grep program that handles long lines.\n+GREP=$lt_GREP\n+\n+# An ERE matcher.\n+EGREP=$lt_EGREP\n+\n+# A literal string matcher.\n+FGREP=$lt_FGREP\n+\n+# A BSD- or MS-compatible name lister.\n+NM=$lt_NM\n+\n+# Whether we need soft or hard links.\n+LN_S=$lt_LN_S\n+\n+# What is the maximum length of a command?\n+max_cmd_len=$max_cmd_len\n+\n+# Object file suffix (normally \"o\").\n+objext=$ac_objext\n+\n+# Executable file suffix (normally \"\").\n+exeext=$exeext\n+\n+# whether the shell understands \"unset\".\n+lt_unset=$lt_unset\n+\n+# turn spaces into newlines.\n+SP2NL=$lt_lt_SP2NL\n+\n+# turn newlines into spaces.\n+NL2SP=$lt_lt_NL2SP\n+\n+# convert \\$build file names to \\$host format.\n+to_host_file_cmd=$lt_cv_to_host_file_cmd\n+\n+# convert \\$build files to toolchain format.\n+to_tool_file_cmd=$lt_cv_to_tool_file_cmd\n+\n+# An object symbol dumper.\n+OBJDUMP=$lt_OBJDUMP\n+\n+# Method to check whether dependent libraries are shared objects.\n+deplibs_check_method=$lt_deplibs_check_method\n+\n+# Command to use when deplibs_check_method = \"file_magic\".\n+file_magic_cmd=$lt_file_magic_cmd\n+\n+# How to find potential files when deplibs_check_method = \"file_magic\".\n+file_magic_glob=$lt_file_magic_glob\n+\n+# Find potential files using nocaseglob when deplibs_check_method = \"file_magic\".\n+want_nocaseglob=$lt_want_nocaseglob\n+\n+# DLL creation program.\n+DLLTOOL=$lt_DLLTOOL\n+\n+# Command to associate shared and link libraries.\n+sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd\n+\n+# The archiver.\n+AR=$lt_AR\n+\n+# Flags to create an archive.\n+AR_FLAGS=$lt_AR_FLAGS\n+\n+# How to feed a file listing to the archiver.\n+archiver_list_spec=$lt_archiver_list_spec\n+\n+# A symbol stripping program.\n+STRIP=$lt_STRIP\n+\n+# Commands used to install an old-style archive.\n+RANLIB=$lt_RANLIB\n+old_postinstall_cmds=$lt_old_postinstall_cmds\n+old_postuninstall_cmds=$lt_old_postuninstall_cmds\n+\n+# Whether to use a lock for old archive extraction.\n+lock_old_archive_extraction=$lock_old_archive_extraction\n+\n+# A C compiler.\n+LTCC=$lt_CC\n+\n+# LTCC compiler flags.\n+LTCFLAGS=$lt_CFLAGS\n+\n+# Take the output of nm and produce a listing of raw symbols and C names.\n+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe\n+\n+# Transform the output of nm in a proper C declaration.\n+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl\n+\n+# Transform the output of nm in a C name address pair.\n+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address\n+\n+# Transform the output of nm in a C name address pair when lib prefix is needed.\n+global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix\n+\n+# Specify filename containing input files for \\$NM.\n+nm_file_list_spec=$lt_nm_file_list_spec\n+\n+# The root where to search for dependent libraries,and in which our libraries should be installed.\n+lt_sysroot=$lt_sysroot\n+\n+# The name of the directory that contains temporary libtool files.\n+objdir=$objdir\n+\n+# Used to examine libraries when file_magic_cmd begins with \"file\".\n+MAGIC_CMD=$MAGIC_CMD\n+\n+# Must we lock files when doing compilation?\n+need_locks=$lt_need_locks\n+\n+# Manifest tool.\n+MANIFEST_TOOL=$lt_MANIFEST_TOOL\n+\n+# Tool to manipulate archived DWARF debug symbol files on Mac OS X.\n+DSYMUTIL=$lt_DSYMUTIL\n+\n+# Tool to change global to local symbols on Mac OS X.\n+NMEDIT=$lt_NMEDIT\n+\n+# Tool to manipulate fat objects and archives on Mac OS X.\n+LIPO=$lt_LIPO\n+\n+# ldd/readelf like tool for Mach-O binaries on Mac OS X.\n+OTOOL=$lt_OTOOL\n+\n+# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.\n+OTOOL64=$lt_OTOOL64\n+\n+# Old archive suffix (normally \"a\").\n+libext=$libext\n+\n+# Shared library suffix (normally \".so\").\n+shrext_cmds=$lt_shrext_cmds\n+\n+# The commands to extract the exported symbol list from a shared archive.\n+extract_expsyms_cmds=$lt_extract_expsyms_cmds\n+\n+# Variables whose values should be saved in libtool wrapper scripts and\n+# restored at link time.\n+variables_saved_for_relink=$lt_variables_saved_for_relink\n+\n+# Do we need the \"lib\" prefix for modules?\n+need_lib_prefix=$need_lib_prefix\n+\n+# Do we need a version for libraries?\n+need_version=$need_version\n+\n+# Library versioning type.\n+version_type=$version_type\n+\n+# Shared library runtime path variable.\n+runpath_var=$runpath_var\n+\n+# Shared library path variable.\n+shlibpath_var=$shlibpath_var\n+\n+# Is shlibpath searched before the hard-coded library search path?\n+shlibpath_overrides_runpath=$shlibpath_overrides_runpath\n+\n+# Format of library name prefix.\n+libname_spec=$lt_libname_spec\n+\n+# List of archive names.  First name is the real one, the rest are links.\n+# The last name is the one that the linker finds with -lNAME\n+library_names_spec=$lt_library_names_spec\n+\n+# The coded name of the library, if different from the real name.\n+soname_spec=$lt_soname_spec\n+\n+# Permission mode override for installation of shared libraries.\n+install_override_mode=$lt_install_override_mode\n+\n+# Command to use after installation of a shared archive.\n+postinstall_cmds=$lt_postinstall_cmds\n+\n+# Command to use after uninstallation of a shared archive.\n+postuninstall_cmds=$lt_postuninstall_cmds\n+\n+# Commands used to finish a libtool library installation in a directory.\n+finish_cmds=$lt_finish_cmds\n+\n+# As \"finish_cmds\", except a single script fragment to be evaled but\n+# not shown.\n+finish_eval=$lt_finish_eval\n+\n+# Whether we should hardcode library paths into libraries.\n+hardcode_into_libs=$hardcode_into_libs\n+\n+# Compile-time system search path for libraries.\n+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n+\n+# Run-time system search path for libraries.\n+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec\n+\n+# Whether dlopen is supported.\n+dlopen_support=$enable_dlopen\n+\n+# Whether dlopen of programs is supported.\n+dlopen_self=$enable_dlopen_self\n+\n+# Whether dlopen of statically linked programs is supported.\n+dlopen_self_static=$enable_dlopen_self_static\n+\n+# Commands to strip libraries.\n+old_striplib=$lt_old_striplib\n+striplib=$lt_striplib\n+\n+\n+# The linker used to build libraries.\n+LD=$lt_LD\n+\n+# How to create reloadable object files.\n+reload_flag=$lt_reload_flag\n+reload_cmds=$lt_reload_cmds\n+\n+# Commands used to build an old-style archive.\n+old_archive_cmds=$lt_old_archive_cmds\n+\n+# A language specific compiler.\n+CC=$lt_compiler\n+\n+# Is the compiler the GNU compiler?\n+with_gcc=$GCC\n+\n+# Compiler flag to turn off builtin functions.\n+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag\n+\n+# Additional compiler flags for building library objects.\n+pic_flag=$lt_lt_prog_compiler_pic\n+\n+# How to pass a linker flag through the compiler.\n+wl=$lt_lt_prog_compiler_wl\n+\n+# Compiler flag to prevent dynamic linking.\n+link_static_flag=$lt_lt_prog_compiler_static\n+\n+# Does compiler simultaneously support -c and -o options?\n+compiler_c_o=$lt_lt_cv_prog_compiler_c_o\n+\n+# Whether or not to add -lc for building shared libraries.\n+build_libtool_need_lc=$archive_cmds_need_lc\n+\n+# Whether or not to disallow shared libs when runtime libs are static.\n+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes\n+\n+# Compiler flag to allow reflexive dlopens.\n+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec\n+\n+# Compiler flag to generate shared objects directly from archives.\n+whole_archive_flag_spec=$lt_whole_archive_flag_spec\n+\n+# Whether the compiler copes with passing no objects directly.\n+compiler_needs_object=$lt_compiler_needs_object\n+\n+# Create an old-style archive from a shared archive.\n+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds\n+\n+# Create a temporary old-style archive to link instead of a shared archive.\n+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds\n+\n+# Commands used to build a shared archive.\n+archive_cmds=$lt_archive_cmds\n+archive_expsym_cmds=$lt_archive_expsym_cmds\n+\n+# Commands used to build a loadable module if different from building\n+# a shared archive.\n+module_cmds=$lt_module_cmds\n+module_expsym_cmds=$lt_module_expsym_cmds\n+\n+# Whether we are building with GNU ld or not.\n+with_gnu_ld=$lt_with_gnu_ld\n+\n+# Flag that allows shared libraries with undefined symbols to be built.\n+allow_undefined_flag=$lt_allow_undefined_flag\n+\n+# Flag that enforces no undefined symbols.\n+no_undefined_flag=$lt_no_undefined_flag\n+\n+# Flag to hardcode \\$libdir into a binary during linking.\n+# This must work even if \\$libdir does not exist\n+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec\n+\n+# Whether we need a single \"-rpath\" flag with a separated argument.\n+hardcode_libdir_separator=$lt_hardcode_libdir_separator\n+\n+# Set to \"yes\" if using DIR/libNAME\\${shared_ext} during linking hardcodes\n+# DIR into the resulting binary.\n+hardcode_direct=$hardcode_direct\n+\n+# Set to \"yes\" if using DIR/libNAME\\${shared_ext} during linking hardcodes\n+# DIR into the resulting binary and the resulting library dependency is\n+# \"absolute\",i.e impossible to change by setting \\${shlibpath_var} if the\n+# library is relocated.\n+hardcode_direct_absolute=$hardcode_direct_absolute\n+\n+# Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n+# into the resulting binary.\n+hardcode_minus_L=$hardcode_minus_L\n+\n+# Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n+# into the resulting binary.\n+hardcode_shlibpath_var=$hardcode_shlibpath_var\n+\n+# Set to \"yes\" if building a shared library automatically hardcodes DIR\n+# into the library and all subsequent libraries and executables linked\n+# against it.\n+hardcode_automatic=$hardcode_automatic\n+\n+# Set to yes if linker adds runtime paths of dependent libraries\n+# to runtime path list.\n+inherit_rpath=$inherit_rpath\n+\n+# Whether libtool must link a program against all its dependency libraries.\n+link_all_deplibs=$link_all_deplibs\n+\n+# Set to \"yes\" if exported symbols are required.\n+always_export_symbols=$always_export_symbols\n+\n+# The commands to list exported symbols.\n+export_symbols_cmds=$lt_export_symbols_cmds\n+\n+# Symbols that should not be listed in the preloaded symbols.\n+exclude_expsyms=$lt_exclude_expsyms\n+\n+# Symbols that must always be exported.\n+include_expsyms=$lt_include_expsyms\n+\n+# Commands necessary for linking programs (against libraries) with templates.\n+prelink_cmds=$lt_prelink_cmds\n+\n+# Commands necessary for finishing linking programs.\n+postlink_cmds=$lt_postlink_cmds\n+\n+# Specify filename containing input files.\n+file_list_spec=$lt_file_list_spec\n+\n+# How to hardcode a shared library path into an executable.\n+hardcode_action=$hardcode_action\n+\n+# The directories searched by this compiler when creating a shared library.\n+compiler_lib_search_dirs=$lt_compiler_lib_search_dirs\n+\n+# Dependencies to place before and after the objects being linked to\n+# create a shared library.\n+predep_objects=$lt_predep_objects\n+postdep_objects=$lt_postdep_objects\n+predeps=$lt_predeps\n+postdeps=$lt_postdeps\n+\n+# The library search path used internally by the compiler when linking\n+# a shared library.\n+compiler_lib_search_path=$lt_compiler_lib_search_path\n+\n+# ### END LIBTOOL CONFIG\n+\n+_LT_EOF\n+\n+  case $host_os in\n+  aix3*)\n+    cat <<\\_LT_EOF >> \"$cfgfile\"\n+# AIX sometimes has problems with the GCC collect2 program.  For some\n+# reason, if we set the COLLECT_NAMES environment variable, the problems\n+# vanish in a puff of smoke.\n+if test \"X${COLLECT_NAMES+set}\" != Xset; then\n+  COLLECT_NAMES=\n+  export COLLECT_NAMES\n+fi\n+_LT_EOF\n+    ;;\n+  esac\n+\n+\n+ltmain=\"$ac_aux_dir/ltmain.sh\"\n+\n+\n+  # We use sed instead of cat because bash on DJGPP gets confused if\n+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n+  # text mode, it properly converts lines to CR/LF.  This bash problem\n+  # is reportedly fixed, but why not run on old versions too?\n+  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n+     || (rm -f \"$cfgfile\"; exit 1)\n+\n+  if test x\"$xsi_shell\" = xyes; then\n+  sed -e '/^func_dirname ()$/,/^} # func_dirname /c\\\n+func_dirname ()\\\n+{\\\n+\\    case ${1} in\\\n+\\      */*) func_dirname_result=\"${1%/*}${2}\" ;;\\\n+\\      *  ) func_dirname_result=\"${3}\" ;;\\\n+\\    esac\\\n+} # Extended-shell func_dirname implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_basename ()$/,/^} # func_basename /c\\\n+func_basename ()\\\n+{\\\n+\\    func_basename_result=\"${1##*/}\"\\\n+} # Extended-shell func_basename implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_dirname_and_basename ()$/,/^} # func_dirname_and_basename /c\\\n+func_dirname_and_basename ()\\\n+{\\\n+\\    case ${1} in\\\n+\\      */*) func_dirname_result=\"${1%/*}${2}\" ;;\\\n+\\      *  ) func_dirname_result=\"${3}\" ;;\\\n+\\    esac\\\n+\\    func_basename_result=\"${1##*/}\"\\\n+} # Extended-shell func_dirname_and_basename implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_stripname ()$/,/^} # func_stripname /c\\\n+func_stripname ()\\\n+{\\\n+\\    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\\\n+\\    # positional parameters, so assign one to ordinary parameter first.\\\n+\\    func_stripname_result=${3}\\\n+\\    func_stripname_result=${func_stripname_result#\"${1}\"}\\\n+\\    func_stripname_result=${func_stripname_result%\"${2}\"}\\\n+} # Extended-shell func_stripname implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_split_long_opt ()$/,/^} # func_split_long_opt /c\\\n+func_split_long_opt ()\\\n+{\\\n+\\    func_split_long_opt_name=${1%%=*}\\\n+\\    func_split_long_opt_arg=${1#*=}\\\n+} # Extended-shell func_split_long_opt implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_split_short_opt ()$/,/^} # func_split_short_opt /c\\\n+func_split_short_opt ()\\\n+{\\\n+\\    func_split_short_opt_arg=${1#??}\\\n+\\    func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\\\n+} # Extended-shell func_split_short_opt implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_lo2o ()$/,/^} # func_lo2o /c\\\n+func_lo2o ()\\\n+{\\\n+\\    case ${1} in\\\n+\\      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\\\n+\\      *)    func_lo2o_result=${1} ;;\\\n+\\    esac\\\n+} # Extended-shell func_lo2o implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_xform ()$/,/^} # func_xform /c\\\n+func_xform ()\\\n+{\\\n+    func_xform_result=${1%.*}.lo\\\n+} # Extended-shell func_xform implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_arith ()$/,/^} # func_arith /c\\\n+func_arith ()\\\n+{\\\n+    func_arith_result=$(( $* ))\\\n+} # Extended-shell func_arith implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_len ()$/,/^} # func_len /c\\\n+func_len ()\\\n+{\\\n+    func_len_result=${#1}\\\n+} # Extended-shell func_len implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+fi\n+\n+if test x\"$lt_shell_append\" = xyes; then\n+  sed -e '/^func_append ()$/,/^} # func_append /c\\\n+func_append ()\\\n+{\\\n+    eval \"${1}+=\\\\${2}\"\\\n+} # Extended-shell func_append implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  sed -e '/^func_append_quoted ()$/,/^} # func_append_quoted /c\\\n+func_append_quoted ()\\\n+{\\\n+\\    func_quote_for_eval \"${2}\"\\\n+\\    eval \"${1}+=\\\\\\\\ \\\\$func_quote_for_eval_result\"\\\n+} # Extended-shell func_append_quoted implementation' \"$cfgfile\" > $cfgfile.tmp \\\n+  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+test 0 -eq $? || _lt_function_replace_fail=:\n+\n+\n+  # Save a `func_append' function call where possible by direct use of '+='\n+  sed -e 's%func_append \\([a-zA-Z_]\\{1,\\}\\) \"%\\1+=\"%g' $cfgfile > $cfgfile.tmp \\\n+    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+  test 0 -eq $? || _lt_function_replace_fail=:\n+else\n+  # Save a `func_append' function call even when '+=' is not available\n+  sed -e 's%func_append \\([a-zA-Z_]\\{1,\\}\\) \"%\\1=\"$\\1%g' $cfgfile > $cfgfile.tmp \\\n+    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n+      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n+  test 0 -eq $? || _lt_function_replace_fail=:\n+fi\n+\n+if test x\"$_lt_function_replace_fail\" = x\":\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Unable to substitute extended shell functions in $ofile\" >&5\n+$as_echo \"$as_me: WARNING: Unable to substitute extended shell functions in $ofile\" >&2;}\n+fi\n+\n+\n+   mv -f \"$cfgfile\" \"$ofile\" ||\n+    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n+  chmod +x \"$ofile\"\n+\n+\n+    cat <<_LT_EOF >> \"$ofile\"\n+\n+# ### BEGIN LIBTOOL TAG CONFIG: CXX\n+\n+# The linker used to build libraries.\n+LD=$lt_LD_CXX\n+\n+# How to create reloadable object files.\n+reload_flag=$lt_reload_flag_CXX\n+reload_cmds=$lt_reload_cmds_CXX\n+\n+# Commands used to build an old-style archive.\n+old_archive_cmds=$lt_old_archive_cmds_CXX\n+\n+# A language specific compiler.\n+CC=$lt_compiler_CXX\n+\n+# Is the compiler the GNU compiler?\n+with_gcc=$GCC_CXX\n+\n+# Compiler flag to turn off builtin functions.\n+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX\n+\n+# Additional compiler flags for building library objects.\n+pic_flag=$lt_lt_prog_compiler_pic_CXX\n+\n+# How to pass a linker flag through the compiler.\n+wl=$lt_lt_prog_compiler_wl_CXX\n+\n+# Compiler flag to prevent dynamic linking.\n+link_static_flag=$lt_lt_prog_compiler_static_CXX\n+\n+# Does compiler simultaneously support -c and -o options?\n+compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX\n+\n+# Whether or not to add -lc for building shared libraries.\n+build_libtool_need_lc=$archive_cmds_need_lc_CXX\n+\n+# Whether or not to disallow shared libs when runtime libs are static.\n+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX\n+\n+# Compiler flag to allow reflexive dlopens.\n+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX\n+\n+# Compiler flag to generate shared objects directly from archives.\n+whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX\n+\n+# Whether the compiler copes with passing no objects directly.\n+compiler_needs_object=$lt_compiler_needs_object_CXX\n+\n+# Create an old-style archive from a shared archive.\n+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX\n+\n+# Create a temporary old-style archive to link instead of a shared archive.\n+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX\n+\n+# Commands used to build a shared archive.\n+archive_cmds=$lt_archive_cmds_CXX\n+archive_expsym_cmds=$lt_archive_expsym_cmds_CXX\n+\n+# Commands used to build a loadable module if different from building\n+# a shared archive.\n+module_cmds=$lt_module_cmds_CXX\n+module_expsym_cmds=$lt_module_expsym_cmds_CXX\n+\n+# Whether we are building with GNU ld or not.\n+with_gnu_ld=$lt_with_gnu_ld_CXX\n+\n+# Flag that allows shared libraries with undefined symbols to be built.\n+allow_undefined_flag=$lt_allow_undefined_flag_CXX\n+\n+# Flag that enforces no undefined symbols.\n+no_undefined_flag=$lt_no_undefined_flag_CXX\n+\n+# Flag to hardcode \\$libdir into a binary during linking.\n+# This must work even if \\$libdir does not exist\n+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX\n+\n+# Whether we need a single \"-rpath\" flag with a separated argument.\n+hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX\n+\n+# Set to \"yes\" if using DIR/libNAME\\${shared_ext} during linking hardcodes\n+# DIR into the resulting binary.\n+hardcode_direct=$hardcode_direct_CXX\n+\n+# Set to \"yes\" if using DIR/libNAME\\${shared_ext} during linking hardcodes\n+# DIR into the resulting binary and the resulting library dependency is\n+# \"absolute\",i.e impossible to change by setting \\${shlibpath_var} if the\n+# library is relocated.\n+hardcode_direct_absolute=$hardcode_direct_absolute_CXX\n+\n+# Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n+# into the resulting binary.\n+hardcode_minus_L=$hardcode_minus_L_CXX\n+\n+# Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n+# into the resulting binary.\n+hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX\n+\n+# Set to \"yes\" if building a shared library automatically hardcodes DIR\n+# into the library and all subsequent libraries and executables linked\n+# against it.\n+hardcode_automatic=$hardcode_automatic_CXX\n+\n+# Set to yes if linker adds runtime paths of dependent libraries\n+# to runtime path list.\n+inherit_rpath=$inherit_rpath_CXX\n+\n+# Whether libtool must link a program against all its dependency libraries.\n+link_all_deplibs=$link_all_deplibs_CXX\n+\n+# Set to \"yes\" if exported symbols are required.\n+always_export_symbols=$always_export_symbols_CXX\n+\n+# The commands to list exported symbols.\n+export_symbols_cmds=$lt_export_symbols_cmds_CXX\n+\n+# Symbols that should not be listed in the preloaded symbols.\n+exclude_expsyms=$lt_exclude_expsyms_CXX\n+\n+# Symbols that must always be exported.\n+include_expsyms=$lt_include_expsyms_CXX\n+\n+# Commands necessary for linking programs (against libraries) with templates.\n+prelink_cmds=$lt_prelink_cmds_CXX\n+\n+# Commands necessary for finishing linking programs.\n+postlink_cmds=$lt_postlink_cmds_CXX\n+\n+# Specify filename containing input files.\n+file_list_spec=$lt_file_list_spec_CXX\n+\n+# How to hardcode a shared library path into an executable.\n+hardcode_action=$hardcode_action_CXX\n+\n+# The directories searched by this compiler when creating a shared library.\n+compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX\n+\n+# Dependencies to place before and after the objects being linked to\n+# create a shared library.\n+predep_objects=$lt_predep_objects_CXX\n+postdep_objects=$lt_postdep_objects_CXX\n+predeps=$lt_predeps_CXX\n+postdeps=$lt_postdeps_CXX\n+\n+# The library search path used internally by the compiler when linking\n+# a shared library.\n+compiler_lib_search_path=$lt_compiler_lib_search_path_CXX\n+\n+# ### END LIBTOOL TAG CONFIG: CXX\n+_LT_EOF\n+\n+ ;;\n+    \"qa/pull-tester/tests_config.py\":F) chmod +x qa/pull-tester/tests_config.py ;;\n+    \"contrib/devtools/split-debug.sh\":F) chmod +x contrib/devtools/split-debug.sh ;;\n+\n+  esac\n+done # for ac_tag\n+\n+\n+as_fn_exit 0"
      },
      {
        "sha": "ae4c181aea9ead0c9f5b96ddf07e170759258adb",
        "filename": "doc/man/Makefile",
        "status": "added",
        "additions": 647,
        "deletions": 0,
        "changes": 647,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/doc/man/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/doc/man/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,647 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# doc/man/Makefile.  Generated from Makefile.in by configure.\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+\n+\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/bitcoin\n+pkgincludedir = $(includedir)/bitcoin\n+pkglibdir = $(libdir)/bitcoin\n+pkglibexecdir = $(libexecdir)/bitcoin\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = x86_64-unknown-linux-gnu\n+host_triplet = i686-w64-mingw32\n+subdir = doc/man\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(dist_man1_MANS)\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_pthread.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \\\n+\t$(top_srcdir)/build-aux/m4/l_atomic.m4 \\\n+\t$(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h\n+CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_VPATH_FILES =\n+AM_V_P = $(am__v_P_$(V))\n+am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_$(V))\n+am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_$(V))\n+am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n+am__v_at_0 = @\n+am__v_at_1 = \n+SOURCES =\n+DIST_SOURCES =\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+man1dir = $(mandir)/man1\n+am__installdirs = \"$(DESTDIR)$(man1dir)\"\n+NROFF = nroff\n+MANS = $(dist_man1_MANS)\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+ACLOCAL = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing aclocal-1.14\n+AMTAR = $${TAR-tar}\n+AM_DEFAULT_VERBOSITY = 0\n+AR = /usr/bin/i686-w64-mingw32-ar\n+AUTOCONF = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing autoconf\n+AUTOHEADER = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing autoheader\n+AUTOMAKE = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing automake-1.14\n+AWK = gawk\n+BDB_CFLAGS = \n+BDB_CPPFLAGS = \n+BDB_LIBS = -ldb_cxx-4.8\n+BITCOIN_CLI_NAME = bitcoin-cli\n+BITCOIN_DAEMON_NAME = bitcoind\n+BITCOIN_GUI_NAME = bitcoin-qt\n+BITCOIN_TX_NAME = bitcoin-tx\n+BOOST_CHRONO_LIB = -lboost_chrono-mt-s\n+BOOST_CPPFLAGS = -mthreads -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include\n+BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt-s\n+BOOST_LDFLAGS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\n+BOOST_LIBS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib -lboost_system-mt-s -lboost_filesystem-mt-s -lboost_program_options-mt-s -lboost_thread_win32-mt-s -lboost_chrono-mt-s\n+BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt-s\n+BOOST_SYSTEM_LIB = -lboost_system-mt-s\n+BOOST_THREAD_LIB = -lboost_thread_win32-mt-s\n+BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt-s\n+BREW = \n+CC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-gcc\n+CCACHE = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache\n+CCDEPMODE = depmode=gcc3\n+CFLAGS = -pipe -O2  -g3 -O0\n+CLIENT_VERSION_BUILD = 0\n+CLIENT_VERSION_IS_RELEASE = false\n+CLIENT_VERSION_MAJOR = 0\n+CLIENT_VERSION_MINOR = 13\n+CLIENT_VERSION_REVISION = 99\n+COPYRIGHT_HOLDERS = The %s developers\n+COPYRIGHT_HOLDERS_FINAL = The Bitcoin Core developers\n+COPYRIGHT_HOLDERS_SUBSTITUTION = Bitcoin Core\n+COPYRIGHT_YEAR = 2017\n+CPP = i686-w64-mingw32-gcc -E\n+CPPFILT = /usr/bin/i686-w64-mingw32-c++filt\n+CPPFLAGS = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/  -DDEBUG -DDEBUG_LOCKORDER -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_FILE_OFFSET_BITS=64\n+CRYPTO_CFLAGS = \n+CRYPTO_LIBS = -lcrypto\n+CXX = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/ccache i686-w64-mingw32-g++ -std=c++11\n+CXXCPP = i686-w64-mingw32-g++ -std=c++11 -E\n+CXXDEPMODE = depmode=gcc3\n+CXXFLAGS = -pipe -O2  -g3 -O0\n+CYGPATH_W = echo\n+DEFS = -DHAVE_CONFIG_H\n+DEPDIR = .deps\n+DLLTOOL = i686-w64-mingw32-dlltool\n+DSYMUTIL = \n+DUMPBIN = \n+ECHO_C = \n+ECHO_N = -n\n+ECHO_T = \n+EGREP = /bin/grep -E\n+EVENT_CFLAGS = \n+EVENT_LIBS = -levent\n+EVENT_PTHREADS_CFLAGS = \n+EVENT_PTHREADS_LIBS = \n+EXEEXT = .exe\n+EXTENDED_RPC_TESTS = \n+FGREP = /bin/grep -F\n+GCOV = /usr/bin/i686-w64-mingw32-gcov\n+GENHTML = \n+GENISOIMAGE = \n+GIT = /usr/bin/git\n+GREP = /bin/grep\n+HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2\n+HARDENED_CXXFLAGS =  -Wstack-protector -fstack-protector-all\n+HARDENED_LDFLAGS =  -Wl,--dynamicbase -Wl,--nxcompat\n+HAVE_CXX11 = 1\n+HEXDUMP = /usr/bin/hexdump\n+IMAGEMAGICK_CONVERT = \n+INSTALL = /usr/bin/install -c\n+INSTALLNAMETOOL = \n+INSTALL_DATA = ${INSTALL} -m 644\n+INSTALL_PROGRAM = ${INSTALL}\n+INSTALL_SCRIPT = ${INSTALL}\n+INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n+LCOV = \n+LD = /usr/bin/i686-w64-mingw32-ld\n+LDFLAGS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib  -Wl,--large-address-aware\n+LEVELDB_CPPFLAGS = \n+LEVELDB_TARGET_FLAGS = -DOS_WINDOWS\n+LIBLEVELDB = \n+LIBMEMENV = \n+LIBOBJS = \n+LIBS = -lQt5PlatformSupport -lssp -lcrypt32 -liphlpapi -lshlwapi -lmswsock -lws2_32 -ladvapi32 -lrpcrt4 -luuid -loleaut32 -lole32 -lcomctl32 -lshell32 -lwinmm -lwinspool -lcomdlg32 -lgdi32 -luser32 -lkernel32 -lmingwthrd \n+LIBTOOL = $(SHELL) $(top_builddir)/libtool\n+LIBTOOL_APP_LDFLAGS =  -all-static\n+LIPO = \n+LN_S = ln -s\n+LRELEASE = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/lrelease\n+LTLIBOBJS = \n+LUPDATE = \n+MAINT = \n+MAKEINFO = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/missing makeinfo\n+MAKENSIS = none\n+MANIFEST_TOOL = :\n+MINIUPNPC_CPPFLAGS = -DSTATICLIB -DMINIUPNP_STATICLIB\n+MINIUPNPC_LIBS = -lminiupnpc\n+MKDIR_P = /bin/mkdir -p\n+MOC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/moc\n+MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)\n+NM = i686-w64-mingw32-nm\n+NMEDIT = \n+OBJCOPY = /usr/bin/i686-w64-mingw32-objcopy\n+OBJCXX = i686-w64-mingw32-g++ -std=c++11\n+OBJCXXDEPMODE = depmode=gcc3\n+OBJCXXFLAGS = \n+OBJDUMP = i686-w64-mingw32-objdump\n+OBJEXT = o\n+OTOOL = \n+OTOOL64 = \n+PACKAGE = bitcoin\n+PACKAGE_BUGREPORT = https://github.com/bitcoin/bitcoin/issues\n+PACKAGE_NAME = Bitcoin Core\n+PACKAGE_STRING = Bitcoin Core 0.13.99\n+PACKAGE_TARNAME = bitcoin\n+PACKAGE_URL = https://bitcoincore.org/\n+PACKAGE_VERSION = 0.13.99\n+PATH_SEPARATOR = :\n+PIC_FLAGS = \n+PIE_FLAGS = \n+PKG_CONFIG = /usr/bin/pkg-config --static\n+PKG_CONFIG_LIBDIR = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib/pkgconfig\n+PKG_CONFIG_PATH = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../share/pkgconfig\n+PORT = \n+PROTOBUF_CFLAGS = \n+PROTOBUF_LIBS = -lprotobuf\n+PROTOC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/protoc\n+PTHREAD_CC = i686-w64-mingw32-gcc\n+PTHREAD_CFLAGS = -pthread\n+PTHREAD_LIBS = \n+PYTHON = /usr/bin/python3.4\n+PYTHONPATH = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/lib/python/dist-packages:\n+QR_CFLAGS = \n+QR_LIBS = -lqrencode\n+QTPLATFORM_CFLAGS = \n+QTPLATFORM_LIBS = \n+QTPRINT_CFLAGS = \n+QTPRINT_LIBS = \n+QTXCBQPA_CFLAGS = \n+QTXCBQPA_LIBS = \n+QT_CFLAGS = \n+QT_DBUS_CFLAGS = \n+QT_DBUS_INCLUDES = \n+QT_DBUS_LIBS = -lQt5DBus -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\n+QT_INCLUDES = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtCore -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtGui -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtWidgets -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtNetwork -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtTest -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/QtDBus\n+QT_LDFLAGS =  -mwindows\n+QT_LIBS = -lqwindows -lQt5Widgets -lQt5Network -lQt5Gui     -lQt5Core    -lqtharfbuzzng -lqtpcre -lqtpng -lz  -limm32  -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../plugins/platforms\n+QT_PIE_FLAGS = \n+QT_SELECT = qt5\n+QT_TEST_CFLAGS = \n+QT_TEST_INCLUDES = \n+QT_TEST_LIBS = -lQt5Test -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib\n+QT_TRANSLATION_DIR = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../translations\n+RANLIB = /usr/bin/i686-w64-mingw32-ranlib\n+RCC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/rcc\n+READELF = /usr/bin/i686-w64-mingw32-readelf\n+RELDFLAGS = \n+RSVG_CONVERT = \n+SED = /bin/sed\n+SET_MAKE = \n+SHELL = /bin/bash\n+SSL_CFLAGS = \n+SSL_LIBS = -lssl\n+STRIP = /usr/bin/i686-w64-mingw32-strip\n+TESTDEFS = \n+TIFFCP = \n+UIC = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../native/bin/uic\n+UNIVALUE_CFLAGS = -I$(srcdir)/univalue/include\n+UNIVALUE_LIBS = univalue/libunivalue.la\n+USE_QRCODE = \n+USE_UPNP = \n+VERSION = 0.13.99\n+WINDOWS_BITS = 32\n+WINDRES = /usr/bin/i686-w64-mingw32-windres\n+X11XCB_CFLAGS = \n+X11XCB_LIBS = \n+XGETTEXT = \n+ZMQ_CFLAGS =  -DZMQ_STATIC\n+ZMQ_LIBS = -lzmq\n+abs_builddir = /mnt/c/opensource/bitcoin-msvc/doc/man\n+abs_srcdir = /mnt/c/opensource/bitcoin-msvc/doc/man\n+abs_top_builddir = /mnt/c/opensource/bitcoin-msvc\n+abs_top_srcdir = /mnt/c/opensource/bitcoin-msvc\n+ac_ct_AR = \n+ac_ct_CC = \n+ac_ct_CXX = \n+ac_ct_DUMPBIN = \n+ac_ct_OBJCXX = \n+am__include = include\n+am__leading_dot = .\n+am__quote = \n+am__tar = $${TAR-tar} chof - \"$$tardir\"\n+am__untar = $${TAR-tar} xf -\n+ax_pthread_config = \n+bindir = ${exec_prefix}/bin\n+build = x86_64-unknown-linux-gnu\n+build_alias = \n+build_cpu = x86_64\n+build_os = linux-gnu\n+build_vendor = unknown\n+builddir = .\n+datadir = ${datarootdir}\n+datarootdir = ${prefix}/share\n+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}\n+dvidir = ${docdir}\n+exec_prefix = ${prefix}\n+host = i686-w64-mingw32\n+host_alias = i686-w64-mingw32\n+host_cpu = i686\n+host_os = mingw32\n+host_vendor = w64\n+htmldir = ${docdir}\n+includedir = ${prefix}/include\n+infodir = ${datarootdir}/info\n+install_sh = ${SHELL} /mnt/c/opensource/bitcoin-msvc/build-aux/install-sh\n+libdir = ${exec_prefix}/lib\n+libexecdir = ${exec_prefix}/libexec\n+localedir = ${datarootdir}/locale\n+localstatedir = ${prefix}/var\n+mandir = ${datarootdir}/man\n+mkdir_p = $(MKDIR_P)\n+oldincludedir = /usr/include\n+pdfdir = ${docdir}\n+prefix = /usr/local\n+program_transform_name = s,x,x,\n+psdir = ${docdir}\n+sbindir = ${exec_prefix}/sbin\n+sharedstatedir = ${prefix}/com\n+srcdir = .\n+subdirs =  src/univalue src/secp256k1\n+sysconfdir = ${prefix}/etc\n+target_alias = \n+top_build_prefix = ../../\n+top_builddir = ../..\n+top_srcdir = ../..\n+dist_man1_MANS = bitcoind.1 bitcoin-qt.1 bitcoin-cli.1 bitcoin-tx.1\n+all: all-am\n+\n+.SUFFIXES:\n+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n+\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign doc/man/Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign doc/man/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure:  $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(am__aclocal_m4_deps):\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+install-man1: $(dist_man1_MANS)\n+\t@$(NORMAL_INSTALL)\n+\t@list1='$(dist_man1_MANS)'; \\\n+\tlist2=''; \\\n+\ttest -n \"$(man1dir)\" \\\n+\t  && test -n \"`echo $$list1$$list2`\" \\\n+\t  || exit 0; \\\n+\techo \" $(MKDIR_P) '$(DESTDIR)$(man1dir)'\"; \\\n+\t$(MKDIR_P) \"$(DESTDIR)$(man1dir)\" || exit 1; \\\n+\t{ for i in $$list1; do echo \"$$i\"; done;  \\\n+\tif test -n \"$$list2\"; then \\\n+\t  for i in $$list2; do echo \"$$i\"; done \\\n+\t    | sed -n '/\\.1[a-z]*$$/p'; \\\n+\tfi; \\\n+\t} | while read p; do \\\n+\t  if test -f $$p; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; echo \"$$p\"; \\\n+\tdone | \\\n+\tsed -e 'n;s,.*/,,;p;h;s,.*\\.,,;s,^[^1][0-9a-z]*$$,1,;x' \\\n+\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,' | \\\n+\tsed 'N;N;s,\\n, ,g' | { \\\n+\tlist=; while read file base inst; do \\\n+\t  if test \"$$base\" = \"$$inst\"; then list=\"$$list $$file\"; else \\\n+\t    echo \" $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'\"; \\\n+\t    $(INSTALL_DATA) \"$$file\" \"$(DESTDIR)$(man1dir)/$$inst\" || exit $$?; \\\n+\t  fi; \\\n+\tdone; \\\n+\tfor i in $$list; do echo \"$$i\"; done | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  test -z \"$$files\" || { \\\n+\t    echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'\"; \\\n+\t    $(INSTALL_DATA) $$files \"$(DESTDIR)$(man1dir)\" || exit $$?; }; \\\n+\tdone; }\n+\n+uninstall-man1:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(dist_man1_MANS)'; test -n \"$(man1dir)\" || exit 0; \\\n+\tfiles=`{ for i in $$list; do echo \"$$i\"; done; \\\n+\t} | sed -e 's,.*/,,;h;s,.*\\.,,;s,^[^1][0-9a-z]*$$,1,;x' \\\n+\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,'`; \\\n+\tdir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)\n+tags TAGS:\n+\n+ctags CTAGS:\n+\n+cscope cscopelist:\n+\n+\n+distdir: $(DISTFILES)\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(MANS)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(man1dir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-generic\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-man\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am:\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man: install-man1\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-generic mostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-man\n+\n+uninstall-man: uninstall-man1\n+\n+.MAKE: install-am install-strip\n+\n+.PHONY: all all-am check check-am clean clean-generic clean-libtool \\\n+\tcscopelist-am ctags-am distclean distclean-generic \\\n+\tdistclean-libtool distdir dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-data install-data-am install-dvi \\\n+\tinstall-dvi-am install-exec install-exec-am install-html \\\n+\tinstall-html-am install-info install-info-am install-man \\\n+\tinstall-man1 install-pdf install-pdf-am install-ps \\\n+\tinstall-ps-am install-strip installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \\\n+\tps ps-am tags-am uninstall uninstall-am uninstall-man \\\n+\tuninstall-man1\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "743b409e060575d679da613c95a73e0340b502df",
        "filename": "src/Makefile",
        "status": "added",
        "additions": 9537,
        "deletions": 0,
        "changes": 9537,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/src/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/src/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile?ref=ef3d4522857db523809fdbced15cb18ab62de853"
      },
      {
        "sha": "8d1810d02d54bdb2d26e2cfeda9358ec7d3a5ea0",
        "filename": "src/config/bitcoin-config.h",
        "status": "added",
        "additions": 386,
        "deletions": 0,
        "changes": 386,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/src/config/bitcoin-config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/src/config/bitcoin-config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/config/bitcoin-config.h?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,386 @@\n+/* src/config/bitcoin-config.h.  Generated from bitcoin-config.h.in by configure.  */\n+/* src/config/bitcoin-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+#ifndef BITCOIN_CONFIG_H\n+\n+#define BITCOIN_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+/* #undef AC_APPLE_UNIVERSAL_BUILD */\n+\n+/* Version Build */\n+#define CLIENT_VERSION_BUILD 0\n+\n+/* Version is release */\n+#define CLIENT_VERSION_IS_RELEASE false\n+\n+/* Major version */\n+#define CLIENT_VERSION_MAJOR 0\n+\n+/* Minor version */\n+#define CLIENT_VERSION_MINOR 13\n+\n+/* Build revision */\n+#define CLIENT_VERSION_REVISION 99\n+\n+/* Copyright holder(s) before %s replacement */\n+#define COPYRIGHT_HOLDERS \"The %s developers\"\n+\n+/* Copyright holder(s) */\n+#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n+\n+/* Replacement for %s in copyright holders string */\n+#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n+\n+/* Copyright year */\n+#define COPYRIGHT_YEAR 2017\n+\n+/* Define to 1 to enable wallet functions */\n+#define ENABLE_WALLET 1\n+\n+/* Define to 1 to enable ZMQ functions */\n+#define ENABLE_ZMQ 1\n+\n+/* parameter and return value type for __fdelt_chk */\n+/* #undef FDELT_TYPE */\n+\n+/* define if the Boost library is available */\n+#define HAVE_BOOST /**/\n+\n+/* define if the Boost::Chrono library is available */\n+#define HAVE_BOOST_CHRONO /**/\n+\n+/* define if the Boost::Filesystem library is available */\n+#define HAVE_BOOST_FILESYSTEM /**/\n+\n+/* define if the Boost::PROGRAM_OPTIONS library is available */\n+#define HAVE_BOOST_PROGRAM_OPTIONS /**/\n+\n+/* define if the Boost::System library is available */\n+#define HAVE_BOOST_SYSTEM /**/\n+\n+/* define if the Boost::Thread library is available */\n+#define HAVE_BOOST_THREAD /**/\n+\n+/* define if the Boost::Unit_Test_Framework library is available */\n+#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n+\n+/* Define to 1 if you have the <byteswap.h> header file. */\n+/* #undef HAVE_BYTESWAP_H */\n+\n+/* Define this symbol if the consensus lib has been built */\n+#define HAVE_CONSENSUS_LIB 1\n+\n+/* define if the compiler supports basic C++11 syntax */\n+#define HAVE_CXX11 1\n+\n+/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_16 0\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_32 0\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_64 0\n+\n+/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+   */\n+#define HAVE_DECL_DAEMON 0\n+\n+/* Define to 1 if you have the declaration of `EVP_MD_CTX_new', and to 0 if\n+   you don't. */\n+#define HAVE_DECL_EVP_MD_CTX_NEW 0\n+\n+/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE16 0\n+\n+/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE32 0\n+\n+/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE64 0\n+\n+/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE16 0\n+\n+/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE32 0\n+\n+/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE64 0\n+\n+/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRERROR_R 0\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRNLEN 1\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <endian.h> header file. */\n+/* #undef HAVE_ENDIAN_H */\n+\n+/* Define to 1 if the system has the `dllexport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n+\n+/* Define to 1 if the system has the `dllimport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n+\n+/* Define to 1 if the system has the `visibility' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define to 1 if you have the `advapi32' library (-ladvapi32). */\n+#define HAVE_LIBADVAPI32 1\n+\n+/* Define to 1 if you have the `comctl32' library (-lcomctl32). */\n+#define HAVE_LIBCOMCTL32 1\n+\n+/* Define to 1 if you have the `comdlg32' library (-lcomdlg32). */\n+#define HAVE_LIBCOMDLG32 1\n+\n+/* Define to 1 if you have the `crypt32' library (-lcrypt32). */\n+#define HAVE_LIBCRYPT32 1\n+\n+/* Define to 1 if you have the `gdi32' library (-lgdi32). */\n+#define HAVE_LIBGDI32 1\n+\n+/* Define to 1 if you have the `imm32' library (-limm32). */\n+#define HAVE_LIBIMM32 1\n+\n+/* Define to 1 if you have the `iphlpapi' library (-liphlpapi). */\n+#define HAVE_LIBIPHLPAPI 1\n+\n+/* Define to 1 if you have the `kernel32' library (-lkernel32). */\n+#define HAVE_LIBKERNEL32 1\n+\n+/* Define to 1 if you have the `mingwthrd' library (-lmingwthrd). */\n+#define HAVE_LIBMINGWTHRD 1\n+\n+/* Define to 1 if you have the `mswsock' library (-lmswsock). */\n+#define HAVE_LIBMSWSOCK 1\n+\n+/* Define to 1 if you have the `ole32' library (-lole32). */\n+#define HAVE_LIBOLE32 1\n+\n+/* Define to 1 if you have the `oleaut32' library (-loleaut32). */\n+#define HAVE_LIBOLEAUT32 1\n+\n+/* Define to 1 if you have the `rpcrt4' library (-lrpcrt4). */\n+#define HAVE_LIBRPCRT4 1\n+\n+/* Define to 1 if you have the `rt' library (-lrt). */\n+/* #undef HAVE_LIBRT */\n+\n+/* Define to 1 if you have the `shell32' library (-lshell32). */\n+#define HAVE_LIBSHELL32 1\n+\n+/* Define to 1 if you have the `shlwapi' library (-lshlwapi). */\n+#define HAVE_LIBSHLWAPI 1\n+\n+/* Define to 1 if you have the `ssp' library (-lssp). */\n+#define HAVE_LIBSSP 1\n+\n+/* Define to 1 if you have the `user32' library (-luser32). */\n+#define HAVE_LIBUSER32 1\n+\n+/* Define to 1 if you have the `uuid' library (-luuid). */\n+#define HAVE_LIBUUID 1\n+\n+/* Define to 1 if you have the `winmm' library (-lwinmm). */\n+#define HAVE_LIBWINMM 1\n+\n+/* Define to 1 if you have the `winspool' library (-lwinspool). */\n+#define HAVE_LIBWINSPOOL 1\n+\n+/* Define to 1 if you have the `ws2_32' library (-lws2_32). */\n+#define HAVE_LIBWS2_32 1\n+\n+/* Define to 1 if you have the `z ' library (-lz ). */\n+#define HAVE_LIBZ_ 1\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n+#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n+#define HAVE_MINIUPNPC_MINIWGET_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n+\n+/* Define this symbol if you have MSG_NOSIGNAL */\n+/* #undef HAVE_MSG_NOSIGNAL */\n+\n+/* Define if you have POSIX threads libraries and header files. */\n+#define HAVE_PTHREAD 1\n+\n+/* Have PTHREAD_PRIO_INHERIT. */\n+#define HAVE_PTHREAD_PRIO_INHERIT 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#define HAVE_STDIO_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the `strerror_r' function. */\n+/* #undef HAVE_STRERROR_R */\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define to 1 if you have the <sys/endian.h> header file. */\n+/* #undef HAVE_SYS_ENDIAN_H */\n+\n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+/* #undef HAVE_SYS_PRCTL_H */\n+\n+/* Define to 1 if you have the <sys/select.h> header file. */\n+/* #undef HAVE_SYS_SELECT_H */\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#define HAVE_UNISTD_H 1\n+\n+/* Define if the visibility attribute is supported. */\n+#define HAVE_VISIBILITY_ATTRIBUTE 1\n+\n+/* Define this symbol if boost sleep works */\n+/* #undef HAVE_WORKING_BOOST_SLEEP */\n+\n+/* Define this symbol if boost sleep_for works */\n+#define HAVE_WORKING_BOOST_SLEEP_FOR 1\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"Bitcoin Core\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"Bitcoin Core 0.13.99\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"bitcoin\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"https://bitcoincore.org/\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"0.13.99\"\n+\n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+/* #undef PTHREAD_CREATE_JOINABLE */\n+\n+/* Define this symbol if the qt platform is cocoa */\n+/* #undef QT_QPA_PLATFORM_COCOA */\n+\n+/* Define this symbol if the qt platform is windows */\n+#define QT_QPA_PLATFORM_WINDOWS 1\n+\n+/* Define this symbol if the qt platform is xcb */\n+/* #undef QT_QPA_PLATFORM_XCB */\n+\n+/* Define this symbol if qt plugins are static */\n+#define QT_STATICPLUGIN 1\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Define to 1 if strerror_r returns char *. */\n+/* #undef STRERROR_R_CHAR_P */\n+\n+/* Define if dbus support should be compiled in */\n+/* #undef USE_DBUS */\n+\n+/* Define if QR support should be compiled in */\n+#define USE_QRCODE 1\n+\n+/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n+   default state */\n+#define USE_UPNP 0\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+/* #  undef WORDS_BIGENDIAN */\n+# endif\n+#endif\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#define _FILE_OFFSET_BITS 64\n+\n+/* Define for large files, on AIX-style hosts. */\n+/* #undef _LARGE_FILES */\n+\n+#endif //BITCOIN_CONFIG_H"
      },
      {
        "sha": "506c9b5f6d9ae3e7e21ee78e2d18bbae22318bb6",
        "filename": "src/secp256k1/Makefile",
        "status": "added",
        "additions": 1684,
        "deletions": 0,
        "changes": 1684,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/src/secp256k1/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/src/secp256k1/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/Makefile?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,1684 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# Makefile.  Generated from Makefile.in by configure.\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+\n+\n+\n+\n+\n+\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/libsecp256k1\n+pkgincludedir = $(includedir)/libsecp256k1\n+pkglibdir = $(libdir)/libsecp256k1\n+pkglibexecdir = $(libexecdir)/libsecp256k1\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = x86_64-unknown-linux-gnu\n+host_triplet = i686-w64-mingw32\n+noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n+\t$(am__EXEEXT_4) $(am__EXEEXT_5)\n+#am__append_1 = bench_verify bench_sign bench_internal\n+TESTS = $(am__EXEEXT_2) $(am__EXEEXT_3)\n+am__append_2 = tests\n+am__append_3 = tests\n+am__append_4 = exhaustive_tests\n+am__append_5 = exhaustive_tests\n+am__append_6 = -I$(top_srcdir)\n+am__append_7 = -Wall -Wextra -Wno-unused-function\n+DIST_COMMON = $(srcdir)/src/modules/ecdh/Makefile.am.include \\\n+\t$(srcdir)/src/modules/recovery/Makefile.am.include \\\n+\t$(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(top_srcdir)/src/libsecp256k1-config.h.in \\\n+\t$(srcdir)/libsecp256k1.pc.in $(top_srcdir)/build-aux/depcomp \\\n+\t$(am__include_HEADERS_DIST) $(am__noinst_HEADERS_DIST) \\\n+\t$(top_srcdir)/build-aux/test-driver COPYING TODO \\\n+\tbuild-aux/compile build-aux/config.guess build-aux/config.sub \\\n+\tbuild-aux/depcomp build-aux/install-sh build-aux/missing \\\n+\tbuild-aux/ltmain.sh $(top_srcdir)/build-aux/compile \\\n+\t$(top_srcdir)/build-aux/config.guess \\\n+\t$(top_srcdir)/build-aux/config.sub \\\n+\t$(top_srcdir)/build-aux/install-sh \\\n+\t$(top_srcdir)/build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/missing\n+#am__append_8 = include/secp256k1_ecdh.h\n+#am__append_9 = src/modules/ecdh/main_impl.h \\\n+#\tsrc/modules/ecdh/tests_impl.h\n+##am__append_10 = bench_ecdh\n+am__append_11 = include/secp256k1_recovery.h\n+am__append_12 =  \\\n+\tsrc/modules/recovery/main_impl.h \\\n+\tsrc/modules/recovery/tests_impl.h\n+#am__append_13 = bench_recover\n+subdir = .\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps =  \\\n+\t$(top_srcdir)/build-aux/m4/ax_jni_include_dir.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ax_prog_cc_for_build.m4 \\\n+\t$(top_srcdir)/build-aux/m4/bitcoin_secp.m4 \\\n+\t$(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = $(top_builddir)/src/libsecp256k1-config.h\n+CONFIG_CLEAN_FILES = libsecp256k1.pc\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \\\n+\t\"$(DESTDIR)$(includedir)\"\n+LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)\n+#am__DEPENDENCIES_1 = libsecp256k1_jni.la\n+am__DEPENDENCIES_2 =\n+#am__DEPENDENCIES_3 = libsecp256k1_common.la\n+libsecp256k1_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\\n+\t$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)\n+am__dirstamp = $(am__leading_dot)dirstamp\n+am_libsecp256k1_la_OBJECTS = src/libsecp256k1_la-secp256k1.lo\n+libsecp256k1_la_OBJECTS = $(am_libsecp256k1_la_OBJECTS)\n+AM_V_lt = $(am__v_lt_$(V))\n+am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n+am__v_lt_0 = --silent\n+am__v_lt_1 = \n+libsecp256k1_common_la_LIBADD =\n+am__libsecp256k1_common_la_SOURCES_DIST = src/asm/field_10x26_arm.s\n+##am_libsecp256k1_common_la_OBJECTS = src/asm/field_10x26_arm.lo\n+libsecp256k1_common_la_OBJECTS = $(am_libsecp256k1_common_la_OBJECTS)\n+#am_libsecp256k1_common_la_rpath =\n+libsecp256k1_jni_la_LIBADD =\n+am_libsecp256k1_jni_la_OBJECTS =  \\\n+\tsrc/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo \\\n+\tsrc/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo\n+libsecp256k1_jni_la_OBJECTS = $(am_libsecp256k1_jni_la_OBJECTS)\n+#am_libsecp256k1_jni_la_rpath =\n+#am__EXEEXT_1 = bench_verify$(EXEEXT) \\\n+#\tbench_sign$(EXEEXT) \\\n+#\tbench_internal$(EXEEXT)\n+am__EXEEXT_2 = tests$(EXEEXT)\n+am__EXEEXT_3 = exhaustive_tests$(EXEEXT)\n+##am__EXEEXT_4 = bench_ecdh$(EXEEXT)\n+#am__EXEEXT_5 = bench_recover$(EXEEXT)\n+PROGRAMS = $(noinst_PROGRAMS)\n+am__bench_ecdh_SOURCES_DIST = src/bench_ecdh.c\n+##am_bench_ecdh_OBJECTS = src/bench_ecdh.$(OBJEXT)\n+bench_ecdh_OBJECTS = $(am_bench_ecdh_OBJECTS)\n+##bench_ecdh_DEPENDENCIES =  \\\n+##\tlibsecp256k1.la \\\n+##\t$(am__DEPENDENCIES_2) \\\n+##\t$(am__DEPENDENCIES_3)\n+am__bench_internal_SOURCES_DIST = src/bench_internal.c\n+#am_bench_internal_OBJECTS = src/bench_internal-bench_internal.$(OBJEXT)\n+bench_internal_OBJECTS = $(am_bench_internal_OBJECTS)\n+#bench_internal_DEPENDENCIES =  \\\n+#\t$(am__DEPENDENCIES_2) \\\n+#\t$(am__DEPENDENCIES_3)\n+am__bench_recover_SOURCES_DIST = src/bench_recover.c\n+#am_bench_recover_OBJECTS = src/bench_recover.$(OBJEXT)\n+bench_recover_OBJECTS = $(am_bench_recover_OBJECTS)\n+#bench_recover_DEPENDENCIES = libsecp256k1.la \\\n+#\t$(am__DEPENDENCIES_2) \\\n+#\t$(am__DEPENDENCIES_3)\n+am__bench_sign_SOURCES_DIST = src/bench_sign.c\n+#am_bench_sign_OBJECTS = src/bench_sign.$(OBJEXT)\n+bench_sign_OBJECTS = $(am_bench_sign_OBJECTS)\n+#bench_sign_DEPENDENCIES = libsecp256k1.la \\\n+#\t$(am__DEPENDENCIES_2) \\\n+#\t$(am__DEPENDENCIES_2) \\\n+#\t$(am__DEPENDENCIES_3)\n+am__bench_verify_SOURCES_DIST = src/bench_verify.c\n+#am_bench_verify_OBJECTS =  \\\n+#\tsrc/bench_verify.$(OBJEXT)\n+bench_verify_OBJECTS = $(am_bench_verify_OBJECTS)\n+#bench_verify_DEPENDENCIES = libsecp256k1.la \\\n+#\t$(am__DEPENDENCIES_2) \\\n+#\t$(am__DEPENDENCIES_2) \\\n+#\t$(am__DEPENDENCIES_3)\n+am__exhaustive_tests_SOURCES_DIST = src/tests_exhaustive.c\n+am_exhaustive_tests_OBJECTS = src/exhaustive_tests-tests_exhaustive.$(OBJEXT)\n+exhaustive_tests_OBJECTS = $(am_exhaustive_tests_OBJECTS)\n+exhaustive_tests_DEPENDENCIES =  \\\n+\t$(am__DEPENDENCIES_2)\n+exhaustive_tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n+\t$(AM_CFLAGS) $(CFLAGS) $(exhaustive_tests_LDFLAGS) $(LDFLAGS) \\\n+\t-o $@\n+am__tests_SOURCES_DIST = src/tests.c\n+am_tests_OBJECTS = src/tests-tests.$(OBJEXT)\n+tests_OBJECTS = $(am_tests_OBJECTS)\n+tests_DEPENDENCIES = $(am__DEPENDENCIES_2) \\\n+\t$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)\n+tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(tests_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_P = $(am__v_P_$(V))\n+am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_$(V))\n+am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_$(V))\n+am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n+am__v_at_0 = @\n+am__v_at_1 = \n+DEFAULT_INCLUDES = -I. -I$(top_builddir)/src\n+depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp\n+am__depfiles_maybe = depfiles\n+am__mv = mv -f\n+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n+\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+\t$(AM_CFLAGS) $(CFLAGS)\n+AM_V_CC = $(am__v_CC_$(V))\n+am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))\n+am__v_CC_0 = @echo \"  CC      \" $@;\n+am__v_CC_1 = \n+CCLD = $(CC)\n+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_CCLD = $(am__v_CCLD_$(V))\n+am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))\n+am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n+am__v_CCLD_1 = \n+CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)\n+LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \\\n+\t$(CCASFLAGS)\n+AM_V_CCAS = $(am__v_CCAS_$(V))\n+am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))\n+am__v_CCAS_0 = @echo \"  CCAS    \" $@;\n+am__v_CCAS_1 = \n+SOURCES = $(libsecp256k1_la_SOURCES) $(libsecp256k1_common_la_SOURCES) \\\n+\t$(libsecp256k1_jni_la_SOURCES) $(bench_ecdh_SOURCES) \\\n+\t$(bench_internal_SOURCES) $(bench_recover_SOURCES) \\\n+\t$(bench_sign_SOURCES) $(bench_verify_SOURCES) \\\n+\t$(exhaustive_tests_SOURCES) $(tests_SOURCES)\n+DIST_SOURCES = $(libsecp256k1_la_SOURCES) \\\n+\t$(am__libsecp256k1_common_la_SOURCES_DIST) \\\n+\t$(libsecp256k1_jni_la_SOURCES) $(am__bench_ecdh_SOURCES_DIST) \\\n+\t$(am__bench_internal_SOURCES_DIST) \\\n+\t$(am__bench_recover_SOURCES_DIST) \\\n+\t$(am__bench_sign_SOURCES_DIST) \\\n+\t$(am__bench_verify_SOURCES_DIST) \\\n+\t$(am__exhaustive_tests_SOURCES_DIST) $(am__tests_SOURCES_DIST)\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+DATA = $(pkgconfig_DATA)\n+am__include_HEADERS_DIST = include/secp256k1.h \\\n+\tinclude/secp256k1_ecdh.h include/secp256k1_recovery.h\n+am__noinst_HEADERS_DIST = src/scalar.h src/scalar_4x64.h \\\n+\tsrc/scalar_8x32.h src/scalar_low.h src/scalar_impl.h \\\n+\tsrc/scalar_4x64_impl.h src/scalar_8x32_impl.h \\\n+\tsrc/scalar_low_impl.h src/group.h src/group_impl.h \\\n+\tsrc/num_gmp.h src/num_gmp_impl.h src/ecdsa.h src/ecdsa_impl.h \\\n+\tsrc/eckey.h src/eckey_impl.h src/ecmult.h src/ecmult_impl.h \\\n+\tsrc/ecmult_const.h src/ecmult_const_impl.h src/ecmult_gen.h \\\n+\tsrc/ecmult_gen_impl.h src/num.h src/num_impl.h \\\n+\tsrc/field_10x26.h src/field_10x26_impl.h src/field_5x52.h \\\n+\tsrc/field_5x52_impl.h src/field_5x52_int128_impl.h \\\n+\tsrc/field_5x52_asm_impl.h \\\n+\tsrc/java/org_bitcoin_NativeSecp256k1.h \\\n+\tsrc/java/org_bitcoin_Secp256k1Context.h src/util.h \\\n+\tsrc/testrand.h src/testrand_impl.h src/hash.h src/hash_impl.h \\\n+\tsrc/field.h src/field_impl.h src/bench.h \\\n+\tcontrib/lax_der_parsing.h contrib/lax_der_parsing.c \\\n+\tcontrib/lax_der_privatekey_parsing.h \\\n+\tcontrib/lax_der_privatekey_parsing.c \\\n+\tsrc/modules/ecdh/main_impl.h src/modules/ecdh/tests_impl.h \\\n+\tsrc/modules/recovery/main_impl.h \\\n+\tsrc/modules/recovery/tests_impl.h\n+HEADERS = $(include_HEADERS) $(noinst_HEADERS)\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+CSCOPE = cscope\n+AM_RECURSIVE_TARGETS = cscope check recheck\n+am__tty_colors_dummy = \\\n+  mgn= red= grn= lgn= blu= brg= std=; \\\n+  am__color_tests=no\n+am__tty_colors = { \\\n+  $(am__tty_colors_dummy); \\\n+  if test \"X$(AM_COLOR_TESTS)\" = Xno; then \\\n+    am__color_tests=no; \\\n+  elif test \"X$(AM_COLOR_TESTS)\" = Xalways; then \\\n+    am__color_tests=yes; \\\n+  elif test \"X$$TERM\" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n+    am__color_tests=yes; \\\n+  fi; \\\n+  if test $$am__color_tests = yes; then \\\n+    red='\u001b[0;31m'; \\\n+    grn='\u001b[0;32m'; \\\n+    lgn='\u001b[1;32m'; \\\n+    blu='\u001b[1;34m'; \\\n+    mgn='\u001b[0;35m'; \\\n+    brg='\u001b[1m'; \\\n+    std='\u001b[m'; \\\n+  fi; \\\n+}\n+am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n+am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n+am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n+# A command that, given a newline-separated list of test names on the\n+# standard input, print the name of the tests that are to be re-run\n+# upon \"make recheck\".\n+am__list_recheck_tests = $(AWK) '{ \\\n+  recheck = 1; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+        { \\\n+          if ((getline line2 < ($$0 \".log\")) < 0) \\\n+\t    recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n+        { \\\n+          recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n+        { \\\n+          break; \\\n+        } \\\n+    }; \\\n+  if (recheck) \\\n+    print $$0; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# A command that, given a newline-separated list of test names on the\n+# standard input, create the global log from their .trs and .log files.\n+am__create_global_log = $(AWK) ' \\\n+function fatal(msg) \\\n+{ \\\n+  print \"fatal: making $@: \" msg | \"cat >&2\"; \\\n+  exit 1; \\\n+} \\\n+function rst_section(header) \\\n+{ \\\n+  print header; \\\n+  len = length(header); \\\n+  for (i = 1; i <= len; i = i + 1) \\\n+    printf \"=\"; \\\n+  printf \"\\n\\n\"; \\\n+} \\\n+{ \\\n+  copy_in_global_log = 1; \\\n+  global_test_result = \"RUN\"; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+         fatal(\"failed to read from \" $$0 \".trs\"); \\\n+      if (line ~ /$(am__global_test_result_rx)/) \\\n+        { \\\n+          sub(\"$(am__global_test_result_rx)\", \"\", line); \\\n+          sub(\"[ \t]*$$\", \"\", line); \\\n+          global_test_result = line; \\\n+        } \\\n+      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n+        copy_in_global_log = 0; \\\n+    }; \\\n+  if (copy_in_global_log) \\\n+    { \\\n+      rst_section(global_test_result \": \" $$0); \\\n+      while ((rc = (getline line < ($$0 \".log\"))) != 0) \\\n+      { \\\n+        if (rc < 0) \\\n+          fatal(\"failed to read from \" $$0 \".log\"); \\\n+        print line; \\\n+      }; \\\n+      printf \"\\n\"; \\\n+    }; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# Restructured Text title.\n+am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n+# Solaris 10 'make', and several other traditional 'make' implementations,\n+# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n+# by disabling -e (using the XSI extension \"set +e\") if it's set.\n+am__sh_e_setup = case $$- in *e*) set +e;; esac\n+# Default flags passed to test drivers.\n+am__common_driver_flags = \\\n+  --color-tests \"$$am__color_tests\" \\\n+  --enable-hard-errors \"$$am__enable_hard_errors\" \\\n+  --expect-failure \"$$am__expect_failure\"\n+# To be inserted before the command running the test.  Creates the\n+# directory for the log if needed.  Stores in $dir the directory\n+# containing $f, in $tst the test, in $log the log.  Executes the\n+# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n+# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n+# will run the test scripts (or their associated LOG_COMPILER, if\n+# thy have one).\n+am__check_pre = \\\n+$(am__sh_e_setup);\t\t\t\t\t\\\n+$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n+$(am__tty_colors);\t\t\t\t\t\\\n+srcdir=$(srcdir); export srcdir;\t\t\t\\\n+case \"$@\" in\t\t\t\t\t\t\\\n+  */*) am__odir=`echo \"./$@\" | sed 's|/[^/]*$$||'`;;\t\\\n+    *) am__odir=.;; \t\t\t\t\t\\\n+esac;\t\t\t\t\t\t\t\\\n+test \"x$$am__odir\" = x\".\" || test -d \"$$am__odir\" \t\\\n+  || $(MKDIR_P) \"$$am__odir\" || exit $$?;\t\t\\\n+if test -f \"./$$f\"; then dir=./;\t\t\t\\\n+elif test -f \"$$f\"; then dir=;\t\t\t\t\\\n+else dir=\"$(srcdir)/\"; fi;\t\t\t\t\\\n+tst=$$dir$$f; log='$@'; \t\t\t\t\\\n+if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n+  am__enable_hard_errors=no; \t\t\t\t\\\n+else\t\t\t\t\t\t\t\\\n+  am__enable_hard_errors=yes; \t\t\t\t\\\n+fi; \t\t\t\t\t\t\t\\\n+case \" $(XFAIL_TESTS) \" in\t\t\t\t\\\n+  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n+    am__expect_failure=yes;;\t\t\t\t\\\n+  *)\t\t\t\t\t\t\t\\\n+    am__expect_failure=no;;\t\t\t\t\\\n+esac; \t\t\t\t\t\t\t\\\n+$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n+# A shell command to get the names of the tests scripts with any registered\n+# extension removed (i.e., equivalently, the names of the test logs, with\n+# the '.log' extension removed).  The result is saved in the shell variable\n+# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n+# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n+# since that might cause problem with VPATH rewrites for suffix-less tests.\n+# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n+am__set_TESTS_bases = \\\n+  bases='$(TEST_LOGS)'; \\\n+  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n+  bases=`echo $$bases`\n+RECHECK_LOGS = $(TEST_LOGS)\n+TEST_SUITE_LOG = test-suite.log\n+TEST_EXTENSIONS = .exe .test\n+LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n+am__set_b = \\\n+  case '$@' in \\\n+    */*) \\\n+      case '$*' in \\\n+        */*) b='$*';; \\\n+          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n+       esac;; \\\n+    *) \\\n+      b='$*';; \\\n+  esac\n+am__test_logs1 = $(TESTS:=.log)\n+am__test_logs2 = $(am__test_logs1:.exe.log=.log)\n+TEST_LOGS = $(am__test_logs2:.test.log=.log)\n+TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n+\t$(TEST_LOG_FLAGS)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+am__remove_distdir = \\\n+  if test -d \"$(distdir)\"; then \\\n+    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n+      && rm -rf \"$(distdir)\" \\\n+      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n+  else :; fi\n+am__post_remove_distdir = $(am__remove_distdir)\n+DIST_ARCHIVES = $(distdir).tar.gz\n+GZIP_ENV = --best\n+DIST_TARGETS = dist-gzip\n+distuninstallcheck_listfiles = find . -type f -print\n+am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n+  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\n+distcleancheck_listfiles = find . -type f -print\n+ACLOCAL = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/secp256k1/build-aux/missing aclocal-1.14\n+AMTAR = $${TAR-tar}\n+AM_DEFAULT_VERBOSITY = 0\n+AR = /usr/bin/i686-w64-mingw32-ar\n+AUTOCONF = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/secp256k1/build-aux/missing autoconf\n+AUTOHEADER = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/secp256k1/build-aux/missing autoheader\n+AUTOMAKE = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/secp256k1/build-aux/missing automake-1.14\n+AWK = gawk\n+BREW = \n+BUILD_EXEEXT = \n+BUILD_OBJEXT = \n+CC = i686-w64-mingw32-gcc\n+CCAS = i686-w64-mingw32-gcc\n+CCASDEPMODE = depmode=gcc3\n+CCASFLAGS = -pipe -O2 \n+CCDEPMODE = depmode=gcc3\n+CC_FOR_BUILD = gcc\n+CFLAGS = -pipe -O2  -W -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wno-unused-function -Wno-long-long -Wno-overlength-strings -fvisibility=hidden\n+CFLAGS_FOR_BUILD = -g -O2 $(am__append_7)\n+CPP = i686-w64-mingw32-gcc -E\n+CPPFLAGS = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/ \n+CPPFLAGS_FOR_BUILD =  $(am__append_6)\n+CPP_FOR_BUILD = gcc -E\n+CRYPTO_CFLAGS = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/include  \n+CRYPTO_LIBS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/lib -lcrypto -lws2_32 -lgdi32 -lcrypt32  \n+CYGPATH_W = echo\n+DEFS = -DHAVE_CONFIG_H\n+DEPDIR = .deps\n+DLLTOOL = i686-w64-mingw32-dlltool\n+DSYMUTIL = \n+DUMPBIN = \n+ECHO_C = \n+ECHO_N = -n\n+ECHO_T = \n+EGREP = /bin/grep -E\n+EXEEXT = .exe\n+FGREP = /bin/grep -F\n+GREP = /bin/grep\n+INSTALL = /usr/bin/install -c\n+INSTALL_DATA = ${INSTALL} -m 644\n+INSTALL_PROGRAM = ${INSTALL}\n+INSTALL_SCRIPT = ${INSTALL}\n+INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n+JNI_INCLUDES = \n+LD = /usr/bin/i686-w64-mingw32-ld\n+LDFLAGS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib \n+LDFLAGS_FOR_BUILD = \n+LIBOBJS = \n+LIBS = \n+LIBTOOL = $(SHELL) $(top_builddir)/libtool\n+LIPO = \n+LN_S = ln -s\n+LTLIBOBJS = \n+MAKEINFO = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/secp256k1/build-aux/missing makeinfo\n+MANIFEST_TOOL = :\n+MKDIR_P = /bin/mkdir -p\n+NM = i686-w64-mingw32-nm\n+NMEDIT = \n+OBJDUMP = i686-w64-mingw32-objdump\n+OBJEXT = o\n+OTOOL = \n+OTOOL64 = \n+PACKAGE = libsecp256k1\n+PACKAGE_BUGREPORT = \n+PACKAGE_NAME = libsecp256k1\n+PACKAGE_STRING = libsecp256k1 0.1\n+PACKAGE_TARNAME = libsecp256k1\n+PACKAGE_URL = \n+PACKAGE_VERSION = 0.1\n+PATH_SEPARATOR = :\n+PKG_CONFIG = /usr/bin/pkg-config --static\n+PKG_CONFIG_LIBDIR = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib/pkgconfig\n+PKG_CONFIG_PATH = /mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../share/pkgconfig\n+PORT = \n+RANLIB = /usr/bin/i686-w64-mingw32-ranlib\n+SECP_INCLUDES = \n+SECP_LIBS = \n+SECP_TEST_INCLUDES =  -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/include  \n+SECP_TEST_LIBS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/lib -lcrypto -lws2_32 -lgdi32 -lcrypt32   -lgdi32\n+SED = /bin/sed\n+SET_MAKE = \n+SHELL = /bin/bash\n+STRIP = /usr/bin/i686-w64-mingw32-strip\n+VERSION = 0.1\n+_ACJNI_JAVAC = no\n+abs_builddir = /mnt/c/opensource/bitcoin-msvc/src/secp256k1\n+abs_srcdir = /mnt/c/opensource/bitcoin-msvc/src/secp256k1\n+abs_top_builddir = /mnt/c/opensource/bitcoin-msvc/src/secp256k1\n+abs_top_srcdir = /mnt/c/opensource/bitcoin-msvc/src/secp256k1\n+ac_ct_AR = \n+ac_ct_CC = \n+ac_ct_CC_FOR_BUILD = gcc\n+ac_ct_DUMPBIN = \n+am__include = include\n+am__leading_dot = .\n+am__quote = \n+am__tar = $${TAR-tar} chof - \"$$tardir\"\n+am__untar = $${TAR-tar} xf -\n+bindir = ${exec_prefix}/bin\n+build = x86_64-unknown-linux-gnu\n+build_alias = \n+build_cpu = x86_64\n+build_os = linux-gnu\n+build_vendor = unknown\n+builddir = .\n+datadir = ${datarootdir}\n+datarootdir = ${prefix}/share\n+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}\n+dvidir = ${docdir}\n+exec_prefix = ${prefix}\n+host = i686-w64-mingw32\n+host_alias = i686-w64-mingw32\n+host_cpu = i686\n+host_os = mingw32\n+host_vendor = w64\n+htmldir = ${docdir}\n+includedir = ${prefix}/include\n+infodir = ${datarootdir}/info\n+install_sh = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/secp256k1/build-aux/install-sh\n+libdir = ${exec_prefix}/lib\n+libexecdir = ${exec_prefix}/libexec\n+localedir = ${datarootdir}/locale\n+localstatedir = ${prefix}/var\n+mandir = ${datarootdir}/man\n+mkdir_p = $(MKDIR_P)\n+oldincludedir = /usr/include\n+pdfdir = ${docdir}\n+prefix = /usr/local\n+program_transform_name = s,x,x,\n+psdir = ${docdir}\n+sbindir = ${exec_prefix}/sbin\n+sharedstatedir = ${prefix}/com\n+srcdir = .\n+sysconfdir = ${prefix}/etc\n+target_alias = \n+top_build_prefix = \n+top_builddir = .\n+top_srcdir = .\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+lib_LTLIBRARIES = libsecp256k1.la\n+JNI_LIB = \n+#JNI_LIB = libsecp256k1_jni.la\n+#noinst_LTLIBRARIES = $(COMMON_LIB)\n+#noinst_LTLIBRARIES = $(JNI_LIB)\n+include_HEADERS = include/secp256k1.h $(am__append_8) $(am__append_11)\n+noinst_HEADERS = src/scalar.h src/scalar_4x64.h src/scalar_8x32.h \\\n+\tsrc/scalar_low.h src/scalar_impl.h src/scalar_4x64_impl.h \\\n+\tsrc/scalar_8x32_impl.h src/scalar_low_impl.h src/group.h \\\n+\tsrc/group_impl.h src/num_gmp.h src/num_gmp_impl.h src/ecdsa.h \\\n+\tsrc/ecdsa_impl.h src/eckey.h src/eckey_impl.h src/ecmult.h \\\n+\tsrc/ecmult_impl.h src/ecmult_const.h src/ecmult_const_impl.h \\\n+\tsrc/ecmult_gen.h src/ecmult_gen_impl.h src/num.h \\\n+\tsrc/num_impl.h src/field_10x26.h src/field_10x26_impl.h \\\n+\tsrc/field_5x52.h src/field_5x52_impl.h \\\n+\tsrc/field_5x52_int128_impl.h src/field_5x52_asm_impl.h \\\n+\tsrc/java/org_bitcoin_NativeSecp256k1.h \\\n+\tsrc/java/org_bitcoin_Secp256k1Context.h src/util.h \\\n+\tsrc/testrand.h src/testrand_impl.h src/hash.h src/hash_impl.h \\\n+\tsrc/field.h src/field_impl.h src/bench.h \\\n+\tcontrib/lax_der_parsing.h contrib/lax_der_parsing.c \\\n+\tcontrib/lax_der_privatekey_parsing.h \\\n+\tcontrib/lax_der_privatekey_parsing.c $(am__append_9) \\\n+\t$(am__append_12)\n+COMMON_LIB = \n+#COMMON_LIB = libsecp256k1_common.la\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libsecp256k1.pc\n+##libsecp256k1_common_la_SOURCES = src/asm/field_10x26_arm.s\n+libsecp256k1_la_SOURCES = src/secp256k1.c\n+libsecp256k1_la_CPPFLAGS = -DSECP256K1_BUILD -I$(top_srcdir)/include -I$(top_srcdir)/src $(SECP_INCLUDES)\n+libsecp256k1_la_LIBADD = $(JNI_LIB) $(SECP_LIBS) $(COMMON_LIB)\n+libsecp256k1_jni_la_SOURCES = src/java/org_bitcoin_NativeSecp256k1.c src/java/org_bitcoin_Secp256k1Context.c\n+libsecp256k1_jni_la_CPPFLAGS = -DSECP256K1_BUILD $(JNI_INCLUDES)\n+#bench_verify_SOURCES = src/bench_verify.c\n+#bench_verify_LDADD = libsecp256k1.la $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)\n+#bench_sign_SOURCES = src/bench_sign.c\n+#bench_sign_LDADD = libsecp256k1.la $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)\n+#bench_internal_SOURCES = src/bench_internal.c\n+#bench_internal_LDADD = $(SECP_LIBS) $(COMMON_LIB)\n+#bench_internal_CPPFLAGS = -DSECP256K1_BUILD $(SECP_INCLUDES)\n+tests_SOURCES = src/tests.c\n+tests_CPPFLAGS = -DSECP256K1_BUILD -DVERIFY -I$(top_srcdir)/src -I$(top_srcdir)/include $(SECP_INCLUDES) $(SECP_TEST_INCLUDES)\n+tests_LDADD = $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)\n+tests_LDFLAGS = -static\n+exhaustive_tests_SOURCES = src/tests_exhaustive.c\n+exhaustive_tests_CPPFLAGS = -DSECP256K1_BUILD -DVERIFY -I$(top_srcdir)/src $(SECP_INCLUDES)\n+exhaustive_tests_LDADD = $(SECP_LIBS)\n+exhaustive_tests_LDFLAGS = -static\n+JAVAROOT = src/java\n+JAVAORG = org/bitcoin\n+JAVA_GUAVA = $(srcdir)/$(JAVAROOT)/guava/guava-18.0.jar\n+CLASSPATH_ENV = CLASSPATH=$(JAVA_GUAVA)\n+JAVA_FILES = \\\n+  $(JAVAROOT)/$(JAVAORG)/NativeSecp256k1.java \\\n+  $(JAVAROOT)/$(JAVAORG)/NativeSecp256k1Test.java \\\n+  $(JAVAROOT)/$(JAVAORG)/NativeSecp256k1Util.java \\\n+  $(JAVAROOT)/$(JAVAORG)/Secp256k1Context.java\n+\n+gen_context_OBJECTS = gen_context.o\n+gen_context_BIN = gen_context$(BUILD_EXEEXT)\n+CLEANFILES = $(gen_context_BIN) src/ecmult_static_context.h $(JAVAROOT)/$(JAVAORG)/*.class .stamp-java\n+EXTRA_DIST = autogen.sh src/gen_context.c src/basic-config.h $(JAVA_FILES)\n+##bench_ecdh_SOURCES = src/bench_ecdh.c\n+##bench_ecdh_LDADD = libsecp256k1.la $(SECP_LIBS) $(COMMON_LIB)\n+#bench_recover_SOURCES = src/bench_recover.c\n+#bench_recover_LDADD = libsecp256k1.la $(SECP_LIBS) $(COMMON_LIB)\n+all: all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .lo .log .o .obj .s .test .test$(EXEEXT) .trs\n+am--refresh: Makefile\n+\t@:\n+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/src/modules/ecdh/Makefile.am.include $(srcdir)/src/modules/recovery/Makefile.am.include $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+$(srcdir)/src/modules/ecdh/Makefile.am.include $(srcdir)/src/modules/recovery/Makefile.am.include:\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure:  $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+src/libsecp256k1-config.h: src/stamp-h1\n+\t@test -f $@ || rm -f src/stamp-h1\n+\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/stamp-h1\n+\n+src/stamp-h1: $(top_srcdir)/src/libsecp256k1-config.h.in $(top_builddir)/config.status\n+\t@rm -f src/stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status src/libsecp256k1-config.h\n+$(top_srcdir)/src/libsecp256k1-config.h.in:  $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f src/stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f src/libsecp256k1-config.h src/stamp-h1\n+libsecp256k1.pc: $(top_builddir)/config.status $(srcdir)/libsecp256k1.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+\n+install-libLTLIBRARIES: $(lib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(libdir)\" || exit 1; \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(libdir)\"; \\\n+\t}\n+\n+uninstall-libLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(libdir)/$$f\"; \\\n+\tdone\n+\n+clean-libLTLIBRARIES:\n+\t-test -z \"$(lib_LTLIBRARIES)\" || rm -f $(lib_LTLIBRARIES)\n+\t@list='$(lib_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+\n+clean-noinstLTLIBRARIES:\n+\t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n+\t@list='$(noinst_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+src/$(am__dirstamp):\n+\t@$(MKDIR_P) src\n+\t@: > src/$(am__dirstamp)\n+src/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) src/$(DEPDIR)\n+\t@: > src/$(DEPDIR)/$(am__dirstamp)\n+src/libsecp256k1_la-secp256k1.lo: src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+libsecp256k1.la: $(libsecp256k1_la_OBJECTS) $(libsecp256k1_la_DEPENDENCIES) $(EXTRA_libsecp256k1_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) -rpath $(libdir) $(libsecp256k1_la_OBJECTS) $(libsecp256k1_la_LIBADD) $(LIBS)\n+src/asm/$(am__dirstamp):\n+\t@$(MKDIR_P) src/asm\n+\t@: > src/asm/$(am__dirstamp)\n+src/asm/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) src/asm/$(DEPDIR)\n+\t@: > src/asm/$(DEPDIR)/$(am__dirstamp)\n+src/asm/field_10x26_arm.lo: src/asm/$(am__dirstamp) \\\n+\tsrc/asm/$(DEPDIR)/$(am__dirstamp)\n+\n+libsecp256k1_common.la: $(libsecp256k1_common_la_OBJECTS) $(libsecp256k1_common_la_DEPENDENCIES) $(EXTRA_libsecp256k1_common_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) $(am_libsecp256k1_common_la_rpath) $(libsecp256k1_common_la_OBJECTS) $(libsecp256k1_common_la_LIBADD) $(LIBS)\n+src/java/$(am__dirstamp):\n+\t@$(MKDIR_P) src/java\n+\t@: > src/java/$(am__dirstamp)\n+src/java/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) src/java/$(DEPDIR)\n+\t@: > src/java/$(DEPDIR)/$(am__dirstamp)\n+src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo:  \\\n+\tsrc/java/$(am__dirstamp) src/java/$(DEPDIR)/$(am__dirstamp)\n+src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo:  \\\n+\tsrc/java/$(am__dirstamp) src/java/$(DEPDIR)/$(am__dirstamp)\n+\n+libsecp256k1_jni.la: $(libsecp256k1_jni_la_OBJECTS) $(libsecp256k1_jni_la_DEPENDENCIES) $(EXTRA_libsecp256k1_jni_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) $(am_libsecp256k1_jni_la_rpath) $(libsecp256k1_jni_la_OBJECTS) $(libsecp256k1_jni_la_LIBADD) $(LIBS)\n+\n+clean-noinstPROGRAMS:\n+\t@list='$(noinst_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list || exit $$?; \\\n+\ttest -n \"$(EXEEXT)\" || exit 0; \\\n+\tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list\n+src/bench_ecdh.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_ecdh$(EXEEXT): $(bench_ecdh_OBJECTS) $(bench_ecdh_DEPENDENCIES) $(EXTRA_bench_ecdh_DEPENDENCIES) \n+\t@rm -f bench_ecdh$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_ecdh_OBJECTS) $(bench_ecdh_LDADD) $(LIBS)\n+src/bench_internal-bench_internal.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_internal$(EXEEXT): $(bench_internal_OBJECTS) $(bench_internal_DEPENDENCIES) $(EXTRA_bench_internal_DEPENDENCIES) \n+\t@rm -f bench_internal$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_internal_OBJECTS) $(bench_internal_LDADD) $(LIBS)\n+src/bench_recover.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_recover$(EXEEXT): $(bench_recover_OBJECTS) $(bench_recover_DEPENDENCIES) $(EXTRA_bench_recover_DEPENDENCIES) \n+\t@rm -f bench_recover$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_recover_OBJECTS) $(bench_recover_LDADD) $(LIBS)\n+src/bench_sign.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_sign$(EXEEXT): $(bench_sign_OBJECTS) $(bench_sign_DEPENDENCIES) $(EXTRA_bench_sign_DEPENDENCIES) \n+\t@rm -f bench_sign$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_sign_OBJECTS) $(bench_sign_LDADD) $(LIBS)\n+src/bench_verify.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+bench_verify$(EXEEXT): $(bench_verify_OBJECTS) $(bench_verify_DEPENDENCIES) $(EXTRA_bench_verify_DEPENDENCIES) \n+\t@rm -f bench_verify$(EXEEXT)\n+\t$(AM_V_CCLD)$(LINK) $(bench_verify_OBJECTS) $(bench_verify_LDADD) $(LIBS)\n+src/exhaustive_tests-tests_exhaustive.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+exhaustive_tests$(EXEEXT): $(exhaustive_tests_OBJECTS) $(exhaustive_tests_DEPENDENCIES) $(EXTRA_exhaustive_tests_DEPENDENCIES) \n+\t@rm -f exhaustive_tests$(EXEEXT)\n+\t$(AM_V_CCLD)$(exhaustive_tests_LINK) $(exhaustive_tests_OBJECTS) $(exhaustive_tests_LDADD) $(LIBS)\n+src/tests-tests.$(OBJEXT): src/$(am__dirstamp) \\\n+\tsrc/$(DEPDIR)/$(am__dirstamp)\n+\n+tests$(EXEEXT): $(tests_OBJECTS) $(tests_DEPENDENCIES) $(EXTRA_tests_DEPENDENCIES) \n+\t@rm -f tests$(EXEEXT)\n+\t$(AM_V_CCLD)$(tests_LINK) $(tests_OBJECTS) $(tests_LDADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\t-rm -f src/*.$(OBJEXT)\n+\t-rm -f src/*.lo\n+\t-rm -f src/asm/*.$(OBJEXT)\n+\t-rm -f src/asm/*.lo\n+\t-rm -f src/java/*.$(OBJEXT)\n+\t-rm -f src/java/*.lo\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+include src/$(DEPDIR)/bench_ecdh.Po\n+include src/$(DEPDIR)/bench_internal-bench_internal.Po\n+include src/$(DEPDIR)/bench_recover.Po\n+include src/$(DEPDIR)/bench_sign.Po\n+include src/$(DEPDIR)/bench_verify.Po\n+include src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Po\n+include src/$(DEPDIR)/libsecp256k1_la-secp256k1.Plo\n+include src/$(DEPDIR)/tests-tests.Po\n+include src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Plo\n+include src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Plo\n+\n+.c.o:\n+\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n+\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+#\t$(AM_V_CC)source='$<' object='$@' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(COMPILE) -c -o $@ $<\n+\n+.c.obj:\n+\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.obj$$||'`;\\\n+\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\\\n+\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+#\t$(AM_V_CC)source='$<' object='$@' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.c.lo:\n+\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.lo$$||'`;\\\n+\t$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+\t$(am__mv) $$depbase.Tpo $$depbase.Plo\n+#\t$(AM_V_CC)source='$<' object='$@' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<\n+\n+src/libsecp256k1_la-secp256k1.lo: src/secp256k1.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/libsecp256k1_la-secp256k1.lo -MD -MP -MF src/$(DEPDIR)/libsecp256k1_la-secp256k1.Tpo -c -o src/libsecp256k1_la-secp256k1.lo `test -f 'src/secp256k1.c' || echo '$(srcdir)/'`src/secp256k1.c\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/libsecp256k1_la-secp256k1.Tpo src/$(DEPDIR)/libsecp256k1_la-secp256k1.Plo\n+#\t$(AM_V_CC)source='src/secp256k1.c' object='src/libsecp256k1_la-secp256k1.lo' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/libsecp256k1_la-secp256k1.lo `test -f 'src/secp256k1.c' || echo '$(srcdir)/'`src/secp256k1.c\n+\n+src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo: src/java/org_bitcoin_NativeSecp256k1.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo -MD -MP -MF src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Tpo -c -o src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo `test -f 'src/java/org_bitcoin_NativeSecp256k1.c' || echo '$(srcdir)/'`src/java/org_bitcoin_NativeSecp256k1.c\n+\t$(AM_V_at)$(am__mv) src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Tpo src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.Plo\n+#\t$(AM_V_CC)source='src/java/org_bitcoin_NativeSecp256k1.c' object='src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/java/libsecp256k1_jni_la-org_bitcoin_NativeSecp256k1.lo `test -f 'src/java/org_bitcoin_NativeSecp256k1.c' || echo '$(srcdir)/'`src/java/org_bitcoin_NativeSecp256k1.c\n+\n+src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo: src/java/org_bitcoin_Secp256k1Context.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo -MD -MP -MF src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Tpo -c -o src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo `test -f 'src/java/org_bitcoin_Secp256k1Context.c' || echo '$(srcdir)/'`src/java/org_bitcoin_Secp256k1Context.c\n+\t$(AM_V_at)$(am__mv) src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Tpo src/java/$(DEPDIR)/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.Plo\n+#\t$(AM_V_CC)source='src/java/org_bitcoin_Secp256k1Context.c' object='src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsecp256k1_jni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/java/libsecp256k1_jni_la-org_bitcoin_Secp256k1Context.lo `test -f 'src/java/org_bitcoin_Secp256k1Context.c' || echo '$(srcdir)/'`src/java/org_bitcoin_Secp256k1Context.c\n+\n+src/bench_internal-bench_internal.o: src/bench_internal.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/bench_internal-bench_internal.o -MD -MP -MF src/$(DEPDIR)/bench_internal-bench_internal.Tpo -c -o src/bench_internal-bench_internal.o `test -f 'src/bench_internal.c' || echo '$(srcdir)/'`src/bench_internal.c\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/bench_internal-bench_internal.Tpo src/$(DEPDIR)/bench_internal-bench_internal.Po\n+#\t$(AM_V_CC)source='src/bench_internal.c' object='src/bench_internal-bench_internal.o' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/bench_internal-bench_internal.o `test -f 'src/bench_internal.c' || echo '$(srcdir)/'`src/bench_internal.c\n+\n+src/bench_internal-bench_internal.obj: src/bench_internal.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/bench_internal-bench_internal.obj -MD -MP -MF src/$(DEPDIR)/bench_internal-bench_internal.Tpo -c -o src/bench_internal-bench_internal.obj `if test -f 'src/bench_internal.c'; then $(CYGPATH_W) 'src/bench_internal.c'; else $(CYGPATH_W) '$(srcdir)/src/bench_internal.c'; fi`\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/bench_internal-bench_internal.Tpo src/$(DEPDIR)/bench_internal-bench_internal.Po\n+#\t$(AM_V_CC)source='src/bench_internal.c' object='src/bench_internal-bench_internal.obj' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_internal_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/bench_internal-bench_internal.obj `if test -f 'src/bench_internal.c'; then $(CYGPATH_W) 'src/bench_internal.c'; else $(CYGPATH_W) '$(srcdir)/src/bench_internal.c'; fi`\n+\n+src/exhaustive_tests-tests_exhaustive.o: src/tests_exhaustive.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/exhaustive_tests-tests_exhaustive.o -MD -MP -MF src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo -c -o src/exhaustive_tests-tests_exhaustive.o `test -f 'src/tests_exhaustive.c' || echo '$(srcdir)/'`src/tests_exhaustive.c\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Po\n+#\t$(AM_V_CC)source='src/tests_exhaustive.c' object='src/exhaustive_tests-tests_exhaustive.o' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/exhaustive_tests-tests_exhaustive.o `test -f 'src/tests_exhaustive.c' || echo '$(srcdir)/'`src/tests_exhaustive.c\n+\n+src/exhaustive_tests-tests_exhaustive.obj: src/tests_exhaustive.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/exhaustive_tests-tests_exhaustive.obj -MD -MP -MF src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo -c -o src/exhaustive_tests-tests_exhaustive.obj `if test -f 'src/tests_exhaustive.c'; then $(CYGPATH_W) 'src/tests_exhaustive.c'; else $(CYGPATH_W) '$(srcdir)/src/tests_exhaustive.c'; fi`\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Tpo src/$(DEPDIR)/exhaustive_tests-tests_exhaustive.Po\n+#\t$(AM_V_CC)source='src/tests_exhaustive.c' object='src/exhaustive_tests-tests_exhaustive.obj' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(exhaustive_tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/exhaustive_tests-tests_exhaustive.obj `if test -f 'src/tests_exhaustive.c'; then $(CYGPATH_W) 'src/tests_exhaustive.c'; else $(CYGPATH_W) '$(srcdir)/src/tests_exhaustive.c'; fi`\n+\n+src/tests-tests.o: src/tests.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tests-tests.o -MD -MP -MF src/$(DEPDIR)/tests-tests.Tpo -c -o src/tests-tests.o `test -f 'src/tests.c' || echo '$(srcdir)/'`src/tests.c\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/tests-tests.Tpo src/$(DEPDIR)/tests-tests.Po\n+#\t$(AM_V_CC)source='src/tests.c' object='src/tests-tests.o' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tests-tests.o `test -f 'src/tests.c' || echo '$(srcdir)/'`src/tests.c\n+\n+src/tests-tests.obj: src/tests.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tests-tests.obj -MD -MP -MF src/$(DEPDIR)/tests-tests.Tpo -c -o src/tests-tests.obj `if test -f 'src/tests.c'; then $(CYGPATH_W) 'src/tests.c'; else $(CYGPATH_W) '$(srcdir)/src/tests.c'; fi`\n+\t$(AM_V_at)$(am__mv) src/$(DEPDIR)/tests-tests.Tpo src/$(DEPDIR)/tests-tests.Po\n+#\t$(AM_V_CC)source='src/tests.c' object='src/tests-tests.obj' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tests-tests.obj `if test -f 'src/tests.c'; then $(CYGPATH_W) 'src/tests.c'; else $(CYGPATH_W) '$(srcdir)/src/tests.c'; fi`\n+\n+.s.o:\n+\t$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ $<\n+\n+.s.obj:\n+\t$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.s.lo:\n+\t$(AM_V_CCAS)$(LTCCASCOMPILE) -c -o $@ $<\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\t-rm -rf src/.libs src/_libs\n+\t-rm -rf src/asm/.libs src/asm/_libs\n+\t-rm -rf src/java/.libs src/java/_libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+install-pkgconfigDATA: $(pkgconfig_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-pkgconfigDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\n+install-includeHEADERS: $(include_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(includedir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(includedir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-includeHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-am\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-am\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscope: cscope.files\n+\ttest ! -s cscope.files \\\n+\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\n+clean-cscope:\n+\t-rm -f cscope.files\n+cscope.files: clean-cscope cscopelist\n+cscopelist: cscopelist-am\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+# Recover from deleted '.trs' file; this should ensure that\n+# \"rm -f foo.log; make foo.trs\" re-run 'foo.test', and re-create\n+# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n+# to avoid problems with \"make -n\".\n+.log.trs:\n+\trm -f $< $@\n+\t$(MAKE) $(AM_MAKEFLAGS) $<\n+\n+# Leading 'am--fnord' is there to ensure the list of targets does not\n+# expand to empty, as could happen e.g. with make check TESTS=''.\n+am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n+am--force-recheck:\n+\t@:\n+\n+$(TEST_SUITE_LOG): $(TEST_LOGS)\n+\t@$(am__set_TESTS_bases); \\\n+\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n+\tredo_bases=`for i in $$bases; do \\\n+\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n+\t            done`; \\\n+\tif test -n \"$$redo_bases\"; then \\\n+\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n+\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n+\t  if $(am__make_dryrun); then :; else \\\n+\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n+\t  fi; \\\n+\tfi; \\\n+\tif test -n \"$$am__remaking_logs\"; then \\\n+\t  echo \"fatal: making $(TEST_SUITE_LOG): possible infinite\" \\\n+\t       \"recursion detected\" >&2; \\\n+\telse \\\n+\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n+\tfi; \\\n+\tif $(am__make_dryrun); then :; else \\\n+\t  st=0;  \\\n+\t  errmsg=\"fatal: making $(TEST_SUITE_LOG): failed to create\"; \\\n+\t  for i in $$redo_bases; do \\\n+\t    test -f $$i.trs && test -r $$i.trs \\\n+\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n+\t    test -f $$i.log && test -r $$i.log \\\n+\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n+\t  done; \\\n+\t  test $$st -eq 0 || exit 1; \\\n+\tfi\n+\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n+\tws='[ \t]'; \\\n+\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n+\ttest -n \"$$results\" || results=/dev/null; \\\n+\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n+\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n+\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n+\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n+\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n+\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n+\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n+\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n+\t  success=true; \\\n+\telse \\\n+\t  success=false; \\\n+\tfi; \\\n+\tbr='==================='; br=$$br$$br$$br$$br; \\\n+\tresult_count () \\\n+\t{ \\\n+\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n+\t      maybe_colorize=yes; \\\n+\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n+\t      maybe_colorize=no; \\\n+\t    else \\\n+\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n+\t    fi; \\\n+\t    shift; \\\n+\t    desc=$$1 count=$$2; \\\n+\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n+\t      color_start=$$3 color_end=$$std; \\\n+\t    else \\\n+\t      color_start= color_end=; \\\n+\t    fi; \\\n+\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n+\t}; \\\n+\tcreate_testsuite_report () \\\n+\t{ \\\n+\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n+\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n+\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n+\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n+\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n+\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n+\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n+\t}; \\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n+\t    $(am__rst_title);\t\t\t\t\t\t\\\n+\t  create_testsuite_report --no-color;\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n+\t    | $(am__create_global_log);\t\t\t\t\t\\\n+\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n+\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n+\tif $$success; then\t\t\t\t\t\t\\\n+\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n+\t else\t\t\t\t\t\t\t\t\\\n+\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n+\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n+\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n+\tif $$success; then :; else\t\t\t\t\t\\\n+\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n+\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n+\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n+\t  fi;\t\t\t\t\t\t\t\t\\\n+\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\t$$success || exit 1\n+\n+check-TESTS:\n+\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n+\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n+\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?;\n+recheck: all \n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tbases=`for i in $$bases; do echo $$i; done \\\n+\t         | $(am__list_recheck_tests)` || exit 1; \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\tlog_list=`echo $$log_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n+\t        am__force_recheck=am--force-recheck \\\n+\t        TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?\n+tests.log: tests$(EXEEXT)\n+\t@p='tests$(EXEEXT)'; \\\n+\tb='tests'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+exhaustive_tests.log: exhaustive_tests$(EXEEXT)\n+\t@p='exhaustive_tests$(EXEEXT)'; \\\n+\tb='exhaustive_tests'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test.log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test$(EXEEXT).log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+\n+distdir: $(DISTFILES)\n+\t$(am__remove_distdir)\n+\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t-test -n \"$(am__skip_mode_fix)\" \\\n+\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n+\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r \"$(distdir)\"\n+dist-gzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-bzip2: distdir\n+\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n+\t$(am__post_remove_distdir)\n+\n+dist-lzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n+\t$(am__post_remove_distdir)\n+\n+dist-xz: distdir\n+\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n+\t$(am__post_remove_distdir)\n+\n+dist-tarZ: distdir\n+\t@echo WARNING: \"Support for shar distribution archives is\" \\\n+\t               \"deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n+\t$(am__post_remove_distdir)\n+\n+dist-shar: distdir\n+\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n+\t\t       \"legacy program 'compress' is deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-zip: distdir\n+\t-rm -f $(distdir).zip\n+\tzip -rq $(distdir).zip $(distdir)\n+\t$(am__post_remove_distdir)\n+\n+dist dist-all:\n+\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n+\t$(am__post_remove_distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\tcase '$(DIST_ARCHIVES)' in \\\n+\t*.tar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n+\t*.tar.bz2*) \\\n+\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n+\t*.tar.lz*) \\\n+\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n+\t*.tar.xz*) \\\n+\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n+\t*.tar.Z*) \\\n+\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n+\t*.shar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\\n+\t*.zip*) \\\n+\t  unzip $(distdir).zip ;;\\\n+\tesac\n+\tchmod -R a-w $(distdir)\n+\tchmod u+w $(distdir)\n+\tmkdir $(distdir)/_build $(distdir)/_inst\n+\tchmod a-w $(distdir)\n+\ttest -d $(distdir)/_build || exit 0; \\\n+\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n+\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n+\t  && am__cwd=`pwd` \\\n+\t  && $(am__cd) $(distdir)/_build \\\n+\t  && ../configure \\\n+\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    --srcdir=.. --prefix=\"$$dc_install_base\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n+\t        distuninstallcheck \\\n+\t  && chmod -R a-w \"$$dc_install_base\" \\\n+\t  && ({ \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n+\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n+\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n+\t  && rm -rf \"$$dc_destdir\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n+\t  && rm -rf $(DIST_ARCHIVES) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n+\t  && cd \"$$am__cwd\" \\\n+\t  || exit 1\n+\t$(am__post_remove_distdir)\n+\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n+\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n+\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\n+distuninstallcheck:\n+\t@test -n '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: trying to run $@ with an empty' \\\n+\t       '$$(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n+\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n+\t        if test -n \"$(DESTDIR)\"; then \\\n+\t          echo \"  (check DESTDIR support)\"; \\\n+\t        fi ; \\\n+\t        $(distuninstallcheck_listfiles) ; \\\n+\t        exit 1; } >&2\n+distcleancheck: distclean\n+\t@if test '$(srcdir)' = . ; then \\\n+\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n+\t  exit 1 ; \\\n+\tfi\n+\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n+\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n+\t       $(distcleancheck_listfiles) ; \\\n+\t       exit 1; } >&2\n+check-am: all-am\n+\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(includedir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\t-test -z \"$(TEST_LOGS)\" || rm -f $(TEST_LOGS)\n+\t-test -z \"$(TEST_LOGS:.log=.trs)\" || rm -f $(TEST_LOGS:.log=.trs)\n+\t-test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\n+clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-rm -f src/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/$(am__dirstamp)\n+\t-rm -f src/asm/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/asm/$(am__dirstamp)\n+\t-rm -f src/java/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f src/java/$(am__dirstamp)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \\\n+\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf src/$(DEPDIR) src/java/$(DEPDIR)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-includeHEADERS install-pkgconfigDATA\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-libLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -rf src/$(DEPDIR) src/java/$(DEPDIR)\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+.MAKE: check-am install-am install-strip\n+\n+.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \\\n+\tcheck-am clean clean-cscope clean-generic clean-libLTLIBRARIES \\\n+\tclean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \\\n+\tcscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \\\n+\tdist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \\\n+\tdistcheck distclean distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags distcleancheck \\\n+\tdistdir distuninstallcheck dvi dvi-am html html-am info \\\n+\tinfo-am install install-am install-data install-data-am \\\n+\tinstall-dvi install-dvi-am install-exec install-exec-am \\\n+\tinstall-html install-html-am install-includeHEADERS \\\n+\tinstall-info install-info-am install-libLTLIBRARIES \\\n+\tinstall-man install-pdf install-pdf-am install-pkgconfigDATA \\\n+\tinstall-ps install-ps-am install-strip installcheck \\\n+\tinstallcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\trecheck tags tags-am uninstall uninstall-am \\\n+\tuninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+\n+#$(JAVA_GUAVA):\n+#\t@echo Guava is missing. Fetch it via: \\\n+#\twget https://search.maven.org/remotecontent?filepath=com/google/guava/guava/18.0/guava-18.0.jar -O $(@)\n+#\t@false\n+\n+#.stamp-java: $(JAVA_FILES)\n+#\t@echo   Compiling $^\n+#\t$(AM_V_at)$(CLASSPATH_ENV) javac $^\n+#\t@touch $@\n+\n+#check-java: libsecp256k1.la $(JAVA_GUAVA) .stamp-java\n+#\t$(AM_V_at)java -Djava.library.path=\"./:./src:./src/.libs:.libs/\" -cp \"$(JAVA_GUAVA):$(JAVAROOT)\" $(JAVAORG)/NativeSecp256k1Test\n+gen_%.o: src/gen_%.c\n+\t$(CC_FOR_BUILD) $(CPPFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD) -c $< -o $@\n+\n+$(gen_context_BIN): $(gen_context_OBJECTS)\n+\t$(CC_FOR_BUILD) $^ -o $@\n+\n+$(libsecp256k1_la_OBJECTS): src/ecmult_static_context.h\n+$(tests_OBJECTS): src/ecmult_static_context.h\n+$(bench_internal_OBJECTS): src/ecmult_static_context.h\n+\n+src/ecmult_static_context.h: $(gen_context_BIN)\n+\t./$(gen_context_BIN)\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "18d0a78252b0c4d8f5d270c2e2eb93ec8f7b7040",
        "filename": "src/secp256k1/src/libsecp256k1-config.h",
        "status": "added",
        "additions": 148,
        "deletions": 0,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/src/secp256k1/src/libsecp256k1-config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/src/secp256k1/src/libsecp256k1-config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/libsecp256k1-config.h?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,148 @@\n+/* src/libsecp256k1-config.h.  Generated from libsecp256k1-config.h.in by configure.  */\n+/* src/libsecp256k1-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+#ifndef LIBSECP256K1_CONFIG_H\n+\n+#define LIBSECP256K1_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+/* #undef AC_APPLE_UNIVERSAL_BUILD */\n+\n+/* Define this symbol to enable the ECDH module */\n+/* #undef ENABLE_MODULE_ECDH */\n+\n+/* Define this symbol to enable the ECDSA pubkey recovery module */\n+#define ENABLE_MODULE_RECOVERY 1\n+\n+/* Define this symbol if OpenSSL EC functions are available */\n+#define ENABLE_OPENSSL_TESTS 1\n+\n+/* Define this symbol if __builtin_expect is available */\n+#define HAVE_BUILTIN_EXPECT 1\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define this symbol if libcrypto is installed */\n+#define HAVE_LIBCRYPTO 1\n+\n+/* Define this symbol if libgmp is installed */\n+/* #undef HAVE_LIBGMP */\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#define HAVE_UNISTD_H 1\n+\n+/* Define to 1 if the system has the type `__int128'. */\n+/* #undef HAVE___INT128 */\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Name of package */\n+#define PACKAGE \"libsecp256k1\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"libsecp256k1\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"libsecp256k1 0.1\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"libsecp256k1\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"0.1\"\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Define this symbol to enable x86_64 assembly optimizations */\n+/* #undef USE_ASM_X86_64 */\n+\n+/* Define this symbol to use a statically generated ecmult table */\n+#define USE_ECMULT_STATIC_PRECOMPUTATION 1\n+\n+/* Define this symbol to use endomorphism optimization */\n+/* #undef USE_ENDOMORPHISM */\n+\n+/* Define this symbol if an external (non-inline) assembly implementation is\n+   used */\n+/* #undef USE_EXTERNAL_ASM */\n+\n+/* Define this symbol to use the FIELD_10X26 implementation */\n+#define USE_FIELD_10X26 1\n+\n+/* Define this symbol to use the FIELD_5X52 implementation */\n+/* #undef USE_FIELD_5X52 */\n+\n+/* Define this symbol to use the native field inverse implementation */\n+#define USE_FIELD_INV_BUILTIN 1\n+\n+/* Define this symbol to use the num-based field inverse implementation */\n+/* #undef USE_FIELD_INV_NUM */\n+\n+/* Define this symbol to use the gmp implementation for num */\n+/* #undef USE_NUM_GMP */\n+\n+/* Define this symbol to use no num implementation */\n+#define USE_NUM_NONE 1\n+\n+/* Define this symbol to use the 4x64 scalar implementation */\n+/* #undef USE_SCALAR_4X64 */\n+\n+/* Define this symbol to use the 8x32 scalar implementation */\n+#define USE_SCALAR_8X32 1\n+\n+/* Define this symbol to use the native scalar inverse implementation */\n+#define USE_SCALAR_INV_BUILTIN 1\n+\n+/* Define this symbol to use the num-based scalar inverse implementation */\n+/* #undef USE_SCALAR_INV_NUM */\n+\n+/* Version number of package */\n+#define VERSION \"0.1\"\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+/* #  undef WORDS_BIGENDIAN */\n+# endif\n+#endif\n+\n+#endif /*LIBSECP256K1_CONFIG_H*/"
      },
      {
        "sha": "9ab32b6aa8b24c825b1c109e4c1f1c82ed7d6d88",
        "filename": "src/univalue/Makefile",
        "status": "added",
        "additions": 1422,
        "deletions": 0,
        "changes": 1422,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/src/univalue/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/src/univalue/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,1422 @@\n+# Makefile.in generated by automake 1.14.1 from Makefile.am.\n+# Makefile.  Generated from Makefile.in by configure.\n+\n+# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+\n+\n+\n+\n+\n+\n+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/univalue\n+pkgincludedir = $(includedir)/univalue\n+pkglibdir = $(libdir)/univalue\n+pkglibexecdir = $(libexecdir)/univalue\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = x86_64-unknown-linux-gnu\n+host_triplet = i686-w64-mingw32\n+TESTS = test/unitester$(EXEEXT)\n+noinst_PROGRAMS = $(am__EXEEXT_1)\n+subdir = .\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n+\t$(top_srcdir)/configure $(am__configure_deps) \\\n+\t$(srcdir)/univalue-config.h.in \\\n+\t$(top_srcdir)/pc/libunivalue.pc.in \\\n+\t$(top_srcdir)/pc/libunivalue-uninstalled.pc.in \\\n+\t$(top_srcdir)/build-aux/depcomp $(include_HEADERS) \\\n+\t$(noinst_HEADERS) $(top_srcdir)/build-aux/test-driver COPYING \\\n+\tREADME TODO build-aux/compile build-aux/config.guess \\\n+\tbuild-aux/config.sub build-aux/depcomp build-aux/install-sh \\\n+\tbuild-aux/missing build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/compile \\\n+\t$(top_srcdir)/build-aux/config.guess \\\n+\t$(top_srcdir)/build-aux/config.sub \\\n+\t$(top_srcdir)/build-aux/install-sh \\\n+\t$(top_srcdir)/build-aux/ltmain.sh \\\n+\t$(top_srcdir)/build-aux/missing\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/libtool.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\\n+\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\\n+\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n+ configure.lineno config.status.lineno\n+mkinstalldirs = $(install_sh) -d\n+CONFIG_HEADER = univalue-config.h\n+CONFIG_CLEAN_FILES = pc/libunivalue.pc pc/libunivalue-uninstalled.pc\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \\\n+\t\"$(DESTDIR)$(includedir)\"\n+LTLIBRARIES = $(lib_LTLIBRARIES)\n+libunivalue_la_LIBADD =\n+am__dirstamp = $(am__leading_dot)dirstamp\n+am_libunivalue_la_OBJECTS = lib/libunivalue_la-univalue.lo \\\n+\tlib/libunivalue_la-univalue_read.lo \\\n+\tlib/libunivalue_la-univalue_write.lo\n+libunivalue_la_OBJECTS = $(am_libunivalue_la_OBJECTS)\n+AM_V_lt = $(am__v_lt_$(V))\n+am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n+am__v_lt_0 = --silent\n+am__v_lt_1 = \n+libunivalue_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \\\n+\t$(libunivalue_la_CXXFLAGS) $(CXXFLAGS) \\\n+\t$(libunivalue_la_LDFLAGS) $(LDFLAGS) -o $@\n+am__EXEEXT_1 = test/unitester$(EXEEXT)\n+PROGRAMS = $(noinst_PROGRAMS)\n+am_test_unitester_OBJECTS = test/test_unitester-unitester.$(OBJEXT)\n+test_unitester_OBJECTS = $(am_test_unitester_OBJECTS)\n+test_unitester_DEPENDENCIES = libunivalue.la\n+test_unitester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \\\n+\t$(test_unitester_CXXFLAGS) $(CXXFLAGS) \\\n+\t$(test_unitester_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_P = $(am__v_P_$(V))\n+am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_$(V))\n+am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_$(V))\n+am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n+am__v_at_0 = @\n+am__v_at_1 = \n+DEFAULT_INCLUDES = -I.\n+depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp\n+am__depfiles_maybe = depfiles\n+am__mv = mv -f\n+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \\\n+\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+\t$(AM_CXXFLAGS) $(CXXFLAGS)\n+AM_V_CXX = $(am__v_CXX_$(V))\n+am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))\n+am__v_CXX_0 = @echo \"  CXX     \" $@;\n+am__v_CXX_1 = \n+CXXLD = $(CXX)\n+CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n+AM_V_CXXLD = $(am__v_CXXLD_$(V))\n+am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))\n+am__v_CXXLD_0 = @echo \"  CXXLD   \" $@;\n+am__v_CXXLD_1 = \n+SOURCES = $(libunivalue_la_SOURCES) $(test_unitester_SOURCES)\n+DIST_SOURCES = $(libunivalue_la_SOURCES) $(test_unitester_SOURCES)\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+DATA = $(pkgconfig_DATA)\n+HEADERS = $(include_HEADERS) $(noinst_HEADERS)\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\\n+\t$(LISP)univalue-config.h.in\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+CSCOPE = cscope\n+AM_RECURSIVE_TARGETS = cscope check recheck\n+am__tty_colors_dummy = \\\n+  mgn= red= grn= lgn= blu= brg= std=; \\\n+  am__color_tests=no\n+am__tty_colors = { \\\n+  $(am__tty_colors_dummy); \\\n+  if test \"X$(AM_COLOR_TESTS)\" = Xno; then \\\n+    am__color_tests=no; \\\n+  elif test \"X$(AM_COLOR_TESTS)\" = Xalways; then \\\n+    am__color_tests=yes; \\\n+  elif test \"X$$TERM\" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n+    am__color_tests=yes; \\\n+  fi; \\\n+  if test $$am__color_tests = yes; then \\\n+    red='\u001b[0;31m'; \\\n+    grn='\u001b[0;32m'; \\\n+    lgn='\u001b[1;32m'; \\\n+    blu='\u001b[1;34m'; \\\n+    mgn='\u001b[0;35m'; \\\n+    brg='\u001b[1m'; \\\n+    std='\u001b[m'; \\\n+  fi; \\\n+}\n+am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n+am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n+am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n+# A command that, given a newline-separated list of test names on the\n+# standard input, print the name of the tests that are to be re-run\n+# upon \"make recheck\".\n+am__list_recheck_tests = $(AWK) '{ \\\n+  recheck = 1; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+        { \\\n+          if ((getline line2 < ($$0 \".log\")) < 0) \\\n+\t    recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n+        { \\\n+          recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n+        { \\\n+          break; \\\n+        } \\\n+    }; \\\n+  if (recheck) \\\n+    print $$0; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# A command that, given a newline-separated list of test names on the\n+# standard input, create the global log from their .trs and .log files.\n+am__create_global_log = $(AWK) ' \\\n+function fatal(msg) \\\n+{ \\\n+  print \"fatal: making $@: \" msg | \"cat >&2\"; \\\n+  exit 1; \\\n+} \\\n+function rst_section(header) \\\n+{ \\\n+  print header; \\\n+  len = length(header); \\\n+  for (i = 1; i <= len; i = i + 1) \\\n+    printf \"=\"; \\\n+  printf \"\\n\\n\"; \\\n+} \\\n+{ \\\n+  copy_in_global_log = 1; \\\n+  global_test_result = \"RUN\"; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+         fatal(\"failed to read from \" $$0 \".trs\"); \\\n+      if (line ~ /$(am__global_test_result_rx)/) \\\n+        { \\\n+          sub(\"$(am__global_test_result_rx)\", \"\", line); \\\n+          sub(\"[ \t]*$$\", \"\", line); \\\n+          global_test_result = line; \\\n+        } \\\n+      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n+        copy_in_global_log = 0; \\\n+    }; \\\n+  if (copy_in_global_log) \\\n+    { \\\n+      rst_section(global_test_result \": \" $$0); \\\n+      while ((rc = (getline line < ($$0 \".log\"))) != 0) \\\n+      { \\\n+        if (rc < 0) \\\n+          fatal(\"failed to read from \" $$0 \".log\"); \\\n+        print line; \\\n+      }; \\\n+      printf \"\\n\"; \\\n+    }; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# Restructured Text title.\n+am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n+# Solaris 10 'make', and several other traditional 'make' implementations,\n+# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n+# by disabling -e (using the XSI extension \"set +e\") if it's set.\n+am__sh_e_setup = case $$- in *e*) set +e;; esac\n+# Default flags passed to test drivers.\n+am__common_driver_flags = \\\n+  --color-tests \"$$am__color_tests\" \\\n+  --enable-hard-errors \"$$am__enable_hard_errors\" \\\n+  --expect-failure \"$$am__expect_failure\"\n+# To be inserted before the command running the test.  Creates the\n+# directory for the log if needed.  Stores in $dir the directory\n+# containing $f, in $tst the test, in $log the log.  Executes the\n+# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n+# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n+# will run the test scripts (or their associated LOG_COMPILER, if\n+# thy have one).\n+am__check_pre = \\\n+$(am__sh_e_setup);\t\t\t\t\t\\\n+$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n+$(am__tty_colors);\t\t\t\t\t\\\n+srcdir=$(srcdir); export srcdir;\t\t\t\\\n+case \"$@\" in\t\t\t\t\t\t\\\n+  */*) am__odir=`echo \"./$@\" | sed 's|/[^/]*$$||'`;;\t\\\n+    *) am__odir=.;; \t\t\t\t\t\\\n+esac;\t\t\t\t\t\t\t\\\n+test \"x$$am__odir\" = x\".\" || test -d \"$$am__odir\" \t\\\n+  || $(MKDIR_P) \"$$am__odir\" || exit $$?;\t\t\\\n+if test -f \"./$$f\"; then dir=./;\t\t\t\\\n+elif test -f \"$$f\"; then dir=;\t\t\t\t\\\n+else dir=\"$(srcdir)/\"; fi;\t\t\t\t\\\n+tst=$$dir$$f; log='$@'; \t\t\t\t\\\n+if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n+  am__enable_hard_errors=no; \t\t\t\t\\\n+else\t\t\t\t\t\t\t\\\n+  am__enable_hard_errors=yes; \t\t\t\t\\\n+fi; \t\t\t\t\t\t\t\\\n+case \" $(XFAIL_TESTS) \" in\t\t\t\t\\\n+  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n+    am__expect_failure=yes;;\t\t\t\t\\\n+  *)\t\t\t\t\t\t\t\\\n+    am__expect_failure=no;;\t\t\t\t\\\n+esac; \t\t\t\t\t\t\t\\\n+$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n+# A shell command to get the names of the tests scripts with any registered\n+# extension removed (i.e., equivalently, the names of the test logs, with\n+# the '.log' extension removed).  The result is saved in the shell variable\n+# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n+# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n+# since that might cause problem with VPATH rewrites for suffix-less tests.\n+# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n+am__set_TESTS_bases = \\\n+  bases='$(TEST_LOGS)'; \\\n+  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n+  bases=`echo $$bases`\n+RECHECK_LOGS = $(TEST_LOGS)\n+TEST_SUITE_LOG = test-suite.log\n+TEST_EXTENSIONS = .exe .test\n+LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n+am__set_b = \\\n+  case '$@' in \\\n+    */*) \\\n+      case '$*' in \\\n+        */*) b='$*';; \\\n+          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n+       esac;; \\\n+    *) \\\n+      b='$*';; \\\n+  esac\n+am__test_logs1 = $(TESTS:=.log)\n+am__test_logs2 = $(am__test_logs1:.exe.log=.log)\n+TEST_LOGS = $(am__test_logs2:.test.log=.log)\n+TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver\n+TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n+\t$(TEST_LOG_FLAGS)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+distdir = $(PACKAGE)-$(VERSION)\n+top_distdir = $(distdir)\n+am__remove_distdir = \\\n+  if test -d \"$(distdir)\"; then \\\n+    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n+      && rm -rf \"$(distdir)\" \\\n+      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n+  else :; fi\n+am__post_remove_distdir = $(am__remove_distdir)\n+DIST_ARCHIVES = $(distdir).tar.gz\n+GZIP_ENV = --best\n+DIST_TARGETS = dist-gzip\n+distuninstallcheck_listfiles = find . -type f -print\n+am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n+  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\n+distcleancheck_listfiles = find . -type f -print\n+ACLOCAL = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/univalue/build-aux/missing aclocal-1.14\n+AMTAR = $${TAR-tar}\n+AM_DEFAULT_VERBOSITY = 0\n+AR = i686-w64-mingw32-ar\n+AUTOCONF = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/univalue/build-aux/missing autoconf\n+AUTOHEADER = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/univalue/build-aux/missing autoheader\n+AUTOMAKE = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/univalue/build-aux/missing automake-1.14\n+AWK = gawk\n+BUILD_EXEEXT = \n+CC = i686-w64-mingw32-gcc\n+CCDEPMODE = depmode=gcc3\n+CFLAGS = -pipe -O2 \n+CPP = i686-w64-mingw32-gcc -E\n+CPPFLAGS = -I/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../include/ \n+CXX = i686-w64-mingw32-g++\n+CXXCPP = i686-w64-mingw32-g++ -E\n+CXXDEPMODE = depmode=gcc3\n+CXXFLAGS = -pipe -O2 \n+CYGPATH_W = echo\n+DEFS = -DHAVE_CONFIG_H\n+DEPDIR = .deps\n+DLLTOOL = i686-w64-mingw32-dlltool\n+DSYMUTIL = \n+DUMPBIN = \n+ECHO_C = \n+ECHO_N = -n\n+ECHO_T = \n+EGREP = /bin/grep -E\n+EXEEXT = .exe\n+FGREP = /bin/grep -F\n+GREP = /bin/grep\n+INSTALL = /usr/bin/install -c\n+INSTALL_DATA = ${INSTALL} -m 644\n+INSTALL_PROGRAM = ${INSTALL}\n+INSTALL_SCRIPT = ${INSTALL}\n+INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n+LD = /usr/bin/i686-w64-mingw32-ld\n+LDFLAGS = -L/mnt/c/opensource/bitcoin-msvc/depends/i686-w64-mingw32/share/../lib \n+LIBOBJS = \n+LIBS = \n+LIBTOOL = $(SHELL) $(top_builddir)/libtool\n+LIBTOOL_APP_LDFLAGS =  -all-static\n+LIBUNIVALUE_AGE = 100\n+LIBUNIVALUE_CURRENT = 100\n+LIBUNIVALUE_REVISION = 2\n+LIPO = \n+LN_S = ln -s\n+LTLIBOBJS = \n+MAKEINFO = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/univalue/build-aux/missing makeinfo\n+MANIFEST_TOOL = :\n+MKDIR_P = /bin/mkdir -p\n+NM = i686-w64-mingw32-nm\n+NMEDIT = \n+OBJDUMP = i686-w64-mingw32-objdump\n+OBJEXT = o\n+OTOOL = \n+OTOOL64 = \n+PACKAGE = univalue\n+PACKAGE_BUGREPORT = http://github.com/jgarzik/univalue/\n+PACKAGE_NAME = univalue\n+PACKAGE_STRING = univalue 1.0.2\n+PACKAGE_TARNAME = univalue\n+PACKAGE_URL = \n+PACKAGE_VERSION = 1.0.2\n+PATH_SEPARATOR = :\n+RANLIB = i686-w64-mingw32-ranlib\n+SED = /bin/sed\n+SET_MAKE = \n+SHELL = /bin/bash\n+STRIP = i686-w64-mingw32-strip\n+VERSION = 1.0.2\n+abs_builddir = /mnt/c/opensource/bitcoin-msvc/src/univalue\n+abs_srcdir = /mnt/c/opensource/bitcoin-msvc/src/univalue\n+abs_top_builddir = /mnt/c/opensource/bitcoin-msvc/src/univalue\n+abs_top_srcdir = /mnt/c/opensource/bitcoin-msvc/src/univalue\n+ac_ct_AR = \n+ac_ct_CC = \n+ac_ct_CXX = \n+ac_ct_DUMPBIN = \n+am__include = include\n+am__leading_dot = .\n+am__quote = \n+am__tar = $${TAR-tar} chof - \"$$tardir\"\n+am__untar = $${TAR-tar} xf -\n+bindir = ${exec_prefix}/bin\n+build = x86_64-unknown-linux-gnu\n+build_alias = \n+build_cpu = x86_64\n+build_os = linux-gnu\n+build_vendor = unknown\n+builddir = .\n+datadir = ${datarootdir}\n+datarootdir = ${prefix}/share\n+docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}\n+dvidir = ${docdir}\n+exec_prefix = ${prefix}\n+host = i686-w64-mingw32\n+host_alias = i686-w64-mingw32\n+host_cpu = i686\n+host_os = mingw32\n+host_vendor = w64\n+htmldir = ${docdir}\n+includedir = ${prefix}/include\n+infodir = ${datarootdir}/info\n+install_sh = ${SHELL} /mnt/c/opensource/bitcoin-msvc/src/univalue/build-aux/install-sh\n+libdir = ${exec_prefix}/lib\n+libexecdir = ${exec_prefix}/libexec\n+localedir = ${datarootdir}/locale\n+localstatedir = ${prefix}/var\n+mandir = ${datarootdir}/man\n+mkdir_p = $(MKDIR_P)\n+oldincludedir = /usr/include\n+pdfdir = ${docdir}\n+prefix = /usr/local\n+program_transform_name = s,x,x,\n+psdir = ${docdir}\n+sbindir = ${exec_prefix}/sbin\n+sharedstatedir = ${prefix}/com\n+srcdir = .\n+sysconfdir = ${prefix}/etc\n+target_alias = \n+top_build_prefix = \n+top_builddir = .\n+top_srcdir = .\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+include_HEADERS = include/univalue.h\n+noinst_HEADERS = lib/univalue_escapes.h lib/univalue_utffilter.h\n+lib_LTLIBRARIES = libunivalue.la\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = pc/libunivalue.pc\n+libunivalue_la_SOURCES = \\\n+\tlib/univalue.cpp \\\n+\tlib/univalue_read.cpp \\\n+\tlib/univalue_write.cpp\n+\n+libunivalue_la_LDFLAGS = \\\n+\t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n+\t-no-undefined\n+\n+libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+GENBIN = gen/gen$(BUILD_EXEEXT)\n+GEN_SRCS = gen/gen.cpp\n+TEST_DATA_DIR = test\n+test_unitester_SOURCES = test/unitester.cpp\n+test_unitester_LDADD = libunivalue.la\n+test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n+test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n+TEST_FILES = \\\n+\t$(TEST_DATA_DIR)/fail10.json \\\n+\t$(TEST_DATA_DIR)/fail11.json \\\n+\t$(TEST_DATA_DIR)/fail12.json \\\n+\t$(TEST_DATA_DIR)/fail13.json \\\n+\t$(TEST_DATA_DIR)/fail14.json \\\n+\t$(TEST_DATA_DIR)/fail15.json \\\n+\t$(TEST_DATA_DIR)/fail16.json \\\n+\t$(TEST_DATA_DIR)/fail17.json \\\n+\t$(TEST_DATA_DIR)/fail18.json \\\n+\t$(TEST_DATA_DIR)/fail19.json \\\n+\t$(TEST_DATA_DIR)/fail1.json \\\n+\t$(TEST_DATA_DIR)/fail20.json \\\n+\t$(TEST_DATA_DIR)/fail21.json \\\n+\t$(TEST_DATA_DIR)/fail22.json \\\n+\t$(TEST_DATA_DIR)/fail23.json \\\n+\t$(TEST_DATA_DIR)/fail24.json \\\n+\t$(TEST_DATA_DIR)/fail25.json \\\n+\t$(TEST_DATA_DIR)/fail26.json \\\n+\t$(TEST_DATA_DIR)/fail27.json \\\n+\t$(TEST_DATA_DIR)/fail28.json \\\n+\t$(TEST_DATA_DIR)/fail29.json \\\n+\t$(TEST_DATA_DIR)/fail2.json \\\n+\t$(TEST_DATA_DIR)/fail30.json \\\n+\t$(TEST_DATA_DIR)/fail31.json \\\n+\t$(TEST_DATA_DIR)/fail32.json \\\n+\t$(TEST_DATA_DIR)/fail33.json \\\n+\t$(TEST_DATA_DIR)/fail34.json \\\n+\t$(TEST_DATA_DIR)/fail35.json \\\n+\t$(TEST_DATA_DIR)/fail36.json \\\n+\t$(TEST_DATA_DIR)/fail37.json \\\n+\t$(TEST_DATA_DIR)/fail38.json \\\n+\t$(TEST_DATA_DIR)/fail39.json \\\n+\t$(TEST_DATA_DIR)/fail40.json \\\n+\t$(TEST_DATA_DIR)/fail41.json \\\n+\t$(TEST_DATA_DIR)/fail3.json \\\n+\t$(TEST_DATA_DIR)/fail4.json \\\n+\t$(TEST_DATA_DIR)/fail5.json \\\n+\t$(TEST_DATA_DIR)/fail6.json \\\n+\t$(TEST_DATA_DIR)/fail7.json \\\n+\t$(TEST_DATA_DIR)/fail8.json \\\n+\t$(TEST_DATA_DIR)/fail9.json \\\n+\t$(TEST_DATA_DIR)/pass1.json \\\n+\t$(TEST_DATA_DIR)/pass2.json \\\n+\t$(TEST_DATA_DIR)/pass3.json \\\n+\t$(TEST_DATA_DIR)/round1.json \\\n+\t$(TEST_DATA_DIR)/round2.json\n+\n+EXTRA_DIST = $(TEST_FILES) $(GEN_SRCS)\n+all: univalue-config.h\n+\t$(MAKE) $(AM_MAKEFLAGS) all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs\n+am--refresh: Makefile\n+\t@:\n+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n+\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    echo ' $(SHELL) ./config.status'; \\\n+\t    $(SHELL) ./config.status;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\t$(SHELL) ./config.status --recheck\n+\n+$(top_srcdir)/configure:  $(am__configure_deps)\n+\t$(am__cd) $(srcdir) && $(AUTOCONF)\n+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+$(am__aclocal_m4_deps):\n+\n+univalue-config.h: stamp-h1\n+\t@test -f $@ || rm -f stamp-h1\n+\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1\n+\n+stamp-h1: $(srcdir)/univalue-config.h.in $(top_builddir)/config.status\n+\t@rm -f stamp-h1\n+\tcd $(top_builddir) && $(SHELL) ./config.status univalue-config.h\n+$(srcdir)/univalue-config.h.in:  $(am__configure_deps) \n+\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n+\trm -f stamp-h1\n+\ttouch $@\n+\n+distclean-hdr:\n+\t-rm -f univalue-config.h stamp-h1\n+pc/libunivalue.pc: $(top_builddir)/config.status $(top_srcdir)/pc/libunivalue.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+pc/libunivalue-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/pc/libunivalue-uninstalled.pc.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+\n+install-libLTLIBRARIES: $(lib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(libdir)\" || exit 1; \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(libdir)\"; \\\n+\t}\n+\n+uninstall-libLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(libdir)/$$f\"; \\\n+\tdone\n+\n+clean-libLTLIBRARIES:\n+\t-test -z \"$(lib_LTLIBRARIES)\" || rm -f $(lib_LTLIBRARIES)\n+\t@list='$(lib_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+lib/$(am__dirstamp):\n+\t@$(MKDIR_P) lib\n+\t@: > lib/$(am__dirstamp)\n+lib/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) lib/$(DEPDIR)\n+\t@: > lib/$(DEPDIR)/$(am__dirstamp)\n+lib/libunivalue_la-univalue.lo: lib/$(am__dirstamp) \\\n+\tlib/$(DEPDIR)/$(am__dirstamp)\n+lib/libunivalue_la-univalue_read.lo: lib/$(am__dirstamp) \\\n+\tlib/$(DEPDIR)/$(am__dirstamp)\n+lib/libunivalue_la-univalue_write.lo: lib/$(am__dirstamp) \\\n+\tlib/$(DEPDIR)/$(am__dirstamp)\n+\n+libunivalue.la: $(libunivalue_la_OBJECTS) $(libunivalue_la_DEPENDENCIES) $(EXTRA_libunivalue_la_DEPENDENCIES) \n+\t$(AM_V_CXXLD)$(libunivalue_la_LINK) -rpath $(libdir) $(libunivalue_la_OBJECTS) $(libunivalue_la_LIBADD) $(LIBS)\n+\n+clean-noinstPROGRAMS:\n+\t@list='$(noinst_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list || exit $$?; \\\n+\ttest -n \"$(EXEEXT)\" || exit 0; \\\n+\tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n+\techo \" rm -f\" $$list; \\\n+\trm -f $$list\n+test/$(am__dirstamp):\n+\t@$(MKDIR_P) test\n+\t@: > test/$(am__dirstamp)\n+test/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) test/$(DEPDIR)\n+\t@: > test/$(DEPDIR)/$(am__dirstamp)\n+test/test_unitester-unitester.$(OBJEXT): test/$(am__dirstamp) \\\n+\ttest/$(DEPDIR)/$(am__dirstamp)\n+\n+test/unitester$(EXEEXT): $(test_unitester_OBJECTS) $(test_unitester_DEPENDENCIES) $(EXTRA_test_unitester_DEPENDENCIES) test/$(am__dirstamp)\n+\t@rm -f test/unitester$(EXEEXT)\n+\t$(AM_V_CXXLD)$(test_unitester_LINK) $(test_unitester_OBJECTS) $(test_unitester_LDADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\t-rm -f lib/*.$(OBJEXT)\n+\t-rm -f lib/*.lo\n+\t-rm -f test/*.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+include lib/$(DEPDIR)/libunivalue_la-univalue.Plo\n+include lib/$(DEPDIR)/libunivalue_la-univalue_read.Plo\n+include lib/$(DEPDIR)/libunivalue_la-univalue_write.Plo\n+include test/$(DEPDIR)/test_unitester-unitester.Po\n+\n+.cpp.o:\n+\t$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n+\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+#\t$(AM_V_CXX)source='$<' object='$@' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<\n+\n+.cpp.obj:\n+\t$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.obj$$||'`;\\\n+\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\\\n+\t$(am__mv) $$depbase.Tpo $$depbase.Po\n+#\t$(AM_V_CXX)source='$<' object='$@' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.cpp.lo:\n+\t$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.lo$$||'`;\\\n+\t$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n+\t$(am__mv) $$depbase.Tpo $$depbase.Plo\n+#\t$(AM_V_CXX)source='$<' object='$@' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<\n+\n+lib/libunivalue_la-univalue.lo: lib/univalue.cpp\n+\t$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libunivalue_la-univalue.lo -MD -MP -MF lib/$(DEPDIR)/libunivalue_la-univalue.Tpo -c -o lib/libunivalue_la-univalue.lo `test -f 'lib/univalue.cpp' || echo '$(srcdir)/'`lib/univalue.cpp\n+\t$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libunivalue_la-univalue.Tpo lib/$(DEPDIR)/libunivalue_la-univalue.Plo\n+#\t$(AM_V_CXX)source='lib/univalue.cpp' object='lib/libunivalue_la-univalue.lo' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libunivalue_la-univalue.lo `test -f 'lib/univalue.cpp' || echo '$(srcdir)/'`lib/univalue.cpp\n+\n+lib/libunivalue_la-univalue_read.lo: lib/univalue_read.cpp\n+\t$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libunivalue_la-univalue_read.lo -MD -MP -MF lib/$(DEPDIR)/libunivalue_la-univalue_read.Tpo -c -o lib/libunivalue_la-univalue_read.lo `test -f 'lib/univalue_read.cpp' || echo '$(srcdir)/'`lib/univalue_read.cpp\n+\t$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libunivalue_la-univalue_read.Tpo lib/$(DEPDIR)/libunivalue_la-univalue_read.Plo\n+#\t$(AM_V_CXX)source='lib/univalue_read.cpp' object='lib/libunivalue_la-univalue_read.lo' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libunivalue_la-univalue_read.lo `test -f 'lib/univalue_read.cpp' || echo '$(srcdir)/'`lib/univalue_read.cpp\n+\n+lib/libunivalue_la-univalue_write.lo: lib/univalue_write.cpp\n+\t$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libunivalue_la-univalue_write.lo -MD -MP -MF lib/$(DEPDIR)/libunivalue_la-univalue_write.Tpo -c -o lib/libunivalue_la-univalue_write.lo `test -f 'lib/univalue_write.cpp' || echo '$(srcdir)/'`lib/univalue_write.cpp\n+\t$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libunivalue_la-univalue_write.Tpo lib/$(DEPDIR)/libunivalue_la-univalue_write.Plo\n+#\t$(AM_V_CXX)source='lib/univalue_write.cpp' object='lib/libunivalue_la-univalue_write.lo' libtool=yes \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libunivalue_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libunivalue_la-univalue_write.lo `test -f 'lib/univalue_write.cpp' || echo '$(srcdir)/'`lib/univalue_write.cpp\n+\n+test/test_unitester-unitester.o: test/unitester.cpp\n+\t$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -MT test/test_unitester-unitester.o -MD -MP -MF test/$(DEPDIR)/test_unitester-unitester.Tpo -c -o test/test_unitester-unitester.o `test -f 'test/unitester.cpp' || echo '$(srcdir)/'`test/unitester.cpp\n+\t$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_unitester-unitester.Tpo test/$(DEPDIR)/test_unitester-unitester.Po\n+#\t$(AM_V_CXX)source='test/unitester.cpp' object='test/test_unitester-unitester.o' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -c -o test/test_unitester-unitester.o `test -f 'test/unitester.cpp' || echo '$(srcdir)/'`test/unitester.cpp\n+\n+test/test_unitester-unitester.obj: test/unitester.cpp\n+\t$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -MT test/test_unitester-unitester.obj -MD -MP -MF test/$(DEPDIR)/test_unitester-unitester.Tpo -c -o test/test_unitester-unitester.obj `if test -f 'test/unitester.cpp'; then $(CYGPATH_W) 'test/unitester.cpp'; else $(CYGPATH_W) '$(srcdir)/test/unitester.cpp'; fi`\n+\t$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_unitester-unitester.Tpo test/$(DEPDIR)/test_unitester-unitester.Po\n+#\t$(AM_V_CXX)source='test/unitester.cpp' object='test/test_unitester-unitester.obj' libtool=no \\\n+#\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \\\n+#\t$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unitester_CXXFLAGS) $(CXXFLAGS) -c -o test/test_unitester-unitester.obj `if test -f 'test/unitester.cpp'; then $(CYGPATH_W) 'test/unitester.cpp'; else $(CYGPATH_W) '$(srcdir)/test/unitester.cpp'; fi`\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\t-rm -rf lib/.libs lib/_libs\n+\t-rm -rf test/.libs test/_libs\n+\n+distclean-libtool:\n+\t-rm -f libtool config.lt\n+install-pkgconfigDATA: $(pkgconfig_DATA)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n+\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-pkgconfigDATA:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\n+install-includeHEADERS: $(include_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tif test -n \"$$list\"; then \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(includedir)\" || exit 1; \\\n+\tfi; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'\"; \\\n+\t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(includedir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-includeHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(include_HEADERS)'; test -n \"$(includedir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\tdir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-am\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-am\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscope: cscope.files\n+\ttest ! -s cscope.files \\\n+\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\n+clean-cscope:\n+\t-rm -f cscope.files\n+cscope.files: clean-cscope cscopelist\n+cscopelist: cscopelist-am\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+# Recover from deleted '.trs' file; this should ensure that\n+# \"rm -f foo.log; make foo.trs\" re-run 'foo.test', and re-create\n+# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n+# to avoid problems with \"make -n\".\n+.log.trs:\n+\trm -f $< $@\n+\t$(MAKE) $(AM_MAKEFLAGS) $<\n+\n+# Leading 'am--fnord' is there to ensure the list of targets does not\n+# expand to empty, as could happen e.g. with make check TESTS=''.\n+am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n+am--force-recheck:\n+\t@:\n+\n+$(TEST_SUITE_LOG): $(TEST_LOGS)\n+\t@$(am__set_TESTS_bases); \\\n+\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n+\tredo_bases=`for i in $$bases; do \\\n+\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n+\t            done`; \\\n+\tif test -n \"$$redo_bases\"; then \\\n+\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n+\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n+\t  if $(am__make_dryrun); then :; else \\\n+\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n+\t  fi; \\\n+\tfi; \\\n+\tif test -n \"$$am__remaking_logs\"; then \\\n+\t  echo \"fatal: making $(TEST_SUITE_LOG): possible infinite\" \\\n+\t       \"recursion detected\" >&2; \\\n+\telse \\\n+\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n+\tfi; \\\n+\tif $(am__make_dryrun); then :; else \\\n+\t  st=0;  \\\n+\t  errmsg=\"fatal: making $(TEST_SUITE_LOG): failed to create\"; \\\n+\t  for i in $$redo_bases; do \\\n+\t    test -f $$i.trs && test -r $$i.trs \\\n+\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n+\t    test -f $$i.log && test -r $$i.log \\\n+\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n+\t  done; \\\n+\t  test $$st -eq 0 || exit 1; \\\n+\tfi\n+\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n+\tws='[ \t]'; \\\n+\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n+\ttest -n \"$$results\" || results=/dev/null; \\\n+\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n+\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n+\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n+\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n+\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n+\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n+\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n+\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n+\t  success=true; \\\n+\telse \\\n+\t  success=false; \\\n+\tfi; \\\n+\tbr='==================='; br=$$br$$br$$br$$br; \\\n+\tresult_count () \\\n+\t{ \\\n+\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n+\t      maybe_colorize=yes; \\\n+\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n+\t      maybe_colorize=no; \\\n+\t    else \\\n+\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n+\t    fi; \\\n+\t    shift; \\\n+\t    desc=$$1 count=$$2; \\\n+\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n+\t      color_start=$$3 color_end=$$std; \\\n+\t    else \\\n+\t      color_start= color_end=; \\\n+\t    fi; \\\n+\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n+\t}; \\\n+\tcreate_testsuite_report () \\\n+\t{ \\\n+\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n+\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n+\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n+\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n+\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n+\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n+\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n+\t}; \\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n+\t    $(am__rst_title);\t\t\t\t\t\t\\\n+\t  create_testsuite_report --no-color;\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n+\t    | $(am__create_global_log);\t\t\t\t\t\\\n+\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n+\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n+\tif $$success; then\t\t\t\t\t\t\\\n+\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n+\t else\t\t\t\t\t\t\t\t\\\n+\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n+\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n+\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n+\tif $$success; then :; else\t\t\t\t\t\\\n+\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n+\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n+\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n+\t  fi;\t\t\t\t\t\t\t\t\\\n+\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\t$$success || exit 1\n+\n+check-TESTS:\n+\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n+\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n+\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?;\n+recheck: all \n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tbases=`for i in $$bases; do echo $$i; done \\\n+\t         | $(am__list_recheck_tests)` || exit 1; \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\tlog_list=`echo $$log_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n+\t        am__force_recheck=am--force-recheck \\\n+\t        TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?\n+test/unitester.log: test/unitester$(EXEEXT)\n+\t@p='test/unitester$(EXEEXT)'; \\\n+\tb='test/unitester'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test.log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test$(EXEEXT).log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+\n+distdir: $(DISTFILES)\n+\t$(am__remove_distdir)\n+\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n+\tlist='$(DISTFILES)'; \\\n+\t  dist_files=`for file in $$list; do echo $$file; done | \\\n+\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n+\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n+\tcase $$dist_files in \\\n+\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n+\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n+\t\t\t   sort -u` ;; \\\n+\tesac; \\\n+\tfor file in $$dist_files; do \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t    if test -d \"$(distdir)/$$file\"; then \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n+\t    fi; \\\n+\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n+\t  else \\\n+\t    test -f \"$(distdir)/$$file\" \\\n+\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+\t-test -n \"$(am__skip_mode_fix)\" \\\n+\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n+\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r \"$(distdir)\"\n+dist-gzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-bzip2: distdir\n+\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n+\t$(am__post_remove_distdir)\n+\n+dist-lzip: distdir\n+\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n+\t$(am__post_remove_distdir)\n+\n+dist-xz: distdir\n+\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n+\t$(am__post_remove_distdir)\n+\n+dist-tarZ: distdir\n+\t@echo WARNING: \"Support for shar distribution archives is\" \\\n+\t               \"deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n+\t$(am__post_remove_distdir)\n+\n+dist-shar: distdir\n+\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n+\t\t       \"legacy program 'compress' is deprecated.\" >&2\n+\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n+\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz\n+\t$(am__post_remove_distdir)\n+\n+dist-zip: distdir\n+\t-rm -f $(distdir).zip\n+\tzip -rq $(distdir).zip $(distdir)\n+\t$(am__post_remove_distdir)\n+\n+dist dist-all:\n+\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n+\t$(am__post_remove_distdir)\n+\n+# This target untars the dist file and tries a VPATH configuration.  Then\n+# it guarantees that the distribution is self-contained by making another\n+# tarfile.\n+distcheck: dist\n+\tcase '$(DIST_ARCHIVES)' in \\\n+\t*.tar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\\n+\t*.tar.bz2*) \\\n+\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n+\t*.tar.lz*) \\\n+\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n+\t*.tar.xz*) \\\n+\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n+\t*.tar.Z*) \\\n+\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n+\t*.shar.gz*) \\\n+\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\\n+\t*.zip*) \\\n+\t  unzip $(distdir).zip ;;\\\n+\tesac\n+\tchmod -R a-w $(distdir)\n+\tchmod u+w $(distdir)\n+\tmkdir $(distdir)/_build $(distdir)/_inst\n+\tchmod a-w $(distdir)\n+\ttest -d $(distdir)/_build || exit 0; \\\n+\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n+\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n+\t  && am__cwd=`pwd` \\\n+\t  && $(am__cd) $(distdir)/_build \\\n+\t  && ../configure \\\n+\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n+\t    --srcdir=.. --prefix=\"$$dc_install_base\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n+\t        distuninstallcheck \\\n+\t  && chmod -R a-w \"$$dc_install_base\" \\\n+\t  && ({ \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n+\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n+\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n+\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n+\t  && rm -rf \"$$dc_destdir\" \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n+\t  && rm -rf $(DIST_ARCHIVES) \\\n+\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n+\t  && cd \"$$am__cwd\" \\\n+\t  || exit 1\n+\t$(am__post_remove_distdir)\n+\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n+\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n+\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\n+distuninstallcheck:\n+\t@test -n '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: trying to run $@ with an empty' \\\n+\t       '$$(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n+\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n+\t  exit 1; \\\n+\t}; \\\n+\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n+\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n+\t        if test -n \"$(DESTDIR)\"; then \\\n+\t          echo \"  (check DESTDIR support)\"; \\\n+\t        fi ; \\\n+\t        $(distuninstallcheck_listfiles) ; \\\n+\t        exit 1; } >&2\n+distcleancheck: distclean\n+\t@if test '$(srcdir)' = . ; then \\\n+\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n+\t  exit 1 ; \\\n+\tfi\n+\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n+\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n+\t       $(distcleancheck_listfiles) ; \\\n+\t       exit 1; } >&2\n+check-am: all-am\n+\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) \\\n+\t\tunivalue-config.h\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(includedir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\t-test -z \"$(TEST_LOGS)\" || rm -f $(TEST_LOGS)\n+\t-test -z \"$(TEST_LOGS:.log=.trs)\" || rm -f $(TEST_LOGS:.log=.trs)\n+\t-test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\t-rm -f lib/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f lib/$(am__dirstamp)\n+\t-rm -f test/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f test/$(am__dirstamp)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \\\n+\tclean-noinstPROGRAMS mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf lib/$(DEPDIR) test/$(DEPDIR)\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-includeHEADERS install-pkgconfigDATA\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-libLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n+\t-rm -rf $(top_srcdir)/autom4te.cache\n+\t-rm -rf lib/$(DEPDIR) test/$(DEPDIR)\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+.MAKE: all check-am install-am install-strip\n+\n+.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \\\n+\tcheck-am clean clean-cscope clean-generic clean-libLTLIBRARIES \\\n+\tclean-libtool clean-noinstPROGRAMS cscope cscopelist-am ctags \\\n+\tctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \\\n+\tdist-shar dist-tarZ dist-xz dist-zip distcheck distclean \\\n+\tdistclean-compile distclean-generic distclean-hdr \\\n+\tdistclean-libtool distclean-tags distcleancheck distdir \\\n+\tdistuninstallcheck dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-data install-data-am install-dvi \\\n+\tinstall-dvi-am install-exec install-exec-am install-html \\\n+\tinstall-html-am install-includeHEADERS install-info \\\n+\tinstall-info-am install-libLTLIBRARIES install-man install-pdf \\\n+\tinstall-pdf-am install-pkgconfigDATA install-ps install-ps-am \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n+\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n+\tpdf pdf-am ps ps-am recheck tags tags-am uninstall \\\n+\tuninstall-am uninstall-includeHEADERS uninstall-libLTLIBRARIES \\\n+\tuninstall-pkgconfigDATA\n+\n+.PHONY: gen\n+.INTERMEDIATE: $(GENBIN)\n+\n+$(GENBIN): $(GEN_SRCS)\n+\t@echo Building $@\n+\t$(AM_V_at)c++ -I$(top_srcdir)/include -o $@ $<\n+\n+gen: lib/univalue_escapes.h $(GENBIN)\n+\t@echo Updating $<\n+\t$(AM_V_at)$(GENBIN) > lib/univalue_escapes.h\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"
      },
      {
        "sha": "5eaf095846f94cd6bb0057763cfae26d78b05e9a",
        "filename": "src/univalue/univalue-config.h",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef3d4522857db523809fdbced15cb18ab62de853/src/univalue/univalue-config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef3d4522857db523809fdbced15cb18ab62de853/src/univalue/univalue-config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue-config.h?ref=ef3d4522857db523809fdbced15cb18ab62de853",
        "patch": "@@ -0,0 +1,63 @@\n+/* univalue-config.h.  Generated from univalue-config.h.in by configure.  */\n+/* univalue-config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#define HAVE_UNISTD_H 1\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Name of package */\n+#define PACKAGE \"univalue\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"http://github.com/jgarzik/univalue/\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"univalue\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"univalue 1.0.2\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"univalue\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"1.0.2\"\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Version number of package */\n+#define VERSION \"1.0.2\""
      }
    ]
  },
  {
    "sha": "e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDM5MjUwYjk5NzRjMmNmYWE2MTYzY2JjZmY2N2M3YmQ3MWI4ZDRh",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T17:20:57Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-12T17:20:57Z"
      },
      "message": "AdditionalIncludeDirectories: univalue",
      "tree": {
        "sha": "d186c553578064b0e447ccb3cd24fa9068b6de8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d186c553578064b0e447ccb3cd24fa9068b6de8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef3d4522857db523809fdbced15cb18ab62de853",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef3d4522857db523809fdbced15cb18ab62de853",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef3d4522857db523809fdbced15cb18ab62de853"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "419ccded3af1cb59930f5ae506d85752a63cb06c",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
        "patch": "@@ -89,6 +89,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -103,6 +104,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -119,6 +121,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -137,6 +140,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "91c58561371a3c0ee9395e94120381018728a547",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWM1ODU2MTM3MWEzYzBlZTkzOTVlOTQxMjAzODEwMTg3MjhhNTQ3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-13T23:27:19Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-13T23:27:34Z"
      },
      "message": "generated depends files (almost ignore)",
      "tree": {
        "sha": "8d966fe2871b38025b3223f5219af8188697406b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d966fe2871b38025b3223f5219af8188697406b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91c58561371a3c0ee9395e94120381018728a547",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91c58561371a3c0ee9395e94120381018728a547",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91c58561371a3c0ee9395e94120381018728a547",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91c58561371a3c0ee9395e94120381018728a547/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e439250b9974c2cfaa6163cbcff67c7bd71b8d4a"
      }
    ],
    "stats": {
      "total": 1621,
      "additions": 1620,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9dd4ff028c929f41490b51be3fe32e8400f99a27",
        "filename": "depends/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91c58561371a3c0ee9395e94120381018728a547/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91c58561371a3c0ee9395e94120381018728a547/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=91c58561371a3c0ee9395e94120381018728a547",
        "patch": "@@ -4,7 +4,7 @@ built/\n sources/\n config.site\n x86_64*\n-i686*\n+# i686*\n mips*\n arm*\n aarch64*"
      },
      {
        "sha": "4c55c7071df610a7fc2dc7dcf0e5d5c318e73f79",
        "filename": "depends/i686-w64-mingw32/.gitignore",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91c58561371a3c0ee9395e94120381018728a547/depends/i686-w64-mingw32/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91c58561371a3c0ee9395e94120381018728a547/depends/i686-w64-mingw32/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/i686-w64-mingw32/.gitignore?ref=91c58561371a3c0ee9395e94120381018728a547",
        "patch": "@@ -0,0 +1,40 @@\n+.stamp*\n+\n+\n+boost\n+\n+# protobuf\n+protobuf\n+protobuf*.pc\n+\n+# zlib\n+zconf.h\n+zlib.h\n+zlib.pc\n+zlib.3\n+\n+# zmq\n+zmq*.h\n+libzmq.pc\n+\n+# berkeley db\n+include/db*.h\n+\n+# miniupnpc\n+miniupnpc\n+\n+# openssl\n+openssl\n+openssl.pc\n+libssl.pc\n+libcrypto.pc\n+\n+# GUI\n+qrencode.h\n+libqrencode.pc\n+Qt*\n+\n+# libevent2\n+event2\n+include/ev*.h\n+libevent*.pc"
      },
      {
        "sha": "1af5191866e4348a4f65b1c107ebfd65cf55524f",
        "filename": "depends/i686-w64-mingw32/native/share/man/man1/ccache.1",
        "status": "added",
        "additions": 1579,
        "deletions": 0,
        "changes": 1579,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91c58561371a3c0ee9395e94120381018728a547/depends/i686-w64-mingw32/native/share/man/man1/ccache.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91c58561371a3c0ee9395e94120381018728a547/depends/i686-w64-mingw32/native/share/man/man1/ccache.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/i686-w64-mingw32/native/share/man/man1/ccache.1?ref=91c58561371a3c0ee9395e94120381018728a547",
        "patch": "@@ -0,0 +1,1579 @@\n+'\\\" t\n+.\\\"     Title: ccache\n+.\\\"    Author: [see the \"Author\" section]\n+.\\\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>\n+.\\\"      Date: 10/26/2016\n+.\\\"    Manual: ccache Manual\n+.\\\"    Source: ccache 3.3.3\n+.\\\"  Language: English\n+.\\\"\n+.TH \"CCACHE\" \"1\" \"10/26/2016\" \"ccache 3\\&.3\\&.3\" \"ccache Manual\"\n+.\\\" -----------------------------------------------------------------\n+.\\\" * Define some portability stuff\n+.\\\" -----------------------------------------------------------------\n+.\\\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+.\\\" http://bugs.debian.org/507673\n+.\\\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html\n+.\\\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+.ie \\n(.g .ds Aq \\(aq\n+.el       .ds Aq '\n+.\\\" -----------------------------------------------------------------\n+.\\\" * set default formatting\n+.\\\" -----------------------------------------------------------------\n+.\\\" disable hyphenation\n+.nh\n+.\\\" disable justification (adjust text to left margin only)\n+.ad l\n+.\\\" -----------------------------------------------------------------\n+.\\\" * MAIN CONTENT STARTS HERE *\n+.\\\" -----------------------------------------------------------------\n+.SH \"NAME\"\n+ccache \\- a fast C/C++ compiler cache\n+.SH \"SYNOPSIS\"\n+.sp\n+.nf\n+\\fBccache\\fR [\\fIoptions\\fR]\n+\\fBccache\\fR \\fIcompiler\\fR [\\fIcompiler options\\fR]\n+\\fIcompiler\\fR [\\fIcompiler options\\fR]                   (via symbolic link)\n+.fi\n+.SH \"DESCRIPTION\"\n+.sp\n+ccache is a compiler cache\\&. It speeds up recompilation by caching the result of previous compilations and detecting when the same compilation is being done again\\&. Supported languages are C, C++, Objective\\-C and Objective\\-C++\\&.\n+.sp\n+ccache has been carefully written to always produce exactly the same compiler output that you would get without the cache\\&. The only way you should be able to tell that you are using ccache is the speed\\&. Currently known exceptions to this goal are listed under CAVEATS\\&. If you ever discover an undocumented case where ccache changes the output of your compiler, please let us know\\&.\n+.SS \"Features\"\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Keeps statistics on hits/misses\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Automatic cache size management\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Can cache compilations that generate warnings\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Easy installation\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Low overhead\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Optionally uses hard links where possible to avoid copies\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Optionally compresses files in the cache to reduce disk space\\&.\n+.RE\n+.SS \"Limitations\"\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Only knows how to cache the compilation of a single C/C++/Objective\\-C/Objective\\-C++ file\\&. Other types of compilations (multi\\-file compilation, linking, etc) will silently fall back to running the real compiler\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Only works with GCC and compilers that behave similar enough\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Some compiler flags are not supported\\&. If such a flag is detected, ccache will silently fall back to running the real compiler\\&.\n+.RE\n+.SH \"RUN MODES\"\n+.sp\n+There are two ways to use ccache\\&. You can either prefix your compilation commands with \\fBccache\\fR or you can let ccache masquerade as the compiler by creating a symbolic link (named as the compiler) to ccache\\&. The first method is most convenient if you just want to try out ccache or wish to use it for some specific projects\\&. The second method is most useful for when you wish to use ccache for all your compilations\\&.\n+.sp\n+To use the first method, just make sure that \\fBccache\\fR is in your \\fBPATH\\fR\\&.\n+.sp\n+To use the symlinks method, do something like this:\n+.sp\n+.if n \\{\\\n+.RS 4\n+.\\}\n+.nf\n+cp ccache /usr/local/bin/\n+ln \\-s ccache /usr/local/bin/gcc\n+ln \\-s ccache /usr/local/bin/g++\n+ln \\-s ccache /usr/local/bin/cc\n+ln \\-s ccache /usr/local/bin/c++\n+.fi\n+.if n \\{\\\n+.RE\n+.\\}\n+.sp\n+And so forth\\&. This will work as long as the directory with symlinks comes before the path to the compiler (which is usually in /usr/bin)\\&. After installing you may wish to run \\(lqwhich gcc\\(rq to make sure that the correct link is being used\\&.\n+.if n \\{\\\n+.sp\n+.\\}\n+.RS 4\n+.it 1 an-trap\n+.nr an-no-space-flag 1\n+.nr an-break-flag 1\n+.br\n+.ps +1\n+\\fBWarning\\fR\n+.ps -1\n+.br\n+.sp\n+The technique of letting ccache masquerade as the compiler works well, but currently doesn\\(cqt interact well with other tools that do the same thing\\&. See USING CCACHE WITH OTHER COMPILER WRAPPERS\\&.\n+.sp .5v\n+.RE\n+.if n \\{\\\n+.sp\n+.\\}\n+.RS 4\n+.it 1 an-trap\n+.nr an-no-space-flag 1\n+.nr an-break-flag 1\n+.br\n+.ps +1\n+\\fBWarning\\fR\n+.ps -1\n+.br\n+.sp\n+Do not use a hard link, use a symbolic link\\&. A hard link will cause \\(lqinteresting\\(rq problems\\&.\n+.sp .5v\n+.RE\n+.SH \"OPTIONS\"\n+.sp\n+These options only apply when you invoke ccache as \\(lqccache\\(rq\\&. When invoked as a compiler (via a symlink as described in the previous section), the normal compiler options apply and you should refer to the compiler\\(cqs documentation\\&.\n+.PP\n+\\fB\\-c, \\-\\-cleanup\\fR\n+.RS 4\n+Clean up the cache by removing old cached files until the specified file number and cache size limits are not exceeded\\&. This also recalculates the cache file count and size totals\\&. Normally, there is no need to initiate cleanup manually as ccache keeps the cache below the specified limits at runtime and keeps statistics up to date on each compilation\\&. Forcing a cleanup is mostly useful if you manually modify the cache contents or believe that the cache size statistics may be inaccurate\\&.\n+.RE\n+.PP\n+\\fB\\-C, \\-\\-clear\\fR\n+.RS 4\n+Clear the entire cache, removing all cached files, but keeping the configuration file\\&.\n+.RE\n+.PP\n+\\fB\\-F, \\-\\-max\\-files\\fR=\\fIN\\fR\n+.RS 4\n+Set the maximum number of files allowed in the cache\\&. Use 0 for no limit\\&. The value is stored in a configuration file in the cache directory and applies to all future compilations\\&.\n+.RE\n+.PP\n+\\fB\\-h, \\-\\-help\\fR\n+.RS 4\n+Print an options summary page\\&.\n+.RE\n+.PP\n+\\fB\\-M, \\-\\-max\\-size\\fR=\\fISIZE\\fR\n+.RS 4\n+Set the maximum size of the files stored in the cache\\&.\n+\\fISIZE\\fR\n+should be a number followed by an optional suffix: k, M, G, T (decimal), Ki, Mi, Gi or Ti (binary)\\&. The default suffix is G\\&. Use 0 for no limit\\&. The value is stored in a configuration file in the cache directory and applies to all future compilations\\&.\n+.RE\n+.PP\n+\\fB\\-o, \\-\\-set\\-config\\fR=\\fIKEY=VALUE\\fR\n+.RS 4\n+Set configuration\n+\\fIKEY\\fR\n+to\n+\\fIVALUE\\fR\\&. See\n+CONFIGURATION\n+for more information\\&.\n+.RE\n+.PP\n+\\fB\\-p, \\-\\-print\\-config\\fR\n+.RS 4\n+Print current configuration options and from where they originate (environment variable, configuration file or compile\\-time default)\\&.\n+.RE\n+.PP\n+\\fB\\-s, \\-\\-show\\-stats\\fR\n+.RS 4\n+Print the current statistics summary for the cache\\&.\n+.RE\n+.PP\n+\\fB\\-V, \\-\\-version\\fR\n+.RS 4\n+Print version and copyright information\\&.\n+.RE\n+.PP\n+\\fB\\-z, \\-\\-zero\\-stats\\fR\n+.RS 4\n+Zero the cache statistics (but not the configuration options)\\&.\n+.RE\n+.SH \"EXTRA OPTIONS\"\n+.sp\n+When run as a compiler, ccache usually just takes the same command line options as the compiler you are using\\&. The only exception to this is the option \\fB\\-\\-ccache\\-skip\\fR\\&. That option can be used to tell ccache to avoid interpreting the next option in any way and to pass it along to the compiler as\\-is\\&. \\fBNote\\fR: \\fB\\-\\-ccache\\-skip\\fR currently only tells ccache not to interpret the next option as a special compiler option \\(em the option will still be included in the direct mode hash\\&.\n+.sp\n+The reason this can be important is that ccache does need to parse the command line and determine what is an input filename and what is a compiler option, as it needs the input filename to determine the name of the resulting object file (among other things)\\&. The heuristic ccache uses when parsing the command line is that any argument that exists as a file is treated as an input file name\\&. By using \\fB\\-\\-ccache\\-skip\\fR you can force an option to not be treated as an input file name and instead be passed along to the compiler as a command line option\\&.\n+.sp\n+Another case where \\fB\\-\\-ccache\\-skip\\fR can be useful is if ccache interprets an option specially but shouldn\\(cqt, since the option has another meaning for your compiler than what ccache thinks\\&.\n+.SH \"CONFIGURATION\"\n+.sp\n+ccache\\(cqs default behavior can be overridden by configuration file settings, which in turn can be overridden by environment variables with names starting with \\fBCCACHE_\\fR\\&. ccache normally reads configuration from two files: first a system\\-level configuration file and secondly a cache\\-specific configuration file\\&. The priority of configuration settings is as follows (where 1 is highest):\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 1.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  1.\" 4.2\n+.\\}\n+Environment variables\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 2.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  2.\" 4.2\n+.\\}\n+The cache\\-specific configuration file\n+\\fB<ccachedir>/ccache\\&.conf\\fR\n+(typically\n+\\fB$HOME/\\&.ccache/ccache\\&.conf\\fR)\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 3.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  3.\" 4.2\n+.\\}\n+The system\\-wide configuration file\n+\\fB<sysconfdir>/ccache\\&.conf\\fR\n+(typically\n+\\fB/etc/ccache\\&.conf\\fR\n+or\n+\\fB/usr/local/etc/ccache\\&.conf\\fR)\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 4.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  4.\" 4.2\n+.\\}\n+Compile\\-time defaults\\&.\n+.RE\n+.sp\n+As a special case, if the environment variable \\fBCCACHE_CONFIGPATH\\fR is set, ccache reads configuration from the specified path instead of the default paths\\&.\n+.SS \"Configuration file syntax\"\n+.sp\n+Configuration files are in a simple \\(lqkey = value\\(rq format, one setting per line\\&. Lines starting with a hash sign are comments\\&. Blank lines are ignored, as is whitespace surrounding keys and values\\&. Example:\n+.sp\n+.if n \\{\\\n+.RS 4\n+.\\}\n+.nf\n+# Set maximum cache size to 10 GB:\n+max_size = 10G\n+.fi\n+.if n \\{\\\n+.RE\n+.\\}\n+.SS \"Boolean values\"\n+.sp\n+Some settings are boolean values (i\\&.e\\&. truth values)\\&. In a configuration file, such values must be set to the string \\fBtrue\\fR or \\fBfalse\\fR\\&. For the corresponding environment variables, the semantics are a bit different: a set environment variable means \\(lqtrue\\(rq regardless of the value (even if set to the empty string), and an unset environment variable means \\(lqfalse\\(rq\\&. Each boolean environment variable also has a negated form starting with \\fBCCACHE_NO\\fR\\&. For example, \\fBCCACHE_COMPRESS\\fR can be set to force compression and \\fBCCACHE_NOCOMPRESS\\fR can be set to force no compression\\&.\n+.SS \"Configuration settings\"\n+.sp\n+Below is a list of available configuration settings\\&. The corresponding environment variable name is indicated in parentheses after each configuration setting key\\&.\n+.PP\n+\\fBbase_dir\\fR (\\fBCCACHE_BASEDIR\\fR)\n+.RS 4\n+This setting should be an absolute path to a directory\\&. ccache then rewrites absolute paths into relative paths before computing the hash that identifies the compilation, but only for paths under the specified directory\\&. If set to the empty string (which is the default), no rewriting is done\\&. See also the discussion under\n+COMPILING IN DIFFERENT DIRECTORIES\\&. If using GCC or newer versions of Clang, you might want to look into the\n+\\fB\\-fdebug\\-prefix\\-map=old=new\\fR\n+option for relocating debug info to a common prefix (mapping prefix with old=new)\\&.\n+.RE\n+.PP\n+\\fBcache_dir\\fR (\\fBCCACHE_DIR\\fR)\n+.RS 4\n+This setting specifies where ccache will keep its cached compiler outputs\\&. It will only take effect if set in the system\\-wide configuration file or as an environment variable\\&. The default is\n+\\fB$HOME/\\&.ccache\\fR\\&.\n+.RE\n+.PP\n+\\fBcache_dir_levels\\fR (\\fBCCACHE_NLEVELS\\fR)\n+.RS 4\n+This setting allows you to choose the number of directory levels in the cache directory\\&. The default is 2\\&. The minimum is 1 and the maximum is 8\\&.\n+.RE\n+.PP\n+\\fBcompiler\\fR (\\fBCCACHE_CC\\fR)\n+.RS 4\n+This setting can be used to force the name of the compiler to use\\&. If set to the empty string (which is the default), ccache works it out from the command line\\&.\n+.RE\n+.PP\n+\\fBcompiler_check\\fR (\\fBCCACHE_COMPILERCHECK\\fR)\n+.RS 4\n+By default, ccache includes the modification time (\\(lqmtime\\(rq) and size of the compiler in the hash to ensure that results retrieved from the cache are accurate\\&. This setting can be used to select another strategy\\&. Possible values are:\n+.PP\n+\\fBcontent\\fR\n+.RS 4\n+Hash the content of the compiler binary\\&. This makes ccache very slightly slower compared to the\n+\\fBmtime\\fR\n+setting, but makes it cope better with compiler upgrades during a build bootstrapping process\\&.\n+.RE\n+.PP\n+\\fBmtime\\fR\n+.RS 4\n+Hash the compiler\\(cqs mtime and size, which is fast\\&. This is the default\\&.\n+.RE\n+.PP\n+\\fBnone\\fR\n+.RS 4\n+Don\\(cqt hash anything\\&. This may be good for situations where you can safely use the cached results even though the compiler\\(cqs mtime or size has changed (e\\&.g\\&. if the compiler is built as part of your build system and the compiler\\(cqs source has not changed, or if the compiler only has changes that don\\(cqt affect code generation)\\&. You should only use the\n+\\fBnone\\fR\n+setting if you know what you are doing\\&.\n+.RE\n+.PP\n+\\fBstring:value\\fR\n+.RS 4\n+Use\n+\\fBvalue\\fR\n+as the string to calculate hash from\\&. This can be the compiler revision number you retrieved earlier and set here via environment variable\\&.\n+.RE\n+.PP\n+\\fIa command string\\fR\n+.RS 4\n+Hash the standard output and standard error output of the specified command\\&. The string will be split on whitespace to find out the command and arguments to run\\&. No other interpretation of the command string will be done, except that the special word\n+\\fB%compiler%\\fR\n+will be replaced with the path to the compiler\\&. Several commands can be specified with semicolon as separator\\&. Examples:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+%compiler% \\-v\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+%compiler% \\-dumpmachine; %compiler% \\-dumpversion\n+.RE\n+.sp\n+You should make sure that the specified command is as fast as possible since it will be run once for each ccache invocation\\&.\n+.sp\n+Identifying the compiler using a command is useful if you want to avoid cache misses when the compiler has been rebuilt but not changed\\&.\n+.sp\n+Another case is when the compiler (as seen by ccache) actually isn\\(cqt the real compiler but another compiler wrapper \\(em in that case, the default\n+\\fBmtime\\fR\n+method will hash the mtime and size of the other compiler wrapper, which means that ccache won\\(cqt be able to detect a compiler upgrade\\&. Using a suitable command to identify the compiler is thus safer, but it\\(cqs also slower, so you should consider continue using the\n+\\fBmtime\\fR\n+method in combination with the\n+\\fBprefix_command\\fR\n+setting if possible\\&. See\n+USING CCACHE WITH OTHER COMPILER WRAPPERS\\&.\n+.RE\n+.RE\n+.PP\n+\\fBcompression\\fR (\\fBCCACHE_COMPRESS\\fR or \\fBCCACHE_NOCOMPRESS\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will compress object files and other compiler output it puts in the cache\\&. However, this setting has no effect on how files are retrieved from the cache; compressed and uncompressed results will still be usable regardless of this setting\\&. The default is false\\&.\n+.RE\n+.PP\n+\\fBcompression_level\\fR (\\fBCCACHE_COMPRESSLEVEL\\fR)\n+.RS 4\n+This setting determines the level at which ccache will compress object files\\&. It only has effect if\n+\\fBcompression\\fR\n+is enabled\\&. The value defaults to 6, and must be no lower than 1 (fastest, worst compression) and no higher than 9 (slowest, best compression)\\&.\n+.RE\n+.PP\n+\\fBcpp_extension\\fR (\\fBCCACHE_EXTENSION\\fR)\n+.RS 4\n+This setting can be used to force a certain extension for the intermediate preprocessed file\\&. The default is to automatically determine the extension to use for intermediate preprocessor files based on the type of file being compiled, but that sometimes doesn\\(cqt work\\&. For example, when using the \\(lqaCC\\(rq compiler on HP\\-UX, set the cpp extension to\n+\\fBi\\fR\\&.\n+.RE\n+.PP\n+\\fBdirect_mode\\fR (\\fBCCACHE_DIRECT\\fR or \\fBCCACHE_NODIRECT\\fR, see Boolean values above)\n+.RS 4\n+If true, the direct mode will be used\\&. The default is true\\&. See\n+THE DIRECT MODE\\&.\n+.RE\n+.PP\n+\\fBdisable\\fR (\\fBCCACHE_DISABLE\\fR or \\fBCCACHE_NODISABLE\\fR, see Boolean values above)\n+.RS 4\n+When true, ccache will just call the real compiler, bypassing the cache completely\\&. The default is false\\&.\n+.RE\n+.PP\n+\\fBextra_files_to_hash\\fR (\\fBCCACHE_EXTRAFILES\\fR)\n+.RS 4\n+This setting is a list of paths to files that ccache will include in the the hash sum that identifies the build\\&. The list separator is semicolon on Windows systems and colon on other systems\\&.\n+.RE\n+.PP\n+\\fBhard_link\\fR (\\fBCCACHE_HARDLINK\\fR or \\fBCCACHE_NOHARDLINK\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will attempt to use hard links from the cache directory when creating the compiler output rather than using a file copy\\&. Using hard links may be slightly faster in some situations, but can confuse programs like \\(lqmake\\(rq that rely on modification times\\&. Another thing to keep in mind is that if the resulting object file is modified in any way, this corrupts the cached object file as well\\&. Hard links are never made for compressed cache files\\&. This means that you should not enable compression if you want to use hard links\\&. The default is false\\&.\n+.RE\n+.PP\n+\\fBhash_dir\\fR (\\fBCCACHE_HASHDIR\\fR or \\fBCCACHE_NOHASHDIR\\fR, see Boolean values above)\n+.RS 4\n+If true (which is the default), ccache will include the current working directory (CWD) in the hash that is used to distinguish two compilations when generating debug info (compiler option\n+\\fB\\-g\\fR\n+with variations)\\&. Exception: The CWD will not be included in the hash if\n+\\fBbase_dir\\fR\n+is set (and matches the CWD) and the compiler option\n+\\fB\\-fdebug\\-prefix\\-map\\fR\n+is used\\&.\n+.sp\n+.if n \\{\\\n+.RS 4\n+.\\}\n+.nf\n+The reason for including the CWD in the hash by default is to prevent a\n+problem with the storage of the current working directory in the debug info\n+of an object file, which can lead ccache to return a cached object file\n+that has the working directory in the debug info set incorrectly\\&.\n+.fi\n+.if n \\{\\\n+.RE\n+.\\}\n+.sp\n+.if n \\{\\\n+.RS 4\n+.\\}\n+.nf\n+You can disable this setting to get cache hits when compiling the same\n+source code in different directories if you don\\*(Aqt mind that CWD in the\n+debug info might be incorrect\\&.\n+.fi\n+.if n \\{\\\n+.RE\n+.\\}\n+.RE\n+.PP\n+\\fBignore_headers_in_manifest\\fR (\\fBCCACHE_IGNOREHEADERS\\fR)\n+.RS 4\n+This setting is a list of paths to files (or directories with headers) that ccache will\n+\\fBnot\\fR\n+include in the manifest list that makes up the direct mode\\&. Note that this can cause stale cache hits if those headers do indeed change\\&. The list separator is semicolon on Windows systems and colon on other systems\\&.\n+.RE\n+.PP\n+\\fBkeep_comments_cpp\\fR (\\fBCCACHE_COMMENTS\\fR or \\fBCCACHE_NOCOMMENTS\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will not discard the comments before hashing preprocessor output\\&. This can be used to check documentation with\n+\\fB\\-Wdocumentation\\fR\\&.\n+.RE\n+.PP\n+\\fBlimit_multiple\\fR (\\fBCCACHE_LIMIT_MULTIPLE\\fR)\n+.RS 4\n+Sets the limit when cleaning up\\&. Files are deleted (in LRU order) until the levels are below the limit\\&. The default is 0\\&.8 (= 80%)\\&.\n+.RE\n+.PP\n+\\fBlog_file\\fR (\\fBCCACHE_LOGFILE\\fR)\n+.RS 4\n+If set to a file path, ccache will write information on what it is doing to the specified file\\&. This is useful for tracking down problems\\&.\n+.RE\n+.PP\n+\\fBmax_files\\fR (\\fBCCACHE_MAXFILES\\fR)\n+.RS 4\n+This option specifies the maximum number of files to keep in the cache\\&. Use 0 for no limit (which is the default)\\&.\n+.RE\n+.PP\n+\\fBmax_size\\fR (\\fBCCACHE_MAXSIZE\\fR)\n+.RS 4\n+This option specifies the maximum size of the cache\\&. Use 0 for no limit\\&. The default value is 5G\\&. Available suffixes: k, M, G, T (decimal) and Ki, Mi, Gi, Ti (binary)\\&. The default suffix is \"G\"\\&.\n+.RE\n+.PP\n+\\fBpath\\fR (\\fBCCACHE_PATH\\fR)\n+.RS 4\n+If set, ccache will search directories in this list when looking for the real compiler\\&. The list separator is semicolon on Windows systems and colon on other systems\\&. If not set, ccache will look for the first executable matching the compiler name in the normal\n+\\fBPATH\\fR\n+that isn\\(cqt a symbolic link to ccache itself\\&.\n+.RE\n+.PP\n+\\fBprefix_command\\fR (\\fBCCACHE_PREFIX\\fR)\n+.RS 4\n+This option adds a list of prefixes (separated by space) to the command line that ccache uses when invoking the compiler\\&. See also\n+USING CCACHE WITH OTHER COMPILER WRAPPERS\\&.\n+.RE\n+.PP\n+\\fBprefix_command_cpp\\fR (\\fBCCACHE_PREFIX_CPP\\fR)\n+.RS 4\n+This option adds a list of prefixes (separated by space) to the command line that ccache uses when invoking the preprocessor\\&.\n+.RE\n+.PP\n+\\fBread_only\\fR (\\fBCCACHE_READONLY\\fR or \\fBCCACHE_NOREADONLY\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will attempt to use existing cached object files, but it will not to try to add anything new to the cache\\&. If you are using this because your ccache directory is read\\-only, then you need to set\n+\\fBtemporary_dir\\fR\n+as otherwise ccache will fail to create temporary files\\&.\n+.RE\n+.PP\n+\\fBread_only_direct\\fR (\\fBCCACHE_READONLY_DIRECT\\fR or \\fBCCACHE_NOREADONLY_DIRECT\\fR, see Boolean values above)\n+.RS 4\n+Just like\n+\\fBread_only\\fR\n+except that ccache will only try to retrieve results from the cache using the direct mode, not the preprocessor mode\\&. See documentation for\n+\\fBread_only\\fR\n+regarding using a read\\-only ccache directory\\&.\n+.RE\n+.PP\n+\\fBrecache\\fR (\\fBCCACHE_RECACHE\\fR or \\fBCCACHE_NORECACHE\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will not use any previously stored result\\&. New results will still be cached, possibly overwriting any pre\\-existing results\\&.\n+.RE\n+.PP\n+\\fBrun_second_cpp\\fR (\\fBCCACHE_CPP2\\fR or \\fBCCACHE_NOCPP2\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will first run the preprocessor to preprocess the source code (see\n+THE PREPROCESSOR MODE) and then on a cache miss run the compiler on the source code to get hold of the object file\\&. This is the default\\&.\n+.sp\n+.if n \\{\\\n+.RS 4\n+.\\}\n+.nf\n+If false, ccache will first run preprocessor to preprocess the source code\n+and then on a cache miss run the compiler on the _preprocessed source code_\n+instead of the original source code\\&. This makes cache misses slightly\n+faster since the source code only has to be preprocessed once\\&. The downside\n+is that some compilers won\\*(Aqt produce the same result (for instance\n+diagnostics warnings) when compiling preprocessed source code\\&.\n+.fi\n+.if n \\{\\\n+.RE\n+.\\}\n+.RE\n+.PP\n+\\fBsloppiness\\fR (\\fBCCACHE_SLOPPINESS\\fR)\n+.RS 4\n+By default, ccache tries to give as few false cache hits as possible\\&. However, in certain situations it\\(cqs possible that you know things that ccache can\\(cqt take for granted\\&. This setting makes it possible to tell ccache to relax some checks in order to increase the hit rate\\&. The value should be a comma\\-separated string with options\\&. Available options are:\n+.PP\n+\\fBfile_macro\\fR\n+.RS 4\n+Ignore\n+\\fB__FILE__\\fR\n+being present in the source\\&.\n+.RE\n+.PP\n+\\fBfile_stat_matches\\fR\n+.RS 4\n+ccache normally examines a file\\(cqs contents to determine whether it matches the cached version\\&. With this option set, ccache will consider a file as matching its cached version if the sizes, mtimes and ctimes match\\&.\n+.RE\n+.PP\n+\\fBinclude_file_ctime\\fR\n+.RS 4\n+By default, ccache also will not cache a file if it includes a header whose ctime is too new\\&. This option disables that check\\&.\n+.RE\n+.PP\n+\\fBinclude_file_mtime\\fR\n+.RS 4\n+By default, ccache will not cache a file if it includes a header whose mtime is too new\\&. This option disables that check\\&.\n+.RE\n+.PP\n+\\fBno_system_headers\\fR\n+.RS 4\n+By default, ccache will also include all system headers in the manifest\\&. With this option set, ccache will only include system headers in the hash but not add the system header files to the list of include files\\&.\n+.RE\n+.PP\n+\\fBpch_defines\\fR\n+.RS 4\n+Be sloppy about #defines when precompiling a header file\\&. See\n+PRECOMPILED HEADERS\n+for more information\\&.\n+.RE\n+.PP\n+\\fBtime_macros\\fR\n+.RS 4\n+Ignore\n+\\fB__DATE__\\fR\n+and\n+\\fB__TIME__\\fR\n+being present in the source code\\&.\n+.RE\n+.sp\n+See the discussion under\n+TROUBLESHOOTING\n+for more information\\&.\n+.RE\n+.PP\n+\\fBstats\\fR (\\fBCCACHE_STATS\\fR or \\fBCCACHE_NOSTATS\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will update the statistics counters on each compilation\\&. The default is true\\&.\n+.RE\n+.PP\n+\\fBtemporary_dir\\fR (\\fBCCACHE_TEMPDIR\\fR)\n+.RS 4\n+This setting specifies where ccache will put temporary files\\&. The default is\n+\\fB<cache_dir>/tmp\\fR\\&.\n+.if n \\{\\\n+.sp\n+.\\}\n+.RS 4\n+.it 1 an-trap\n+.nr an-no-space-flag 1\n+.nr an-break-flag 1\n+.br\n+.ps +1\n+\\fBNote\\fR\n+.ps -1\n+.br\n+In previous versions of ccache,\n+\\fBCCACHE_TEMPDIR\\fR\n+had to be on the same filesystem as the\n+\\fBCCACHE_DIR\\fR\n+path, but this requirement has been relaxed\\&.)\n+.sp .5v\n+.RE\n+.RE\n+.PP\n+\\fBumask\\fR (\\fBCCACHE_UMASK\\fR)\n+.RS 4\n+This setting specifies the umask for ccache and all child processes (such as the compiler)\\&. This is mostly useful when you wish to share your cache with other users\\&. Note that this also affects the file permissions set on the object files created from your compilations\\&.\n+.RE\n+.PP\n+\\fBunify\\fR (\\fBCCACHE_UNIFY\\fR or \\fBCCACHE_NOUNIFY\\fR, see Boolean values above)\n+.RS 4\n+If true, ccache will use a C/C++ unifier when hashing the preprocessor output if the\n+\\fB\\-g\\fR\n+option is not used\\&. The unifier is slower than a normal hash, so setting this environment variable loses a little bit of speed, but it means that ccache can take advantage of not recompiling when the changes to the source code consist of reformatting only\\&. Note that enabling the unifier changes the hash, so cached compilations produced when the unifier is enabled cannot be reused when the unifier is disabled, and vice versa\\&. Enabling the unifier may result in incorrect line number information in compiler warning messages and expansions of the\n+\\fB__LINE__\\fR\n+macro\\&. Also note that enabling the unifier implies turning off the direct mode\\&.\n+.RE\n+.SH \"CACHE SIZE MANAGEMENT\"\n+.sp\n+By default, ccache has a five gigabyte limit on the total size of files in the cache and no maximum number of files\\&. You can set different limits using the \\fB\\-M\\fR/\\fB\\-\\-max\\-size\\fR and \\fB\\-F\\fR/\\fB\\-\\-max\\-files\\fR options\\&. Use \\fBccache \\-s/\\-\\-show\\-stats\\fR to see the cache size and the currently configured limits (in addition to other various statistics)\\&.\n+.SH \"CACHE COMPRESSION\"\n+.sp\n+ccache can optionally compress all files it puts into the cache using the compression library zlib\\&. While this may involve a tiny performance slowdown, it increases the number of files that fit in the cache\\&. You can turn on compression with the \\fBcompression\\fR configuration setting and you can also tweak the compression level with \\fBcompression_level\\fR\\&.\n+.SH \"HOW CCACHE WORKS\"\n+.sp\n+The basic idea is to detect when you are compiling exactly the same code a second time and reuse the previously produced output\\&. The detection is done by hashing different kinds of information that should be unique for the compilation and then using the hash sum to identify the cached output\\&. ccache uses MD4, a very fast cryptographic hash algorithm, for the hashing\\&. (MD4 is nowadays too weak to be useful in cryptographic contexts, but it should be safe enough to be used to identify recompilations\\&.) On a cache hit, ccache is able to supply all of the correct compiler outputs (including all warnings, dependency file, etc) from the cache\\&.\n+.sp\n+ccache has two ways of doing the detection:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the\n+\\fBdirect mode\\fR, where ccache hashes the source code and include files directly\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the\n+\\fBpreprocessor mode\\fR, where ccache runs the preprocessor on the source code and hashes the result\n+.RE\n+.sp\n+The direct mode is generally faster since running the preprocessor has some overhead\\&.\n+.SS \"Common hashed information\"\n+.sp\n+For both modes, the following information is included in the hash:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the extension used by the compiler for a file with preprocessor output (normally\n+\\fB\\&.i\\fR\n+for C code and\n+\\fB\\&.ii\\fR\n+for C++ code)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the compiler\\(cqs size and modification time (or other compiler\\-specific information specified by the\n+\\fBcompiler_check\\fR\n+setting)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the name of the compiler\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the current directory (if the\n+\\fBhash_dir\\fR\n+setting is enabled)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+contents of files specified by the\n+\\fBextra_files_to_hash\\fR\n+setting (if any)\n+.RE\n+.SS \"The direct mode\"\n+.sp\n+In the direct mode, the hash is formed of the common information and:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the input source file\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the command line options\n+.RE\n+.sp\n+Based on the hash, a data structure called \\(lqmanifest\\(rq is looked up in the cache\\&. The manifest contains:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+references to cached compilation results (object file, dependency file, etc) that were produced by previous compilations that matched the hash\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+paths to the include files that were read at the time the compilation results were stored in the cache\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+hash sums of the include files at the time the compilation results were stored in the cache\n+.RE\n+.sp\n+The current contents of the include files are then hashed and compared to the information in the manifest\\&. If there is a match, ccache knows the result of the compilation\\&. If there is no match, ccache falls back to running the preprocessor\\&. The output from the preprocessor is parsed to find the include files that were read\\&. The paths and hash sums of those include files are then stored in the manifest along with information about the produced compilation result\\&.\n+.sp\n+There is a catch with the direct mode: header files that were used by the compiler are recorded, but header files that were \\fBnot\\fR used, but would have been used if they existed, are not\\&. So, when ccache checks if a result can be taken from the cache, it currently can\\(cqt check if the existence of a new header file should invalidate the result\\&. In practice, the direct mode is safe to use in the absolute majority of cases\\&.\n+.sp\n+The direct mode will be disabled if any of the following holds:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the configuration setting\n+\\fBdirect_mode\\fR\n+is false\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+a modification time of one of the include files is too new (needed to avoid a race condition)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the unifier is enabled (the configuration setting\n+\\fBunify\\fR\n+is true)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+a compiler option not supported by the direct mode is used:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+a\n+\\fB\\-Wp,\\fR\\fB\\fIX\\fR\\fR\n+compiler option other than\n+\\fB\\-Wp,\\-MD,\\fR\\fB\\fIpath\\fR\\fR,\n+\\fB\\-Wp,\\-MMD,\\fR\\fB\\fIpath\\fR\\fR\n+and\n+\\fB\\-Wp,\\-D_define_\\fR\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+\\fB\\-Xpreprocessor\\fR\n+.RE\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the string \\(lq__TIME__\\(rq is present in the source code\n+.RE\n+.SS \"The preprocessor mode\"\n+.sp\n+In the preprocessor mode, the hash is formed of the common information and:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the preprocessor output from running the compiler with\n+\\fB\\-E\\fR\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+the command line options except options that affect include files (\\fB\\-I\\fR,\n+\\fB\\-include\\fR,\n+\\fB\\-D\\fR, etc; the theory is that these options will change the preprocessor output if they have any effect at all)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+any standard error output generated by the preprocessor\n+.RE\n+.sp\n+Based on the hash, the cached compilation result can be looked up directly in the cache\\&.\n+.SH \"COMPILING IN DIFFERENT DIRECTORIES\"\n+.sp\n+Some information included in the hash that identifies a unique compilation may contain absolute paths:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The preprocessed source code may contain absolute paths to include files if the compiler option\n+\\fB\\-g\\fR\n+is used or if absolute paths are given to\n+\\fB\\-I\\fR\n+and similar compiler options\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Paths specified by compiler options (such as\n+\\fB\\-I\\fR,\n+\\fB\\-MF\\fR, etc) may be absolute\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The source code file path may be absolute, and that path may substituted for\n+\\fB__FILE__\\fR\n+macros in the source code or included in warnings emitted to standard error by the preprocessor\\&.\n+.RE\n+.sp\n+This means that if you compile the same code in different locations, you can\\(cqt share compilation results between the different build directories since you get cache misses because of the absolute build directory paths that are part of the hash\\&. To mitigate this problem, you can specify a \\(lqbase directory\\(rq in the configuration setting \\fBbase_dir\\fR to an absolute path to the directory\\&. ccache will then rewrite absolute paths that are under the base directory (i\\&.e\\&., paths that have the base directory as a prefix) to relative paths when constructing the hash\\&. A typical path to use as the base directory is your home directory or another directory that is a parent of your build directories\\&. (Don\\(cqt use / as the base directory since that will make ccache also rewrite paths to system header files, which doesn\\(cqt gain anything\\&.)\n+.sp\n+The drawbacks of using a base directory are:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If you specify an absolute path to the source code file,\n+\\fB__FILE__\\fR\n+macros will be expanded to a relative path instead\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If you specify an absolute path to the source code file and compile with\n+\\fB\\-g\\fR, the source code path stored in the object file may point to the wrong directory, which may prevent debuggers like GDB from finding the source code\\&. Sometimes, a work\\-around is to change the directory explicitly with the \\(lqcd\\(rq command in GDB\\&.\n+.RE\n+.SH \"PRECOMPILED HEADERS\"\n+.sp\n+ccache has support for GCC\\(cqs precompiled headers\\&. However, you have to do some things to make it work properly:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+You must set\n+\\fBsloppiness\\fR\n+to\n+\\fBpch_defines,time_macros\\fR\\&. The reason is that ccache can\\(cqt tell whether\n+\\fB__TIME__\\fR\n+or\n+\\fB__DATE__\\fR\n+is used when using a precompiled header\\&. Further, it can\\(cqt detect changes in #defines in the source code because of how preprocessing works in combination with precompiled headers\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+You must either:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+use the\n+\\fB\\-include\\fR\n+compiler option to include the precompiled header (i\\&.e\\&., don\\(cqt use\n+\\fB#include\\fR\n+in the source code to include the header); or\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+(for the Clang compiler) use the\n+\\fB\\-include\\-pch\\fR\n+compiler option to include the PCH file generated from the precompiled header; or\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+add the\n+\\fB\\-fpch\\-preprocess\\fR\n+compiler option when compiling\\&.\n+.RE\n+.sp\n+If you don\\(cqt do this, either the non\\-precompiled version of the header file will be used (if available) or ccache will fall back to running the real compiler and increase the statistics counter \\(lqpreprocessor error\\(rq (if the non\\-precompiled header file is not available)\\&.\n+.RE\n+.SH \"SHARING A CACHE\"\n+.sp\n+A group of developers can increase the cache hit rate by sharing a cache directory\\&. To share a cache without unpleasant side effects, the following conditions should to be met:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Use the same cache directory\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Make sure that the configuration setting\n+\\fBhard_link\\fR\n+is false (which is the default)\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Make sure that all users are in the same group\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Set the configuration setting\n+\\fBumask\\fR\n+to 002\\&. This ensures that cached files are accessible to everyone in the group\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Make sure that all users have write permission in the entire cache directory (and that you trust all users of the shared cache)\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Make sure that the setgid bit is set on all directories in the cache\\&. This tells the filesystem to inherit group ownership for new directories\\&. The command \\(lqfind $CCACHE_DIR \\-type d | xargs chmod g+s\\(rq might be useful for this\\&.\n+.RE\n+.sp\n+The reason to avoid the hard link mode is that the hard links cause unwanted side effects, as all links to a cached file share the file\\(cqs modification timestamp\\&. This results in false dependencies to be triggered by timestamp\\-based build systems whenever another user links to an existing file\\&. Typically, users will see that their libraries and binaries are relinked without reason\\&.\n+.sp\n+You may also want to make sure that a base directory is set appropriately, as discussed in a previous section\\&.\n+.SH \"SHARING A CACHE ON NFS\"\n+.sp\n+It is possible to put the cache directory on an NFS filesystem (or similar filesystems), but keep in mind that:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Having the cache on NFS may slow down compilation\\&. Make sure to do some benchmarking to see if it\\(cqs worth it\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+ccache hasn\\(cqt been tested very thoroughly on NFS\\&.\n+.RE\n+.sp\n+A tip is to set \\fBtemporary_dir\\fR to a directory on the local host to avoid NFS traffic for temporary files\\&.\n+.SH \"USING CCACHE WITH OTHER COMPILER WRAPPERS\"\n+.sp\n+The recommended way of combining ccache with another compiler wrapper (such as \\(lqdistcc\\(rq) is by letting ccache execute the compiler wrapper\\&. This is accomplished by defining the configuration setting \\fBprefix_command\\fR, for example by setting the environment variable \\fBCCACHE_PREFIX\\fR to the name of the wrapper (e\\&.g\\&. \\fBdistcc\\fR)\\&. ccache will then prefix the command line with the specified command when running the compiler\\&. To specify several prefix commands, set \\fBprefix_command\\fR to a colon\\-separated list of commands\\&.\n+.sp\n+Unless you set \\fBcompiler_check\\fR to a suitable command (see the description of that configuration option), it is not recommended to use the form \\fBccache anotherwrapper compiler args\\fR as the compilation command\\&. It\\(cqs also not recommended to use the masquerading technique for the other compiler wrapper\\&. The reason is that by default, ccache will in both cases hash the mtime and size of the other wrapper instead of the real compiler, which means that:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Compiler upgrades will not be detected properly\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The cached results will not be shared between compilations with and without the other wrapper\\&.\n+.RE\n+.sp\n+Another minor thing is that if \\fBprefix_command\\fR is used, ccache will not invoke the other wrapper when running the preprocessor, which increases performance\\&. You can use the \\fBprefix_command_cpp\\fR configuration setting if you also want to invoke the other wrapper when doing preprocessing (normally by adding \\fB\\-E\\fR)\\&.\n+.SH \"CAVEATS\"\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The direct mode fails to pick up new header files in some rare scenarios\\&. See\n+THE DIRECT MODE\n+above\\&.\n+.RE\n+.SH \"TROUBLESHOOTING\"\n+.SS \"General\"\n+.sp\n+A general tip for getting information about what ccache is doing is to enable debug logging by setting \\fBlog_file\\fR\\&. The log contains executed commands, important decisions that ccache makes, read and written files, etc\\&. Another way of keeping track of what is happening is to check the output of \\fBccache \\-s\\fR\\&.\n+.SS \"Performance\"\n+.sp\n+ccache has been written to perform well out of the box, but sometimes you may have to do some adjustments of how you use the compiler and ccache in order to improve performance\\&.\n+.sp\n+Since ccache works best when I/O is fast, put the cache directory on a fast storage device if possible\\&. Having lots of free memory so that files in the cache directory stay in the disk cache is also preferable\\&.\n+.sp\n+A good way of monitoring how well ccache works is to run \\fBccache \\-s\\fR before and after your build and then compare the statistics counters\\&. Here are some common problems and what may be done to increase the hit rate:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If \\(lqcache hit (preprocessed)\\(rq has been incremented instead of \\(lqcache hit (direct)\\(rq, ccache has fallen back to preprocessor mode, which is generally slower\\&. Some possible reasons are:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The source code has been modified in such a way that the preprocessor output is not affected\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+Compiler arguments that are hashed in the direct mode but not in the preprocessor mode have changed (\\fB\\-I\\fR,\n+\\fB\\-include\\fR,\n+\\fB\\-D\\fR, etc) and they didn\\(cqt affect the preprocessor output\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The compiler option\n+\\fB\\-Xpreprocessor\\fR\n+or\n+\\fB\\-Wp,\\fR\\fB\\fIX\\fR\\fR\n+(except\n+\\fB\\-Wp,\\-MD,\\fR\\fB\\fIpath\\fR\\fR,\n+\\fB\\-Wp,\\-MMD,\\fR\\fB\\fIpath\\fR\\fR, and\n+\\fB\\-Wp,\\-D_define_\\fR) is used\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+This was the first compilation with a new value of the base directory setting\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+A modification time of one of the include files is too new (created the same second as the compilation is being done)\\&. This check is made to avoid a race condition\\&. To fix this, create the include file earlier in the build process, if possible, or set\n+\\fBsloppiness\\fR\n+to\n+\\fBinclude_file_mtime\\fR\n+if you are willing to take the risk\\&. (The race condition consists of these events: the preprocessor is run; an include file is modified by someone; the new include file is hashed by ccache; the real compiler is run on the preprocessor\\(cqs output, which contains data from the old header file; the wrong object file is stored in the cache\\&.)\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The\n+\\fB__TIME__\\fR\n+preprocessor macro is (potentially) being used\\&. ccache turns off direct mode if \\(lq__TIME__\\(rq is present in the source code\\&. This is done as a safety measure since the string indicates that a\n+\\fB__TIME__\\fR\n+macro\n+\\fImay\\fR\n+affect the output\\&. (To be sure, ccache would have to run the preprocessor, but the sole point of the direct mode is to avoid that\\&.) If you know that\n+\\fB__TIME__\\fR\n+isn\\(cqt used in practise, or don\\(cqt care if ccache produces objects where\n+\\fB__TIME__\\fR\n+is expanded to something in the past, you can set\n+\\fBsloppiness\\fR\n+to\n+\\fBtime_macros\\fR\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The\n+\\fB__DATE__\\fR\n+preprocessor macro is (potentially) being used and the date has changed\\&. This is similar to how\n+\\fB__TIME__\\fR\n+is handled\\&. If \\(lq__DATE__\\(rq is present in the source code, ccache hashes the current date in order to be able to produce the correct object file if the\n+\\fB__DATE__\\fR\n+macro affects the output\\&. If you know that\n+\\fB__DATE__\\fR\n+isn\\(cqt used in practise, or don\\(cqt care if ccache produces objects where\n+\\fB__DATE__\\fR\n+is expanded to something in the past, you can set\n+\\fBsloppiness\\fR\n+to\n+\\fBtime_macros\\fR\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+The\n+\\fB__FILE__\\fR\n+preprocessor macro is (potentially) being used and the file path has changed\\&. If \\(lq__FILE__\\(rq is present in the source code, ccache hashes the current input file path in order to be able to produce the correct object file if the\n+\\fB__FILE__\\fR\n+macro affects the output\\&. If you know that\n+\\fB__FILE__\\fR\n+isn\\(cqt used in practise, or don\\(cqt care if ccache produces objects where\n+\\fB__FILE__\\fR\n+is expanded to the wrong path, you can set\n+\\fBsloppiness\\fR\n+to\n+\\fBfile_macro\\fR\\&.\n+.RE\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If \\(lqcache miss\\(rq has been incremented even though the same code has been compiled and cached before, ccache has either detected that something has changed anyway or a cleanup has been performed (either explicitly or implicitly when a cache limit has been reached)\\&. Some perhaps unobvious things that may result in a cache miss are usage of\n+\\fB__TIME__\\fR\n+or\n+\\fB__DATE__\\fR\n+macros, or use of automatically generated code that contains a timestamp, build counter or other volatile information\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If \\(lqmultiple source files\\(rq has been incremented, it\\(cqs an indication that the compiler has been invoked on several source code files at once\\&. ccache doesn\\(cqt support that\\&. Compile the source code files separately if possible\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If \\(lqunsupported compiler option\\(rq has been incremented, enable debug logging and check which option was rejected\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If \\(lqpreprocessor error\\(rq has been incremented, one possible reason is that precompiled headers are being used\\&. See\n+PRECOMPILED HEADERS\n+for how to remedy this\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04'\\(bu\\h'+03'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \\(bu 2.3\n+.\\}\n+If \\(lqcan\\(cqt use precompiled header\\(rq has been incremented, see\n+PRECOMPILED HEADERS\\&.\n+.RE\n+.SS \"Corrupt object files\"\n+.sp\n+It should be noted that ccache is susceptible to general storage problems\\&. If a bad object file sneaks into the cache for some reason, it will of course stay bad\\&. Some possible reasons for erroneous object files are bad hardware (disk drive, disk controller, memory, etc), buggy drivers or file systems, a bad \\fBprefix_command\\fR or compiler wrapper\\&. If this happens, the easiest way of fixing it is this:\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 1.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  1.\" 4.2\n+.\\}\n+Build so that the bad object file ends up in the build tree\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 2.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  2.\" 4.2\n+.\\}\n+Remove the bad object file from the build tree\\&.\n+.RE\n+.sp\n+.RS 4\n+.ie n \\{\\\n+\\h'-04' 3.\\h'+01'\\c\n+.\\}\n+.el \\{\\\n+.sp -1\n+.IP \"  3.\" 4.2\n+.\\}\n+Rebuild with\n+\\fBCCACHE_RECACHE\\fR\n+set\\&.\n+.RE\n+.sp\n+An alternative is to clear the whole cache with \\fBccache \\-C\\fR if you don\\(cqt mind losing other cached results\\&.\n+.sp\n+There are no reported issues about ccache producing broken object files reproducibly\\&. That doesn\\(cqt mean it can\\(cqt happen, so if you find a repeatable case, please report it\\&.\n+.SH \"MORE INFORMATION\"\n+.sp\n+Credits, mailing list information, bug reporting instructions, source code, etc, can be found on ccache\\(cqs web site: https://ccache\\&.samba\\&.org\\&.\n+.SH \"AUTHOR\"\n+.sp\n+ccache was originally written by Andrew Tridgell and is currently developed and maintained by Joel Rosdahl\\&. See AUTHORS\\&.txt or AUTHORS\\&.html and https://ccache\\&.samba\\&.org/credits\\&.html for a list of contributors\\&."
      }
    ]
  },
  {
    "sha": "8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWNmNTY0OTVkYWFkYjU3MGM5ZjdjNmNjN2Y4YzM5NTUxZTI2MWZk",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:39:45Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:39:45Z"
      },
      "message": "PreprocessorDefinitions: HAVE_CONFIG_H",
      "tree": {
        "sha": "c016bd263355ddf81b6862172226e5c0601cac60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c016bd263355ddf81b6862172226e5c0601cac60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ecf56495daadb570c9f7c6cc7f8c39551e261fd/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91c58561371a3c0ee9395e94120381018728a547",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91c58561371a3c0ee9395e94120381018728a547",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91c58561371a3c0ee9395e94120381018728a547"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "91b2d55b0903669cf5ec8550f0ccd5e6c0eee121",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ecf56495daadb570c9f7c6cc7f8c39551e261fd/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ecf56495daadb570c9f7c6cc7f8c39551e261fd/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
        "patch": "@@ -87,7 +87,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -102,7 +102,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -119,7 +119,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -138,7 +138,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>"
      }
    ]
  },
  {
    "sha": "891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTE1NzJkZWU5NDY4ZWEyMThhOGM1ODk1ZjVhYTcwZWJjMmMxZjBh",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:42:59Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:42:59Z"
      },
      "message": "PreprocessorDefinitions: _SCL_SECURE_NO_WARNINGS",
      "tree": {
        "sha": "21c74643c2d1ccb3664e79ab966be09e3412a088",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21c74643c2d1ccb3664e79ab966be09e3412a088"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891572dee9468ea218a8c5895f5aa70ebc2c1f0a/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ecf56495daadb570c9f7c6cc7f8c39551e261fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ecf56495daadb570c9f7c6cc7f8c39551e261fd"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "edde9fb712426a8373285b745e781e0795db69f0",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891572dee9468ea218a8c5895f5aa70ebc2c1f0a/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891572dee9468ea218a8c5895f5aa70ebc2c1f0a/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
        "patch": "@@ -87,9 +87,9 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -102,9 +102,9 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -119,9 +119,9 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -138,9 +138,9 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "5c038285905a62fa423181182bd0c67cc1148edb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzAzODI4NTkwNWE2MmZhNDIzMTgxMTgyYmQwYzY3Y2MxMTQ4ZWRi",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:47:42Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:47:42Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "aea48dcc3a78b12c33a4c0e5a9a833991142ce21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aea48dcc3a78b12c33a4c0e5a9a833991142ce21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c038285905a62fa423181182bd0c67cc1148edb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c038285905a62fa423181182bd0c67cc1148edb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c038285905a62fa423181182bd0c67cc1148edb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c038285905a62fa423181182bd0c67cc1148edb/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891572dee9468ea218a8c5895f5aa70ebc2c1f0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/891572dee9468ea218a8c5895f5aa70ebc2c1f0a"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "898d70468a4fd77f3b6b6381bce6df447d055135",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c038285905a62fa423181182bd0c67cc1148edb/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c038285905a62fa423181182bd0c67cc1148edb/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=5c038285905a62fa423181182bd0c67cc1148edb",
        "patch": "@@ -150,11 +150,16 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n+    <ClCompile Include=\"src\\bitcoin-tx.cpp\" />\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n+    <ClCompile Include=\"src\\chainparams.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n   </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"src\\chainparams.h\" />\n+  </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">\n     <Import Project=\"packages\\boost.1.63.0.0\\build\\native\\boost.targets\" Condition=\"Exists('packages\\boost.1.63.0.0\\build\\native\\boost.targets')\" />"
      },
      {
        "sha": "f088bdc943e13775a90d9aa4cb38651eb932ad5b",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c038285905a62fa423181182bd0c67cc1148edb/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c038285905a62fa423181182bd0c67cc1148edb/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=5c038285905a62fa423181182bd0c67cc1148edb",
        "patch": "@@ -18,8 +18,19 @@\n     <ClCompile Include=\"src\\bitcoind.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\chainparams.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\bitcoin-tx.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n   </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"src\\chainparams.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+  </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "46df6b2d015eefbef4fe814536f016828de068e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NmRmNmIyZDAxNWVlZmJlZjRmZTgxNDUzNmYwMTY4MjhkZTA2OGUx",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T03:53:36Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:11:47Z"
      },
      "message": "Old C++ style initializing struct (for msvc)",
      "tree": {
        "sha": "5a7e6151052b7f9191f2ddc457cf1b0dbefbaec6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a7e6151052b7f9191f2ddc457cf1b0dbefbaec6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46df6b2d015eefbef4fe814536f016828de068e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46df6b2d015eefbef4fe814536f016828de068e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46df6b2d015eefbef4fe814536f016828de068e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46df6b2d015eefbef4fe814536f016828de068e1/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c038285905a62fa423181182bd0c67cc1148edb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c038285905a62fa423181182bd0c67cc1148edb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c038285905a62fa423181182bd0c67cc1148edb"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 16,
      "deletions": 16
    },
    "files": [
      {
        "sha": "7b043b46f35769f7b87d95a99907d95896513444",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 16,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46df6b2d015eefbef4fe814536f016828de068e1/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46df6b2d015eefbef4fe814536f016828de068e1/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=46df6b2d015eefbef4fe814536f016828de068e1",
        "patch": "@@ -139,11 +139,10 @@ class CMainParams : public CChainParams {\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n \n-        checkpointData = (CCheckpointData) {\n-            boost::assign::map_list_of\n-            ( 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\"))\n-            ( 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\"))\n-            ( 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\"))\n+        MapCheckpoints tmp = boost::assign::map_list_of\n+            (11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\"))\n+            (33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\"))\n+            (74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\"))\n             (105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\"))\n             (134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\"))\n             (168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\"))\n@@ -153,8 +152,8 @@ class CMainParams : public CChainParams {\n             (225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n             (250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\"))\n             (279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\"))\n-            (295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\"))\n-        };\n+            (295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\"));\n+        checkpointData = CCheckpointData(tmp);\n \n         chainTxData = ChainTxData{\n             // Data as of block 00000000000000000166d612d5595e2b1cd88d71d695fc580af64d8da8658c23 (height 446482).\n@@ -239,11 +238,9 @@ class CTestNetParams : public CChainParams {\n         fRequireStandard = false;\n         fMineBlocksOnDemand = false;\n \n-\n-        checkpointData = (CCheckpointData) {\n-            boost::assign::map_list_of\n-            ( 546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")),\n-        };\n+        MapCheckpoints tmp = boost::assign::map_list_of\n+            (546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\"));\n+        checkpointData = CCheckpointData(tmp);\n \n         chainTxData = ChainTxData{\n             // Data as of block 00000000c2872f8f8a8935c8e3c5862be9038c97d4de2cf37ed496991166928a (height 1063660)\n@@ -311,10 +308,9 @@ class CRegTestParams : public CChainParams {\n         fRequireStandard = false;\n         fMineBlocksOnDemand = true;\n \n-        checkpointData = (CCheckpointData){\n-            boost::assign::map_list_of\n-            ( 0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n-        };\n+        MapCheckpoints tmp = boost::assign::map_list_of\n+            (0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n+        checkpointData = CCheckpointData(tmp);\n \n         chainTxData = ChainTxData{\n             0,"
      },
      {
        "sha": "76ff3a1305356d743ea63764518c7a899e873d14",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46df6b2d015eefbef4fe814536f016828de068e1/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46df6b2d015eefbef4fe814536f016828de068e1/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=46df6b2d015eefbef4fe814536f016828de068e1",
        "patch": "@@ -28,6 +28,10 @@ typedef std::map<int, uint256> MapCheckpoints;\n \n struct CCheckpointData {\n     MapCheckpoints mapCheckpoints;\n+\n+    CCheckpointData() : mapCheckpoints() {}\n+    CCheckpointData(const MapCheckpoints& _mapCheckpoints) : mapCheckpoints(_mapCheckpoints) {}\n+//  CCheckpointData(const boost::assign_detail::generic_list< std::pair<int, uint256> >& _mapCheckpoints) : mapCheckpoints(_mapCheckpoints) {}\n };\n \n struct ChainTxData {"
      }
    ]
  },
  {
    "sha": "185d9d07ca7732ab44b1942935717a58ebcd038d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODVkOWQwN2NhNzczMmFiNDRiMTk0MjkzNTcxN2E1OGViY2QwMzhk",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:13:18Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:13:18Z"
      },
      "message": "PreprocessorDefinitions: _CRT_SECURE_NO_WARNINGS",
      "tree": {
        "sha": "b323e4d64e89b50019e1da46d20467dc4930e775",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b323e4d64e89b50019e1da46d20467dc4930e775"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/185d9d07ca7732ab44b1942935717a58ebcd038d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/185d9d07ca7732ab44b1942935717a58ebcd038d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/185d9d07ca7732ab44b1942935717a58ebcd038d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/185d9d07ca7732ab44b1942935717a58ebcd038d/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46df6b2d015eefbef4fe814536f016828de068e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46df6b2d015eefbef4fe814536f016828de068e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46df6b2d015eefbef4fe814536f016828de068e1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "250e110f911514f614b458d1b33d5a9bbc57f46e",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/185d9d07ca7732ab44b1942935717a58ebcd038d/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/185d9d07ca7732ab44b1942935717a58ebcd038d/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=185d9d07ca7732ab44b1942935717a58ebcd038d",
        "patch": "@@ -87,7 +87,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -102,7 +102,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -119,7 +119,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -138,7 +138,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>"
      }
    ]
  },
  {
    "sha": "37fd3c41f47d6d66a5d386160810a4beda825490",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2ZkM2M0MWY0N2Q2ZDY2YTVkMzg2MTYwODEwYTRiZWRhODI1NDkw",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:14:33Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:14:33Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "9f9662a2b755cd2d9aa58ca75b8d24405ea80b62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f9662a2b755cd2d9aa58ca75b8d24405ea80b62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37fd3c41f47d6d66a5d386160810a4beda825490",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37fd3c41f47d6d66a5d386160810a4beda825490",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37fd3c41f47d6d66a5d386160810a4beda825490",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37fd3c41f47d6d66a5d386160810a4beda825490/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "185d9d07ca7732ab44b1942935717a58ebcd038d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/185d9d07ca7732ab44b1942935717a58ebcd038d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/185d9d07ca7732ab44b1942935717a58ebcd038d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9197ecede153ea13c5c1f9a80286cbbee3fef641",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37fd3c41f47d6d66a5d386160810a4beda825490/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37fd3c41f47d6d66a5d386160810a4beda825490/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=37fd3c41f47d6d66a5d386160810a4beda825490",
        "patch": "@@ -150,15 +150,16 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"src\\bitcoin-tx.cpp\" />\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n     <ClCompile Include=\"src\\chainparams.cpp\" />\n+    <ClCompile Include=\"src\\init.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n   </ItemGroup>\n   <ItemGroup>\n     <ClInclude Include=\"src\\chainparams.h\" />\n+    <ClInclude Include=\"src\\init.h\" />\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">"
      },
      {
        "sha": "1cf80178319905e4cfd200edea6d74759cc54b83",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37fd3c41f47d6d66a5d386160810a4beda825490/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37fd3c41f47d6d66a5d386160810a4beda825490/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=37fd3c41f47d6d66a5d386160810a4beda825490",
        "patch": "@@ -21,7 +21,7 @@\n     <ClCompile Include=\"src\\chainparams.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\bitcoin-tx.cpp\">\n+    <ClCompile Include=\"src\\init.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n   </ItemGroup>\n@@ -32,5 +32,8 @@\n     <ClInclude Include=\"src\\chainparams.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\init.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "354eb787395acdd90771afe95bbef4b7423a5167",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTRlYjc4NzM5NWFjZGQ5MDc3MWFmZTk1YmJlZjRiNzQyM2E1MTY3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:17:47Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:17:47Z"
      },
      "message": "AdditionalIncludeDirectories: src/leveldb/include",
      "tree": {
        "sha": "6be16425732c2ff84abe20c983aed3cf7c5eb4c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6be16425732c2ff84abe20c983aed3cf7c5eb4c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/354eb787395acdd90771afe95bbef4b7423a5167",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/354eb787395acdd90771afe95bbef4b7423a5167",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/354eb787395acdd90771afe95bbef4b7423a5167",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/354eb787395acdd90771afe95bbef4b7423a5167/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37fd3c41f47d6d66a5d386160810a4beda825490",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37fd3c41f47d6d66a5d386160810a4beda825490",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37fd3c41f47d6d66a5d386160810a4beda825490"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0f5aaecc0ffd0056add1895713693b1565adb87a",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/354eb787395acdd90771afe95bbef4b7423a5167/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/354eb787395acdd90771afe95bbef4b7423a5167/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=354eb787395acdd90771afe95bbef4b7423a5167",
        "patch": "@@ -89,7 +89,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -104,7 +104,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -121,7 +121,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -140,7 +140,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWJiYjQ0M2JjNGQ4Y2MxZTQ4ZGYzMjA4ZTZlNWMxNzI0OTE1YWRi",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:19:06Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:19:06Z"
      },
      "message": "Install-Package BerkeleyDB-4_8_30-Cpp",
      "tree": {
        "sha": "840183cdf79d9f2fbffcc166a6763b597c79d7e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/840183cdf79d9f2fbffcc166a6763b597c79d7e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5abbb443bc4d8cc1e48df3208e6e5c1724915adb/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "354eb787395acdd90771afe95bbef4b7423a5167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/354eb787395acdd90771afe95bbef4b7423a5167",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/354eb787395acdd90771afe95bbef4b7423a5167"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8b550e0c76f2417350939352b51a918e77b34903",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5abbb443bc4d8cc1e48df3208e6e5c1724915adb/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5abbb443bc4d8cc1e48df3208e6e5c1724915adb/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
        "patch": "@@ -202,6 +202,7 @@\n     <Import Project=\"packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets\" Condition=\"Exists('packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets')\" />\n     <Import Project=\"packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets\" Condition=\"Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" />\n     <Import Project=\"packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets\" Condition=\"Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" />\n+    <Import Project=\"packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets\" Condition=\"Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -246,5 +247,6 @@\n     <Error Condition=\"!Exists('packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "74e82d8e00b35cb8001fe1df9534c724296a7df9",
        "filename": "packages.config",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5abbb443bc4d8cc1e48df3208e6e5c1724915adb/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5abbb443bc4d8cc1e48df3208e6e5c1724915adb/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
        "patch": "@@ -1,5 +1,6 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <packages>\n+  <package id=\"BerkeleyDB-4_8_30-Cpp\" version=\"4.8.30.1\" targetFramework=\"native\" />\n   <package id=\"boost\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_atomic-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_bzip2-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />"
      }
    ]
  },
  {
    "sha": "27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2Y0MTRlZjk3Yzk5NmJiM2I4YmYxYzVjM2E0MDI0MDQxNGEzYjg3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:21:18Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:21:18Z"
      },
      "message": "Install-Package openssl (with zlib)",
      "tree": {
        "sha": "6b665eac4628272334b47c48887814e5f202c6ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b665eac4628272334b47c48887814e5f202c6ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27f414ef97c996bb3b8bf1c5c3a40240414a3b87/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5abbb443bc4d8cc1e48df3208e6e5c1724915adb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5abbb443bc4d8cc1e48df3208e6e5c1724915adb"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "06a4470874d3fb40181fd9510c4fcf625f26e3b4",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27f414ef97c996bb3b8bf1c5c3a40240414a3b87/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27f414ef97c996bb3b8bf1c5c3a40240414a3b87/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
        "patch": "@@ -203,6 +203,12 @@\n     <Import Project=\"packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets\" Condition=\"Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" />\n     <Import Project=\"packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets\" Condition=\"Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" />\n     <Import Project=\"packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets\" Condition=\"Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" />\n+    <Import Project=\"packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets\" Condition=\"Exists('packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets')\" />\n+    <Import Project=\"packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets\" Condition=\"Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" />\n+    <Import Project=\"packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets\" Condition=\"Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" />\n+    <Import Project=\"packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets\" Condition=\"Exists('packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets')\" />\n+    <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" />\n+    <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -248,5 +254,11 @@\n     <Error Condition=\"!Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "1b0aa6f3040b4a2c516df75aa4aaf803fc87566a",
        "filename": "packages.config",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27f414ef97c996bb3b8bf1c5c3a40240414a3b87/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27f414ef97c996bb3b8bf1c5c3a40240414a3b87/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
        "patch": "@@ -40,4 +40,13 @@\n   <package id=\"boost_wserialization-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_zlib-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"openssl\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"openssl.v140.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"zlib.v120.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.2.8.8\" targetFramework=\"native\" />\n+  <package id=\"zlib.v140.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.2.8.8\" targetFramework=\"native\" />\n </packages>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "77171c538d6470f1fdaa28a831eff9d13b69a08b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzE3MWM1MzhkNjQ3MGYxZmRhYTI4YTgzMWVmZjlkMTNiNjlhMDhi",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:38:37Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:38:37Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "12b5715976353938c6ed190a73b4e7562fe76f42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12b5715976353938c6ed190a73b4e7562fe76f42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77171c538d6470f1fdaa28a831eff9d13b69a08b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77171c538d6470f1fdaa28a831eff9d13b69a08b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77171c538d6470f1fdaa28a831eff9d13b69a08b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77171c538d6470f1fdaa28a831eff9d13b69a08b/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27f414ef97c996bb3b8bf1c5c3a40240414a3b87",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27f414ef97c996bb3b8bf1c5c3a40240414a3b87"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 68,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4547abd8c6d50ae7bcd0cd0f5d596b52e86f9633",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77171c538d6470f1fdaa28a831eff9d13b69a08b/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77171c538d6470f1fdaa28a831eff9d13b69a08b/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=77171c538d6470f1fdaa28a831eff9d13b69a08b",
        "patch": "@@ -152,14 +152,31 @@\n   <ItemGroup>\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n     <ClCompile Include=\"src\\chainparams.cpp\" />\n+    <ClCompile Include=\"src\\chainparamsbase.cpp\" />\n     <ClCompile Include=\"src\\init.cpp\" />\n+    <ClCompile Include=\"src\\noui.cpp\" />\n+    <ClCompile Include=\"src\\pow.cpp\" />\n+    <ClCompile Include=\"src\\protocol.cpp\" />\n+    <ClCompile Include=\"src\\pubkey.cpp\" />\n+    <ClCompile Include=\"src\\random.cpp\" />\n+    <ClCompile Include=\"src\\rest.cpp\" />\n+    <ClCompile Include=\"src\\scheduler.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n   </ItemGroup>\n   <ItemGroup>\n     <ClInclude Include=\"src\\chainparams.h\" />\n+    <ClInclude Include=\"src\\chainparamsbase.h\" />\n     <ClInclude Include=\"src\\init.h\" />\n+    <ClInclude Include=\"src\\noui.h\" />\n+    <ClInclude Include=\"src\\pow.h\" />\n+    <ClInclude Include=\"src\\prevector.h\" />\n+    <ClInclude Include=\"src\\protocol.h\" />\n+    <ClInclude Include=\"src\\pubkey.h\" />\n+    <ClInclude Include=\"src\\random.h\" />\n+    <ClInclude Include=\"src\\reverselock.h\" />\n+    <ClInclude Include=\"src\\scheduler.h\" />\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">"
      },
      {
        "sha": "f89183fc836e925fd1c9bb4f8b3804ec9d1ab789",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77171c538d6470f1fdaa28a831eff9d13b69a08b/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77171c538d6470f1fdaa28a831eff9d13b69a08b/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=77171c538d6470f1fdaa28a831eff9d13b69a08b",
        "patch": "@@ -24,6 +24,30 @@\n     <ClCompile Include=\"src\\init.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\chainparamsbase.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\noui.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\scheduler.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\pow.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\protocol.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\pubkey.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\random.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rest.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -35,5 +59,32 @@\n     <ClInclude Include=\"src\\init.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\chainparamsbase.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\noui.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\scheduler.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\reverselock.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\pow.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\prevector.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\protocol.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\pubkey.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\random.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "cbc36642ff9d80281420cd41635cc4653cef91a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmMzNjY0MmZmOWQ4MDI4MTQyMGNkNDE2MzVjYzQ2NTNjZWY5MWEz",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:40:03Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:40:03Z"
      },
      "message": "Install-Package secp256k1_vc140",
      "tree": {
        "sha": "6cd13dc00119219a5ba6043e9214651aa949bd8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cd13dc00119219a5ba6043e9214651aa949bd8e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbc36642ff9d80281420cd41635cc4653cef91a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbc36642ff9d80281420cd41635cc4653cef91a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbc36642ff9d80281420cd41635cc4653cef91a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbc36642ff9d80281420cd41635cc4653cef91a3/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77171c538d6470f1fdaa28a831eff9d13b69a08b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77171c538d6470f1fdaa28a831eff9d13b69a08b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77171c538d6470f1fdaa28a831eff9d13b69a08b"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "66ba710a61152af7ac7d6a252929a43adce87186",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbc36642ff9d80281420cd41635cc4653cef91a3/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbc36642ff9d80281420cd41635cc4653cef91a3/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=cbc36642ff9d80281420cd41635cc4653cef91a3",
        "patch": "@@ -226,6 +226,7 @@\n     <Import Project=\"packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets\" Condition=\"Exists('packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets')\" />\n     <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" />\n     <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" />\n+    <Import Project=\"packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets\" Condition=\"Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -277,5 +278,6 @@\n     <Error Condition=\"!Exists('packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v140.windesktop.msvcstl.dyn.rt-dyn.targets'))\" />\n     <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets'))\" />\n     <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "57646b8e683a1bc3e1e9f77eb63760faecedb8db",
        "filename": "packages.config",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbc36642ff9d80281420cd41635cc4653cef91a3/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbc36642ff9d80281420cd41635cc4653cef91a3/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=cbc36642ff9d80281420cd41635cc4653cef91a3",
        "patch": "@@ -47,6 +47,7 @@\n   <package id=\"openssl.v140.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86\" version=\"1.0.2.0\" targetFramework=\"native\" />\n+  <package id=\"secp256k1_vc140\" version=\"0.1.0.15\" targetFramework=\"native\" />\n   <package id=\"zlib.v120.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.2.8.8\" targetFramework=\"native\" />\n   <package id=\"zlib.v140.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.2.8.8\" targetFramework=\"native\" />\n </packages>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjBiODcyM2RmN2RlYTkyY2U2ZGYyZjJlNGVhNDFjYjQwODZiOGE2",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:42:01Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:42:01Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "635c6820076a68097c9f55bd9539edd79b02a2b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/635c6820076a68097c9f55bd9539edd79b02a2b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cbc36642ff9d80281420cd41635cc4653cef91a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbc36642ff9d80281420cd41635cc4653cef91a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cbc36642ff9d80281420cd41635cc4653cef91a3"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 84,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6d625883a7ec9de4337481cad51cfdb8c63c0fc8",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
        "patch": "@@ -153,6 +153,15 @@\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n     <ClCompile Include=\"src\\chainparams.cpp\" />\n     <ClCompile Include=\"src\\chainparamsbase.cpp\" />\n+    <ClCompile Include=\"src\\clientversion.cpp\" />\n+    <ClCompile Include=\"src\\coins.cpp\" />\n+    <ClCompile Include=\"src\\compressor.cpp\" />\n+    <ClCompile Include=\"src\\core_read.cpp\" />\n+    <ClCompile Include=\"src\\core_write.cpp\" />\n+    <ClCompile Include=\"src\\dbwrapper.cpp\" />\n+    <ClCompile Include=\"src\\hash.cpp\" />\n+    <ClCompile Include=\"src\\httprpc.cpp\" />\n+    <ClCompile Include=\"src\\httpserver.cpp\" />\n     <ClCompile Include=\"src\\init.cpp\" />\n     <ClCompile Include=\"src\\noui.cpp\" />\n     <ClCompile Include=\"src\\pow.cpp\" />\n@@ -168,6 +177,18 @@\n   <ItemGroup>\n     <ClInclude Include=\"src\\chainparams.h\" />\n     <ClInclude Include=\"src\\chainparamsbase.h\" />\n+    <ClInclude Include=\"src\\clientversion.h\" />\n+    <ClInclude Include=\"src\\coins.h\" />\n+    <ClInclude Include=\"src\\compat.h\" />\n+    <ClInclude Include=\"src\\compressor.h\" />\n+    <ClInclude Include=\"src\\core_io.h\" />\n+    <ClInclude Include=\"src\\core_memusage.h\" />\n+    <ClInclude Include=\"src\\cuckoocache.h\" />\n+    <ClInclude Include=\"src\\dbwrapper.h\" />\n+    <ClInclude Include=\"src\\hash.h\" />\n+    <ClInclude Include=\"src\\httprpc.h\" />\n+    <ClInclude Include=\"src\\httpserver.h\" />\n+    <ClInclude Include=\"src\\indirectmap.h\" />\n     <ClInclude Include=\"src\\init.h\" />\n     <ClInclude Include=\"src\\noui.h\" />\n     <ClInclude Include=\"src\\pow.h\" />"
      },
      {
        "sha": "cbb4a331e9fb4e2db7fa798c80c5aa4d693963e2",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
        "patch": "@@ -48,6 +48,33 @@\n     <ClCompile Include=\"src\\rest.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\clientversion.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\coins.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\compressor.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\core_read.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\core_write.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\dbwrapper.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\hash.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\httprpc.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\httpserver.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -86,5 +113,41 @@\n     <ClInclude Include=\"src\\random.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\clientversion.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\coins.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\compat.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\compressor.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\core_io.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\core_memusage.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\cuckoocache.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\dbwrapper.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\hash.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\httprpc.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\httpserver.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\indirectmap.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmMxYmRhYTJiNjRjYWUzY2E0YjE1MmYyZjhiMWNiZTE3YjJlZjBi",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:42:32Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:42:32Z"
      },
      "message": "Install-Package libevent2-vc140",
      "tree": {
        "sha": "0486c6a32fc9e6a6ce6119ba84abfd845dd9845f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0486c6a32fc9e6a6ce6119ba84abfd845dd9845f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df0b8723df7dea92ce6df2f2e4ea41cb4086b8a6"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "161dc16b135a45d45b6afb13ad5cbb2fb904b9ed",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
        "patch": "@@ -248,6 +248,7 @@\n     <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" />\n     <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" />\n     <Import Project=\"packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets\" Condition=\"Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" />\n+    <Import Project=\"packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets\" Condition=\"Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -300,5 +301,6 @@\n     <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x64.targets'))\" />\n     <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets'))\" />\n     <Error Condition=\"!Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "7c12d0d53ec176aa0003b67d30223160a6b141d5",
        "filename": "packages.config",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
        "patch": "@@ -40,6 +40,7 @@\n   <package id=\"boost_wserialization-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_zlib-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"libevent2-vc140\" version=\"2.1.8\" targetFramework=\"native\" />\n   <package id=\"openssl\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64\" version=\"1.0.2.0\" targetFramework=\"native\" />"
      }
    ]
  },
  {
    "sha": "549bdd285ae7eae74ae1000cbe274d8ee25dff34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDliZGQyODVhZTdlYWU3NGFlMTAwMGNiZTI3NGQ4ZWUyNWRmZjM0",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:46:25Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:46:25Z"
      },
      "message": "Fix C2131 (expression did not evaluate to a constant)",
      "tree": {
        "sha": "c72980ca16a9cfce51fa671a48beb3e037ae3ce5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c72980ca16a9cfce51fa671a48beb3e037ae3ce5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/549bdd285ae7eae74ae1000cbe274d8ee25dff34",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549bdd285ae7eae74ae1000cbe274d8ee25dff34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/549bdd285ae7eae74ae1000cbe274d8ee25dff34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549bdd285ae7eae74ae1000cbe274d8ee25dff34/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22c1bdaa2b64cae3ca4b152f2f8b1cbe17b2ef0b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9b809a9b230dec5b44e04077a0e5a6fad1be118d",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/549bdd285ae7eae74ae1000cbe274d8ee25dff34/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/549bdd285ae7eae74ae1000cbe274d8ee25dff34/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=549bdd285ae7eae74ae1000cbe274d8ee25dff34",
        "patch": "@@ -112,7 +112,7 @@ static bool multiUserAuthorized(std::string strUserPass)\n             std::string strSalt = vFields[1];\n             std::string strHash = vFields[2];\n \n-            unsigned int KEY_SIZE = 32;\n+            const unsigned int KEY_SIZE = 32;\n             unsigned char out[KEY_SIZE];\n \n             CHMAC_SHA256(reinterpret_cast<const unsigned char*>(strSalt.c_str()), strSalt.size()).Write(reinterpret_cast<const unsigned char*>(strPass.c_str()), strPass.size()).Finalize(out);"
      }
    ]
  },
  {
    "sha": "a0809b2285bbe09851962bd90af57930159324a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDgwOWIyMjg1YmJlMDk4NTE5NjJiZDkwYWY1NzkzMDE1OTMyNGE4",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:48:56Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:48:56Z"
      },
      "message": "AdditionalIncludeDirectories: src/leveldb/helpers/memenv",
      "tree": {
        "sha": "8b8a6fcc3215ba55907418d0f409388319032767",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b8a6fcc3215ba55907418d0f409388319032767"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0809b2285bbe09851962bd90af57930159324a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0809b2285bbe09851962bd90af57930159324a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0809b2285bbe09851962bd90af57930159324a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0809b2285bbe09851962bd90af57930159324a8/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "549bdd285ae7eae74ae1000cbe274d8ee25dff34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549bdd285ae7eae74ae1000cbe274d8ee25dff34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/549bdd285ae7eae74ae1000cbe274d8ee25dff34"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d6b27708a98aa6252ea54fe67857b08a954cb4a5",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0809b2285bbe09851962bd90af57930159324a8/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0809b2285bbe09851962bd90af57930159324a8/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=a0809b2285bbe09851962bd90af57930159324a8",
        "patch": "@@ -89,7 +89,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -104,7 +104,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -121,7 +121,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -140,7 +140,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "4c6b9554bb4f9c468636de03505e5763023c9096",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzZiOTU1NGJiNGY5YzQ2ODYzNmRlMDM1MDVlNTc2MzAyM2M5MDk2",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:50:20Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T04:50:20Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "2dc152a55bb2a59ce162bc16358d96124c98a944",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2dc152a55bb2a59ce162bc16358d96124c98a944"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c6b9554bb4f9c468636de03505e5763023c9096",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c6b9554bb4f9c468636de03505e5763023c9096",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c6b9554bb4f9c468636de03505e5763023c9096",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c6b9554bb4f9c468636de03505e5763023c9096/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0809b2285bbe09851962bd90af57930159324a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0809b2285bbe09851962bd90af57930159324a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0809b2285bbe09851962bd90af57930159324a8"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 56,
      "deletions": 0
    },
    "files": [
      {
        "sha": "95359c5b04da69d1ac7edcc2e364d7a18aa8a624",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c6b9554bb4f9c468636de03505e5763023c9096/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c6b9554bb4f9c468636de03505e5763023c9096/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=4c6b9554bb4f9c468636de03505e5763023c9096",
        "patch": "@@ -163,6 +163,12 @@\n     <ClCompile Include=\"src\\httprpc.cpp\" />\n     <ClCompile Include=\"src\\httpserver.cpp\" />\n     <ClCompile Include=\"src\\init.cpp\" />\n+    <ClCompile Include=\"src\\merkleblock.cpp\" />\n+    <ClCompile Include=\"src\\miner.cpp\" />\n+    <ClCompile Include=\"src\\net.cpp\" />\n+    <ClCompile Include=\"src\\netaddress.cpp\" />\n+    <ClCompile Include=\"src\\netbase.cpp\" />\n+    <ClCompile Include=\"src\\net_processing.cpp\" />\n     <ClCompile Include=\"src\\noui.cpp\" />\n     <ClCompile Include=\"src\\pow.cpp\" />\n     <ClCompile Include=\"src\\protocol.cpp\" />\n@@ -190,6 +196,14 @@\n     <ClInclude Include=\"src\\httpserver.h\" />\n     <ClInclude Include=\"src\\indirectmap.h\" />\n     <ClInclude Include=\"src\\init.h\" />\n+    <ClInclude Include=\"src\\memusage.h\" />\n+    <ClInclude Include=\"src\\merkleblock.h\" />\n+    <ClInclude Include=\"src\\miner.h\" />\n+    <ClInclude Include=\"src\\net.h\" />\n+    <ClInclude Include=\"src\\netaddress.h\" />\n+    <ClInclude Include=\"src\\netbase.h\" />\n+    <ClInclude Include=\"src\\netmessagemaker.h\" />\n+    <ClInclude Include=\"src\\net_processing.h\" />\n     <ClInclude Include=\"src\\noui.h\" />\n     <ClInclude Include=\"src\\pow.h\" />\n     <ClInclude Include=\"src\\prevector.h\" />"
      },
      {
        "sha": "f7d5fcd816e31dbd5f527fee42c7e475644e3330",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c6b9554bb4f9c468636de03505e5763023c9096/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c6b9554bb4f9c468636de03505e5763023c9096/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=4c6b9554bb4f9c468636de03505e5763023c9096",
        "patch": "@@ -75,6 +75,24 @@\n     <ClCompile Include=\"src\\httpserver.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\merkleblock.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\miner.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\net.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\net_processing.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\netaddress.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\netbase.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -149,5 +167,29 @@\n     <ClInclude Include=\"src\\indirectmap.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\memusage.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\merkleblock.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\miner.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\net.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\net_processing.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\netaddress.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\netbase.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\netmessagemaker.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDJkNTdkYmRlY2M4NDhjODUwNGZmMjBkN2Q0YjNjYzdkZjk0ZTBm",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T05:03:51Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T05:03:51Z"
      },
      "message": "Define ssize_t type for Windows",
      "tree": {
        "sha": "5b7678e8058817a5beff42628fef837dc09b6c73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b7678e8058817a5beff42628fef837dc09b6c73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c6b9554bb4f9c468636de03505e5763023c9096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c6b9554bb4f9c468636de03505e5763023c9096",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c6b9554bb4f9c468636de03505e5763023c9096"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3757e453b7922920333d5d747971d695cf5906a7",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -212,6 +212,7 @@\n     <ClInclude Include=\"src\\random.h\" />\n     <ClInclude Include=\"src\\reverselock.h\" />\n     <ClInclude Include=\"src\\scheduler.h\" />\n+    <ClInclude Include=\"src\\wintype.h\" />\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">"
      },
      {
        "sha": "a4d859138368610ff2d868c22d59b4fae6843784",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -191,5 +191,8 @@\n     <ClInclude Include=\"src\\netmessagemaker.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\wintype.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "e24e17c2eceb43ba61a5b1709217a41570611b3c",
        "filename": "src/bench/perf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/bench/perf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/bench/perf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/perf.cpp?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"perf.h\"\n+#include \"wintype.h\" // ssize_t\n \n #if defined(__i386__) || defined(__x86_64__)\n "
      },
      {
        "sha": "75adb01af85ff332150831b758fbfb56dc8bf4c1",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -25,6 +25,8 @@\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n \n+#include \"wintype.h\" // ssize_t\n+\n #if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n #endif"
      },
      {
        "sha": "b22d3d52befced3155b2128a05780254431d8693",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -24,6 +24,8 @@\n #include <openssl/err.h>\n #include <openssl/rand.h>\n \n+#include \"wintype.h\" // ssize_t\n+\n static void RandFailure()\n {\n     LogPrintf(\"Failed to read randomness, aborting\\n\");"
      },
      {
        "sha": "45e3b9bc745d07728061d6ac01d72d12c1450544",
        "filename": "src/test/test_bitcoin_fuzzy.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/test/test_bitcoin_fuzzy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/test/test_bitcoin_fuzzy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin_fuzzy.cpp?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -26,6 +26,8 @@\n #include <algorithm>\n #include <vector>\n \n+#include \"wintype.h\" // ssize_t\n+\n enum TEST_ID {\n     CBLOCK_DESERIALIZE=0,\n     CTRANSACTION_DESERIALIZE,"
      },
      {
        "sha": "762c5356ff95cadd1b76647a8a4ae3876b5b4380",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -17,6 +17,8 @@\n \n #include <boost/test/unit_test.hpp>\n \n+#include \"wintype.h\" // ssize_t\n+\n extern std::map<std::string, std::string> mapArgs;\n \n BOOST_FIXTURE_TEST_SUITE(util_tests, BasicTestingSetup)"
      },
      {
        "sha": "f728b2486b8ab86f45c6dfcf2928b0e39aef5c0f",
        "filename": "src/wintype.h",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/wintype.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f/src/wintype.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wintype.h?ref=e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "patch": "@@ -0,0 +1,6 @@\n+#pragma once\n+\n+#ifdef WIN32\n+    #include <basetsd.h>\n+    typedef SSIZE_T ssize_t;\n+#endif"
      }
    ]
  },
  {
    "sha": "90e458514df420110d7ac0f5480304044c5f71bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MGU0NTg1MTRkZjQyMDExMGQ3YWMwZjU0ODAzMDQwNDRjNWY3MWJk",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T05:04:41Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T05:04:41Z"
      },
      "message": "Install-Package miniupnpc-vc140",
      "tree": {
        "sha": "4c5611712482aec6118bf473eaa5edeb49dbbe2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c5611712482aec6118bf473eaa5edeb49dbbe2a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90e458514df420110d7ac0f5480304044c5f71bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e458514df420110d7ac0f5480304044c5f71bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90e458514df420110d7ac0f5480304044c5f71bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e458514df420110d7ac0f5480304044c5f71bd/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e02d57dbdecc848c8504ff20d7d4b3cc7df94e0f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "58bf3159037d854da90c594580e3f7ca3855d332",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90e458514df420110d7ac0f5480304044c5f71bd/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90e458514df420110d7ac0f5480304044c5f71bd/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=90e458514df420110d7ac0f5480304044c5f71bd",
        "patch": "@@ -264,6 +264,7 @@\n     <Import Project=\"packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets\" Condition=\"Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" />\n     <Import Project=\"packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets\" Condition=\"Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" />\n     <Import Project=\"packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets\" Condition=\"Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" />\n+    <Import Project=\"packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets\" Condition=\"Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -317,5 +318,6 @@\n     <Error Condition=\"!Exists('packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v140.windesktop.msvcstl.dyn.rt-dyn.x86.targets'))\" />\n     <Error Condition=\"!Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "ec7a4479dae69275612ff1ba558383f8cce9959c",
        "filename": "packages.config",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90e458514df420110d7ac0f5480304044c5f71bd/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90e458514df420110d7ac0f5480304044c5f71bd/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=90e458514df420110d7ac0f5480304044c5f71bd",
        "patch": "@@ -41,6 +41,7 @@\n   <package id=\"boost_zlib-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"libevent2-vc140\" version=\"2.1.8\" targetFramework=\"native\" />\n+  <package id=\"miniupnpc-vc140\" version=\"2.0.0\" targetFramework=\"native\" />\n   <package id=\"openssl\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64\" version=\"1.0.2.0\" targetFramework=\"native\" />"
      }
    ]
  },
  {
    "sha": "0c5ee05edb40f53a77dba32398ab1df4d442fc27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzVlZTA1ZWRiNDBmNTNhNzdkYmEzMjM5OGFiMWRmNGQ0NDJmYzI3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T05:50:13Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T05:50:13Z"
      },
      "message": "Fix C3848 (expression having type 'const IteratorComparator' would lose some const-volatile qualifiers)",
      "tree": {
        "sha": "b62949c7433a41ca7102a3ccc00d660032cb8a9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b62949c7433a41ca7102a3ccc00d660032cb8a9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c5ee05edb40f53a77dba32398ab1df4d442fc27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c5ee05edb40f53a77dba32398ab1df4d442fc27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c5ee05edb40f53a77dba32398ab1df4d442fc27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c5ee05edb40f53a77dba32398ab1df4d442fc27/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90e458514df420110d7ac0f5480304044c5f71bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e458514df420110d7ac0f5480304044c5f71bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90e458514df420110d7ac0f5480304044c5f71bd"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c9c4bbd9575d823ba04e01a4386c3305a157da35",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c5ee05edb40f53a77dba32398ab1df4d442fc27/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c5ee05edb40f53a77dba32398ab1df4d442fc27/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0c5ee05edb40f53a77dba32398ab1df4d442fc27",
        "patch": "@@ -41,7 +41,7 @@ std::atomic<int64_t> nTimeBestReceived(0); // Used only to inform the wallet of\n struct IteratorComparator\n {\n     template<typename I>\n-    bool operator()(const I& a, const I& b)\n+    bool operator()(const I& a, const I& b) const\n     {\n         return &(*a) < &(*b);\n     }"
      }
    ]
  },
  {
    "sha": "18dfb636106277cd4f0c0e3953d77b6214c677be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOGRmYjYzNjEwNjI3N2NkNGYwYzBlMzk1M2Q3N2I2MjE0YzY3N2Jl",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:22:09Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:22:09Z"
      },
      "message": "Fix C2718 ('const std::atomic<unsigned __int64>': actual parameter with requested alignment of 8 won't be aligned)",
      "tree": {
        "sha": "8743c8b591a050a812792c80dee84a9f33076c95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8743c8b591a050a812792c80dee84a9f33076c95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18dfb636106277cd4f0c0e3953d77b6214c677be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18dfb636106277cd4f0c0e3953d77b6214c677be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18dfb636106277cd4f0c0e3953d77b6214c677be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18dfb636106277cd4f0c0e3953d77b6214c677be/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c5ee05edb40f53a77dba32398ab1df4d442fc27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c5ee05edb40f53a77dba32398ab1df4d442fc27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c5ee05edb40f53a77dba32398ab1df4d442fc27"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a544d0759fb0e2158bdeb45e492ba4e15f0a7d71",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18dfb636106277cd4f0c0e3953d77b6214c677be/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18dfb636106277cd4f0c0e3953d77b6214c677be/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=18dfb636106277cd4f0c0e3953d77b6214c677be",
        "patch": "@@ -2482,7 +2482,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             LogPrint(\"net\", \"pong peer=%d: %s, %x expected, %x received, %u bytes\\n\",\n                 pfrom->id,\n                 sProblem,\n-                pfrom->nPingNonceSent,\n+                (uint64_t)pfrom->nPingNonceSent,\n                 nonce,\n                 nAvail);\n         }"
      }
    ]
  },
  {
    "sha": "daaa0c89969bf1cb1316c27f863edef7ff886a55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWFhMGM4OTk2OWJmMWNiMTMxNmMyN2Y4NjNlZGVmN2ZmODg2YTU1",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:23:34Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:24:17Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "de02ed56b66b7b57e41add20e203c3677dbbed6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de02ed56b66b7b57e41add20e203c3677dbbed6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/daaa0c89969bf1cb1316c27f863edef7ff886a55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daaa0c89969bf1cb1316c27f863edef7ff886a55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/daaa0c89969bf1cb1316c27f863edef7ff886a55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daaa0c89969bf1cb1316c27f863edef7ff886a55/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18dfb636106277cd4f0c0e3953d77b6214c677be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18dfb636106277cd4f0c0e3953d77b6214c677be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18dfb636106277cd4f0c0e3953d77b6214c677be"
      }
    ],
    "stats": {
      "total": 192,
      "additions": 192,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3ac6503bc4f70be51f264c1c0c4a8c9bec0be546",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/daaa0c89969bf1cb1316c27f863edef7ff886a55/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/daaa0c89969bf1cb1316c27f863edef7ff886a55/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=daaa0c89969bf1cb1316c27f863edef7ff886a55",
        "patch": "@@ -151,8 +151,12 @@\n   </ItemDefinitionGroup>\n   <ItemGroup>\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n+    <ClCompile Include=\"src\\blockencodings.cpp\" />\n+    <ClCompile Include=\"src\\bloom.cpp\" />\n+    <ClCompile Include=\"src\\chain.cpp\" />\n     <ClCompile Include=\"src\\chainparams.cpp\" />\n     <ClCompile Include=\"src\\chainparamsbase.cpp\" />\n+    <ClCompile Include=\"src\\checkpoints.cpp\" />\n     <ClCompile Include=\"src\\clientversion.cpp\" />\n     <ClCompile Include=\"src\\coins.cpp\" />\n     <ClCompile Include=\"src\\compressor.cpp\" />\n@@ -176,13 +180,35 @@\n     <ClCompile Include=\"src\\random.cpp\" />\n     <ClCompile Include=\"src\\rest.cpp\" />\n     <ClCompile Include=\"src\\scheduler.cpp\" />\n+    <ClCompile Include=\"src\\sync.cpp\" />\n+    <ClCompile Include=\"src\\threadinterrupt.cpp\" />\n+    <ClCompile Include=\"src\\timedata.cpp\" />\n+    <ClCompile Include=\"src\\torcontrol.cpp\" />\n+    <ClCompile Include=\"src\\txdb.cpp\" />\n+    <ClCompile Include=\"src\\txmempool.cpp\" />\n+    <ClCompile Include=\"src\\uint256.cpp\" />\n+    <ClCompile Include=\"src\\ui_interface.cpp\" />\n+    <ClCompile Include=\"src\\util.cpp\" />\n+    <ClCompile Include=\"src\\utilmoneystr.cpp\" />\n+    <ClCompile Include=\"src\\utilstrencodings.cpp\" />\n+    <ClCompile Include=\"src\\utiltime.cpp\" />\n+    <ClCompile Include=\"src\\validation.cpp\" />\n+    <ClCompile Include=\"src\\validationinterface.cpp\" />\n+    <ClCompile Include=\"src\\versionbits.cpp\" />\n+    <ClCompile Include=\"src\\warnings.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n   </ItemGroup>\n   <ItemGroup>\n+    <ClInclude Include=\"src\\blockencodings.h\" />\n+    <ClInclude Include=\"src\\bloom.h\" />\n+    <ClInclude Include=\"src\\chain.h\" />\n     <ClInclude Include=\"src\\chainparams.h\" />\n     <ClInclude Include=\"src\\chainparamsbase.h\" />\n+    <ClInclude Include=\"src\\chainparamsseeds.h\" />\n+    <ClInclude Include=\"src\\checkpoints.h\" />\n+    <ClInclude Include=\"src\\checkqueue.h\" />\n     <ClInclude Include=\"src\\clientversion.h\" />\n     <ClInclude Include=\"src\\coins.h\" />\n     <ClInclude Include=\"src\\compat.h\" />\n@@ -212,6 +238,28 @@\n     <ClInclude Include=\"src\\random.h\" />\n     <ClInclude Include=\"src\\reverselock.h\" />\n     <ClInclude Include=\"src\\scheduler.h\" />\n+    <ClInclude Include=\"src\\serialize.h\" />\n+    <ClInclude Include=\"src\\streams.h\" />\n+    <ClInclude Include=\"src\\sync.h\" />\n+    <ClInclude Include=\"src\\threadinterrupt.h\" />\n+    <ClInclude Include=\"src\\threadsafety.h\" />\n+    <ClInclude Include=\"src\\timedata.h\" />\n+    <ClInclude Include=\"src\\tinyformat.h\" />\n+    <ClInclude Include=\"src\\torcontrol.h\" />\n+    <ClInclude Include=\"src\\txdb.h\" />\n+    <ClInclude Include=\"src\\txmempool.h\" />\n+    <ClInclude Include=\"src\\uint256.h\" />\n+    <ClInclude Include=\"src\\ui_interface.h\" />\n+    <ClInclude Include=\"src\\undo.h\" />\n+    <ClInclude Include=\"src\\util.h\" />\n+    <ClInclude Include=\"src\\utilmoneystr.h\" />\n+    <ClInclude Include=\"src\\utilstrencodings.h\" />\n+    <ClInclude Include=\"src\\utiltime.h\" />\n+    <ClInclude Include=\"src\\validation.h\" />\n+    <ClInclude Include=\"src\\validationinterface.h\" />\n+    <ClInclude Include=\"src\\version.h\" />\n+    <ClInclude Include=\"src\\versionbits.h\" />\n+    <ClInclude Include=\"src\\warnings.h\" />\n     <ClInclude Include=\"src\\wintype.h\" />\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />"
      },
      {
        "sha": "2275a2fa68a2cbd9b853f1ef7cf1006e674300a6",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 144,
        "deletions": 0,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/daaa0c89969bf1cb1316c27f863edef7ff886a55/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/daaa0c89969bf1cb1316c27f863edef7ff886a55/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=daaa0c89969bf1cb1316c27f863edef7ff886a55",
        "patch": "@@ -93,6 +93,66 @@\n     <ClCompile Include=\"src\\netbase.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\sync.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\threadinterrupt.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\timedata.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\torcontrol.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\txdb.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\txmempool.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\ui_interface.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\uint256.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\util.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\utilmoneystr.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\utilstrencodings.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\utiltime.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\validation.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\validationinterface.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\versionbits.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\warnings.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\blockencodings.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\bloom.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\chain.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\checkpoints.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -194,5 +254,89 @@\n     <ClInclude Include=\"src\\wintype.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\serialize.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\streams.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\sync.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\threadinterrupt.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\threadsafety.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\timedata.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\tinyformat.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\torcontrol.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\txdb.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\txmempool.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\ui_interface.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\uint256.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\undo.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\util.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\utilmoneystr.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\utilstrencodings.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\utiltime.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\validation.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\validationinterface.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\version.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\versionbits.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\warnings.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\blockencodings.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\bloom.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\chain.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\chainparamsseeds.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\checkpoints.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\checkqueue.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "5c0953d9e0111b608b98c6e35e1e351a68024c8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzA5NTNkOWUwMTExYjYwOGI5OGM2ZTM1ZTFlMzUxYTY4MDI0Yzhh",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:39:51Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:39:51Z"
      },
      "message": "Fix C4146 (unary minus operator applied to unsigned type, result still unsigned)",
      "tree": {
        "sha": "e6a8897f5b30d637910c3a9064af08e72be016c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6a8897f5b30d637910c3a9064af08e72be016c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c0953d9e0111b608b98c6e35e1e351a68024c8a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c0953d9e0111b608b98c6e35e1e351a68024c8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c0953d9e0111b608b98c6e35e1e351a68024c8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c0953d9e0111b608b98c6e35e1e351a68024c8a/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "daaa0c89969bf1cb1316c27f863edef7ff886a55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daaa0c89969bf1cb1316c27f863edef7ff886a55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/daaa0c89969bf1cb1316c27f863edef7ff886a55"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c76808ad1e8cfecbc01d77c1664a11c8110791f5",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c0953d9e0111b608b98c6e35e1e351a68024c8a/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c0953d9e0111b608b98c6e35e1e351a68024c8a/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=5c0953d9e0111b608b98c6e35e1e351a68024c8a",
        "patch": "@@ -254,8 +254,8 @@ void CRollingBloomFilter::insert(const std::vector<unsigned char>& vKey)\n         if (nGeneration == 4) {\n             nGeneration = 1;\n         }\n-        uint64_t nGenerationMask1 = -(uint64_t)(nGeneration & 1);\n-        uint64_t nGenerationMask2 = -(uint64_t)(nGeneration >> 1);\n+        uint64_t nGenerationMask1 = (uint64_t)(-(int64_t)(nGeneration & 1));\n+        uint64_t nGenerationMask2 = (uint64_t)(-(int64_t)(nGeneration >> 1));\n         /* Wipe old entries that used this generation number. */\n         for (uint32_t p = 0; p < data.size(); p += 2) {\n             uint64_t p1 = data[p], p2 = data[p + 1];"
      }
    ]
  },
  {
    "sha": "dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2JjYTRhYTc2YzY5MjViZDk2ZjJiMmJlYjU3YWFlZTk0ZmU2M2Mw",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:44:00Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:44:00Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "9f89721f96d6289667353b76bc13df5238110c58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f89721f96d6289667353b76bc13df5238110c58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c0953d9e0111b608b98c6e35e1e351a68024c8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c0953d9e0111b608b98c6e35e1e351a68024c8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c0953d9e0111b608b98c6e35e1e351a68024c8a"
      }
    ],
    "stats": {
      "total": 128,
      "additions": 128,
      "deletions": 0
    },
    "files": [
      {
        "sha": "83107be10b1cad5b3863827bf5564c7fe92bc951",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
        "patch": "@@ -175,11 +175,29 @@\n     <ClCompile Include=\"src\\net_processing.cpp\" />\n     <ClCompile Include=\"src\\noui.cpp\" />\n     <ClCompile Include=\"src\\pow.cpp\" />\n+    <ClCompile Include=\"src\\primitives\\block.cpp\" />\n+    <ClCompile Include=\"src\\primitives\\transaction.cpp\" />\n     <ClCompile Include=\"src\\protocol.cpp\" />\n     <ClCompile Include=\"src\\pubkey.cpp\" />\n     <ClCompile Include=\"src\\random.cpp\" />\n     <ClCompile Include=\"src\\rest.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\blockchain.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\client.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\mining.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\misc.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\net.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\protocol.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\rawtransaction.cpp\" />\n+    <ClCompile Include=\"src\\rpc\\server.cpp\" />\n     <ClCompile Include=\"src\\scheduler.cpp\" />\n+    <ClCompile Include=\"src\\script\\bitcoinconsensus.cpp\" />\n+    <ClCompile Include=\"src\\script\\interpreter.cpp\" />\n+    <ClCompile Include=\"src\\script\\ismine.cpp\" />\n+    <ClCompile Include=\"src\\script\\script.cpp\" />\n+    <ClCompile Include=\"src\\script\\script_error.cpp\" />\n+    <ClCompile Include=\"src\\script\\sigcache.cpp\" />\n+    <ClCompile Include=\"src\\script\\sign.cpp\" />\n+    <ClCompile Include=\"src\\script\\standard.cpp\" />\n     <ClCompile Include=\"src\\sync.cpp\" />\n     <ClCompile Include=\"src\\threadinterrupt.cpp\" />\n     <ClCompile Include=\"src\\timedata.cpp\" />\n@@ -233,11 +251,25 @@\n     <ClInclude Include=\"src\\noui.h\" />\n     <ClInclude Include=\"src\\pow.h\" />\n     <ClInclude Include=\"src\\prevector.h\" />\n+    <ClInclude Include=\"src\\primitives\\block.h\" />\n+    <ClInclude Include=\"src\\primitives\\transaction.h\" />\n     <ClInclude Include=\"src\\protocol.h\" />\n     <ClInclude Include=\"src\\pubkey.h\" />\n     <ClInclude Include=\"src\\random.h\" />\n     <ClInclude Include=\"src\\reverselock.h\" />\n+    <ClInclude Include=\"src\\rpc\\client.h\" />\n+    <ClInclude Include=\"src\\rpc\\protocol.h\" />\n+    <ClInclude Include=\"src\\rpc\\register.h\" />\n+    <ClInclude Include=\"src\\rpc\\server.h\" />\n     <ClInclude Include=\"src\\scheduler.h\" />\n+    <ClInclude Include=\"src\\script\\bitcoinconsensus.h\" />\n+    <ClInclude Include=\"src\\script\\interpreter.h\" />\n+    <ClInclude Include=\"src\\script\\ismine.h\" />\n+    <ClInclude Include=\"src\\script\\script.h\" />\n+    <ClInclude Include=\"src\\script\\script_error.h\" />\n+    <ClInclude Include=\"src\\script\\sigcache.h\" />\n+    <ClInclude Include=\"src\\script\\sign.h\" />\n+    <ClInclude Include=\"src\\script\\standard.h\" />\n     <ClInclude Include=\"src\\serialize.h\" />\n     <ClInclude Include=\"src\\streams.h\" />\n     <ClInclude Include=\"src\\sync.h\" />"
      },
      {
        "sha": "1706e110827e3e7173be7b0dadb2e365ca03b39c",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
        "patch": "@@ -153,6 +153,60 @@\n     <ClCompile Include=\"src\\checkpoints.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\primitives\\block.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\primitives\\transaction.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\blockchain.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\client.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\mining.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\misc.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\net.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\protocol.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\rawtransaction.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\rpc\\server.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\bitcoinconsensus.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\interpreter.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\ismine.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\script.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\script_error.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\sigcache.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\sign.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\script\\standard.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -338,5 +392,47 @@\n     <ClInclude Include=\"src\\checkqueue.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\primitives\\block.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\primitives\\transaction.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\rpc\\client.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\rpc\\protocol.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\rpc\\register.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\rpc\\server.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\bitcoinconsensus.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\interpreter.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\ismine.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\script.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\script_error.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\sigcache.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\sign.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\script\\standard.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "5e4b37245917199ae2b425327d4a645c804c3b09",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTRiMzcyNDU5MTcxOTlhZTJiNDI1MzI3ZDRhNjQ1YzgwNGMzYjA5",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:44:29Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T06:44:29Z"
      },
      "message": "AdditionalIncludeDirectories: src",
      "tree": {
        "sha": "ac0910ae8327d70aa2630fcb359b04f6af4dcddd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac0910ae8327d70aa2630fcb359b04f6af4dcddd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e4b37245917199ae2b425327d4a645c804c3b09",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e4b37245917199ae2b425327d4a645c804c3b09",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e4b37245917199ae2b425327d4a645c804c3b09",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e4b37245917199ae2b425327d4a645c804c3b09/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcbca4aa76c6925bd96f2b2beb57aaee94fe63c0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9a7bf998f89dd6cbee0b246cace39dd98034819e",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e4b37245917199ae2b425327d4a645c804c3b09/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e4b37245917199ae2b425327d4a645c804c3b09/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=5e4b37245917199ae2b425327d4a645c804c3b09",
        "patch": "@@ -89,7 +89,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -104,7 +104,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -121,7 +121,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -140,7 +140,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "af714b5f199322cea38031eccce3323322adbd93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjcxNGI1ZjE5OTMyMmNlYTM4MDMxZWNjY2UzMzIzMzIyYWRiZDkz",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:12:05Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:12:05Z"
      },
      "message": "Fix C2059 (syntax error: 'template')",
      "tree": {
        "sha": "f187cbf72ea2350e0045dacf2fdc4442ed32fc65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f187cbf72ea2350e0045dacf2fdc4442ed32fc65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af714b5f199322cea38031eccce3323322adbd93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af714b5f199322cea38031eccce3323322adbd93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af714b5f199322cea38031eccce3323322adbd93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af714b5f199322cea38031eccce3323322adbd93/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e4b37245917199ae2b425327d4a645c804c3b09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e4b37245917199ae2b425327d4a645c804c3b09",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e4b37245917199ae2b425327d4a645c804c3b09"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0e7db03092ac438046063df2a6e8ad8b72593648",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af714b5f199322cea38031eccce3323322adbd93/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af714b5f199322cea38031eccce3323322adbd93/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=af714b5f199322cea38031eccce3323322adbd93",
        "patch": "@@ -217,14 +217,14 @@ class cache\n      */\n     inline std::array<uint32_t, 8> compute_hashes(const Element& e) const\n     {\n-        return {{hash_function.template operator()<0>(e) & hash_mask,\n-                 hash_function.template operator()<1>(e) & hash_mask,\n-                 hash_function.template operator()<2>(e) & hash_mask,\n-                 hash_function.template operator()<3>(e) & hash_mask,\n-                 hash_function.template operator()<4>(e) & hash_mask,\n-                 hash_function.template operator()<5>(e) & hash_mask,\n-                 hash_function.template operator()<6>(e) & hash_mask,\n-                 hash_function.template operator()<7>(e) & hash_mask}};\n+        return {{hash_function.operator()<0>(e) & hash_mask,\n+                 hash_function.operator()<1>(e) & hash_mask,\n+                 hash_function.operator()<2>(e) & hash_mask,\n+                 hash_function.operator()<3>(e) & hash_mask,\n+                 hash_function.operator()<4>(e) & hash_mask,\n+                 hash_function.operator()<5>(e) & hash_mask,\n+                 hash_function.operator()<6>(e) & hash_mask,\n+                 hash_function.operator()<7>(e) & hash_mask}};\n     }\n \n     /* end"
      }
    ]
  },
  {
    "sha": "c8319908d821b253ce9ed3a933e420dc08f564d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODMxOTkwOGQ4MjFiMjUzY2U5ZWQzYTkzM2U0MjBkYzA4ZjU2NGQ1",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:20:20Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:20:20Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "59e0dd0dd6afdecc0d6da40c5e223840586b9492",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59e0dd0dd6afdecc0d6da40c5e223840586b9492"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8319908d821b253ce9ed3a933e420dc08f564d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8319908d821b253ce9ed3a933e420dc08f564d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8319908d821b253ce9ed3a933e420dc08f564d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8319908d821b253ce9ed3a933e420dc08f564d5/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af714b5f199322cea38031eccce3323322adbd93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af714b5f199322cea38031eccce3323322adbd93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af714b5f199322cea38031eccce3323322adbd93"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bf9ff4afa7376e50724f3d98f60b5d257400b9c3",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8319908d821b253ce9ed3a933e420dc08f564d5/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8319908d821b253ce9ed3a933e420dc08f564d5/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=c8319908d821b253ce9ed3a933e420dc08f564d5",
        "patch": "@@ -213,6 +213,12 @@\n     <ClCompile Include=\"src\\validation.cpp\" />\n     <ClCompile Include=\"src\\validationinterface.cpp\" />\n     <ClCompile Include=\"src\\versionbits.cpp\" />\n+    <ClCompile Include=\"src\\wallet\\crypter.cpp\" />\n+    <ClCompile Include=\"src\\wallet\\db.cpp\" />\n+    <ClCompile Include=\"src\\wallet\\rpcdump.cpp\" />\n+    <ClCompile Include=\"src\\wallet\\rpcwallet.cpp\" />\n+    <ClCompile Include=\"src\\wallet\\wallet.cpp\" />\n+    <ClCompile Include=\"src\\wallet\\walletdb.cpp\" />\n     <ClCompile Include=\"src\\warnings.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n@@ -291,6 +297,12 @@\n     <ClInclude Include=\"src\\validationinterface.h\" />\n     <ClInclude Include=\"src\\version.h\" />\n     <ClInclude Include=\"src\\versionbits.h\" />\n+    <ClInclude Include=\"src\\wallet\\coincontrol.h\" />\n+    <ClInclude Include=\"src\\wallet\\crypter.h\" />\n+    <ClInclude Include=\"src\\wallet\\db.h\" />\n+    <ClInclude Include=\"src\\wallet\\rpcwallet.h\" />\n+    <ClInclude Include=\"src\\wallet\\wallet.h\" />\n+    <ClInclude Include=\"src\\wallet\\walletdb.h\" />\n     <ClInclude Include=\"src\\warnings.h\" />\n     <ClInclude Include=\"src\\wintype.h\" />\n   </ItemGroup>"
      },
      {
        "sha": "a4c5e6a51c688c841d380fd2ab3fcb5ecc09439c",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8319908d821b253ce9ed3a933e420dc08f564d5/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8319908d821b253ce9ed3a933e420dc08f564d5/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=c8319908d821b253ce9ed3a933e420dc08f564d5",
        "patch": "@@ -207,6 +207,24 @@\n     <ClCompile Include=\"src\\script\\standard.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\wallet\\crypter.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\wallet\\db.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\wallet\\rpcdump.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\wallet\\rpcwallet.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\wallet\\wallet.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\wallet\\walletdb.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -434,5 +452,23 @@\n     <ClInclude Include=\"src\\script\\standard.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\wallet\\coincontrol.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\wallet\\crypter.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\wallet\\db.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\wallet\\rpcwallet.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\wallet\\wallet.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\wallet\\walletdb.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWNkOGRkNzk0ZTFkN2NkNTJjZjAwNjg5NWE4Y2QyNjgxNDU0ZmEz",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:34:50Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:34:50Z"
      },
      "message": "Update-Package BerkeleyDB-4_8_30-Cpp -Version 4.8.30.2",
      "tree": {
        "sha": "c5378a0427fc62441d2957bfe142a52709c6fb9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5378a0427fc62441d2957bfe142a52709c6fb9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11cd8dd794e1d7cd52cf006895a8cd2681454fa3/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8319908d821b253ce9ed3a933e420dc08f564d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8319908d821b253ce9ed3a933e420dc08f564d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8319908d821b253ce9ed3a933e420dc08f564d5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "910fe666337901e809e693922c6ebd7255556270",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11cd8dd794e1d7cd52cf006895a8cd2681454fa3/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11cd8dd794e1d7cd52cf006895a8cd2681454fa3/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
        "patch": "@@ -347,7 +347,6 @@\n     <Import Project=\"packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets\" Condition=\"Exists('packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets')\" />\n     <Import Project=\"packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets\" Condition=\"Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" />\n     <Import Project=\"packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets\" Condition=\"Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" />\n-    <Import Project=\"packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets\" Condition=\"Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" />\n     <Import Project=\"packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets\" Condition=\"Exists('packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets')\" />\n     <Import Project=\"packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets\" Condition=\"Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" />\n     <Import Project=\"packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets\" Condition=\"Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" />\n@@ -357,6 +356,7 @@\n     <Import Project=\"packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets\" Condition=\"Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" />\n     <Import Project=\"packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets\" Condition=\"Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" />\n     <Import Project=\"packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets\" Condition=\"Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" />\n+    <Import Project=\"packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets\" Condition=\"Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -401,7 +401,6 @@\n     <Error Condition=\"!Exists('packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_wserialization-vc140.1.63.0.0\\build\\native\\boost_wserialization-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost_zlib-vc140.1.63.0.0\\build\\native\\boost_zlib-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\boost-vc140.1.63.0.0\\build\\native\\boost-vc140.targets'))\" />\n-    <Error Condition=\"!Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.1\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets'))\" />\n     <Error Condition=\"!Exists('packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.1.2.8.8\\build\\native\\zlib.v120.windesktop.msvcstl.dyn.rt-dyn.targets'))\" />\n     <Error Condition=\"!Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x64.targets'))\" />\n     <Error Condition=\"!Exists('packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.1.0.2.0\\build\\native\\openssl.v120.windesktop.msvcstl.dyn.rt-dyn.x86.targets'))\" />\n@@ -411,5 +410,6 @@\n     <Error Condition=\"!Exists('packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\secp256k1_vc140.0.1.0.15\\build\\native\\secp256k1_vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "642cc3cac80c09dfd9ca7406e6358052bd6a8260",
        "filename": "packages.config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11cd8dd794e1d7cd52cf006895a8cd2681454fa3/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11cd8dd794e1d7cd52cf006895a8cd2681454fa3/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
        "patch": "@@ -1,6 +1,6 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <packages>\n-  <package id=\"BerkeleyDB-4_8_30-Cpp\" version=\"4.8.30.1\" targetFramework=\"native\" />\n+  <package id=\"BerkeleyDB-4_8_30-Cpp\" version=\"4.8.30.2\" targetFramework=\"native\" />\n   <package id=\"boost\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_atomic-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_bzip2-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />"
      }
    ]
  },
  {
    "sha": "bf057a44c505773de2df431755974f46e0a2448c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjA1N2E0NGM1MDU3NzNkZTJkZjQzMTc1NTk3NGY0NmUwYTI0NDhj",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:45:26Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:45:26Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "faceba6b38c2eb2d9be6f523b289c99c93a8bdd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faceba6b38c2eb2d9be6f523b289c99c93a8bdd6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf057a44c505773de2df431755974f46e0a2448c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf057a44c505773de2df431755974f46e0a2448c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf057a44c505773de2df431755974f46e0a2448c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf057a44c505773de2df431755974f46e0a2448c/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11cd8dd794e1d7cd52cf006895a8cd2681454fa3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11cd8dd794e1d7cd52cf006895a8cd2681454fa3"
      }
    ],
    "stats": {
      "total": 372,
      "additions": 372,
      "deletions": 0
    },
    "files": [
      {
        "sha": "66c21041d87fb96fef7fc0778126847c790b2bb1",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf057a44c505773de2df431755974f46e0a2448c/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf057a44c505773de2df431755974f46e0a2448c/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=bf057a44c505773de2df431755974f46e0a2448c",
        "patch": "@@ -150,6 +150,11 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n+    <ClCompile Include=\"src\\addrdb.cpp\" />\n+    <ClCompile Include=\"src\\addrman.cpp\" />\n+    <ClCompile Include=\"src\\amount.cpp\" />\n+    <ClCompile Include=\"src\\arith_uint256.cpp\" />\n+    <ClCompile Include=\"src\\base58.cpp\" />\n     <ClCompile Include=\"src\\bitcoind.cpp\" />\n     <ClCompile Include=\"src\\blockencodings.cpp\" />\n     <ClCompile Include=\"src\\bloom.cpp\" />\n@@ -160,13 +165,45 @@\n     <ClCompile Include=\"src\\clientversion.cpp\" />\n     <ClCompile Include=\"src\\coins.cpp\" />\n     <ClCompile Include=\"src\\compressor.cpp\" />\n+    <ClCompile Include=\"src\\consensus\\merkle.cpp\" />\n     <ClCompile Include=\"src\\core_read.cpp\" />\n     <ClCompile Include=\"src\\core_write.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\aes.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\hmac_sha256.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\hmac_sha512.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\ripemd160.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\sha1.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\sha256.cpp\" />\n+    <ClCompile Include=\"src\\crypto\\sha512.cpp\" />\n     <ClCompile Include=\"src\\dbwrapper.cpp\" />\n     <ClCompile Include=\"src\\hash.cpp\" />\n     <ClCompile Include=\"src\\httprpc.cpp\" />\n     <ClCompile Include=\"src\\httpserver.cpp\" />\n     <ClCompile Include=\"src\\init.cpp\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\arena.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\arena_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\bloom_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\cache.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\cache_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\coding.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\coding_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\comparator.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\crc32c.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\crc32c_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\env.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\env_posix.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\env_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\env_win.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\filter_policy.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\hash.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\hash_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\histogram.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\logging.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\options.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\status.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\testharness.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\util\\testutil.cc\" />\n     <ClCompile Include=\"src\\merkleblock.cpp\" />\n     <ClCompile Include=\"src\\miner.cpp\" />\n     <ClCompile Include=\"src\\net.cpp\" />\n@@ -198,6 +235,8 @@\n     <ClCompile Include=\"src\\script\\sigcache.cpp\" />\n     <ClCompile Include=\"src\\script\\sign.cpp\" />\n     <ClCompile Include=\"src\\script\\standard.cpp\" />\n+    <ClCompile Include=\"src\\support\\cleanse.cpp\" />\n+    <ClCompile Include=\"src\\support\\lockedpool.cpp\" />\n     <ClCompile Include=\"src\\sync.cpp\" />\n     <ClCompile Include=\"src\\threadinterrupt.cpp\" />\n     <ClCompile Include=\"src\\timedata.cpp\" />\n@@ -206,6 +245,9 @@\n     <ClCompile Include=\"src\\txmempool.cpp\" />\n     <ClCompile Include=\"src\\uint256.cpp\" />\n     <ClCompile Include=\"src\\ui_interface.cpp\" />\n+    <ClCompile Include=\"src\\univalue\\lib\\univalue.cpp\" />\n+    <ClCompile Include=\"src\\univalue\\lib\\univalue_read.cpp\" />\n+    <ClCompile Include=\"src\\univalue\\lib\\univalue_write.cpp\" />\n     <ClCompile Include=\"src\\util.cpp\" />\n     <ClCompile Include=\"src\\utilmoneystr.cpp\" />\n     <ClCompile Include=\"src\\utilstrencodings.cpp\" />\n@@ -225,6 +267,11 @@\n     <None Include=\"packages.config\" />\n   </ItemGroup>\n   <ItemGroup>\n+    <ClInclude Include=\"src\\addrdb.h\" />\n+    <ClInclude Include=\"src\\addrman.h\" />\n+    <ClInclude Include=\"src\\amount.h\" />\n+    <ClInclude Include=\"src\\arith_uint256.h\" />\n+    <ClInclude Include=\"src\\base58.h\" />\n     <ClInclude Include=\"src\\blockencodings.h\" />\n     <ClInclude Include=\"src\\bloom.h\" />\n     <ClInclude Include=\"src\\chain.h\" />\n@@ -237,15 +284,52 @@\n     <ClInclude Include=\"src\\coins.h\" />\n     <ClInclude Include=\"src\\compat.h\" />\n     <ClInclude Include=\"src\\compressor.h\" />\n+    <ClInclude Include=\"src\\consensus\\consensus.h\" />\n+    <ClInclude Include=\"src\\consensus\\merkle.h\" />\n+    <ClInclude Include=\"src\\consensus\\params.h\" />\n+    <ClInclude Include=\"src\\consensus\\validation.h\" />\n     <ClInclude Include=\"src\\core_io.h\" />\n     <ClInclude Include=\"src\\core_memusage.h\" />\n+    <ClInclude Include=\"src\\crypto\\aes.h\" />\n+    <ClInclude Include=\"src\\crypto\\common.h\" />\n+    <ClInclude Include=\"src\\crypto\\hmac_sha256.h\" />\n+    <ClInclude Include=\"src\\crypto\\hmac_sha512.h\" />\n+    <ClInclude Include=\"src\\crypto\\ripemd160.h\" />\n+    <ClInclude Include=\"src\\crypto\\sha1.h\" />\n+    <ClInclude Include=\"src\\crypto\\sha256.h\" />\n+    <ClInclude Include=\"src\\crypto\\sha512.h\" />\n     <ClInclude Include=\"src\\cuckoocache.h\" />\n     <ClInclude Include=\"src\\dbwrapper.h\" />\n     <ClInclude Include=\"src\\hash.h\" />\n     <ClInclude Include=\"src\\httprpc.h\" />\n     <ClInclude Include=\"src\\httpserver.h\" />\n     <ClInclude Include=\"src\\indirectmap.h\" />\n     <ClInclude Include=\"src\\init.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\c.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\cache.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\comparator.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\db.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\dumpfile.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\env.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\filter_policy.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\iterator.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\options.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\slice.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\status.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table_builder.h\" />\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\write_batch.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\arena.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\coding.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\crc32c.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\hash.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\histogram.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\logging.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\mutexlock.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\posix_logger.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\random.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\testharness.h\" />\n+    <ClInclude Include=\"src\\leveldb\\util\\testutil.h\" />\n     <ClInclude Include=\"src\\memusage.h\" />\n     <ClInclude Include=\"src\\merkleblock.h\" />\n     <ClInclude Include=\"src\\miner.h\" />\n@@ -278,6 +362,11 @@\n     <ClInclude Include=\"src\\script\\standard.h\" />\n     <ClInclude Include=\"src\\serialize.h\" />\n     <ClInclude Include=\"src\\streams.h\" />\n+    <ClInclude Include=\"src\\support\\allocators\\secure.h\" />\n+    <ClInclude Include=\"src\\support\\allocators\\zeroafterfree.h\" />\n+    <ClInclude Include=\"src\\support\\cleanse.h\" />\n+    <ClInclude Include=\"src\\support\\events.h\" />\n+    <ClInclude Include=\"src\\support\\lockedpool.h\" />\n     <ClInclude Include=\"src\\sync.h\" />\n     <ClInclude Include=\"src\\threadinterrupt.h\" />\n     <ClInclude Include=\"src\\threadsafety.h\" />\n@@ -289,6 +378,10 @@\n     <ClInclude Include=\"src\\uint256.h\" />\n     <ClInclude Include=\"src\\ui_interface.h\" />\n     <ClInclude Include=\"src\\undo.h\" />\n+    <ClInclude Include=\"src\\univalue\\include\\univalue.h\" />\n+    <ClInclude Include=\"src\\univalue\\lib\\univalue_escapes.h\" />\n+    <ClInclude Include=\"src\\univalue\\lib\\univalue_utffilter.h\" />\n+    <ClInclude Include=\"src\\univalue\\univalue-config.h\" />\n     <ClInclude Include=\"src\\util.h\" />\n     <ClInclude Include=\"src\\utilmoneystr.h\" />\n     <ClInclude Include=\"src\\utilstrencodings.h\" />"
      },
      {
        "sha": "794198dbd2dd044fa45b88f862a5cfc2d926e6c3",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 279,
        "deletions": 0,
        "changes": 279,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf057a44c505773de2df431755974f46e0a2448c/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf057a44c505773de2df431755974f46e0a2448c/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=bf057a44c505773de2df431755974f46e0a2448c",
        "patch": "@@ -225,6 +225,132 @@\n     <ClCompile Include=\"src\\wallet\\walletdb.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\aes.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\hmac_sha256.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\hmac_sha512.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\ripemd160.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\sha1.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\sha256.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\crypto\\sha512.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\support\\cleanse.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\support\\lockedpool.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\addrdb.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\addrman.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\amount.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\arith_uint256.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\base58.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\univalue\\lib\\univalue.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\univalue\\lib\\univalue_read.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\univalue\\lib\\univalue_write.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\consensus\\merkle.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\arena.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\arena_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\bloom_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\cache.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\cache_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\coding.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\coding_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\comparator.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\crc32c.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\crc32c_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\env.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\env_posix.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\env_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\env_win.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\filter_policy.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\hash.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\hash_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\histogram.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\logging.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\options.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\status.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\testharness.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\util\\testutil.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -470,5 +596,158 @@\n     <ClInclude Include=\"src\\wallet\\walletdb.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\aes.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\common.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\hmac_sha256.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\hmac_sha512.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\ripemd160.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\sha1.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\sha256.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\crypto\\sha512.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\support\\cleanse.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\support\\events.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\support\\lockedpool.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\support\\allocators\\secure.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\support\\allocators\\zeroafterfree.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\addrdb.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\addrman.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\amount.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\arith_uint256.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\base58.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\univalue\\univalue-config.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\univalue\\include\\univalue.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\univalue\\lib\\univalue_escapes.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\univalue\\lib\\univalue_utffilter.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\c.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\cache.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\comparator.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\db.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\dumpfile.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\env.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\filter_policy.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\iterator.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\options.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\slice.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\status.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table_builder.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\write_batch.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\consensus\\validation.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\consensus\\consensus.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\consensus\\merkle.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\consensus\\params.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\arena.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\coding.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\crc32c.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\hash.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\histogram.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\logging.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\mutexlock.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\posix_logger.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\random.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\testharness.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\util\\testutil.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGM4ZmQ0ZDc1MjliNjg4MmMzYmJmYzYyNGY0NjUxZTUxOTI4YmE2",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:47:16Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:47:16Z"
      },
      "message": "AdditionalIncludeDirectories: src/leveldb",
      "tree": {
        "sha": "376fe09f2ac7e4529d2d1ebdb8c483d41a2e7584",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/376fe09f2ac7e4529d2d1ebdb8c483d41a2e7584"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adc8fd4d7529b6882c3bbfc624f4651e51928ba6/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf057a44c505773de2df431755974f46e0a2448c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf057a44c505773de2df431755974f46e0a2448c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf057a44c505773de2df431755974f46e0a2448c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "82a62ca87724a1b4c0ecfbac3070b7ee0def064f",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adc8fd4d7529b6882c3bbfc624f4651e51928ba6/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adc8fd4d7529b6882c3bbfc624f4651e51928ba6/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
        "patch": "@@ -89,7 +89,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -104,7 +104,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -121,7 +121,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -140,7 +140,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "38c084f80ec6df2053f01f0e71ba47969ecff49b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGMwODRmODBlYzZkZjIwNTNmMDFmMGU3MWJhNDc5NjllY2ZmNDli",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:54:03Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T07:54:03Z"
      },
      "message": "PreprocessorDefinitions: LEVELDB_PLATFORM_WINDOWS",
      "tree": {
        "sha": "f2be48d86bb8aa17a694ba54e7573d20058af03a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2be48d86bb8aa17a694ba54e7573d20058af03a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38c084f80ec6df2053f01f0e71ba47969ecff49b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38c084f80ec6df2053f01f0e71ba47969ecff49b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38c084f80ec6df2053f01f0e71ba47969ecff49b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38c084f80ec6df2053f01f0e71ba47969ecff49b/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adc8fd4d7529b6882c3bbfc624f4651e51928ba6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/adc8fd4d7529b6882c3bbfc624f4651e51928ba6"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3b9ae750e618a4569a78ed697b7101c1b84ae74d",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38c084f80ec6df2053f01f0e71ba47969ecff49b/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38c084f80ec6df2053f01f0e71ba47969ecff49b/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=38c084f80ec6df2053f01f0e71ba47969ecff49b",
        "patch": "@@ -87,7 +87,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -102,7 +102,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -119,7 +119,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>\n@@ -138,7 +138,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n     </ClCompile>"
      }
    ]
  },
  {
    "sha": "a269657fdf238d03e96d25f87349050920f9bafe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjY5NjU3ZmRmMjM4ZDAzZTk2ZDI1Zjg3MzQ5MDUwOTIwZjliYWZl",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:02:18Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:02:18Z"
      },
      "message": "Fix C2664 (cannot convert argument 1 from 'const char *' to 'LPCWSTR')",
      "tree": {
        "sha": "d9f0fe1bcd38cf65fcac901e55df6bd076d64cb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9f0fe1bcd38cf65fcac901e55df6bd076d64cb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a269657fdf238d03e96d25f87349050920f9bafe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a269657fdf238d03e96d25f87349050920f9bafe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a269657fdf238d03e96d25f87349050920f9bafe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a269657fdf238d03e96d25f87349050920f9bafe/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38c084f80ec6df2053f01f0e71ba47969ecff49b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38c084f80ec6df2053f01f0e71ba47969ecff49b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38c084f80ec6df2053f01f0e71ba47969ecff49b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ab0909293ca028dc861e02b91a698cd4755eafa5",
        "filename": "src/leveldb/util/env_win.cc",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a269657fdf238d03e96d25f87349050920f9bafe/src/leveldb/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a269657fdf238d03e96d25f87349050920f9bafe/src/leveldb/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_win.cc?ref=a269657fdf238d03e96d25f87349050920f9bafe",
        "patch": "@@ -759,14 +759,14 @@ uint64_t Win32Env::NowMicros()\n static Status CreateDirInner( const std::string& dirname )\n {\n     Status sRet;\n-    DWORD attr = ::GetFileAttributes(dirname.c_str());\n+    DWORD attr = ::GetFileAttributesA(dirname.c_str());\n     if (attr == INVALID_FILE_ATTRIBUTES) { // doesn't exist:\n       std::size_t slash = dirname.find_last_of(\"\\\\\");\n       if (slash != std::string::npos){\n \tsRet = CreateDirInner(dirname.substr(0, slash));\n \tif (!sRet.ok()) return sRet;\n       }\n-      BOOL result = ::CreateDirectory(dirname.c_str(), NULL);\n+      BOOL result = ::CreateDirectoryA(dirname.c_str(), NULL);\n       if (result == FALSE) {\n \tsRet = Status::IOError(dirname, \"Could not create directory.\");\n \treturn sRet;"
      }
    ]
  },
  {
    "sha": "418c5a42961dd0fb2d0598f84e3de1728ad78d42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MThjNWE0Mjk2MWRkMGZiMmQwNTk4Zjg0ZTNkZTE3MjhhZDc4ZDQy",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:05:39Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:05:51Z"
      },
      "message": "Exclude cc files which contain main function for test",
      "tree": {
        "sha": "3af053229743b9c75f523ca3ffd5fc5d470c27fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3af053229743b9c75f523ca3ffd5fc5d470c27fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/418c5a42961dd0fb2d0598f84e3de1728ad78d42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/418c5a42961dd0fb2d0598f84e3de1728ad78d42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/418c5a42961dd0fb2d0598f84e3de1728ad78d42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/418c5a42961dd0fb2d0598f84e3de1728ad78d42/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a269657fdf238d03e96d25f87349050920f9bafe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a269657fdf238d03e96d25f87349050920f9bafe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a269657fdf238d03e96d25f87349050920f9bafe"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 0,
      "deletions": 28
    },
    "files": [
      {
        "sha": "d2c0cce4c9527cd25116261d9de431ddd480a276",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/418c5a42961dd0fb2d0598f84e3de1728ad78d42/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/418c5a42961dd0fb2d0598f84e3de1728ad78d42/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=418c5a42961dd0fb2d0598f84e3de1728ad78d42",
        "patch": "@@ -181,23 +181,16 @@\n     <ClCompile Include=\"src\\httpserver.cpp\" />\n     <ClCompile Include=\"src\\init.cpp\" />\n     <ClCompile Include=\"src\\leveldb\\util\\arena.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\arena_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\bloom_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\cache.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\cache_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\coding.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\coding_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\comparator.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\crc32c.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\crc32c_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\env.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\env_posix.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\env_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\env_win.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\filter_policy.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\hash.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\hash_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\histogram.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\logging.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\options.cc\" />"
      },
      {
        "sha": "e8400342866497cb9457e14a68c171efd144e3a1",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/418c5a42961dd0fb2d0598f84e3de1728ad78d42/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/418c5a42961dd0fb2d0598f84e3de1728ad78d42/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=418c5a42961dd0fb2d0598f84e3de1728ad78d42",
        "patch": "@@ -282,45 +282,27 @@\n     <ClCompile Include=\"src\\leveldb\\util\\arena.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\arena_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\bloom_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\cache.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\cache_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\coding.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\coding_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\comparator.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\crc32c.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\crc32c_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\env.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\env_posix.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\env_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\env_win.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n@@ -330,9 +312,6 @@\n     <ClCompile Include=\"src\\leveldb\\util\\hash.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\hash_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\util\\histogram.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>"
      }
    ]
  },
  {
    "sha": "1d3e6aca785caea22f233212f08823816502db00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDNlNmFjYTc4NWNhZWEyMmYyMzMyMTJmMDg4MjM4MTY1MDJkYjAw",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:11:41Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:11:41Z"
      },
      "message": "vcxproj: add some .cpp",
      "tree": {
        "sha": "5990b86db6f1b89c0a0083c401e63ceb985a0357",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5990b86db6f1b89c0a0083c401e63ceb985a0357"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d3e6aca785caea22f233212f08823816502db00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d3e6aca785caea22f233212f08823816502db00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d3e6aca785caea22f233212f08823816502db00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d3e6aca785caea22f233212f08823816502db00/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "418c5a42961dd0fb2d0598f84e3de1728ad78d42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/418c5a42961dd0fb2d0598f84e3de1728ad78d42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/418c5a42961dd0fb2d0598f84e3de1728ad78d42"
      }
    ],
    "stats": {
      "total": 184,
      "additions": 184,
      "deletions": 0
    },
    "files": [
      {
        "sha": "094b39a5c8d953226d1cb527feb4bcc20dd3601c",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d3e6aca785caea22f233212f08823816502db00/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d3e6aca785caea22f233212f08823816502db00/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=1d3e6aca785caea22f233212f08823816502db00",
        "patch": "@@ -180,6 +180,34 @@\n     <ClCompile Include=\"src\\httprpc.cpp\" />\n     <ClCompile Include=\"src\\httpserver.cpp\" />\n     <ClCompile Include=\"src\\init.cpp\" />\n+    <ClCompile Include=\"src\\key.cpp\" />\n+    <ClCompile Include=\"src\\keystore.cpp\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\autocompact_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\builder.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\c.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\corruption_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\c_test.c\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\dbformat_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\db_bench.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\db_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\filename.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\filename_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\leveldbutil.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\log_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\recovery_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\repair.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\table_cache.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\version_edit.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\version_set.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\version_set_test.cc\" />\n+    <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\arena.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\cache.cc\" />\n@@ -298,6 +326,23 @@\n     <ClInclude Include=\"src\\httpserver.h\" />\n     <ClInclude Include=\"src\\indirectmap.h\" />\n     <ClInclude Include=\"src\\init.h\" />\n+    <ClInclude Include=\"src\\key.h\" />\n+    <ClInclude Include=\"src\\keystore.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\builder.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\dbformat.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\db_impl.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\db_iter.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\filename.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\log_format.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\log_reader.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\log_writer.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\memtable.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\skiplist.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\snapshot.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\table_cache.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\version_edit.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\version_set.h\" />\n+    <ClInclude Include=\"src\\leveldb\\db\\write_batch_internal.h\" />\n     <ClInclude Include=\"src\\leveldb\\include\\leveldb\\c.h\" />\n     <ClInclude Include=\"src\\leveldb\\include\\leveldb\\cache.h\" />\n     <ClInclude Include=\"src\\leveldb\\include\\leveldb\\comparator.h\" />\n@@ -323,6 +368,7 @@\n     <ClInclude Include=\"src\\leveldb\\util\\random.h\" />\n     <ClInclude Include=\"src\\leveldb\\util\\testharness.h\" />\n     <ClInclude Include=\"src\\leveldb\\util\\testutil.h\" />\n+    <ClInclude Include=\"src\\limitedmap.h\" />\n     <ClInclude Include=\"src\\memusage.h\" />\n     <ClInclude Include=\"src\\merkleblock.h\" />\n     <ClInclude Include=\"src\\miner.h\" />"
      },
      {
        "sha": "807f903c7d3079a4ec38d7ab8aff65f3b370dc9d",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d3e6aca785caea22f233212f08823816502db00/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d3e6aca785caea22f233212f08823816502db00/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=1d3e6aca785caea22f233212f08823816502db00",
        "patch": "@@ -330,6 +330,90 @@\n     <ClCompile Include=\"src\\leveldb\\util\\testutil.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\key.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\keystore.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\autocompact_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\builder.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\c.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\c_test.c\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\corruption_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\db_bench.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\db_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\dbformat_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\filename.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\filename_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\leveldbutil.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\log_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\recovery_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\repair.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\table_cache.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\version_edit.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\version_set.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\version_set_test.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -728,5 +812,59 @@\n     <ClInclude Include=\"src\\leveldb\\util\\testutil.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\key.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\keystore.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\limitedmap.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\builder.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\db_impl.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\db_iter.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\dbformat.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\filename.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\log_format.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\log_reader.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\log_writer.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\memtable.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\skiplist.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\snapshot.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\table_cache.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\version_edit.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\version_set.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\leveldb\\db\\write_batch_internal.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDdmMDI0NTg4YmVjN2U4ZDBlZDFiMTBkYzQ1ZjZlN2FiMjk5ZDA1",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:12:59Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:12:59Z"
      },
      "message": "ssize_t type",
      "tree": {
        "sha": "3380481c7caa36bc68fc7a29853f75f767ae99aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3380481c7caa36bc68fc7a29853f75f767ae99aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307f024588bec7e8d0ed1b10dc45f6e7ab299d05/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d3e6aca785caea22f233212f08823816502db00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d3e6aca785caea22f233212f08823816502db00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d3e6aca785caea22f233212f08823816502db00"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5142e0506428929e5a0d8492edecf4733b40f487",
        "filename": "src/leveldb/db/db_iter.cc",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307f024588bec7e8d0ed1b10dc45f6e7ab299d05/src/leveldb/db/db_iter.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307f024588bec7e8d0ed1b10dc45f6e7ab299d05/src/leveldb/db/db_iter.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_iter.cc?ref=307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
        "patch": "@@ -14,6 +14,8 @@\n #include \"util/mutexlock.h\"\n #include \"util/random.h\"\n \n+#include \"wintype.h\" // ssize_t\n+\n namespace leveldb {\n \n #if 0"
      }
    ]
  },
  {
    "sha": "9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDk0ZjU5YmQ1Y2YwNTc4YmZkMmRmODZhZWE0ZWFiN2U0YThiNTFi",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:15:15Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:15:15Z"
      },
      "message": "Exclude cc files which contain main function for test",
      "tree": {
        "sha": "d9aab4737f25a4fcedccf70ffe484a2894d6fcf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9aab4737f25a4fcedccf70ffe484a2894d6fcf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307f024588bec7e8d0ed1b10dc45f6e7ab299d05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/307f024588bec7e8d0ed1b10dc45f6e7ab299d05"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 0,
      "deletions": 36
    },
    "files": [
      {
        "sha": "9e7609848ff6f352c57051775041bbb846ddf29e",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
        "patch": "@@ -182,31 +182,22 @@\n     <ClCompile Include=\"src\\init.cpp\" />\n     <ClCompile Include=\"src\\key.cpp\" />\n     <ClCompile Include=\"src\\keystore.cpp\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\autocompact_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\builder.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\c.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\corruption_test.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\c_test.c\" />\n     <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\dbformat_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\db_bench.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\db_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\filename.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\filename_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\leveldbutil.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\log_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\recovery_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\repair.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\table_cache.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\version_edit.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\version_set.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\version_set_test.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\arena.cc\" />\n     <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\" />"
      },
      {
        "sha": "d5b1ea39a13d26972fe71a3d5c92bfbe29e0f492",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
        "patch": "@@ -336,21 +336,12 @@\n     <ClCompile Include=\"src\\keystore.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\autocompact_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\builder.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\c.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\c_test.c\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\corruption_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\db_bench.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n@@ -360,42 +351,27 @@\n     <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\db_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\dbformat_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\filename.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\filename_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\leveldbutil.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\log_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\recovery_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\repair.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n@@ -408,9 +384,6 @@\n     <ClCompile Include=\"src\\leveldb\\db\\version_set.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\version_set_test.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>"
      }
    ]
  },
  {
    "sha": "f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGI4OGFhNzBjMTJiNjA4ZTdhZTUxZjhmN2JkZWIyOWM1N2VjMmQx",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:19:46Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:19:46Z"
      },
      "message": "leveldb: Fix compile error on Windows (no include unistd.h)",
      "tree": {
        "sha": "bd065d5fda8d1e18c91aef7d89e5b110d2f50110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd065d5fda8d1e18c91aef7d89e5b110d2f50110"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d94f59bd5cf0578bfd2df86aea4eab7e4a8b51b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6ea9a1f631d9e869437a319777dec8adab1b414d",
        "filename": "src/leveldb/db/c.cc",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1/src/leveldb/db/c.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1/src/leveldb/db/c.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/c.cc?ref=f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
        "patch": "@@ -5,7 +5,9 @@\n #include \"leveldb/c.h\"\n \n #include <stdlib.h>\n-#include <unistd.h>\n+#ifndef WIN32\n+    #include <unistd.h>\n+#endif\n #include \"leveldb/cache.h\"\n #include \"leveldb/comparator.h\"\n #include \"leveldb/db.h\"\n@@ -15,6 +17,9 @@\n #include \"leveldb/options.h\"\n #include \"leveldb/status.h\"\n #include \"leveldb/write_batch.h\"\n+#ifdef WIN32\n+    #define strdup _strdup\n+#endif\n \n using leveldb::Cache;\n using leveldb::Comparator;"
      }
    ]
  },
  {
    "sha": "506639b7c525287e6a5a8690444de1a31707ef03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDY2MzliN2M1MjUyODdlNmE1YTg2OTA0NDRkZTFhMzE3MDdlZjAz",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:22:56Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-14T08:22:56Z"
      },
      "message": "Exclude cc files which contain main function for test",
      "tree": {
        "sha": "12549241ef4ca12da2283c05a1d5155ba01d6439",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12549241ef4ca12da2283c05a1d5155ba01d6439"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/506639b7c525287e6a5a8690444de1a31707ef03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/506639b7c525287e6a5a8690444de1a31707ef03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/506639b7c525287e6a5a8690444de1a31707ef03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/506639b7c525287e6a5a8690444de1a31707ef03/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b88aa70c12b608e7ae51f8f7bdeb29c57ec2d1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0920894e4876a7668a3dc11a337e07f193d883a2",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506639b7c525287e6a5a8690444de1a31707ef03/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506639b7c525287e6a5a8690444de1a31707ef03/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=506639b7c525287e6a5a8690444de1a31707ef03",
        "patch": "@@ -185,12 +185,10 @@\n     <ClCompile Include=\"src\\leveldb\\db\\builder.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\c.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\db_bench.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\filename.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\leveldbutil.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\" />\n     <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\" />"
      },
      {
        "sha": "5b73fa7be772d4015966a065b13f1ce373a2f5c3",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506639b7c525287e6a5a8690444de1a31707ef03/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506639b7c525287e6a5a8690444de1a31707ef03/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=506639b7c525287e6a5a8690444de1a31707ef03",
        "patch": "@@ -342,9 +342,6 @@\n     <ClCompile Include=\"src\\leveldb\\db\\c.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\db_bench.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n@@ -360,9 +357,6 @@\n     <ClCompile Include=\"src\\leveldb\\db\\filename.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\leveldbutil.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>"
      }
    ]
  },
  {
    "sha": "3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmJlYzY2YzlkNWM3MDFjODgxY2JlZmJmNTNlM2FhNmEwMjM3YzA4",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-17T12:24:27Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-17T12:24:27Z"
      },
      "message": "Output .obj files to relative directory",
      "tree": {
        "sha": "b23287f146b2ab96d7a2b30c7b1787fea349399c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b23287f146b2ab96d7a2b30c7b1787fea349399c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "506639b7c525287e6a5a8690444de1a31707ef03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/506639b7c525287e6a5a8690444de1a31707ef03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/506639b7c525287e6a5a8690444de1a31707ef03"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2630e8bd02b86839da999429d588ef00b6da064b",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
        "patch": "@@ -90,6 +90,7 @@\n       <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -105,6 +106,7 @@\n       <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -122,6 +124,7 @@\n       <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n@@ -141,6 +144,7 @@\n       <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>"
      }
    ]
  },
  {
    "sha": "0971ad0fae35f40e5998da1cbc7ac08635c66737",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTcxYWQwZmFlMzVmNDBlNTk5OGRhMWNiYzdhYzA4NjM1YzY2NzM3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-17T12:42:22Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:57:12Z"
      },
      "message": "vcxproj: add some .cpp files",
      "tree": {
        "sha": "785409acc555c2828dfab0a011a10eccf32bf9f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/785409acc555c2828dfab0a011a10eccf32bf9f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0971ad0fae35f40e5998da1cbc7ac08635c66737",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0971ad0fae35f40e5998da1cbc7ac08635c66737",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0971ad0fae35f40e5998da1cbc7ac08635c66737",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0971ad0fae35f40e5998da1cbc7ac08635c66737/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3fbec66c9d5c701c881cbefbf53e3aa6a0237c08"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 24,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f70fb5f16c42086e4da76a47a808605d72bb64c7",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -168,6 +168,9 @@\n     <ClCompile Include=\"src\\checkpoints.cpp\" />\n     <ClCompile Include=\"src\\clientversion.cpp\" />\n     <ClCompile Include=\"src\\coins.cpp\" />\n+    <ClCompile Include=\"src\\compat\\glibcxx_sanity.cpp\" />\n+    <ClCompile Include=\"src\\compat\\glibc_sanity.cpp\" />\n+    <ClCompile Include=\"src\\compat\\strnlen.cpp\" />\n     <ClCompile Include=\"src\\compressor.cpp\" />\n     <ClCompile Include=\"src\\consensus\\merkle.cpp\" />\n     <ClCompile Include=\"src\\core_read.cpp\" />\n@@ -297,6 +300,9 @@\n     <ClInclude Include=\"src\\clientversion.h\" />\n     <ClInclude Include=\"src\\coins.h\" />\n     <ClInclude Include=\"src\\compat.h\" />\n+    <ClInclude Include=\"src\\compat\\byteswap.h\" />\n+    <ClInclude Include=\"src\\compat\\endian.h\" />\n+    <ClInclude Include=\"src\\compat\\sanity.h\" />\n     <ClInclude Include=\"src\\compressor.h\" />\n     <ClInclude Include=\"src\\consensus\\consensus.h\" />\n     <ClInclude Include=\"src\\consensus\\merkle.h\" />"
      },
      {
        "sha": "6d8f98948af56f5d7b779211d2687e457cce2a9b",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -381,6 +381,15 @@\n     <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\compat\\glibc_sanity.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\compat\\glibcxx_sanity.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\compat\\strnlen.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -833,5 +842,14 @@\n     <ClInclude Include=\"src\\leveldb\\db\\write_batch_internal.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\compat\\byteswap.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\compat\\endian.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\compat\\sanity.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "68f8e2f03448cc343c7983bb249ac5d668fd1a14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGY4ZTJmMDM0NDhjYzM0M2M3OTgzYmIyNDlhYzVkNjY4ZmQxYTE0",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-17T16:20:50Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:57:27Z"
      },
      "message": "remove leveldb directory",
      "tree": {
        "sha": "f051cb8e5e672782ccce88245cf5427d13111a53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f051cb8e5e672782ccce88245cf5427d13111a53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68f8e2f03448cc343c7983bb249ac5d668fd1a14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f8e2f03448cc343c7983bb249ac5d668fd1a14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68f8e2f03448cc343c7983bb249ac5d668fd1a14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f8e2f03448cc343c7983bb249ac5d668fd1a14/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0971ad0fae35f40e5998da1cbc7ac08635c66737"
      }
    ],
    "stats": {
      "total": 30249,
      "additions": 0,
      "deletions": 30249
    },
    "files": [
      {
        "sha": "63ab137621e29e7162888e7c54284879d5aa228b",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68f8e2f03448cc343c7983bb249ac5d668fd1a14/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68f8e2f03448cc343c7983bb249ac5d668fd1a14/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=68f8e2f03448cc343c7983bb249ac5d668fd1a14",
        "patch": "@@ -189,38 +189,6 @@\n     <ClCompile Include=\"src\\init.cpp\" />\n     <ClCompile Include=\"src\\key.cpp\" />\n     <ClCompile Include=\"src\\keystore.cpp\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\builder.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\c.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\filename.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\repair.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\table_cache.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\version_edit.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\version_set.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\arena.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\cache.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\coding.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\comparator.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\crc32c.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\env.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\env_posix.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\env_win.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\filter_policy.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\hash.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\histogram.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\logging.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\options.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\status.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\testharness.cc\" />\n-    <ClCompile Include=\"src\\leveldb\\util\\testutil.cc\" />\n     <ClCompile Include=\"src\\merkleblock.cpp\" />\n     <ClCompile Include=\"src\\miner.cpp\" />\n     <ClCompile Include=\"src\\net.cpp\" />\n@@ -327,46 +295,6 @@\n     <ClInclude Include=\"src\\init.h\" />\n     <ClInclude Include=\"src\\key.h\" />\n     <ClInclude Include=\"src\\keystore.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\builder.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\dbformat.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\db_impl.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\db_iter.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\filename.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\log_format.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\log_reader.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\log_writer.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\memtable.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\skiplist.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\snapshot.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\table_cache.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\version_edit.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\version_set.h\" />\n-    <ClInclude Include=\"src\\leveldb\\db\\write_batch_internal.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\c.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\cache.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\comparator.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\db.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\dumpfile.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\env.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\filter_policy.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\iterator.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\options.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\slice.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\status.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table_builder.h\" />\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\write_batch.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\arena.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\coding.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\crc32c.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\hash.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\histogram.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\logging.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\mutexlock.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\posix_logger.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\random.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\testharness.h\" />\n-    <ClInclude Include=\"src\\leveldb\\util\\testutil.h\" />\n     <ClInclude Include=\"src\\limitedmap.h\" />\n     <ClInclude Include=\"src\\memusage.h\" />\n     <ClInclude Include=\"src\\merkleblock.h\" />"
      },
      {
        "sha": "f24a340b497b51d437da8e631fd966d251d95196",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 0,
        "deletions": 216,
        "changes": 216,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68f8e2f03448cc343c7983bb249ac5d668fd1a14/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68f8e2f03448cc343c7983bb249ac5d668fd1a14/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=68f8e2f03448cc343c7983bb249ac5d668fd1a14",
        "patch": "@@ -279,108 +279,12 @@\n     <ClCompile Include=\"src\\consensus\\merkle.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\arena.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\bloom.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\cache.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\coding.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\comparator.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\crc32c.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\env.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\env_posix.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\env_win.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\filter_policy.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\hash.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\histogram.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\logging.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\options.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\status.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\testharness.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\util\\testutil.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\key.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"src\\keystore.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\builder.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\c.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\db_impl.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\db_iter.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\dbformat.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\dumpfile.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\filename.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\log_reader.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\log_writer.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\memtable.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\repair.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\table_cache.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\version_edit.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\version_set.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n-    <ClCompile Include=\"src\\leveldb\\db\\write_batch.cc\">\n-      <Filter>Source Files</Filter>\n-    </ClCompile>\n     <ClCompile Include=\"src\\compat\\glibc_sanity.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n@@ -701,48 +605,6 @@\n     <ClInclude Include=\"src\\univalue\\lib\\univalue_utffilter.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\c.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\cache.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\comparator.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\db.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\dumpfile.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\env.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\filter_policy.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\iterator.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\options.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\slice.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\status.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\table_builder.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\include\\leveldb\\write_batch.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n     <ClInclude Include=\"src\\consensus\\validation.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n@@ -755,39 +617,6 @@\n     <ClInclude Include=\"src\\consensus\\params.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\arena.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\coding.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\crc32c.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\hash.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\histogram.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\logging.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\mutexlock.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\posix_logger.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\random.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\testharness.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\util\\testutil.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n     <ClInclude Include=\"src\\key.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n@@ -797,51 +626,6 @@\n     <ClInclude Include=\"src\\limitedmap.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\builder.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\db_impl.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\db_iter.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\dbformat.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\filename.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\log_format.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\log_reader.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\log_writer.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\memtable.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\skiplist.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\snapshot.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\table_cache.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\version_edit.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\version_set.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n-    <ClInclude Include=\"src\\leveldb\\db\\write_batch_internal.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n     <ClInclude Include=\"src\\compat\\byteswap.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>"
      },
      {
        "sha": "71d87a4eeb60b9599e6a7a23d61a659c7befa553",
        "filename": "src/leveldb/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/.gitignore?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,13 +0,0 @@\n-build_config.mk\n-*.a\n-*.o\n-*.dylib*\n-*.so\n-*.so.*\n-*_test\n-db_bench\n-leveldbutil\n-Release\n-Debug\n-Benchmark\n-vs2010.*"
      },
      {
        "sha": "f5bd74c4541263e5df4e598158879d78edb51cda",
        "filename": "src/leveldb/.travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/.travis.yml?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,13 +0,0 @@\n-language: cpp\n-compiler:\n-- clang\n-- gcc\n-os:\n-- linux\n-- osx\n-sudo: false\n-before_install:\n-- echo $LANG\n-- echo $LC_ALL\n-script:\n-- make -j 4 check"
      },
      {
        "sha": "2439d7a45299f2aadc9bb99512c1aaa6300b02a7",
        "filename": "src/leveldb/AUTHORS",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/AUTHORS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/AUTHORS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/AUTHORS?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,12 +0,0 @@\n-# Names should be added to this file like so:\n-# Name or Organization <email address>\n-\n-Google Inc.\n-\n-# Initial version authors:\n-Jeffrey Dean <jeff@google.com>\n-Sanjay Ghemawat <sanjay@google.com>\n-\n-# Partial list of contributors:\n-Kevin Regan <kevin.d.regan@gmail.com>\n-Johan Bilien <jobi@litl.com>"
      },
      {
        "sha": "cd600ff46b8802d990967397a67fbc96fdc4aca2",
        "filename": "src/leveldb/CONTRIBUTING.md",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/CONTRIBUTING.md?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,36 +0,0 @@\n-# Contributing\n-\n-We'd love to accept your code patches! However, before we can take them, we\n-have to jump a couple of legal hurdles.\n-\n-## Contributor License Agreements\n-\n-Please fill out either the individual or corporate Contributor License\n-Agreement as appropriate.\n-\n-* If you are an individual writing original source code and you're sure you\n-own the intellectual property, then sign an [individual CLA](https://developers.google.com/open-source/cla/individual).\n-* If you work for a company that wants to allow you to contribute your work,\n-then sign a [corporate CLA](https://developers.google.com/open-source/cla/corporate).\n-\n-Follow either of the two links above to access the appropriate CLA and\n-instructions for how to sign and return it.\n-\n-## Submitting a Patch\n-\n-1. Sign the contributors license agreement above.\n-2. Decide which code you want to submit. A submission should be a set of changes\n-that addresses one issue in the [issue tracker](https://github.com/google/leveldb/issues).\n-Please don't mix more than one logical change per submission, because it makes\n-the history hard to follow. If you want to make a change\n-(e.g. add a sample or feature) that doesn't have a corresponding issue in the\n-issue tracker, please create one.\n-3. **Submitting**: When you are ready to submit, send us a Pull Request. Be\n-sure to include the issue number you fixed and the name you used to sign\n-the CLA.\n-\n-## Writing Code ##\n-\n-If your contribution contains code, please make sure that it follows \n-[the style guide](http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml).\n-Otherwise we will have to ask you to make changes, and that's no fun for anyone."
      },
      {
        "sha": "8e80208cd72b3225c87d9111c4d7cab13af1c2ac",
        "filename": "src/leveldb/LICENSE",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/LICENSE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/LICENSE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/LICENSE?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,27 +0,0 @@\n-Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are\n-met:\n-\n-   * Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-   * Redistributions in binary form must reproduce the above\n-copyright notice, this list of conditions and the following disclaimer\n-in the documentation and/or other materials provided with the\n-distribution.\n-   * Neither the name of Google Inc. nor the names of its\n-contributors may be used to endorse or promote products derived from\n-this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "sha": "07a5a1ead6fd8a3b6eb45f0ef5481c5787f3fd78",
        "filename": "src/leveldb/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 414,
        "changes": 414,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,414 +0,0 @@\n-# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-# Use of this source code is governed by a BSD-style license that can be\n-# found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#-----------------------------------------------\n-# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n-# to switch between compilation modes.\n-\n-# (A) Production use (optimized mode)\n-OPT ?= -O2 -DNDEBUG\n-# (B) Debug mode, w/ full line-level debugging symbols\n-# OPT ?= -g2\n-# (C) Profiling mode: opt, but w/debugging symbols\n-# OPT ?= -O2 -g2 -DNDEBUG\n-#-----------------------------------------------\n-\n-# detect what platform we're building on\n-$(shell CC=\"$(CC)\" CXX=\"$(CXX)\" TARGET_OS=\"$(TARGET_OS)\" \\\n-    ./build_detect_platform build_config.mk ./)\n-# this file is generated by the previous line to set build flags and sources\n-include build_config.mk\n-\n-TESTS = \\\n-\tdb/autocompact_test \\\n-\tdb/c_test \\\n-\tdb/corruption_test \\\n-\tdb/db_test \\\n-\tdb/dbformat_test \\\n-\tdb/fault_injection_test \\\n-\tdb/filename_test \\\n-\tdb/log_test \\\n-\tdb/recovery_test \\\n-\tdb/skiplist_test \\\n-\tdb/version_edit_test \\\n-\tdb/version_set_test \\\n-\tdb/write_batch_test \\\n-\thelpers/memenv/memenv_test \\\n-\tissues/issue178_test \\\n-\tissues/issue200_test \\\n-\ttable/filter_block_test \\\n-\ttable/table_test \\\n-\tutil/arena_test \\\n-\tutil/bloom_test \\\n-\tutil/cache_test \\\n-\tutil/coding_test \\\n-\tutil/crc32c_test \\\n-\tutil/env_test \\\n-\tutil/hash_test\n-\n-UTILS = \\\n-\tdb/db_bench \\\n-\tdb/leveldbutil\n-\n-# Put the object files in a subdirectory, but the application at the top of the object dir.\n-PROGNAMES := $(notdir $(TESTS) $(UTILS))\n-\n-# On Linux may need libkyotocabinet-dev for dependency.\n-BENCHMARKS = \\\n-\tdoc/bench/db_bench_sqlite3 \\\n-\tdoc/bench/db_bench_tree_db\n-\n-CFLAGS += -I. -I./include $(PLATFORM_CCFLAGS) $(OPT)\n-CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT)\n-\n-LDFLAGS += $(PLATFORM_LDFLAGS)\n-LIBS += $(PLATFORM_LIBS)\n-\n-SIMULATOR_OUTDIR=out-ios-x86\n-DEVICE_OUTDIR=out-ios-arm\n-\n-ifeq ($(PLATFORM), IOS)\n-# Note: iOS should probably be using libtool, not ar.\n-AR=xcrun ar\n-SIMULATORSDK=$(shell xcrun -sdk iphonesimulator --show-sdk-path)\n-DEVICESDK=$(shell xcrun -sdk iphoneos --show-sdk-path)\n-DEVICE_CFLAGS = -isysroot \"$(DEVICESDK)\" -arch armv6 -arch armv7 -arch armv7s -arch arm64\n-SIMULATOR_CFLAGS = -isysroot \"$(SIMULATORSDK)\" -arch i686 -arch x86_64\n-STATIC_OUTDIR=out-ios-universal\n-else\n-STATIC_OUTDIR=out-static\n-SHARED_OUTDIR=out-shared\n-STATIC_PROGRAMS := $(addprefix $(STATIC_OUTDIR)/, $(PROGNAMES))\n-SHARED_PROGRAMS := $(addprefix $(SHARED_OUTDIR)/, db_bench)\n-endif\n-\n-STATIC_LIBOBJECTS := $(addprefix $(STATIC_OUTDIR)/, $(SOURCES:.cc=.o))\n-STATIC_MEMENVOBJECTS := $(addprefix $(STATIC_OUTDIR)/, $(MEMENV_SOURCES:.cc=.o))\n-\n-DEVICE_LIBOBJECTS := $(addprefix $(DEVICE_OUTDIR)/, $(SOURCES:.cc=.o))\n-DEVICE_MEMENVOBJECTS := $(addprefix $(DEVICE_OUTDIR)/, $(MEMENV_SOURCES:.cc=.o))\n-\n-SIMULATOR_LIBOBJECTS := $(addprefix $(SIMULATOR_OUTDIR)/, $(SOURCES:.cc=.o))\n-SIMULATOR_MEMENVOBJECTS := $(addprefix $(SIMULATOR_OUTDIR)/, $(MEMENV_SOURCES:.cc=.o))\n-\n-SHARED_LIBOBJECTS := $(addprefix $(SHARED_OUTDIR)/, $(SOURCES:.cc=.o))\n-SHARED_MEMENVOBJECTS := $(addprefix $(SHARED_OUTDIR)/, $(MEMENV_SOURCES:.cc=.o))\n-\n-TESTUTIL := $(STATIC_OUTDIR)/util/testutil.o\n-TESTHARNESS := $(STATIC_OUTDIR)/util/testharness.o $(TESTUTIL)\n-\n-STATIC_TESTOBJS := $(addprefix $(STATIC_OUTDIR)/, $(addsuffix .o, $(TESTS)))\n-STATIC_UTILOBJS := $(addprefix $(STATIC_OUTDIR)/, $(addsuffix .o, $(UTILS)))\n-STATIC_ALLOBJS := $(STATIC_LIBOBJECTS) $(STATIC_MEMENVOBJECTS) $(STATIC_TESTOBJS) $(STATIC_UTILOBJS) $(TESTHARNESS)\n-DEVICE_ALLOBJS := $(DEVICE_LIBOBJECTS) $(DEVICE_MEMENVOBJECTS)\n-SIMULATOR_ALLOBJS := $(SIMULATOR_LIBOBJECTS) $(SIMULATOR_MEMENVOBJECTS)\n-\n-default: all\n-\n-# Should we build shared libraries?\n-ifneq ($(PLATFORM_SHARED_EXT),)\n-\n-# Many leveldb test apps use non-exported API's. Only build a subset for testing.\n-SHARED_ALLOBJS := $(SHARED_LIBOBJECTS) $(SHARED_MEMENVOBJECTS) $(TESTHARNESS)\n-\n-ifneq ($(PLATFORM_SHARED_VERSIONED),true)\n-SHARED_LIB1 = libleveldb.$(PLATFORM_SHARED_EXT)\n-SHARED_LIB2 = $(SHARED_LIB1)\n-SHARED_LIB3 = $(SHARED_LIB1)\n-SHARED_LIBS = $(SHARED_LIB1)\n-SHARED_MEMENVLIB = $(SHARED_OUTDIR)/libmemenv.a\n-else\n-# Update db.h if you change these.\n-SHARED_VERSION_MAJOR = 1\n-SHARED_VERSION_MINOR = 19\n-SHARED_LIB1 = libleveldb.$(PLATFORM_SHARED_EXT)\n-SHARED_LIB2 = $(SHARED_LIB1).$(SHARED_VERSION_MAJOR)\n-SHARED_LIB3 = $(SHARED_LIB1).$(SHARED_VERSION_MAJOR).$(SHARED_VERSION_MINOR)\n-SHARED_LIBS = $(SHARED_OUTDIR)/$(SHARED_LIB1) $(SHARED_OUTDIR)/$(SHARED_LIB2) $(SHARED_OUTDIR)/$(SHARED_LIB3)\n-$(SHARED_OUTDIR)/$(SHARED_LIB1): $(SHARED_OUTDIR)/$(SHARED_LIB3)\n-\tln -fs $(SHARED_LIB3) $(SHARED_OUTDIR)/$(SHARED_LIB1)\n-$(SHARED_OUTDIR)/$(SHARED_LIB2): $(SHARED_OUTDIR)/$(SHARED_LIB3)\n-\tln -fs $(SHARED_LIB3) $(SHARED_OUTDIR)/$(SHARED_LIB2)\n-SHARED_MEMENVLIB = $(SHARED_OUTDIR)/libmemenv.a\n-endif\n-\n-$(SHARED_OUTDIR)/$(SHARED_LIB3): $(SHARED_LIBOBJECTS)\n-\t$(CXX) $(LDFLAGS) $(PLATFORM_SHARED_LDFLAGS)$(SHARED_LIB2) $(SHARED_LIBOBJECTS) -o $(SHARED_OUTDIR)/$(SHARED_LIB3) $(LIBS)\n-\n-endif  # PLATFORM_SHARED_EXT\n-\n-all: $(SHARED_LIBS) $(SHARED_PROGRAMS) $(STATIC_OUTDIR)/libleveldb.a $(STATIC_OUTDIR)/libmemenv.a $(STATIC_PROGRAMS)\n-\n-check: $(STATIC_PROGRAMS)\n-\tfor t in $(notdir $(TESTS)); do echo \"***** Running $$t\"; $(STATIC_OUTDIR)/$$t || exit 1; done\n-\n-clean:\n-\t-rm -rf out-static out-shared out-ios-x86 out-ios-arm out-ios-universal\n-\t-rm -f build_config.mk\n-\t-rm -rf ios-x86 ios-arm\n-\n-$(STATIC_OUTDIR):\n-\tmkdir $@\n-\n-$(STATIC_OUTDIR)/db: | $(STATIC_OUTDIR)\n-\tmkdir $@\n-\n-$(STATIC_OUTDIR)/helpers/memenv: | $(STATIC_OUTDIR)\n-\tmkdir -p $@\n-\n-$(STATIC_OUTDIR)/port: | $(STATIC_OUTDIR)\n-\tmkdir $@\n-\n-$(STATIC_OUTDIR)/table: | $(STATIC_OUTDIR)\n-\tmkdir $@\n-\n-$(STATIC_OUTDIR)/util: | $(STATIC_OUTDIR)\n-\tmkdir $@\n-\n-.PHONY: STATIC_OBJDIRS\n-STATIC_OBJDIRS: \\\n-\t$(STATIC_OUTDIR)/db \\\n-\t$(STATIC_OUTDIR)/port \\\n-\t$(STATIC_OUTDIR)/table \\\n-\t$(STATIC_OUTDIR)/util \\\n-\t$(STATIC_OUTDIR)/helpers/memenv\n-\n-$(SHARED_OUTDIR):\n-\tmkdir $@\n-\n-$(SHARED_OUTDIR)/db: | $(SHARED_OUTDIR)\n-\tmkdir $@\n-\n-$(SHARED_OUTDIR)/helpers/memenv: | $(SHARED_OUTDIR)\n-\tmkdir -p $@\n-\n-$(SHARED_OUTDIR)/port: | $(SHARED_OUTDIR)\n-\tmkdir $@\n-\n-$(SHARED_OUTDIR)/table: | $(SHARED_OUTDIR)\n-\tmkdir $@\n-\n-$(SHARED_OUTDIR)/util: | $(SHARED_OUTDIR)\n-\tmkdir $@\n-\n-.PHONY: SHARED_OBJDIRS\n-SHARED_OBJDIRS: \\\n-\t$(SHARED_OUTDIR)/db \\\n-\t$(SHARED_OUTDIR)/port \\\n-\t$(SHARED_OUTDIR)/table \\\n-\t$(SHARED_OUTDIR)/util \\\n-\t$(SHARED_OUTDIR)/helpers/memenv\n-\n-$(DEVICE_OUTDIR):\n-\tmkdir $@\n-\n-$(DEVICE_OUTDIR)/db: | $(DEVICE_OUTDIR)\n-\tmkdir $@\n-\n-$(DEVICE_OUTDIR)/helpers/memenv: | $(DEVICE_OUTDIR)\n-\tmkdir -p $@\n-\n-$(DEVICE_OUTDIR)/port: | $(DEVICE_OUTDIR)\n-\tmkdir $@\n-\n-$(DEVICE_OUTDIR)/table: | $(DEVICE_OUTDIR)\n-\tmkdir $@\n-\n-$(DEVICE_OUTDIR)/util: | $(DEVICE_OUTDIR)\n-\tmkdir $@\n-\n-.PHONY: DEVICE_OBJDIRS\n-DEVICE_OBJDIRS: \\\n-\t$(DEVICE_OUTDIR)/db \\\n-\t$(DEVICE_OUTDIR)/port \\\n-\t$(DEVICE_OUTDIR)/table \\\n-\t$(DEVICE_OUTDIR)/util \\\n-\t$(DEVICE_OUTDIR)/helpers/memenv\n-\n-$(SIMULATOR_OUTDIR):\n-\tmkdir $@\n-\n-$(SIMULATOR_OUTDIR)/db: | $(SIMULATOR_OUTDIR)\n-\tmkdir $@\n-\n-$(SIMULATOR_OUTDIR)/helpers/memenv: | $(SIMULATOR_OUTDIR)\n-\tmkdir -p $@\n-\n-$(SIMULATOR_OUTDIR)/port: | $(SIMULATOR_OUTDIR)\n-\tmkdir $@\n-\n-$(SIMULATOR_OUTDIR)/table: | $(SIMULATOR_OUTDIR)\n-\tmkdir $@\n-\n-$(SIMULATOR_OUTDIR)/util: | $(SIMULATOR_OUTDIR)\n-\tmkdir $@\n-\n-.PHONY: SIMULATOR_OBJDIRS\n-SIMULATOR_OBJDIRS: \\\n-\t$(SIMULATOR_OUTDIR)/db \\\n-\t$(SIMULATOR_OUTDIR)/port \\\n-\t$(SIMULATOR_OUTDIR)/table \\\n-\t$(SIMULATOR_OUTDIR)/util \\\n-\t$(SIMULATOR_OUTDIR)/helpers/memenv\n-\n-$(STATIC_ALLOBJS): | STATIC_OBJDIRS\n-$(DEVICE_ALLOBJS): | DEVICE_OBJDIRS\n-$(SIMULATOR_ALLOBJS): | SIMULATOR_OBJDIRS\n-$(SHARED_ALLOBJS): | SHARED_OBJDIRS\n-\n-ifeq ($(PLATFORM), IOS)\n-$(DEVICE_OUTDIR)/libleveldb.a: $(DEVICE_LIBOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(DEVICE_LIBOBJECTS)\n-\n-$(SIMULATOR_OUTDIR)/libleveldb.a: $(SIMULATOR_LIBOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(SIMULATOR_LIBOBJECTS)\n-\n-$(DEVICE_OUTDIR)/libmemenv.a: $(DEVICE_MEMENVOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(DEVICE_MEMENVOBJECTS)\n-\n-$(SIMULATOR_OUTDIR)/libmemenv.a: $(SIMULATOR_MEMENVOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(SIMULATOR_MEMENVOBJECTS)\n-\n-# For iOS, create universal object libraries to be used on both the simulator and\n-# a device.\n-$(STATIC_OUTDIR)/libleveldb.a: $(STATIC_OUTDIR) $(DEVICE_OUTDIR)/libleveldb.a $(SIMULATOR_OUTDIR)/libleveldb.a\n-\tlipo -create $(DEVICE_OUTDIR)/libleveldb.a $(SIMULATOR_OUTDIR)/libleveldb.a -output $@\n-\n-$(STATIC_OUTDIR)/libmemenv.a: $(STATIC_OUTDIR) $(DEVICE_OUTDIR)/libmemenv.a $(SIMULATOR_OUTDIR)/libmemenv.a\n-\tlipo -create $(DEVICE_OUTDIR)/libmemenv.a $(SIMULATOR_OUTDIR)/libmemenv.a -output $@\n-else\n-$(STATIC_OUTDIR)/libleveldb.a:$(STATIC_LIBOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(STATIC_LIBOBJECTS)\n-\n-$(STATIC_OUTDIR)/libmemenv.a:$(STATIC_MEMENVOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(STATIC_MEMENVOBJECTS)\n-endif\n-\n-$(SHARED_MEMENVLIB):$(SHARED_MEMENVOBJECTS)\n-\trm -f $@\n-\t$(AR) -rs $@ $(SHARED_MEMENVOBJECTS)\n-\n-$(STATIC_OUTDIR)/db_bench:db/db_bench.cc $(STATIC_LIBOBJECTS) $(TESTUTIL)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/db_bench.cc $(STATIC_LIBOBJECTS) $(TESTUTIL) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/db_bench_sqlite3:doc/bench/db_bench_sqlite3.cc $(STATIC_LIBOBJECTS) $(TESTUTIL)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) doc/bench/db_bench_sqlite3.cc $(STATIC_LIBOBJECTS) $(TESTUTIL) -o $@ -lsqlite3 $(LIBS)\n-\n-$(STATIC_OUTDIR)/db_bench_tree_db:doc/bench/db_bench_tree_db.cc $(STATIC_LIBOBJECTS) $(TESTUTIL)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) doc/bench/db_bench_tree_db.cc $(STATIC_LIBOBJECTS) $(TESTUTIL) -o $@ -lkyotocabinet $(LIBS)\n-\n-$(STATIC_OUTDIR)/leveldbutil:db/leveldbutil.cc $(STATIC_LIBOBJECTS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/leveldbutil.cc $(STATIC_LIBOBJECTS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/arena_test:util/arena_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/arena_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/autocompact_test:db/autocompact_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/autocompact_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/bloom_test:util/bloom_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/bloom_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/c_test:$(STATIC_OUTDIR)/db/c_test.o $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(STATIC_OUTDIR)/db/c_test.o $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/cache_test:util/cache_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/cache_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/coding_test:util/coding_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/coding_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/corruption_test:db/corruption_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/corruption_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/crc32c_test:util/crc32c_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/crc32c_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/db_test:db/db_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/db_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/dbformat_test:db/dbformat_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/dbformat_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/env_test:util/env_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/env_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/fault_injection_test:db/fault_injection_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/fault_injection_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/filename_test:db/filename_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/filename_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/filter_block_test:table/filter_block_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) table/filter_block_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/hash_test:util/hash_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) util/hash_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/issue178_test:issues/issue178_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) issues/issue178_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/issue200_test:issues/issue200_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) issues/issue200_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/log_test:db/log_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/log_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/recovery_test:db/recovery_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/recovery_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/table_test:table/table_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) table/table_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/skiplist_test:db/skiplist_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/skiplist_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/version_edit_test:db/version_edit_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/version_edit_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/version_set_test:db/version_set_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/version_set_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/write_batch_test:db/write_batch_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) $(LDFLAGS) $(CXXFLAGS) db/write_batch_test.cc $(STATIC_LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(STATIC_OUTDIR)/memenv_test:$(STATIC_OUTDIR)/helpers/memenv/memenv_test.o $(STATIC_OUTDIR)/libmemenv.a $(STATIC_OUTDIR)/libleveldb.a $(TESTHARNESS)\n-\t$(XCRUN) $(CXX) $(LDFLAGS) $(STATIC_OUTDIR)/helpers/memenv/memenv_test.o $(STATIC_OUTDIR)/libmemenv.a $(STATIC_OUTDIR)/libleveldb.a $(TESTHARNESS) -o $@ $(LIBS)\n-\n-$(SHARED_OUTDIR)/db_bench:$(SHARED_OUTDIR)/db/db_bench.o $(SHARED_LIBS) $(TESTUTIL)\n-\t$(XCRUN) $(CXX) $(LDFLAGS) $(CXXFLAGS) $(PLATFORM_SHARED_CFLAGS) $(SHARED_OUTDIR)/db/db_bench.o $(TESTUTIL) $(SHARED_OUTDIR)/$(SHARED_LIB3) -o $@ $(LIBS)\n-\n-.PHONY: run-shared\n-run-shared: $(SHARED_OUTDIR)/db_bench\n-\tLD_LIBRARY_PATH=$(SHARED_OUTDIR) $(SHARED_OUTDIR)/db_bench\n-\n-$(SIMULATOR_OUTDIR)/%.o: %.cc\n-\txcrun -sdk iphonesimulator $(CXX) $(CXXFLAGS) $(SIMULATOR_CFLAGS) -c $< -o $@\n-\n-$(DEVICE_OUTDIR)/%.o: %.cc\n-\txcrun -sdk iphoneos $(CXX) $(CXXFLAGS) $(DEVICE_CFLAGS) -c $< -o $@\n-\n-$(SIMULATOR_OUTDIR)/%.o: %.c\n-\txcrun -sdk iphonesimulator $(CC) $(CFLAGS) $(SIMULATOR_CFLAGS) -c $< -o $@\n-\n-$(DEVICE_OUTDIR)/%.o: %.c\n-\txcrun -sdk iphoneos $(CC) $(CFLAGS) $(DEVICE_CFLAGS) -c $< -o $@\n-\n-$(STATIC_OUTDIR)/%.o: %.cc\n-\t$(CXX) $(CXXFLAGS) -c $< -o $@\n-\n-$(STATIC_OUTDIR)/%.o: %.c\n-\t$(CC) $(CFLAGS) -c $< -o $@\n-\n-$(SHARED_OUTDIR)/%.o: %.cc\n-\t$(CXX) $(CXXFLAGS) $(PLATFORM_SHARED_CFLAGS) -c $< -o $@\n-\n-$(SHARED_OUTDIR)/%.o: %.c\n-\t$(CC) $(CFLAGS) $(PLATFORM_SHARED_CFLAGS) -c $< -o $@"
      },
      {
        "sha": "3fd99242d7bbcfeffecfd01c0870f89382766baf",
        "filename": "src/leveldb/NEWS",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/NEWS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/NEWS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/NEWS?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,17 +0,0 @@\n-Release 1.2 2011-05-16\n-----------------------\n-\n-Fixes for larger databases (tested up to one billion 100-byte entries,\n-i.e., ~100GB).\n-\n-(1) Place hard limit on number of level-0 files.  This fixes errors\n-of the form \"too many open files\".\n-\n-(2) Fixed memtable management.  Before the fix, a heavy write burst\n-could cause unbounded memory usage.\n-\n-A fix for a logging bug where the reader would incorrectly complain\n-about corruption.\n-\n-Allow public access to WriteBatch contents so that users can easily\n-wrap a DB."
      },
      {
        "sha": "c75b185e0e7466a3eba439b571d37cdb63b7e660",
        "filename": "src/leveldb/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 173,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/README.md?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,173 +0,0 @@\n-**LevelDB is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.**\n-\n-[![Build Status](https://travis-ci.org/google/leveldb.svg?branch=master)](https://travis-ci.org/google/leveldb)\n-\n-Authors: Sanjay Ghemawat (sanjay@google.com) and Jeff Dean (jeff@google.com)\n-\n-# Features\n-  * Keys and values are arbitrary byte arrays.\n-  * Data is stored sorted by key.\n-  * Callers can provide a custom comparison function to override the sort order.\n-  * The basic operations are `Put(key,value)`, `Get(key)`, `Delete(key)`.\n-  * Multiple changes can be made in one atomic batch.\n-  * Users can create a transient snapshot to get a consistent view of data.\n-  * Forward and backward iteration is supported over the data.\n-  * Data is automatically compressed using the [Snappy compression library](http://google.github.io/snappy/).\n-  * External activity (file system operations etc.) is relayed through a virtual interface so users can customize the operating system interactions.\n-\n-# Documentation\n-  [LevelDB library documentation](https://rawgit.com/google/leveldb/master/doc/index.html) is online and bundled with the source code.\n-\n-\n-# Limitations\n-  * This is not a SQL database.  It does not have a relational data model, it does not support SQL queries, and it has no support for indexes.\n-  * Only a single process (possibly multi-threaded) can access a particular database at a time.\n-  * There is no client-server support builtin to the library.  An application that needs such support will have to wrap their own server around the library.\n-\n-# Contributing to the leveldb Project\n-The leveldb project welcomes contributions. leveldb's primary goal is to be\n-a reliable and fast key/value store. Changes that are in line with the\n-features/limitations outlined above, and meet the requirements below,\n-will be considered.\n-\n-Contribution requirements:\n-\n-1. **POSIX only**. We _generally_ will only accept changes that are both\n-   compiled, and tested on a POSIX platform - usually Linux. Very small\n-   changes will sometimes be accepted, but consider that more of an\n-   exception than the rule.\n-\n-2. **Stable API**. We strive very hard to maintain a stable API. Changes that\n-   require changes for projects using leveldb _might_ be rejected without\n-   sufficient benefit to the project.\n-\n-3. **Tests**: All changes must be accompanied by a new (or changed) test, or\n-   a sufficient explanation as to why a new (or changed) test is not required.\n-\n-## Submitting a Pull Request\n-Before any pull request will be accepted the author must first sign a\n-Contributor License Agreement (CLA) at https://cla.developers.google.com/.\n-\n-In order to keep the commit timeline linear\n-[squash](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Squashing-Commits)\n-your changes down to a single commit and [rebase](https://git-scm.com/docs/git-rebase)\n-on google/leveldb/master. This keeps the commit timeline linear and more easily sync'ed\n-with the internal repository at Google. More information at GitHub's\n-[About Git rebase](https://help.github.com/articles/about-git-rebase/) page.\n-\n-# Performance\n-\n-Here is a performance report (with explanations) from the run of the\n-included db_bench program.  The results are somewhat noisy, but should\n-be enough to get a ballpark performance estimate.\n-\n-## Setup\n-\n-We use a database with a million entries.  Each entry has a 16 byte\n-key, and a 100 byte value.  Values used by the benchmark compress to\n-about half their original size.\n-\n-    LevelDB:    version 1.1\n-    Date:       Sun May  1 12:11:26 2011\n-    CPU:        4 x Intel(R) Core(TM)2 Quad CPU    Q6600  @ 2.40GHz\n-    CPUCache:   4096 KB\n-    Keys:       16 bytes each\n-    Values:     100 bytes each (50 bytes after compression)\n-    Entries:    1000000\n-    Raw Size:   110.6 MB (estimated)\n-    File Size:  62.9 MB (estimated)\n-\n-## Write performance\n-\n-The \"fill\" benchmarks create a brand new database, in either\n-sequential, or random order.  The \"fillsync\" benchmark flushes data\n-from the operating system to the disk after every operation; the other\n-write operations leave the data sitting in the operating system buffer\n-cache for a while.  The \"overwrite\" benchmark does random writes that\n-update existing keys in the database.\n-\n-    fillseq      :       1.765 micros/op;   62.7 MB/s\n-    fillsync     :     268.409 micros/op;    0.4 MB/s (10000 ops)\n-    fillrandom   :       2.460 micros/op;   45.0 MB/s\n-    overwrite    :       2.380 micros/op;   46.5 MB/s\n-\n-Each \"op\" above corresponds to a write of a single key/value pair.\n-I.e., a random write benchmark goes at approximately 400,000 writes per second.\n-\n-Each \"fillsync\" operation costs much less (0.3 millisecond)\n-than a disk seek (typically 10 milliseconds).  We suspect that this is\n-because the hard disk itself is buffering the update in its memory and\n-responding before the data has been written to the platter.  This may\n-or may not be safe based on whether or not the hard disk has enough\n-power to save its memory in the event of a power failure.\n-\n-## Read performance\n-\n-We list the performance of reading sequentially in both the forward\n-and reverse direction, and also the performance of a random lookup.\n-Note that the database created by the benchmark is quite small.\n-Therefore the report characterizes the performance of leveldb when the\n-working set fits in memory.  The cost of reading a piece of data that\n-is not present in the operating system buffer cache will be dominated\n-by the one or two disk seeks needed to fetch the data from disk.\n-Write performance will be mostly unaffected by whether or not the\n-working set fits in memory.\n-\n-    readrandom   :      16.677 micros/op;  (approximately 60,000 reads per second)\n-    readseq      :       0.476 micros/op;  232.3 MB/s\n-    readreverse  :       0.724 micros/op;  152.9 MB/s\n-\n-LevelDB compacts its underlying storage data in the background to\n-improve read performance.  The results listed above were done\n-immediately after a lot of random writes.  The results after\n-compactions (which are usually triggered automatically) are better.\n-\n-    readrandom   :      11.602 micros/op;  (approximately 85,000 reads per second)\n-    readseq      :       0.423 micros/op;  261.8 MB/s\n-    readreverse  :       0.663 micros/op;  166.9 MB/s\n-\n-Some of the high cost of reads comes from repeated decompression of blocks\n-read from disk.  If we supply enough cache to the leveldb so it can hold the\n-uncompressed blocks in memory, the read performance improves again:\n-\n-    readrandom   :       9.775 micros/op;  (approximately 100,000 reads per second before compaction)\n-    readrandom   :       5.215 micros/op;  (approximately 190,000 reads per second after compaction)\n-\n-## Repository contents\n-\n-See doc/index.html for more explanation. See doc/impl.html for a brief overview of the implementation.\n-\n-The public interface is in include/*.h.  Callers should not include or\n-rely on the details of any other header files in this package.  Those\n-internal APIs may be changed without warning.\n-\n-Guide to header files:\n-\n-* **include/db.h**: Main interface to the DB: Start here\n-\n-* **include/options.h**: Control over the behavior of an entire database,\n-and also control over the behavior of individual reads and writes.\n-\n-* **include/comparator.h**: Abstraction for user-specified comparison function. \n-If you want just bytewise comparison of keys, you can use the default\n-comparator, but clients can write their own comparator implementations if they\n-want custom ordering (e.g. to handle different character encodings, etc.)\n-\n-* **include/iterator.h**: Interface for iterating over data. You can get\n-an iterator from a DB object.\n-\n-* **include/write_batch.h**: Interface for atomically applying multiple\n-updates to a database.\n-\n-* **include/slice.h**: A simple module for maintaining a pointer and a\n-length into some other byte array.\n-\n-* **include/status.h**: Status is returned from many of the public interfaces\n-and is used to report success and various kinds of errors.\n-\n-* **include/env.h**: \n-Abstraction of the OS environment.  A posix implementation of this interface is\n-in util/env_posix.cc\n-\n-* **include/table.h, include/table_builder.h**: Lower-level modules that most\n-clients probably won't use directly"
      },
      {
        "sha": "e603c07137f1ea198a3de9ca3bbb369e1c069f61",
        "filename": "src/leveldb/TODO",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/TODO",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/TODO",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/TODO?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,14 +0,0 @@\n-ss\n-- Stats\n-\n-db\n-- Maybe implement DB::BulkDeleteForRange(start_key, end_key)\n-  that would blow away files whose ranges are entirely contained\n-  within [start_key..end_key]?  For Chrome, deletion of obsolete\n-  object stores, etc. can be done in the background anyway, so\n-  probably not that important.\n-- There have been requests for MultiGet.\n-\n-After a range is completely deleted, what gets rid of the\n-corresponding files if we do no future changes to that range.  Make\n-the conditions for triggering compactions fire in more situations?"
      },
      {
        "sha": "5b76c2448fe1e475b97d12235bdff53b857557cf",
        "filename": "src/leveldb/WINDOWS.md",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/WINDOWS.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/WINDOWS.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/WINDOWS.md?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,39 +0,0 @@\n-# Building LevelDB On Windows\n-\n-## Prereqs \n-\n-Install the [Windows Software Development Kit version 7.1](http://www.microsoft.com/downloads/dlx/en-us/listdetailsview.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b).\n-\n-Download and extract the [Snappy source distribution](http://snappy.googlecode.com/files/snappy-1.0.5.tar.gz)\n-\n-1. Open the \"Windows SDK 7.1 Command Prompt\" :\n-   Start Menu -> \"Microsoft Windows SDK v7.1\" > \"Windows SDK 7.1 Command Prompt\"\n-2. Change the directory to the leveldb project\n-\n-## Building the Static lib \n-\n-* 32 bit Version \n-\n-        setenv /x86\n-        msbuild.exe /p:Configuration=Release /p:Platform=Win32 /p:Snappy=..\\snappy-1.0.5\n-\n-* 64 bit Version \n-\n-        setenv /x64\n-        msbuild.exe /p:Configuration=Release /p:Platform=x64 /p:Snappy=..\\snappy-1.0.5\n-\n-\n-## Building and Running the Benchmark app\n-\n-* 32 bit Version \n-\n-\t    setenv /x86\n-\t    msbuild.exe /p:Configuration=Benchmark /p:Platform=Win32 /p:Snappy=..\\snappy-1.0.5\n-\t\tBenchmark\\leveldb.exe\n-\n-* 64 bit Version \n-\n-\t    setenv /x64\n-\t    msbuild.exe /p:Configuration=Benchmark /p:Platform=x64 /p:Snappy=..\\snappy-1.0.5\n-\t    x64\\Benchmark\\leveldb.exe\n-"
      },
      {
        "sha": "d7edab1d87bb50cb1b882db87ae2bae22959c9f7",
        "filename": "src/leveldb/build_detect_platform",
        "status": "removed",
        "additions": 0,
        "deletions": 231,
        "changes": 231,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,231 +0,0 @@\n-#!/bin/sh\n-#\n-# Detects OS we're compiling on and outputs a file specified by the first\n-# argument, which in turn gets read while processing Makefile.\n-#\n-# The output will set the following variables:\n-#   CC                          C Compiler path\n-#   CXX                         C++ Compiler path\n-#   PLATFORM_LDFLAGS            Linker flags\n-#   PLATFORM_LIBS               Libraries flags\n-#   PLATFORM_SHARED_EXT         Extension for shared libraries\n-#   PLATFORM_SHARED_LDFLAGS     Flags for building shared library\n-#                               This flag is embedded just before the name\n-#                               of the shared library without intervening spaces\n-#   PLATFORM_SHARED_CFLAGS      Flags for compiling objects for shared library\n-#   PLATFORM_CCFLAGS            C compiler flags\n-#   PLATFORM_CXXFLAGS           C++ compiler flags.  Will contain:\n-#   PLATFORM_SHARED_VERSIONED   Set to 'true' if platform supports versioned\n-#                               shared libraries, empty otherwise.\n-#\n-# The PLATFORM_CCFLAGS and PLATFORM_CXXFLAGS might include the following:\n-#\n-#       -DLEVELDB_ATOMIC_PRESENT     if <atomic> is present\n-#       -DLEVELDB_PLATFORM_POSIX     for Posix-based platforms\n-#       -DSNAPPY                     if the Snappy library is present\n-#\n-\n-OUTPUT=$1\n-PREFIX=$2\n-if test -z \"$OUTPUT\" || test -z \"$PREFIX\"; then\n-  echo \"usage: $0 <output-filename> <directory_prefix>\" >&2\n-  exit 1\n-fi\n-\n-# Delete existing output, if it exists\n-rm -f $OUTPUT\n-touch $OUTPUT\n-\n-if test -z \"$CC\"; then\n-    CC=cc\n-fi\n-\n-if test -z \"$CXX\"; then\n-    CXX=g++\n-fi\n-\n-if test -z \"$TMPDIR\"; then\n-    TMPDIR=/tmp\n-fi\n-\n-# Detect OS\n-if test -z \"$TARGET_OS\"; then\n-    TARGET_OS=`uname -s`\n-fi\n-\n-COMMON_FLAGS=\n-CROSS_COMPILE=\n-PLATFORM_CCFLAGS=\n-PLATFORM_CXXFLAGS=\n-PLATFORM_LDFLAGS=\n-PLATFORM_LIBS=\n-PLATFORM_SHARED_EXT=\"so\"\n-PLATFORM_SHARED_LDFLAGS=\"-shared -Wl,-soname -Wl,\"\n-PLATFORM_SHARED_CFLAGS=\"-fPIC\"\n-PLATFORM_SHARED_VERSIONED=true\n-\n-MEMCMP_FLAG=\n-if [ \"$CXX\" = \"g++\" ]; then\n-    # Use libc's memcmp instead of GCC's memcmp.  This results in ~40%\n-    # performance improvement on readrandom under gcc 4.4.3 on Linux/x86.\n-    MEMCMP_FLAG=\"-fno-builtin-memcmp\"\n-fi\n-\n-case \"$TARGET_OS\" in\n-    CYGWIN_*)\n-        PLATFORM=OS_LINUX\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -lpthread -DOS_LINUX -DCYGWIN\"\n-        PLATFORM_LDFLAGS=\"-lpthread\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    Darwin)\n-        PLATFORM=OS_MACOSX\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -DOS_MACOSX\"\n-        PLATFORM_SHARED_EXT=dylib\n-        [ -z \"$INSTALL_PATH\" ] && INSTALL_PATH=`pwd`\n-        PLATFORM_SHARED_LDFLAGS=\"-dynamiclib -install_name $INSTALL_PATH/\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    Linux)\n-        PLATFORM=OS_LINUX\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -pthread -DOS_LINUX\"\n-        PLATFORM_LDFLAGS=\"-pthread\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    SunOS)\n-        PLATFORM=OS_SOLARIS\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_SOLARIS\"\n-        PLATFORM_LIBS=\"-lpthread -lrt\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    FreeBSD)\n-        PLATFORM=OS_FREEBSD\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_FREEBSD\"\n-        PLATFORM_LIBS=\"-lpthread\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    GNU/kFreeBSD)\n-        PLATFORM=OS_KFREEBSD\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_KFREEBSD\"\n-        PLATFORM_LIBS=\"-lpthread\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    NetBSD)\n-        PLATFORM=OS_NETBSD\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_NETBSD\"\n-        PLATFORM_LIBS=\"-lpthread -lgcc_s\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    OpenBSD)\n-        PLATFORM=OS_OPENBSD\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_OPENBSD\"\n-        PLATFORM_LDFLAGS=\"-pthread\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    DragonFly)\n-        PLATFORM=OS_DRAGONFLYBSD\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_DRAGONFLYBSD\"\n-        PLATFORM_LIBS=\"-lpthread\"\n-        PORT_FILE=port/port_posix.cc\n-        ;;\n-    OS_ANDROID_CROSSCOMPILE)\n-        PLATFORM=OS_ANDROID\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_ANDROID -DLEVELDB_PLATFORM_POSIX\"\n-        PLATFORM_LDFLAGS=\"\"  # All pthread features are in the Android C library\n-        PORT_FILE=port/port_posix.cc\n-        CROSS_COMPILE=true\n-        ;;\n-    HP-UX)\n-        PLATFORM=OS_HPUX\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -D_REENTRANT -DOS_HPUX\"\n-        PLATFORM_LDFLAGS=\"-pthread\"\n-        PORT_FILE=port/port_posix.cc\n-        # man ld: +h internal_name\n-        PLATFORM_SHARED_LDFLAGS=\"-shared -Wl,+h -Wl,\"\n-        ;;\n-    IOS)\n-        PLATFORM=IOS\n-        COMMON_FLAGS=\"$MEMCMP_FLAG -DOS_MACOSX\"\n-        [ -z \"$INSTALL_PATH\" ] && INSTALL_PATH=`pwd`\n-        PORT_FILE=port/port_posix.cc\n-        PLATFORM_SHARED_EXT=\n-        PLATFORM_SHARED_LDFLAGS=\n-        PLATFORM_SHARED_CFLAGS=\n-        PLATFORM_SHARED_VERSIONED=\n-        ;;\n-    OS_WINDOWS_CROSSCOMPILE | NATIVE_WINDOWS)\n-        PLATFORM=OS_WINDOWS\n-        COMMON_FLAGS=\"-fno-builtin-memcmp -D_REENTRANT -DOS_WINDOWS -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1\"\n-        PLATFORM_SOURCES=\"util/env_win.cc\"\n-        PLATFORM_LIBS=\"-lshlwapi\"\n-        PORT_FILE=port/port_win.cc\n-        CROSS_COMPILE=true\n-        ;;\n-    *)\n-        echo \"Unknown platform!\" >&2\n-        exit 1\n-esac\n-\n-# We want to make a list of all cc files within util, db, table, and helpers\n-# except for the test and benchmark files. By default, find will output a list\n-# of all files matching either rule, so we need to append -print to make the\n-# prune take effect.\n-DIRS=\"$PREFIX/db $PREFIX/util $PREFIX/table\"\n-\n-set -f # temporarily disable globbing so that our patterns aren't expanded\n-PRUNE_TEST=\"-name *test*.cc -prune\"\n-PRUNE_BENCH=\"-name *_bench.cc -prune\"\n-PRUNE_TOOL=\"-name leveldbutil.cc -prune\"\n-PORTABLE_FILES=`find $DIRS $PRUNE_TEST -o $PRUNE_BENCH -o $PRUNE_TOOL -o -name '*.cc' -print | sort | sed \"s,^$PREFIX/,,\" | tr \"\\n\" \" \"`\n-\n-set +f # re-enable globbing\n-\n-# The sources consist of the portable files, plus the platform-specific port\n-# file.\n-echo \"SOURCES=$PORTABLE_FILES $PORT_FILE\" >> $OUTPUT\n-echo \"MEMENV_SOURCES=helpers/memenv/memenv.cc\" >> $OUTPUT\n-\n-if [ \"$CROSS_COMPILE\" = \"true\" ]; then\n-    # Cross-compiling; do not try any compilation tests.\n-    true\n-else\n-    CXXOUTPUT=\"${TMPDIR}/leveldb_build_detect_platform-cxx.$$\"\n-\n-    # If -std=c++0x works, use <atomic> as fallback for when memory barriers\n-    # are not available.\n-    $CXX $CXXFLAGS -std=c++0x -x c++ - -o $CXXOUTPUT 2>/dev/null  <<EOF\n-      #include <atomic>\n-      int main() {}\n-EOF\n-    if [ \"$?\" = 0 ]; then\n-        COMMON_FLAGS=\"$COMMON_FLAGS -DLEVELDB_PLATFORM_POSIX -DLEVELDB_ATOMIC_PRESENT\"\n-        PLATFORM_CXXFLAGS=\"-std=c++0x\"\n-    else\n-        COMMON_FLAGS=\"$COMMON_FLAGS -DLEVELDB_PLATFORM_POSIX\"\n-    fi\n-\n-    # Test whether tcmalloc is available\n-    $CXX $CXXFLAGS -x c++ - -o $CXXOUTPUT -ltcmalloc 2>/dev/null  <<EOF\n-      int main() {}\n-EOF\n-    if [ \"$?\" = 0 ]; then\n-        PLATFORM_LIBS=\"$PLATFORM_LIBS -ltcmalloc\"\n-    fi\n-\n-    rm -f $CXXOUTPUT 2>/dev/null\n-fi\n-\n-PLATFORM_CCFLAGS=\"$PLATFORM_CCFLAGS $COMMON_FLAGS\"\n-PLATFORM_CXXFLAGS=\"$PLATFORM_CXXFLAGS $COMMON_FLAGS\"\n-\n-echo \"CC=$CC\" >> $OUTPUT\n-echo \"CXX=$CXX\" >> $OUTPUT\n-echo \"PLATFORM=$PLATFORM\" >> $OUTPUT\n-echo \"PLATFORM_LDFLAGS=$PLATFORM_LDFLAGS\" >> $OUTPUT\n-echo \"PLATFORM_LIBS=$PLATFORM_LIBS\" >> $OUTPUT\n-echo \"PLATFORM_CCFLAGS=$PLATFORM_CCFLAGS\" >> $OUTPUT\n-echo \"PLATFORM_CXXFLAGS=$PLATFORM_CXXFLAGS\" >> $OUTPUT\n-echo \"PLATFORM_SHARED_CFLAGS=$PLATFORM_SHARED_CFLAGS\" >> $OUTPUT\n-echo \"PLATFORM_SHARED_EXT=$PLATFORM_SHARED_EXT\" >> $OUTPUT\n-echo \"PLATFORM_SHARED_LDFLAGS=$PLATFORM_SHARED_LDFLAGS\" >> $OUTPUT\n-echo \"PLATFORM_SHARED_VERSIONED=$PLATFORM_SHARED_VERSIONED\" >> $OUTPUT"
      },
      {
        "sha": "d20a2362c30c49d9cc2b1e2f65a2f829905eb3f8",
        "filename": "src/leveldb/db/autocompact_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 118,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/autocompact_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/autocompact_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/autocompact_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,118 +0,0 @@\n-// Copyright (c) 2013 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"leveldb/db.h\"\n-#include \"db/db_impl.h\"\n-#include \"leveldb/cache.h\"\n-#include \"util/testharness.h\"\n-#include \"util/testutil.h\"\n-\n-namespace leveldb {\n-\n-class AutoCompactTest {\n- public:\n-  std::string dbname_;\n-  Cache* tiny_cache_;\n-  Options options_;\n-  DB* db_;\n-\n-  AutoCompactTest() {\n-    dbname_ = test::TmpDir() + \"/autocompact_test\";\n-    tiny_cache_ = NewLRUCache(100);\n-    options_.block_cache = tiny_cache_;\n-    DestroyDB(dbname_, options_);\n-    options_.create_if_missing = true;\n-    options_.compression = kNoCompression;\n-    ASSERT_OK(DB::Open(options_, dbname_, &db_));\n-  }\n-\n-  ~AutoCompactTest() {\n-    delete db_;\n-    DestroyDB(dbname_, Options());\n-    delete tiny_cache_;\n-  }\n-\n-  std::string Key(int i) {\n-    char buf[100];\n-    snprintf(buf, sizeof(buf), \"key%06d\", i);\n-    return std::string(buf);\n-  }\n-\n-  uint64_t Size(const Slice& start, const Slice& limit) {\n-    Range r(start, limit);\n-    uint64_t size;\n-    db_->GetApproximateSizes(&r, 1, &size);\n-    return size;\n-  }\n-\n-  void DoReads(int n);\n-};\n-\n-static const int kValueSize = 200 * 1024;\n-static const int kTotalSize = 100 * 1024 * 1024;\n-static const int kCount = kTotalSize / kValueSize;\n-\n-// Read through the first n keys repeatedly and check that they get\n-// compacted (verified by checking the size of the key space).\n-void AutoCompactTest::DoReads(int n) {\n-  std::string value(kValueSize, 'x');\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-\n-  // Fill database\n-  for (int i = 0; i < kCount; i++) {\n-    ASSERT_OK(db_->Put(WriteOptions(), Key(i), value));\n-  }\n-  ASSERT_OK(dbi->TEST_CompactMemTable());\n-\n-  // Delete everything\n-  for (int i = 0; i < kCount; i++) {\n-    ASSERT_OK(db_->Delete(WriteOptions(), Key(i)));\n-  }\n-  ASSERT_OK(dbi->TEST_CompactMemTable());\n-\n-  // Get initial measurement of the space we will be reading.\n-  const int64_t initial_size = Size(Key(0), Key(n));\n-  const int64_t initial_other_size = Size(Key(n), Key(kCount));\n-\n-  // Read until size drops significantly.\n-  std::string limit_key = Key(n);\n-  for (int read = 0; true; read++) {\n-    ASSERT_LT(read, 100) << \"Taking too long to compact\";\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    for (iter->SeekToFirst();\n-         iter->Valid() && iter->key().ToString() < limit_key;\n-         iter->Next()) {\n-      // Drop data\n-    }\n-    delete iter;\n-    // Wait a little bit to allow any triggered compactions to complete.\n-    Env::Default()->SleepForMicroseconds(1000000);\n-    uint64_t size = Size(Key(0), Key(n));\n-    fprintf(stderr, \"iter %3d => %7.3f MB [other %7.3f MB]\\n\",\n-            read+1, size/1048576.0, Size(Key(n), Key(kCount))/1048576.0);\n-    if (size <= initial_size/10) {\n-      break;\n-    }\n-  }\n-\n-  // Verify that the size of the key space not touched by the reads\n-  // is pretty much unchanged.\n-  const int64_t final_other_size = Size(Key(n), Key(kCount));\n-  ASSERT_LE(final_other_size, initial_other_size + 1048576);\n-  ASSERT_GE(final_other_size, initial_other_size/5 - 1048576);\n-}\n-\n-TEST(AutoCompactTest, ReadAll) {\n-  DoReads(kCount);\n-}\n-\n-TEST(AutoCompactTest, ReadHalf) {\n-  DoReads(kCount/2);\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "f4198821973c94f2e28148f79a10ca2c48d8d1e6",
        "filename": "src/leveldb/db/builder.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/builder.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/builder.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/builder.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,88 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/builder.h\"\n-\n-#include \"db/filename.h\"\n-#include \"db/dbformat.h\"\n-#include \"db/table_cache.h\"\n-#include \"db/version_edit.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/iterator.h\"\n-\n-namespace leveldb {\n-\n-Status BuildTable(const std::string& dbname,\n-                  Env* env,\n-                  const Options& options,\n-                  TableCache* table_cache,\n-                  Iterator* iter,\n-                  FileMetaData* meta) {\n-  Status s;\n-  meta->file_size = 0;\n-  iter->SeekToFirst();\n-\n-  std::string fname = TableFileName(dbname, meta->number);\n-  if (iter->Valid()) {\n-    WritableFile* file;\n-    s = env->NewWritableFile(fname, &file);\n-    if (!s.ok()) {\n-      return s;\n-    }\n-\n-    TableBuilder* builder = new TableBuilder(options, file);\n-    meta->smallest.DecodeFrom(iter->key());\n-    for (; iter->Valid(); iter->Next()) {\n-      Slice key = iter->key();\n-      meta->largest.DecodeFrom(key);\n-      builder->Add(key, iter->value());\n-    }\n-\n-    // Finish and check for builder errors\n-    if (s.ok()) {\n-      s = builder->Finish();\n-      if (s.ok()) {\n-        meta->file_size = builder->FileSize();\n-        assert(meta->file_size > 0);\n-      }\n-    } else {\n-      builder->Abandon();\n-    }\n-    delete builder;\n-\n-    // Finish and check for file errors\n-    if (s.ok()) {\n-      s = file->Sync();\n-    }\n-    if (s.ok()) {\n-      s = file->Close();\n-    }\n-    delete file;\n-    file = NULL;\n-\n-    if (s.ok()) {\n-      // Verify that the table is usable\n-      Iterator* it = table_cache->NewIterator(ReadOptions(),\n-                                              meta->number,\n-                                              meta->file_size);\n-      s = it->status();\n-      delete it;\n-    }\n-  }\n-\n-  // Check for input iterator errors\n-  if (!iter->status().ok()) {\n-    s = iter->status();\n-  }\n-\n-  if (s.ok() && meta->file_size > 0) {\n-    // Keep it\n-  } else {\n-    env->DeleteFile(fname);\n-  }\n-  return s;\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "62431fcf44f4545490291d8ec1ab098c2fc2ba88",
        "filename": "src/leveldb/db/builder.h",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/builder.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/builder.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/builder.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,34 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_BUILDER_H_\n-#define STORAGE_LEVELDB_DB_BUILDER_H_\n-\n-#include \"leveldb/status.h\"\n-\n-namespace leveldb {\n-\n-struct Options;\n-struct FileMetaData;\n-\n-class Env;\n-class Iterator;\n-class TableCache;\n-class VersionEdit;\n-\n-// Build a Table file from the contents of *iter.  The generated file\n-// will be named according to meta->number.  On success, the rest of\n-// *meta will be filled with metadata about the generated table.\n-// If no data is present in *iter, meta->file_size will be set to\n-// zero, and no Table file will be produced.\n-extern Status BuildTable(const std::string& dbname,\n-                         Env* env,\n-                         const Options& options,\n-                         TableCache* table_cache,\n-                         Iterator* iter,\n-                         FileMetaData* meta);\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_BUILDER_H_"
      },
      {
        "sha": "6ea9a1f631d9e869437a319777dec8adab1b414d",
        "filename": "src/leveldb/db/c.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 600,
        "changes": 600,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/c.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/c.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/c.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,600 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"leveldb/c.h\"\n-\n-#include <stdlib.h>\n-#ifndef WIN32\n-    #include <unistd.h>\n-#endif\n-#include \"leveldb/cache.h\"\n-#include \"leveldb/comparator.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/filter_policy.h\"\n-#include \"leveldb/iterator.h\"\n-#include \"leveldb/options.h\"\n-#include \"leveldb/status.h\"\n-#include \"leveldb/write_batch.h\"\n-#ifdef WIN32\n-    #define strdup _strdup\n-#endif\n-\n-using leveldb::Cache;\n-using leveldb::Comparator;\n-using leveldb::CompressionType;\n-using leveldb::DB;\n-using leveldb::Env;\n-using leveldb::FileLock;\n-using leveldb::FilterPolicy;\n-using leveldb::Iterator;\n-using leveldb::kMajorVersion;\n-using leveldb::kMinorVersion;\n-using leveldb::Logger;\n-using leveldb::NewBloomFilterPolicy;\n-using leveldb::NewLRUCache;\n-using leveldb::Options;\n-using leveldb::RandomAccessFile;\n-using leveldb::Range;\n-using leveldb::ReadOptions;\n-using leveldb::SequentialFile;\n-using leveldb::Slice;\n-using leveldb::Snapshot;\n-using leveldb::Status;\n-using leveldb::WritableFile;\n-using leveldb::WriteBatch;\n-using leveldb::WriteOptions;\n-\n-extern \"C\" {\n-\n-struct leveldb_t              { DB*               rep; };\n-struct leveldb_iterator_t     { Iterator*         rep; };\n-struct leveldb_writebatch_t   { WriteBatch        rep; };\n-struct leveldb_snapshot_t     { const Snapshot*   rep; };\n-struct leveldb_readoptions_t  { ReadOptions       rep; };\n-struct leveldb_writeoptions_t { WriteOptions      rep; };\n-struct leveldb_options_t      { Options           rep; };\n-struct leveldb_cache_t        { Cache*            rep; };\n-struct leveldb_seqfile_t      { SequentialFile*   rep; };\n-struct leveldb_randomfile_t   { RandomAccessFile* rep; };\n-struct leveldb_writablefile_t { WritableFile*     rep; };\n-struct leveldb_logger_t       { Logger*           rep; };\n-struct leveldb_filelock_t     { FileLock*         rep; };\n-\n-struct leveldb_comparator_t : public Comparator {\n-  void* state_;\n-  void (*destructor_)(void*);\n-  int (*compare_)(\n-      void*,\n-      const char* a, size_t alen,\n-      const char* b, size_t blen);\n-  const char* (*name_)(void*);\n-\n-  virtual ~leveldb_comparator_t() {\n-    (*destructor_)(state_);\n-  }\n-\n-  virtual int Compare(const Slice& a, const Slice& b) const {\n-    return (*compare_)(state_, a.data(), a.size(), b.data(), b.size());\n-  }\n-\n-  virtual const char* Name() const {\n-    return (*name_)(state_);\n-  }\n-\n-  // No-ops since the C binding does not support key shortening methods.\n-  virtual void FindShortestSeparator(std::string*, const Slice&) const { }\n-  virtual void FindShortSuccessor(std::string* key) const { }\n-};\n-\n-struct leveldb_filterpolicy_t : public FilterPolicy {\n-  void* state_;\n-  void (*destructor_)(void*);\n-  const char* (*name_)(void*);\n-  char* (*create_)(\n-      void*,\n-      const char* const* key_array, const size_t* key_length_array,\n-      int num_keys,\n-      size_t* filter_length);\n-  unsigned char (*key_match_)(\n-      void*,\n-      const char* key, size_t length,\n-      const char* filter, size_t filter_length);\n-\n-  virtual ~leveldb_filterpolicy_t() {\n-    (*destructor_)(state_);\n-  }\n-\n-  virtual const char* Name() const {\n-    return (*name_)(state_);\n-  }\n-\n-  virtual void CreateFilter(const Slice* keys, int n, std::string* dst) const {\n-    std::vector<const char*> key_pointers(n);\n-    std::vector<size_t> key_sizes(n);\n-    for (int i = 0; i < n; i++) {\n-      key_pointers[i] = keys[i].data();\n-      key_sizes[i] = keys[i].size();\n-    }\n-    size_t len;\n-    char* filter = (*create_)(state_, &key_pointers[0], &key_sizes[0], n, &len);\n-    dst->append(filter, len);\n-    free(filter);\n-  }\n-\n-  virtual bool KeyMayMatch(const Slice& key, const Slice& filter) const {\n-    return (*key_match_)(state_, key.data(), key.size(),\n-                         filter.data(), filter.size());\n-  }\n-};\n-\n-struct leveldb_env_t {\n-  Env* rep;\n-  bool is_default;\n-};\n-\n-static bool SaveError(char** errptr, const Status& s) {\n-  assert(errptr != NULL);\n-  if (s.ok()) {\n-    return false;\n-  } else if (*errptr == NULL) {\n-    *errptr = strdup(s.ToString().c_str());\n-  } else {\n-    // TODO(sanjay): Merge with existing error?\n-    free(*errptr);\n-    *errptr = strdup(s.ToString().c_str());\n-  }\n-  return true;\n-}\n-\n-static char* CopyString(const std::string& str) {\n-  char* result = reinterpret_cast<char*>(malloc(sizeof(char) * str.size()));\n-  memcpy(result, str.data(), sizeof(char) * str.size());\n-  return result;\n-}\n-\n-leveldb_t* leveldb_open(\n-    const leveldb_options_t* options,\n-    const char* name,\n-    char** errptr) {\n-  DB* db;\n-  if (SaveError(errptr, DB::Open(options->rep, std::string(name), &db))) {\n-    return NULL;\n-  }\n-  leveldb_t* result = new leveldb_t;\n-  result->rep = db;\n-  return result;\n-}\n-\n-void leveldb_close(leveldb_t* db) {\n-  delete db->rep;\n-  delete db;\n-}\n-\n-void leveldb_put(\n-    leveldb_t* db,\n-    const leveldb_writeoptions_t* options,\n-    const char* key, size_t keylen,\n-    const char* val, size_t vallen,\n-    char** errptr) {\n-  SaveError(errptr,\n-            db->rep->Put(options->rep, Slice(key, keylen), Slice(val, vallen)));\n-}\n-\n-void leveldb_delete(\n-    leveldb_t* db,\n-    const leveldb_writeoptions_t* options,\n-    const char* key, size_t keylen,\n-    char** errptr) {\n-  SaveError(errptr, db->rep->Delete(options->rep, Slice(key, keylen)));\n-}\n-\n-\n-void leveldb_write(\n-    leveldb_t* db,\n-    const leveldb_writeoptions_t* options,\n-    leveldb_writebatch_t* batch,\n-    char** errptr) {\n-  SaveError(errptr, db->rep->Write(options->rep, &batch->rep));\n-}\n-\n-char* leveldb_get(\n-    leveldb_t* db,\n-    const leveldb_readoptions_t* options,\n-    const char* key, size_t keylen,\n-    size_t* vallen,\n-    char** errptr) {\n-  char* result = NULL;\n-  std::string tmp;\n-  Status s = db->rep->Get(options->rep, Slice(key, keylen), &tmp);\n-  if (s.ok()) {\n-    *vallen = tmp.size();\n-    result = CopyString(tmp);\n-  } else {\n-    *vallen = 0;\n-    if (!s.IsNotFound()) {\n-      SaveError(errptr, s);\n-    }\n-  }\n-  return result;\n-}\n-\n-leveldb_iterator_t* leveldb_create_iterator(\n-    leveldb_t* db,\n-    const leveldb_readoptions_t* options) {\n-  leveldb_iterator_t* result = new leveldb_iterator_t;\n-  result->rep = db->rep->NewIterator(options->rep);\n-  return result;\n-}\n-\n-const leveldb_snapshot_t* leveldb_create_snapshot(\n-    leveldb_t* db) {\n-  leveldb_snapshot_t* result = new leveldb_snapshot_t;\n-  result->rep = db->rep->GetSnapshot();\n-  return result;\n-}\n-\n-void leveldb_release_snapshot(\n-    leveldb_t* db,\n-    const leveldb_snapshot_t* snapshot) {\n-  db->rep->ReleaseSnapshot(snapshot->rep);\n-  delete snapshot;\n-}\n-\n-char* leveldb_property_value(\n-    leveldb_t* db,\n-    const char* propname) {\n-  std::string tmp;\n-  if (db->rep->GetProperty(Slice(propname), &tmp)) {\n-    // We use strdup() since we expect human readable output.\n-    return strdup(tmp.c_str());\n-  } else {\n-    return NULL;\n-  }\n-}\n-\n-void leveldb_approximate_sizes(\n-    leveldb_t* db,\n-    int num_ranges,\n-    const char* const* range_start_key, const size_t* range_start_key_len,\n-    const char* const* range_limit_key, const size_t* range_limit_key_len,\n-    uint64_t* sizes) {\n-  Range* ranges = new Range[num_ranges];\n-  for (int i = 0; i < num_ranges; i++) {\n-    ranges[i].start = Slice(range_start_key[i], range_start_key_len[i]);\n-    ranges[i].limit = Slice(range_limit_key[i], range_limit_key_len[i]);\n-  }\n-  db->rep->GetApproximateSizes(ranges, num_ranges, sizes);\n-  delete[] ranges;\n-}\n-\n-void leveldb_compact_range(\n-    leveldb_t* db,\n-    const char* start_key, size_t start_key_len,\n-    const char* limit_key, size_t limit_key_len) {\n-  Slice a, b;\n-  db->rep->CompactRange(\n-      // Pass NULL Slice if corresponding \"const char*\" is NULL\n-      (start_key ? (a = Slice(start_key, start_key_len), &a) : NULL),\n-      (limit_key ? (b = Slice(limit_key, limit_key_len), &b) : NULL));\n-}\n-\n-void leveldb_destroy_db(\n-    const leveldb_options_t* options,\n-    const char* name,\n-    char** errptr) {\n-  SaveError(errptr, DestroyDB(name, options->rep));\n-}\n-\n-void leveldb_repair_db(\n-    const leveldb_options_t* options,\n-    const char* name,\n-    char** errptr) {\n-  SaveError(errptr, RepairDB(name, options->rep));\n-}\n-\n-void leveldb_iter_destroy(leveldb_iterator_t* iter) {\n-  delete iter->rep;\n-  delete iter;\n-}\n-\n-unsigned char leveldb_iter_valid(const leveldb_iterator_t* iter) {\n-  return iter->rep->Valid();\n-}\n-\n-void leveldb_iter_seek_to_first(leveldb_iterator_t* iter) {\n-  iter->rep->SeekToFirst();\n-}\n-\n-void leveldb_iter_seek_to_last(leveldb_iterator_t* iter) {\n-  iter->rep->SeekToLast();\n-}\n-\n-void leveldb_iter_seek(leveldb_iterator_t* iter, const char* k, size_t klen) {\n-  iter->rep->Seek(Slice(k, klen));\n-}\n-\n-void leveldb_iter_next(leveldb_iterator_t* iter) {\n-  iter->rep->Next();\n-}\n-\n-void leveldb_iter_prev(leveldb_iterator_t* iter) {\n-  iter->rep->Prev();\n-}\n-\n-const char* leveldb_iter_key(const leveldb_iterator_t* iter, size_t* klen) {\n-  Slice s = iter->rep->key();\n-  *klen = s.size();\n-  return s.data();\n-}\n-\n-const char* leveldb_iter_value(const leveldb_iterator_t* iter, size_t* vlen) {\n-  Slice s = iter->rep->value();\n-  *vlen = s.size();\n-  return s.data();\n-}\n-\n-void leveldb_iter_get_error(const leveldb_iterator_t* iter, char** errptr) {\n-  SaveError(errptr, iter->rep->status());\n-}\n-\n-leveldb_writebatch_t* leveldb_writebatch_create() {\n-  return new leveldb_writebatch_t;\n-}\n-\n-void leveldb_writebatch_destroy(leveldb_writebatch_t* b) {\n-  delete b;\n-}\n-\n-void leveldb_writebatch_clear(leveldb_writebatch_t* b) {\n-  b->rep.Clear();\n-}\n-\n-void leveldb_writebatch_put(\n-    leveldb_writebatch_t* b,\n-    const char* key, size_t klen,\n-    const char* val, size_t vlen) {\n-  b->rep.Put(Slice(key, klen), Slice(val, vlen));\n-}\n-\n-void leveldb_writebatch_delete(\n-    leveldb_writebatch_t* b,\n-    const char* key, size_t klen) {\n-  b->rep.Delete(Slice(key, klen));\n-}\n-\n-void leveldb_writebatch_iterate(\n-    leveldb_writebatch_t* b,\n-    void* state,\n-    void (*put)(void*, const char* k, size_t klen, const char* v, size_t vlen),\n-    void (*deleted)(void*, const char* k, size_t klen)) {\n-  class H : public WriteBatch::Handler {\n-   public:\n-    void* state_;\n-    void (*put_)(void*, const char* k, size_t klen, const char* v, size_t vlen);\n-    void (*deleted_)(void*, const char* k, size_t klen);\n-    virtual void Put(const Slice& key, const Slice& value) {\n-      (*put_)(state_, key.data(), key.size(), value.data(), value.size());\n-    }\n-    virtual void Delete(const Slice& key) {\n-      (*deleted_)(state_, key.data(), key.size());\n-    }\n-  };\n-  H handler;\n-  handler.state_ = state;\n-  handler.put_ = put;\n-  handler.deleted_ = deleted;\n-  b->rep.Iterate(&handler);\n-}\n-\n-leveldb_options_t* leveldb_options_create() {\n-  return new leveldb_options_t;\n-}\n-\n-void leveldb_options_destroy(leveldb_options_t* options) {\n-  delete options;\n-}\n-\n-void leveldb_options_set_comparator(\n-    leveldb_options_t* opt,\n-    leveldb_comparator_t* cmp) {\n-  opt->rep.comparator = cmp;\n-}\n-\n-void leveldb_options_set_filter_policy(\n-    leveldb_options_t* opt,\n-    leveldb_filterpolicy_t* policy) {\n-  opt->rep.filter_policy = policy;\n-}\n-\n-void leveldb_options_set_create_if_missing(\n-    leveldb_options_t* opt, unsigned char v) {\n-  opt->rep.create_if_missing = v;\n-}\n-\n-void leveldb_options_set_error_if_exists(\n-    leveldb_options_t* opt, unsigned char v) {\n-  opt->rep.error_if_exists = v;\n-}\n-\n-void leveldb_options_set_paranoid_checks(\n-    leveldb_options_t* opt, unsigned char v) {\n-  opt->rep.paranoid_checks = v;\n-}\n-\n-void leveldb_options_set_env(leveldb_options_t* opt, leveldb_env_t* env) {\n-  opt->rep.env = (env ? env->rep : NULL);\n-}\n-\n-void leveldb_options_set_info_log(leveldb_options_t* opt, leveldb_logger_t* l) {\n-  opt->rep.info_log = (l ? l->rep : NULL);\n-}\n-\n-void leveldb_options_set_write_buffer_size(leveldb_options_t* opt, size_t s) {\n-  opt->rep.write_buffer_size = s;\n-}\n-\n-void leveldb_options_set_max_open_files(leveldb_options_t* opt, int n) {\n-  opt->rep.max_open_files = n;\n-}\n-\n-void leveldb_options_set_cache(leveldb_options_t* opt, leveldb_cache_t* c) {\n-  opt->rep.block_cache = c->rep;\n-}\n-\n-void leveldb_options_set_block_size(leveldb_options_t* opt, size_t s) {\n-  opt->rep.block_size = s;\n-}\n-\n-void leveldb_options_set_block_restart_interval(leveldb_options_t* opt, int n) {\n-  opt->rep.block_restart_interval = n;\n-}\n-\n-void leveldb_options_set_compression(leveldb_options_t* opt, int t) {\n-  opt->rep.compression = static_cast<CompressionType>(t);\n-}\n-\n-leveldb_comparator_t* leveldb_comparator_create(\n-    void* state,\n-    void (*destructor)(void*),\n-    int (*compare)(\n-        void*,\n-        const char* a, size_t alen,\n-        const char* b, size_t blen),\n-    const char* (*name)(void*)) {\n-  leveldb_comparator_t* result = new leveldb_comparator_t;\n-  result->state_ = state;\n-  result->destructor_ = destructor;\n-  result->compare_ = compare;\n-  result->name_ = name;\n-  return result;\n-}\n-\n-void leveldb_comparator_destroy(leveldb_comparator_t* cmp) {\n-  delete cmp;\n-}\n-\n-leveldb_filterpolicy_t* leveldb_filterpolicy_create(\n-    void* state,\n-    void (*destructor)(void*),\n-    char* (*create_filter)(\n-        void*,\n-        const char* const* key_array, const size_t* key_length_array,\n-        int num_keys,\n-        size_t* filter_length),\n-    unsigned char (*key_may_match)(\n-        void*,\n-        const char* key, size_t length,\n-        const char* filter, size_t filter_length),\n-    const char* (*name)(void*)) {\n-  leveldb_filterpolicy_t* result = new leveldb_filterpolicy_t;\n-  result->state_ = state;\n-  result->destructor_ = destructor;\n-  result->create_ = create_filter;\n-  result->key_match_ = key_may_match;\n-  result->name_ = name;\n-  return result;\n-}\n-\n-void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t* filter) {\n-  delete filter;\n-}\n-\n-leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(int bits_per_key) {\n-  // Make a leveldb_filterpolicy_t, but override all of its methods so\n-  // they delegate to a NewBloomFilterPolicy() instead of user\n-  // supplied C functions.\n-  struct Wrapper : public leveldb_filterpolicy_t {\n-    const FilterPolicy* rep_;\n-    ~Wrapper() { delete rep_; }\n-    const char* Name() const { return rep_->Name(); }\n-    void CreateFilter(const Slice* keys, int n, std::string* dst) const {\n-      return rep_->CreateFilter(keys, n, dst);\n-    }\n-    bool KeyMayMatch(const Slice& key, const Slice& filter) const {\n-      return rep_->KeyMayMatch(key, filter);\n-    }\n-    static void DoNothing(void*) { }\n-  };\n-  Wrapper* wrapper = new Wrapper;\n-  wrapper->rep_ = NewBloomFilterPolicy(bits_per_key);\n-  wrapper->state_ = NULL;\n-  wrapper->destructor_ = &Wrapper::DoNothing;\n-  return wrapper;\n-}\n-\n-leveldb_readoptions_t* leveldb_readoptions_create() {\n-  return new leveldb_readoptions_t;\n-}\n-\n-void leveldb_readoptions_destroy(leveldb_readoptions_t* opt) {\n-  delete opt;\n-}\n-\n-void leveldb_readoptions_set_verify_checksums(\n-    leveldb_readoptions_t* opt,\n-    unsigned char v) {\n-  opt->rep.verify_checksums = v;\n-}\n-\n-void leveldb_readoptions_set_fill_cache(\n-    leveldb_readoptions_t* opt, unsigned char v) {\n-  opt->rep.fill_cache = v;\n-}\n-\n-void leveldb_readoptions_set_snapshot(\n-    leveldb_readoptions_t* opt,\n-    const leveldb_snapshot_t* snap) {\n-  opt->rep.snapshot = (snap ? snap->rep : NULL);\n-}\n-\n-leveldb_writeoptions_t* leveldb_writeoptions_create() {\n-  return new leveldb_writeoptions_t;\n-}\n-\n-void leveldb_writeoptions_destroy(leveldb_writeoptions_t* opt) {\n-  delete opt;\n-}\n-\n-void leveldb_writeoptions_set_sync(\n-    leveldb_writeoptions_t* opt, unsigned char v) {\n-  opt->rep.sync = v;\n-}\n-\n-leveldb_cache_t* leveldb_cache_create_lru(size_t capacity) {\n-  leveldb_cache_t* c = new leveldb_cache_t;\n-  c->rep = NewLRUCache(capacity);\n-  return c;\n-}\n-\n-void leveldb_cache_destroy(leveldb_cache_t* cache) {\n-  delete cache->rep;\n-  delete cache;\n-}\n-\n-leveldb_env_t* leveldb_create_default_env() {\n-  leveldb_env_t* result = new leveldb_env_t;\n-  result->rep = Env::Default();\n-  result->is_default = true;\n-  return result;\n-}\n-\n-void leveldb_env_destroy(leveldb_env_t* env) {\n-  if (!env->is_default) delete env->rep;\n-  delete env;\n-}\n-\n-void leveldb_free(void* ptr) {\n-  free(ptr);\n-}\n-\n-int leveldb_major_version() {\n-  return kMajorVersion;\n-}\n-\n-int leveldb_minor_version() {\n-  return kMinorVersion;\n-}\n-\n-}  // end extern \"C\""
      },
      {
        "sha": "7cd5ee02076ab96303a2b1f25dbabbe721caaba7",
        "filename": "src/leveldb/db/c_test.c",
        "status": "removed",
        "additions": 0,
        "deletions": 390,
        "changes": 390,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/c_test.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/c_test.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/c_test.c?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,390 +0,0 @@\n-/* Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-   Use of this source code is governed by a BSD-style license that can be\n-   found in the LICENSE file. See the AUTHORS file for names of contributors. */\n-\n-#include \"leveldb/c.h\"\n-\n-#include <stddef.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <sys/types.h>\n-#include <unistd.h>\n-\n-const char* phase = \"\";\n-static char dbname[200];\n-\n-static void StartPhase(const char* name) {\n-  fprintf(stderr, \"=== Test %s\\n\", name);\n-  phase = name;\n-}\n-\n-static const char* GetTempDir(void) {\n-    const char* ret = getenv(\"TEST_TMPDIR\");\n-    if (ret == NULL || ret[0] == '\\0')\n-        ret = \"/tmp\";\n-    return ret;\n-}\n-\n-#define CheckNoError(err)                                               \\\n-  if ((err) != NULL) {                                                  \\\n-    fprintf(stderr, \"%s:%d: %s: %s\\n\", __FILE__, __LINE__, phase, (err)); \\\n-    abort();                                                            \\\n-  }\n-\n-#define CheckCondition(cond)                                            \\\n-  if (!(cond)) {                                                        \\\n-    fprintf(stderr, \"%s:%d: %s: %s\\n\", __FILE__, __LINE__, phase, #cond); \\\n-    abort();                                                            \\\n-  }\n-\n-static void CheckEqual(const char* expected, const char* v, size_t n) {\n-  if (expected == NULL && v == NULL) {\n-    // ok\n-  } else if (expected != NULL && v != NULL && n == strlen(expected) &&\n-             memcmp(expected, v, n) == 0) {\n-    // ok\n-    return;\n-  } else {\n-    fprintf(stderr, \"%s: expected '%s', got '%s'\\n\",\n-            phase,\n-            (expected ? expected : \"(null)\"),\n-            (v ? v : \"(null\"));\n-    abort();\n-  }\n-}\n-\n-static void Free(char** ptr) {\n-  if (*ptr) {\n-    free(*ptr);\n-    *ptr = NULL;\n-  }\n-}\n-\n-static void CheckGet(\n-    leveldb_t* db,\n-    const leveldb_readoptions_t* options,\n-    const char* key,\n-    const char* expected) {\n-  char* err = NULL;\n-  size_t val_len;\n-  char* val;\n-  val = leveldb_get(db, options, key, strlen(key), &val_len, &err);\n-  CheckNoError(err);\n-  CheckEqual(expected, val, val_len);\n-  Free(&val);\n-}\n-\n-static void CheckIter(leveldb_iterator_t* iter,\n-                      const char* key, const char* val) {\n-  size_t len;\n-  const char* str;\n-  str = leveldb_iter_key(iter, &len);\n-  CheckEqual(key, str, len);\n-  str = leveldb_iter_value(iter, &len);\n-  CheckEqual(val, str, len);\n-}\n-\n-// Callback from leveldb_writebatch_iterate()\n-static void CheckPut(void* ptr,\n-                     const char* k, size_t klen,\n-                     const char* v, size_t vlen) {\n-  int* state = (int*) ptr;\n-  CheckCondition(*state < 2);\n-  switch (*state) {\n-    case 0:\n-      CheckEqual(\"bar\", k, klen);\n-      CheckEqual(\"b\", v, vlen);\n-      break;\n-    case 1:\n-      CheckEqual(\"box\", k, klen);\n-      CheckEqual(\"c\", v, vlen);\n-      break;\n-  }\n-  (*state)++;\n-}\n-\n-// Callback from leveldb_writebatch_iterate()\n-static void CheckDel(void* ptr, const char* k, size_t klen) {\n-  int* state = (int*) ptr;\n-  CheckCondition(*state == 2);\n-  CheckEqual(\"bar\", k, klen);\n-  (*state)++;\n-}\n-\n-static void CmpDestroy(void* arg) { }\n-\n-static int CmpCompare(void* arg, const char* a, size_t alen,\n-                      const char* b, size_t blen) {\n-  int n = (alen < blen) ? alen : blen;\n-  int r = memcmp(a, b, n);\n-  if (r == 0) {\n-    if (alen < blen) r = -1;\n-    else if (alen > blen) r = +1;\n-  }\n-  return r;\n-}\n-\n-static const char* CmpName(void* arg) {\n-  return \"foo\";\n-}\n-\n-// Custom filter policy\n-static unsigned char fake_filter_result = 1;\n-static void FilterDestroy(void* arg) { }\n-static const char* FilterName(void* arg) {\n-  return \"TestFilter\";\n-}\n-static char* FilterCreate(\n-    void* arg,\n-    const char* const* key_array, const size_t* key_length_array,\n-    int num_keys,\n-    size_t* filter_length) {\n-  *filter_length = 4;\n-  char* result = malloc(4);\n-  memcpy(result, \"fake\", 4);\n-  return result;\n-}\n-unsigned char FilterKeyMatch(\n-    void* arg,\n-    const char* key, size_t length,\n-    const char* filter, size_t filter_length) {\n-  CheckCondition(filter_length == 4);\n-  CheckCondition(memcmp(filter, \"fake\", 4) == 0);\n-  return fake_filter_result;\n-}\n-\n-int main(int argc, char** argv) {\n-  leveldb_t* db;\n-  leveldb_comparator_t* cmp;\n-  leveldb_cache_t* cache;\n-  leveldb_env_t* env;\n-  leveldb_options_t* options;\n-  leveldb_readoptions_t* roptions;\n-  leveldb_writeoptions_t* woptions;\n-  char* err = NULL;\n-  int run = -1;\n-\n-  CheckCondition(leveldb_major_version() >= 1);\n-  CheckCondition(leveldb_minor_version() >= 1);\n-\n-  snprintf(dbname, sizeof(dbname),\n-           \"%s/leveldb_c_test-%d\",\n-           GetTempDir(),\n-           ((int) geteuid()));\n-\n-  StartPhase(\"create_objects\");\n-  cmp = leveldb_comparator_create(NULL, CmpDestroy, CmpCompare, CmpName);\n-  env = leveldb_create_default_env();\n-  cache = leveldb_cache_create_lru(100000);\n-\n-  options = leveldb_options_create();\n-  leveldb_options_set_comparator(options, cmp);\n-  leveldb_options_set_error_if_exists(options, 1);\n-  leveldb_options_set_cache(options, cache);\n-  leveldb_options_set_env(options, env);\n-  leveldb_options_set_info_log(options, NULL);\n-  leveldb_options_set_write_buffer_size(options, 100000);\n-  leveldb_options_set_paranoid_checks(options, 1);\n-  leveldb_options_set_max_open_files(options, 10);\n-  leveldb_options_set_block_size(options, 1024);\n-  leveldb_options_set_block_restart_interval(options, 8);\n-  leveldb_options_set_compression(options, leveldb_no_compression);\n-\n-  roptions = leveldb_readoptions_create();\n-  leveldb_readoptions_set_verify_checksums(roptions, 1);\n-  leveldb_readoptions_set_fill_cache(roptions, 0);\n-\n-  woptions = leveldb_writeoptions_create();\n-  leveldb_writeoptions_set_sync(woptions, 1);\n-\n-  StartPhase(\"destroy\");\n-  leveldb_destroy_db(options, dbname, &err);\n-  Free(&err);\n-\n-  StartPhase(\"open_error\");\n-  db = leveldb_open(options, dbname, &err);\n-  CheckCondition(err != NULL);\n-  Free(&err);\n-\n-  StartPhase(\"leveldb_free\");\n-  db = leveldb_open(options, dbname, &err);\n-  CheckCondition(err != NULL);\n-  leveldb_free(err);\n-  err = NULL;\n-\n-  StartPhase(\"open\");\n-  leveldb_options_set_create_if_missing(options, 1);\n-  db = leveldb_open(options, dbname, &err);\n-  CheckNoError(err);\n-  CheckGet(db, roptions, \"foo\", NULL);\n-\n-  StartPhase(\"put\");\n-  leveldb_put(db, woptions, \"foo\", 3, \"hello\", 5, &err);\n-  CheckNoError(err);\n-  CheckGet(db, roptions, \"foo\", \"hello\");\n-\n-  StartPhase(\"compactall\");\n-  leveldb_compact_range(db, NULL, 0, NULL, 0);\n-  CheckGet(db, roptions, \"foo\", \"hello\");\n-\n-  StartPhase(\"compactrange\");\n-  leveldb_compact_range(db, \"a\", 1, \"z\", 1);\n-  CheckGet(db, roptions, \"foo\", \"hello\");\n-\n-  StartPhase(\"writebatch\");\n-  {\n-    leveldb_writebatch_t* wb = leveldb_writebatch_create();\n-    leveldb_writebatch_put(wb, \"foo\", 3, \"a\", 1);\n-    leveldb_writebatch_clear(wb);\n-    leveldb_writebatch_put(wb, \"bar\", 3, \"b\", 1);\n-    leveldb_writebatch_put(wb, \"box\", 3, \"c\", 1);\n-    leveldb_writebatch_delete(wb, \"bar\", 3);\n-    leveldb_write(db, woptions, wb, &err);\n-    CheckNoError(err);\n-    CheckGet(db, roptions, \"foo\", \"hello\");\n-    CheckGet(db, roptions, \"bar\", NULL);\n-    CheckGet(db, roptions, \"box\", \"c\");\n-    int pos = 0;\n-    leveldb_writebatch_iterate(wb, &pos, CheckPut, CheckDel);\n-    CheckCondition(pos == 3);\n-    leveldb_writebatch_destroy(wb);\n-  }\n-\n-  StartPhase(\"iter\");\n-  {\n-    leveldb_iterator_t* iter = leveldb_create_iterator(db, roptions);\n-    CheckCondition(!leveldb_iter_valid(iter));\n-    leveldb_iter_seek_to_first(iter);\n-    CheckCondition(leveldb_iter_valid(iter));\n-    CheckIter(iter, \"box\", \"c\");\n-    leveldb_iter_next(iter);\n-    CheckIter(iter, \"foo\", \"hello\");\n-    leveldb_iter_prev(iter);\n-    CheckIter(iter, \"box\", \"c\");\n-    leveldb_iter_prev(iter);\n-    CheckCondition(!leveldb_iter_valid(iter));\n-    leveldb_iter_seek_to_last(iter);\n-    CheckIter(iter, \"foo\", \"hello\");\n-    leveldb_iter_seek(iter, \"b\", 1);\n-    CheckIter(iter, \"box\", \"c\");\n-    leveldb_iter_get_error(iter, &err);\n-    CheckNoError(err);\n-    leveldb_iter_destroy(iter);\n-  }\n-\n-  StartPhase(\"approximate_sizes\");\n-  {\n-    int i;\n-    int n = 20000;\n-    char keybuf[100];\n-    char valbuf[100];\n-    uint64_t sizes[2];\n-    const char* start[2] = { \"a\", \"k00000000000000010000\" };\n-    size_t start_len[2] = { 1, 21 };\n-    const char* limit[2] = { \"k00000000000000010000\", \"z\" };\n-    size_t limit_len[2] = { 21, 1 };\n-    leveldb_writeoptions_set_sync(woptions, 0);\n-    for (i = 0; i < n; i++) {\n-      snprintf(keybuf, sizeof(keybuf), \"k%020d\", i);\n-      snprintf(valbuf, sizeof(valbuf), \"v%020d\", i);\n-      leveldb_put(db, woptions, keybuf, strlen(keybuf), valbuf, strlen(valbuf),\n-                  &err);\n-      CheckNoError(err);\n-    }\n-    leveldb_approximate_sizes(db, 2, start, start_len, limit, limit_len, sizes);\n-    CheckCondition(sizes[0] > 0);\n-    CheckCondition(sizes[1] > 0);\n-  }\n-\n-  StartPhase(\"property\");\n-  {\n-    char* prop = leveldb_property_value(db, \"nosuchprop\");\n-    CheckCondition(prop == NULL);\n-    prop = leveldb_property_value(db, \"leveldb.stats\");\n-    CheckCondition(prop != NULL);\n-    Free(&prop);\n-  }\n-\n-  StartPhase(\"snapshot\");\n-  {\n-    const leveldb_snapshot_t* snap;\n-    snap = leveldb_create_snapshot(db);\n-    leveldb_delete(db, woptions, \"foo\", 3, &err);\n-    CheckNoError(err);\n-    leveldb_readoptions_set_snapshot(roptions, snap);\n-    CheckGet(db, roptions, \"foo\", \"hello\");\n-    leveldb_readoptions_set_snapshot(roptions, NULL);\n-    CheckGet(db, roptions, \"foo\", NULL);\n-    leveldb_release_snapshot(db, snap);\n-  }\n-\n-  StartPhase(\"repair\");\n-  {\n-    leveldb_close(db);\n-    leveldb_options_set_create_if_missing(options, 0);\n-    leveldb_options_set_error_if_exists(options, 0);\n-    leveldb_repair_db(options, dbname, &err);\n-    CheckNoError(err);\n-    db = leveldb_open(options, dbname, &err);\n-    CheckNoError(err);\n-    CheckGet(db, roptions, \"foo\", NULL);\n-    CheckGet(db, roptions, \"bar\", NULL);\n-    CheckGet(db, roptions, \"box\", \"c\");\n-    leveldb_options_set_create_if_missing(options, 1);\n-    leveldb_options_set_error_if_exists(options, 1);\n-  }\n-\n-  StartPhase(\"filter\");\n-  for (run = 0; run < 2; run++) {\n-    // First run uses custom filter, second run uses bloom filter\n-    CheckNoError(err);\n-    leveldb_filterpolicy_t* policy;\n-    if (run == 0) {\n-      policy = leveldb_filterpolicy_create(\n-          NULL, FilterDestroy, FilterCreate, FilterKeyMatch, FilterName);\n-    } else {\n-      policy = leveldb_filterpolicy_create_bloom(10);\n-    }\n-\n-    // Create new database\n-    leveldb_close(db);\n-    leveldb_destroy_db(options, dbname, &err);\n-    leveldb_options_set_filter_policy(options, policy);\n-    db = leveldb_open(options, dbname, &err);\n-    CheckNoError(err);\n-    leveldb_put(db, woptions, \"foo\", 3, \"foovalue\", 8, &err);\n-    CheckNoError(err);\n-    leveldb_put(db, woptions, \"bar\", 3, \"barvalue\", 8, &err);\n-    CheckNoError(err);\n-    leveldb_compact_range(db, NULL, 0, NULL, 0);\n-\n-    fake_filter_result = 1;\n-    CheckGet(db, roptions, \"foo\", \"foovalue\");\n-    CheckGet(db, roptions, \"bar\", \"barvalue\");\n-    if (phase == 0) {\n-      // Must not find value when custom filter returns false\n-      fake_filter_result = 0;\n-      CheckGet(db, roptions, \"foo\", NULL);\n-      CheckGet(db, roptions, \"bar\", NULL);\n-      fake_filter_result = 1;\n-\n-      CheckGet(db, roptions, \"foo\", \"foovalue\");\n-      CheckGet(db, roptions, \"bar\", \"barvalue\");\n-    }\n-    leveldb_options_set_filter_policy(options, NULL);\n-    leveldb_filterpolicy_destroy(policy);\n-  }\n-\n-  StartPhase(\"cleanup\");\n-  leveldb_close(db);\n-  leveldb_options_destroy(options);\n-  leveldb_readoptions_destroy(roptions);\n-  leveldb_writeoptions_destroy(woptions);\n-  leveldb_cache_destroy(cache);\n-  leveldb_comparator_destroy(cmp);\n-  leveldb_env_destroy(env);\n-\n-  fprintf(stderr, \"PASS\\n\");\n-  return 0;\n-}"
      },
      {
        "sha": "37a484d25fea2d401b6956ae246b9365e7b8aa8e",
        "filename": "src/leveldb/db/corruption_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 374,
        "changes": 374,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/corruption_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/corruption_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/corruption_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,374 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"leveldb/db.h\"\n-\n-#include <errno.h>\n-#include <fcntl.h>\n-#include <sys/stat.h>\n-#include <sys/types.h>\n-#include \"leveldb/cache.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/table.h\"\n-#include \"leveldb/write_batch.h\"\n-#include \"db/db_impl.h\"\n-#include \"db/filename.h\"\n-#include \"db/log_format.h\"\n-#include \"db/version_set.h\"\n-#include \"util/logging.h\"\n-#include \"util/testharness.h\"\n-#include \"util/testutil.h\"\n-\n-namespace leveldb {\n-\n-static const int kValueSize = 1000;\n-\n-class CorruptionTest {\n- public:\n-  test::ErrorEnv env_;\n-  std::string dbname_;\n-  Cache* tiny_cache_;\n-  Options options_;\n-  DB* db_;\n-\n-  CorruptionTest() {\n-    tiny_cache_ = NewLRUCache(100);\n-    options_.env = &env_;\n-    options_.block_cache = tiny_cache_;\n-    dbname_ = test::TmpDir() + \"/corruption_test\";\n-    DestroyDB(dbname_, options_);\n-\n-    db_ = NULL;\n-    options_.create_if_missing = true;\n-    Reopen();\n-    options_.create_if_missing = false;\n-  }\n-\n-  ~CorruptionTest() {\n-     delete db_;\n-     DestroyDB(dbname_, Options());\n-     delete tiny_cache_;\n-  }\n-\n-  Status TryReopen() {\n-    delete db_;\n-    db_ = NULL;\n-    return DB::Open(options_, dbname_, &db_);\n-  }\n-\n-  void Reopen() {\n-    ASSERT_OK(TryReopen());\n-  }\n-\n-  void RepairDB() {\n-    delete db_;\n-    db_ = NULL;\n-    ASSERT_OK(::leveldb::RepairDB(dbname_, options_));\n-  }\n-\n-  void Build(int n) {\n-    std::string key_space, value_space;\n-    WriteBatch batch;\n-    for (int i = 0; i < n; i++) {\n-      //if ((i % 100) == 0) fprintf(stderr, \"@ %d of %d\\n\", i, n);\n-      Slice key = Key(i, &key_space);\n-      batch.Clear();\n-      batch.Put(key, Value(i, &value_space));\n-      WriteOptions options;\n-      // Corrupt() doesn't work without this sync on windows; stat reports 0 for\n-      // the file size.\n-      if (i == n - 1) {\n-        options.sync = true;\n-      }\n-      ASSERT_OK(db_->Write(options, &batch));\n-    }\n-  }\n-\n-  void Check(int min_expected, int max_expected) {\n-    int next_expected = 0;\n-    int missed = 0;\n-    int bad_keys = 0;\n-    int bad_values = 0;\n-    int correct = 0;\n-    std::string value_space;\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-      uint64_t key;\n-      Slice in(iter->key());\n-      if (in == \"\" || in == \"~\") {\n-        // Ignore boundary keys.\n-        continue;\n-      }\n-      if (!ConsumeDecimalNumber(&in, &key) ||\n-          !in.empty() ||\n-          key < next_expected) {\n-        bad_keys++;\n-        continue;\n-      }\n-      missed += (key - next_expected);\n-      next_expected = key + 1;\n-      if (iter->value() != Value(key, &value_space)) {\n-        bad_values++;\n-      } else {\n-        correct++;\n-      }\n-    }\n-    delete iter;\n-\n-    fprintf(stderr,\n-            \"expected=%d..%d; got=%d; bad_keys=%d; bad_values=%d; missed=%d\\n\",\n-            min_expected, max_expected, correct, bad_keys, bad_values, missed);\n-    ASSERT_LE(min_expected, correct);\n-    ASSERT_GE(max_expected, correct);\n-  }\n-\n-  void Corrupt(FileType filetype, int offset, int bytes_to_corrupt) {\n-    // Pick file to corrupt\n-    std::vector<std::string> filenames;\n-    ASSERT_OK(env_.GetChildren(dbname_, &filenames));\n-    uint64_t number;\n-    FileType type;\n-    std::string fname;\n-    int picked_number = -1;\n-    for (size_t i = 0; i < filenames.size(); i++) {\n-      if (ParseFileName(filenames[i], &number, &type) &&\n-          type == filetype &&\n-          int(number) > picked_number) {  // Pick latest file\n-        fname = dbname_ + \"/\" + filenames[i];\n-        picked_number = number;\n-      }\n-    }\n-    ASSERT_TRUE(!fname.empty()) << filetype;\n-\n-    struct stat sbuf;\n-    if (stat(fname.c_str(), &sbuf) != 0) {\n-      const char* msg = strerror(errno);\n-      ASSERT_TRUE(false) << fname << \": \" << msg;\n-    }\n-\n-    if (offset < 0) {\n-      // Relative to end of file; make it absolute\n-      if (-offset > sbuf.st_size) {\n-        offset = 0;\n-      } else {\n-        offset = sbuf.st_size + offset;\n-      }\n-    }\n-    if (offset > sbuf.st_size) {\n-      offset = sbuf.st_size;\n-    }\n-    if (offset + bytes_to_corrupt > sbuf.st_size) {\n-      bytes_to_corrupt = sbuf.st_size - offset;\n-    }\n-\n-    // Do it\n-    std::string contents;\n-    Status s = ReadFileToString(Env::Default(), fname, &contents);\n-    ASSERT_TRUE(s.ok()) << s.ToString();\n-    for (int i = 0; i < bytes_to_corrupt; i++) {\n-      contents[i + offset] ^= 0x80;\n-    }\n-    s = WriteStringToFile(Env::Default(), contents, fname);\n-    ASSERT_TRUE(s.ok()) << s.ToString();\n-  }\n-\n-  int Property(const std::string& name) {\n-    std::string property;\n-    int result;\n-    if (db_->GetProperty(name, &property) &&\n-        sscanf(property.c_str(), \"%d\", &result) == 1) {\n-      return result;\n-    } else {\n-      return -1;\n-    }\n-  }\n-\n-  // Return the ith key\n-  Slice Key(int i, std::string* storage) {\n-    char buf[100];\n-    snprintf(buf, sizeof(buf), \"%016d\", i);\n-    storage->assign(buf, strlen(buf));\n-    return Slice(*storage);\n-  }\n-\n-  // Return the value to associate with the specified key\n-  Slice Value(int k, std::string* storage) {\n-    Random r(k);\n-    return test::RandomString(&r, kValueSize, storage);\n-  }\n-};\n-\n-TEST(CorruptionTest, Recovery) {\n-  Build(100);\n-  Check(100, 100);\n-  Corrupt(kLogFile, 19, 1);      // WriteBatch tag for first record\n-  Corrupt(kLogFile, log::kBlockSize + 1000, 1);  // Somewhere in second block\n-  Reopen();\n-\n-  // The 64 records in the first two log blocks are completely lost.\n-  Check(36, 36);\n-}\n-\n-TEST(CorruptionTest, RecoverWriteError) {\n-  env_.writable_file_error_ = true;\n-  Status s = TryReopen();\n-  ASSERT_TRUE(!s.ok());\n-}\n-\n-TEST(CorruptionTest, NewFileErrorDuringWrite) {\n-  // Do enough writing to force minor compaction\n-  env_.writable_file_error_ = true;\n-  const int num = 3 + (Options().write_buffer_size / kValueSize);\n-  std::string value_storage;\n-  Status s;\n-  for (int i = 0; s.ok() && i < num; i++) {\n-    WriteBatch batch;\n-    batch.Put(\"a\", Value(100, &value_storage));\n-    s = db_->Write(WriteOptions(), &batch);\n-  }\n-  ASSERT_TRUE(!s.ok());\n-  ASSERT_GE(env_.num_writable_file_errors_, 1);\n-  env_.writable_file_error_ = false;\n-  Reopen();\n-}\n-\n-TEST(CorruptionTest, TableFile) {\n-  Build(100);\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-  dbi->TEST_CompactMemTable();\n-  dbi->TEST_CompactRange(0, NULL, NULL);\n-  dbi->TEST_CompactRange(1, NULL, NULL);\n-\n-  Corrupt(kTableFile, 100, 1);\n-  Check(90, 99);\n-}\n-\n-TEST(CorruptionTest, TableFileRepair) {\n-  options_.block_size = 2 * kValueSize;  // Limit scope of corruption\n-  options_.paranoid_checks = true;\n-  Reopen();\n-  Build(100);\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-  dbi->TEST_CompactMemTable();\n-  dbi->TEST_CompactRange(0, NULL, NULL);\n-  dbi->TEST_CompactRange(1, NULL, NULL);\n-\n-  Corrupt(kTableFile, 100, 1);\n-  RepairDB();\n-  Reopen();\n-  Check(95, 99);\n-}\n-\n-TEST(CorruptionTest, TableFileIndexData) {\n-  Build(10000);  // Enough to build multiple Tables\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-  dbi->TEST_CompactMemTable();\n-\n-  Corrupt(kTableFile, -2000, 500);\n-  Reopen();\n-  Check(5000, 9999);\n-}\n-\n-TEST(CorruptionTest, MissingDescriptor) {\n-  Build(1000);\n-  RepairDB();\n-  Reopen();\n-  Check(1000, 1000);\n-}\n-\n-TEST(CorruptionTest, SequenceNumberRecovery) {\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v1\"));\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v2\"));\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v3\"));\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v4\"));\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v5\"));\n-  RepairDB();\n-  Reopen();\n-  std::string v;\n-  ASSERT_OK(db_->Get(ReadOptions(), \"foo\", &v));\n-  ASSERT_EQ(\"v5\", v);\n-  // Write something.  If sequence number was not recovered properly,\n-  // it will be hidden by an earlier write.\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v6\"));\n-  ASSERT_OK(db_->Get(ReadOptions(), \"foo\", &v));\n-  ASSERT_EQ(\"v6\", v);\n-  Reopen();\n-  ASSERT_OK(db_->Get(ReadOptions(), \"foo\", &v));\n-  ASSERT_EQ(\"v6\", v);\n-}\n-\n-TEST(CorruptionTest, CorruptedDescriptor) {\n-  ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"hello\"));\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-  dbi->TEST_CompactMemTable();\n-  dbi->TEST_CompactRange(0, NULL, NULL);\n-\n-  Corrupt(kDescriptorFile, 0, 1000);\n-  Status s = TryReopen();\n-  ASSERT_TRUE(!s.ok());\n-\n-  RepairDB();\n-  Reopen();\n-  std::string v;\n-  ASSERT_OK(db_->Get(ReadOptions(), \"foo\", &v));\n-  ASSERT_EQ(\"hello\", v);\n-}\n-\n-TEST(CorruptionTest, CompactionInputError) {\n-  Build(10);\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-  dbi->TEST_CompactMemTable();\n-  const int last = config::kMaxMemCompactLevel;\n-  ASSERT_EQ(1, Property(\"leveldb.num-files-at-level\" + NumberToString(last)));\n-\n-  Corrupt(kTableFile, 100, 1);\n-  Check(5, 9);\n-\n-  // Force compactions by writing lots of values\n-  Build(10000);\n-  Check(10000, 10000);\n-}\n-\n-TEST(CorruptionTest, CompactionInputErrorParanoid) {\n-  options_.paranoid_checks = true;\n-  options_.write_buffer_size = 512 << 10;\n-  Reopen();\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-\n-  // Make multiple inputs so we need to compact.\n-  for (int i = 0; i < 2; i++) {\n-    Build(10);\n-    dbi->TEST_CompactMemTable();\n-    Corrupt(kTableFile, 100, 1);\n-    env_.SleepForMicroseconds(100000);\n-  }\n-  dbi->CompactRange(NULL, NULL);\n-\n-  // Write must fail because of corrupted table\n-  std::string tmp1, tmp2;\n-  Status s = db_->Put(WriteOptions(), Key(5, &tmp1), Value(5, &tmp2));\n-  ASSERT_TRUE(!s.ok()) << \"write did not fail in corrupted paranoid db\";\n-}\n-\n-TEST(CorruptionTest, UnrelatedKeys) {\n-  Build(10);\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n-  dbi->TEST_CompactMemTable();\n-  Corrupt(kTableFile, 100, 1);\n-\n-  std::string tmp1, tmp2;\n-  ASSERT_OK(db_->Put(WriteOptions(), Key(1000, &tmp1), Value(1000, &tmp2)));\n-  std::string v;\n-  ASSERT_OK(db_->Get(ReadOptions(), Key(1000, &tmp1), &v));\n-  ASSERT_EQ(Value(1000, &tmp2).ToString(), v);\n-  dbi->TEST_CompactMemTable();\n-  ASSERT_OK(db_->Get(ReadOptions(), Key(1000, &tmp1), &v));\n-  ASSERT_EQ(Value(1000, &tmp2).ToString(), v);\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "7a0f5e08cdd58672ee69527bcbef72ac869c9189",
        "filename": "src/leveldb/db/db_bench.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 1000,
        "changes": 1000,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_bench.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_bench.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_bench.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,1000 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <sys/types.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include \"db/db_impl.h\"\n-#include \"db/version_set.h\"\n-#include \"leveldb/cache.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/write_batch.h\"\n-#include \"port/port.h\"\n-#include \"util/crc32c.h\"\n-#include \"util/histogram.h\"\n-#include \"util/mutexlock.h\"\n-#include \"util/random.h\"\n-#include \"util/testutil.h\"\n-\n-// Comma-separated list of operations to run in the specified order\n-//   Actual benchmarks:\n-//      fillseq       -- write N values in sequential key order in async mode\n-//      fillrandom    -- write N values in random key order in async mode\n-//      overwrite     -- overwrite N values in random key order in async mode\n-//      fillsync      -- write N/100 values in random key order in sync mode\n-//      fill100K      -- write N/1000 100K values in random order in async mode\n-//      deleteseq     -- delete N keys in sequential order\n-//      deleterandom  -- delete N keys in random order\n-//      readseq       -- read N times sequentially\n-//      readreverse   -- read N times in reverse order\n-//      readrandom    -- read N times in random order\n-//      readmissing   -- read N missing keys in random order\n-//      readhot       -- read N times in random order from 1% section of DB\n-//      seekrandom    -- N random seeks\n-//      open          -- cost of opening a DB\n-//      crc32c        -- repeated crc32c of 4K of data\n-//      acquireload   -- load N*1000 times\n-//   Meta operations:\n-//      compact     -- Compact the entire DB\n-//      stats       -- Print DB stats\n-//      sstables    -- Print sstable info\n-//      heapprofile -- Dump a heap profile (if supported by this port)\n-static const char* FLAGS_benchmarks =\n-    \"fillseq,\"\n-    \"fillsync,\"\n-    \"fillrandom,\"\n-    \"overwrite,\"\n-    \"readrandom,\"\n-    \"readrandom,\"  // Extra run to allow previous compactions to quiesce\n-    \"readseq,\"\n-    \"readreverse,\"\n-    \"compact,\"\n-    \"readrandom,\"\n-    \"readseq,\"\n-    \"readreverse,\"\n-    \"fill100K,\"\n-    \"crc32c,\"\n-    \"snappycomp,\"\n-    \"snappyuncomp,\"\n-    \"acquireload,\"\n-    ;\n-\n-// Number of key/values to place in database\n-static int FLAGS_num = 1000000;\n-\n-// Number of read operations to do.  If negative, do FLAGS_num reads.\n-static int FLAGS_reads = -1;\n-\n-// Number of concurrent threads to run.\n-static int FLAGS_threads = 1;\n-\n-// Size of each value\n-static int FLAGS_value_size = 100;\n-\n-// Arrange to generate values that shrink to this fraction of\n-// their original size after compression\n-static double FLAGS_compression_ratio = 0.5;\n-\n-// Print histogram of operation timings\n-static bool FLAGS_histogram = false;\n-\n-// Number of bytes to buffer in memtable before compacting\n-// (initialized to default value by \"main\")\n-static int FLAGS_write_buffer_size = 0;\n-\n-// Number of bytes to use as a cache of uncompressed data.\n-// Negative means use default settings.\n-static int FLAGS_cache_size = -1;\n-\n-// Maximum number of files to keep open at the same time (use default if == 0)\n-static int FLAGS_open_files = 0;\n-\n-// Bloom filter bits per key.\n-// Negative means use default settings.\n-static int FLAGS_bloom_bits = -1;\n-\n-// If true, do not destroy the existing database.  If you set this\n-// flag and also specify a benchmark that wants a fresh database, that\n-// benchmark will fail.\n-static bool FLAGS_use_existing_db = false;\n-\n-// If true, reuse existing log/MANIFEST files when re-opening a database.\n-static bool FLAGS_reuse_logs = false;\n-\n-// Use the db with the following name.\n-static const char* FLAGS_db = NULL;\n-\n-namespace leveldb {\n-\n-namespace {\n-\n-// Helper for quickly generating random data.\n-class RandomGenerator {\n- private:\n-  std::string data_;\n-  int pos_;\n-\n- public:\n-  RandomGenerator() {\n-    // We use a limited amount of data over and over again and ensure\n-    // that it is larger than the compression window (32KB), and also\n-    // large enough to serve all typical value sizes we want to write.\n-    Random rnd(301);\n-    std::string piece;\n-    while (data_.size() < 1048576) {\n-      // Add a short fragment that is as compressible as specified\n-      // by FLAGS_compression_ratio.\n-      test::CompressibleString(&rnd, FLAGS_compression_ratio, 100, &piece);\n-      data_.append(piece);\n-    }\n-    pos_ = 0;\n-  }\n-\n-  Slice Generate(size_t len) {\n-    if (pos_ + len > data_.size()) {\n-      pos_ = 0;\n-      assert(len < data_.size());\n-    }\n-    pos_ += len;\n-    return Slice(data_.data() + pos_ - len, len);\n-  }\n-};\n-\n-#if defined(__linux)\n-static Slice TrimSpace(Slice s) {\n-  size_t start = 0;\n-  while (start < s.size() && isspace(s[start])) {\n-    start++;\n-  }\n-  size_t limit = s.size();\n-  while (limit > start && isspace(s[limit-1])) {\n-    limit--;\n-  }\n-  return Slice(s.data() + start, limit - start);\n-}\n-#endif\n-\n-static void AppendWithSpace(std::string* str, Slice msg) {\n-  if (msg.empty()) return;\n-  if (!str->empty()) {\n-    str->push_back(' ');\n-  }\n-  str->append(msg.data(), msg.size());\n-}\n-\n-class Stats {\n- private:\n-  double start_;\n-  double finish_;\n-  double seconds_;\n-  int done_;\n-  int next_report_;\n-  int64_t bytes_;\n-  double last_op_finish_;\n-  Histogram hist_;\n-  std::string message_;\n-\n- public:\n-  Stats() { Start(); }\n-\n-  void Start() {\n-    next_report_ = 100;\n-    last_op_finish_ = start_;\n-    hist_.Clear();\n-    done_ = 0;\n-    bytes_ = 0;\n-    seconds_ = 0;\n-    start_ = Env::Default()->NowMicros();\n-    finish_ = start_;\n-    message_.clear();\n-  }\n-\n-  void Merge(const Stats& other) {\n-    hist_.Merge(other.hist_);\n-    done_ += other.done_;\n-    bytes_ += other.bytes_;\n-    seconds_ += other.seconds_;\n-    if (other.start_ < start_) start_ = other.start_;\n-    if (other.finish_ > finish_) finish_ = other.finish_;\n-\n-    // Just keep the messages from one thread\n-    if (message_.empty()) message_ = other.message_;\n-  }\n-\n-  void Stop() {\n-    finish_ = Env::Default()->NowMicros();\n-    seconds_ = (finish_ - start_) * 1e-6;\n-  }\n-\n-  void AddMessage(Slice msg) {\n-    AppendWithSpace(&message_, msg);\n-  }\n-\n-  void FinishedSingleOp() {\n-    if (FLAGS_histogram) {\n-      double now = Env::Default()->NowMicros();\n-      double micros = now - last_op_finish_;\n-      hist_.Add(micros);\n-      if (micros > 20000) {\n-        fprintf(stderr, \"long op: %.1f micros%30s\\r\", micros, \"\");\n-        fflush(stderr);\n-      }\n-      last_op_finish_ = now;\n-    }\n-\n-    done_++;\n-    if (done_ >= next_report_) {\n-      if      (next_report_ < 1000)   next_report_ += 100;\n-      else if (next_report_ < 5000)   next_report_ += 500;\n-      else if (next_report_ < 10000)  next_report_ += 1000;\n-      else if (next_report_ < 50000)  next_report_ += 5000;\n-      else if (next_report_ < 100000) next_report_ += 10000;\n-      else if (next_report_ < 500000) next_report_ += 50000;\n-      else                            next_report_ += 100000;\n-      fprintf(stderr, \"... finished %d ops%30s\\r\", done_, \"\");\n-      fflush(stderr);\n-    }\n-  }\n-\n-  void AddBytes(int64_t n) {\n-    bytes_ += n;\n-  }\n-\n-  void Report(const Slice& name) {\n-    // Pretend at least one op was done in case we are running a benchmark\n-    // that does not call FinishedSingleOp().\n-    if (done_ < 1) done_ = 1;\n-\n-    std::string extra;\n-    if (bytes_ > 0) {\n-      // Rate is computed on actual elapsed time, not the sum of per-thread\n-      // elapsed times.\n-      double elapsed = (finish_ - start_) * 1e-6;\n-      char rate[100];\n-      snprintf(rate, sizeof(rate), \"%6.1f MB/s\",\n-               (bytes_ / 1048576.0) / elapsed);\n-      extra = rate;\n-    }\n-    AppendWithSpace(&extra, message_);\n-\n-    fprintf(stdout, \"%-12s : %11.3f micros/op;%s%s\\n\",\n-            name.ToString().c_str(),\n-            seconds_ * 1e6 / done_,\n-            (extra.empty() ? \"\" : \" \"),\n-            extra.c_str());\n-    if (FLAGS_histogram) {\n-      fprintf(stdout, \"Microseconds per op:\\n%s\\n\", hist_.ToString().c_str());\n-    }\n-    fflush(stdout);\n-  }\n-};\n-\n-// State shared by all concurrent executions of the same benchmark.\n-struct SharedState {\n-  port::Mutex mu;\n-  port::CondVar cv;\n-  int total;\n-\n-  // Each thread goes through the following states:\n-  //    (1) initializing\n-  //    (2) waiting for others to be initialized\n-  //    (3) running\n-  //    (4) done\n-\n-  int num_initialized;\n-  int num_done;\n-  bool start;\n-\n-  SharedState() : cv(&mu) { }\n-};\n-\n-// Per-thread state for concurrent executions of the same benchmark.\n-struct ThreadState {\n-  int tid;             // 0..n-1 when running in n threads\n-  Random rand;         // Has different seeds for different threads\n-  Stats stats;\n-  SharedState* shared;\n-\n-  ThreadState(int index)\n-      : tid(index),\n-        rand(1000 + index) {\n-  }\n-};\n-\n-}  // namespace\n-\n-class Benchmark {\n- private:\n-  Cache* cache_;\n-  const FilterPolicy* filter_policy_;\n-  DB* db_;\n-  int num_;\n-  int value_size_;\n-  int entries_per_batch_;\n-  WriteOptions write_options_;\n-  int reads_;\n-  int heap_counter_;\n-\n-  void PrintHeader() {\n-    const int kKeySize = 16;\n-    PrintEnvironment();\n-    fprintf(stdout, \"Keys:       %d bytes each\\n\", kKeySize);\n-    fprintf(stdout, \"Values:     %d bytes each (%d bytes after compression)\\n\",\n-            FLAGS_value_size,\n-            static_cast<int>(FLAGS_value_size * FLAGS_compression_ratio + 0.5));\n-    fprintf(stdout, \"Entries:    %d\\n\", num_);\n-    fprintf(stdout, \"RawSize:    %.1f MB (estimated)\\n\",\n-            ((static_cast<int64_t>(kKeySize + FLAGS_value_size) * num_)\n-             / 1048576.0));\n-    fprintf(stdout, \"FileSize:   %.1f MB (estimated)\\n\",\n-            (((kKeySize + FLAGS_value_size * FLAGS_compression_ratio) * num_)\n-             / 1048576.0));\n-    PrintWarnings();\n-    fprintf(stdout, \"------------------------------------------------\\n\");\n-  }\n-\n-  void PrintWarnings() {\n-#if defined(__GNUC__) && !defined(__OPTIMIZE__)\n-    fprintf(stdout,\n-            \"WARNING: Optimization is disabled: benchmarks unnecessarily slow\\n\"\n-            );\n-#endif\n-#ifndef NDEBUG\n-    fprintf(stdout,\n-            \"WARNING: Assertions are enabled; benchmarks unnecessarily slow\\n\");\n-#endif\n-\n-    // See if snappy is working by attempting to compress a compressible string\n-    const char text[] = \"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\";\n-    std::string compressed;\n-    if (!port::Snappy_Compress(text, sizeof(text), &compressed)) {\n-      fprintf(stdout, \"WARNING: Snappy compression is not enabled\\n\");\n-    } else if (compressed.size() >= sizeof(text)) {\n-      fprintf(stdout, \"WARNING: Snappy compression is not effective\\n\");\n-    }\n-  }\n-\n-  void PrintEnvironment() {\n-    fprintf(stderr, \"LevelDB:    version %d.%d\\n\",\n-            kMajorVersion, kMinorVersion);\n-\n-#if defined(__linux)\n-    time_t now = time(NULL);\n-    fprintf(stderr, \"Date:       %s\", ctime(&now));  // ctime() adds newline\n-\n-    FILE* cpuinfo = fopen(\"/proc/cpuinfo\", \"r\");\n-    if (cpuinfo != NULL) {\n-      char line[1000];\n-      int num_cpus = 0;\n-      std::string cpu_type;\n-      std::string cache_size;\n-      while (fgets(line, sizeof(line), cpuinfo) != NULL) {\n-        const char* sep = strchr(line, ':');\n-        if (sep == NULL) {\n-          continue;\n-        }\n-        Slice key = TrimSpace(Slice(line, sep - 1 - line));\n-        Slice val = TrimSpace(Slice(sep + 1));\n-        if (key == \"model name\") {\n-          ++num_cpus;\n-          cpu_type = val.ToString();\n-        } else if (key == \"cache size\") {\n-          cache_size = val.ToString();\n-        }\n-      }\n-      fclose(cpuinfo);\n-      fprintf(stderr, \"CPU:        %d * %s\\n\", num_cpus, cpu_type.c_str());\n-      fprintf(stderr, \"CPUCache:   %s\\n\", cache_size.c_str());\n-    }\n-#endif\n-  }\n-\n- public:\n-  Benchmark()\n-  : cache_(FLAGS_cache_size >= 0 ? NewLRUCache(FLAGS_cache_size) : NULL),\n-    filter_policy_(FLAGS_bloom_bits >= 0\n-                   ? NewBloomFilterPolicy(FLAGS_bloom_bits)\n-                   : NULL),\n-    db_(NULL),\n-    num_(FLAGS_num),\n-    value_size_(FLAGS_value_size),\n-    entries_per_batch_(1),\n-    reads_(FLAGS_reads < 0 ? FLAGS_num : FLAGS_reads),\n-    heap_counter_(0) {\n-    std::vector<std::string> files;\n-    Env::Default()->GetChildren(FLAGS_db, &files);\n-    for (size_t i = 0; i < files.size(); i++) {\n-      if (Slice(files[i]).starts_with(\"heap-\")) {\n-        Env::Default()->DeleteFile(std::string(FLAGS_db) + \"/\" + files[i]);\n-      }\n-    }\n-    if (!FLAGS_use_existing_db) {\n-      DestroyDB(FLAGS_db, Options());\n-    }\n-  }\n-\n-  ~Benchmark() {\n-    delete db_;\n-    delete cache_;\n-    delete filter_policy_;\n-  }\n-\n-  void Run() {\n-    PrintHeader();\n-    Open();\n-\n-    const char* benchmarks = FLAGS_benchmarks;\n-    while (benchmarks != NULL) {\n-      const char* sep = strchr(benchmarks, ',');\n-      Slice name;\n-      if (sep == NULL) {\n-        name = benchmarks;\n-        benchmarks = NULL;\n-      } else {\n-        name = Slice(benchmarks, sep - benchmarks);\n-        benchmarks = sep + 1;\n-      }\n-\n-      // Reset parameters that may be overridden below\n-      num_ = FLAGS_num;\n-      reads_ = (FLAGS_reads < 0 ? FLAGS_num : FLAGS_reads);\n-      value_size_ = FLAGS_value_size;\n-      entries_per_batch_ = 1;\n-      write_options_ = WriteOptions();\n-\n-      void (Benchmark::*method)(ThreadState*) = NULL;\n-      bool fresh_db = false;\n-      int num_threads = FLAGS_threads;\n-\n-      if (name == Slice(\"open\")) {\n-        method = &Benchmark::OpenBench;\n-        num_ /= 10000;\n-        if (num_ < 1) num_ = 1;\n-      } else if (name == Slice(\"fillseq\")) {\n-        fresh_db = true;\n-        method = &Benchmark::WriteSeq;\n-      } else if (name == Slice(\"fillbatch\")) {\n-        fresh_db = true;\n-        entries_per_batch_ = 1000;\n-        method = &Benchmark::WriteSeq;\n-      } else if (name == Slice(\"fillrandom\")) {\n-        fresh_db = true;\n-        method = &Benchmark::WriteRandom;\n-      } else if (name == Slice(\"overwrite\")) {\n-        fresh_db = false;\n-        method = &Benchmark::WriteRandom;\n-      } else if (name == Slice(\"fillsync\")) {\n-        fresh_db = true;\n-        num_ /= 1000;\n-        write_options_.sync = true;\n-        method = &Benchmark::WriteRandom;\n-      } else if (name == Slice(\"fill100K\")) {\n-        fresh_db = true;\n-        num_ /= 1000;\n-        value_size_ = 100 * 1000;\n-        method = &Benchmark::WriteRandom;\n-      } else if (name == Slice(\"readseq\")) {\n-        method = &Benchmark::ReadSequential;\n-      } else if (name == Slice(\"readreverse\")) {\n-        method = &Benchmark::ReadReverse;\n-      } else if (name == Slice(\"readrandom\")) {\n-        method = &Benchmark::ReadRandom;\n-      } else if (name == Slice(\"readmissing\")) {\n-        method = &Benchmark::ReadMissing;\n-      } else if (name == Slice(\"seekrandom\")) {\n-        method = &Benchmark::SeekRandom;\n-      } else if (name == Slice(\"readhot\")) {\n-        method = &Benchmark::ReadHot;\n-      } else if (name == Slice(\"readrandomsmall\")) {\n-        reads_ /= 1000;\n-        method = &Benchmark::ReadRandom;\n-      } else if (name == Slice(\"deleteseq\")) {\n-        method = &Benchmark::DeleteSeq;\n-      } else if (name == Slice(\"deleterandom\")) {\n-        method = &Benchmark::DeleteRandom;\n-      } else if (name == Slice(\"readwhilewriting\")) {\n-        num_threads++;  // Add extra thread for writing\n-        method = &Benchmark::ReadWhileWriting;\n-      } else if (name == Slice(\"compact\")) {\n-        method = &Benchmark::Compact;\n-      } else if (name == Slice(\"crc32c\")) {\n-        method = &Benchmark::Crc32c;\n-      } else if (name == Slice(\"acquireload\")) {\n-        method = &Benchmark::AcquireLoad;\n-      } else if (name == Slice(\"snappycomp\")) {\n-        method = &Benchmark::SnappyCompress;\n-      } else if (name == Slice(\"snappyuncomp\")) {\n-        method = &Benchmark::SnappyUncompress;\n-      } else if (name == Slice(\"heapprofile\")) {\n-        HeapProfile();\n-      } else if (name == Slice(\"stats\")) {\n-        PrintStats(\"leveldb.stats\");\n-      } else if (name == Slice(\"sstables\")) {\n-        PrintStats(\"leveldb.sstables\");\n-      } else {\n-        if (name != Slice()) {  // No error message for empty name\n-          fprintf(stderr, \"unknown benchmark '%s'\\n\", name.ToString().c_str());\n-        }\n-      }\n-\n-      if (fresh_db) {\n-        if (FLAGS_use_existing_db) {\n-          fprintf(stdout, \"%-12s : skipped (--use_existing_db is true)\\n\",\n-                  name.ToString().c_str());\n-          method = NULL;\n-        } else {\n-          delete db_;\n-          db_ = NULL;\n-          DestroyDB(FLAGS_db, Options());\n-          Open();\n-        }\n-      }\n-\n-      if (method != NULL) {\n-        RunBenchmark(num_threads, name, method);\n-      }\n-    }\n-  }\n-\n- private:\n-  struct ThreadArg {\n-    Benchmark* bm;\n-    SharedState* shared;\n-    ThreadState* thread;\n-    void (Benchmark::*method)(ThreadState*);\n-  };\n-\n-  static void ThreadBody(void* v) {\n-    ThreadArg* arg = reinterpret_cast<ThreadArg*>(v);\n-    SharedState* shared = arg->shared;\n-    ThreadState* thread = arg->thread;\n-    {\n-      MutexLock l(&shared->mu);\n-      shared->num_initialized++;\n-      if (shared->num_initialized >= shared->total) {\n-        shared->cv.SignalAll();\n-      }\n-      while (!shared->start) {\n-        shared->cv.Wait();\n-      }\n-    }\n-\n-    thread->stats.Start();\n-    (arg->bm->*(arg->method))(thread);\n-    thread->stats.Stop();\n-\n-    {\n-      MutexLock l(&shared->mu);\n-      shared->num_done++;\n-      if (shared->num_done >= shared->total) {\n-        shared->cv.SignalAll();\n-      }\n-    }\n-  }\n-\n-  void RunBenchmark(int n, Slice name,\n-                    void (Benchmark::*method)(ThreadState*)) {\n-    SharedState shared;\n-    shared.total = n;\n-    shared.num_initialized = 0;\n-    shared.num_done = 0;\n-    shared.start = false;\n-\n-    ThreadArg* arg = new ThreadArg[n];\n-    for (int i = 0; i < n; i++) {\n-      arg[i].bm = this;\n-      arg[i].method = method;\n-      arg[i].shared = &shared;\n-      arg[i].thread = new ThreadState(i);\n-      arg[i].thread->shared = &shared;\n-      Env::Default()->StartThread(ThreadBody, &arg[i]);\n-    }\n-\n-    shared.mu.Lock();\n-    while (shared.num_initialized < n) {\n-      shared.cv.Wait();\n-    }\n-\n-    shared.start = true;\n-    shared.cv.SignalAll();\n-    while (shared.num_done < n) {\n-      shared.cv.Wait();\n-    }\n-    shared.mu.Unlock();\n-\n-    for (int i = 1; i < n; i++) {\n-      arg[0].thread->stats.Merge(arg[i].thread->stats);\n-    }\n-    arg[0].thread->stats.Report(name);\n-\n-    for (int i = 0; i < n; i++) {\n-      delete arg[i].thread;\n-    }\n-    delete[] arg;\n-  }\n-\n-  void Crc32c(ThreadState* thread) {\n-    // Checksum about 500MB of data total\n-    const int size = 4096;\n-    const char* label = \"(4K per op)\";\n-    std::string data(size, 'x');\n-    int64_t bytes = 0;\n-    uint32_t crc = 0;\n-    while (bytes < 500 * 1048576) {\n-      crc = crc32c::Value(data.data(), size);\n-      thread->stats.FinishedSingleOp();\n-      bytes += size;\n-    }\n-    // Print so result is not dead\n-    fprintf(stderr, \"... crc=0x%x\\r\", static_cast<unsigned int>(crc));\n-\n-    thread->stats.AddBytes(bytes);\n-    thread->stats.AddMessage(label);\n-  }\n-\n-  void AcquireLoad(ThreadState* thread) {\n-    int dummy;\n-    port::AtomicPointer ap(&dummy);\n-    int count = 0;\n-    void *ptr = NULL;\n-    thread->stats.AddMessage(\"(each op is 1000 loads)\");\n-    while (count < 100000) {\n-      for (int i = 0; i < 1000; i++) {\n-        ptr = ap.Acquire_Load();\n-      }\n-      count++;\n-      thread->stats.FinishedSingleOp();\n-    }\n-    if (ptr == NULL) exit(1); // Disable unused variable warning.\n-  }\n-\n-  void SnappyCompress(ThreadState* thread) {\n-    RandomGenerator gen;\n-    Slice input = gen.Generate(Options().block_size);\n-    int64_t bytes = 0;\n-    int64_t produced = 0;\n-    bool ok = true;\n-    std::string compressed;\n-    while (ok && bytes < 1024 * 1048576) {  // Compress 1G\n-      ok = port::Snappy_Compress(input.data(), input.size(), &compressed);\n-      produced += compressed.size();\n-      bytes += input.size();\n-      thread->stats.FinishedSingleOp();\n-    }\n-\n-    if (!ok) {\n-      thread->stats.AddMessage(\"(snappy failure)\");\n-    } else {\n-      char buf[100];\n-      snprintf(buf, sizeof(buf), \"(output: %.1f%%)\",\n-               (produced * 100.0) / bytes);\n-      thread->stats.AddMessage(buf);\n-      thread->stats.AddBytes(bytes);\n-    }\n-  }\n-\n-  void SnappyUncompress(ThreadState* thread) {\n-    RandomGenerator gen;\n-    Slice input = gen.Generate(Options().block_size);\n-    std::string compressed;\n-    bool ok = port::Snappy_Compress(input.data(), input.size(), &compressed);\n-    int64_t bytes = 0;\n-    char* uncompressed = new char[input.size()];\n-    while (ok && bytes < 1024 * 1048576) {  // Compress 1G\n-      ok =  port::Snappy_Uncompress(compressed.data(), compressed.size(),\n-                                    uncompressed);\n-      bytes += input.size();\n-      thread->stats.FinishedSingleOp();\n-    }\n-    delete[] uncompressed;\n-\n-    if (!ok) {\n-      thread->stats.AddMessage(\"(snappy failure)\");\n-    } else {\n-      thread->stats.AddBytes(bytes);\n-    }\n-  }\n-\n-  void Open() {\n-    assert(db_ == NULL);\n-    Options options;\n-    options.create_if_missing = !FLAGS_use_existing_db;\n-    options.block_cache = cache_;\n-    options.write_buffer_size = FLAGS_write_buffer_size;\n-    options.max_open_files = FLAGS_open_files;\n-    options.filter_policy = filter_policy_;\n-    options.reuse_logs = FLAGS_reuse_logs;\n-    Status s = DB::Open(options, FLAGS_db, &db_);\n-    if (!s.ok()) {\n-      fprintf(stderr, \"open error: %s\\n\", s.ToString().c_str());\n-      exit(1);\n-    }\n-  }\n-\n-  void OpenBench(ThreadState* thread) {\n-    for (int i = 0; i < num_; i++) {\n-      delete db_;\n-      Open();\n-      thread->stats.FinishedSingleOp();\n-    }\n-  }\n-\n-  void WriteSeq(ThreadState* thread) {\n-    DoWrite(thread, true);\n-  }\n-\n-  void WriteRandom(ThreadState* thread) {\n-    DoWrite(thread, false);\n-  }\n-\n-  void DoWrite(ThreadState* thread, bool seq) {\n-    if (num_ != FLAGS_num) {\n-      char msg[100];\n-      snprintf(msg, sizeof(msg), \"(%d ops)\", num_);\n-      thread->stats.AddMessage(msg);\n-    }\n-\n-    RandomGenerator gen;\n-    WriteBatch batch;\n-    Status s;\n-    int64_t bytes = 0;\n-    for (int i = 0; i < num_; i += entries_per_batch_) {\n-      batch.Clear();\n-      for (int j = 0; j < entries_per_batch_; j++) {\n-        const int k = seq ? i+j : (thread->rand.Next() % FLAGS_num);\n-        char key[100];\n-        snprintf(key, sizeof(key), \"%016d\", k);\n-        batch.Put(key, gen.Generate(value_size_));\n-        bytes += value_size_ + strlen(key);\n-        thread->stats.FinishedSingleOp();\n-      }\n-      s = db_->Write(write_options_, &batch);\n-      if (!s.ok()) {\n-        fprintf(stderr, \"put error: %s\\n\", s.ToString().c_str());\n-        exit(1);\n-      }\n-    }\n-    thread->stats.AddBytes(bytes);\n-  }\n-\n-  void ReadSequential(ThreadState* thread) {\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    int i = 0;\n-    int64_t bytes = 0;\n-    for (iter->SeekToFirst(); i < reads_ && iter->Valid(); iter->Next()) {\n-      bytes += iter->key().size() + iter->value().size();\n-      thread->stats.FinishedSingleOp();\n-      ++i;\n-    }\n-    delete iter;\n-    thread->stats.AddBytes(bytes);\n-  }\n-\n-  void ReadReverse(ThreadState* thread) {\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    int i = 0;\n-    int64_t bytes = 0;\n-    for (iter->SeekToLast(); i < reads_ && iter->Valid(); iter->Prev()) {\n-      bytes += iter->key().size() + iter->value().size();\n-      thread->stats.FinishedSingleOp();\n-      ++i;\n-    }\n-    delete iter;\n-    thread->stats.AddBytes(bytes);\n-  }\n-\n-  void ReadRandom(ThreadState* thread) {\n-    ReadOptions options;\n-    std::string value;\n-    int found = 0;\n-    for (int i = 0; i < reads_; i++) {\n-      char key[100];\n-      const int k = thread->rand.Next() % FLAGS_num;\n-      snprintf(key, sizeof(key), \"%016d\", k);\n-      if (db_->Get(options, key, &value).ok()) {\n-        found++;\n-      }\n-      thread->stats.FinishedSingleOp();\n-    }\n-    char msg[100];\n-    snprintf(msg, sizeof(msg), \"(%d of %d found)\", found, num_);\n-    thread->stats.AddMessage(msg);\n-  }\n-\n-  void ReadMissing(ThreadState* thread) {\n-    ReadOptions options;\n-    std::string value;\n-    for (int i = 0; i < reads_; i++) {\n-      char key[100];\n-      const int k = thread->rand.Next() % FLAGS_num;\n-      snprintf(key, sizeof(key), \"%016d.\", k);\n-      db_->Get(options, key, &value);\n-      thread->stats.FinishedSingleOp();\n-    }\n-  }\n-\n-  void ReadHot(ThreadState* thread) {\n-    ReadOptions options;\n-    std::string value;\n-    const int range = (FLAGS_num + 99) / 100;\n-    for (int i = 0; i < reads_; i++) {\n-      char key[100];\n-      const int k = thread->rand.Next() % range;\n-      snprintf(key, sizeof(key), \"%016d\", k);\n-      db_->Get(options, key, &value);\n-      thread->stats.FinishedSingleOp();\n-    }\n-  }\n-\n-  void SeekRandom(ThreadState* thread) {\n-    ReadOptions options;\n-    int found = 0;\n-    for (int i = 0; i < reads_; i++) {\n-      Iterator* iter = db_->NewIterator(options);\n-      char key[100];\n-      const int k = thread->rand.Next() % FLAGS_num;\n-      snprintf(key, sizeof(key), \"%016d\", k);\n-      iter->Seek(key);\n-      if (iter->Valid() && iter->key() == key) found++;\n-      delete iter;\n-      thread->stats.FinishedSingleOp();\n-    }\n-    char msg[100];\n-    snprintf(msg, sizeof(msg), \"(%d of %d found)\", found, num_);\n-    thread->stats.AddMessage(msg);\n-  }\n-\n-  void DoDelete(ThreadState* thread, bool seq) {\n-    RandomGenerator gen;\n-    WriteBatch batch;\n-    Status s;\n-    for (int i = 0; i < num_; i += entries_per_batch_) {\n-      batch.Clear();\n-      for (int j = 0; j < entries_per_batch_; j++) {\n-        const int k = seq ? i+j : (thread->rand.Next() % FLAGS_num);\n-        char key[100];\n-        snprintf(key, sizeof(key), \"%016d\", k);\n-        batch.Delete(key);\n-        thread->stats.FinishedSingleOp();\n-      }\n-      s = db_->Write(write_options_, &batch);\n-      if (!s.ok()) {\n-        fprintf(stderr, \"del error: %s\\n\", s.ToString().c_str());\n-        exit(1);\n-      }\n-    }\n-  }\n-\n-  void DeleteSeq(ThreadState* thread) {\n-    DoDelete(thread, true);\n-  }\n-\n-  void DeleteRandom(ThreadState* thread) {\n-    DoDelete(thread, false);\n-  }\n-\n-  void ReadWhileWriting(ThreadState* thread) {\n-    if (thread->tid > 0) {\n-      ReadRandom(thread);\n-    } else {\n-      // Special thread that keeps writing until other threads are done.\n-      RandomGenerator gen;\n-      while (true) {\n-        {\n-          MutexLock l(&thread->shared->mu);\n-          if (thread->shared->num_done + 1 >= thread->shared->num_initialized) {\n-            // Other threads have finished\n-            break;\n-          }\n-        }\n-\n-        const int k = thread->rand.Next() % FLAGS_num;\n-        char key[100];\n-        snprintf(key, sizeof(key), \"%016d\", k);\n-        Status s = db_->Put(write_options_, key, gen.Generate(value_size_));\n-        if (!s.ok()) {\n-          fprintf(stderr, \"put error: %s\\n\", s.ToString().c_str());\n-          exit(1);\n-        }\n-      }\n-\n-      // Do not count any of the preceding work/delay in stats.\n-      thread->stats.Start();\n-    }\n-  }\n-\n-  void Compact(ThreadState* thread) {\n-    db_->CompactRange(NULL, NULL);\n-  }\n-\n-  void PrintStats(const char* key) {\n-    std::string stats;\n-    if (!db_->GetProperty(key, &stats)) {\n-      stats = \"(failed)\";\n-    }\n-    fprintf(stdout, \"\\n%s\\n\", stats.c_str());\n-  }\n-\n-  static void WriteToFile(void* arg, const char* buf, int n) {\n-    reinterpret_cast<WritableFile*>(arg)->Append(Slice(buf, n));\n-  }\n-\n-  void HeapProfile() {\n-    char fname[100];\n-    snprintf(fname, sizeof(fname), \"%s/heap-%04d\", FLAGS_db, ++heap_counter_);\n-    WritableFile* file;\n-    Status s = Env::Default()->NewWritableFile(fname, &file);\n-    if (!s.ok()) {\n-      fprintf(stderr, \"%s\\n\", s.ToString().c_str());\n-      return;\n-    }\n-    bool ok = port::GetHeapProfile(WriteToFile, file);\n-    delete file;\n-    if (!ok) {\n-      fprintf(stderr, \"heap profiling not supported\\n\");\n-      Env::Default()->DeleteFile(fname);\n-    }\n-  }\n-};\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  FLAGS_write_buffer_size = leveldb::Options().write_buffer_size;\n-  FLAGS_open_files = leveldb::Options().max_open_files;\n-  std::string default_db_path;\n-\n-  for (int i = 1; i < argc; i++) {\n-    double d;\n-    int n;\n-    char junk;\n-    if (leveldb::Slice(argv[i]).starts_with(\"--benchmarks=\")) {\n-      FLAGS_benchmarks = argv[i] + strlen(\"--benchmarks=\");\n-    } else if (sscanf(argv[i], \"--compression_ratio=%lf%c\", &d, &junk) == 1) {\n-      FLAGS_compression_ratio = d;\n-    } else if (sscanf(argv[i], \"--histogram=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_histogram = n;\n-    } else if (sscanf(argv[i], \"--use_existing_db=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_use_existing_db = n;\n-    } else if (sscanf(argv[i], \"--reuse_logs=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_reuse_logs = n;\n-    } else if (sscanf(argv[i], \"--num=%d%c\", &n, &junk) == 1) {\n-      FLAGS_num = n;\n-    } else if (sscanf(argv[i], \"--reads=%d%c\", &n, &junk) == 1) {\n-      FLAGS_reads = n;\n-    } else if (sscanf(argv[i], \"--threads=%d%c\", &n, &junk) == 1) {\n-      FLAGS_threads = n;\n-    } else if (sscanf(argv[i], \"--value_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_value_size = n;\n-    } else if (sscanf(argv[i], \"--write_buffer_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_write_buffer_size = n;\n-    } else if (sscanf(argv[i], \"--cache_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_cache_size = n;\n-    } else if (sscanf(argv[i], \"--bloom_bits=%d%c\", &n, &junk) == 1) {\n-      FLAGS_bloom_bits = n;\n-    } else if (sscanf(argv[i], \"--open_files=%d%c\", &n, &junk) == 1) {\n-      FLAGS_open_files = n;\n-    } else if (strncmp(argv[i], \"--db=\", 5) == 0) {\n-      FLAGS_db = argv[i] + 5;\n-    } else {\n-      fprintf(stderr, \"Invalid flag '%s'\\n\", argv[i]);\n-      exit(1);\n-    }\n-  }\n-\n-  // Choose a location for the test database if none given with --db=<path>\n-  if (FLAGS_db == NULL) {\n-      leveldb::Env::Default()->GetTestDirectory(&default_db_path);\n-      default_db_path += \"/dbbench\";\n-      FLAGS_db = default_db_path.c_str();\n-  }\n-\n-  leveldb::Benchmark benchmark;\n-  benchmark.Run();\n-  return 0;\n-}"
      },
      {
        "sha": "60f4e66e55796756eff2586ecb1f8a9f688b2783",
        "filename": "src/leveldb/db/db_impl.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 1567,
        "changes": 1567,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_impl.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_impl.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,1567 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/db_impl.h\"\n-\n-#include <algorithm>\n-#include <set>\n-#include <string>\n-#include <stdint.h>\n-#include <stdio.h>\n-#include <vector>\n-#include \"db/builder.h\"\n-#include \"db/db_iter.h\"\n-#include \"db/dbformat.h\"\n-#include \"db/filename.h\"\n-#include \"db/log_reader.h\"\n-#include \"db/log_writer.h\"\n-#include \"db/memtable.h\"\n-#include \"db/table_cache.h\"\n-#include \"db/version_set.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/status.h\"\n-#include \"leveldb/table.h\"\n-#include \"leveldb/table_builder.h\"\n-#include \"port/port.h\"\n-#include \"table/block.h\"\n-#include \"table/merger.h\"\n-#include \"table/two_level_iterator.h\"\n-#include \"util/coding.h\"\n-#include \"util/logging.h\"\n-#include \"util/mutexlock.h\"\n-\n-namespace leveldb {\n-\n-const int kNumNonTableCacheFiles = 10;\n-\n-// Information kept for every waiting writer\n-struct DBImpl::Writer {\n-  Status status;\n-  WriteBatch* batch;\n-  bool sync;\n-  bool done;\n-  port::CondVar cv;\n-\n-  explicit Writer(port::Mutex* mu) : cv(mu) { }\n-};\n-\n-struct DBImpl::CompactionState {\n-  Compaction* const compaction;\n-\n-  // Sequence numbers < smallest_snapshot are not significant since we\n-  // will never have to service a snapshot below smallest_snapshot.\n-  // Therefore if we have seen a sequence number S <= smallest_snapshot,\n-  // we can drop all entries for the same key with sequence numbers < S.\n-  SequenceNumber smallest_snapshot;\n-\n-  // Files produced by compaction\n-  struct Output {\n-    uint64_t number;\n-    uint64_t file_size;\n-    InternalKey smallest, largest;\n-  };\n-  std::vector<Output> outputs;\n-\n-  // State kept for output being generated\n-  WritableFile* outfile;\n-  TableBuilder* builder;\n-\n-  uint64_t total_bytes;\n-\n-  Output* current_output() { return &outputs[outputs.size()-1]; }\n-\n-  explicit CompactionState(Compaction* c)\n-      : compaction(c),\n-        outfile(NULL),\n-        builder(NULL),\n-        total_bytes(0) {\n-  }\n-};\n-\n-// Fix user-supplied options to be reasonable\n-template <class T,class V>\n-static void ClipToRange(T* ptr, V minvalue, V maxvalue) {\n-  if (static_cast<V>(*ptr) > maxvalue) *ptr = maxvalue;\n-  if (static_cast<V>(*ptr) < minvalue) *ptr = minvalue;\n-}\n-Options SanitizeOptions(const std::string& dbname,\n-                        const InternalKeyComparator* icmp,\n-                        const InternalFilterPolicy* ipolicy,\n-                        const Options& src) {\n-  Options result = src;\n-  result.comparator = icmp;\n-  result.filter_policy = (src.filter_policy != NULL) ? ipolicy : NULL;\n-  ClipToRange(&result.max_open_files,    64 + kNumNonTableCacheFiles, 50000);\n-  ClipToRange(&result.write_buffer_size, 64<<10,                      1<<30);\n-  ClipToRange(&result.block_size,        1<<10,                       4<<20);\n-  if (result.info_log == NULL) {\n-    // Open a log file in the same directory as the db\n-    src.env->CreateDir(dbname);  // In case it does not exist\n-    src.env->RenameFile(InfoLogFileName(dbname), OldInfoLogFileName(dbname));\n-    Status s = src.env->NewLogger(InfoLogFileName(dbname), &result.info_log);\n-    if (!s.ok()) {\n-      // No place suitable for logging\n-      result.info_log = NULL;\n-    }\n-  }\n-  if (result.block_cache == NULL) {\n-    result.block_cache = NewLRUCache(8 << 20);\n-  }\n-  return result;\n-}\n-\n-DBImpl::DBImpl(const Options& raw_options, const std::string& dbname)\n-    : env_(raw_options.env),\n-      internal_comparator_(raw_options.comparator),\n-      internal_filter_policy_(raw_options.filter_policy),\n-      options_(SanitizeOptions(dbname, &internal_comparator_,\n-                               &internal_filter_policy_, raw_options)),\n-      owns_info_log_(options_.info_log != raw_options.info_log),\n-      owns_cache_(options_.block_cache != raw_options.block_cache),\n-      dbname_(dbname),\n-      db_lock_(NULL),\n-      shutting_down_(NULL),\n-      bg_cv_(&mutex_),\n-      mem_(NULL),\n-      imm_(NULL),\n-      logfile_(NULL),\n-      logfile_number_(0),\n-      log_(NULL),\n-      seed_(0),\n-      tmp_batch_(new WriteBatch),\n-      bg_compaction_scheduled_(false),\n-      manual_compaction_(NULL) {\n-  has_imm_.Release_Store(NULL);\n-\n-  // Reserve ten files or so for other uses and give the rest to TableCache.\n-  const int table_cache_size = options_.max_open_files - kNumNonTableCacheFiles;\n-  table_cache_ = new TableCache(dbname_, &options_, table_cache_size);\n-\n-  versions_ = new VersionSet(dbname_, &options_, table_cache_,\n-                             &internal_comparator_);\n-}\n-\n-DBImpl::~DBImpl() {\n-  // Wait for background work to finish\n-  mutex_.Lock();\n-  shutting_down_.Release_Store(this);  // Any non-NULL value is ok\n-  while (bg_compaction_scheduled_) {\n-    bg_cv_.Wait();\n-  }\n-  mutex_.Unlock();\n-\n-  if (db_lock_ != NULL) {\n-    env_->UnlockFile(db_lock_);\n-  }\n-\n-  delete versions_;\n-  if (mem_ != NULL) mem_->Unref();\n-  if (imm_ != NULL) imm_->Unref();\n-  delete tmp_batch_;\n-  delete log_;\n-  delete logfile_;\n-  delete table_cache_;\n-\n-  if (owns_info_log_) {\n-    delete options_.info_log;\n-  }\n-  if (owns_cache_) {\n-    delete options_.block_cache;\n-  }\n-}\n-\n-Status DBImpl::NewDB() {\n-  VersionEdit new_db;\n-  new_db.SetComparatorName(user_comparator()->Name());\n-  new_db.SetLogNumber(0);\n-  new_db.SetNextFile(2);\n-  new_db.SetLastSequence(0);\n-\n-  const std::string manifest = DescriptorFileName(dbname_, 1);\n-  WritableFile* file;\n-  Status s = env_->NewWritableFile(manifest, &file);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-  {\n-    log::Writer log(file);\n-    std::string record;\n-    new_db.EncodeTo(&record);\n-    s = log.AddRecord(record);\n-    if (s.ok()) {\n-      s = file->Close();\n-    }\n-  }\n-  delete file;\n-  if (s.ok()) {\n-    // Make \"CURRENT\" file that points to the new manifest file.\n-    s = SetCurrentFile(env_, dbname_, 1);\n-  } else {\n-    env_->DeleteFile(manifest);\n-  }\n-  return s;\n-}\n-\n-void DBImpl::MaybeIgnoreError(Status* s) const {\n-  if (s->ok() || options_.paranoid_checks) {\n-    // No change needed\n-  } else {\n-    Log(options_.info_log, \"Ignoring error %s\", s->ToString().c_str());\n-    *s = Status::OK();\n-  }\n-}\n-\n-void DBImpl::DeleteObsoleteFiles() {\n-  if (!bg_error_.ok()) {\n-    // After a background error, we don't know whether a new version may\n-    // or may not have been committed, so we cannot safely garbage collect.\n-    return;\n-  }\n-\n-  // Make a set of all of the live files\n-  std::set<uint64_t> live = pending_outputs_;\n-  versions_->AddLiveFiles(&live);\n-\n-  std::vector<std::string> filenames;\n-  env_->GetChildren(dbname_, &filenames); // Ignoring errors on purpose\n-  uint64_t number;\n-  FileType type;\n-  for (size_t i = 0; i < filenames.size(); i++) {\n-    if (ParseFileName(filenames[i], &number, &type)) {\n-      bool keep = true;\n-      switch (type) {\n-        case kLogFile:\n-          keep = ((number >= versions_->LogNumber()) ||\n-                  (number == versions_->PrevLogNumber()));\n-          break;\n-        case kDescriptorFile:\n-          // Keep my manifest file, and any newer incarnations'\n-          // (in case there is a race that allows other incarnations)\n-          keep = (number >= versions_->ManifestFileNumber());\n-          break;\n-        case kTableFile:\n-          keep = (live.find(number) != live.end());\n-          break;\n-        case kTempFile:\n-          // Any temp files that are currently being written to must\n-          // be recorded in pending_outputs_, which is inserted into \"live\"\n-          keep = (live.find(number) != live.end());\n-          break;\n-        case kCurrentFile:\n-        case kDBLockFile:\n-        case kInfoLogFile:\n-          keep = true;\n-          break;\n-      }\n-\n-      if (!keep) {\n-        if (type == kTableFile) {\n-          table_cache_->Evict(number);\n-        }\n-        Log(options_.info_log, \"Delete type=%d #%lld\\n\",\n-            int(type),\n-            static_cast<unsigned long long>(number));\n-        env_->DeleteFile(dbname_ + \"/\" + filenames[i]);\n-      }\n-    }\n-  }\n-}\n-\n-Status DBImpl::Recover(VersionEdit* edit, bool *save_manifest) {\n-  mutex_.AssertHeld();\n-\n-  // Ignore error from CreateDir since the creation of the DB is\n-  // committed only when the descriptor is created, and this directory\n-  // may already exist from a previous failed creation attempt.\n-  env_->CreateDir(dbname_);\n-  assert(db_lock_ == NULL);\n-  Status s = env_->LockFile(LockFileName(dbname_), &db_lock_);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-\n-  if (!env_->FileExists(CurrentFileName(dbname_))) {\n-    if (options_.create_if_missing) {\n-      s = NewDB();\n-      if (!s.ok()) {\n-        return s;\n-      }\n-    } else {\n-      return Status::InvalidArgument(\n-          dbname_, \"does not exist (create_if_missing is false)\");\n-    }\n-  } else {\n-    if (options_.error_if_exists) {\n-      return Status::InvalidArgument(\n-          dbname_, \"exists (error_if_exists is true)\");\n-    }\n-  }\n-\n-  s = versions_->Recover(save_manifest);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-  SequenceNumber max_sequence(0);\n-\n-  // Recover from all newer log files than the ones named in the\n-  // descriptor (new log files may have been added by the previous\n-  // incarnation without registering them in the descriptor).\n-  //\n-  // Note that PrevLogNumber() is no longer used, but we pay\n-  // attention to it in case we are recovering a database\n-  // produced by an older version of leveldb.\n-  const uint64_t min_log = versions_->LogNumber();\n-  const uint64_t prev_log = versions_->PrevLogNumber();\n-  std::vector<std::string> filenames;\n-  s = env_->GetChildren(dbname_, &filenames);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-  std::set<uint64_t> expected;\n-  versions_->AddLiveFiles(&expected);\n-  uint64_t number;\n-  FileType type;\n-  std::vector<uint64_t> logs;\n-  for (size_t i = 0; i < filenames.size(); i++) {\n-    if (ParseFileName(filenames[i], &number, &type)) {\n-      expected.erase(number);\n-      if (type == kLogFile && ((number >= min_log) || (number == prev_log)))\n-        logs.push_back(number);\n-    }\n-  }\n-  if (!expected.empty()) {\n-    char buf[50];\n-    snprintf(buf, sizeof(buf), \"%d missing files; e.g.\",\n-             static_cast<int>(expected.size()));\n-    return Status::Corruption(buf, TableFileName(dbname_, *(expected.begin())));\n-  }\n-\n-  // Recover in the order in which the logs were generated\n-  std::sort(logs.begin(), logs.end());\n-  for (size_t i = 0; i < logs.size(); i++) {\n-    s = RecoverLogFile(logs[i], (i == logs.size() - 1), save_manifest, edit,\n-                       &max_sequence);\n-    if (!s.ok()) {\n-      return s;\n-    }\n-\n-    // The previous incarnation may not have written any MANIFEST\n-    // records after allocating this log number.  So we manually\n-    // update the file number allocation counter in VersionSet.\n-    versions_->MarkFileNumberUsed(logs[i]);\n-  }\n-\n-  if (versions_->LastSequence() < max_sequence) {\n-    versions_->SetLastSequence(max_sequence);\n-  }\n-\n-  return Status::OK();\n-}\n-\n-Status DBImpl::RecoverLogFile(uint64_t log_number, bool last_log,\n-                              bool* save_manifest, VersionEdit* edit,\n-                              SequenceNumber* max_sequence) {\n-  struct LogReporter : public log::Reader::Reporter {\n-    Env* env;\n-    Logger* info_log;\n-    const char* fname;\n-    Status* status;  // NULL if options_.paranoid_checks==false\n-    virtual void Corruption(size_t bytes, const Status& s) {\n-      Log(info_log, \"%s%s: dropping %d bytes; %s\",\n-          (this->status == NULL ? \"(ignoring error) \" : \"\"),\n-          fname, static_cast<int>(bytes), s.ToString().c_str());\n-      if (this->status != NULL && this->status->ok()) *this->status = s;\n-    }\n-  };\n-\n-  mutex_.AssertHeld();\n-\n-  // Open the log file\n-  std::string fname = LogFileName(dbname_, log_number);\n-  SequentialFile* file;\n-  Status status = env_->NewSequentialFile(fname, &file);\n-  if (!status.ok()) {\n-    MaybeIgnoreError(&status);\n-    return status;\n-  }\n-\n-  // Create the log reader.\n-  LogReporter reporter;\n-  reporter.env = env_;\n-  reporter.info_log = options_.info_log;\n-  reporter.fname = fname.c_str();\n-  reporter.status = (options_.paranoid_checks ? &status : NULL);\n-  // We intentionally make log::Reader do checksumming even if\n-  // paranoid_checks==false so that corruptions cause entire commits\n-  // to be skipped instead of propagating bad information (like overly\n-  // large sequence numbers).\n-  log::Reader reader(file, &reporter, true/*checksum*/,\n-                     0/*initial_offset*/);\n-  Log(options_.info_log, \"Recovering log #%llu\",\n-      (unsigned long long) log_number);\n-\n-  // Read all the records and add to a memtable\n-  std::string scratch;\n-  Slice record;\n-  WriteBatch batch;\n-  int compactions = 0;\n-  MemTable* mem = NULL;\n-  while (reader.ReadRecord(&record, &scratch) &&\n-         status.ok()) {\n-    if (record.size() < 12) {\n-      reporter.Corruption(\n-          record.size(), Status::Corruption(\"log record too small\"));\n-      continue;\n-    }\n-    WriteBatchInternal::SetContents(&batch, record);\n-\n-    if (mem == NULL) {\n-      mem = new MemTable(internal_comparator_);\n-      mem->Ref();\n-    }\n-    status = WriteBatchInternal::InsertInto(&batch, mem);\n-    MaybeIgnoreError(&status);\n-    if (!status.ok()) {\n-      break;\n-    }\n-    const SequenceNumber last_seq =\n-        WriteBatchInternal::Sequence(&batch) +\n-        WriteBatchInternal::Count(&batch) - 1;\n-    if (last_seq > *max_sequence) {\n-      *max_sequence = last_seq;\n-    }\n-\n-    if (mem->ApproximateMemoryUsage() > options_.write_buffer_size) {\n-      compactions++;\n-      *save_manifest = true;\n-      status = WriteLevel0Table(mem, edit, NULL);\n-      mem->Unref();\n-      mem = NULL;\n-      if (!status.ok()) {\n-        // Reflect errors immediately so that conditions like full\n-        // file-systems cause the DB::Open() to fail.\n-        break;\n-      }\n-    }\n-  }\n-\n-  delete file;\n-\n-  // See if we should keep reusing the last log file.\n-  if (status.ok() && options_.reuse_logs && last_log && compactions == 0) {\n-    assert(logfile_ == NULL);\n-    assert(log_ == NULL);\n-    assert(mem_ == NULL);\n-    uint64_t lfile_size;\n-    if (env_->GetFileSize(fname, &lfile_size).ok() &&\n-        env_->NewAppendableFile(fname, &logfile_).ok()) {\n-      Log(options_.info_log, \"Reusing old log %s \\n\", fname.c_str());\n-      log_ = new log::Writer(logfile_, lfile_size);\n-      logfile_number_ = log_number;\n-      if (mem != NULL) {\n-        mem_ = mem;\n-        mem = NULL;\n-      } else {\n-        // mem can be NULL if lognum exists but was empty.\n-        mem_ = new MemTable(internal_comparator_);\n-        mem_->Ref();\n-      }\n-    }\n-  }\n-\n-  if (mem != NULL) {\n-    // mem did not get reused; compact it.\n-    if (status.ok()) {\n-      *save_manifest = true;\n-      status = WriteLevel0Table(mem, edit, NULL);\n-    }\n-    mem->Unref();\n-  }\n-\n-  return status;\n-}\n-\n-Status DBImpl::WriteLevel0Table(MemTable* mem, VersionEdit* edit,\n-                                Version* base) {\n-  mutex_.AssertHeld();\n-  const uint64_t start_micros = env_->NowMicros();\n-  FileMetaData meta;\n-  meta.number = versions_->NewFileNumber();\n-  pending_outputs_.insert(meta.number);\n-  Iterator* iter = mem->NewIterator();\n-  Log(options_.info_log, \"Level-0 table #%llu: started\",\n-      (unsigned long long) meta.number);\n-\n-  Status s;\n-  {\n-    mutex_.Unlock();\n-    s = BuildTable(dbname_, env_, options_, table_cache_, iter, &meta);\n-    mutex_.Lock();\n-  }\n-\n-  Log(options_.info_log, \"Level-0 table #%llu: %lld bytes %s\",\n-      (unsigned long long) meta.number,\n-      (unsigned long long) meta.file_size,\n-      s.ToString().c_str());\n-  delete iter;\n-  pending_outputs_.erase(meta.number);\n-\n-\n-  // Note that if file_size is zero, the file has been deleted and\n-  // should not be added to the manifest.\n-  int level = 0;\n-  if (s.ok() && meta.file_size > 0) {\n-    const Slice min_user_key = meta.smallest.user_key();\n-    const Slice max_user_key = meta.largest.user_key();\n-    if (base != NULL) {\n-      level = base->PickLevelForMemTableOutput(min_user_key, max_user_key);\n-    }\n-    edit->AddFile(level, meta.number, meta.file_size,\n-                  meta.smallest, meta.largest);\n-  }\n-\n-  CompactionStats stats;\n-  stats.micros = env_->NowMicros() - start_micros;\n-  stats.bytes_written = meta.file_size;\n-  stats_[level].Add(stats);\n-  return s;\n-}\n-\n-void DBImpl::CompactMemTable() {\n-  mutex_.AssertHeld();\n-  assert(imm_ != NULL);\n-\n-  // Save the contents of the memtable as a new Table\n-  VersionEdit edit;\n-  Version* base = versions_->current();\n-  base->Ref();\n-  Status s = WriteLevel0Table(imm_, &edit, base);\n-  base->Unref();\n-\n-  if (s.ok() && shutting_down_.Acquire_Load()) {\n-    s = Status::IOError(\"Deleting DB during memtable compaction\");\n-  }\n-\n-  // Replace immutable memtable with the generated Table\n-  if (s.ok()) {\n-    edit.SetPrevLogNumber(0);\n-    edit.SetLogNumber(logfile_number_);  // Earlier logs no longer needed\n-    s = versions_->LogAndApply(&edit, &mutex_);\n-  }\n-\n-  if (s.ok()) {\n-    // Commit to the new state\n-    imm_->Unref();\n-    imm_ = NULL;\n-    has_imm_.Release_Store(NULL);\n-    DeleteObsoleteFiles();\n-  } else {\n-    RecordBackgroundError(s);\n-  }\n-}\n-\n-void DBImpl::CompactRange(const Slice* begin, const Slice* end) {\n-  int max_level_with_files = 1;\n-  {\n-    MutexLock l(&mutex_);\n-    Version* base = versions_->current();\n-    for (int level = 1; level < config::kNumLevels; level++) {\n-      if (base->OverlapInLevel(level, begin, end)) {\n-        max_level_with_files = level;\n-      }\n-    }\n-  }\n-  TEST_CompactMemTable(); // TODO(sanjay): Skip if memtable does not overlap\n-  for (int level = 0; level < max_level_with_files; level++) {\n-    TEST_CompactRange(level, begin, end);\n-  }\n-}\n-\n-void DBImpl::TEST_CompactRange(int level, const Slice* begin,const Slice* end) {\n-  assert(level >= 0);\n-  assert(level + 1 < config::kNumLevels);\n-\n-  InternalKey begin_storage, end_storage;\n-\n-  ManualCompaction manual;\n-  manual.level = level;\n-  manual.done = false;\n-  if (begin == NULL) {\n-    manual.begin = NULL;\n-  } else {\n-    begin_storage = InternalKey(*begin, kMaxSequenceNumber, kValueTypeForSeek);\n-    manual.begin = &begin_storage;\n-  }\n-  if (end == NULL) {\n-    manual.end = NULL;\n-  } else {\n-    end_storage = InternalKey(*end, 0, static_cast<ValueType>(0));\n-    manual.end = &end_storage;\n-  }\n-\n-  MutexLock l(&mutex_);\n-  while (!manual.done && !shutting_down_.Acquire_Load() && bg_error_.ok()) {\n-    if (manual_compaction_ == NULL) {  // Idle\n-      manual_compaction_ = &manual;\n-      MaybeScheduleCompaction();\n-    } else {  // Running either my compaction or another compaction.\n-      bg_cv_.Wait();\n-    }\n-  }\n-  if (manual_compaction_ == &manual) {\n-    // Cancel my manual compaction since we aborted early for some reason.\n-    manual_compaction_ = NULL;\n-  }\n-}\n-\n-Status DBImpl::TEST_CompactMemTable() {\n-  // NULL batch means just wait for earlier writes to be done\n-  Status s = Write(WriteOptions(), NULL);\n-  if (s.ok()) {\n-    // Wait until the compaction completes\n-    MutexLock l(&mutex_);\n-    while (imm_ != NULL && bg_error_.ok()) {\n-      bg_cv_.Wait();\n-    }\n-    if (imm_ != NULL) {\n-      s = bg_error_;\n-    }\n-  }\n-  return s;\n-}\n-\n-void DBImpl::RecordBackgroundError(const Status& s) {\n-  mutex_.AssertHeld();\n-  if (bg_error_.ok()) {\n-    bg_error_ = s;\n-    bg_cv_.SignalAll();\n-  }\n-}\n-\n-void DBImpl::MaybeScheduleCompaction() {\n-  mutex_.AssertHeld();\n-  if (bg_compaction_scheduled_) {\n-    // Already scheduled\n-  } else if (shutting_down_.Acquire_Load()) {\n-    // DB is being deleted; no more background compactions\n-  } else if (!bg_error_.ok()) {\n-    // Already got an error; no more changes\n-  } else if (imm_ == NULL &&\n-             manual_compaction_ == NULL &&\n-             !versions_->NeedsCompaction()) {\n-    // No work to be done\n-  } else {\n-    bg_compaction_scheduled_ = true;\n-    env_->Schedule(&DBImpl::BGWork, this);\n-  }\n-}\n-\n-void DBImpl::BGWork(void* db) {\n-  reinterpret_cast<DBImpl*>(db)->BackgroundCall();\n-}\n-\n-void DBImpl::BackgroundCall() {\n-  MutexLock l(&mutex_);\n-  assert(bg_compaction_scheduled_);\n-  if (shutting_down_.Acquire_Load()) {\n-    // No more background work when shutting down.\n-  } else if (!bg_error_.ok()) {\n-    // No more background work after a background error.\n-  } else {\n-    BackgroundCompaction();\n-  }\n-\n-  bg_compaction_scheduled_ = false;\n-\n-  // Previous compaction may have produced too many files in a level,\n-  // so reschedule another compaction if needed.\n-  MaybeScheduleCompaction();\n-  bg_cv_.SignalAll();\n-}\n-\n-void DBImpl::BackgroundCompaction() {\n-  mutex_.AssertHeld();\n-\n-  if (imm_ != NULL) {\n-    CompactMemTable();\n-    return;\n-  }\n-\n-  Compaction* c;\n-  bool is_manual = (manual_compaction_ != NULL);\n-  InternalKey manual_end;\n-  if (is_manual) {\n-    ManualCompaction* m = manual_compaction_;\n-    c = versions_->CompactRange(m->level, m->begin, m->end);\n-    m->done = (c == NULL);\n-    if (c != NULL) {\n-      manual_end = c->input(0, c->num_input_files(0) - 1)->largest;\n-    }\n-    Log(options_.info_log,\n-        \"Manual compaction at level-%d from %s .. %s; will stop at %s\\n\",\n-        m->level,\n-        (m->begin ? m->begin->DebugString().c_str() : \"(begin)\"),\n-        (m->end ? m->end->DebugString().c_str() : \"(end)\"),\n-        (m->done ? \"(end)\" : manual_end.DebugString().c_str()));\n-  } else {\n-    c = versions_->PickCompaction();\n-  }\n-\n-  Status status;\n-  if (c == NULL) {\n-    // Nothing to do\n-  } else if (!is_manual && c->IsTrivialMove()) {\n-    // Move file to next level\n-    assert(c->num_input_files(0) == 1);\n-    FileMetaData* f = c->input(0, 0);\n-    c->edit()->DeleteFile(c->level(), f->number);\n-    c->edit()->AddFile(c->level() + 1, f->number, f->file_size,\n-                       f->smallest, f->largest);\n-    status = versions_->LogAndApply(c->edit(), &mutex_);\n-    if (!status.ok()) {\n-      RecordBackgroundError(status);\n-    }\n-    VersionSet::LevelSummaryStorage tmp;\n-    Log(options_.info_log, \"Moved #%lld to level-%d %lld bytes %s: %s\\n\",\n-        static_cast<unsigned long long>(f->number),\n-        c->level() + 1,\n-        static_cast<unsigned long long>(f->file_size),\n-        status.ToString().c_str(),\n-        versions_->LevelSummary(&tmp));\n-  } else {\n-    CompactionState* compact = new CompactionState(c);\n-    status = DoCompactionWork(compact);\n-    if (!status.ok()) {\n-      RecordBackgroundError(status);\n-    }\n-    CleanupCompaction(compact);\n-    c->ReleaseInputs();\n-    DeleteObsoleteFiles();\n-  }\n-  delete c;\n-\n-  if (status.ok()) {\n-    // Done\n-  } else if (shutting_down_.Acquire_Load()) {\n-    // Ignore compaction errors found during shutting down\n-  } else {\n-    Log(options_.info_log,\n-        \"Compaction error: %s\", status.ToString().c_str());\n-  }\n-\n-  if (is_manual) {\n-    ManualCompaction* m = manual_compaction_;\n-    if (!status.ok()) {\n-      m->done = true;\n-    }\n-    if (!m->done) {\n-      // We only compacted part of the requested range.  Update *m\n-      // to the range that is left to be compacted.\n-      m->tmp_storage = manual_end;\n-      m->begin = &m->tmp_storage;\n-    }\n-    manual_compaction_ = NULL;\n-  }\n-}\n-\n-void DBImpl::CleanupCompaction(CompactionState* compact) {\n-  mutex_.AssertHeld();\n-  if (compact->builder != NULL) {\n-    // May happen if we get a shutdown call in the middle of compaction\n-    compact->builder->Abandon();\n-    delete compact->builder;\n-  } else {\n-    assert(compact->outfile == NULL);\n-  }\n-  delete compact->outfile;\n-  for (size_t i = 0; i < compact->outputs.size(); i++) {\n-    const CompactionState::Output& out = compact->outputs[i];\n-    pending_outputs_.erase(out.number);\n-  }\n-  delete compact;\n-}\n-\n-Status DBImpl::OpenCompactionOutputFile(CompactionState* compact) {\n-  assert(compact != NULL);\n-  assert(compact->builder == NULL);\n-  uint64_t file_number;\n-  {\n-    mutex_.Lock();\n-    file_number = versions_->NewFileNumber();\n-    pending_outputs_.insert(file_number);\n-    CompactionState::Output out;\n-    out.number = file_number;\n-    out.smallest.Clear();\n-    out.largest.Clear();\n-    compact->outputs.push_back(out);\n-    mutex_.Unlock();\n-  }\n-\n-  // Make the output file\n-  std::string fname = TableFileName(dbname_, file_number);\n-  Status s = env_->NewWritableFile(fname, &compact->outfile);\n-  if (s.ok()) {\n-    compact->builder = new TableBuilder(options_, compact->outfile);\n-  }\n-  return s;\n-}\n-\n-Status DBImpl::FinishCompactionOutputFile(CompactionState* compact,\n-                                          Iterator* input) {\n-  assert(compact != NULL);\n-  assert(compact->outfile != NULL);\n-  assert(compact->builder != NULL);\n-\n-  const uint64_t output_number = compact->current_output()->number;\n-  assert(output_number != 0);\n-\n-  // Check for iterator errors\n-  Status s = input->status();\n-  const uint64_t current_entries = compact->builder->NumEntries();\n-  if (s.ok()) {\n-    s = compact->builder->Finish();\n-  } else {\n-    compact->builder->Abandon();\n-  }\n-  const uint64_t current_bytes = compact->builder->FileSize();\n-  compact->current_output()->file_size = current_bytes;\n-  compact->total_bytes += current_bytes;\n-  delete compact->builder;\n-  compact->builder = NULL;\n-\n-  // Finish and check for file errors\n-  if (s.ok()) {\n-    s = compact->outfile->Sync();\n-  }\n-  if (s.ok()) {\n-    s = compact->outfile->Close();\n-  }\n-  delete compact->outfile;\n-  compact->outfile = NULL;\n-\n-  if (s.ok() && current_entries > 0) {\n-    // Verify that the table is usable\n-    Iterator* iter = table_cache_->NewIterator(ReadOptions(),\n-                                               output_number,\n-                                               current_bytes);\n-    s = iter->status();\n-    delete iter;\n-    if (s.ok()) {\n-      Log(options_.info_log,\n-          \"Generated table #%llu@%d: %lld keys, %lld bytes\",\n-          (unsigned long long) output_number,\n-          compact->compaction->level(),\n-          (unsigned long long) current_entries,\n-          (unsigned long long) current_bytes);\n-    }\n-  }\n-  return s;\n-}\n-\n-\n-Status DBImpl::InstallCompactionResults(CompactionState* compact) {\n-  mutex_.AssertHeld();\n-  Log(options_.info_log,  \"Compacted %d@%d + %d@%d files => %lld bytes\",\n-      compact->compaction->num_input_files(0),\n-      compact->compaction->level(),\n-      compact->compaction->num_input_files(1),\n-      compact->compaction->level() + 1,\n-      static_cast<long long>(compact->total_bytes));\n-\n-  // Add compaction outputs\n-  compact->compaction->AddInputDeletions(compact->compaction->edit());\n-  const int level = compact->compaction->level();\n-  for (size_t i = 0; i < compact->outputs.size(); i++) {\n-    const CompactionState::Output& out = compact->outputs[i];\n-    compact->compaction->edit()->AddFile(\n-        level + 1,\n-        out.number, out.file_size, out.smallest, out.largest);\n-  }\n-  return versions_->LogAndApply(compact->compaction->edit(), &mutex_);\n-}\n-\n-Status DBImpl::DoCompactionWork(CompactionState* compact) {\n-  const uint64_t start_micros = env_->NowMicros();\n-  int64_t imm_micros = 0;  // Micros spent doing imm_ compactions\n-\n-  Log(options_.info_log,  \"Compacting %d@%d + %d@%d files\",\n-      compact->compaction->num_input_files(0),\n-      compact->compaction->level(),\n-      compact->compaction->num_input_files(1),\n-      compact->compaction->level() + 1);\n-\n-  assert(versions_->NumLevelFiles(compact->compaction->level()) > 0);\n-  assert(compact->builder == NULL);\n-  assert(compact->outfile == NULL);\n-  if (snapshots_.empty()) {\n-    compact->smallest_snapshot = versions_->LastSequence();\n-  } else {\n-    compact->smallest_snapshot = snapshots_.oldest()->number_;\n-  }\n-\n-  // Release mutex while we're actually doing the compaction work\n-  mutex_.Unlock();\n-\n-  Iterator* input = versions_->MakeInputIterator(compact->compaction);\n-  input->SeekToFirst();\n-  Status status;\n-  ParsedInternalKey ikey;\n-  std::string current_user_key;\n-  bool has_current_user_key = false;\n-  SequenceNumber last_sequence_for_key = kMaxSequenceNumber;\n-  for (; input->Valid() && !shutting_down_.Acquire_Load(); ) {\n-    // Prioritize immutable compaction work\n-    if (has_imm_.NoBarrier_Load() != NULL) {\n-      const uint64_t imm_start = env_->NowMicros();\n-      mutex_.Lock();\n-      if (imm_ != NULL) {\n-        CompactMemTable();\n-        bg_cv_.SignalAll();  // Wakeup MakeRoomForWrite() if necessary\n-      }\n-      mutex_.Unlock();\n-      imm_micros += (env_->NowMicros() - imm_start);\n-    }\n-\n-    Slice key = input->key();\n-    if (compact->compaction->ShouldStopBefore(key) &&\n-        compact->builder != NULL) {\n-      status = FinishCompactionOutputFile(compact, input);\n-      if (!status.ok()) {\n-        break;\n-      }\n-    }\n-\n-    // Handle key/value, add to state, etc.\n-    bool drop = false;\n-    if (!ParseInternalKey(key, &ikey)) {\n-      // Do not hide error keys\n-      current_user_key.clear();\n-      has_current_user_key = false;\n-      last_sequence_for_key = kMaxSequenceNumber;\n-    } else {\n-      if (!has_current_user_key ||\n-          user_comparator()->Compare(ikey.user_key,\n-                                     Slice(current_user_key)) != 0) {\n-        // First occurrence of this user key\n-        current_user_key.assign(ikey.user_key.data(), ikey.user_key.size());\n-        has_current_user_key = true;\n-        last_sequence_for_key = kMaxSequenceNumber;\n-      }\n-\n-      if (last_sequence_for_key <= compact->smallest_snapshot) {\n-        // Hidden by an newer entry for same user key\n-        drop = true;    // (A)\n-      } else if (ikey.type == kTypeDeletion &&\n-                 ikey.sequence <= compact->smallest_snapshot &&\n-                 compact->compaction->IsBaseLevelForKey(ikey.user_key)) {\n-        // For this user key:\n-        // (1) there is no data in higher levels\n-        // (2) data in lower levels will have larger sequence numbers\n-        // (3) data in layers that are being compacted here and have\n-        //     smaller sequence numbers will be dropped in the next\n-        //     few iterations of this loop (by rule (A) above).\n-        // Therefore this deletion marker is obsolete and can be dropped.\n-        drop = true;\n-      }\n-\n-      last_sequence_for_key = ikey.sequence;\n-    }\n-#if 0\n-    Log(options_.info_log,\n-        \"  Compact: %s, seq %d, type: %d %d, drop: %d, is_base: %d, \"\n-        \"%d smallest_snapshot: %d\",\n-        ikey.user_key.ToString().c_str(),\n-        (int)ikey.sequence, ikey.type, kTypeValue, drop,\n-        compact->compaction->IsBaseLevelForKey(ikey.user_key),\n-        (int)last_sequence_for_key, (int)compact->smallest_snapshot);\n-#endif\n-\n-    if (!drop) {\n-      // Open output file if necessary\n-      if (compact->builder == NULL) {\n-        status = OpenCompactionOutputFile(compact);\n-        if (!status.ok()) {\n-          break;\n-        }\n-      }\n-      if (compact->builder->NumEntries() == 0) {\n-        compact->current_output()->smallest.DecodeFrom(key);\n-      }\n-      compact->current_output()->largest.DecodeFrom(key);\n-      compact->builder->Add(key, input->value());\n-\n-      // Close output file if it is big enough\n-      if (compact->builder->FileSize() >=\n-          compact->compaction->MaxOutputFileSize()) {\n-        status = FinishCompactionOutputFile(compact, input);\n-        if (!status.ok()) {\n-          break;\n-        }\n-      }\n-    }\n-\n-    input->Next();\n-  }\n-\n-  if (status.ok() && shutting_down_.Acquire_Load()) {\n-    status = Status::IOError(\"Deleting DB during compaction\");\n-  }\n-  if (status.ok() && compact->builder != NULL) {\n-    status = FinishCompactionOutputFile(compact, input);\n-  }\n-  if (status.ok()) {\n-    status = input->status();\n-  }\n-  delete input;\n-  input = NULL;\n-\n-  CompactionStats stats;\n-  stats.micros = env_->NowMicros() - start_micros - imm_micros;\n-  for (int which = 0; which < 2; which++) {\n-    for (int i = 0; i < compact->compaction->num_input_files(which); i++) {\n-      stats.bytes_read += compact->compaction->input(which, i)->file_size;\n-    }\n-  }\n-  for (size_t i = 0; i < compact->outputs.size(); i++) {\n-    stats.bytes_written += compact->outputs[i].file_size;\n-  }\n-\n-  mutex_.Lock();\n-  stats_[compact->compaction->level() + 1].Add(stats);\n-\n-  if (status.ok()) {\n-    status = InstallCompactionResults(compact);\n-  }\n-  if (!status.ok()) {\n-    RecordBackgroundError(status);\n-  }\n-  VersionSet::LevelSummaryStorage tmp;\n-  Log(options_.info_log,\n-      \"compacted to: %s\", versions_->LevelSummary(&tmp));\n-  return status;\n-}\n-\n-namespace {\n-struct IterState {\n-  port::Mutex* mu;\n-  Version* version;\n-  MemTable* mem;\n-  MemTable* imm;\n-};\n-\n-static void CleanupIteratorState(void* arg1, void* arg2) {\n-  IterState* state = reinterpret_cast<IterState*>(arg1);\n-  state->mu->Lock();\n-  state->mem->Unref();\n-  if (state->imm != NULL) state->imm->Unref();\n-  state->version->Unref();\n-  state->mu->Unlock();\n-  delete state;\n-}\n-}  // namespace\n-\n-Iterator* DBImpl::NewInternalIterator(const ReadOptions& options,\n-                                      SequenceNumber* latest_snapshot,\n-                                      uint32_t* seed) {\n-  IterState* cleanup = new IterState;\n-  mutex_.Lock();\n-  *latest_snapshot = versions_->LastSequence();\n-\n-  // Collect together all needed child iterators\n-  std::vector<Iterator*> list;\n-  list.push_back(mem_->NewIterator());\n-  mem_->Ref();\n-  if (imm_ != NULL) {\n-    list.push_back(imm_->NewIterator());\n-    imm_->Ref();\n-  }\n-  versions_->current()->AddIterators(options, &list);\n-  Iterator* internal_iter =\n-      NewMergingIterator(&internal_comparator_, &list[0], list.size());\n-  versions_->current()->Ref();\n-\n-  cleanup->mu = &mutex_;\n-  cleanup->mem = mem_;\n-  cleanup->imm = imm_;\n-  cleanup->version = versions_->current();\n-  internal_iter->RegisterCleanup(CleanupIteratorState, cleanup, NULL);\n-\n-  *seed = ++seed_;\n-  mutex_.Unlock();\n-  return internal_iter;\n-}\n-\n-Iterator* DBImpl::TEST_NewInternalIterator() {\n-  SequenceNumber ignored;\n-  uint32_t ignored_seed;\n-  return NewInternalIterator(ReadOptions(), &ignored, &ignored_seed);\n-}\n-\n-int64_t DBImpl::TEST_MaxNextLevelOverlappingBytes() {\n-  MutexLock l(&mutex_);\n-  return versions_->MaxNextLevelOverlappingBytes();\n-}\n-\n-Status DBImpl::Get(const ReadOptions& options,\n-                   const Slice& key,\n-                   std::string* value) {\n-  Status s;\n-  MutexLock l(&mutex_);\n-  SequenceNumber snapshot;\n-  if (options.snapshot != NULL) {\n-    snapshot = reinterpret_cast<const SnapshotImpl*>(options.snapshot)->number_;\n-  } else {\n-    snapshot = versions_->LastSequence();\n-  }\n-\n-  MemTable* mem = mem_;\n-  MemTable* imm = imm_;\n-  Version* current = versions_->current();\n-  mem->Ref();\n-  if (imm != NULL) imm->Ref();\n-  current->Ref();\n-\n-  bool have_stat_update = false;\n-  Version::GetStats stats;\n-\n-  // Unlock while reading from files and memtables\n-  {\n-    mutex_.Unlock();\n-    // First look in the memtable, then in the immutable memtable (if any).\n-    LookupKey lkey(key, snapshot);\n-    if (mem->Get(lkey, value, &s)) {\n-      // Done\n-    } else if (imm != NULL && imm->Get(lkey, value, &s)) {\n-      // Done\n-    } else {\n-      s = current->Get(options, lkey, value, &stats);\n-      have_stat_update = true;\n-    }\n-    mutex_.Lock();\n-  }\n-\n-  if (have_stat_update && current->UpdateStats(stats)) {\n-    MaybeScheduleCompaction();\n-  }\n-  mem->Unref();\n-  if (imm != NULL) imm->Unref();\n-  current->Unref();\n-  return s;\n-}\n-\n-Iterator* DBImpl::NewIterator(const ReadOptions& options) {\n-  SequenceNumber latest_snapshot;\n-  uint32_t seed;\n-  Iterator* iter = NewInternalIterator(options, &latest_snapshot, &seed);\n-  return NewDBIterator(\n-      this, user_comparator(), iter,\n-      (options.snapshot != NULL\n-       ? reinterpret_cast<const SnapshotImpl*>(options.snapshot)->number_\n-       : latest_snapshot),\n-      seed);\n-}\n-\n-void DBImpl::RecordReadSample(Slice key) {\n-  MutexLock l(&mutex_);\n-  if (versions_->current()->RecordReadSample(key)) {\n-    MaybeScheduleCompaction();\n-  }\n-}\n-\n-const Snapshot* DBImpl::GetSnapshot() {\n-  MutexLock l(&mutex_);\n-  return snapshots_.New(versions_->LastSequence());\n-}\n-\n-void DBImpl::ReleaseSnapshot(const Snapshot* s) {\n-  MutexLock l(&mutex_);\n-  snapshots_.Delete(reinterpret_cast<const SnapshotImpl*>(s));\n-}\n-\n-// Convenience methods\n-Status DBImpl::Put(const WriteOptions& o, const Slice& key, const Slice& val) {\n-  return DB::Put(o, key, val);\n-}\n-\n-Status DBImpl::Delete(const WriteOptions& options, const Slice& key) {\n-  return DB::Delete(options, key);\n-}\n-\n-Status DBImpl::Write(const WriteOptions& options, WriteBatch* my_batch) {\n-  Writer w(&mutex_);\n-  w.batch = my_batch;\n-  w.sync = options.sync;\n-  w.done = false;\n-\n-  MutexLock l(&mutex_);\n-  writers_.push_back(&w);\n-  while (!w.done && &w != writers_.front()) {\n-    w.cv.Wait();\n-  }\n-  if (w.done) {\n-    return w.status;\n-  }\n-\n-  // May temporarily unlock and wait.\n-  Status status = MakeRoomForWrite(my_batch == NULL);\n-  uint64_t last_sequence = versions_->LastSequence();\n-  Writer* last_writer = &w;\n-  if (status.ok() && my_batch != NULL) {  // NULL batch is for compactions\n-    WriteBatch* updates = BuildBatchGroup(&last_writer);\n-    WriteBatchInternal::SetSequence(updates, last_sequence + 1);\n-    last_sequence += WriteBatchInternal::Count(updates);\n-\n-    // Add to log and apply to memtable.  We can release the lock\n-    // during this phase since &w is currently responsible for logging\n-    // and protects against concurrent loggers and concurrent writes\n-    // into mem_.\n-    {\n-      mutex_.Unlock();\n-      status = log_->AddRecord(WriteBatchInternal::Contents(updates));\n-      bool sync_error = false;\n-      if (status.ok() && options.sync) {\n-        status = logfile_->Sync();\n-        if (!status.ok()) {\n-          sync_error = true;\n-        }\n-      }\n-      if (status.ok()) {\n-        status = WriteBatchInternal::InsertInto(updates, mem_);\n-      }\n-      mutex_.Lock();\n-      if (sync_error) {\n-        // The state of the log file is indeterminate: the log record we\n-        // just added may or may not show up when the DB is re-opened.\n-        // So we force the DB into a mode where all future writes fail.\n-        RecordBackgroundError(status);\n-      }\n-    }\n-    if (updates == tmp_batch_) tmp_batch_->Clear();\n-\n-    versions_->SetLastSequence(last_sequence);\n-  }\n-\n-  while (true) {\n-    Writer* ready = writers_.front();\n-    writers_.pop_front();\n-    if (ready != &w) {\n-      ready->status = status;\n-      ready->done = true;\n-      ready->cv.Signal();\n-    }\n-    if (ready == last_writer) break;\n-  }\n-\n-  // Notify new head of write queue\n-  if (!writers_.empty()) {\n-    writers_.front()->cv.Signal();\n-  }\n-\n-  return status;\n-}\n-\n-// REQUIRES: Writer list must be non-empty\n-// REQUIRES: First writer must have a non-NULL batch\n-WriteBatch* DBImpl::BuildBatchGroup(Writer** last_writer) {\n-  assert(!writers_.empty());\n-  Writer* first = writers_.front();\n-  WriteBatch* result = first->batch;\n-  assert(result != NULL);\n-\n-  size_t size = WriteBatchInternal::ByteSize(first->batch);\n-\n-  // Allow the group to grow up to a maximum size, but if the\n-  // original write is small, limit the growth so we do not slow\n-  // down the small write too much.\n-  size_t max_size = 1 << 20;\n-  if (size <= (128<<10)) {\n-    max_size = size + (128<<10);\n-  }\n-\n-  *last_writer = first;\n-  std::deque<Writer*>::iterator iter = writers_.begin();\n-  ++iter;  // Advance past \"first\"\n-  for (; iter != writers_.end(); ++iter) {\n-    Writer* w = *iter;\n-    if (w->sync && !first->sync) {\n-      // Do not include a sync write into a batch handled by a non-sync write.\n-      break;\n-    }\n-\n-    if (w->batch != NULL) {\n-      size += WriteBatchInternal::ByteSize(w->batch);\n-      if (size > max_size) {\n-        // Do not make batch too big\n-        break;\n-      }\n-\n-      // Append to *result\n-      if (result == first->batch) {\n-        // Switch to temporary batch instead of disturbing caller's batch\n-        result = tmp_batch_;\n-        assert(WriteBatchInternal::Count(result) == 0);\n-        WriteBatchInternal::Append(result, first->batch);\n-      }\n-      WriteBatchInternal::Append(result, w->batch);\n-    }\n-    *last_writer = w;\n-  }\n-  return result;\n-}\n-\n-// REQUIRES: mutex_ is held\n-// REQUIRES: this thread is currently at the front of the writer queue\n-Status DBImpl::MakeRoomForWrite(bool force) {\n-  mutex_.AssertHeld();\n-  assert(!writers_.empty());\n-  bool allow_delay = !force;\n-  Status s;\n-  while (true) {\n-    if (!bg_error_.ok()) {\n-      // Yield previous error\n-      s = bg_error_;\n-      break;\n-    } else if (\n-        allow_delay &&\n-        versions_->NumLevelFiles(0) >= config::kL0_SlowdownWritesTrigger) {\n-      // We are getting close to hitting a hard limit on the number of\n-      // L0 files.  Rather than delaying a single write by several\n-      // seconds when we hit the hard limit, start delaying each\n-      // individual write by 1ms to reduce latency variance.  Also,\n-      // this delay hands over some CPU to the compaction thread in\n-      // case it is sharing the same core as the writer.\n-      mutex_.Unlock();\n-      env_->SleepForMicroseconds(1000);\n-      allow_delay = false;  // Do not delay a single write more than once\n-      mutex_.Lock();\n-    } else if (!force &&\n-               (mem_->ApproximateMemoryUsage() <= options_.write_buffer_size)) {\n-      // There is room in current memtable\n-      break;\n-    } else if (imm_ != NULL) {\n-      // We have filled up the current memtable, but the previous\n-      // one is still being compacted, so we wait.\n-      Log(options_.info_log, \"Current memtable full; waiting...\\n\");\n-      bg_cv_.Wait();\n-    } else if (versions_->NumLevelFiles(0) >= config::kL0_StopWritesTrigger) {\n-      // There are too many level-0 files.\n-      Log(options_.info_log, \"Too many L0 files; waiting...\\n\");\n-      bg_cv_.Wait();\n-    } else {\n-      // Attempt to switch to a new memtable and trigger compaction of old\n-      assert(versions_->PrevLogNumber() == 0);\n-      uint64_t new_log_number = versions_->NewFileNumber();\n-      WritableFile* lfile = NULL;\n-      s = env_->NewWritableFile(LogFileName(dbname_, new_log_number), &lfile);\n-      if (!s.ok()) {\n-        // Avoid chewing through file number space in a tight loop.\n-        versions_->ReuseFileNumber(new_log_number);\n-        break;\n-      }\n-      delete log_;\n-      delete logfile_;\n-      logfile_ = lfile;\n-      logfile_number_ = new_log_number;\n-      log_ = new log::Writer(lfile);\n-      imm_ = mem_;\n-      has_imm_.Release_Store(imm_);\n-      mem_ = new MemTable(internal_comparator_);\n-      mem_->Ref();\n-      force = false;   // Do not force another compaction if have room\n-      MaybeScheduleCompaction();\n-    }\n-  }\n-  return s;\n-}\n-\n-bool DBImpl::GetProperty(const Slice& property, std::string* value) {\n-  value->clear();\n-\n-  MutexLock l(&mutex_);\n-  Slice in = property;\n-  Slice prefix(\"leveldb.\");\n-  if (!in.starts_with(prefix)) return false;\n-  in.remove_prefix(prefix.size());\n-\n-  if (in.starts_with(\"num-files-at-level\")) {\n-    in.remove_prefix(strlen(\"num-files-at-level\"));\n-    uint64_t level;\n-    bool ok = ConsumeDecimalNumber(&in, &level) && in.empty();\n-    if (!ok || level >= config::kNumLevels) {\n-      return false;\n-    } else {\n-      char buf[100];\n-      snprintf(buf, sizeof(buf), \"%d\",\n-               versions_->NumLevelFiles(static_cast<int>(level)));\n-      *value = buf;\n-      return true;\n-    }\n-  } else if (in == \"stats\") {\n-    char buf[200];\n-    snprintf(buf, sizeof(buf),\n-             \"                               Compactions\\n\"\n-             \"Level  Files Size(MB) Time(sec) Read(MB) Write(MB)\\n\"\n-             \"--------------------------------------------------\\n\"\n-             );\n-    value->append(buf);\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      int files = versions_->NumLevelFiles(level);\n-      if (stats_[level].micros > 0 || files > 0) {\n-        snprintf(\n-            buf, sizeof(buf),\n-            \"%3d %8d %8.0f %9.0f %8.0f %9.0f\\n\",\n-            level,\n-            files,\n-            versions_->NumLevelBytes(level) / 1048576.0,\n-            stats_[level].micros / 1e6,\n-            stats_[level].bytes_read / 1048576.0,\n-            stats_[level].bytes_written / 1048576.0);\n-        value->append(buf);\n-      }\n-    }\n-    return true;\n-  } else if (in == \"sstables\") {\n-    *value = versions_->current()->DebugString();\n-    return true;\n-  } else if (in == \"approximate-memory-usage\") {\n-    size_t total_usage = options_.block_cache->TotalCharge();\n-    if (mem_) {\n-      total_usage += mem_->ApproximateMemoryUsage();\n-    }\n-    if (imm_) {\n-      total_usage += imm_->ApproximateMemoryUsage();\n-    }\n-    char buf[50];\n-    snprintf(buf, sizeof(buf), \"%llu\",\n-             static_cast<unsigned long long>(total_usage));\n-    value->append(buf);\n-    return true;\n-  }\n-\n-  return false;\n-}\n-\n-void DBImpl::GetApproximateSizes(\n-    const Range* range, int n,\n-    uint64_t* sizes) {\n-  // TODO(opt): better implementation\n-  Version* v;\n-  {\n-    MutexLock l(&mutex_);\n-    versions_->current()->Ref();\n-    v = versions_->current();\n-  }\n-\n-  for (int i = 0; i < n; i++) {\n-    // Convert user_key into a corresponding internal key.\n-    InternalKey k1(range[i].start, kMaxSequenceNumber, kValueTypeForSeek);\n-    InternalKey k2(range[i].limit, kMaxSequenceNumber, kValueTypeForSeek);\n-    uint64_t start = versions_->ApproximateOffsetOf(v, k1);\n-    uint64_t limit = versions_->ApproximateOffsetOf(v, k2);\n-    sizes[i] = (limit >= start ? limit - start : 0);\n-  }\n-\n-  {\n-    MutexLock l(&mutex_);\n-    v->Unref();\n-  }\n-}\n-\n-// Default implementations of convenience methods that subclasses of DB\n-// can call if they wish\n-Status DB::Put(const WriteOptions& opt, const Slice& key, const Slice& value) {\n-  WriteBatch batch;\n-  batch.Put(key, value);\n-  return Write(opt, &batch);\n-}\n-\n-Status DB::Delete(const WriteOptions& opt, const Slice& key) {\n-  WriteBatch batch;\n-  batch.Delete(key);\n-  return Write(opt, &batch);\n-}\n-\n-DB::~DB() { }\n-\n-Status DB::Open(const Options& options, const std::string& dbname,\n-                DB** dbptr) {\n-  *dbptr = NULL;\n-\n-  DBImpl* impl = new DBImpl(options, dbname);\n-  impl->mutex_.Lock();\n-  VersionEdit edit;\n-  // Recover handles create_if_missing, error_if_exists\n-  bool save_manifest = false;\n-  Status s = impl->Recover(&edit, &save_manifest);\n-  if (s.ok() && impl->mem_ == NULL) {\n-    // Create new log and a corresponding memtable.\n-    uint64_t new_log_number = impl->versions_->NewFileNumber();\n-    WritableFile* lfile;\n-    s = options.env->NewWritableFile(LogFileName(dbname, new_log_number),\n-                                     &lfile);\n-    if (s.ok()) {\n-      edit.SetLogNumber(new_log_number);\n-      impl->logfile_ = lfile;\n-      impl->logfile_number_ = new_log_number;\n-      impl->log_ = new log::Writer(lfile);\n-      impl->mem_ = new MemTable(impl->internal_comparator_);\n-      impl->mem_->Ref();\n-    }\n-  }\n-  if (s.ok() && save_manifest) {\n-    edit.SetPrevLogNumber(0);  // No older logs needed after recovery.\n-    edit.SetLogNumber(impl->logfile_number_);\n-    s = impl->versions_->LogAndApply(&edit, &impl->mutex_);\n-  }\n-  if (s.ok()) {\n-    impl->DeleteObsoleteFiles();\n-    impl->MaybeScheduleCompaction();\n-  }\n-  impl->mutex_.Unlock();\n-  if (s.ok()) {\n-    assert(impl->mem_ != NULL);\n-    *dbptr = impl;\n-  } else {\n-    delete impl;\n-  }\n-  return s;\n-}\n-\n-Snapshot::~Snapshot() {\n-}\n-\n-Status DestroyDB(const std::string& dbname, const Options& options) {\n-  Env* env = options.env;\n-  std::vector<std::string> filenames;\n-  // Ignore error in case directory does not exist\n-  env->GetChildren(dbname, &filenames);\n-  if (filenames.empty()) {\n-    return Status::OK();\n-  }\n-\n-  FileLock* lock;\n-  const std::string lockname = LockFileName(dbname);\n-  Status result = env->LockFile(lockname, &lock);\n-  if (result.ok()) {\n-    uint64_t number;\n-    FileType type;\n-    for (size_t i = 0; i < filenames.size(); i++) {\n-      if (ParseFileName(filenames[i], &number, &type) &&\n-          type != kDBLockFile) {  // Lock file will be deleted at end\n-        Status del = env->DeleteFile(dbname + \"/\" + filenames[i]);\n-        if (result.ok() && !del.ok()) {\n-          result = del;\n-        }\n-      }\n-    }\n-    env->UnlockFile(lock);  // Ignore error since state is already gone\n-    env->DeleteFile(lockname);\n-    env->DeleteDir(dbname);  // Ignore error in case dir contains other files\n-  }\n-  return result;\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "8ff323e72879967a9ff27876155a21ffb2330d3d",
        "filename": "src/leveldb/db/db_impl.h",
        "status": "removed",
        "additions": 0,
        "deletions": 211,
        "changes": 211,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,211 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_DB_IMPL_H_\n-#define STORAGE_LEVELDB_DB_DB_IMPL_H_\n-\n-#include <deque>\n-#include <set>\n-#include \"db/dbformat.h\"\n-#include \"db/log_writer.h\"\n-#include \"db/snapshot.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"port/port.h\"\n-#include \"port/thread_annotations.h\"\n-\n-namespace leveldb {\n-\n-class MemTable;\n-class TableCache;\n-class Version;\n-class VersionEdit;\n-class VersionSet;\n-\n-class DBImpl : public DB {\n- public:\n-  DBImpl(const Options& options, const std::string& dbname);\n-  virtual ~DBImpl();\n-\n-  // Implementations of the DB interface\n-  virtual Status Put(const WriteOptions&, const Slice& key, const Slice& value);\n-  virtual Status Delete(const WriteOptions&, const Slice& key);\n-  virtual Status Write(const WriteOptions& options, WriteBatch* updates);\n-  virtual Status Get(const ReadOptions& options,\n-                     const Slice& key,\n-                     std::string* value);\n-  virtual Iterator* NewIterator(const ReadOptions&);\n-  virtual const Snapshot* GetSnapshot();\n-  virtual void ReleaseSnapshot(const Snapshot* snapshot);\n-  virtual bool GetProperty(const Slice& property, std::string* value);\n-  virtual void GetApproximateSizes(const Range* range, int n, uint64_t* sizes);\n-  virtual void CompactRange(const Slice* begin, const Slice* end);\n-\n-  // Extra methods (for testing) that are not in the public DB interface\n-\n-  // Compact any files in the named level that overlap [*begin,*end]\n-  void TEST_CompactRange(int level, const Slice* begin, const Slice* end);\n-\n-  // Force current memtable contents to be compacted.\n-  Status TEST_CompactMemTable();\n-\n-  // Return an internal iterator over the current state of the database.\n-  // The keys of this iterator are internal keys (see format.h).\n-  // The returned iterator should be deleted when no longer needed.\n-  Iterator* TEST_NewInternalIterator();\n-\n-  // Return the maximum overlapping data (in bytes) at next level for any\n-  // file at a level >= 1.\n-  int64_t TEST_MaxNextLevelOverlappingBytes();\n-\n-  // Record a sample of bytes read at the specified internal key.\n-  // Samples are taken approximately once every config::kReadBytesPeriod\n-  // bytes.\n-  void RecordReadSample(Slice key);\n-\n- private:\n-  friend class DB;\n-  struct CompactionState;\n-  struct Writer;\n-\n-  Iterator* NewInternalIterator(const ReadOptions&,\n-                                SequenceNumber* latest_snapshot,\n-                                uint32_t* seed);\n-\n-  Status NewDB();\n-\n-  // Recover the descriptor from persistent storage.  May do a significant\n-  // amount of work to recover recently logged updates.  Any changes to\n-  // be made to the descriptor are added to *edit.\n-  Status Recover(VersionEdit* edit, bool* save_manifest)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-\n-  void MaybeIgnoreError(Status* s) const;\n-\n-  // Delete any unneeded files and stale in-memory entries.\n-  void DeleteObsoleteFiles();\n-\n-  // Compact the in-memory write buffer to disk.  Switches to a new\n-  // log-file/memtable and writes a new descriptor iff successful.\n-  // Errors are recorded in bg_error_.\n-  void CompactMemTable() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-\n-  Status RecoverLogFile(uint64_t log_number, bool last_log, bool* save_manifest,\n-                        VersionEdit* edit, SequenceNumber* max_sequence)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-\n-  Status WriteLevel0Table(MemTable* mem, VersionEdit* edit, Version* base)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-\n-  Status MakeRoomForWrite(bool force /* compact even if there is room? */)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-  WriteBatch* BuildBatchGroup(Writer** last_writer);\n-\n-  void RecordBackgroundError(const Status& s);\n-\n-  void MaybeScheduleCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-  static void BGWork(void* db);\n-  void BackgroundCall();\n-  void  BackgroundCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-  void CleanupCompaction(CompactionState* compact)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-  Status DoCompactionWork(CompactionState* compact)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-\n-  Status OpenCompactionOutputFile(CompactionState* compact);\n-  Status FinishCompactionOutputFile(CompactionState* compact, Iterator* input);\n-  Status InstallCompactionResults(CompactionState* compact)\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n-\n-  // Constant after construction\n-  Env* const env_;\n-  const InternalKeyComparator internal_comparator_;\n-  const InternalFilterPolicy internal_filter_policy_;\n-  const Options options_;  // options_.comparator == &internal_comparator_\n-  bool owns_info_log_;\n-  bool owns_cache_;\n-  const std::string dbname_;\n-\n-  // table_cache_ provides its own synchronization\n-  TableCache* table_cache_;\n-\n-  // Lock over the persistent DB state.  Non-NULL iff successfully acquired.\n-  FileLock* db_lock_;\n-\n-  // State below is protected by mutex_\n-  port::Mutex mutex_;\n-  port::AtomicPointer shutting_down_;\n-  port::CondVar bg_cv_;          // Signalled when background work finishes\n-  MemTable* mem_;\n-  MemTable* imm_;                // Memtable being compacted\n-  port::AtomicPointer has_imm_;  // So bg thread can detect non-NULL imm_\n-  WritableFile* logfile_;\n-  uint64_t logfile_number_;\n-  log::Writer* log_;\n-  uint32_t seed_;                // For sampling.\n-\n-  // Queue of writers.\n-  std::deque<Writer*> writers_;\n-  WriteBatch* tmp_batch_;\n-\n-  SnapshotList snapshots_;\n-\n-  // Set of table files to protect from deletion because they are\n-  // part of ongoing compactions.\n-  std::set<uint64_t> pending_outputs_;\n-\n-  // Has a background compaction been scheduled or is running?\n-  bool bg_compaction_scheduled_;\n-\n-  // Information for a manual compaction\n-  struct ManualCompaction {\n-    int level;\n-    bool done;\n-    const InternalKey* begin;   // NULL means beginning of key range\n-    const InternalKey* end;     // NULL means end of key range\n-    InternalKey tmp_storage;    // Used to keep track of compaction progress\n-  };\n-  ManualCompaction* manual_compaction_;\n-\n-  VersionSet* versions_;\n-\n-  // Have we encountered a background error in paranoid mode?\n-  Status bg_error_;\n-\n-  // Per level compaction stats.  stats_[level] stores the stats for\n-  // compactions that produced data for the specified \"level\".\n-  struct CompactionStats {\n-    int64_t micros;\n-    int64_t bytes_read;\n-    int64_t bytes_written;\n-\n-    CompactionStats() : micros(0), bytes_read(0), bytes_written(0) { }\n-\n-    void Add(const CompactionStats& c) {\n-      this->micros += c.micros;\n-      this->bytes_read += c.bytes_read;\n-      this->bytes_written += c.bytes_written;\n-    }\n-  };\n-  CompactionStats stats_[config::kNumLevels];\n-\n-  // No copying allowed\n-  DBImpl(const DBImpl&);\n-  void operator=(const DBImpl&);\n-\n-  const Comparator* user_comparator() const {\n-    return internal_comparator_.user_comparator();\n-  }\n-};\n-\n-// Sanitize db options.  The caller should delete result.info_log if\n-// it is not equal to src.info_log.\n-extern Options SanitizeOptions(const std::string& db,\n-                               const InternalKeyComparator* icmp,\n-                               const InternalFilterPolicy* ipolicy,\n-                               const Options& src);\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_DB_IMPL_H_"
      },
      {
        "sha": "5142e0506428929e5a0d8492edecf4733b40f487",
        "filename": "src/leveldb/db/db_iter.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 319,
        "changes": 319,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_iter.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_iter.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_iter.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,319 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/db_iter.h\"\n-\n-#include \"db/filename.h\"\n-#include \"db/db_impl.h\"\n-#include \"db/dbformat.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/iterator.h\"\n-#include \"port/port.h\"\n-#include \"util/logging.h\"\n-#include \"util/mutexlock.h\"\n-#include \"util/random.h\"\n-\n-#include \"wintype.h\" // ssize_t\n-\n-namespace leveldb {\n-\n-#if 0\n-static void DumpInternalIter(Iterator* iter) {\n-  for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-    ParsedInternalKey k;\n-    if (!ParseInternalKey(iter->key(), &k)) {\n-      fprintf(stderr, \"Corrupt '%s'\\n\", EscapeString(iter->key()).c_str());\n-    } else {\n-      fprintf(stderr, \"@ '%s'\\n\", k.DebugString().c_str());\n-    }\n-  }\n-}\n-#endif\n-\n-namespace {\n-\n-// Memtables and sstables that make the DB representation contain\n-// (userkey,seq,type) => uservalue entries.  DBIter\n-// combines multiple entries for the same userkey found in the DB\n-// representation into a single entry while accounting for sequence\n-// numbers, deletion markers, overwrites, etc.\n-class DBIter: public Iterator {\n- public:\n-  // Which direction is the iterator currently moving?\n-  // (1) When moving forward, the internal iterator is positioned at\n-  //     the exact entry that yields this->key(), this->value()\n-  // (2) When moving backwards, the internal iterator is positioned\n-  //     just before all entries whose user key == this->key().\n-  enum Direction {\n-    kForward,\n-    kReverse\n-  };\n-\n-  DBIter(DBImpl* db, const Comparator* cmp, Iterator* iter, SequenceNumber s,\n-         uint32_t seed)\n-      : db_(db),\n-        user_comparator_(cmp),\n-        iter_(iter),\n-        sequence_(s),\n-        direction_(kForward),\n-        valid_(false),\n-        rnd_(seed),\n-        bytes_counter_(RandomPeriod()) {\n-  }\n-  virtual ~DBIter() {\n-    delete iter_;\n-  }\n-  virtual bool Valid() const { return valid_; }\n-  virtual Slice key() const {\n-    assert(valid_);\n-    return (direction_ == kForward) ? ExtractUserKey(iter_->key()) : saved_key_;\n-  }\n-  virtual Slice value() const {\n-    assert(valid_);\n-    return (direction_ == kForward) ? iter_->value() : saved_value_;\n-  }\n-  virtual Status status() const {\n-    if (status_.ok()) {\n-      return iter_->status();\n-    } else {\n-      return status_;\n-    }\n-  }\n-\n-  virtual void Next();\n-  virtual void Prev();\n-  virtual void Seek(const Slice& target);\n-  virtual void SeekToFirst();\n-  virtual void SeekToLast();\n-\n- private:\n-  void FindNextUserEntry(bool skipping, std::string* skip);\n-  void FindPrevUserEntry();\n-  bool ParseKey(ParsedInternalKey* key);\n-\n-  inline void SaveKey(const Slice& k, std::string* dst) {\n-    dst->assign(k.data(), k.size());\n-  }\n-\n-  inline void ClearSavedValue() {\n-    if (saved_value_.capacity() > 1048576) {\n-      std::string empty;\n-      swap(empty, saved_value_);\n-    } else {\n-      saved_value_.clear();\n-    }\n-  }\n-\n-  // Pick next gap with average value of config::kReadBytesPeriod.\n-  ssize_t RandomPeriod() {\n-    return rnd_.Uniform(2*config::kReadBytesPeriod);\n-  }\n-\n-  DBImpl* db_;\n-  const Comparator* const user_comparator_;\n-  Iterator* const iter_;\n-  SequenceNumber const sequence_;\n-\n-  Status status_;\n-  std::string saved_key_;     // == current key when direction_==kReverse\n-  std::string saved_value_;   // == current raw value when direction_==kReverse\n-  Direction direction_;\n-  bool valid_;\n-\n-  Random rnd_;\n-  ssize_t bytes_counter_;\n-\n-  // No copying allowed\n-  DBIter(const DBIter&);\n-  void operator=(const DBIter&);\n-};\n-\n-inline bool DBIter::ParseKey(ParsedInternalKey* ikey) {\n-  Slice k = iter_->key();\n-  ssize_t n = k.size() + iter_->value().size();\n-  bytes_counter_ -= n;\n-  while (bytes_counter_ < 0) {\n-    bytes_counter_ += RandomPeriod();\n-    db_->RecordReadSample(k);\n-  }\n-  if (!ParseInternalKey(k, ikey)) {\n-    status_ = Status::Corruption(\"corrupted internal key in DBIter\");\n-    return false;\n-  } else {\n-    return true;\n-  }\n-}\n-\n-void DBIter::Next() {\n-  assert(valid_);\n-\n-  if (direction_ == kReverse) {  // Switch directions?\n-    direction_ = kForward;\n-    // iter_ is pointing just before the entries for this->key(),\n-    // so advance into the range of entries for this->key() and then\n-    // use the normal skipping code below.\n-    if (!iter_->Valid()) {\n-      iter_->SeekToFirst();\n-    } else {\n-      iter_->Next();\n-    }\n-    if (!iter_->Valid()) {\n-      valid_ = false;\n-      saved_key_.clear();\n-      return;\n-    }\n-    // saved_key_ already contains the key to skip past.\n-  } else {\n-    // Store in saved_key_ the current key so we skip it below.\n-    SaveKey(ExtractUserKey(iter_->key()), &saved_key_);\n-  }\n-\n-  FindNextUserEntry(true, &saved_key_);\n-}\n-\n-void DBIter::FindNextUserEntry(bool skipping, std::string* skip) {\n-  // Loop until we hit an acceptable entry to yield\n-  assert(iter_->Valid());\n-  assert(direction_ == kForward);\n-  do {\n-    ParsedInternalKey ikey;\n-    if (ParseKey(&ikey) && ikey.sequence <= sequence_) {\n-      switch (ikey.type) {\n-        case kTypeDeletion:\n-          // Arrange to skip all upcoming entries for this key since\n-          // they are hidden by this deletion.\n-          SaveKey(ikey.user_key, skip);\n-          skipping = true;\n-          break;\n-        case kTypeValue:\n-          if (skipping &&\n-              user_comparator_->Compare(ikey.user_key, *skip) <= 0) {\n-            // Entry hidden\n-          } else {\n-            valid_ = true;\n-            saved_key_.clear();\n-            return;\n-          }\n-          break;\n-      }\n-    }\n-    iter_->Next();\n-  } while (iter_->Valid());\n-  saved_key_.clear();\n-  valid_ = false;\n-}\n-\n-void DBIter::Prev() {\n-  assert(valid_);\n-\n-  if (direction_ == kForward) {  // Switch directions?\n-    // iter_ is pointing at the current entry.  Scan backwards until\n-    // the key changes so we can use the normal reverse scanning code.\n-    assert(iter_->Valid());  // Otherwise valid_ would have been false\n-    SaveKey(ExtractUserKey(iter_->key()), &saved_key_);\n-    while (true) {\n-      iter_->Prev();\n-      if (!iter_->Valid()) {\n-        valid_ = false;\n-        saved_key_.clear();\n-        ClearSavedValue();\n-        return;\n-      }\n-      if (user_comparator_->Compare(ExtractUserKey(iter_->key()),\n-                                    saved_key_) < 0) {\n-        break;\n-      }\n-    }\n-    direction_ = kReverse;\n-  }\n-\n-  FindPrevUserEntry();\n-}\n-\n-void DBIter::FindPrevUserEntry() {\n-  assert(direction_ == kReverse);\n-\n-  ValueType value_type = kTypeDeletion;\n-  if (iter_->Valid()) {\n-    do {\n-      ParsedInternalKey ikey;\n-      if (ParseKey(&ikey) && ikey.sequence <= sequence_) {\n-        if ((value_type != kTypeDeletion) &&\n-            user_comparator_->Compare(ikey.user_key, saved_key_) < 0) {\n-          // We encountered a non-deleted value in entries for previous keys,\n-          break;\n-        }\n-        value_type = ikey.type;\n-        if (value_type == kTypeDeletion) {\n-          saved_key_.clear();\n-          ClearSavedValue();\n-        } else {\n-          Slice raw_value = iter_->value();\n-          if (saved_value_.capacity() > raw_value.size() + 1048576) {\n-            std::string empty;\n-            swap(empty, saved_value_);\n-          }\n-          SaveKey(ExtractUserKey(iter_->key()), &saved_key_);\n-          saved_value_.assign(raw_value.data(), raw_value.size());\n-        }\n-      }\n-      iter_->Prev();\n-    } while (iter_->Valid());\n-  }\n-\n-  if (value_type == kTypeDeletion) {\n-    // End\n-    valid_ = false;\n-    saved_key_.clear();\n-    ClearSavedValue();\n-    direction_ = kForward;\n-  } else {\n-    valid_ = true;\n-  }\n-}\n-\n-void DBIter::Seek(const Slice& target) {\n-  direction_ = kForward;\n-  ClearSavedValue();\n-  saved_key_.clear();\n-  AppendInternalKey(\n-      &saved_key_, ParsedInternalKey(target, sequence_, kValueTypeForSeek));\n-  iter_->Seek(saved_key_);\n-  if (iter_->Valid()) {\n-    FindNextUserEntry(false, &saved_key_ /* temporary storage */);\n-  } else {\n-    valid_ = false;\n-  }\n-}\n-\n-void DBIter::SeekToFirst() {\n-  direction_ = kForward;\n-  ClearSavedValue();\n-  iter_->SeekToFirst();\n-  if (iter_->Valid()) {\n-    FindNextUserEntry(false, &saved_key_ /* temporary storage */);\n-  } else {\n-    valid_ = false;\n-  }\n-}\n-\n-void DBIter::SeekToLast() {\n-  direction_ = kReverse;\n-  ClearSavedValue();\n-  iter_->SeekToLast();\n-  FindPrevUserEntry();\n-}\n-\n-}  // anonymous namespace\n-\n-Iterator* NewDBIterator(\n-    DBImpl* db,\n-    const Comparator* user_key_comparator,\n-    Iterator* internal_iter,\n-    SequenceNumber sequence,\n-    uint32_t seed) {\n-  return new DBIter(db, user_key_comparator, internal_iter, sequence, seed);\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "04927e937badff3b29592ec9266d305c44b85b4c",
        "filename": "src/leveldb/db/db_iter.h",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_iter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_iter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_iter.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,28 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_DB_ITER_H_\n-#define STORAGE_LEVELDB_DB_DB_ITER_H_\n-\n-#include <stdint.h>\n-#include \"leveldb/db.h\"\n-#include \"db/dbformat.h\"\n-\n-namespace leveldb {\n-\n-class DBImpl;\n-\n-// Return a new iterator that converts internal keys (yielded by\n-// \"*internal_iter\") that were live at the specified \"sequence\" number\n-// into appropriate user keys.\n-extern Iterator* NewDBIterator(\n-    DBImpl* db,\n-    const Comparator* user_key_comparator,\n-    Iterator* internal_iter,\n-    SequenceNumber sequence,\n-    uint32_t seed);\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_DB_ITER_H_"
      },
      {
        "sha": "a0b08bc19c6510322dc65a94e135fa17ee922659",
        "filename": "src/leveldb/db/db_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 2158,
        "changes": 2158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/db_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,2158 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"leveldb/db.h\"\n-#include \"leveldb/filter_policy.h\"\n-#include \"db/db_impl.h\"\n-#include \"db/filename.h\"\n-#include \"db/version_set.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"leveldb/cache.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/table.h\"\n-#include \"util/hash.h\"\n-#include \"util/logging.h\"\n-#include \"util/mutexlock.h\"\n-#include \"util/testharness.h\"\n-#include \"util/testutil.h\"\n-\n-namespace leveldb {\n-\n-static std::string RandomString(Random* rnd, int len) {\n-  std::string r;\n-  test::RandomString(rnd, len, &r);\n-  return r;\n-}\n-\n-namespace {\n-class AtomicCounter {\n- private:\n-  port::Mutex mu_;\n-  int count_;\n- public:\n-  AtomicCounter() : count_(0) { }\n-  void Increment() {\n-    IncrementBy(1);\n-  }\n-  void IncrementBy(int count) {\n-    MutexLock l(&mu_);\n-    count_ += count;\n-  }\n-  int Read() {\n-    MutexLock l(&mu_);\n-    return count_;\n-  }\n-  void Reset() {\n-    MutexLock l(&mu_);\n-    count_ = 0;\n-  }\n-};\n-\n-void DelayMilliseconds(int millis) {\n-  Env::Default()->SleepForMicroseconds(millis * 1000);\n-}\n-}\n-\n-// Special Env used to delay background operations\n-class SpecialEnv : public EnvWrapper {\n- public:\n-  // sstable/log Sync() calls are blocked while this pointer is non-NULL.\n-  port::AtomicPointer delay_data_sync_;\n-\n-  // sstable/log Sync() calls return an error.\n-  port::AtomicPointer data_sync_error_;\n-\n-  // Simulate no-space errors while this pointer is non-NULL.\n-  port::AtomicPointer no_space_;\n-\n-  // Simulate non-writable file system while this pointer is non-NULL\n-  port::AtomicPointer non_writable_;\n-\n-  // Force sync of manifest files to fail while this pointer is non-NULL\n-  port::AtomicPointer manifest_sync_error_;\n-\n-  // Force write to manifest files to fail while this pointer is non-NULL\n-  port::AtomicPointer manifest_write_error_;\n-\n-  bool count_random_reads_;\n-  AtomicCounter random_read_counter_;\n-\n-  explicit SpecialEnv(Env* base) : EnvWrapper(base) {\n-    delay_data_sync_.Release_Store(NULL);\n-    data_sync_error_.Release_Store(NULL);\n-    no_space_.Release_Store(NULL);\n-    non_writable_.Release_Store(NULL);\n-    count_random_reads_ = false;\n-    manifest_sync_error_.Release_Store(NULL);\n-    manifest_write_error_.Release_Store(NULL);\n-  }\n-\n-  Status NewWritableFile(const std::string& f, WritableFile** r) {\n-    class DataFile : public WritableFile {\n-     private:\n-      SpecialEnv* env_;\n-      WritableFile* base_;\n-\n-     public:\n-      DataFile(SpecialEnv* env, WritableFile* base)\n-          : env_(env),\n-            base_(base) {\n-      }\n-      ~DataFile() { delete base_; }\n-      Status Append(const Slice& data) {\n-        if (env_->no_space_.Acquire_Load() != NULL) {\n-          // Drop writes on the floor\n-          return Status::OK();\n-        } else {\n-          return base_->Append(data);\n-        }\n-      }\n-      Status Close() { return base_->Close(); }\n-      Status Flush() { return base_->Flush(); }\n-      Status Sync() {\n-        if (env_->data_sync_error_.Acquire_Load() != NULL) {\n-          return Status::IOError(\"simulated data sync error\");\n-        }\n-        while (env_->delay_data_sync_.Acquire_Load() != NULL) {\n-          DelayMilliseconds(100);\n-        }\n-        return base_->Sync();\n-      }\n-    };\n-    class ManifestFile : public WritableFile {\n-     private:\n-      SpecialEnv* env_;\n-      WritableFile* base_;\n-     public:\n-      ManifestFile(SpecialEnv* env, WritableFile* b) : env_(env), base_(b) { }\n-      ~ManifestFile() { delete base_; }\n-      Status Append(const Slice& data) {\n-        if (env_->manifest_write_error_.Acquire_Load() != NULL) {\n-          return Status::IOError(\"simulated writer error\");\n-        } else {\n-          return base_->Append(data);\n-        }\n-      }\n-      Status Close() { return base_->Close(); }\n-      Status Flush() { return base_->Flush(); }\n-      Status Sync() {\n-        if (env_->manifest_sync_error_.Acquire_Load() != NULL) {\n-          return Status::IOError(\"simulated sync error\");\n-        } else {\n-          return base_->Sync();\n-        }\n-      }\n-    };\n-\n-    if (non_writable_.Acquire_Load() != NULL) {\n-      return Status::IOError(\"simulated write error\");\n-    }\n-\n-    Status s = target()->NewWritableFile(f, r);\n-    if (s.ok()) {\n-      if (strstr(f.c_str(), \".ldb\") != NULL ||\n-          strstr(f.c_str(), \".log\") != NULL) {\n-        *r = new DataFile(this, *r);\n-      } else if (strstr(f.c_str(), \"MANIFEST\") != NULL) {\n-        *r = new ManifestFile(this, *r);\n-      }\n-    }\n-    return s;\n-  }\n-\n-  Status NewRandomAccessFile(const std::string& f, RandomAccessFile** r) {\n-    class CountingFile : public RandomAccessFile {\n-     private:\n-      RandomAccessFile* target_;\n-      AtomicCounter* counter_;\n-     public:\n-      CountingFile(RandomAccessFile* target, AtomicCounter* counter)\n-          : target_(target), counter_(counter) {\n-      }\n-      virtual ~CountingFile() { delete target_; }\n-      virtual Status Read(uint64_t offset, size_t n, Slice* result,\n-                          char* scratch) const {\n-        counter_->Increment();\n-        return target_->Read(offset, n, result, scratch);\n-      }\n-    };\n-\n-    Status s = target()->NewRandomAccessFile(f, r);\n-    if (s.ok() && count_random_reads_) {\n-      *r = new CountingFile(*r, &random_read_counter_);\n-    }\n-    return s;\n-  }\n-};\n-\n-class DBTest {\n- private:\n-  const FilterPolicy* filter_policy_;\n-\n-  // Sequence of option configurations to try\n-  enum OptionConfig {\n-    kDefault,\n-    kReuse,\n-    kFilter,\n-    kUncompressed,\n-    kEnd\n-  };\n-  int option_config_;\n-\n- public:\n-  std::string dbname_;\n-  SpecialEnv* env_;\n-  DB* db_;\n-\n-  Options last_options_;\n-\n-  DBTest() : option_config_(kDefault),\n-             env_(new SpecialEnv(Env::Default())) {\n-    filter_policy_ = NewBloomFilterPolicy(10);\n-    dbname_ = test::TmpDir() + \"/db_test\";\n-    DestroyDB(dbname_, Options());\n-    db_ = NULL;\n-    Reopen();\n-  }\n-\n-  ~DBTest() {\n-    delete db_;\n-    DestroyDB(dbname_, Options());\n-    delete env_;\n-    delete filter_policy_;\n-  }\n-\n-  // Switch to a fresh database with the next option configuration to\n-  // test.  Return false if there are no more configurations to test.\n-  bool ChangeOptions() {\n-    option_config_++;\n-    if (option_config_ >= kEnd) {\n-      return false;\n-    } else {\n-      DestroyAndReopen();\n-      return true;\n-    }\n-  }\n-\n-  // Return the current option configuration.\n-  Options CurrentOptions() {\n-    Options options;\n-    options.reuse_logs = false;\n-    switch (option_config_) {\n-      case kReuse:\n-        options.reuse_logs = true;\n-        break;\n-      case kFilter:\n-        options.filter_policy = filter_policy_;\n-        break;\n-      case kUncompressed:\n-        options.compression = kNoCompression;\n-        break;\n-      default:\n-        break;\n-    }\n-    return options;\n-  }\n-\n-  DBImpl* dbfull() {\n-    return reinterpret_cast<DBImpl*>(db_);\n-  }\n-\n-  void Reopen(Options* options = NULL) {\n-    ASSERT_OK(TryReopen(options));\n-  }\n-\n-  void Close() {\n-    delete db_;\n-    db_ = NULL;\n-  }\n-\n-  void DestroyAndReopen(Options* options = NULL) {\n-    delete db_;\n-    db_ = NULL;\n-    DestroyDB(dbname_, Options());\n-    ASSERT_OK(TryReopen(options));\n-  }\n-\n-  Status TryReopen(Options* options) {\n-    delete db_;\n-    db_ = NULL;\n-    Options opts;\n-    if (options != NULL) {\n-      opts = *options;\n-    } else {\n-      opts = CurrentOptions();\n-      opts.create_if_missing = true;\n-    }\n-    last_options_ = opts;\n-\n-    return DB::Open(opts, dbname_, &db_);\n-  }\n-\n-  Status Put(const std::string& k, const std::string& v) {\n-    return db_->Put(WriteOptions(), k, v);\n-  }\n-\n-  Status Delete(const std::string& k) {\n-    return db_->Delete(WriteOptions(), k);\n-  }\n-\n-  std::string Get(const std::string& k, const Snapshot* snapshot = NULL) {\n-    ReadOptions options;\n-    options.snapshot = snapshot;\n-    std::string result;\n-    Status s = db_->Get(options, k, &result);\n-    if (s.IsNotFound()) {\n-      result = \"NOT_FOUND\";\n-    } else if (!s.ok()) {\n-      result = s.ToString();\n-    }\n-    return result;\n-  }\n-\n-  // Return a string that contains all key,value pairs in order,\n-  // formatted like \"(k1->v1)(k2->v2)\".\n-  std::string Contents() {\n-    std::vector<std::string> forward;\n-    std::string result;\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-      std::string s = IterStatus(iter);\n-      result.push_back('(');\n-      result.append(s);\n-      result.push_back(')');\n-      forward.push_back(s);\n-    }\n-\n-    // Check reverse iteration results are the reverse of forward results\n-    size_t matched = 0;\n-    for (iter->SeekToLast(); iter->Valid(); iter->Prev()) {\n-      ASSERT_LT(matched, forward.size());\n-      ASSERT_EQ(IterStatus(iter), forward[forward.size() - matched - 1]);\n-      matched++;\n-    }\n-    ASSERT_EQ(matched, forward.size());\n-\n-    delete iter;\n-    return result;\n-  }\n-\n-  std::string AllEntriesFor(const Slice& user_key) {\n-    Iterator* iter = dbfull()->TEST_NewInternalIterator();\n-    InternalKey target(user_key, kMaxSequenceNumber, kTypeValue);\n-    iter->Seek(target.Encode());\n-    std::string result;\n-    if (!iter->status().ok()) {\n-      result = iter->status().ToString();\n-    } else {\n-      result = \"[ \";\n-      bool first = true;\n-      while (iter->Valid()) {\n-        ParsedInternalKey ikey;\n-        if (!ParseInternalKey(iter->key(), &ikey)) {\n-          result += \"CORRUPTED\";\n-        } else {\n-          if (last_options_.comparator->Compare(ikey.user_key, user_key) != 0) {\n-            break;\n-          }\n-          if (!first) {\n-            result += \", \";\n-          }\n-          first = false;\n-          switch (ikey.type) {\n-            case kTypeValue:\n-              result += iter->value().ToString();\n-              break;\n-            case kTypeDeletion:\n-              result += \"DEL\";\n-              break;\n-          }\n-        }\n-        iter->Next();\n-      }\n-      if (!first) {\n-        result += \" \";\n-      }\n-      result += \"]\";\n-    }\n-    delete iter;\n-    return result;\n-  }\n-\n-  int NumTableFilesAtLevel(int level) {\n-    std::string property;\n-    ASSERT_TRUE(\n-        db_->GetProperty(\"leveldb.num-files-at-level\" + NumberToString(level),\n-                         &property));\n-    return atoi(property.c_str());\n-  }\n-\n-  int TotalTableFiles() {\n-    int result = 0;\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      result += NumTableFilesAtLevel(level);\n-    }\n-    return result;\n-  }\n-\n-  // Return spread of files per level\n-  std::string FilesPerLevel() {\n-    std::string result;\n-    int last_non_zero_offset = 0;\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      int f = NumTableFilesAtLevel(level);\n-      char buf[100];\n-      snprintf(buf, sizeof(buf), \"%s%d\", (level ? \",\" : \"\"), f);\n-      result += buf;\n-      if (f > 0) {\n-        last_non_zero_offset = result.size();\n-      }\n-    }\n-    result.resize(last_non_zero_offset);\n-    return result;\n-  }\n-\n-  int CountFiles() {\n-    std::vector<std::string> files;\n-    env_->GetChildren(dbname_, &files);\n-    return static_cast<int>(files.size());\n-  }\n-\n-  uint64_t Size(const Slice& start, const Slice& limit) {\n-    Range r(start, limit);\n-    uint64_t size;\n-    db_->GetApproximateSizes(&r, 1, &size);\n-    return size;\n-  }\n-\n-  void Compact(const Slice& start, const Slice& limit) {\n-    db_->CompactRange(&start, &limit);\n-  }\n-\n-  // Do n memtable compactions, each of which produces an sstable\n-  // covering the range [small,large].\n-  void MakeTables(int n, const std::string& small, const std::string& large) {\n-    for (int i = 0; i < n; i++) {\n-      Put(small, \"begin\");\n-      Put(large, \"end\");\n-      dbfull()->TEST_CompactMemTable();\n-    }\n-  }\n-\n-  // Prevent pushing of new sstables into deeper levels by adding\n-  // tables that cover a specified range to all levels.\n-  void FillLevels(const std::string& smallest, const std::string& largest) {\n-    MakeTables(config::kNumLevels, smallest, largest);\n-  }\n-\n-  void DumpFileCounts(const char* label) {\n-    fprintf(stderr, \"---\\n%s:\\n\", label);\n-    fprintf(stderr, \"maxoverlap: %lld\\n\",\n-            static_cast<long long>(\n-                dbfull()->TEST_MaxNextLevelOverlappingBytes()));\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      int num = NumTableFilesAtLevel(level);\n-      if (num > 0) {\n-        fprintf(stderr, \"  level %3d : %d files\\n\", level, num);\n-      }\n-    }\n-  }\n-\n-  std::string DumpSSTableList() {\n-    std::string property;\n-    db_->GetProperty(\"leveldb.sstables\", &property);\n-    return property;\n-  }\n-\n-  std::string IterStatus(Iterator* iter) {\n-    std::string result;\n-    if (iter->Valid()) {\n-      result = iter->key().ToString() + \"->\" + iter->value().ToString();\n-    } else {\n-      result = \"(invalid)\";\n-    }\n-    return result;\n-  }\n-\n-  bool DeleteAnSSTFile() {\n-    std::vector<std::string> filenames;\n-    ASSERT_OK(env_->GetChildren(dbname_, &filenames));\n-    uint64_t number;\n-    FileType type;\n-    for (size_t i = 0; i < filenames.size(); i++) {\n-      if (ParseFileName(filenames[i], &number, &type) && type == kTableFile) {\n-        ASSERT_OK(env_->DeleteFile(TableFileName(dbname_, number)));\n-        return true;\n-      }\n-    }\n-    return false;\n-  }\n-\n-  // Returns number of files renamed.\n-  int RenameLDBToSST() {\n-    std::vector<std::string> filenames;\n-    ASSERT_OK(env_->GetChildren(dbname_, &filenames));\n-    uint64_t number;\n-    FileType type;\n-    int files_renamed = 0;\n-    for (size_t i = 0; i < filenames.size(); i++) {\n-      if (ParseFileName(filenames[i], &number, &type) && type == kTableFile) {\n-        const std::string from = TableFileName(dbname_, number);\n-        const std::string to = SSTTableFileName(dbname_, number);\n-        ASSERT_OK(env_->RenameFile(from, to));\n-        files_renamed++;\n-      }\n-    }\n-    return files_renamed;\n-  }\n-};\n-\n-TEST(DBTest, Empty) {\n-  do {\n-    ASSERT_TRUE(db_ != NULL);\n-    ASSERT_EQ(\"NOT_FOUND\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, ReadWrite) {\n-  do {\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    ASSERT_OK(Put(\"bar\", \"v2\"));\n-    ASSERT_OK(Put(\"foo\", \"v3\"));\n-    ASSERT_EQ(\"v3\", Get(\"foo\"));\n-    ASSERT_EQ(\"v2\", Get(\"bar\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, PutDeleteGet) {\n-  do {\n-    ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v1\"));\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    ASSERT_OK(db_->Put(WriteOptions(), \"foo\", \"v2\"));\n-    ASSERT_EQ(\"v2\", Get(\"foo\"));\n-    ASSERT_OK(db_->Delete(WriteOptions(), \"foo\"));\n-    ASSERT_EQ(\"NOT_FOUND\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetFromImmutableLayer) {\n-  do {\n-    Options options = CurrentOptions();\n-    options.env = env_;\n-    options.write_buffer_size = 100000;  // Small write buffer\n-    Reopen(&options);\n-\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-\n-    env_->delay_data_sync_.Release_Store(env_);      // Block sync calls\n-    Put(\"k1\", std::string(100000, 'x'));             // Fill memtable\n-    Put(\"k2\", std::string(100000, 'y'));             // Trigger compaction\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    env_->delay_data_sync_.Release_Store(NULL);      // Release sync calls\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetFromVersions) {\n-  do {\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetMemUsage) {\n-  do {\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    std::string val;\n-    ASSERT_TRUE(db_->GetProperty(\"leveldb.approximate-memory-usage\", &val));\n-    int mem_usage = atoi(val.c_str());\n-    ASSERT_GT(mem_usage, 0);\n-    ASSERT_LT(mem_usage, 5*1024*1024);\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetSnapshot) {\n-  do {\n-    // Try with both a short key and a long key\n-    for (int i = 0; i < 2; i++) {\n-      std::string key = (i == 0) ? std::string(\"foo\") : std::string(200, 'x');\n-      ASSERT_OK(Put(key, \"v1\"));\n-      const Snapshot* s1 = db_->GetSnapshot();\n-      ASSERT_OK(Put(key, \"v2\"));\n-      ASSERT_EQ(\"v2\", Get(key));\n-      ASSERT_EQ(\"v1\", Get(key, s1));\n-      dbfull()->TEST_CompactMemTable();\n-      ASSERT_EQ(\"v2\", Get(key));\n-      ASSERT_EQ(\"v1\", Get(key, s1));\n-      db_->ReleaseSnapshot(s1);\n-    }\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetLevel0Ordering) {\n-  do {\n-    // Check that we process level-0 files in correct order.  The code\n-    // below generates two level-0 files where the earlier one comes\n-    // before the later one in the level-0 file list since the earlier\n-    // one has a smaller \"smallest\" key.\n-    ASSERT_OK(Put(\"bar\", \"b\"));\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_OK(Put(\"foo\", \"v2\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"v2\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetOrderedByLevels) {\n-  do {\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    Compact(\"a\", \"z\");\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    ASSERT_OK(Put(\"foo\", \"v2\"));\n-    ASSERT_EQ(\"v2\", Get(\"foo\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"v2\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetPicksCorrectFile) {\n-  do {\n-    // Arrange to have multiple files in a non-level-0 level.\n-    ASSERT_OK(Put(\"a\", \"va\"));\n-    Compact(\"a\", \"b\");\n-    ASSERT_OK(Put(\"x\", \"vx\"));\n-    Compact(\"x\", \"y\");\n-    ASSERT_OK(Put(\"f\", \"vf\"));\n-    Compact(\"f\", \"g\");\n-    ASSERT_EQ(\"va\", Get(\"a\"));\n-    ASSERT_EQ(\"vf\", Get(\"f\"));\n-    ASSERT_EQ(\"vx\", Get(\"x\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, GetEncountersEmptyLevel) {\n-  do {\n-    // Arrange for the following to happen:\n-    //   * sstable A in level 0\n-    //   * nothing in level 1\n-    //   * sstable B in level 2\n-    // Then do enough Get() calls to arrange for an automatic compaction\n-    // of sstable A.  A bug would cause the compaction to be marked as\n-    // occurring at level 1 (instead of the correct level 0).\n-\n-    // Step 1: First place sstables in levels 0 and 2\n-    int compaction_count = 0;\n-    while (NumTableFilesAtLevel(0) == 0 ||\n-           NumTableFilesAtLevel(2) == 0) {\n-      ASSERT_LE(compaction_count, 100) << \"could not fill levels 0 and 2\";\n-      compaction_count++;\n-      Put(\"a\", \"begin\");\n-      Put(\"z\", \"end\");\n-      dbfull()->TEST_CompactMemTable();\n-    }\n-\n-    // Step 2: clear level 1 if necessary.\n-    dbfull()->TEST_CompactRange(1, NULL, NULL);\n-    ASSERT_EQ(NumTableFilesAtLevel(0), 1);\n-    ASSERT_EQ(NumTableFilesAtLevel(1), 0);\n-    ASSERT_EQ(NumTableFilesAtLevel(2), 1);\n-\n-    // Step 3: read a bunch of times\n-    for (int i = 0; i < 1000; i++) {\n-      ASSERT_EQ(\"NOT_FOUND\", Get(\"missing\"));\n-    }\n-\n-    // Step 4: Wait for compaction to finish\n-    DelayMilliseconds(1000);\n-\n-    ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, IterEmpty) {\n-  Iterator* iter = db_->NewIterator(ReadOptions());\n-\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->Seek(\"foo\");\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  delete iter;\n-}\n-\n-TEST(DBTest, IterSingle) {\n-  ASSERT_OK(Put(\"a\", \"va\"));\n-  Iterator* iter = db_->NewIterator(ReadOptions());\n-\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->Seek(\"\");\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->Seek(\"a\");\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->Seek(\"b\");\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  delete iter;\n-}\n-\n-TEST(DBTest, IterMulti) {\n-  ASSERT_OK(Put(\"a\", \"va\"));\n-  ASSERT_OK(Put(\"b\", \"vb\"));\n-  ASSERT_OK(Put(\"c\", \"vc\"));\n-  Iterator* iter = db_->NewIterator(ReadOptions());\n-\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->Seek(\"\");\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Seek(\"a\");\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Seek(\"ax\");\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-  iter->Seek(\"b\");\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-  iter->Seek(\"z\");\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  // Switch from reverse to forward\n-  iter->SeekToLast();\n-  iter->Prev();\n-  iter->Prev();\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-\n-  // Switch from forward to reverse\n-  iter->SeekToFirst();\n-  iter->Next();\n-  iter->Next();\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-\n-  // Make sure iter stays at snapshot\n-  ASSERT_OK(Put(\"a\",  \"va2\"));\n-  ASSERT_OK(Put(\"a2\", \"va3\"));\n-  ASSERT_OK(Put(\"b\",  \"vb2\"));\n-  ASSERT_OK(Put(\"c\",  \"vc2\"));\n-  ASSERT_OK(Delete(\"b\"));\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"b->vb\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  delete iter;\n-}\n-\n-TEST(DBTest, IterSmallAndLargeMix) {\n-  ASSERT_OK(Put(\"a\", \"va\"));\n-  ASSERT_OK(Put(\"b\", std::string(100000, 'b')));\n-  ASSERT_OK(Put(\"c\", \"vc\"));\n-  ASSERT_OK(Put(\"d\", std::string(100000, 'd')));\n-  ASSERT_OK(Put(\"e\", std::string(100000, 'e')));\n-\n-  Iterator* iter = db_->NewIterator(ReadOptions());\n-\n-  iter->SeekToFirst();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"b->\" + std::string(100000, 'b'));\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"d->\" + std::string(100000, 'd'));\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"e->\" + std::string(100000, 'e'));\n-  iter->Next();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  iter->SeekToLast();\n-  ASSERT_EQ(IterStatus(iter), \"e->\" + std::string(100000, 'e'));\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"d->\" + std::string(100000, 'd'));\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"b->\" + std::string(100000, 'b'));\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"a->va\");\n-  iter->Prev();\n-  ASSERT_EQ(IterStatus(iter), \"(invalid)\");\n-\n-  delete iter;\n-}\n-\n-TEST(DBTest, IterMultiWithDelete) {\n-  do {\n-    ASSERT_OK(Put(\"a\", \"va\"));\n-    ASSERT_OK(Put(\"b\", \"vb\"));\n-    ASSERT_OK(Put(\"c\", \"vc\"));\n-    ASSERT_OK(Delete(\"b\"));\n-    ASSERT_EQ(\"NOT_FOUND\", Get(\"b\"));\n-\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    iter->Seek(\"c\");\n-    ASSERT_EQ(IterStatus(iter), \"c->vc\");\n-    iter->Prev();\n-    ASSERT_EQ(IterStatus(iter), \"a->va\");\n-    delete iter;\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, Recover) {\n-  do {\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    ASSERT_OK(Put(\"baz\", \"v5\"));\n-\n-    Reopen();\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    ASSERT_EQ(\"v5\", Get(\"baz\"));\n-    ASSERT_OK(Put(\"bar\", \"v2\"));\n-    ASSERT_OK(Put(\"foo\", \"v3\"));\n-\n-    Reopen();\n-    ASSERT_EQ(\"v3\", Get(\"foo\"));\n-    ASSERT_OK(Put(\"foo\", \"v4\"));\n-    ASSERT_EQ(\"v4\", Get(\"foo\"));\n-    ASSERT_EQ(\"v2\", Get(\"bar\"));\n-    ASSERT_EQ(\"v5\", Get(\"baz\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, RecoveryWithEmptyLog) {\n-  do {\n-    ASSERT_OK(Put(\"foo\", \"v1\"));\n-    ASSERT_OK(Put(\"foo\", \"v2\"));\n-    Reopen();\n-    Reopen();\n-    ASSERT_OK(Put(\"foo\", \"v3\"));\n-    Reopen();\n-    ASSERT_EQ(\"v3\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-// Check that writes done during a memtable compaction are recovered\n-// if the database is shutdown during the memtable compaction.\n-TEST(DBTest, RecoverDuringMemtableCompaction) {\n-  do {\n-    Options options = CurrentOptions();\n-    options.env = env_;\n-    options.write_buffer_size = 1000000;\n-    Reopen(&options);\n-\n-    // Trigger a long memtable compaction and reopen the database during it\n-    ASSERT_OK(Put(\"foo\", \"v1\"));                         // Goes to 1st log file\n-    ASSERT_OK(Put(\"big1\", std::string(10000000, 'x')));  // Fills memtable\n-    ASSERT_OK(Put(\"big2\", std::string(1000, 'y')));      // Triggers compaction\n-    ASSERT_OK(Put(\"bar\", \"v2\"));                         // Goes to new log file\n-\n-    Reopen(&options);\n-    ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    ASSERT_EQ(\"v2\", Get(\"bar\"));\n-    ASSERT_EQ(std::string(10000000, 'x'), Get(\"big1\"));\n-    ASSERT_EQ(std::string(1000, 'y'), Get(\"big2\"));\n-  } while (ChangeOptions());\n-}\n-\n-static std::string Key(int i) {\n-  char buf[100];\n-  snprintf(buf, sizeof(buf), \"key%06d\", i);\n-  return std::string(buf);\n-}\n-\n-TEST(DBTest, MinorCompactionsHappen) {\n-  Options options = CurrentOptions();\n-  options.write_buffer_size = 10000;\n-  Reopen(&options);\n-\n-  const int N = 500;\n-\n-  int starting_num_tables = TotalTableFiles();\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_OK(Put(Key(i), Key(i) + std::string(1000, 'v')));\n-  }\n-  int ending_num_tables = TotalTableFiles();\n-  ASSERT_GT(ending_num_tables, starting_num_tables);\n-\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_EQ(Key(i) + std::string(1000, 'v'), Get(Key(i)));\n-  }\n-\n-  Reopen();\n-\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_EQ(Key(i) + std::string(1000, 'v'), Get(Key(i)));\n-  }\n-}\n-\n-TEST(DBTest, RecoverWithLargeLog) {\n-  {\n-    Options options = CurrentOptions();\n-    Reopen(&options);\n-    ASSERT_OK(Put(\"big1\", std::string(200000, '1')));\n-    ASSERT_OK(Put(\"big2\", std::string(200000, '2')));\n-    ASSERT_OK(Put(\"small3\", std::string(10, '3')));\n-    ASSERT_OK(Put(\"small4\", std::string(10, '4')));\n-    ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-  }\n-\n-  // Make sure that if we re-open with a small write buffer size that\n-  // we flush table files in the middle of a large log file.\n-  Options options = CurrentOptions();\n-  options.write_buffer_size = 100000;\n-  Reopen(&options);\n-  ASSERT_EQ(NumTableFilesAtLevel(0), 3);\n-  ASSERT_EQ(std::string(200000, '1'), Get(\"big1\"));\n-  ASSERT_EQ(std::string(200000, '2'), Get(\"big2\"));\n-  ASSERT_EQ(std::string(10, '3'), Get(\"small3\"));\n-  ASSERT_EQ(std::string(10, '4'), Get(\"small4\"));\n-  ASSERT_GT(NumTableFilesAtLevel(0), 1);\n-}\n-\n-TEST(DBTest, CompactionsGenerateMultipleFiles) {\n-  Options options = CurrentOptions();\n-  options.write_buffer_size = 100000000;        // Large write buffer\n-  Reopen(&options);\n-\n-  Random rnd(301);\n-\n-  // Write 8MB (80 values, each 100K)\n-  ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-  std::vector<std::string> values;\n-  for (int i = 0; i < 80; i++) {\n-    values.push_back(RandomString(&rnd, 100000));\n-    ASSERT_OK(Put(Key(i), values[i]));\n-  }\n-\n-  // Reopening moves updates to level-0\n-  Reopen(&options);\n-  dbfull()->TEST_CompactRange(0, NULL, NULL);\n-\n-  ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-  ASSERT_GT(NumTableFilesAtLevel(1), 1);\n-  for (int i = 0; i < 80; i++) {\n-    ASSERT_EQ(Get(Key(i)), values[i]);\n-  }\n-}\n-\n-TEST(DBTest, RepeatedWritesToSameKey) {\n-  Options options = CurrentOptions();\n-  options.env = env_;\n-  options.write_buffer_size = 100000;  // Small write buffer\n-  Reopen(&options);\n-\n-  // We must have at most one file per level except for level-0,\n-  // which may have up to kL0_StopWritesTrigger files.\n-  const int kMaxFiles = config::kNumLevels + config::kL0_StopWritesTrigger;\n-\n-  Random rnd(301);\n-  std::string value = RandomString(&rnd, 2 * options.write_buffer_size);\n-  for (int i = 0; i < 5 * kMaxFiles; i++) {\n-    Put(\"key\", value);\n-    ASSERT_LE(TotalTableFiles(), kMaxFiles);\n-    fprintf(stderr, \"after %d: %d files\\n\", int(i+1), TotalTableFiles());\n-  }\n-}\n-\n-TEST(DBTest, SparseMerge) {\n-  Options options = CurrentOptions();\n-  options.compression = kNoCompression;\n-  Reopen(&options);\n-\n-  FillLevels(\"A\", \"Z\");\n-\n-  // Suppose there is:\n-  //    small amount of data with prefix A\n-  //    large amount of data with prefix B\n-  //    small amount of data with prefix C\n-  // and that recent updates have made small changes to all three prefixes.\n-  // Check that we do not do a compaction that merges all of B in one shot.\n-  const std::string value(1000, 'x');\n-  Put(\"A\", \"va\");\n-  // Write approximately 100MB of \"B\" values\n-  for (int i = 0; i < 100000; i++) {\n-    char key[100];\n-    snprintf(key, sizeof(key), \"B%010d\", i);\n-    Put(key, value);\n-  }\n-  Put(\"C\", \"vc\");\n-  dbfull()->TEST_CompactMemTable();\n-  dbfull()->TEST_CompactRange(0, NULL, NULL);\n-\n-  // Make sparse update\n-  Put(\"A\",    \"va2\");\n-  Put(\"B100\", \"bvalue2\");\n-  Put(\"C\",    \"vc2\");\n-  dbfull()->TEST_CompactMemTable();\n-\n-  // Compactions should not cause us to create a situation where\n-  // a file overlaps too much data at the next level.\n-  ASSERT_LE(dbfull()->TEST_MaxNextLevelOverlappingBytes(), 20*1048576);\n-  dbfull()->TEST_CompactRange(0, NULL, NULL);\n-  ASSERT_LE(dbfull()->TEST_MaxNextLevelOverlappingBytes(), 20*1048576);\n-  dbfull()->TEST_CompactRange(1, NULL, NULL);\n-  ASSERT_LE(dbfull()->TEST_MaxNextLevelOverlappingBytes(), 20*1048576);\n-}\n-\n-static bool Between(uint64_t val, uint64_t low, uint64_t high) {\n-  bool result = (val >= low) && (val <= high);\n-  if (!result) {\n-    fprintf(stderr, \"Value %llu is not in range [%llu, %llu]\\n\",\n-            (unsigned long long)(val),\n-            (unsigned long long)(low),\n-            (unsigned long long)(high));\n-  }\n-  return result;\n-}\n-\n-TEST(DBTest, ApproximateSizes) {\n-  do {\n-    Options options = CurrentOptions();\n-    options.write_buffer_size = 100000000;        // Large write buffer\n-    options.compression = kNoCompression;\n-    DestroyAndReopen();\n-\n-    ASSERT_TRUE(Between(Size(\"\", \"xyz\"), 0, 0));\n-    Reopen(&options);\n-    ASSERT_TRUE(Between(Size(\"\", \"xyz\"), 0, 0));\n-\n-    // Write 8MB (80 values, each 100K)\n-    ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-    const int N = 80;\n-    static const int S1 = 100000;\n-    static const int S2 = 105000;  // Allow some expansion from metadata\n-    Random rnd(301);\n-    for (int i = 0; i < N; i++) {\n-      ASSERT_OK(Put(Key(i), RandomString(&rnd, S1)));\n-    }\n-\n-    // 0 because GetApproximateSizes() does not account for memtable space\n-    ASSERT_TRUE(Between(Size(\"\", Key(50)), 0, 0));\n-\n-    if (options.reuse_logs) {\n-      // Recovery will reuse memtable, and GetApproximateSizes() does not\n-      // account for memtable usage;\n-      Reopen(&options);\n-      ASSERT_TRUE(Between(Size(\"\", Key(50)), 0, 0));\n-      continue;\n-    }\n-\n-    // Check sizes across recovery by reopening a few times\n-    for (int run = 0; run < 3; run++) {\n-      Reopen(&options);\n-\n-      for (int compact_start = 0; compact_start < N; compact_start += 10) {\n-        for (int i = 0; i < N; i += 10) {\n-          ASSERT_TRUE(Between(Size(\"\", Key(i)), S1*i, S2*i));\n-          ASSERT_TRUE(Between(Size(\"\", Key(i)+\".suffix\"), S1*(i+1), S2*(i+1)));\n-          ASSERT_TRUE(Between(Size(Key(i), Key(i+10)), S1*10, S2*10));\n-        }\n-        ASSERT_TRUE(Between(Size(\"\", Key(50)), S1*50, S2*50));\n-        ASSERT_TRUE(Between(Size(\"\", Key(50)+\".suffix\"), S1*50, S2*50));\n-\n-        std::string cstart_str = Key(compact_start);\n-        std::string cend_str = Key(compact_start + 9);\n-        Slice cstart = cstart_str;\n-        Slice cend = cend_str;\n-        dbfull()->TEST_CompactRange(0, &cstart, &cend);\n-      }\n-\n-      ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-      ASSERT_GT(NumTableFilesAtLevel(1), 0);\n-    }\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, ApproximateSizes_MixOfSmallAndLarge) {\n-  do {\n-    Options options = CurrentOptions();\n-    options.compression = kNoCompression;\n-    Reopen();\n-\n-    Random rnd(301);\n-    std::string big1 = RandomString(&rnd, 100000);\n-    ASSERT_OK(Put(Key(0), RandomString(&rnd, 10000)));\n-    ASSERT_OK(Put(Key(1), RandomString(&rnd, 10000)));\n-    ASSERT_OK(Put(Key(2), big1));\n-    ASSERT_OK(Put(Key(3), RandomString(&rnd, 10000)));\n-    ASSERT_OK(Put(Key(4), big1));\n-    ASSERT_OK(Put(Key(5), RandomString(&rnd, 10000)));\n-    ASSERT_OK(Put(Key(6), RandomString(&rnd, 300000)));\n-    ASSERT_OK(Put(Key(7), RandomString(&rnd, 10000)));\n-\n-    if (options.reuse_logs) {\n-      // Need to force a memtable compaction since recovery does not do so.\n-      ASSERT_OK(dbfull()->TEST_CompactMemTable());\n-    }\n-\n-    // Check sizes across recovery by reopening a few times\n-    for (int run = 0; run < 3; run++) {\n-      Reopen(&options);\n-\n-      ASSERT_TRUE(Between(Size(\"\", Key(0)), 0, 0));\n-      ASSERT_TRUE(Between(Size(\"\", Key(1)), 10000, 11000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(2)), 20000, 21000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(3)), 120000, 121000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(4)), 130000, 131000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(5)), 230000, 231000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(6)), 240000, 241000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(7)), 540000, 541000));\n-      ASSERT_TRUE(Between(Size(\"\", Key(8)), 550000, 560000));\n-\n-      ASSERT_TRUE(Between(Size(Key(3), Key(5)), 110000, 111000));\n-\n-      dbfull()->TEST_CompactRange(0, NULL, NULL);\n-    }\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, IteratorPinsRef) {\n-  Put(\"foo\", \"hello\");\n-\n-  // Get iterator that will yield the current contents of the DB.\n-  Iterator* iter = db_->NewIterator(ReadOptions());\n-\n-  // Write to force compactions\n-  Put(\"foo\", \"newvalue1\");\n-  for (int i = 0; i < 100; i++) {\n-    ASSERT_OK(Put(Key(i), Key(i) + std::string(100000, 'v'))); // 100K values\n-  }\n-  Put(\"foo\", \"newvalue2\");\n-\n-  iter->SeekToFirst();\n-  ASSERT_TRUE(iter->Valid());\n-  ASSERT_EQ(\"foo\", iter->key().ToString());\n-  ASSERT_EQ(\"hello\", iter->value().ToString());\n-  iter->Next();\n-  ASSERT_TRUE(!iter->Valid());\n-  delete iter;\n-}\n-\n-TEST(DBTest, Snapshot) {\n-  do {\n-    Put(\"foo\", \"v1\");\n-    const Snapshot* s1 = db_->GetSnapshot();\n-    Put(\"foo\", \"v2\");\n-    const Snapshot* s2 = db_->GetSnapshot();\n-    Put(\"foo\", \"v3\");\n-    const Snapshot* s3 = db_->GetSnapshot();\n-\n-    Put(\"foo\", \"v4\");\n-    ASSERT_EQ(\"v1\", Get(\"foo\", s1));\n-    ASSERT_EQ(\"v2\", Get(\"foo\", s2));\n-    ASSERT_EQ(\"v3\", Get(\"foo\", s3));\n-    ASSERT_EQ(\"v4\", Get(\"foo\"));\n-\n-    db_->ReleaseSnapshot(s3);\n-    ASSERT_EQ(\"v1\", Get(\"foo\", s1));\n-    ASSERT_EQ(\"v2\", Get(\"foo\", s2));\n-    ASSERT_EQ(\"v4\", Get(\"foo\"));\n-\n-    db_->ReleaseSnapshot(s1);\n-    ASSERT_EQ(\"v2\", Get(\"foo\", s2));\n-    ASSERT_EQ(\"v4\", Get(\"foo\"));\n-\n-    db_->ReleaseSnapshot(s2);\n-    ASSERT_EQ(\"v4\", Get(\"foo\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, HiddenValuesAreRemoved) {\n-  do {\n-    Random rnd(301);\n-    FillLevels(\"a\", \"z\");\n-\n-    std::string big = RandomString(&rnd, 50000);\n-    Put(\"foo\", big);\n-    Put(\"pastfoo\", \"v\");\n-    const Snapshot* snapshot = db_->GetSnapshot();\n-    Put(\"foo\", \"tiny\");\n-    Put(\"pastfoo2\", \"v2\");        // Advance sequence number one more\n-\n-    ASSERT_OK(dbfull()->TEST_CompactMemTable());\n-    ASSERT_GT(NumTableFilesAtLevel(0), 0);\n-\n-    ASSERT_EQ(big, Get(\"foo\", snapshot));\n-    ASSERT_TRUE(Between(Size(\"\", \"pastfoo\"), 50000, 60000));\n-    db_->ReleaseSnapshot(snapshot);\n-    ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ tiny, \" + big + \" ]\");\n-    Slice x(\"x\");\n-    dbfull()->TEST_CompactRange(0, NULL, &x);\n-    ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ tiny ]\");\n-    ASSERT_EQ(NumTableFilesAtLevel(0), 0);\n-    ASSERT_GE(NumTableFilesAtLevel(1), 1);\n-    dbfull()->TEST_CompactRange(1, NULL, &x);\n-    ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ tiny ]\");\n-\n-    ASSERT_TRUE(Between(Size(\"\", \"pastfoo\"), 0, 1000));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, DeletionMarkers1) {\n-  Put(\"foo\", \"v1\");\n-  ASSERT_OK(dbfull()->TEST_CompactMemTable());\n-  const int last = config::kMaxMemCompactLevel;\n-  ASSERT_EQ(NumTableFilesAtLevel(last), 1);   // foo => v1 is now in last level\n-\n-  // Place a table at level last-1 to prevent merging with preceding mutation\n-  Put(\"a\", \"begin\");\n-  Put(\"z\", \"end\");\n-  dbfull()->TEST_CompactMemTable();\n-  ASSERT_EQ(NumTableFilesAtLevel(last), 1);\n-  ASSERT_EQ(NumTableFilesAtLevel(last-1), 1);\n-\n-  Delete(\"foo\");\n-  Put(\"foo\", \"v2\");\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ v2, DEL, v1 ]\");\n-  ASSERT_OK(dbfull()->TEST_CompactMemTable());  // Moves to level last-2\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ v2, DEL, v1 ]\");\n-  Slice z(\"z\");\n-  dbfull()->TEST_CompactRange(last-2, NULL, &z);\n-  // DEL eliminated, but v1 remains because we aren't compacting that level\n-  // (DEL can be eliminated because v2 hides v1).\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ v2, v1 ]\");\n-  dbfull()->TEST_CompactRange(last-1, NULL, NULL);\n-  // Merging last-1 w/ last, so we are the base level for \"foo\", so\n-  // DEL is removed.  (as is v1).\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ v2 ]\");\n-}\n-\n-TEST(DBTest, DeletionMarkers2) {\n-  Put(\"foo\", \"v1\");\n-  ASSERT_OK(dbfull()->TEST_CompactMemTable());\n-  const int last = config::kMaxMemCompactLevel;\n-  ASSERT_EQ(NumTableFilesAtLevel(last), 1);   // foo => v1 is now in last level\n-\n-  // Place a table at level last-1 to prevent merging with preceding mutation\n-  Put(\"a\", \"begin\");\n-  Put(\"z\", \"end\");\n-  dbfull()->TEST_CompactMemTable();\n-  ASSERT_EQ(NumTableFilesAtLevel(last), 1);\n-  ASSERT_EQ(NumTableFilesAtLevel(last-1), 1);\n-\n-  Delete(\"foo\");\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ DEL, v1 ]\");\n-  ASSERT_OK(dbfull()->TEST_CompactMemTable());  // Moves to level last-2\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ DEL, v1 ]\");\n-  dbfull()->TEST_CompactRange(last-2, NULL, NULL);\n-  // DEL kept: \"last\" file overlaps\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ DEL, v1 ]\");\n-  dbfull()->TEST_CompactRange(last-1, NULL, NULL);\n-  // Merging last-1 w/ last, so we are the base level for \"foo\", so\n-  // DEL is removed.  (as is v1).\n-  ASSERT_EQ(AllEntriesFor(\"foo\"), \"[ ]\");\n-}\n-\n-TEST(DBTest, OverlapInLevel0) {\n-  do {\n-    ASSERT_EQ(config::kMaxMemCompactLevel, 2) << \"Fix test to match config\";\n-\n-    // Fill levels 1 and 2 to disable the pushing of new memtables to levels > 0.\n-    ASSERT_OK(Put(\"100\", \"v100\"));\n-    ASSERT_OK(Put(\"999\", \"v999\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_OK(Delete(\"100\"));\n-    ASSERT_OK(Delete(\"999\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"0,1,1\", FilesPerLevel());\n-\n-    // Make files spanning the following ranges in level-0:\n-    //  files[0]  200 .. 900\n-    //  files[1]  300 .. 500\n-    // Note that files are sorted by smallest key.\n-    ASSERT_OK(Put(\"300\", \"v300\"));\n-    ASSERT_OK(Put(\"500\", \"v500\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_OK(Put(\"200\", \"v200\"));\n-    ASSERT_OK(Put(\"600\", \"v600\"));\n-    ASSERT_OK(Put(\"900\", \"v900\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"2,1,1\", FilesPerLevel());\n-\n-    // Compact away the placeholder files we created initially\n-    dbfull()->TEST_CompactRange(1, NULL, NULL);\n-    dbfull()->TEST_CompactRange(2, NULL, NULL);\n-    ASSERT_EQ(\"2\", FilesPerLevel());\n-\n-    // Do a memtable compaction.  Before bug-fix, the compaction would\n-    // not detect the overlap with level-0 files and would incorrectly place\n-    // the deletion in a deeper level.\n-    ASSERT_OK(Delete(\"600\"));\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"3\", FilesPerLevel());\n-    ASSERT_EQ(\"NOT_FOUND\", Get(\"600\"));\n-  } while (ChangeOptions());\n-}\n-\n-TEST(DBTest, L0_CompactionBug_Issue44_a) {\n-  Reopen();\n-  ASSERT_OK(Put(\"b\", \"v\"));\n-  Reopen();\n-  ASSERT_OK(Delete(\"b\"));\n-  ASSERT_OK(Delete(\"a\"));\n-  Reopen();\n-  ASSERT_OK(Delete(\"a\"));\n-  Reopen();\n-  ASSERT_OK(Put(\"a\", \"v\"));\n-  Reopen();\n-  Reopen();\n-  ASSERT_EQ(\"(a->v)\", Contents());\n-  DelayMilliseconds(1000);  // Wait for compaction to finish\n-  ASSERT_EQ(\"(a->v)\", Contents());\n-}\n-\n-TEST(DBTest, L0_CompactionBug_Issue44_b) {\n-  Reopen();\n-  Put(\"\",\"\");\n-  Reopen();\n-  Delete(\"e\");\n-  Put(\"\",\"\");\n-  Reopen();\n-  Put(\"c\", \"cv\");\n-  Reopen();\n-  Put(\"\",\"\");\n-  Reopen();\n-  Put(\"\",\"\");\n-  DelayMilliseconds(1000);  // Wait for compaction to finish\n-  Reopen();\n-  Put(\"d\",\"dv\");\n-  Reopen();\n-  Put(\"\",\"\");\n-  Reopen();\n-  Delete(\"d\");\n-  Delete(\"b\");\n-  Reopen();\n-  ASSERT_EQ(\"(->)(c->cv)\", Contents());\n-  DelayMilliseconds(1000);  // Wait for compaction to finish\n-  ASSERT_EQ(\"(->)(c->cv)\", Contents());\n-}\n-\n-TEST(DBTest, ComparatorCheck) {\n-  class NewComparator : public Comparator {\n-   public:\n-    virtual const char* Name() const { return \"leveldb.NewComparator\"; }\n-    virtual int Compare(const Slice& a, const Slice& b) const {\n-      return BytewiseComparator()->Compare(a, b);\n-    }\n-    virtual void FindShortestSeparator(std::string* s, const Slice& l) const {\n-      BytewiseComparator()->FindShortestSeparator(s, l);\n-    }\n-    virtual void FindShortSuccessor(std::string* key) const {\n-      BytewiseComparator()->FindShortSuccessor(key);\n-    }\n-  };\n-  NewComparator cmp;\n-  Options new_options = CurrentOptions();\n-  new_options.comparator = &cmp;\n-  Status s = TryReopen(&new_options);\n-  ASSERT_TRUE(!s.ok());\n-  ASSERT_TRUE(s.ToString().find(\"comparator\") != std::string::npos)\n-      << s.ToString();\n-}\n-\n-TEST(DBTest, CustomComparator) {\n-  class NumberComparator : public Comparator {\n-   public:\n-    virtual const char* Name() const { return \"test.NumberComparator\"; }\n-    virtual int Compare(const Slice& a, const Slice& b) const {\n-      return ToNumber(a) - ToNumber(b);\n-    }\n-    virtual void FindShortestSeparator(std::string* s, const Slice& l) const {\n-      ToNumber(*s);     // Check format\n-      ToNumber(l);      // Check format\n-    }\n-    virtual void FindShortSuccessor(std::string* key) const {\n-      ToNumber(*key);   // Check format\n-    }\n-   private:\n-    static int ToNumber(const Slice& x) {\n-      // Check that there are no extra characters.\n-      ASSERT_TRUE(x.size() >= 2 && x[0] == '[' && x[x.size()-1] == ']')\n-          << EscapeString(x);\n-      int val;\n-      char ignored;\n-      ASSERT_TRUE(sscanf(x.ToString().c_str(), \"[%i]%c\", &val, &ignored) == 1)\n-          << EscapeString(x);\n-      return val;\n-    }\n-  };\n-  NumberComparator cmp;\n-  Options new_options = CurrentOptions();\n-  new_options.create_if_missing = true;\n-  new_options.comparator = &cmp;\n-  new_options.filter_policy = NULL;     // Cannot use bloom filters\n-  new_options.write_buffer_size = 1000;  // Compact more often\n-  DestroyAndReopen(&new_options);\n-  ASSERT_OK(Put(\"[10]\", \"ten\"));\n-  ASSERT_OK(Put(\"[0x14]\", \"twenty\"));\n-  for (int i = 0; i < 2; i++) {\n-    ASSERT_EQ(\"ten\", Get(\"[10]\"));\n-    ASSERT_EQ(\"ten\", Get(\"[0xa]\"));\n-    ASSERT_EQ(\"twenty\", Get(\"[20]\"));\n-    ASSERT_EQ(\"twenty\", Get(\"[0x14]\"));\n-    ASSERT_EQ(\"NOT_FOUND\", Get(\"[15]\"));\n-    ASSERT_EQ(\"NOT_FOUND\", Get(\"[0xf]\"));\n-    Compact(\"[0]\", \"[9999]\");\n-  }\n-\n-  for (int run = 0; run < 2; run++) {\n-    for (int i = 0; i < 1000; i++) {\n-      char buf[100];\n-      snprintf(buf, sizeof(buf), \"[%d]\", i*10);\n-      ASSERT_OK(Put(buf, buf));\n-    }\n-    Compact(\"[0]\", \"[1000000]\");\n-  }\n-}\n-\n-TEST(DBTest, ManualCompaction) {\n-  ASSERT_EQ(config::kMaxMemCompactLevel, 2)\n-      << \"Need to update this test to match kMaxMemCompactLevel\";\n-\n-  MakeTables(3, \"p\", \"q\");\n-  ASSERT_EQ(\"1,1,1\", FilesPerLevel());\n-\n-  // Compaction range falls before files\n-  Compact(\"\", \"c\");\n-  ASSERT_EQ(\"1,1,1\", FilesPerLevel());\n-\n-  // Compaction range falls after files\n-  Compact(\"r\", \"z\");\n-  ASSERT_EQ(\"1,1,1\", FilesPerLevel());\n-\n-  // Compaction range overlaps files\n-  Compact(\"p1\", \"p9\");\n-  ASSERT_EQ(\"0,0,1\", FilesPerLevel());\n-\n-  // Populate a different range\n-  MakeTables(3, \"c\", \"e\");\n-  ASSERT_EQ(\"1,1,2\", FilesPerLevel());\n-\n-  // Compact just the new range\n-  Compact(\"b\", \"f\");\n-  ASSERT_EQ(\"0,0,2\", FilesPerLevel());\n-\n-  // Compact all\n-  MakeTables(1, \"a\", \"z\");\n-  ASSERT_EQ(\"0,1,2\", FilesPerLevel());\n-  db_->CompactRange(NULL, NULL);\n-  ASSERT_EQ(\"0,0,1\", FilesPerLevel());\n-}\n-\n-TEST(DBTest, DBOpen_Options) {\n-  std::string dbname = test::TmpDir() + \"/db_options_test\";\n-  DestroyDB(dbname, Options());\n-\n-  // Does not exist, and create_if_missing == false: error\n-  DB* db = NULL;\n-  Options opts;\n-  opts.create_if_missing = false;\n-  Status s = DB::Open(opts, dbname, &db);\n-  ASSERT_TRUE(strstr(s.ToString().c_str(), \"does not exist\") != NULL);\n-  ASSERT_TRUE(db == NULL);\n-\n-  // Does not exist, and create_if_missing == true: OK\n-  opts.create_if_missing = true;\n-  s = DB::Open(opts, dbname, &db);\n-  ASSERT_OK(s);\n-  ASSERT_TRUE(db != NULL);\n-\n-  delete db;\n-  db = NULL;\n-\n-  // Does exist, and error_if_exists == true: error\n-  opts.create_if_missing = false;\n-  opts.error_if_exists = true;\n-  s = DB::Open(opts, dbname, &db);\n-  ASSERT_TRUE(strstr(s.ToString().c_str(), \"exists\") != NULL);\n-  ASSERT_TRUE(db == NULL);\n-\n-  // Does exist, and error_if_exists == false: OK\n-  opts.create_if_missing = true;\n-  opts.error_if_exists = false;\n-  s = DB::Open(opts, dbname, &db);\n-  ASSERT_OK(s);\n-  ASSERT_TRUE(db != NULL);\n-\n-  delete db;\n-  db = NULL;\n-}\n-\n-TEST(DBTest, Locking) {\n-  DB* db2 = NULL;\n-  Status s = DB::Open(CurrentOptions(), dbname_, &db2);\n-  ASSERT_TRUE(!s.ok()) << \"Locking did not prevent re-opening db\";\n-}\n-\n-// Check that number of files does not grow when we are out of space\n-TEST(DBTest, NoSpace) {\n-  Options options = CurrentOptions();\n-  options.env = env_;\n-  Reopen(&options);\n-\n-  ASSERT_OK(Put(\"foo\", \"v1\"));\n-  ASSERT_EQ(\"v1\", Get(\"foo\"));\n-  Compact(\"a\", \"z\");\n-  const int num_files = CountFiles();\n-  env_->no_space_.Release_Store(env_);   // Force out-of-space errors\n-  for (int i = 0; i < 10; i++) {\n-    for (int level = 0; level < config::kNumLevels-1; level++) {\n-      dbfull()->TEST_CompactRange(level, NULL, NULL);\n-    }\n-  }\n-  env_->no_space_.Release_Store(NULL);\n-  ASSERT_LT(CountFiles(), num_files + 3);\n-}\n-\n-TEST(DBTest, NonWritableFileSystem) {\n-  Options options = CurrentOptions();\n-  options.write_buffer_size = 1000;\n-  options.env = env_;\n-  Reopen(&options);\n-  ASSERT_OK(Put(\"foo\", \"v1\"));\n-  env_->non_writable_.Release_Store(env_);  // Force errors for new files\n-  std::string big(100000, 'x');\n-  int errors = 0;\n-  for (int i = 0; i < 20; i++) {\n-    fprintf(stderr, \"iter %d; errors %d\\n\", i, errors);\n-    if (!Put(\"foo\", big).ok()) {\n-      errors++;\n-      DelayMilliseconds(100);\n-    }\n-  }\n-  ASSERT_GT(errors, 0);\n-  env_->non_writable_.Release_Store(NULL);\n-}\n-\n-TEST(DBTest, WriteSyncError) {\n-  // Check that log sync errors cause the DB to disallow future writes.\n-\n-  // (a) Cause log sync calls to fail\n-  Options options = CurrentOptions();\n-  options.env = env_;\n-  Reopen(&options);\n-  env_->data_sync_error_.Release_Store(env_);\n-\n-  // (b) Normal write should succeed\n-  WriteOptions w;\n-  ASSERT_OK(db_->Put(w, \"k1\", \"v1\"));\n-  ASSERT_EQ(\"v1\", Get(\"k1\"));\n-\n-  // (c) Do a sync write; should fail\n-  w.sync = true;\n-  ASSERT_TRUE(!db_->Put(w, \"k2\", \"v2\").ok());\n-  ASSERT_EQ(\"v1\", Get(\"k1\"));\n-  ASSERT_EQ(\"NOT_FOUND\", Get(\"k2\"));\n-\n-  // (d) make sync behave normally\n-  env_->data_sync_error_.Release_Store(NULL);\n-\n-  // (e) Do a non-sync write; should fail\n-  w.sync = false;\n-  ASSERT_TRUE(!db_->Put(w, \"k3\", \"v3\").ok());\n-  ASSERT_EQ(\"v1\", Get(\"k1\"));\n-  ASSERT_EQ(\"NOT_FOUND\", Get(\"k2\"));\n-  ASSERT_EQ(\"NOT_FOUND\", Get(\"k3\"));\n-}\n-\n-TEST(DBTest, ManifestWriteError) {\n-  // Test for the following problem:\n-  // (a) Compaction produces file F\n-  // (b) Log record containing F is written to MANIFEST file, but Sync() fails\n-  // (c) GC deletes F\n-  // (d) After reopening DB, reads fail since deleted F is named in log record\n-\n-  // We iterate twice.  In the second iteration, everything is the\n-  // same except the log record never makes it to the MANIFEST file.\n-  for (int iter = 0; iter < 2; iter++) {\n-    port::AtomicPointer* error_type = (iter == 0)\n-        ? &env_->manifest_sync_error_\n-        : &env_->manifest_write_error_;\n-\n-    // Insert foo=>bar mapping\n-    Options options = CurrentOptions();\n-    options.env = env_;\n-    options.create_if_missing = true;\n-    options.error_if_exists = false;\n-    DestroyAndReopen(&options);\n-    ASSERT_OK(Put(\"foo\", \"bar\"));\n-    ASSERT_EQ(\"bar\", Get(\"foo\"));\n-\n-    // Memtable compaction (will succeed)\n-    dbfull()->TEST_CompactMemTable();\n-    ASSERT_EQ(\"bar\", Get(\"foo\"));\n-    const int last = config::kMaxMemCompactLevel;\n-    ASSERT_EQ(NumTableFilesAtLevel(last), 1);   // foo=>bar is now in last level\n-\n-    // Merging compaction (will fail)\n-    error_type->Release_Store(env_);\n-    dbfull()->TEST_CompactRange(last, NULL, NULL);  // Should fail\n-    ASSERT_EQ(\"bar\", Get(\"foo\"));\n-\n-    // Recovery: should not lose data\n-    error_type->Release_Store(NULL);\n-    Reopen(&options);\n-    ASSERT_EQ(\"bar\", Get(\"foo\"));\n-  }\n-}\n-\n-TEST(DBTest, MissingSSTFile) {\n-  ASSERT_OK(Put(\"foo\", \"bar\"));\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-\n-  // Dump the memtable to disk.\n-  dbfull()->TEST_CompactMemTable();\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-\n-  Close();\n-  ASSERT_TRUE(DeleteAnSSTFile());\n-  Options options = CurrentOptions();\n-  options.paranoid_checks = true;\n-  Status s = TryReopen(&options);\n-  ASSERT_TRUE(!s.ok());\n-  ASSERT_TRUE(s.ToString().find(\"issing\") != std::string::npos)\n-      << s.ToString();\n-}\n-\n-TEST(DBTest, StillReadSST) {\n-  ASSERT_OK(Put(\"foo\", \"bar\"));\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-\n-  // Dump the memtable to disk.\n-  dbfull()->TEST_CompactMemTable();\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-  Close();\n-  ASSERT_GT(RenameLDBToSST(), 0);\n-  Options options = CurrentOptions();\n-  options.paranoid_checks = true;\n-  Status s = TryReopen(&options);\n-  ASSERT_TRUE(s.ok());\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-}\n-\n-TEST(DBTest, FilesDeletedAfterCompaction) {\n-  ASSERT_OK(Put(\"foo\", \"v2\"));\n-  Compact(\"a\", \"z\");\n-  const int num_files = CountFiles();\n-  for (int i = 0; i < 10; i++) {\n-    ASSERT_OK(Put(\"foo\", \"v2\"));\n-    Compact(\"a\", \"z\");\n-  }\n-  ASSERT_EQ(CountFiles(), num_files);\n-}\n-\n-TEST(DBTest, BloomFilter) {\n-  env_->count_random_reads_ = true;\n-  Options options = CurrentOptions();\n-  options.env = env_;\n-  options.block_cache = NewLRUCache(0);  // Prevent cache hits\n-  options.filter_policy = NewBloomFilterPolicy(10);\n-  Reopen(&options);\n-\n-  // Populate multiple layers\n-  const int N = 10000;\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_OK(Put(Key(i), Key(i)));\n-  }\n-  Compact(\"a\", \"z\");\n-  for (int i = 0; i < N; i += 100) {\n-    ASSERT_OK(Put(Key(i), Key(i)));\n-  }\n-  dbfull()->TEST_CompactMemTable();\n-\n-  // Prevent auto compactions triggered by seeks\n-  env_->delay_data_sync_.Release_Store(env_);\n-\n-  // Lookup present keys.  Should rarely read from small sstable.\n-  env_->random_read_counter_.Reset();\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_EQ(Key(i), Get(Key(i)));\n-  }\n-  int reads = env_->random_read_counter_.Read();\n-  fprintf(stderr, \"%d present => %d reads\\n\", N, reads);\n-  ASSERT_GE(reads, N);\n-  ASSERT_LE(reads, N + 2*N/100);\n-\n-  // Lookup present keys.  Should rarely read from either sstable.\n-  env_->random_read_counter_.Reset();\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_EQ(\"NOT_FOUND\", Get(Key(i) + \".missing\"));\n-  }\n-  reads = env_->random_read_counter_.Read();\n-  fprintf(stderr, \"%d missing => %d reads\\n\", N, reads);\n-  ASSERT_LE(reads, 3*N/100);\n-\n-  env_->delay_data_sync_.Release_Store(NULL);\n-  Close();\n-  delete options.block_cache;\n-  delete options.filter_policy;\n-}\n-\n-// Multi-threaded test:\n-namespace {\n-\n-static const int kNumThreads = 4;\n-static const int kTestSeconds = 10;\n-static const int kNumKeys = 1000;\n-\n-struct MTState {\n-  DBTest* test;\n-  port::AtomicPointer stop;\n-  port::AtomicPointer counter[kNumThreads];\n-  port::AtomicPointer thread_done[kNumThreads];\n-};\n-\n-struct MTThread {\n-  MTState* state;\n-  int id;\n-};\n-\n-static void MTThreadBody(void* arg) {\n-  MTThread* t = reinterpret_cast<MTThread*>(arg);\n-  int id = t->id;\n-  DB* db = t->state->test->db_;\n-  uintptr_t counter = 0;\n-  fprintf(stderr, \"... starting thread %d\\n\", id);\n-  Random rnd(1000 + id);\n-  std::string value;\n-  char valbuf[1500];\n-  while (t->state->stop.Acquire_Load() == NULL) {\n-    t->state->counter[id].Release_Store(reinterpret_cast<void*>(counter));\n-\n-    int key = rnd.Uniform(kNumKeys);\n-    char keybuf[20];\n-    snprintf(keybuf, sizeof(keybuf), \"%016d\", key);\n-\n-    if (rnd.OneIn(2)) {\n-      // Write values of the form <key, my id, counter>.\n-      // We add some padding for force compactions.\n-      snprintf(valbuf, sizeof(valbuf), \"%d.%d.%-1000d\",\n-               key, id, static_cast<int>(counter));\n-      ASSERT_OK(db->Put(WriteOptions(), Slice(keybuf), Slice(valbuf)));\n-    } else {\n-      // Read a value and verify that it matches the pattern written above.\n-      Status s = db->Get(ReadOptions(), Slice(keybuf), &value);\n-      if (s.IsNotFound()) {\n-        // Key has not yet been written\n-      } else {\n-        // Check that the writer thread counter is >= the counter in the value\n-        ASSERT_OK(s);\n-        int k, w, c;\n-        ASSERT_EQ(3, sscanf(value.c_str(), \"%d.%d.%d\", &k, &w, &c)) << value;\n-        ASSERT_EQ(k, key);\n-        ASSERT_GE(w, 0);\n-        ASSERT_LT(w, kNumThreads);\n-        ASSERT_LE(static_cast<uintptr_t>(c), reinterpret_cast<uintptr_t>(\n-            t->state->counter[w].Acquire_Load()));\n-      }\n-    }\n-    counter++;\n-  }\n-  t->state->thread_done[id].Release_Store(t);\n-  fprintf(stderr, \"... stopping thread %d after %d ops\\n\", id, int(counter));\n-}\n-\n-}  // namespace\n-\n-TEST(DBTest, MultiThreaded) {\n-  do {\n-    // Initialize state\n-    MTState mt;\n-    mt.test = this;\n-    mt.stop.Release_Store(0);\n-    for (int id = 0; id < kNumThreads; id++) {\n-      mt.counter[id].Release_Store(0);\n-      mt.thread_done[id].Release_Store(0);\n-    }\n-\n-    // Start threads\n-    MTThread thread[kNumThreads];\n-    for (int id = 0; id < kNumThreads; id++) {\n-      thread[id].state = &mt;\n-      thread[id].id = id;\n-      env_->StartThread(MTThreadBody, &thread[id]);\n-    }\n-\n-    // Let them run for a while\n-    DelayMilliseconds(kTestSeconds * 1000);\n-\n-    // Stop the threads and wait for them to finish\n-    mt.stop.Release_Store(&mt);\n-    for (int id = 0; id < kNumThreads; id++) {\n-      while (mt.thread_done[id].Acquire_Load() == NULL) {\n-        DelayMilliseconds(100);\n-      }\n-    }\n-  } while (ChangeOptions());\n-}\n-\n-namespace {\n-typedef std::map<std::string, std::string> KVMap;\n-}\n-\n-class ModelDB: public DB {\n- public:\n-  class ModelSnapshot : public Snapshot {\n-   public:\n-    KVMap map_;\n-  };\n-\n-  explicit ModelDB(const Options& options): options_(options) { }\n-  ~ModelDB() { }\n-  virtual Status Put(const WriteOptions& o, const Slice& k, const Slice& v) {\n-    return DB::Put(o, k, v);\n-  }\n-  virtual Status Delete(const WriteOptions& o, const Slice& key) {\n-    return DB::Delete(o, key);\n-  }\n-  virtual Status Get(const ReadOptions& options,\n-                     const Slice& key, std::string* value) {\n-    assert(false);      // Not implemented\n-    return Status::NotFound(key);\n-  }\n-  virtual Iterator* NewIterator(const ReadOptions& options) {\n-    if (options.snapshot == NULL) {\n-      KVMap* saved = new KVMap;\n-      *saved = map_;\n-      return new ModelIter(saved, true);\n-    } else {\n-      const KVMap* snapshot_state =\n-          &(reinterpret_cast<const ModelSnapshot*>(options.snapshot)->map_);\n-      return new ModelIter(snapshot_state, false);\n-    }\n-  }\n-  virtual const Snapshot* GetSnapshot() {\n-    ModelSnapshot* snapshot = new ModelSnapshot;\n-    snapshot->map_ = map_;\n-    return snapshot;\n-  }\n-\n-  virtual void ReleaseSnapshot(const Snapshot* snapshot) {\n-    delete reinterpret_cast<const ModelSnapshot*>(snapshot);\n-  }\n-  virtual Status Write(const WriteOptions& options, WriteBatch* batch) {\n-    class Handler : public WriteBatch::Handler {\n-     public:\n-      KVMap* map_;\n-      virtual void Put(const Slice& key, const Slice& value) {\n-        (*map_)[key.ToString()] = value.ToString();\n-      }\n-      virtual void Delete(const Slice& key) {\n-        map_->erase(key.ToString());\n-      }\n-    };\n-    Handler handler;\n-    handler.map_ = &map_;\n-    return batch->Iterate(&handler);\n-  }\n-\n-  virtual bool GetProperty(const Slice& property, std::string* value) {\n-    return false;\n-  }\n-  virtual void GetApproximateSizes(const Range* r, int n, uint64_t* sizes) {\n-    for (int i = 0; i < n; i++) {\n-      sizes[i] = 0;\n-    }\n-  }\n-  virtual void CompactRange(const Slice* start, const Slice* end) {\n-  }\n-\n- private:\n-  class ModelIter: public Iterator {\n-   public:\n-    ModelIter(const KVMap* map, bool owned)\n-        : map_(map), owned_(owned), iter_(map_->end()) {\n-    }\n-    ~ModelIter() {\n-      if (owned_) delete map_;\n-    }\n-    virtual bool Valid() const { return iter_ != map_->end(); }\n-    virtual void SeekToFirst() { iter_ = map_->begin(); }\n-    virtual void SeekToLast() {\n-      if (map_->empty()) {\n-        iter_ = map_->end();\n-      } else {\n-        iter_ = map_->find(map_->rbegin()->first);\n-      }\n-    }\n-    virtual void Seek(const Slice& k) {\n-      iter_ = map_->lower_bound(k.ToString());\n-    }\n-    virtual void Next() { ++iter_; }\n-    virtual void Prev() { --iter_; }\n-    virtual Slice key() const { return iter_->first; }\n-    virtual Slice value() const { return iter_->second; }\n-    virtual Status status() const { return Status::OK(); }\n-   private:\n-    const KVMap* const map_;\n-    const bool owned_;  // Do we own map_\n-    KVMap::const_iterator iter_;\n-  };\n-  const Options options_;\n-  KVMap map_;\n-};\n-\n-static std::string RandomKey(Random* rnd) {\n-  int len = (rnd->OneIn(3)\n-             ? 1                // Short sometimes to encourage collisions\n-             : (rnd->OneIn(100) ? rnd->Skewed(10) : rnd->Uniform(10)));\n-  return test::RandomKey(rnd, len);\n-}\n-\n-static bool CompareIterators(int step,\n-                             DB* model,\n-                             DB* db,\n-                             const Snapshot* model_snap,\n-                             const Snapshot* db_snap) {\n-  ReadOptions options;\n-  options.snapshot = model_snap;\n-  Iterator* miter = model->NewIterator(options);\n-  options.snapshot = db_snap;\n-  Iterator* dbiter = db->NewIterator(options);\n-  bool ok = true;\n-  int count = 0;\n-  for (miter->SeekToFirst(), dbiter->SeekToFirst();\n-       ok && miter->Valid() && dbiter->Valid();\n-       miter->Next(), dbiter->Next()) {\n-    count++;\n-    if (miter->key().compare(dbiter->key()) != 0) {\n-      fprintf(stderr, \"step %d: Key mismatch: '%s' vs. '%s'\\n\",\n-              step,\n-              EscapeString(miter->key()).c_str(),\n-              EscapeString(dbiter->key()).c_str());\n-      ok = false;\n-      break;\n-    }\n-\n-    if (miter->value().compare(dbiter->value()) != 0) {\n-      fprintf(stderr, \"step %d: Value mismatch for key '%s': '%s' vs. '%s'\\n\",\n-              step,\n-              EscapeString(miter->key()).c_str(),\n-              EscapeString(miter->value()).c_str(),\n-              EscapeString(miter->value()).c_str());\n-      ok = false;\n-    }\n-  }\n-\n-  if (ok) {\n-    if (miter->Valid() != dbiter->Valid()) {\n-      fprintf(stderr, \"step %d: Mismatch at end of iterators: %d vs. %d\\n\",\n-              step, miter->Valid(), dbiter->Valid());\n-      ok = false;\n-    }\n-  }\n-  fprintf(stderr, \"%d entries compared: ok=%d\\n\", count, ok);\n-  delete miter;\n-  delete dbiter;\n-  return ok;\n-}\n-\n-TEST(DBTest, Randomized) {\n-  Random rnd(test::RandomSeed());\n-  do {\n-    ModelDB model(CurrentOptions());\n-    const int N = 10000;\n-    const Snapshot* model_snap = NULL;\n-    const Snapshot* db_snap = NULL;\n-    std::string k, v;\n-    for (int step = 0; step < N; step++) {\n-      if (step % 100 == 0) {\n-        fprintf(stderr, \"Step %d of %d\\n\", step, N);\n-      }\n-      // TODO(sanjay): Test Get() works\n-      int p = rnd.Uniform(100);\n-      if (p < 45) {                               // Put\n-        k = RandomKey(&rnd);\n-        v = RandomString(&rnd,\n-                         rnd.OneIn(20)\n-                         ? 100 + rnd.Uniform(100)\n-                         : rnd.Uniform(8));\n-        ASSERT_OK(model.Put(WriteOptions(), k, v));\n-        ASSERT_OK(db_->Put(WriteOptions(), k, v));\n-\n-      } else if (p < 90) {                        // Delete\n-        k = RandomKey(&rnd);\n-        ASSERT_OK(model.Delete(WriteOptions(), k));\n-        ASSERT_OK(db_->Delete(WriteOptions(), k));\n-\n-\n-      } else {                                    // Multi-element batch\n-        WriteBatch b;\n-        const int num = rnd.Uniform(8);\n-        for (int i = 0; i < num; i++) {\n-          if (i == 0 || !rnd.OneIn(10)) {\n-            k = RandomKey(&rnd);\n-          } else {\n-            // Periodically re-use the same key from the previous iter, so\n-            // we have multiple entries in the write batch for the same key\n-          }\n-          if (rnd.OneIn(2)) {\n-            v = RandomString(&rnd, rnd.Uniform(10));\n-            b.Put(k, v);\n-          } else {\n-            b.Delete(k);\n-          }\n-        }\n-        ASSERT_OK(model.Write(WriteOptions(), &b));\n-        ASSERT_OK(db_->Write(WriteOptions(), &b));\n-      }\n-\n-      if ((step % 100) == 0) {\n-        ASSERT_TRUE(CompareIterators(step, &model, db_, NULL, NULL));\n-        ASSERT_TRUE(CompareIterators(step, &model, db_, model_snap, db_snap));\n-        // Save a snapshot from each DB this time that we'll use next\n-        // time we compare things, to make sure the current state is\n-        // preserved with the snapshot\n-        if (model_snap != NULL) model.ReleaseSnapshot(model_snap);\n-        if (db_snap != NULL) db_->ReleaseSnapshot(db_snap);\n-\n-        Reopen();\n-        ASSERT_TRUE(CompareIterators(step, &model, db_, NULL, NULL));\n-\n-        model_snap = model.GetSnapshot();\n-        db_snap = db_->GetSnapshot();\n-      }\n-    }\n-    if (model_snap != NULL) model.ReleaseSnapshot(model_snap);\n-    if (db_snap != NULL) db_->ReleaseSnapshot(db_snap);\n-  } while (ChangeOptions());\n-}\n-\n-std::string MakeKey(unsigned int num) {\n-  char buf[30];\n-  snprintf(buf, sizeof(buf), \"%016u\", num);\n-  return std::string(buf);\n-}\n-\n-void BM_LogAndApply(int iters, int num_base_files) {\n-  std::string dbname = test::TmpDir() + \"/leveldb_test_benchmark\";\n-  DestroyDB(dbname, Options());\n-\n-  DB* db = NULL;\n-  Options opts;\n-  opts.create_if_missing = true;\n-  Status s = DB::Open(opts, dbname, &db);\n-  ASSERT_OK(s);\n-  ASSERT_TRUE(db != NULL);\n-\n-  delete db;\n-  db = NULL;\n-\n-  Env* env = Env::Default();\n-\n-  port::Mutex mu;\n-  MutexLock l(&mu);\n-\n-  InternalKeyComparator cmp(BytewiseComparator());\n-  Options options;\n-  VersionSet vset(dbname, &options, NULL, &cmp);\n-  bool save_manifest;\n-  ASSERT_OK(vset.Recover(&save_manifest));\n-  VersionEdit vbase;\n-  uint64_t fnum = 1;\n-  for (int i = 0; i < num_base_files; i++) {\n-    InternalKey start(MakeKey(2*fnum), 1, kTypeValue);\n-    InternalKey limit(MakeKey(2*fnum+1), 1, kTypeDeletion);\n-    vbase.AddFile(2, fnum++, 1 /* file size */, start, limit);\n-  }\n-  ASSERT_OK(vset.LogAndApply(&vbase, &mu));\n-\n-  uint64_t start_micros = env->NowMicros();\n-\n-  for (int i = 0; i < iters; i++) {\n-    VersionEdit vedit;\n-    vedit.DeleteFile(2, fnum);\n-    InternalKey start(MakeKey(2*fnum), 1, kTypeValue);\n-    InternalKey limit(MakeKey(2*fnum+1), 1, kTypeDeletion);\n-    vedit.AddFile(2, fnum++, 1 /* file size */, start, limit);\n-    vset.LogAndApply(&vedit, &mu);\n-  }\n-  uint64_t stop_micros = env->NowMicros();\n-  unsigned int us = stop_micros - start_micros;\n-  char buf[16];\n-  snprintf(buf, sizeof(buf), \"%d\", num_base_files);\n-  fprintf(stderr,\n-          \"BM_LogAndApply/%-6s   %8d iters : %9u us (%7.0f us / iter)\\n\",\n-          buf, iters, us, ((float)us) / iters);\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  if (argc > 1 && std::string(argv[1]) == \"--benchmark\") {\n-    leveldb::BM_LogAndApply(1000, 1);\n-    leveldb::BM_LogAndApply(1000, 100);\n-    leveldb::BM_LogAndApply(1000, 10000);\n-    leveldb::BM_LogAndApply(100, 100000);\n-    return 0;\n-  }\n-\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "20a7ca44626050c01b7bde718581c663d38f42a9",
        "filename": "src/leveldb/db/dbformat.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 140,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dbformat.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dbformat.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/dbformat.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,140 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <stdio.h>\n-#include \"db/dbformat.h\"\n-#include \"port/port.h\"\n-#include \"util/coding.h\"\n-\n-namespace leveldb {\n-\n-static uint64_t PackSequenceAndType(uint64_t seq, ValueType t) {\n-  assert(seq <= kMaxSequenceNumber);\n-  assert(t <= kValueTypeForSeek);\n-  return (seq << 8) | t;\n-}\n-\n-void AppendInternalKey(std::string* result, const ParsedInternalKey& key) {\n-  result->append(key.user_key.data(), key.user_key.size());\n-  PutFixed64(result, PackSequenceAndType(key.sequence, key.type));\n-}\n-\n-std::string ParsedInternalKey::DebugString() const {\n-  char buf[50];\n-  snprintf(buf, sizeof(buf), \"' @ %llu : %d\",\n-           (unsigned long long) sequence,\n-           int(type));\n-  std::string result = \"'\";\n-  result += EscapeString(user_key.ToString());\n-  result += buf;\n-  return result;\n-}\n-\n-std::string InternalKey::DebugString() const {\n-  std::string result;\n-  ParsedInternalKey parsed;\n-  if (ParseInternalKey(rep_, &parsed)) {\n-    result = parsed.DebugString();\n-  } else {\n-    result = \"(bad)\";\n-    result.append(EscapeString(rep_));\n-  }\n-  return result;\n-}\n-\n-const char* InternalKeyComparator::Name() const {\n-  return \"leveldb.InternalKeyComparator\";\n-}\n-\n-int InternalKeyComparator::Compare(const Slice& akey, const Slice& bkey) const {\n-  // Order by:\n-  //    increasing user key (according to user-supplied comparator)\n-  //    decreasing sequence number\n-  //    decreasing type (though sequence# should be enough to disambiguate)\n-  int r = user_comparator_->Compare(ExtractUserKey(akey), ExtractUserKey(bkey));\n-  if (r == 0) {\n-    const uint64_t anum = DecodeFixed64(akey.data() + akey.size() - 8);\n-    const uint64_t bnum = DecodeFixed64(bkey.data() + bkey.size() - 8);\n-    if (anum > bnum) {\n-      r = -1;\n-    } else if (anum < bnum) {\n-      r = +1;\n-    }\n-  }\n-  return r;\n-}\n-\n-void InternalKeyComparator::FindShortestSeparator(\n-      std::string* start,\n-      const Slice& limit) const {\n-  // Attempt to shorten the user portion of the key\n-  Slice user_start = ExtractUserKey(*start);\n-  Slice user_limit = ExtractUserKey(limit);\n-  std::string tmp(user_start.data(), user_start.size());\n-  user_comparator_->FindShortestSeparator(&tmp, user_limit);\n-  if (tmp.size() < user_start.size() &&\n-      user_comparator_->Compare(user_start, tmp) < 0) {\n-    // User key has become shorter physically, but larger logically.\n-    // Tack on the earliest possible number to the shortened user key.\n-    PutFixed64(&tmp, PackSequenceAndType(kMaxSequenceNumber,kValueTypeForSeek));\n-    assert(this->Compare(*start, tmp) < 0);\n-    assert(this->Compare(tmp, limit) < 0);\n-    start->swap(tmp);\n-  }\n-}\n-\n-void InternalKeyComparator::FindShortSuccessor(std::string* key) const {\n-  Slice user_key = ExtractUserKey(*key);\n-  std::string tmp(user_key.data(), user_key.size());\n-  user_comparator_->FindShortSuccessor(&tmp);\n-  if (tmp.size() < user_key.size() &&\n-      user_comparator_->Compare(user_key, tmp) < 0) {\n-    // User key has become shorter physically, but larger logically.\n-    // Tack on the earliest possible number to the shortened user key.\n-    PutFixed64(&tmp, PackSequenceAndType(kMaxSequenceNumber,kValueTypeForSeek));\n-    assert(this->Compare(*key, tmp) < 0);\n-    key->swap(tmp);\n-  }\n-}\n-\n-const char* InternalFilterPolicy::Name() const {\n-  return user_policy_->Name();\n-}\n-\n-void InternalFilterPolicy::CreateFilter(const Slice* keys, int n,\n-                                        std::string* dst) const {\n-  // We rely on the fact that the code in table.cc does not mind us\n-  // adjusting keys[].\n-  Slice* mkey = const_cast<Slice*>(keys);\n-  for (int i = 0; i < n; i++) {\n-    mkey[i] = ExtractUserKey(keys[i]);\n-    // TODO(sanjay): Suppress dups?\n-  }\n-  user_policy_->CreateFilter(keys, n, dst);\n-}\n-\n-bool InternalFilterPolicy::KeyMayMatch(const Slice& key, const Slice& f) const {\n-  return user_policy_->KeyMayMatch(ExtractUserKey(key), f);\n-}\n-\n-LookupKey::LookupKey(const Slice& user_key, SequenceNumber s) {\n-  size_t usize = user_key.size();\n-  size_t needed = usize + 13;  // A conservative estimate\n-  char* dst;\n-  if (needed <= sizeof(space_)) {\n-    dst = space_;\n-  } else {\n-    dst = new char[needed];\n-  }\n-  start_ = dst;\n-  dst = EncodeVarint32(dst, usize + 8);\n-  kstart_ = dst;\n-  memcpy(dst, user_key.data(), usize);\n-  dst += usize;\n-  EncodeFixed64(dst, PackSequenceAndType(s, kValueTypeForSeek));\n-  dst += 8;\n-  end_ = dst;\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "ea897b13c017f30be86f8d9597838effd8d31a8d",
        "filename": "src/leveldb/db/dbformat.h",
        "status": "removed",
        "additions": 0,
        "deletions": 230,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dbformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dbformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/dbformat.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,230 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_DBFORMAT_H_\n-#define STORAGE_LEVELDB_DB_DBFORMAT_H_\n-\n-#include <stdio.h>\n-#include \"leveldb/comparator.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/filter_policy.h\"\n-#include \"leveldb/slice.h\"\n-#include \"leveldb/table_builder.h\"\n-#include \"util/coding.h\"\n-#include \"util/logging.h\"\n-\n-namespace leveldb {\n-\n-// Grouping of constants.  We may want to make some of these\n-// parameters set via options.\n-namespace config {\n-static const int kNumLevels = 7;\n-\n-// Level-0 compaction is started when we hit this many files.\n-static const int kL0_CompactionTrigger = 4;\n-\n-// Soft limit on number of level-0 files.  We slow down writes at this point.\n-static const int kL0_SlowdownWritesTrigger = 8;\n-\n-// Maximum number of level-0 files.  We stop writes at this point.\n-static const int kL0_StopWritesTrigger = 12;\n-\n-// Maximum level to which a new compacted memtable is pushed if it\n-// does not create overlap.  We try to push to level 2 to avoid the\n-// relatively expensive level 0=>1 compactions and to avoid some\n-// expensive manifest file operations.  We do not push all the way to\n-// the largest level since that can generate a lot of wasted disk\n-// space if the same key space is being repeatedly overwritten.\n-static const int kMaxMemCompactLevel = 2;\n-\n-// Approximate gap in bytes between samples of data read during iteration.\n-static const int kReadBytesPeriod = 1048576;\n-\n-}  // namespace config\n-\n-class InternalKey;\n-\n-// Value types encoded as the last component of internal keys.\n-// DO NOT CHANGE THESE ENUM VALUES: they are embedded in the on-disk\n-// data structures.\n-enum ValueType {\n-  kTypeDeletion = 0x0,\n-  kTypeValue = 0x1\n-};\n-// kValueTypeForSeek defines the ValueType that should be passed when\n-// constructing a ParsedInternalKey object for seeking to a particular\n-// sequence number (since we sort sequence numbers in decreasing order\n-// and the value type is embedded as the low 8 bits in the sequence\n-// number in internal keys, we need to use the highest-numbered\n-// ValueType, not the lowest).\n-static const ValueType kValueTypeForSeek = kTypeValue;\n-\n-typedef uint64_t SequenceNumber;\n-\n-// We leave eight bits empty at the bottom so a type and sequence#\n-// can be packed together into 64-bits.\n-static const SequenceNumber kMaxSequenceNumber =\n-    ((0x1ull << 56) - 1);\n-\n-struct ParsedInternalKey {\n-  Slice user_key;\n-  SequenceNumber sequence;\n-  ValueType type;\n-\n-  ParsedInternalKey() { }  // Intentionally left uninitialized (for speed)\n-  ParsedInternalKey(const Slice& u, const SequenceNumber& seq, ValueType t)\n-      : user_key(u), sequence(seq), type(t) { }\n-  std::string DebugString() const;\n-};\n-\n-// Return the length of the encoding of \"key\".\n-inline size_t InternalKeyEncodingLength(const ParsedInternalKey& key) {\n-  return key.user_key.size() + 8;\n-}\n-\n-// Append the serialization of \"key\" to *result.\n-extern void AppendInternalKey(std::string* result,\n-                              const ParsedInternalKey& key);\n-\n-// Attempt to parse an internal key from \"internal_key\".  On success,\n-// stores the parsed data in \"*result\", and returns true.\n-//\n-// On error, returns false, leaves \"*result\" in an undefined state.\n-extern bool ParseInternalKey(const Slice& internal_key,\n-                             ParsedInternalKey* result);\n-\n-// Returns the user key portion of an internal key.\n-inline Slice ExtractUserKey(const Slice& internal_key) {\n-  assert(internal_key.size() >= 8);\n-  return Slice(internal_key.data(), internal_key.size() - 8);\n-}\n-\n-inline ValueType ExtractValueType(const Slice& internal_key) {\n-  assert(internal_key.size() >= 8);\n-  const size_t n = internal_key.size();\n-  uint64_t num = DecodeFixed64(internal_key.data() + n - 8);\n-  unsigned char c = num & 0xff;\n-  return static_cast<ValueType>(c);\n-}\n-\n-// A comparator for internal keys that uses a specified comparator for\n-// the user key portion and breaks ties by decreasing sequence number.\n-class InternalKeyComparator : public Comparator {\n- private:\n-  const Comparator* user_comparator_;\n- public:\n-  explicit InternalKeyComparator(const Comparator* c) : user_comparator_(c) { }\n-  virtual const char* Name() const;\n-  virtual int Compare(const Slice& a, const Slice& b) const;\n-  virtual void FindShortestSeparator(\n-      std::string* start,\n-      const Slice& limit) const;\n-  virtual void FindShortSuccessor(std::string* key) const;\n-\n-  const Comparator* user_comparator() const { return user_comparator_; }\n-\n-  int Compare(const InternalKey& a, const InternalKey& b) const;\n-};\n-\n-// Filter policy wrapper that converts from internal keys to user keys\n-class InternalFilterPolicy : public FilterPolicy {\n- private:\n-  const FilterPolicy* const user_policy_;\n- public:\n-  explicit InternalFilterPolicy(const FilterPolicy* p) : user_policy_(p) { }\n-  virtual const char* Name() const;\n-  virtual void CreateFilter(const Slice* keys, int n, std::string* dst) const;\n-  virtual bool KeyMayMatch(const Slice& key, const Slice& filter) const;\n-};\n-\n-// Modules in this directory should keep internal keys wrapped inside\n-// the following class instead of plain strings so that we do not\n-// incorrectly use string comparisons instead of an InternalKeyComparator.\n-class InternalKey {\n- private:\n-  std::string rep_;\n- public:\n-  InternalKey() { }   // Leave rep_ as empty to indicate it is invalid\n-  InternalKey(const Slice& user_key, SequenceNumber s, ValueType t) {\n-    AppendInternalKey(&rep_, ParsedInternalKey(user_key, s, t));\n-  }\n-\n-  void DecodeFrom(const Slice& s) { rep_.assign(s.data(), s.size()); }\n-  Slice Encode() const {\n-    assert(!rep_.empty());\n-    return rep_;\n-  }\n-\n-  Slice user_key() const { return ExtractUserKey(rep_); }\n-\n-  void SetFrom(const ParsedInternalKey& p) {\n-    rep_.clear();\n-    AppendInternalKey(&rep_, p);\n-  }\n-\n-  void Clear() { rep_.clear(); }\n-\n-  std::string DebugString() const;\n-};\n-\n-inline int InternalKeyComparator::Compare(\n-    const InternalKey& a, const InternalKey& b) const {\n-  return Compare(a.Encode(), b.Encode());\n-}\n-\n-inline bool ParseInternalKey(const Slice& internal_key,\n-                             ParsedInternalKey* result) {\n-  const size_t n = internal_key.size();\n-  if (n < 8) return false;\n-  uint64_t num = DecodeFixed64(internal_key.data() + n - 8);\n-  unsigned char c = num & 0xff;\n-  result->sequence = num >> 8;\n-  result->type = static_cast<ValueType>(c);\n-  result->user_key = Slice(internal_key.data(), n - 8);\n-  return (c <= static_cast<unsigned char>(kTypeValue));\n-}\n-\n-// A helper class useful for DBImpl::Get()\n-class LookupKey {\n- public:\n-  // Initialize *this for looking up user_key at a snapshot with\n-  // the specified sequence number.\n-  LookupKey(const Slice& user_key, SequenceNumber sequence);\n-\n-  ~LookupKey();\n-\n-  // Return a key suitable for lookup in a MemTable.\n-  Slice memtable_key() const { return Slice(start_, end_ - start_); }\n-\n-  // Return an internal key (suitable for passing to an internal iterator)\n-  Slice internal_key() const { return Slice(kstart_, end_ - kstart_); }\n-\n-  // Return the user key\n-  Slice user_key() const { return Slice(kstart_, end_ - kstart_ - 8); }\n-\n- private:\n-  // We construct a char array of the form:\n-  //    klength  varint32               <-- start_\n-  //    userkey  char[klength]          <-- kstart_\n-  //    tag      uint64\n-  //                                    <-- end_\n-  // The array is a suitable MemTable key.\n-  // The suffix starting with \"userkey\" can be used as an InternalKey.\n-  const char* start_;\n-  const char* kstart_;\n-  const char* end_;\n-  char space_[200];      // Avoid allocation for short keys\n-\n-  // No copying allowed\n-  LookupKey(const LookupKey&);\n-  void operator=(const LookupKey&);\n-};\n-\n-inline LookupKey::~LookupKey() {\n-  if (start_ != space_) delete[] start_;\n-}\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_DBFORMAT_H_"
      },
      {
        "sha": "5d82f5d313fad88ea4e1d079427bba13df667cfe",
        "filename": "src/leveldb/db/dbformat_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 112,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dbformat_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dbformat_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/dbformat_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,112 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/dbformat.h\"\n-#include \"util/logging.h\"\n-#include \"util/testharness.h\"\n-\n-namespace leveldb {\n-\n-static std::string IKey(const std::string& user_key,\n-                        uint64_t seq,\n-                        ValueType vt) {\n-  std::string encoded;\n-  AppendInternalKey(&encoded, ParsedInternalKey(user_key, seq, vt));\n-  return encoded;\n-}\n-\n-static std::string Shorten(const std::string& s, const std::string& l) {\n-  std::string result = s;\n-  InternalKeyComparator(BytewiseComparator()).FindShortestSeparator(&result, l);\n-  return result;\n-}\n-\n-static std::string ShortSuccessor(const std::string& s) {\n-  std::string result = s;\n-  InternalKeyComparator(BytewiseComparator()).FindShortSuccessor(&result);\n-  return result;\n-}\n-\n-static void TestKey(const std::string& key,\n-                    uint64_t seq,\n-                    ValueType vt) {\n-  std::string encoded = IKey(key, seq, vt);\n-\n-  Slice in(encoded);\n-  ParsedInternalKey decoded(\"\", 0, kTypeValue);\n-\n-  ASSERT_TRUE(ParseInternalKey(in, &decoded));\n-  ASSERT_EQ(key, decoded.user_key.ToString());\n-  ASSERT_EQ(seq, decoded.sequence);\n-  ASSERT_EQ(vt, decoded.type);\n-\n-  ASSERT_TRUE(!ParseInternalKey(Slice(\"bar\"), &decoded));\n-}\n-\n-class FormatTest { };\n-\n-TEST(FormatTest, InternalKey_EncodeDecode) {\n-  const char* keys[] = { \"\", \"k\", \"hello\", \"longggggggggggggggggggggg\" };\n-  const uint64_t seq[] = {\n-    1, 2, 3,\n-    (1ull << 8) - 1, 1ull << 8, (1ull << 8) + 1,\n-    (1ull << 16) - 1, 1ull << 16, (1ull << 16) + 1,\n-    (1ull << 32) - 1, 1ull << 32, (1ull << 32) + 1\n-  };\n-  for (int k = 0; k < sizeof(keys) / sizeof(keys[0]); k++) {\n-    for (int s = 0; s < sizeof(seq) / sizeof(seq[0]); s++) {\n-      TestKey(keys[k], seq[s], kTypeValue);\n-      TestKey(\"hello\", 1, kTypeDeletion);\n-    }\n-  }\n-}\n-\n-TEST(FormatTest, InternalKeyShortSeparator) {\n-  // When user keys are same\n-  ASSERT_EQ(IKey(\"foo\", 100, kTypeValue),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"foo\", 99, kTypeValue)));\n-  ASSERT_EQ(IKey(\"foo\", 100, kTypeValue),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"foo\", 101, kTypeValue)));\n-  ASSERT_EQ(IKey(\"foo\", 100, kTypeValue),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"foo\", 100, kTypeValue)));\n-  ASSERT_EQ(IKey(\"foo\", 100, kTypeValue),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"foo\", 100, kTypeDeletion)));\n-\n-  // When user keys are misordered\n-  ASSERT_EQ(IKey(\"foo\", 100, kTypeValue),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"bar\", 99, kTypeValue)));\n-\n-  // When user keys are different, but correctly ordered\n-  ASSERT_EQ(IKey(\"g\", kMaxSequenceNumber, kValueTypeForSeek),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"hello\", 200, kTypeValue)));\n-\n-  // When start user key is prefix of limit user key\n-  ASSERT_EQ(IKey(\"foo\", 100, kTypeValue),\n-            Shorten(IKey(\"foo\", 100, kTypeValue),\n-                    IKey(\"foobar\", 200, kTypeValue)));\n-\n-  // When limit user key is prefix of start user key\n-  ASSERT_EQ(IKey(\"foobar\", 100, kTypeValue),\n-            Shorten(IKey(\"foobar\", 100, kTypeValue),\n-                    IKey(\"foo\", 200, kTypeValue)));\n-}\n-\n-TEST(FormatTest, InternalKeyShortestSuccessor) {\n-  ASSERT_EQ(IKey(\"g\", kMaxSequenceNumber, kValueTypeForSeek),\n-            ShortSuccessor(IKey(\"foo\", 100, kTypeValue)));\n-  ASSERT_EQ(IKey(\"\\xff\\xff\", 100, kTypeValue),\n-            ShortSuccessor(IKey(\"\\xff\\xff\", 100, kTypeValue)));\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "61c47c2ff999ab23c50119f705025593297f4200",
        "filename": "src/leveldb/db/dumpfile.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 225,
        "changes": 225,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dumpfile.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/dumpfile.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/dumpfile.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,225 +0,0 @@\n-// Copyright (c) 2012 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <stdio.h>\n-#include \"db/dbformat.h\"\n-#include \"db/filename.h\"\n-#include \"db/log_reader.h\"\n-#include \"db/version_edit.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/iterator.h\"\n-#include \"leveldb/options.h\"\n-#include \"leveldb/status.h\"\n-#include \"leveldb/table.h\"\n-#include \"leveldb/write_batch.h\"\n-#include \"util/logging.h\"\n-\n-namespace leveldb {\n-\n-namespace {\n-\n-bool GuessType(const std::string& fname, FileType* type) {\n-  size_t pos = fname.rfind('/');\n-  std::string basename;\n-  if (pos == std::string::npos) {\n-    basename = fname;\n-  } else {\n-    basename = std::string(fname.data() + pos + 1, fname.size() - pos - 1);\n-  }\n-  uint64_t ignored;\n-  return ParseFileName(basename, &ignored, type);\n-}\n-\n-// Notified when log reader encounters corruption.\n-class CorruptionReporter : public log::Reader::Reporter {\n- public:\n-  WritableFile* dst_;\n-  virtual void Corruption(size_t bytes, const Status& status) {\n-    std::string r = \"corruption: \";\n-    AppendNumberTo(&r, bytes);\n-    r += \" bytes; \";\n-    r += status.ToString();\n-    r.push_back('\\n');\n-    dst_->Append(r);\n-  }\n-};\n-\n-// Print contents of a log file. (*func)() is called on every record.\n-Status PrintLogContents(Env* env, const std::string& fname,\n-                        void (*func)(uint64_t, Slice, WritableFile*),\n-                        WritableFile* dst) {\n-  SequentialFile* file;\n-  Status s = env->NewSequentialFile(fname, &file);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-  CorruptionReporter reporter;\n-  reporter.dst_ = dst;\n-  log::Reader reader(file, &reporter, true, 0);\n-  Slice record;\n-  std::string scratch;\n-  while (reader.ReadRecord(&record, &scratch)) {\n-    (*func)(reader.LastRecordOffset(), record, dst);\n-  }\n-  delete file;\n-  return Status::OK();\n-}\n-\n-// Called on every item found in a WriteBatch.\n-class WriteBatchItemPrinter : public WriteBatch::Handler {\n- public:\n-  WritableFile* dst_;\n-  virtual void Put(const Slice& key, const Slice& value) {\n-    std::string r = \"  put '\";\n-    AppendEscapedStringTo(&r, key);\n-    r += \"' '\";\n-    AppendEscapedStringTo(&r, value);\n-    r += \"'\\n\";\n-    dst_->Append(r);\n-  }\n-  virtual void Delete(const Slice& key) {\n-    std::string r = \"  del '\";\n-    AppendEscapedStringTo(&r, key);\n-    r += \"'\\n\";\n-    dst_->Append(r);\n-  }\n-};\n-\n-\n-// Called on every log record (each one of which is a WriteBatch)\n-// found in a kLogFile.\n-static void WriteBatchPrinter(uint64_t pos, Slice record, WritableFile* dst) {\n-  std::string r = \"--- offset \";\n-  AppendNumberTo(&r, pos);\n-  r += \"; \";\n-  if (record.size() < 12) {\n-    r += \"log record length \";\n-    AppendNumberTo(&r, record.size());\n-    r += \" is too small\\n\";\n-    dst->Append(r);\n-    return;\n-  }\n-  WriteBatch batch;\n-  WriteBatchInternal::SetContents(&batch, record);\n-  r += \"sequence \";\n-  AppendNumberTo(&r, WriteBatchInternal::Sequence(&batch));\n-  r.push_back('\\n');\n-  dst->Append(r);\n-  WriteBatchItemPrinter batch_item_printer;\n-  batch_item_printer.dst_ = dst;\n-  Status s = batch.Iterate(&batch_item_printer);\n-  if (!s.ok()) {\n-    dst->Append(\"  error: \" + s.ToString() + \"\\n\");\n-  }\n-}\n-\n-Status DumpLog(Env* env, const std::string& fname, WritableFile* dst) {\n-  return PrintLogContents(env, fname, WriteBatchPrinter, dst);\n-}\n-\n-// Called on every log record (each one of which is a WriteBatch)\n-// found in a kDescriptorFile.\n-static void VersionEditPrinter(uint64_t pos, Slice record, WritableFile* dst) {\n-  std::string r = \"--- offset \";\n-  AppendNumberTo(&r, pos);\n-  r += \"; \";\n-  VersionEdit edit;\n-  Status s = edit.DecodeFrom(record);\n-  if (!s.ok()) {\n-    r += s.ToString();\n-    r.push_back('\\n');\n-  } else {\n-    r += edit.DebugString();\n-  }\n-  dst->Append(r);\n-}\n-\n-Status DumpDescriptor(Env* env, const std::string& fname, WritableFile* dst) {\n-  return PrintLogContents(env, fname, VersionEditPrinter, dst);\n-}\n-\n-Status DumpTable(Env* env, const std::string& fname, WritableFile* dst) {\n-  uint64_t file_size;\n-  RandomAccessFile* file = NULL;\n-  Table* table = NULL;\n-  Status s = env->GetFileSize(fname, &file_size);\n-  if (s.ok()) {\n-    s = env->NewRandomAccessFile(fname, &file);\n-  }\n-  if (s.ok()) {\n-    // We use the default comparator, which may or may not match the\n-    // comparator used in this database. However this should not cause\n-    // problems since we only use Table operations that do not require\n-    // any comparisons.  In particular, we do not call Seek or Prev.\n-    s = Table::Open(Options(), file, file_size, &table);\n-  }\n-  if (!s.ok()) {\n-    delete table;\n-    delete file;\n-    return s;\n-  }\n-\n-  ReadOptions ro;\n-  ro.fill_cache = false;\n-  Iterator* iter = table->NewIterator(ro);\n-  std::string r;\n-  for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-    r.clear();\n-    ParsedInternalKey key;\n-    if (!ParseInternalKey(iter->key(), &key)) {\n-      r = \"badkey '\";\n-      AppendEscapedStringTo(&r, iter->key());\n-      r += \"' => '\";\n-      AppendEscapedStringTo(&r, iter->value());\n-      r += \"'\\n\";\n-      dst->Append(r);\n-    } else {\n-      r = \"'\";\n-      AppendEscapedStringTo(&r, key.user_key);\n-      r += \"' @ \";\n-      AppendNumberTo(&r, key.sequence);\n-      r += \" : \";\n-      if (key.type == kTypeDeletion) {\n-        r += \"del\";\n-      } else if (key.type == kTypeValue) {\n-        r += \"val\";\n-      } else {\n-        AppendNumberTo(&r, key.type);\n-      }\n-      r += \" => '\";\n-      AppendEscapedStringTo(&r, iter->value());\n-      r += \"'\\n\";\n-      dst->Append(r);\n-    }\n-  }\n-  s = iter->status();\n-  if (!s.ok()) {\n-    dst->Append(\"iterator error: \" + s.ToString() + \"\\n\");\n-  }\n-\n-  delete iter;\n-  delete table;\n-  delete file;\n-  return Status::OK();\n-}\n-\n-}  // namespace\n-\n-Status DumpFile(Env* env, const std::string& fname, WritableFile* dst) {\n-  FileType ftype;\n-  if (!GuessType(fname, &ftype)) {\n-    return Status::InvalidArgument(fname + \": unknown file type\");\n-  }\n-  switch (ftype) {\n-    case kLogFile:         return DumpLog(env, fname, dst);\n-    case kDescriptorFile:  return DumpDescriptor(env, fname, dst);\n-    case kTableFile:       return DumpTable(env, fname, dst);\n-    default:\n-      break;\n-  }\n-  return Status::InvalidArgument(fname + \": not a dump-able file type\");\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "875dfe81eeab39656a57deade1589895a6d87cd7",
        "filename": "src/leveldb/db/fault_injection_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 554,
        "changes": 554,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/fault_injection_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/fault_injection_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/fault_injection_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,554 +0,0 @@\n-// Copyright 2014 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-// This test uses a custom Env to keep track of the state of a filesystem as of\n-// the last \"sync\". It then checks for data loss errors by purposely dropping\n-// file data (or entire files) not protected by a \"sync\".\n-\n-#include \"leveldb/db.h\"\n-\n-#include <map>\n-#include <set>\n-#include \"db/db_impl.h\"\n-#include \"db/filename.h\"\n-#include \"db/log_format.h\"\n-#include \"db/version_set.h\"\n-#include \"leveldb/cache.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/table.h\"\n-#include \"leveldb/write_batch.h\"\n-#include \"util/logging.h\"\n-#include \"util/mutexlock.h\"\n-#include \"util/testharness.h\"\n-#include \"util/testutil.h\"\n-\n-namespace leveldb {\n-\n-static const int kValueSize = 1000;\n-static const int kMaxNumValues = 2000;\n-static const size_t kNumIterations = 3;\n-\n-class FaultInjectionTestEnv;\n-\n-namespace {\n-\n-// Assume a filename, and not a directory name like \"/foo/bar/\"\n-static std::string GetDirName(const std::string filename) {\n-  size_t found = filename.find_last_of(\"/\\\\\");\n-  if (found == std::string::npos) {\n-    return \"\";\n-  } else {\n-    return filename.substr(0, found);\n-  }\n-}\n-\n-Status SyncDir(const std::string& dir) {\n-  // As this is a test it isn't required to *actually* sync this directory.\n-  return Status::OK();\n-}\n-\n-// A basic file truncation function suitable for this test.\n-Status Truncate(const std::string& filename, uint64_t length) {\n-  leveldb::Env* env = leveldb::Env::Default();\n-\n-  SequentialFile* orig_file;\n-  Status s = env->NewSequentialFile(filename, &orig_file);\n-  if (!s.ok())\n-    return s;\n-\n-  char* scratch = new char[length];\n-  leveldb::Slice result;\n-  s = orig_file->Read(length, &result, scratch);\n-  delete orig_file;\n-  if (s.ok()) {\n-    std::string tmp_name = GetDirName(filename) + \"/truncate.tmp\";\n-    WritableFile* tmp_file;\n-    s = env->NewWritableFile(tmp_name, &tmp_file);\n-    if (s.ok()) {\n-      s = tmp_file->Append(result);\n-      delete tmp_file;\n-      if (s.ok()) {\n-        s = env->RenameFile(tmp_name, filename);\n-      } else {\n-        env->DeleteFile(tmp_name);\n-      }\n-    }\n-  }\n-\n-  delete[] scratch;\n-\n-  return s;\n-}\n-\n-struct FileState {\n-  std::string filename_;\n-  ssize_t pos_;\n-  ssize_t pos_at_last_sync_;\n-  ssize_t pos_at_last_flush_;\n-\n-  FileState(const std::string& filename)\n-      : filename_(filename),\n-        pos_(-1),\n-        pos_at_last_sync_(-1),\n-        pos_at_last_flush_(-1) { }\n-\n-  FileState() : pos_(-1), pos_at_last_sync_(-1), pos_at_last_flush_(-1) {}\n-\n-  bool IsFullySynced() const { return pos_ <= 0 || pos_ == pos_at_last_sync_; }\n-\n-  Status DropUnsyncedData() const;\n-};\n-\n-}  // anonymous namespace\n-\n-// A wrapper around WritableFile which informs another Env whenever this file\n-// is written to or sync'ed.\n-class TestWritableFile : public WritableFile {\n- public:\n-  TestWritableFile(const FileState& state,\n-                   WritableFile* f,\n-                   FaultInjectionTestEnv* env);\n-  virtual ~TestWritableFile();\n-  virtual Status Append(const Slice& data);\n-  virtual Status Close();\n-  virtual Status Flush();\n-  virtual Status Sync();\n-\n- private:\n-  FileState state_;\n-  WritableFile* target_;\n-  bool writable_file_opened_;\n-  FaultInjectionTestEnv* env_;\n-\n-  Status SyncParent();\n-};\n-\n-class FaultInjectionTestEnv : public EnvWrapper {\n- public:\n-  FaultInjectionTestEnv() : EnvWrapper(Env::Default()), filesystem_active_(true) {}\n-  virtual ~FaultInjectionTestEnv() { }\n-  virtual Status NewWritableFile(const std::string& fname,\n-                                 WritableFile** result);\n-  virtual Status NewAppendableFile(const std::string& fname,\n-                                   WritableFile** result);\n-  virtual Status DeleteFile(const std::string& f);\n-  virtual Status RenameFile(const std::string& s, const std::string& t);\n-\n-  void WritableFileClosed(const FileState& state);\n-  Status DropUnsyncedFileData();\n-  Status DeleteFilesCreatedAfterLastDirSync();\n-  void DirWasSynced();\n-  bool IsFileCreatedSinceLastDirSync(const std::string& filename);\n-  void ResetState();\n-  void UntrackFile(const std::string& f);\n-  // Setting the filesystem to inactive is the test equivalent to simulating a\n-  // system reset. Setting to inactive will freeze our saved filesystem state so\n-  // that it will stop being recorded. It can then be reset back to the state at\n-  // the time of the reset.\n-  bool IsFilesystemActive() const { return filesystem_active_; }\n-  void SetFilesystemActive(bool active) { filesystem_active_ = active; }\n-\n- private:\n-  port::Mutex mutex_;\n-  std::map<std::string, FileState> db_file_state_;\n-  std::set<std::string> new_files_since_last_dir_sync_;\n-  bool filesystem_active_;  // Record flushes, syncs, writes\n-};\n-\n-TestWritableFile::TestWritableFile(const FileState& state,\n-                                   WritableFile* f,\n-                                   FaultInjectionTestEnv* env)\n-    : state_(state),\n-      target_(f),\n-      writable_file_opened_(true),\n-      env_(env) {\n-  assert(f != NULL);\n-}\n-\n-TestWritableFile::~TestWritableFile() {\n-  if (writable_file_opened_) {\n-    Close();\n-  }\n-  delete target_;\n-}\n-\n-Status TestWritableFile::Append(const Slice& data) {\n-  Status s = target_->Append(data);\n-  if (s.ok() && env_->IsFilesystemActive()) {\n-    state_.pos_ += data.size();\n-  }\n-  return s;\n-}\n-\n-Status TestWritableFile::Close() {\n-  writable_file_opened_ = false;\n-  Status s = target_->Close();\n-  if (s.ok()) {\n-    env_->WritableFileClosed(state_);\n-  }\n-  return s;\n-}\n-\n-Status TestWritableFile::Flush() {\n-  Status s = target_->Flush();\n-  if (s.ok() && env_->IsFilesystemActive()) {\n-    state_.pos_at_last_flush_ = state_.pos_;\n-  }\n-  return s;\n-}\n-\n-Status TestWritableFile::SyncParent() {\n-  Status s = SyncDir(GetDirName(state_.filename_));\n-  if (s.ok()) {\n-    env_->DirWasSynced();\n-  }\n-  return s;\n-}\n-\n-Status TestWritableFile::Sync() {\n-  if (!env_->IsFilesystemActive()) {\n-    return Status::OK();\n-  }\n-  // Ensure new files referred to by the manifest are in the filesystem.\n-  Status s = target_->Sync();\n-  if (s.ok()) {\n-    state_.pos_at_last_sync_ = state_.pos_;\n-  }\n-  if (env_->IsFileCreatedSinceLastDirSync(state_.filename_)) {\n-    Status ps = SyncParent();\n-    if (s.ok() && !ps.ok()) {\n-      s = ps;\n-    }\n-  }\n-  return s;\n-}\n-\n-Status FaultInjectionTestEnv::NewWritableFile(const std::string& fname,\n-                                              WritableFile** result) {\n-  WritableFile* actual_writable_file;\n-  Status s = target()->NewWritableFile(fname, &actual_writable_file);\n-  if (s.ok()) {\n-    FileState state(fname);\n-    state.pos_ = 0;\n-    *result = new TestWritableFile(state, actual_writable_file, this);\n-    // NewWritableFile doesn't append to files, so if the same file is\n-    // opened again then it will be truncated - so forget our saved\n-    // state.\n-    UntrackFile(fname);\n-    MutexLock l(&mutex_);\n-    new_files_since_last_dir_sync_.insert(fname);\n-  }\n-  return s;\n-}\n-\n-Status FaultInjectionTestEnv::NewAppendableFile(const std::string& fname,\n-                                                WritableFile** result) {\n-  WritableFile* actual_writable_file;\n-  Status s = target()->NewAppendableFile(fname, &actual_writable_file);\n-  if (s.ok()) {\n-    FileState state(fname);\n-    state.pos_ = 0;\n-    {\n-      MutexLock l(&mutex_);\n-      if (db_file_state_.count(fname) == 0) {\n-        new_files_since_last_dir_sync_.insert(fname);\n-      } else {\n-        state = db_file_state_[fname];\n-      }\n-    }\n-    *result = new TestWritableFile(state, actual_writable_file, this);\n-  }\n-  return s;\n-}\n-\n-Status FaultInjectionTestEnv::DropUnsyncedFileData() {\n-  Status s;\n-  MutexLock l(&mutex_);\n-  for (std::map<std::string, FileState>::const_iterator it =\n-           db_file_state_.begin();\n-       s.ok() && it != db_file_state_.end(); ++it) {\n-    const FileState& state = it->second;\n-    if (!state.IsFullySynced()) {\n-      s = state.DropUnsyncedData();\n-    }\n-  }\n-  return s;\n-}\n-\n-void FaultInjectionTestEnv::DirWasSynced() {\n-  MutexLock l(&mutex_);\n-  new_files_since_last_dir_sync_.clear();\n-}\n-\n-bool FaultInjectionTestEnv::IsFileCreatedSinceLastDirSync(\n-    const std::string& filename) {\n-  MutexLock l(&mutex_);\n-  return new_files_since_last_dir_sync_.find(filename) !=\n-         new_files_since_last_dir_sync_.end();\n-}\n-\n-void FaultInjectionTestEnv::UntrackFile(const std::string& f) {\n-  MutexLock l(&mutex_);\n-  db_file_state_.erase(f);\n-  new_files_since_last_dir_sync_.erase(f);\n-}\n-\n-Status FaultInjectionTestEnv::DeleteFile(const std::string& f) {\n-  Status s = EnvWrapper::DeleteFile(f);\n-  ASSERT_OK(s);\n-  if (s.ok()) {\n-    UntrackFile(f);\n-  }\n-  return s;\n-}\n-\n-Status FaultInjectionTestEnv::RenameFile(const std::string& s,\n-                                         const std::string& t) {\n-  Status ret = EnvWrapper::RenameFile(s, t);\n-\n-  if (ret.ok()) {\n-    MutexLock l(&mutex_);\n-    if (db_file_state_.find(s) != db_file_state_.end()) {\n-      db_file_state_[t] = db_file_state_[s];\n-      db_file_state_.erase(s);\n-    }\n-\n-    if (new_files_since_last_dir_sync_.erase(s) != 0) {\n-      assert(new_files_since_last_dir_sync_.find(t) ==\n-             new_files_since_last_dir_sync_.end());\n-      new_files_since_last_dir_sync_.insert(t);\n-    }\n-  }\n-\n-  return ret;\n-}\n-\n-void FaultInjectionTestEnv::ResetState() {\n-  // Since we are not destroying the database, the existing files\n-  // should keep their recorded synced/flushed state. Therefore\n-  // we do not reset db_file_state_ and new_files_since_last_dir_sync_.\n-  MutexLock l(&mutex_);\n-  SetFilesystemActive(true);\n-}\n-\n-Status FaultInjectionTestEnv::DeleteFilesCreatedAfterLastDirSync() {\n-  // Because DeleteFile access this container make a copy to avoid deadlock\n-  mutex_.Lock();\n-  std::set<std::string> new_files(new_files_since_last_dir_sync_.begin(),\n-                                  new_files_since_last_dir_sync_.end());\n-  mutex_.Unlock();\n-  Status s;\n-  std::set<std::string>::const_iterator it;\n-  for (it = new_files.begin(); s.ok() && it != new_files.end(); ++it) {\n-    s = DeleteFile(*it);\n-  }\n-  return s;\n-}\n-\n-void FaultInjectionTestEnv::WritableFileClosed(const FileState& state) {\n-  MutexLock l(&mutex_);\n-  db_file_state_[state.filename_] = state;\n-}\n-\n-Status FileState::DropUnsyncedData() const {\n-  ssize_t sync_pos = pos_at_last_sync_ == -1 ? 0 : pos_at_last_sync_;\n-  return Truncate(filename_, sync_pos);\n-}\n-\n-class FaultInjectionTest {\n- public:\n-  enum ExpectedVerifResult { VAL_EXPECT_NO_ERROR, VAL_EXPECT_ERROR };\n-  enum ResetMethod { RESET_DROP_UNSYNCED_DATA, RESET_DELETE_UNSYNCED_FILES };\n-\n-  FaultInjectionTestEnv* env_;\n-  std::string dbname_;\n-  Cache* tiny_cache_;\n-  Options options_;\n-  DB* db_;\n-\n-  FaultInjectionTest()\n-      : env_(new FaultInjectionTestEnv),\n-        tiny_cache_(NewLRUCache(100)),\n-        db_(NULL) {\n-    dbname_ = test::TmpDir() + \"/fault_test\";\n-    DestroyDB(dbname_, Options());  // Destroy any db from earlier run\n-    options_.reuse_logs = true;\n-    options_.env = env_;\n-    options_.paranoid_checks = true;\n-    options_.block_cache = tiny_cache_;\n-    options_.create_if_missing = true;\n-  }\n-\n-  ~FaultInjectionTest() {\n-    CloseDB();\n-    DestroyDB(dbname_, Options());\n-    delete tiny_cache_;\n-    delete env_;\n-  }\n-\n-  void ReuseLogs(bool reuse) {\n-    options_.reuse_logs = reuse;\n-  }\n-\n-  void Build(int start_idx, int num_vals) {\n-    std::string key_space, value_space;\n-    WriteBatch batch;\n-    for (int i = start_idx; i < start_idx + num_vals; i++) {\n-      Slice key = Key(i, &key_space);\n-      batch.Clear();\n-      batch.Put(key, Value(i, &value_space));\n-      WriteOptions options;\n-      ASSERT_OK(db_->Write(options, &batch));\n-    }\n-  }\n-\n-  Status ReadValue(int i, std::string* val) const {\n-    std::string key_space, value_space;\n-    Slice key = Key(i, &key_space);\n-    Value(i, &value_space);\n-    ReadOptions options;\n-    return db_->Get(options, key, val);\n-  }\n-\n-  Status Verify(int start_idx, int num_vals,\n-                ExpectedVerifResult expected) const {\n-    std::string val;\n-    std::string value_space;\n-    Status s;\n-    for (int i = start_idx; i < start_idx + num_vals && s.ok(); i++) {\n-      Value(i, &value_space);\n-      s = ReadValue(i, &val);\n-      if (expected == VAL_EXPECT_NO_ERROR) {\n-        if (s.ok()) {\n-          ASSERT_EQ(value_space, val);\n-        }\n-      } else if (s.ok()) {\n-        fprintf(stderr, \"Expected an error at %d, but was OK\\n\", i);\n-        s = Status::IOError(dbname_, \"Expected value error:\");\n-      } else {\n-        s = Status::OK();  // An expected error\n-      }\n-    }\n-    return s;\n-  }\n-\n-  // Return the ith key\n-  Slice Key(int i, std::string* storage) const {\n-    char buf[100];\n-    snprintf(buf, sizeof(buf), \"%016d\", i);\n-    storage->assign(buf, strlen(buf));\n-    return Slice(*storage);\n-  }\n-\n-  // Return the value to associate with the specified key\n-  Slice Value(int k, std::string* storage) const {\n-    Random r(k);\n-    return test::RandomString(&r, kValueSize, storage);\n-  }\n-\n-  Status OpenDB() {\n-    delete db_;\n-    db_ = NULL;\n-    env_->ResetState();\n-    return DB::Open(options_, dbname_, &db_);\n-  }\n-\n-  void CloseDB() {\n-    delete db_;\n-    db_ = NULL;\n-  }\n-\n-  void DeleteAllData() {\n-    Iterator* iter = db_->NewIterator(ReadOptions());\n-    WriteOptions options;\n-    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-      ASSERT_OK(db_->Delete(WriteOptions(), iter->key()));\n-    }\n-\n-    delete iter;\n-  }\n-\n-  void ResetDBState(ResetMethod reset_method) {\n-    switch (reset_method) {\n-      case RESET_DROP_UNSYNCED_DATA:\n-        ASSERT_OK(env_->DropUnsyncedFileData());\n-        break;\n-      case RESET_DELETE_UNSYNCED_FILES:\n-        ASSERT_OK(env_->DeleteFilesCreatedAfterLastDirSync());\n-        break;\n-      default:\n-        assert(false);\n-    }\n-  }\n-\n-  void PartialCompactTestPreFault(int num_pre_sync, int num_post_sync) {\n-    DeleteAllData();\n-    Build(0, num_pre_sync);\n-    db_->CompactRange(NULL, NULL);\n-    Build(num_pre_sync, num_post_sync);\n-  }\n-\n-  void PartialCompactTestReopenWithFault(ResetMethod reset_method,\n-                                         int num_pre_sync,\n-                                         int num_post_sync) {\n-    env_->SetFilesystemActive(false);\n-    CloseDB();\n-    ResetDBState(reset_method);\n-    ASSERT_OK(OpenDB());\n-    ASSERT_OK(Verify(0, num_pre_sync, FaultInjectionTest::VAL_EXPECT_NO_ERROR));\n-    ASSERT_OK(Verify(num_pre_sync, num_post_sync, FaultInjectionTest::VAL_EXPECT_ERROR));\n-  }\n-\n-  void NoWriteTestPreFault() {\n-  }\n-\n-  void NoWriteTestReopenWithFault(ResetMethod reset_method) {\n-    CloseDB();\n-    ResetDBState(reset_method);\n-    ASSERT_OK(OpenDB());\n-  }\n-\n-  void DoTest() {\n-    Random rnd(0);\n-    ASSERT_OK(OpenDB());\n-    for (size_t idx = 0; idx < kNumIterations; idx++) {\n-      int num_pre_sync = rnd.Uniform(kMaxNumValues);\n-      int num_post_sync = rnd.Uniform(kMaxNumValues);\n-\n-      PartialCompactTestPreFault(num_pre_sync, num_post_sync);\n-      PartialCompactTestReopenWithFault(RESET_DROP_UNSYNCED_DATA,\n-                                        num_pre_sync,\n-                                        num_post_sync);\n-\n-      NoWriteTestPreFault();\n-      NoWriteTestReopenWithFault(RESET_DROP_UNSYNCED_DATA);\n-\n-      PartialCompactTestPreFault(num_pre_sync, num_post_sync);\n-      // No new files created so we expect all values since no files will be\n-      // dropped.\n-      PartialCompactTestReopenWithFault(RESET_DELETE_UNSYNCED_FILES,\n-                                        num_pre_sync + num_post_sync,\n-                                        0);\n-\n-      NoWriteTestPreFault();\n-      NoWriteTestReopenWithFault(RESET_DELETE_UNSYNCED_FILES);\n-    }\n-  }\n-};\n-\n-TEST(FaultInjectionTest, FaultTestNoLogReuse) {\n-  ReuseLogs(false);\n-  DoTest();\n-}\n-\n-TEST(FaultInjectionTest, FaultTestWithLogReuse) {\n-  ReuseLogs(true);\n-  DoTest();\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "da32946d9924619ebc936e0dc3131907a323a847",
        "filename": "src/leveldb/db/filename.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 144,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/filename.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/filename.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,144 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <ctype.h>\n-#include <stdio.h>\n-#include \"db/filename.h\"\n-#include \"db/dbformat.h\"\n-#include \"leveldb/env.h\"\n-#include \"util/logging.h\"\n-\n-namespace leveldb {\n-\n-// A utility routine: write \"data\" to the named file and Sync() it.\n-extern Status WriteStringToFileSync(Env* env, const Slice& data,\n-                                    const std::string& fname);\n-\n-static std::string MakeFileName(const std::string& name, uint64_t number,\n-                                const char* suffix) {\n-  char buf[100];\n-  snprintf(buf, sizeof(buf), \"/%06llu.%s\",\n-           static_cast<unsigned long long>(number),\n-           suffix);\n-  return name + buf;\n-}\n-\n-std::string LogFileName(const std::string& name, uint64_t number) {\n-  assert(number > 0);\n-  return MakeFileName(name, number, \"log\");\n-}\n-\n-std::string TableFileName(const std::string& name, uint64_t number) {\n-  assert(number > 0);\n-  return MakeFileName(name, number, \"ldb\");\n-}\n-\n-std::string SSTTableFileName(const std::string& name, uint64_t number) {\n-  assert(number > 0);\n-  return MakeFileName(name, number, \"sst\");\n-}\n-\n-std::string DescriptorFileName(const std::string& dbname, uint64_t number) {\n-  assert(number > 0);\n-  char buf[100];\n-  snprintf(buf, sizeof(buf), \"/MANIFEST-%06llu\",\n-           static_cast<unsigned long long>(number));\n-  return dbname + buf;\n-}\n-\n-std::string CurrentFileName(const std::string& dbname) {\n-  return dbname + \"/CURRENT\";\n-}\n-\n-std::string LockFileName(const std::string& dbname) {\n-  return dbname + \"/LOCK\";\n-}\n-\n-std::string TempFileName(const std::string& dbname, uint64_t number) {\n-  assert(number > 0);\n-  return MakeFileName(dbname, number, \"dbtmp\");\n-}\n-\n-std::string InfoLogFileName(const std::string& dbname) {\n-  return dbname + \"/LOG\";\n-}\n-\n-// Return the name of the old info log file for \"dbname\".\n-std::string OldInfoLogFileName(const std::string& dbname) {\n-  return dbname + \"/LOG.old\";\n-}\n-\n-\n-// Owned filenames have the form:\n-//    dbname/CURRENT\n-//    dbname/LOCK\n-//    dbname/LOG\n-//    dbname/LOG.old\n-//    dbname/MANIFEST-[0-9]+\n-//    dbname/[0-9]+.(log|sst|ldb)\n-bool ParseFileName(const std::string& fname,\n-                   uint64_t* number,\n-                   FileType* type) {\n-  Slice rest(fname);\n-  if (rest == \"CURRENT\") {\n-    *number = 0;\n-    *type = kCurrentFile;\n-  } else if (rest == \"LOCK\") {\n-    *number = 0;\n-    *type = kDBLockFile;\n-  } else if (rest == \"LOG\" || rest == \"LOG.old\") {\n-    *number = 0;\n-    *type = kInfoLogFile;\n-  } else if (rest.starts_with(\"MANIFEST-\")) {\n-    rest.remove_prefix(strlen(\"MANIFEST-\"));\n-    uint64_t num;\n-    if (!ConsumeDecimalNumber(&rest, &num)) {\n-      return false;\n-    }\n-    if (!rest.empty()) {\n-      return false;\n-    }\n-    *type = kDescriptorFile;\n-    *number = num;\n-  } else {\n-    // Avoid strtoull() to keep filename format independent of the\n-    // current locale\n-    uint64_t num;\n-    if (!ConsumeDecimalNumber(&rest, &num)) {\n-      return false;\n-    }\n-    Slice suffix = rest;\n-    if (suffix == Slice(\".log\")) {\n-      *type = kLogFile;\n-    } else if (suffix == Slice(\".sst\") || suffix == Slice(\".ldb\")) {\n-      *type = kTableFile;\n-    } else if (suffix == Slice(\".dbtmp\")) {\n-      *type = kTempFile;\n-    } else {\n-      return false;\n-    }\n-    *number = num;\n-  }\n-  return true;\n-}\n-\n-Status SetCurrentFile(Env* env, const std::string& dbname,\n-                      uint64_t descriptor_number) {\n-  // Remove leading \"dbname/\" and add newline to manifest file name\n-  std::string manifest = DescriptorFileName(dbname, descriptor_number);\n-  Slice contents = manifest;\n-  assert(contents.starts_with(dbname + \"/\"));\n-  contents.remove_prefix(dbname.size() + 1);\n-  std::string tmp = TempFileName(dbname, descriptor_number);\n-  Status s = WriteStringToFileSync(env, contents.ToString() + \"\\n\", tmp);\n-  if (s.ok()) {\n-    s = env->RenameFile(tmp, CurrentFileName(dbname));\n-  }\n-  if (!s.ok()) {\n-    env->DeleteFile(tmp);\n-  }\n-  return s;\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "87a752605d14abc2a0e3b715d412bf36ce2cdd86",
        "filename": "src/leveldb/db/filename.h",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/filename.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/filename.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,85 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// File names used by DB code\n-\n-#ifndef STORAGE_LEVELDB_DB_FILENAME_H_\n-#define STORAGE_LEVELDB_DB_FILENAME_H_\n-\n-#include <stdint.h>\n-#include <string>\n-#include \"leveldb/slice.h\"\n-#include \"leveldb/status.h\"\n-#include \"port/port.h\"\n-\n-namespace leveldb {\n-\n-class Env;\n-\n-enum FileType {\n-  kLogFile,\n-  kDBLockFile,\n-  kTableFile,\n-  kDescriptorFile,\n-  kCurrentFile,\n-  kTempFile,\n-  kInfoLogFile  // Either the current one, or an old one\n-};\n-\n-// Return the name of the log file with the specified number\n-// in the db named by \"dbname\".  The result will be prefixed with\n-// \"dbname\".\n-extern std::string LogFileName(const std::string& dbname, uint64_t number);\n-\n-// Return the name of the sstable with the specified number\n-// in the db named by \"dbname\".  The result will be prefixed with\n-// \"dbname\".\n-extern std::string TableFileName(const std::string& dbname, uint64_t number);\n-\n-// Return the legacy file name for an sstable with the specified number\n-// in the db named by \"dbname\". The result will be prefixed with\n-// \"dbname\".\n-extern std::string SSTTableFileName(const std::string& dbname, uint64_t number);\n-\n-// Return the name of the descriptor file for the db named by\n-// \"dbname\" and the specified incarnation number.  The result will be\n-// prefixed with \"dbname\".\n-extern std::string DescriptorFileName(const std::string& dbname,\n-                                      uint64_t number);\n-\n-// Return the name of the current file.  This file contains the name\n-// of the current manifest file.  The result will be prefixed with\n-// \"dbname\".\n-extern std::string CurrentFileName(const std::string& dbname);\n-\n-// Return the name of the lock file for the db named by\n-// \"dbname\".  The result will be prefixed with \"dbname\".\n-extern std::string LockFileName(const std::string& dbname);\n-\n-// Return the name of a temporary file owned by the db named \"dbname\".\n-// The result will be prefixed with \"dbname\".\n-extern std::string TempFileName(const std::string& dbname, uint64_t number);\n-\n-// Return the name of the info log file for \"dbname\".\n-extern std::string InfoLogFileName(const std::string& dbname);\n-\n-// Return the name of the old info log file for \"dbname\".\n-extern std::string OldInfoLogFileName(const std::string& dbname);\n-\n-// If filename is a leveldb file, store the type of the file in *type.\n-// The number encoded in the filename is stored in *number.  If the\n-// filename was successfully parsed, returns true.  Else return false.\n-extern bool ParseFileName(const std::string& filename,\n-                          uint64_t* number,\n-                          FileType* type);\n-\n-// Make the CURRENT file point to the descriptor file with the\n-// specified number.\n-extern Status SetCurrentFile(Env* env, const std::string& dbname,\n-                             uint64_t descriptor_number);\n-\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_FILENAME_H_"
      },
      {
        "sha": "a32556deaff78326e68e65b848b9ec5077067a4a",
        "filename": "src/leveldb/db/filename_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 123,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/filename_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/filename_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,123 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/filename.h\"\n-\n-#include \"db/dbformat.h\"\n-#include \"port/port.h\"\n-#include \"util/logging.h\"\n-#include \"util/testharness.h\"\n-\n-namespace leveldb {\n-\n-class FileNameTest { };\n-\n-TEST(FileNameTest, Parse) {\n-  Slice db;\n-  FileType type;\n-  uint64_t number;\n-\n-  // Successful parses\n-  static struct {\n-    const char* fname;\n-    uint64_t number;\n-    FileType type;\n-  } cases[] = {\n-    { \"100.log\",            100,   kLogFile },\n-    { \"0.log\",              0,     kLogFile },\n-    { \"0.sst\",              0,     kTableFile },\n-    { \"0.ldb\",              0,     kTableFile },\n-    { \"CURRENT\",            0,     kCurrentFile },\n-    { \"LOCK\",               0,     kDBLockFile },\n-    { \"MANIFEST-2\",         2,     kDescriptorFile },\n-    { \"MANIFEST-7\",         7,     kDescriptorFile },\n-    { \"LOG\",                0,     kInfoLogFile },\n-    { \"LOG.old\",            0,     kInfoLogFile },\n-    { \"18446744073709551615.log\", 18446744073709551615ull, kLogFile },\n-  };\n-  for (int i = 0; i < sizeof(cases) / sizeof(cases[0]); i++) {\n-    std::string f = cases[i].fname;\n-    ASSERT_TRUE(ParseFileName(f, &number, &type)) << f;\n-    ASSERT_EQ(cases[i].type, type) << f;\n-    ASSERT_EQ(cases[i].number, number) << f;\n-  }\n-\n-  // Errors\n-  static const char* errors[] = {\n-    \"\",\n-    \"foo\",\n-    \"foo-dx-100.log\",\n-    \".log\",\n-    \"\",\n-    \"manifest\",\n-    \"CURREN\",\n-    \"CURRENTX\",\n-    \"MANIFES\",\n-    \"MANIFEST\",\n-    \"MANIFEST-\",\n-    \"XMANIFEST-3\",\n-    \"MANIFEST-3x\",\n-    \"LOC\",\n-    \"LOCKx\",\n-    \"LO\",\n-    \"LOGx\",\n-    \"18446744073709551616.log\",\n-    \"184467440737095516150.log\",\n-    \"100\",\n-    \"100.\",\n-    \"100.lop\"\n-  };\n-  for (int i = 0; i < sizeof(errors) / sizeof(errors[0]); i++) {\n-    std::string f = errors[i];\n-    ASSERT_TRUE(!ParseFileName(f, &number, &type)) << f;\n-  }\n-}\n-\n-TEST(FileNameTest, Construction) {\n-  uint64_t number;\n-  FileType type;\n-  std::string fname;\n-\n-  fname = CurrentFileName(\"foo\");\n-  ASSERT_EQ(\"foo/\", std::string(fname.data(), 4));\n-  ASSERT_TRUE(ParseFileName(fname.c_str() + 4, &number, &type));\n-  ASSERT_EQ(0, number);\n-  ASSERT_EQ(kCurrentFile, type);\n-\n-  fname = LockFileName(\"foo\");\n-  ASSERT_EQ(\"foo/\", std::string(fname.data(), 4));\n-  ASSERT_TRUE(ParseFileName(fname.c_str() + 4, &number, &type));\n-  ASSERT_EQ(0, number);\n-  ASSERT_EQ(kDBLockFile, type);\n-\n-  fname = LogFileName(\"foo\", 192);\n-  ASSERT_EQ(\"foo/\", std::string(fname.data(), 4));\n-  ASSERT_TRUE(ParseFileName(fname.c_str() + 4, &number, &type));\n-  ASSERT_EQ(192, number);\n-  ASSERT_EQ(kLogFile, type);\n-\n-  fname = TableFileName(\"bar\", 200);\n-  ASSERT_EQ(\"bar/\", std::string(fname.data(), 4));\n-  ASSERT_TRUE(ParseFileName(fname.c_str() + 4, &number, &type));\n-  ASSERT_EQ(200, number);\n-  ASSERT_EQ(kTableFile, type);\n-\n-  fname = DescriptorFileName(\"bar\", 100);\n-  ASSERT_EQ(\"bar/\", std::string(fname.data(), 4));\n-  ASSERT_TRUE(ParseFileName(fname.c_str() + 4, &number, &type));\n-  ASSERT_EQ(100, number);\n-  ASSERT_EQ(kDescriptorFile, type);\n-\n-  fname = TempFileName(\"tmp\", 999);\n-  ASSERT_EQ(\"tmp/\", std::string(fname.data(), 4));\n-  ASSERT_TRUE(ParseFileName(fname.c_str() + 4, &number, &type));\n-  ASSERT_EQ(999, number);\n-  ASSERT_EQ(kTempFile, type);\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "9f4b7dd70c245302e9841e6a407e89659992284f",
        "filename": "src/leveldb/db/leveldbutil.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 64,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/leveldbutil.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/leveldbutil.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/leveldbutil.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,64 +0,0 @@\n-// Copyright (c) 2012 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <stdio.h>\n-#include \"leveldb/dumpfile.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/status.h\"\n-\n-namespace leveldb {\n-namespace {\n-\n-class StdoutPrinter : public WritableFile {\n- public:\n-  virtual Status Append(const Slice& data) {\n-    fwrite(data.data(), 1, data.size(), stdout);\n-    return Status::OK();\n-  }\n-  virtual Status Close() { return Status::OK(); }\n-  virtual Status Flush() { return Status::OK(); }\n-  virtual Status Sync() { return Status::OK(); }\n-};\n-\n-bool HandleDumpCommand(Env* env, char** files, int num) {\n-  StdoutPrinter printer;\n-  bool ok = true;\n-  for (int i = 0; i < num; i++) {\n-    Status s = DumpFile(env, files[i], &printer);\n-    if (!s.ok()) {\n-      fprintf(stderr, \"%s\\n\", s.ToString().c_str());\n-      ok = false;\n-    }\n-  }\n-  return ok;\n-}\n-\n-}  // namespace\n-}  // namespace leveldb\n-\n-static void Usage() {\n-  fprintf(\n-      stderr,\n-      \"Usage: leveldbutil command...\\n\"\n-      \"   dump files...         -- dump contents of specified files\\n\"\n-      );\n-}\n-\n-int main(int argc, char** argv) {\n-  leveldb::Env* env = leveldb::Env::Default();\n-  bool ok = true;\n-  if (argc < 2) {\n-    Usage();\n-    ok = false;\n-  } else {\n-    std::string command = argv[1];\n-    if (command == \"dump\") {\n-      ok = leveldb::HandleDumpCommand(env, argv+2, argc-2);\n-    } else {\n-      Usage();\n-      ok = false;\n-    }\n-  }\n-  return (ok ? 0 : 1);\n-}"
      },
      {
        "sha": "a8c06efe185ae262d3e741beaa724198bb9c9116",
        "filename": "src/leveldb/db/log_format.h",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_format.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_format.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_format.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,35 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// Log format information shared by reader and writer.\n-// See ../doc/log_format.txt for more detail.\n-\n-#ifndef STORAGE_LEVELDB_DB_LOG_FORMAT_H_\n-#define STORAGE_LEVELDB_DB_LOG_FORMAT_H_\n-\n-namespace leveldb {\n-namespace log {\n-\n-enum RecordType {\n-  // Zero is reserved for preallocated files\n-  kZeroType = 0,\n-\n-  kFullType = 1,\n-\n-  // For fragments\n-  kFirstType = 2,\n-  kMiddleType = 3,\n-  kLastType = 4\n-};\n-static const int kMaxRecordType = kLastType;\n-\n-static const int kBlockSize = 32768;\n-\n-// Header is checksum (4 bytes), length (2 bytes), type (1 byte).\n-static const int kHeaderSize = 4 + 2 + 1;\n-\n-}  // namespace log\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_LOG_FORMAT_H_"
      },
      {
        "sha": "a6d304545d828e0f6dfb792e8f545888a2a8a9c0",
        "filename": "src/leveldb/db/log_reader.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 284,
        "changes": 284,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_reader.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_reader.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_reader.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,284 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/log_reader.h\"\n-\n-#include <stdio.h>\n-#include \"leveldb/env.h\"\n-#include \"util/coding.h\"\n-#include \"util/crc32c.h\"\n-\n-namespace leveldb {\n-namespace log {\n-\n-Reader::Reporter::~Reporter() {\n-}\n-\n-Reader::Reader(SequentialFile* file, Reporter* reporter, bool checksum,\n-               uint64_t initial_offset)\n-    : file_(file),\n-      reporter_(reporter),\n-      checksum_(checksum),\n-      backing_store_(new char[kBlockSize]),\n-      buffer_(),\n-      eof_(false),\n-      last_record_offset_(0),\n-      end_of_buffer_offset_(0),\n-      initial_offset_(initial_offset),\n-      resyncing_(initial_offset > 0) {\n-}\n-\n-Reader::~Reader() {\n-  delete[] backing_store_;\n-}\n-\n-bool Reader::SkipToInitialBlock() {\n-  size_t offset_in_block = initial_offset_ % kBlockSize;\n-  uint64_t block_start_location = initial_offset_ - offset_in_block;\n-\n-  // Don't search a block if we'd be in the trailer\n-  if (offset_in_block > kBlockSize - 6) {\n-    offset_in_block = 0;\n-    block_start_location += kBlockSize;\n-  }\n-\n-  end_of_buffer_offset_ = block_start_location;\n-\n-  // Skip to start of first block that can contain the initial record\n-  if (block_start_location > 0) {\n-    Status skip_status = file_->Skip(block_start_location);\n-    if (!skip_status.ok()) {\n-      ReportDrop(block_start_location, skip_status);\n-      return false;\n-    }\n-  }\n-\n-  return true;\n-}\n-\n-bool Reader::ReadRecord(Slice* record, std::string* scratch) {\n-  if (last_record_offset_ < initial_offset_) {\n-    if (!SkipToInitialBlock()) {\n-      return false;\n-    }\n-  }\n-\n-  scratch->clear();\n-  record->clear();\n-  bool in_fragmented_record = false;\n-  // Record offset of the logical record that we're reading\n-  // 0 is a dummy value to make compilers happy\n-  uint64_t prospective_record_offset = 0;\n-\n-  Slice fragment;\n-  while (true) {\n-    const unsigned int record_type = ReadPhysicalRecord(&fragment);\n-\n-    // ReadPhysicalRecord may have only had an empty trailer remaining in its\n-    // internal buffer. Calculate the offset of the next physical record now\n-    // that it has returned, properly accounting for its header size.\n-    uint64_t physical_record_offset =\n-        end_of_buffer_offset_ - buffer_.size() - kHeaderSize - fragment.size();\n-\n-    if (resyncing_) {\n-      if (record_type == kMiddleType) {\n-        continue;\n-      } else if (record_type == kLastType) {\n-        resyncing_ = false;\n-        continue;\n-      } else {\n-        resyncing_ = false;\n-      }\n-    }\n-\n-    switch (record_type) {\n-      case kFullType:\n-        if (in_fragmented_record) {\n-          // Handle bug in earlier versions of log::Writer where\n-          // it could emit an empty kFirstType record at the tail end\n-          // of a block followed by a kFullType or kFirstType record\n-          // at the beginning of the next block.\n-          if (scratch->empty()) {\n-            in_fragmented_record = false;\n-          } else {\n-            ReportCorruption(scratch->size(), \"partial record without end(1)\");\n-          }\n-        }\n-        prospective_record_offset = physical_record_offset;\n-        scratch->clear();\n-        *record = fragment;\n-        last_record_offset_ = prospective_record_offset;\n-        return true;\n-\n-      case kFirstType:\n-        if (in_fragmented_record) {\n-          // Handle bug in earlier versions of log::Writer where\n-          // it could emit an empty kFirstType record at the tail end\n-          // of a block followed by a kFullType or kFirstType record\n-          // at the beginning of the next block.\n-          if (scratch->empty()) {\n-            in_fragmented_record = false;\n-          } else {\n-            ReportCorruption(scratch->size(), \"partial record without end(2)\");\n-          }\n-        }\n-        prospective_record_offset = physical_record_offset;\n-        scratch->assign(fragment.data(), fragment.size());\n-        in_fragmented_record = true;\n-        break;\n-\n-      case kMiddleType:\n-        if (!in_fragmented_record) {\n-          ReportCorruption(fragment.size(),\n-                           \"missing start of fragmented record(1)\");\n-        } else {\n-          scratch->append(fragment.data(), fragment.size());\n-        }\n-        break;\n-\n-      case kLastType:\n-        if (!in_fragmented_record) {\n-          ReportCorruption(fragment.size(),\n-                           \"missing start of fragmented record(2)\");\n-        } else {\n-          scratch->append(fragment.data(), fragment.size());\n-          *record = Slice(*scratch);\n-          last_record_offset_ = prospective_record_offset;\n-          return true;\n-        }\n-        break;\n-\n-      case kEof:\n-        if (in_fragmented_record) {\n-          // This can be caused by the writer dying immediately after\n-          // writing a physical record but before completing the next; don't\n-          // treat it as a corruption, just ignore the entire logical record.\n-          scratch->clear();\n-        }\n-        return false;\n-\n-      case kBadRecord:\n-        if (in_fragmented_record) {\n-          ReportCorruption(scratch->size(), \"error in middle of record\");\n-          in_fragmented_record = false;\n-          scratch->clear();\n-        }\n-        break;\n-\n-      default: {\n-        char buf[40];\n-        snprintf(buf, sizeof(buf), \"unknown record type %u\", record_type);\n-        ReportCorruption(\n-            (fragment.size() + (in_fragmented_record ? scratch->size() : 0)),\n-            buf);\n-        in_fragmented_record = false;\n-        scratch->clear();\n-        break;\n-      }\n-    }\n-  }\n-  return false;\n-}\n-\n-uint64_t Reader::LastRecordOffset() {\n-  return last_record_offset_;\n-}\n-\n-void Reader::ReportCorruption(uint64_t bytes, const char* reason) {\n-  ReportDrop(bytes, Status::Corruption(reason));\n-}\n-\n-void Reader::ReportDrop(uint64_t bytes, const Status& reason) {\n-  if (reporter_ != NULL &&\n-      end_of_buffer_offset_ - buffer_.size() - bytes >= initial_offset_) {\n-    reporter_->Corruption(static_cast<size_t>(bytes), reason);\n-  }\n-}\n-\n-unsigned int Reader::ReadPhysicalRecord(Slice* result) {\n-  while (true) {\n-    if (buffer_.size() < kHeaderSize) {\n-      if (!eof_) {\n-        // Last read was a full read, so this is a trailer to skip\n-        buffer_.clear();\n-        Status status = file_->Read(kBlockSize, &buffer_, backing_store_);\n-        end_of_buffer_offset_ += buffer_.size();\n-        if (!status.ok()) {\n-          buffer_.clear();\n-          ReportDrop(kBlockSize, status);\n-          eof_ = true;\n-          return kEof;\n-        } else if (buffer_.size() < kBlockSize) {\n-          eof_ = true;\n-        }\n-        continue;\n-      } else {\n-        // Note that if buffer_ is non-empty, we have a truncated header at the\n-        // end of the file, which can be caused by the writer crashing in the\n-        // middle of writing the header. Instead of considering this an error,\n-        // just report EOF.\n-        buffer_.clear();\n-        return kEof;\n-      }\n-    }\n-\n-    // Parse the header\n-    const char* header = buffer_.data();\n-    const uint32_t a = static_cast<uint32_t>(header[4]) & 0xff;\n-    const uint32_t b = static_cast<uint32_t>(header[5]) & 0xff;\n-    const unsigned int type = header[6];\n-    const uint32_t length = a | (b << 8);\n-    if (kHeaderSize + length > buffer_.size()) {\n-      size_t drop_size = buffer_.size();\n-      buffer_.clear();\n-      if (!eof_) {\n-        ReportCorruption(drop_size, \"bad record length\");\n-        return kBadRecord;\n-      }\n-      // If the end of the file has been reached without reading |length| bytes\n-      // of payload, assume the writer died in the middle of writing the record.\n-      // Don't report a corruption.\n-      return kEof;\n-    }\n-\n-    if (type == kZeroType && length == 0) {\n-      // Skip zero length record without reporting any drops since\n-      // such records are produced by the mmap based writing code in\n-      // env_posix.cc that preallocates file regions.\n-      buffer_.clear();\n-      return kBadRecord;\n-    }\n-\n-    // Check crc\n-    if (checksum_) {\n-      uint32_t expected_crc = crc32c::Unmask(DecodeFixed32(header));\n-      uint32_t actual_crc = crc32c::Value(header + 6, 1 + length);\n-      if (actual_crc != expected_crc) {\n-        // Drop the rest of the buffer since \"length\" itself may have\n-        // been corrupted and if we trust it, we could find some\n-        // fragment of a real log record that just happens to look\n-        // like a valid log record.\n-        size_t drop_size = buffer_.size();\n-        buffer_.clear();\n-        ReportCorruption(drop_size, \"checksum mismatch\");\n-        return kBadRecord;\n-      }\n-    }\n-\n-    buffer_.remove_prefix(kHeaderSize + length);\n-\n-    // Skip physical record that started before initial_offset_\n-    if (end_of_buffer_offset_ - buffer_.size() - kHeaderSize - length <\n-        initial_offset_) {\n-      result->clear();\n-      return kBadRecord;\n-    }\n-\n-    *result = Slice(header + kHeaderSize, length);\n-    return type;\n-  }\n-}\n-\n-}  // namespace log\n-}  // namespace leveldb"
      },
      {
        "sha": "8389d61f8f1dde45435840d972ec99ba6d793c15",
        "filename": "src/leveldb/db/log_reader.h",
        "status": "removed",
        "additions": 0,
        "deletions": 113,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_reader.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_reader.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_reader.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,113 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_LOG_READER_H_\n-#define STORAGE_LEVELDB_DB_LOG_READER_H_\n-\n-#include <stdint.h>\n-\n-#include \"db/log_format.h\"\n-#include \"leveldb/slice.h\"\n-#include \"leveldb/status.h\"\n-\n-namespace leveldb {\n-\n-class SequentialFile;\n-\n-namespace log {\n-\n-class Reader {\n- public:\n-  // Interface for reporting errors.\n-  class Reporter {\n-   public:\n-    virtual ~Reporter();\n-\n-    // Some corruption was detected.  \"size\" is the approximate number\n-    // of bytes dropped due to the corruption.\n-    virtual void Corruption(size_t bytes, const Status& status) = 0;\n-  };\n-\n-  // Create a reader that will return log records from \"*file\".\n-  // \"*file\" must remain live while this Reader is in use.\n-  //\n-  // If \"reporter\" is non-NULL, it is notified whenever some data is\n-  // dropped due to a detected corruption.  \"*reporter\" must remain\n-  // live while this Reader is in use.\n-  //\n-  // If \"checksum\" is true, verify checksums if available.\n-  //\n-  // The Reader will start reading at the first record located at physical\n-  // position >= initial_offset within the file.\n-  Reader(SequentialFile* file, Reporter* reporter, bool checksum,\n-         uint64_t initial_offset);\n-\n-  ~Reader();\n-\n-  // Read the next record into *record.  Returns true if read\n-  // successfully, false if we hit end of the input.  May use\n-  // \"*scratch\" as temporary storage.  The contents filled in *record\n-  // will only be valid until the next mutating operation on this\n-  // reader or the next mutation to *scratch.\n-  bool ReadRecord(Slice* record, std::string* scratch);\n-\n-  // Returns the physical offset of the last record returned by ReadRecord.\n-  //\n-  // Undefined before the first call to ReadRecord.\n-  uint64_t LastRecordOffset();\n-\n- private:\n-  SequentialFile* const file_;\n-  Reporter* const reporter_;\n-  bool const checksum_;\n-  char* const backing_store_;\n-  Slice buffer_;\n-  bool eof_;   // Last Read() indicated EOF by returning < kBlockSize\n-\n-  // Offset of the last record returned by ReadRecord.\n-  uint64_t last_record_offset_;\n-  // Offset of the first location past the end of buffer_.\n-  uint64_t end_of_buffer_offset_;\n-\n-  // Offset at which to start looking for the first record to return\n-  uint64_t const initial_offset_;\n-\n-  // True if we are resynchronizing after a seek (initial_offset_ > 0). In\n-  // particular, a run of kMiddleType and kLastType records can be silently\n-  // skipped in this mode\n-  bool resyncing_;\n-\n-  // Extend record types with the following special values\n-  enum {\n-    kEof = kMaxRecordType + 1,\n-    // Returned whenever we find an invalid physical record.\n-    // Currently there are three situations in which this happens:\n-    // * The record has an invalid CRC (ReadPhysicalRecord reports a drop)\n-    // * The record is a 0-length record (No drop is reported)\n-    // * The record is below constructor's initial_offset (No drop is reported)\n-    kBadRecord = kMaxRecordType + 2\n-  };\n-\n-  // Skips all blocks that are completely before \"initial_offset_\".\n-  //\n-  // Returns true on success. Handles reporting.\n-  bool SkipToInitialBlock();\n-\n-  // Return type, or one of the preceding special values\n-  unsigned int ReadPhysicalRecord(Slice* result);\n-\n-  // Reports dropped bytes to the reporter.\n-  // buffer_ must be updated to remove the dropped bytes prior to invocation.\n-  void ReportCorruption(uint64_t bytes, const char* reason);\n-  void ReportDrop(uint64_t bytes, const Status& reason);\n-\n-  // No copying allowed\n-  Reader(const Reader&);\n-  void operator=(const Reader&);\n-};\n-\n-}  // namespace log\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_LOG_READER_H_"
      },
      {
        "sha": "48a5928657e0f57fa2cc5c9477d3a755d216f149",
        "filename": "src/leveldb/db/log_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 591,
        "changes": 591,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,591 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/log_reader.h\"\n-#include \"db/log_writer.h\"\n-#include \"leveldb/env.h\"\n-#include \"util/coding.h\"\n-#include \"util/crc32c.h\"\n-#include \"util/random.h\"\n-#include \"util/testharness.h\"\n-\n-namespace leveldb {\n-namespace log {\n-\n-// Construct a string of the specified length made out of the supplied\n-// partial string.\n-static std::string BigString(const std::string& partial_string, size_t n) {\n-  std::string result;\n-  while (result.size() < n) {\n-    result.append(partial_string);\n-  }\n-  result.resize(n);\n-  return result;\n-}\n-\n-// Construct a string from a number\n-static std::string NumberString(int n) {\n-  char buf[50];\n-  snprintf(buf, sizeof(buf), \"%d.\", n);\n-  return std::string(buf);\n-}\n-\n-// Return a skewed potentially long string\n-static std::string RandomSkewedString(int i, Random* rnd) {\n-  return BigString(NumberString(i), rnd->Skewed(17));\n-}\n-\n-class LogTest {\n- private:\n-  class StringDest : public WritableFile {\n-   public:\n-    std::string contents_;\n-\n-    virtual Status Close() { return Status::OK(); }\n-    virtual Status Flush() { return Status::OK(); }\n-    virtual Status Sync() { return Status::OK(); }\n-    virtual Status Append(const Slice& slice) {\n-      contents_.append(slice.data(), slice.size());\n-      return Status::OK();\n-    }\n-  };\n-\n-  class StringSource : public SequentialFile {\n-   public:\n-    Slice contents_;\n-    bool force_error_;\n-    bool returned_partial_;\n-    StringSource() : force_error_(false), returned_partial_(false) { }\n-\n-    virtual Status Read(size_t n, Slice* result, char* scratch) {\n-      ASSERT_TRUE(!returned_partial_) << \"must not Read() after eof/error\";\n-\n-      if (force_error_) {\n-        force_error_ = false;\n-        returned_partial_ = true;\n-        return Status::Corruption(\"read error\");\n-      }\n-\n-      if (contents_.size() < n) {\n-        n = contents_.size();\n-        returned_partial_ = true;\n-      }\n-      *result = Slice(contents_.data(), n);\n-      contents_.remove_prefix(n);\n-      return Status::OK();\n-    }\n-\n-    virtual Status Skip(uint64_t n) {\n-      if (n > contents_.size()) {\n-        contents_.clear();\n-        return Status::NotFound(\"in-memory file skipped past end\");\n-      }\n-\n-      contents_.remove_prefix(n);\n-\n-      return Status::OK();\n-    }\n-  };\n-\n-  class ReportCollector : public Reader::Reporter {\n-   public:\n-    size_t dropped_bytes_;\n-    std::string message_;\n-\n-    ReportCollector() : dropped_bytes_(0) { }\n-    virtual void Corruption(size_t bytes, const Status& status) {\n-      dropped_bytes_ += bytes;\n-      message_.append(status.ToString());\n-    }\n-  };\n-\n-  StringDest dest_;\n-  StringSource source_;\n-  ReportCollector report_;\n-  bool reading_;\n-  Writer* writer_;\n-  Reader* reader_;\n-\n-  // Record metadata for testing initial offset functionality\n-  static size_t initial_offset_record_sizes_[];\n-  static uint64_t initial_offset_last_record_offsets_[];\n-  static int num_initial_offset_records_;\n-\n- public:\n-  LogTest() : reading_(false),\n-              writer_(new Writer(&dest_)),\n-              reader_(new Reader(&source_, &report_, true/*checksum*/,\n-                      0/*initial_offset*/)) {\n-  }\n-\n-  ~LogTest() {\n-    delete writer_;\n-    delete reader_;\n-  }\n-\n-  void ReopenForAppend() {\n-    delete writer_;\n-    writer_ = new Writer(&dest_, dest_.contents_.size());\n-  }\n-\n-  void Write(const std::string& msg) {\n-    ASSERT_TRUE(!reading_) << \"Write() after starting to read\";\n-    writer_->AddRecord(Slice(msg));\n-  }\n-\n-  size_t WrittenBytes() const {\n-    return dest_.contents_.size();\n-  }\n-\n-  std::string Read() {\n-    if (!reading_) {\n-      reading_ = true;\n-      source_.contents_ = Slice(dest_.contents_);\n-    }\n-    std::string scratch;\n-    Slice record;\n-    if (reader_->ReadRecord(&record, &scratch)) {\n-      return record.ToString();\n-    } else {\n-      return \"EOF\";\n-    }\n-  }\n-\n-  void IncrementByte(int offset, int delta) {\n-    dest_.contents_[offset] += delta;\n-  }\n-\n-  void SetByte(int offset, char new_byte) {\n-    dest_.contents_[offset] = new_byte;\n-  }\n-\n-  void ShrinkSize(int bytes) {\n-    dest_.contents_.resize(dest_.contents_.size() - bytes);\n-  }\n-\n-  void FixChecksum(int header_offset, int len) {\n-    // Compute crc of type/len/data\n-    uint32_t crc = crc32c::Value(&dest_.contents_[header_offset+6], 1 + len);\n-    crc = crc32c::Mask(crc);\n-    EncodeFixed32(&dest_.contents_[header_offset], crc);\n-  }\n-\n-  void ForceError() {\n-    source_.force_error_ = true;\n-  }\n-\n-  size_t DroppedBytes() const {\n-    return report_.dropped_bytes_;\n-  }\n-\n-  std::string ReportMessage() const {\n-    return report_.message_;\n-  }\n-\n-  // Returns OK iff recorded error message contains \"msg\"\n-  std::string MatchError(const std::string& msg) const {\n-    if (report_.message_.find(msg) == std::string::npos) {\n-      return report_.message_;\n-    } else {\n-      return \"OK\";\n-    }\n-  }\n-\n-  void WriteInitialOffsetLog() {\n-    for (int i = 0; i < num_initial_offset_records_; i++) {\n-      std::string record(initial_offset_record_sizes_[i],\n-                         static_cast<char>('a' + i));\n-      Write(record);\n-    }\n-  }\n-\n-  void StartReadingAt(uint64_t initial_offset) {\n-    delete reader_;\n-    reader_ = new Reader(&source_, &report_, true/*checksum*/, initial_offset);\n-  }\n-\n-  void CheckOffsetPastEndReturnsNoRecords(uint64_t offset_past_end) {\n-    WriteInitialOffsetLog();\n-    reading_ = true;\n-    source_.contents_ = Slice(dest_.contents_);\n-    Reader* offset_reader = new Reader(&source_, &report_, true/*checksum*/,\n-                                       WrittenBytes() + offset_past_end);\n-    Slice record;\n-    std::string scratch;\n-    ASSERT_TRUE(!offset_reader->ReadRecord(&record, &scratch));\n-    delete offset_reader;\n-  }\n-\n-  void CheckInitialOffsetRecord(uint64_t initial_offset,\n-                                int expected_record_offset) {\n-    WriteInitialOffsetLog();\n-    reading_ = true;\n-    source_.contents_ = Slice(dest_.contents_);\n-    Reader* offset_reader = new Reader(&source_, &report_, true/*checksum*/,\n-                                       initial_offset);\n-\n-    // Read all records from expected_record_offset through the last one.\n-    ASSERT_LT(expected_record_offset, num_initial_offset_records_);\n-    for (; expected_record_offset < num_initial_offset_records_;\n-         ++expected_record_offset) {\n-      Slice record;\n-      std::string scratch;\n-      ASSERT_TRUE(offset_reader->ReadRecord(&record, &scratch));\n-      ASSERT_EQ(initial_offset_record_sizes_[expected_record_offset],\n-                record.size());\n-      ASSERT_EQ(initial_offset_last_record_offsets_[expected_record_offset],\n-                offset_reader->LastRecordOffset());\n-      ASSERT_EQ((char)('a' + expected_record_offset), record.data()[0]);\n-    }\n-    delete offset_reader;\n-  }\n-};\n-\n-size_t LogTest::initial_offset_record_sizes_[] =\n-    {10000,  // Two sizable records in first block\n-     10000,\n-     2 * log::kBlockSize - 1000,  // Span three blocks\n-     1,\n-     13716,  // Consume all but two bytes of block 3.\n-     log::kBlockSize - kHeaderSize, // Consume the entirety of block 4.\n-    };\n-\n-uint64_t LogTest::initial_offset_last_record_offsets_[] =\n-    {0,\n-     kHeaderSize + 10000,\n-     2 * (kHeaderSize + 10000),\n-     2 * (kHeaderSize + 10000) +\n-         (2 * log::kBlockSize - 1000) + 3 * kHeaderSize,\n-     2 * (kHeaderSize + 10000) +\n-         (2 * log::kBlockSize - 1000) + 3 * kHeaderSize\n-         + kHeaderSize + 1,\n-     3 * log::kBlockSize,\n-    };\n-\n-// LogTest::initial_offset_last_record_offsets_ must be defined before this.\n-int LogTest::num_initial_offset_records_ =\n-    sizeof(LogTest::initial_offset_last_record_offsets_)/sizeof(uint64_t);\n-\n-TEST(LogTest, Empty) {\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, ReadWrite) {\n-  Write(\"foo\");\n-  Write(\"bar\");\n-  Write(\"\");\n-  Write(\"xxxx\");\n-  ASSERT_EQ(\"foo\", Read());\n-  ASSERT_EQ(\"bar\", Read());\n-  ASSERT_EQ(\"\", Read());\n-  ASSERT_EQ(\"xxxx\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(\"EOF\", Read());  // Make sure reads at eof work\n-}\n-\n-TEST(LogTest, ManyBlocks) {\n-  for (int i = 0; i < 100000; i++) {\n-    Write(NumberString(i));\n-  }\n-  for (int i = 0; i < 100000; i++) {\n-    ASSERT_EQ(NumberString(i), Read());\n-  }\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, Fragmentation) {\n-  Write(\"small\");\n-  Write(BigString(\"medium\", 50000));\n-  Write(BigString(\"large\", 100000));\n-  ASSERT_EQ(\"small\", Read());\n-  ASSERT_EQ(BigString(\"medium\", 50000), Read());\n-  ASSERT_EQ(BigString(\"large\", 100000), Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, MarginalTrailer) {\n-  // Make a trailer that is exactly the same length as an empty record.\n-  const int n = kBlockSize - 2*kHeaderSize;\n-  Write(BigString(\"foo\", n));\n-  ASSERT_EQ(kBlockSize - kHeaderSize, WrittenBytes());\n-  Write(\"\");\n-  Write(\"bar\");\n-  ASSERT_EQ(BigString(\"foo\", n), Read());\n-  ASSERT_EQ(\"\", Read());\n-  ASSERT_EQ(\"bar\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, MarginalTrailer2) {\n-  // Make a trailer that is exactly the same length as an empty record.\n-  const int n = kBlockSize - 2*kHeaderSize;\n-  Write(BigString(\"foo\", n));\n-  ASSERT_EQ(kBlockSize - kHeaderSize, WrittenBytes());\n-  Write(\"bar\");\n-  ASSERT_EQ(BigString(\"foo\", n), Read());\n-  ASSERT_EQ(\"bar\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(0, DroppedBytes());\n-  ASSERT_EQ(\"\", ReportMessage());\n-}\n-\n-TEST(LogTest, ShortTrailer) {\n-  const int n = kBlockSize - 2*kHeaderSize + 4;\n-  Write(BigString(\"foo\", n));\n-  ASSERT_EQ(kBlockSize - kHeaderSize + 4, WrittenBytes());\n-  Write(\"\");\n-  Write(\"bar\");\n-  ASSERT_EQ(BigString(\"foo\", n), Read());\n-  ASSERT_EQ(\"\", Read());\n-  ASSERT_EQ(\"bar\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, AlignedEof) {\n-  const int n = kBlockSize - 2*kHeaderSize + 4;\n-  Write(BigString(\"foo\", n));\n-  ASSERT_EQ(kBlockSize - kHeaderSize + 4, WrittenBytes());\n-  ASSERT_EQ(BigString(\"foo\", n), Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, OpenForAppend) {\n-  Write(\"hello\");\n-  ReopenForAppend();\n-  Write(\"world\");\n-  ASSERT_EQ(\"hello\", Read());\n-  ASSERT_EQ(\"world\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, RandomRead) {\n-  const int N = 500;\n-  Random write_rnd(301);\n-  for (int i = 0; i < N; i++) {\n-    Write(RandomSkewedString(i, &write_rnd));\n-  }\n-  Random read_rnd(301);\n-  for (int i = 0; i < N; i++) {\n-    ASSERT_EQ(RandomSkewedString(i, &read_rnd), Read());\n-  }\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-// Tests of all the error paths in log_reader.cc follow:\n-\n-TEST(LogTest, ReadError) {\n-  Write(\"foo\");\n-  ForceError();\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(kBlockSize, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"read error\"));\n-}\n-\n-TEST(LogTest, BadRecordType) {\n-  Write(\"foo\");\n-  // Type is stored in header[6]\n-  IncrementByte(6, 100);\n-  FixChecksum(0, 3);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(3, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"unknown record type\"));\n-}\n-\n-TEST(LogTest, TruncatedTrailingRecordIsIgnored) {\n-  Write(\"foo\");\n-  ShrinkSize(4);   // Drop all payload as well as a header byte\n-  ASSERT_EQ(\"EOF\", Read());\n-  // Truncated last record is ignored, not treated as an error.\n-  ASSERT_EQ(0, DroppedBytes());\n-  ASSERT_EQ(\"\", ReportMessage());\n-}\n-\n-TEST(LogTest, BadLength) {\n-  const int kPayloadSize = kBlockSize - kHeaderSize;\n-  Write(BigString(\"bar\", kPayloadSize));\n-  Write(\"foo\");\n-  // Least significant size byte is stored in header[4].\n-  IncrementByte(4, 1);\n-  ASSERT_EQ(\"foo\", Read());\n-  ASSERT_EQ(kBlockSize, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"bad record length\"));\n-}\n-\n-TEST(LogTest, BadLengthAtEndIsIgnored) {\n-  Write(\"foo\");\n-  ShrinkSize(1);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(0, DroppedBytes());\n-  ASSERT_EQ(\"\", ReportMessage());\n-}\n-\n-TEST(LogTest, ChecksumMismatch) {\n-  Write(\"foo\");\n-  IncrementByte(0, 10);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(10, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"checksum mismatch\"));\n-}\n-\n-TEST(LogTest, UnexpectedMiddleType) {\n-  Write(\"foo\");\n-  SetByte(6, kMiddleType);\n-  FixChecksum(0, 3);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(3, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"missing start\"));\n-}\n-\n-TEST(LogTest, UnexpectedLastType) {\n-  Write(\"foo\");\n-  SetByte(6, kLastType);\n-  FixChecksum(0, 3);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(3, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"missing start\"));\n-}\n-\n-TEST(LogTest, UnexpectedFullType) {\n-  Write(\"foo\");\n-  Write(\"bar\");\n-  SetByte(6, kFirstType);\n-  FixChecksum(0, 3);\n-  ASSERT_EQ(\"bar\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(3, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"partial record without end\"));\n-}\n-\n-TEST(LogTest, UnexpectedFirstType) {\n-  Write(\"foo\");\n-  Write(BigString(\"bar\", 100000));\n-  SetByte(6, kFirstType);\n-  FixChecksum(0, 3);\n-  ASSERT_EQ(BigString(\"bar\", 100000), Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(3, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"partial record without end\"));\n-}\n-\n-TEST(LogTest, MissingLastIsIgnored) {\n-  Write(BigString(\"bar\", kBlockSize));\n-  // Remove the LAST block, including header.\n-  ShrinkSize(14);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(\"\", ReportMessage());\n-  ASSERT_EQ(0, DroppedBytes());\n-}\n-\n-TEST(LogTest, PartialLastIsIgnored) {\n-  Write(BigString(\"bar\", kBlockSize));\n-  // Cause a bad record length in the LAST block.\n-  ShrinkSize(1);\n-  ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(\"\", ReportMessage());\n-  ASSERT_EQ(0, DroppedBytes());\n-}\n-\n-TEST(LogTest, SkipIntoMultiRecord) {\n-  // Consider a fragmented record:\n-  //    first(R1), middle(R1), last(R1), first(R2)\n-  // If initial_offset points to a record after first(R1) but before first(R2)\n-  // incomplete fragment errors are not actual errors, and must be suppressed\n-  // until a new first or full record is encountered.\n-  Write(BigString(\"foo\", 3*kBlockSize));\n-  Write(\"correct\");\n-  StartReadingAt(kBlockSize);\n-\n-  ASSERT_EQ(\"correct\", Read());\n-  ASSERT_EQ(\"\", ReportMessage());\n-  ASSERT_EQ(0, DroppedBytes());\n-  ASSERT_EQ(\"EOF\", Read());\n-}\n-\n-TEST(LogTest, ErrorJoinsRecords) {\n-  // Consider two fragmented records:\n-  //    first(R1) last(R1) first(R2) last(R2)\n-  // where the middle two fragments disappear.  We do not want\n-  // first(R1),last(R2) to get joined and returned as a valid record.\n-\n-  // Write records that span two blocks\n-  Write(BigString(\"foo\", kBlockSize));\n-  Write(BigString(\"bar\", kBlockSize));\n-  Write(\"correct\");\n-\n-  // Wipe the middle block\n-  for (int offset = kBlockSize; offset < 2*kBlockSize; offset++) {\n-    SetByte(offset, 'x');\n-  }\n-\n-  ASSERT_EQ(\"correct\", Read());\n-  ASSERT_EQ(\"EOF\", Read());\n-  const size_t dropped = DroppedBytes();\n-  ASSERT_LE(dropped, 2*kBlockSize + 100);\n-  ASSERT_GE(dropped, 2*kBlockSize);\n-}\n-\n-TEST(LogTest, ReadStart) {\n-  CheckInitialOffsetRecord(0, 0);\n-}\n-\n-TEST(LogTest, ReadSecondOneOff) {\n-  CheckInitialOffsetRecord(1, 1);\n-}\n-\n-TEST(LogTest, ReadSecondTenThousand) {\n-  CheckInitialOffsetRecord(10000, 1);\n-}\n-\n-TEST(LogTest, ReadSecondStart) {\n-  CheckInitialOffsetRecord(10007, 1);\n-}\n-\n-TEST(LogTest, ReadThirdOneOff) {\n-  CheckInitialOffsetRecord(10008, 2);\n-}\n-\n-TEST(LogTest, ReadThirdStart) {\n-  CheckInitialOffsetRecord(20014, 2);\n-}\n-\n-TEST(LogTest, ReadFourthOneOff) {\n-  CheckInitialOffsetRecord(20015, 3);\n-}\n-\n-TEST(LogTest, ReadFourthFirstBlockTrailer) {\n-  CheckInitialOffsetRecord(log::kBlockSize - 4, 3);\n-}\n-\n-TEST(LogTest, ReadFourthMiddleBlock) {\n-  CheckInitialOffsetRecord(log::kBlockSize + 1, 3);\n-}\n-\n-TEST(LogTest, ReadFourthLastBlock) {\n-  CheckInitialOffsetRecord(2 * log::kBlockSize + 1, 3);\n-}\n-\n-TEST(LogTest, ReadFourthStart) {\n-  CheckInitialOffsetRecord(\n-      2 * (kHeaderSize + 1000) + (2 * log::kBlockSize - 1000) + 3 * kHeaderSize,\n-      3);\n-}\n-\n-TEST(LogTest, ReadInitialOffsetIntoBlockPadding) {\n-  CheckInitialOffsetRecord(3 * log::kBlockSize - 3, 5);\n-}\n-\n-TEST(LogTest, ReadEnd) {\n-  CheckOffsetPastEndReturnsNoRecords(0);\n-}\n-\n-TEST(LogTest, ReadPastEnd) {\n-  CheckOffsetPastEndReturnsNoRecords(5);\n-}\n-\n-}  // namespace log\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "74a03270da8500188175a38c3a3fdab2e7b27b8e",
        "filename": "src/leveldb/db/log_writer.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 112,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_writer.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_writer.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_writer.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,112 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/log_writer.h\"\n-\n-#include <stdint.h>\n-#include \"leveldb/env.h\"\n-#include \"util/coding.h\"\n-#include \"util/crc32c.h\"\n-\n-namespace leveldb {\n-namespace log {\n-\n-static void InitTypeCrc(uint32_t* type_crc) {\n-  for (int i = 0; i <= kMaxRecordType; i++) {\n-    char t = static_cast<char>(i);\n-    type_crc[i] = crc32c::Value(&t, 1);\n-  }\n-}\n-\n-Writer::Writer(WritableFile* dest)\n-    : dest_(dest),\n-      block_offset_(0) {\n-  InitTypeCrc(type_crc_);\n-}\n-\n-Writer::Writer(WritableFile* dest, uint64_t dest_length)\n-    : dest_(dest), block_offset_(dest_length % kBlockSize) {\n-  InitTypeCrc(type_crc_);\n-}\n-\n-Writer::~Writer() {\n-}\n-\n-Status Writer::AddRecord(const Slice& slice) {\n-  const char* ptr = slice.data();\n-  size_t left = slice.size();\n-\n-  // Fragment the record if necessary and emit it.  Note that if slice\n-  // is empty, we still want to iterate once to emit a single\n-  // zero-length record\n-  Status s;\n-  bool begin = true;\n-  do {\n-    const int leftover = kBlockSize - block_offset_;\n-    assert(leftover >= 0);\n-    if (leftover < kHeaderSize) {\n-      // Switch to a new block\n-      if (leftover > 0) {\n-        // Fill the trailer (literal below relies on kHeaderSize being 7)\n-        assert(kHeaderSize == 7);\n-        dest_->Append(Slice(\"\\x00\\x00\\x00\\x00\\x00\\x00\", leftover));\n-      }\n-      block_offset_ = 0;\n-    }\n-\n-    // Invariant: we never leave < kHeaderSize bytes in a block.\n-    assert(kBlockSize - block_offset_ - kHeaderSize >= 0);\n-\n-    const size_t avail = kBlockSize - block_offset_ - kHeaderSize;\n-    const size_t fragment_length = (left < avail) ? left : avail;\n-\n-    RecordType type;\n-    const bool end = (left == fragment_length);\n-    if (begin && end) {\n-      type = kFullType;\n-    } else if (begin) {\n-      type = kFirstType;\n-    } else if (end) {\n-      type = kLastType;\n-    } else {\n-      type = kMiddleType;\n-    }\n-\n-    s = EmitPhysicalRecord(type, ptr, fragment_length);\n-    ptr += fragment_length;\n-    left -= fragment_length;\n-    begin = false;\n-  } while (s.ok() && left > 0);\n-  return s;\n-}\n-\n-Status Writer::EmitPhysicalRecord(RecordType t, const char* ptr, size_t n) {\n-  assert(n <= 0xffff);  // Must fit in two bytes\n-  assert(block_offset_ + kHeaderSize + n <= kBlockSize);\n-\n-  // Format the header\n-  char buf[kHeaderSize];\n-  buf[4] = static_cast<char>(n & 0xff);\n-  buf[5] = static_cast<char>(n >> 8);\n-  buf[6] = static_cast<char>(t);\n-\n-  // Compute the crc of the record type and the payload.\n-  uint32_t crc = crc32c::Extend(type_crc_[t], ptr, n);\n-  crc = crc32c::Mask(crc);                 // Adjust for storage\n-  EncodeFixed32(buf, crc);\n-\n-  // Write the header and the payload\n-  Status s = dest_->Append(Slice(buf, kHeaderSize));\n-  if (s.ok()) {\n-    s = dest_->Append(Slice(ptr, n));\n-    if (s.ok()) {\n-      s = dest_->Flush();\n-    }\n-  }\n-  block_offset_ += kHeaderSize + n;\n-  return s;\n-}\n-\n-}  // namespace log\n-}  // namespace leveldb"
      },
      {
        "sha": "9e7cc4705b0146b316dbe4e9e0b05f1146c4389b",
        "filename": "src/leveldb/db/log_writer.h",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_writer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/log_writer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_writer.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,54 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_LOG_WRITER_H_\n-#define STORAGE_LEVELDB_DB_LOG_WRITER_H_\n-\n-#include <stdint.h>\n-#include \"db/log_format.h\"\n-#include \"leveldb/slice.h\"\n-#include \"leveldb/status.h\"\n-\n-namespace leveldb {\n-\n-class WritableFile;\n-\n-namespace log {\n-\n-class Writer {\n- public:\n-  // Create a writer that will append data to \"*dest\".\n-  // \"*dest\" must be initially empty.\n-  // \"*dest\" must remain live while this Writer is in use.\n-  explicit Writer(WritableFile* dest);\n-\n-  // Create a writer that will append data to \"*dest\".\n-  // \"*dest\" must have initial length \"dest_length\".\n-  // \"*dest\" must remain live while this Writer is in use.\n-  Writer(WritableFile* dest, uint64_t dest_length);\n-\n-  ~Writer();\n-\n-  Status AddRecord(const Slice& slice);\n-\n- private:\n-  WritableFile* dest_;\n-  int block_offset_;       // Current offset in block\n-\n-  // crc32c values for all supported record types.  These are\n-  // pre-computed to reduce the overhead of computing the crc of the\n-  // record type stored in the header.\n-  uint32_t type_crc_[kMaxRecordType + 1];\n-\n-  Status EmitPhysicalRecord(RecordType type, const char* ptr, size_t length);\n-\n-  // No copying allowed\n-  Writer(const Writer&);\n-  void operator=(const Writer&);\n-};\n-\n-}  // namespace log\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_LOG_WRITER_H_"
      },
      {
        "sha": "bfec0a7e7a1dc210b44dd527b9547e33e829d9bb",
        "filename": "src/leveldb/db/memtable.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 145,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/memtable.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/memtable.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/memtable.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,145 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/memtable.h\"\n-#include \"db/dbformat.h\"\n-#include \"leveldb/comparator.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/iterator.h\"\n-#include \"util/coding.h\"\n-\n-namespace leveldb {\n-\n-static Slice GetLengthPrefixedSlice(const char* data) {\n-  uint32_t len;\n-  const char* p = data;\n-  p = GetVarint32Ptr(p, p + 5, &len);  // +5: we assume \"p\" is not corrupted\n-  return Slice(p, len);\n-}\n-\n-MemTable::MemTable(const InternalKeyComparator& cmp)\n-    : comparator_(cmp),\n-      refs_(0),\n-      table_(comparator_, &arena_) {\n-}\n-\n-MemTable::~MemTable() {\n-  assert(refs_ == 0);\n-}\n-\n-size_t MemTable::ApproximateMemoryUsage() { return arena_.MemoryUsage(); }\n-\n-int MemTable::KeyComparator::operator()(const char* aptr, const char* bptr)\n-    const {\n-  // Internal keys are encoded as length-prefixed strings.\n-  Slice a = GetLengthPrefixedSlice(aptr);\n-  Slice b = GetLengthPrefixedSlice(bptr);\n-  return comparator.Compare(a, b);\n-}\n-\n-// Encode a suitable internal key target for \"target\" and return it.\n-// Uses *scratch as scratch space, and the returned pointer will point\n-// into this scratch space.\n-static const char* EncodeKey(std::string* scratch, const Slice& target) {\n-  scratch->clear();\n-  PutVarint32(scratch, target.size());\n-  scratch->append(target.data(), target.size());\n-  return scratch->data();\n-}\n-\n-class MemTableIterator: public Iterator {\n- public:\n-  explicit MemTableIterator(MemTable::Table* table) : iter_(table) { }\n-\n-  virtual bool Valid() const { return iter_.Valid(); }\n-  virtual void Seek(const Slice& k) { iter_.Seek(EncodeKey(&tmp_, k)); }\n-  virtual void SeekToFirst() { iter_.SeekToFirst(); }\n-  virtual void SeekToLast() { iter_.SeekToLast(); }\n-  virtual void Next() { iter_.Next(); }\n-  virtual void Prev() { iter_.Prev(); }\n-  virtual Slice key() const { return GetLengthPrefixedSlice(iter_.key()); }\n-  virtual Slice value() const {\n-    Slice key_slice = GetLengthPrefixedSlice(iter_.key());\n-    return GetLengthPrefixedSlice(key_slice.data() + key_slice.size());\n-  }\n-\n-  virtual Status status() const { return Status::OK(); }\n-\n- private:\n-  MemTable::Table::Iterator iter_;\n-  std::string tmp_;       // For passing to EncodeKey\n-\n-  // No copying allowed\n-  MemTableIterator(const MemTableIterator&);\n-  void operator=(const MemTableIterator&);\n-};\n-\n-Iterator* MemTable::NewIterator() {\n-  return new MemTableIterator(&table_);\n-}\n-\n-void MemTable::Add(SequenceNumber s, ValueType type,\n-                   const Slice& key,\n-                   const Slice& value) {\n-  // Format of an entry is concatenation of:\n-  //  key_size     : varint32 of internal_key.size()\n-  //  key bytes    : char[internal_key.size()]\n-  //  value_size   : varint32 of value.size()\n-  //  value bytes  : char[value.size()]\n-  size_t key_size = key.size();\n-  size_t val_size = value.size();\n-  size_t internal_key_size = key_size + 8;\n-  const size_t encoded_len =\n-      VarintLength(internal_key_size) + internal_key_size +\n-      VarintLength(val_size) + val_size;\n-  char* buf = arena_.Allocate(encoded_len);\n-  char* p = EncodeVarint32(buf, internal_key_size);\n-  memcpy(p, key.data(), key_size);\n-  p += key_size;\n-  EncodeFixed64(p, (s << 8) | type);\n-  p += 8;\n-  p = EncodeVarint32(p, val_size);\n-  memcpy(p, value.data(), val_size);\n-  assert((p + val_size) - buf == encoded_len);\n-  table_.Insert(buf);\n-}\n-\n-bool MemTable::Get(const LookupKey& key, std::string* value, Status* s) {\n-  Slice memkey = key.memtable_key();\n-  Table::Iterator iter(&table_);\n-  iter.Seek(memkey.data());\n-  if (iter.Valid()) {\n-    // entry format is:\n-    //    klength  varint32\n-    //    userkey  char[klength]\n-    //    tag      uint64\n-    //    vlength  varint32\n-    //    value    char[vlength]\n-    // Check that it belongs to same user key.  We do not check the\n-    // sequence number since the Seek() call above should have skipped\n-    // all entries with overly large sequence numbers.\n-    const char* entry = iter.key();\n-    uint32_t key_length;\n-    const char* key_ptr = GetVarint32Ptr(entry, entry+5, &key_length);\n-    if (comparator_.comparator.user_comparator()->Compare(\n-            Slice(key_ptr, key_length - 8),\n-            key.user_key()) == 0) {\n-      // Correct user key\n-      const uint64_t tag = DecodeFixed64(key_ptr + key_length - 8);\n-      switch (static_cast<ValueType>(tag & 0xff)) {\n-        case kTypeValue: {\n-          Slice v = GetLengthPrefixedSlice(key_ptr + key_length);\n-          value->assign(v.data(), v.size());\n-          return true;\n-        }\n-        case kTypeDeletion:\n-          *s = Status::NotFound(Slice());\n-          return true;\n-      }\n-    }\n-  }\n-  return false;\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "9f41567cde23dfd645b19d290c6e4a4256804900",
        "filename": "src/leveldb/db/memtable.h",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/memtable.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/memtable.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/memtable.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,88 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_MEMTABLE_H_\n-#define STORAGE_LEVELDB_DB_MEMTABLE_H_\n-\n-#include <string>\n-#include \"leveldb/db.h\"\n-#include \"db/dbformat.h\"\n-#include \"db/skiplist.h\"\n-#include \"util/arena.h\"\n-\n-namespace leveldb {\n-\n-class InternalKeyComparator;\n-class Mutex;\n-class MemTableIterator;\n-\n-class MemTable {\n- public:\n-  // MemTables are reference counted.  The initial reference count\n-  // is zero and the caller must call Ref() at least once.\n-  explicit MemTable(const InternalKeyComparator& comparator);\n-\n-  // Increase reference count.\n-  void Ref() { ++refs_; }\n-\n-  // Drop reference count.  Delete if no more references exist.\n-  void Unref() {\n-    --refs_;\n-    assert(refs_ >= 0);\n-    if (refs_ <= 0) {\n-      delete this;\n-    }\n-  }\n-\n-  // Returns an estimate of the number of bytes of data in use by this\n-  // data structure. It is safe to call when MemTable is being modified.\n-  size_t ApproximateMemoryUsage();\n-\n-  // Return an iterator that yields the contents of the memtable.\n-  //\n-  // The caller must ensure that the underlying MemTable remains live\n-  // while the returned iterator is live.  The keys returned by this\n-  // iterator are internal keys encoded by AppendInternalKey in the\n-  // db/format.{h,cc} module.\n-  Iterator* NewIterator();\n-\n-  // Add an entry into memtable that maps key to value at the\n-  // specified sequence number and with the specified type.\n-  // Typically value will be empty if type==kTypeDeletion.\n-  void Add(SequenceNumber seq, ValueType type,\n-           const Slice& key,\n-           const Slice& value);\n-\n-  // If memtable contains a value for key, store it in *value and return true.\n-  // If memtable contains a deletion for key, store a NotFound() error\n-  // in *status and return true.\n-  // Else, return false.\n-  bool Get(const LookupKey& key, std::string* value, Status* s);\n-\n- private:\n-  ~MemTable();  // Private since only Unref() should be used to delete it\n-\n-  struct KeyComparator {\n-    const InternalKeyComparator comparator;\n-    explicit KeyComparator(const InternalKeyComparator& c) : comparator(c) { }\n-    int operator()(const char* a, const char* b) const;\n-  };\n-  friend class MemTableIterator;\n-  friend class MemTableBackwardIterator;\n-\n-  typedef SkipList<const char*, KeyComparator> Table;\n-\n-  KeyComparator comparator_;\n-  int refs_;\n-  Arena arena_;\n-  Table table_;\n-\n-  // No copying allowed\n-  MemTable(const MemTable&);\n-  void operator=(const MemTable&);\n-};\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_MEMTABLE_H_"
      },
      {
        "sha": "9596f4288a84e558835421f8e68c57189a1da765",
        "filename": "src/leveldb/db/recovery_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 324,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/recovery_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/recovery_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/recovery_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,324 +0,0 @@\n-// Copyright (c) 2014 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/db_impl.h\"\n-#include \"db/filename.h\"\n-#include \"db/version_set.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/write_batch.h\"\n-#include \"util/logging.h\"\n-#include \"util/testharness.h\"\n-#include \"util/testutil.h\"\n-\n-namespace leveldb {\n-\n-class RecoveryTest {\n- public:\n-  RecoveryTest() : env_(Env::Default()), db_(NULL) {\n-    dbname_ = test::TmpDir() + \"/recovery_test\";\n-    DestroyDB(dbname_, Options());\n-    Open();\n-  }\n-\n-  ~RecoveryTest() {\n-    Close();\n-    DestroyDB(dbname_, Options());\n-  }\n-\n-  DBImpl* dbfull() const { return reinterpret_cast<DBImpl*>(db_); }\n-  Env* env() const { return env_; }\n-\n-  bool CanAppend() {\n-    WritableFile* tmp;\n-    Status s = env_->NewAppendableFile(CurrentFileName(dbname_), &tmp);\n-    delete tmp;\n-    if (s.IsNotSupportedError()) {\n-      return false;\n-    } else {\n-      return true;\n-    }\n-  }\n-\n-  void Close() {\n-    delete db_;\n-    db_ = NULL;\n-  }\n-\n-  void Open(Options* options = NULL) {\n-    Close();\n-    Options opts;\n-    if (options != NULL) {\n-      opts = *options;\n-    } else {\n-      opts.reuse_logs = true;  // TODO(sanjay): test both ways\n-      opts.create_if_missing = true;\n-    }\n-    if (opts.env == NULL) {\n-      opts.env = env_;\n-    }\n-    ASSERT_OK(DB::Open(opts, dbname_, &db_));\n-    ASSERT_EQ(1, NumLogs());\n-  }\n-\n-  Status Put(const std::string& k, const std::string& v) {\n-    return db_->Put(WriteOptions(), k, v);\n-  }\n-\n-  std::string Get(const std::string& k, const Snapshot* snapshot = NULL) {\n-    std::string result;\n-    Status s = db_->Get(ReadOptions(), k, &result);\n-    if (s.IsNotFound()) {\n-      result = \"NOT_FOUND\";\n-    } else if (!s.ok()) {\n-      result = s.ToString();\n-    }\n-    return result;\n-  }\n-\n-  std::string ManifestFileName() {\n-    std::string current;\n-    ASSERT_OK(ReadFileToString(env_, CurrentFileName(dbname_), &current));\n-    size_t len = current.size();\n-    if (len > 0 && current[len-1] == '\\n') {\n-      current.resize(len - 1);\n-    }\n-    return dbname_ + \"/\" + current;\n-  }\n-\n-  std::string LogName(uint64_t number) {\n-    return LogFileName(dbname_, number);\n-  }\n-\n-  size_t DeleteLogFiles() {\n-    std::vector<uint64_t> logs = GetFiles(kLogFile);\n-    for (size_t i = 0; i < logs.size(); i++) {\n-      ASSERT_OK(env_->DeleteFile(LogName(logs[i]))) << LogName(logs[i]);\n-    }\n-    return logs.size();\n-  }\n-\n-  uint64_t FirstLogFile() {\n-    return GetFiles(kLogFile)[0];\n-  }\n-\n-  std::vector<uint64_t> GetFiles(FileType t) {\n-    std::vector<std::string> filenames;\n-    ASSERT_OK(env_->GetChildren(dbname_, &filenames));\n-    std::vector<uint64_t> result;\n-    for (size_t i = 0; i < filenames.size(); i++) {\n-      uint64_t number;\n-      FileType type;\n-      if (ParseFileName(filenames[i], &number, &type) && type == t) {\n-        result.push_back(number);\n-      }\n-    }\n-    return result;\n-  }\n-\n-  int NumLogs() {\n-    return GetFiles(kLogFile).size();\n-  }\n-\n-  int NumTables() {\n-    return GetFiles(kTableFile).size();\n-  }\n-\n-  uint64_t FileSize(const std::string& fname) {\n-    uint64_t result;\n-    ASSERT_OK(env_->GetFileSize(fname, &result)) << fname;\n-    return result;\n-  }\n-\n-  void CompactMemTable() {\n-    dbfull()->TEST_CompactMemTable();\n-  }\n-\n-  // Directly construct a log file that sets key to val.\n-  void MakeLogFile(uint64_t lognum, SequenceNumber seq, Slice key, Slice val) {\n-    std::string fname = LogFileName(dbname_, lognum);\n-    WritableFile* file;\n-    ASSERT_OK(env_->NewWritableFile(fname, &file));\n-    log::Writer writer(file);\n-    WriteBatch batch;\n-    batch.Put(key, val);\n-    WriteBatchInternal::SetSequence(&batch, seq);\n-    ASSERT_OK(writer.AddRecord(WriteBatchInternal::Contents(&batch)));\n-    ASSERT_OK(file->Flush());\n-    delete file;\n-  }\n-\n- private:\n-  std::string dbname_;\n-  Env* env_;\n-  DB* db_;\n-};\n-\n-TEST(RecoveryTest, ManifestReused) {\n-  if (!CanAppend()) {\n-    fprintf(stderr, \"skipping test because env does not support appending\\n\");\n-    return;\n-  }\n-  ASSERT_OK(Put(\"foo\", \"bar\"));\n-  Close();\n-  std::string old_manifest = ManifestFileName();\n-  Open();\n-  ASSERT_EQ(old_manifest, ManifestFileName());\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-  Open();\n-  ASSERT_EQ(old_manifest, ManifestFileName());\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-}\n-\n-TEST(RecoveryTest, LargeManifestCompacted) {\n-  if (!CanAppend()) {\n-    fprintf(stderr, \"skipping test because env does not support appending\\n\");\n-    return;\n-  }\n-  ASSERT_OK(Put(\"foo\", \"bar\"));\n-  Close();\n-  std::string old_manifest = ManifestFileName();\n-\n-  // Pad with zeroes to make manifest file very big.\n-  {\n-    uint64_t len = FileSize(old_manifest);\n-    WritableFile* file;\n-    ASSERT_OK(env()->NewAppendableFile(old_manifest, &file));\n-    std::string zeroes(3*1048576 - static_cast<size_t>(len), 0);\n-    ASSERT_OK(file->Append(zeroes));\n-    ASSERT_OK(file->Flush());\n-    delete file;\n-  }\n-\n-  Open();\n-  std::string new_manifest = ManifestFileName();\n-  ASSERT_NE(old_manifest, new_manifest);\n-  ASSERT_GT(10000, FileSize(new_manifest));\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-\n-  Open();\n-  ASSERT_EQ(new_manifest, ManifestFileName());\n-  ASSERT_EQ(\"bar\", Get(\"foo\"));\n-}\n-\n-TEST(RecoveryTest, NoLogFiles) {\n-  ASSERT_OK(Put(\"foo\", \"bar\"));\n-  ASSERT_EQ(1, DeleteLogFiles());\n-  Open();\n-  ASSERT_EQ(\"NOT_FOUND\", Get(\"foo\"));\n-  Open();\n-  ASSERT_EQ(\"NOT_FOUND\", Get(\"foo\"));\n-}\n-\n-TEST(RecoveryTest, LogFileReuse) {\n-  if (!CanAppend()) {\n-    fprintf(stderr, \"skipping test because env does not support appending\\n\");\n-    return;\n-  }\n-  for (int i = 0; i < 2; i++) {\n-    ASSERT_OK(Put(\"foo\", \"bar\"));\n-    if (i == 0) {\n-      // Compact to ensure current log is empty\n-      CompactMemTable();\n-    }\n-    Close();\n-    ASSERT_EQ(1, NumLogs());\n-    uint64_t number = FirstLogFile();\n-    if (i == 0) {\n-      ASSERT_EQ(0, FileSize(LogName(number)));\n-    } else {\n-      ASSERT_LT(0, FileSize(LogName(number)));\n-    }\n-    Open();\n-    ASSERT_EQ(1, NumLogs());\n-    ASSERT_EQ(number, FirstLogFile()) << \"did not reuse log file\";\n-    ASSERT_EQ(\"bar\", Get(\"foo\"));\n-    Open();\n-    ASSERT_EQ(1, NumLogs());\n-    ASSERT_EQ(number, FirstLogFile()) << \"did not reuse log file\";\n-    ASSERT_EQ(\"bar\", Get(\"foo\"));\n-  }\n-}\n-\n-TEST(RecoveryTest, MultipleMemTables) {\n-  // Make a large log.\n-  const int kNum = 1000;\n-  for (int i = 0; i < kNum; i++) {\n-    char buf[100];\n-    snprintf(buf, sizeof(buf), \"%050d\", i);\n-    ASSERT_OK(Put(buf, buf));\n-  }\n-  ASSERT_EQ(0, NumTables());\n-  Close();\n-  ASSERT_EQ(0, NumTables());\n-  ASSERT_EQ(1, NumLogs());\n-  uint64_t old_log_file = FirstLogFile();\n-\n-  // Force creation of multiple memtables by reducing the write buffer size.\n-  Options opt;\n-  opt.reuse_logs = true;\n-  opt.write_buffer_size = (kNum*100) / 2;\n-  Open(&opt);\n-  ASSERT_LE(2, NumTables());\n-  ASSERT_EQ(1, NumLogs());\n-  ASSERT_NE(old_log_file, FirstLogFile()) << \"must not reuse log\";\n-  for (int i = 0; i < kNum; i++) {\n-    char buf[100];\n-    snprintf(buf, sizeof(buf), \"%050d\", i);\n-    ASSERT_EQ(buf, Get(buf));\n-  }\n-}\n-\n-TEST(RecoveryTest, MultipleLogFiles) {\n-  ASSERT_OK(Put(\"foo\", \"bar\"));\n-  Close();\n-  ASSERT_EQ(1, NumLogs());\n-\n-  // Make a bunch of uncompacted log files.\n-  uint64_t old_log = FirstLogFile();\n-  MakeLogFile(old_log+1, 1000, \"hello\", \"world\");\n-  MakeLogFile(old_log+2, 1001, \"hi\", \"there\");\n-  MakeLogFile(old_log+3, 1002, \"foo\", \"bar2\");\n-\n-  // Recover and check that all log files were processed.\n-  Open();\n-  ASSERT_LE(1, NumTables());\n-  ASSERT_EQ(1, NumLogs());\n-  uint64_t new_log = FirstLogFile();\n-  ASSERT_LE(old_log+3, new_log);\n-  ASSERT_EQ(\"bar2\", Get(\"foo\"));\n-  ASSERT_EQ(\"world\", Get(\"hello\"));\n-  ASSERT_EQ(\"there\", Get(\"hi\"));\n-\n-  // Test that previous recovery produced recoverable state.\n-  Open();\n-  ASSERT_LE(1, NumTables());\n-  ASSERT_EQ(1, NumLogs());\n-  if (CanAppend()) {\n-    ASSERT_EQ(new_log, FirstLogFile());\n-  }\n-  ASSERT_EQ(\"bar2\", Get(\"foo\"));\n-  ASSERT_EQ(\"world\", Get(\"hello\"));\n-  ASSERT_EQ(\"there\", Get(\"hi\"));\n-\n-  // Check that introducing an older log file does not cause it to be re-read.\n-  Close();\n-  MakeLogFile(old_log+1, 2000, \"hello\", \"stale write\");\n-  Open();\n-  ASSERT_LE(1, NumTables());\n-  ASSERT_EQ(1, NumLogs());\n-  if (CanAppend()) {\n-    ASSERT_EQ(new_log, FirstLogFile());\n-  }\n-  ASSERT_EQ(\"bar2\", Get(\"foo\"));\n-  ASSERT_EQ(\"world\", Get(\"hello\"));\n-  ASSERT_EQ(\"there\", Get(\"hi\"));\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "4cd4bb047f483ad211a05bdd98201c6df1bfa87a",
        "filename": "src/leveldb/db/repair.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 461,
        "changes": 461,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/repair.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/repair.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/repair.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,461 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// We recover the contents of the descriptor from the other files we find.\n-// (1) Any log files are first converted to tables\n-// (2) We scan every table to compute\n-//     (a) smallest/largest for the table\n-//     (b) largest sequence number in the table\n-// (3) We generate descriptor contents:\n-//      - log number is set to zero\n-//      - next-file-number is set to 1 + largest file number we found\n-//      - last-sequence-number is set to largest sequence# found across\n-//        all tables (see 2c)\n-//      - compaction pointers are cleared\n-//      - every table file is added at level 0\n-//\n-// Possible optimization 1:\n-//   (a) Compute total size and use to pick appropriate max-level M\n-//   (b) Sort tables by largest sequence# in the table\n-//   (c) For each table: if it overlaps earlier table, place in level-0,\n-//       else place in level-M.\n-// Possible optimization 2:\n-//   Store per-table metadata (smallest, largest, largest-seq#, ...)\n-//   in the table's meta section to speed up ScanTable.\n-\n-#include \"db/builder.h\"\n-#include \"db/db_impl.h\"\n-#include \"db/dbformat.h\"\n-#include \"db/filename.h\"\n-#include \"db/log_reader.h\"\n-#include \"db/log_writer.h\"\n-#include \"db/memtable.h\"\n-#include \"db/table_cache.h\"\n-#include \"db/version_edit.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"leveldb/comparator.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-\n-namespace leveldb {\n-\n-namespace {\n-\n-class Repairer {\n- public:\n-  Repairer(const std::string& dbname, const Options& options)\n-      : dbname_(dbname),\n-        env_(options.env),\n-        icmp_(options.comparator),\n-        ipolicy_(options.filter_policy),\n-        options_(SanitizeOptions(dbname, &icmp_, &ipolicy_, options)),\n-        owns_info_log_(options_.info_log != options.info_log),\n-        owns_cache_(options_.block_cache != options.block_cache),\n-        next_file_number_(1) {\n-    // TableCache can be small since we expect each table to be opened once.\n-    table_cache_ = new TableCache(dbname_, &options_, 10);\n-  }\n-\n-  ~Repairer() {\n-    delete table_cache_;\n-    if (owns_info_log_) {\n-      delete options_.info_log;\n-    }\n-    if (owns_cache_) {\n-      delete options_.block_cache;\n-    }\n-  }\n-\n-  Status Run() {\n-    Status status = FindFiles();\n-    if (status.ok()) {\n-      ConvertLogFilesToTables();\n-      ExtractMetaData();\n-      status = WriteDescriptor();\n-    }\n-    if (status.ok()) {\n-      unsigned long long bytes = 0;\n-      for (size_t i = 0; i < tables_.size(); i++) {\n-        bytes += tables_[i].meta.file_size;\n-      }\n-      Log(options_.info_log,\n-          \"**** Repaired leveldb %s; \"\n-          \"recovered %d files; %llu bytes. \"\n-          \"Some data may have been lost. \"\n-          \"****\",\n-          dbname_.c_str(),\n-          static_cast<int>(tables_.size()),\n-          bytes);\n-    }\n-    return status;\n-  }\n-\n- private:\n-  struct TableInfo {\n-    FileMetaData meta;\n-    SequenceNumber max_sequence;\n-  };\n-\n-  std::string const dbname_;\n-  Env* const env_;\n-  InternalKeyComparator const icmp_;\n-  InternalFilterPolicy const ipolicy_;\n-  Options const options_;\n-  bool owns_info_log_;\n-  bool owns_cache_;\n-  TableCache* table_cache_;\n-  VersionEdit edit_;\n-\n-  std::vector<std::string> manifests_;\n-  std::vector<uint64_t> table_numbers_;\n-  std::vector<uint64_t> logs_;\n-  std::vector<TableInfo> tables_;\n-  uint64_t next_file_number_;\n-\n-  Status FindFiles() {\n-    std::vector<std::string> filenames;\n-    Status status = env_->GetChildren(dbname_, &filenames);\n-    if (!status.ok()) {\n-      return status;\n-    }\n-    if (filenames.empty()) {\n-      return Status::IOError(dbname_, \"repair found no files\");\n-    }\n-\n-    uint64_t number;\n-    FileType type;\n-    for (size_t i = 0; i < filenames.size(); i++) {\n-      if (ParseFileName(filenames[i], &number, &type)) {\n-        if (type == kDescriptorFile) {\n-          manifests_.push_back(filenames[i]);\n-        } else {\n-          if (number + 1 > next_file_number_) {\n-            next_file_number_ = number + 1;\n-          }\n-          if (type == kLogFile) {\n-            logs_.push_back(number);\n-          } else if (type == kTableFile) {\n-            table_numbers_.push_back(number);\n-          } else {\n-            // Ignore other files\n-          }\n-        }\n-      }\n-    }\n-    return status;\n-  }\n-\n-  void ConvertLogFilesToTables() {\n-    for (size_t i = 0; i < logs_.size(); i++) {\n-      std::string logname = LogFileName(dbname_, logs_[i]);\n-      Status status = ConvertLogToTable(logs_[i]);\n-      if (!status.ok()) {\n-        Log(options_.info_log, \"Log #%llu: ignoring conversion error: %s\",\n-            (unsigned long long) logs_[i],\n-            status.ToString().c_str());\n-      }\n-      ArchiveFile(logname);\n-    }\n-  }\n-\n-  Status ConvertLogToTable(uint64_t log) {\n-    struct LogReporter : public log::Reader::Reporter {\n-      Env* env;\n-      Logger* info_log;\n-      uint64_t lognum;\n-      virtual void Corruption(size_t bytes, const Status& s) {\n-        // We print error messages for corruption, but continue repairing.\n-        Log(info_log, \"Log #%llu: dropping %d bytes; %s\",\n-            (unsigned long long) lognum,\n-            static_cast<int>(bytes),\n-            s.ToString().c_str());\n-      }\n-    };\n-\n-    // Open the log file\n-    std::string logname = LogFileName(dbname_, log);\n-    SequentialFile* lfile;\n-    Status status = env_->NewSequentialFile(logname, &lfile);\n-    if (!status.ok()) {\n-      return status;\n-    }\n-\n-    // Create the log reader.\n-    LogReporter reporter;\n-    reporter.env = env_;\n-    reporter.info_log = options_.info_log;\n-    reporter.lognum = log;\n-    // We intentionally make log::Reader do checksumming so that\n-    // corruptions cause entire commits to be skipped instead of\n-    // propagating bad information (like overly large sequence\n-    // numbers).\n-    log::Reader reader(lfile, &reporter, false/*do not checksum*/,\n-                       0/*initial_offset*/);\n-\n-    // Read all the records and add to a memtable\n-    std::string scratch;\n-    Slice record;\n-    WriteBatch batch;\n-    MemTable* mem = new MemTable(icmp_);\n-    mem->Ref();\n-    int counter = 0;\n-    while (reader.ReadRecord(&record, &scratch)) {\n-      if (record.size() < 12) {\n-        reporter.Corruption(\n-            record.size(), Status::Corruption(\"log record too small\"));\n-        continue;\n-      }\n-      WriteBatchInternal::SetContents(&batch, record);\n-      status = WriteBatchInternal::InsertInto(&batch, mem);\n-      if (status.ok()) {\n-        counter += WriteBatchInternal::Count(&batch);\n-      } else {\n-        Log(options_.info_log, \"Log #%llu: ignoring %s\",\n-            (unsigned long long) log,\n-            status.ToString().c_str());\n-        status = Status::OK();  // Keep going with rest of file\n-      }\n-    }\n-    delete lfile;\n-\n-    // Do not record a version edit for this conversion to a Table\n-    // since ExtractMetaData() will also generate edits.\n-    FileMetaData meta;\n-    meta.number = next_file_number_++;\n-    Iterator* iter = mem->NewIterator();\n-    status = BuildTable(dbname_, env_, options_, table_cache_, iter, &meta);\n-    delete iter;\n-    mem->Unref();\n-    mem = NULL;\n-    if (status.ok()) {\n-      if (meta.file_size > 0) {\n-        table_numbers_.push_back(meta.number);\n-      }\n-    }\n-    Log(options_.info_log, \"Log #%llu: %d ops saved to Table #%llu %s\",\n-        (unsigned long long) log,\n-        counter,\n-        (unsigned long long) meta.number,\n-        status.ToString().c_str());\n-    return status;\n-  }\n-\n-  void ExtractMetaData() {\n-    for (size_t i = 0; i < table_numbers_.size(); i++) {\n-      ScanTable(table_numbers_[i]);\n-    }\n-  }\n-\n-  Iterator* NewTableIterator(const FileMetaData& meta) {\n-    // Same as compaction iterators: if paranoid_checks are on, turn\n-    // on checksum verification.\n-    ReadOptions r;\n-    r.verify_checksums = options_.paranoid_checks;\n-    return table_cache_->NewIterator(r, meta.number, meta.file_size);\n-  }\n-\n-  void ScanTable(uint64_t number) {\n-    TableInfo t;\n-    t.meta.number = number;\n-    std::string fname = TableFileName(dbname_, number);\n-    Status status = env_->GetFileSize(fname, &t.meta.file_size);\n-    if (!status.ok()) {\n-      // Try alternate file name.\n-      fname = SSTTableFileName(dbname_, number);\n-      Status s2 = env_->GetFileSize(fname, &t.meta.file_size);\n-      if (s2.ok()) {\n-        status = Status::OK();\n-      }\n-    }\n-    if (!status.ok()) {\n-      ArchiveFile(TableFileName(dbname_, number));\n-      ArchiveFile(SSTTableFileName(dbname_, number));\n-      Log(options_.info_log, \"Table #%llu: dropped: %s\",\n-          (unsigned long long) t.meta.number,\n-          status.ToString().c_str());\n-      return;\n-    }\n-\n-    // Extract metadata by scanning through table.\n-    int counter = 0;\n-    Iterator* iter = NewTableIterator(t.meta);\n-    bool empty = true;\n-    ParsedInternalKey parsed;\n-    t.max_sequence = 0;\n-    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-      Slice key = iter->key();\n-      if (!ParseInternalKey(key, &parsed)) {\n-        Log(options_.info_log, \"Table #%llu: unparsable key %s\",\n-            (unsigned long long) t.meta.number,\n-            EscapeString(key).c_str());\n-        continue;\n-      }\n-\n-      counter++;\n-      if (empty) {\n-        empty = false;\n-        t.meta.smallest.DecodeFrom(key);\n-      }\n-      t.meta.largest.DecodeFrom(key);\n-      if (parsed.sequence > t.max_sequence) {\n-        t.max_sequence = parsed.sequence;\n-      }\n-    }\n-    if (!iter->status().ok()) {\n-      status = iter->status();\n-    }\n-    delete iter;\n-    Log(options_.info_log, \"Table #%llu: %d entries %s\",\n-        (unsigned long long) t.meta.number,\n-        counter,\n-        status.ToString().c_str());\n-\n-    if (status.ok()) {\n-      tables_.push_back(t);\n-    } else {\n-      RepairTable(fname, t);  // RepairTable archives input file.\n-    }\n-  }\n-\n-  void RepairTable(const std::string& src, TableInfo t) {\n-    // We will copy src contents to a new table and then rename the\n-    // new table over the source.\n-\n-    // Create builder.\n-    std::string copy = TableFileName(dbname_, next_file_number_++);\n-    WritableFile* file;\n-    Status s = env_->NewWritableFile(copy, &file);\n-    if (!s.ok()) {\n-      return;\n-    }\n-    TableBuilder* builder = new TableBuilder(options_, file);\n-\n-    // Copy data.\n-    Iterator* iter = NewTableIterator(t.meta);\n-    int counter = 0;\n-    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-      builder->Add(iter->key(), iter->value());\n-      counter++;\n-    }\n-    delete iter;\n-\n-    ArchiveFile(src);\n-    if (counter == 0) {\n-      builder->Abandon();  // Nothing to save\n-    } else {\n-      s = builder->Finish();\n-      if (s.ok()) {\n-        t.meta.file_size = builder->FileSize();\n-      }\n-    }\n-    delete builder;\n-    builder = NULL;\n-\n-    if (s.ok()) {\n-      s = file->Close();\n-    }\n-    delete file;\n-    file = NULL;\n-\n-    if (counter > 0 && s.ok()) {\n-      std::string orig = TableFileName(dbname_, t.meta.number);\n-      s = env_->RenameFile(copy, orig);\n-      if (s.ok()) {\n-        Log(options_.info_log, \"Table #%llu: %d entries repaired\",\n-            (unsigned long long) t.meta.number, counter);\n-        tables_.push_back(t);\n-      }\n-    }\n-    if (!s.ok()) {\n-      env_->DeleteFile(copy);\n-    }\n-  }\n-\n-  Status WriteDescriptor() {\n-    std::string tmp = TempFileName(dbname_, 1);\n-    WritableFile* file;\n-    Status status = env_->NewWritableFile(tmp, &file);\n-    if (!status.ok()) {\n-      return status;\n-    }\n-\n-    SequenceNumber max_sequence = 0;\n-    for (size_t i = 0; i < tables_.size(); i++) {\n-      if (max_sequence < tables_[i].max_sequence) {\n-        max_sequence = tables_[i].max_sequence;\n-      }\n-    }\n-\n-    edit_.SetComparatorName(icmp_.user_comparator()->Name());\n-    edit_.SetLogNumber(0);\n-    edit_.SetNextFile(next_file_number_);\n-    edit_.SetLastSequence(max_sequence);\n-\n-    for (size_t i = 0; i < tables_.size(); i++) {\n-      // TODO(opt): separate out into multiple levels\n-      const TableInfo& t = tables_[i];\n-      edit_.AddFile(0, t.meta.number, t.meta.file_size,\n-                    t.meta.smallest, t.meta.largest);\n-    }\n-\n-    //fprintf(stderr, \"NewDescriptor:\\n%s\\n\", edit_.DebugString().c_str());\n-    {\n-      log::Writer log(file);\n-      std::string record;\n-      edit_.EncodeTo(&record);\n-      status = log.AddRecord(record);\n-    }\n-    if (status.ok()) {\n-      status = file->Close();\n-    }\n-    delete file;\n-    file = NULL;\n-\n-    if (!status.ok()) {\n-      env_->DeleteFile(tmp);\n-    } else {\n-      // Discard older manifests\n-      for (size_t i = 0; i < manifests_.size(); i++) {\n-        ArchiveFile(dbname_ + \"/\" + manifests_[i]);\n-      }\n-\n-      // Install new manifest\n-      status = env_->RenameFile(tmp, DescriptorFileName(dbname_, 1));\n-      if (status.ok()) {\n-        status = SetCurrentFile(env_, dbname_, 1);\n-      } else {\n-        env_->DeleteFile(tmp);\n-      }\n-    }\n-    return status;\n-  }\n-\n-  void ArchiveFile(const std::string& fname) {\n-    // Move into another directory.  E.g., for\n-    //    dir/foo\n-    // rename to\n-    //    dir/lost/foo\n-    const char* slash = strrchr(fname.c_str(), '/');\n-    std::string new_dir;\n-    if (slash != NULL) {\n-      new_dir.assign(fname.data(), slash - fname.data());\n-    }\n-    new_dir.append(\"/lost\");\n-    env_->CreateDir(new_dir);  // Ignore error\n-    std::string new_file = new_dir;\n-    new_file.append(\"/\");\n-    new_file.append((slash == NULL) ? fname.c_str() : slash + 1);\n-    Status s = env_->RenameFile(fname, new_file);\n-    Log(options_.info_log, \"Archiving %s: %s\\n\",\n-        fname.c_str(), s.ToString().c_str());\n-  }\n-};\n-}  // namespace\n-\n-Status RepairDB(const std::string& dbname, const Options& options) {\n-  Repairer repairer(dbname, options);\n-  return repairer.Run();\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "8bd77764d8fb37b9887dcf83edffa83b6e941c23",
        "filename": "src/leveldb/db/skiplist.h",
        "status": "removed",
        "additions": 0,
        "deletions": 384,
        "changes": 384,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/skiplist.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/skiplist.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/skiplist.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,384 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_SKIPLIST_H_\n-#define STORAGE_LEVELDB_DB_SKIPLIST_H_\n-\n-// Thread safety\n-// -------------\n-//\n-// Writes require external synchronization, most likely a mutex.\n-// Reads require a guarantee that the SkipList will not be destroyed\n-// while the read is in progress.  Apart from that, reads progress\n-// without any internal locking or synchronization.\n-//\n-// Invariants:\n-//\n-// (1) Allocated nodes are never deleted until the SkipList is\n-// destroyed.  This is trivially guaranteed by the code since we\n-// never delete any skip list nodes.\n-//\n-// (2) The contents of a Node except for the next/prev pointers are\n-// immutable after the Node has been linked into the SkipList.\n-// Only Insert() modifies the list, and it is careful to initialize\n-// a node and use release-stores to publish the nodes in one or\n-// more lists.\n-//\n-// ... prev vs. next pointer ordering ...\n-\n-#include <assert.h>\n-#include <stdlib.h>\n-#include \"port/port.h\"\n-#include \"util/arena.h\"\n-#include \"util/random.h\"\n-\n-namespace leveldb {\n-\n-class Arena;\n-\n-template<typename Key, class Comparator>\n-class SkipList {\n- private:\n-  struct Node;\n-\n- public:\n-  // Create a new SkipList object that will use \"cmp\" for comparing keys,\n-  // and will allocate memory using \"*arena\".  Objects allocated in the arena\n-  // must remain allocated for the lifetime of the skiplist object.\n-  explicit SkipList(Comparator cmp, Arena* arena);\n-\n-  // Insert key into the list.\n-  // REQUIRES: nothing that compares equal to key is currently in the list.\n-  void Insert(const Key& key);\n-\n-  // Returns true iff an entry that compares equal to key is in the list.\n-  bool Contains(const Key& key) const;\n-\n-  // Iteration over the contents of a skip list\n-  class Iterator {\n-   public:\n-    // Initialize an iterator over the specified list.\n-    // The returned iterator is not valid.\n-    explicit Iterator(const SkipList* list);\n-\n-    // Returns true iff the iterator is positioned at a valid node.\n-    bool Valid() const;\n-\n-    // Returns the key at the current position.\n-    // REQUIRES: Valid()\n-    const Key& key() const;\n-\n-    // Advances to the next position.\n-    // REQUIRES: Valid()\n-    void Next();\n-\n-    // Advances to the previous position.\n-    // REQUIRES: Valid()\n-    void Prev();\n-\n-    // Advance to the first entry with a key >= target\n-    void Seek(const Key& target);\n-\n-    // Position at the first entry in list.\n-    // Final state of iterator is Valid() iff list is not empty.\n-    void SeekToFirst();\n-\n-    // Position at the last entry in list.\n-    // Final state of iterator is Valid() iff list is not empty.\n-    void SeekToLast();\n-\n-   private:\n-    const SkipList* list_;\n-    Node* node_;\n-    // Intentionally copyable\n-  };\n-\n- private:\n-  enum { kMaxHeight = 12 };\n-\n-  // Immutable after construction\n-  Comparator const compare_;\n-  Arena* const arena_;    // Arena used for allocations of nodes\n-\n-  Node* const head_;\n-\n-  // Modified only by Insert().  Read racily by readers, but stale\n-  // values are ok.\n-  port::AtomicPointer max_height_;   // Height of the entire list\n-\n-  inline int GetMaxHeight() const {\n-    return static_cast<int>(\n-        reinterpret_cast<intptr_t>(max_height_.NoBarrier_Load()));\n-  }\n-\n-  // Read/written only by Insert().\n-  Random rnd_;\n-\n-  Node* NewNode(const Key& key, int height);\n-  int RandomHeight();\n-  bool Equal(const Key& a, const Key& b) const { return (compare_(a, b) == 0); }\n-\n-  // Return true if key is greater than the data stored in \"n\"\n-  bool KeyIsAfterNode(const Key& key, Node* n) const;\n-\n-  // Return the earliest node that comes at or after key.\n-  // Return NULL if there is no such node.\n-  //\n-  // If prev is non-NULL, fills prev[level] with pointer to previous\n-  // node at \"level\" for every level in [0..max_height_-1].\n-  Node* FindGreaterOrEqual(const Key& key, Node** prev) const;\n-\n-  // Return the latest node with a key < key.\n-  // Return head_ if there is no such node.\n-  Node* FindLessThan(const Key& key) const;\n-\n-  // Return the last node in the list.\n-  // Return head_ if list is empty.\n-  Node* FindLast() const;\n-\n-  // No copying allowed\n-  SkipList(const SkipList&);\n-  void operator=(const SkipList&);\n-};\n-\n-// Implementation details follow\n-template<typename Key, class Comparator>\n-struct SkipList<Key,Comparator>::Node {\n-  explicit Node(const Key& k) : key(k) { }\n-\n-  Key const key;\n-\n-  // Accessors/mutators for links.  Wrapped in methods so we can\n-  // add the appropriate barriers as necessary.\n-  Node* Next(int n) {\n-    assert(n >= 0);\n-    // Use an 'acquire load' so that we observe a fully initialized\n-    // version of the returned Node.\n-    return reinterpret_cast<Node*>(next_[n].Acquire_Load());\n-  }\n-  void SetNext(int n, Node* x) {\n-    assert(n >= 0);\n-    // Use a 'release store' so that anybody who reads through this\n-    // pointer observes a fully initialized version of the inserted node.\n-    next_[n].Release_Store(x);\n-  }\n-\n-  // No-barrier variants that can be safely used in a few locations.\n-  Node* NoBarrier_Next(int n) {\n-    assert(n >= 0);\n-    return reinterpret_cast<Node*>(next_[n].NoBarrier_Load());\n-  }\n-  void NoBarrier_SetNext(int n, Node* x) {\n-    assert(n >= 0);\n-    next_[n].NoBarrier_Store(x);\n-  }\n-\n- private:\n-  // Array of length equal to the node height.  next_[0] is lowest level link.\n-  port::AtomicPointer next_[1];\n-};\n-\n-template<typename Key, class Comparator>\n-typename SkipList<Key,Comparator>::Node*\n-SkipList<Key,Comparator>::NewNode(const Key& key, int height) {\n-  char* mem = arena_->AllocateAligned(\n-      sizeof(Node) + sizeof(port::AtomicPointer) * (height - 1));\n-  return new (mem) Node(key);\n-}\n-\n-template<typename Key, class Comparator>\n-inline SkipList<Key,Comparator>::Iterator::Iterator(const SkipList* list) {\n-  list_ = list;\n-  node_ = NULL;\n-}\n-\n-template<typename Key, class Comparator>\n-inline bool SkipList<Key,Comparator>::Iterator::Valid() const {\n-  return node_ != NULL;\n-}\n-\n-template<typename Key, class Comparator>\n-inline const Key& SkipList<Key,Comparator>::Iterator::key() const {\n-  assert(Valid());\n-  return node_->key;\n-}\n-\n-template<typename Key, class Comparator>\n-inline void SkipList<Key,Comparator>::Iterator::Next() {\n-  assert(Valid());\n-  node_ = node_->Next(0);\n-}\n-\n-template<typename Key, class Comparator>\n-inline void SkipList<Key,Comparator>::Iterator::Prev() {\n-  // Instead of using explicit \"prev\" links, we just search for the\n-  // last node that falls before key.\n-  assert(Valid());\n-  node_ = list_->FindLessThan(node_->key);\n-  if (node_ == list_->head_) {\n-    node_ = NULL;\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-inline void SkipList<Key,Comparator>::Iterator::Seek(const Key& target) {\n-  node_ = list_->FindGreaterOrEqual(target, NULL);\n-}\n-\n-template<typename Key, class Comparator>\n-inline void SkipList<Key,Comparator>::Iterator::SeekToFirst() {\n-  node_ = list_->head_->Next(0);\n-}\n-\n-template<typename Key, class Comparator>\n-inline void SkipList<Key,Comparator>::Iterator::SeekToLast() {\n-  node_ = list_->FindLast();\n-  if (node_ == list_->head_) {\n-    node_ = NULL;\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-int SkipList<Key,Comparator>::RandomHeight() {\n-  // Increase height with probability 1 in kBranching\n-  static const unsigned int kBranching = 4;\n-  int height = 1;\n-  while (height < kMaxHeight && ((rnd_.Next() % kBranching) == 0)) {\n-    height++;\n-  }\n-  assert(height > 0);\n-  assert(height <= kMaxHeight);\n-  return height;\n-}\n-\n-template<typename Key, class Comparator>\n-bool SkipList<Key,Comparator>::KeyIsAfterNode(const Key& key, Node* n) const {\n-  // NULL n is considered infinite\n-  return (n != NULL) && (compare_(n->key, key) < 0);\n-}\n-\n-template<typename Key, class Comparator>\n-typename SkipList<Key,Comparator>::Node* SkipList<Key,Comparator>::FindGreaterOrEqual(const Key& key, Node** prev)\n-    const {\n-  Node* x = head_;\n-  int level = GetMaxHeight() - 1;\n-  while (true) {\n-    Node* next = x->Next(level);\n-    if (KeyIsAfterNode(key, next)) {\n-      // Keep searching in this list\n-      x = next;\n-    } else {\n-      if (prev != NULL) prev[level] = x;\n-      if (level == 0) {\n-        return next;\n-      } else {\n-        // Switch to next list\n-        level--;\n-      }\n-    }\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-typename SkipList<Key,Comparator>::Node*\n-SkipList<Key,Comparator>::FindLessThan(const Key& key) const {\n-  Node* x = head_;\n-  int level = GetMaxHeight() - 1;\n-  while (true) {\n-    assert(x == head_ || compare_(x->key, key) < 0);\n-    Node* next = x->Next(level);\n-    if (next == NULL || compare_(next->key, key) >= 0) {\n-      if (level == 0) {\n-        return x;\n-      } else {\n-        // Switch to next list\n-        level--;\n-      }\n-    } else {\n-      x = next;\n-    }\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-typename SkipList<Key,Comparator>::Node* SkipList<Key,Comparator>::FindLast()\n-    const {\n-  Node* x = head_;\n-  int level = GetMaxHeight() - 1;\n-  while (true) {\n-    Node* next = x->Next(level);\n-    if (next == NULL) {\n-      if (level == 0) {\n-        return x;\n-      } else {\n-        // Switch to next list\n-        level--;\n-      }\n-    } else {\n-      x = next;\n-    }\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-SkipList<Key,Comparator>::SkipList(Comparator cmp, Arena* arena)\n-    : compare_(cmp),\n-      arena_(arena),\n-      head_(NewNode(0 /* any key will do */, kMaxHeight)),\n-      max_height_(reinterpret_cast<void*>(1)),\n-      rnd_(0xdeadbeef) {\n-  for (int i = 0; i < kMaxHeight; i++) {\n-    head_->SetNext(i, NULL);\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-void SkipList<Key,Comparator>::Insert(const Key& key) {\n-  // TODO(opt): We can use a barrier-free variant of FindGreaterOrEqual()\n-  // here since Insert() is externally synchronized.\n-  Node* prev[kMaxHeight];\n-  Node* x = FindGreaterOrEqual(key, prev);\n-\n-  // Our data structure does not allow duplicate insertion\n-  assert(x == NULL || !Equal(key, x->key));\n-\n-  int height = RandomHeight();\n-  if (height > GetMaxHeight()) {\n-    for (int i = GetMaxHeight(); i < height; i++) {\n-      prev[i] = head_;\n-    }\n-    //fprintf(stderr, \"Change height from %d to %d\\n\", max_height_, height);\n-\n-    // It is ok to mutate max_height_ without any synchronization\n-    // with concurrent readers.  A concurrent reader that observes\n-    // the new value of max_height_ will see either the old value of\n-    // new level pointers from head_ (NULL), or a new value set in\n-    // the loop below.  In the former case the reader will\n-    // immediately drop to the next level since NULL sorts after all\n-    // keys.  In the latter case the reader will use the new node.\n-    max_height_.NoBarrier_Store(reinterpret_cast<void*>(height));\n-  }\n-\n-  x = NewNode(key, height);\n-  for (int i = 0; i < height; i++) {\n-    // NoBarrier_SetNext() suffices since we will add a barrier when\n-    // we publish a pointer to \"x\" in prev[i].\n-    x->NoBarrier_SetNext(i, prev[i]->NoBarrier_Next(i));\n-    prev[i]->SetNext(i, x);\n-  }\n-}\n-\n-template<typename Key, class Comparator>\n-bool SkipList<Key,Comparator>::Contains(const Key& key) const {\n-  Node* x = FindGreaterOrEqual(key, NULL);\n-  if (x != NULL && Equal(key, x->key)) {\n-    return true;\n-  } else {\n-    return false;\n-  }\n-}\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_SKIPLIST_H_"
      },
      {
        "sha": "aee1461e1b256a527b8960da59a98fda7e345d4e",
        "filename": "src/leveldb/db/skiplist_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 378,
        "changes": 378,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/skiplist_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/skiplist_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/skiplist_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,378 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/skiplist.h\"\n-#include <set>\n-#include \"leveldb/env.h\"\n-#include \"util/arena.h\"\n-#include \"util/hash.h\"\n-#include \"util/random.h\"\n-#include \"util/testharness.h\"\n-\n-namespace leveldb {\n-\n-typedef uint64_t Key;\n-\n-struct Comparator {\n-  int operator()(const Key& a, const Key& b) const {\n-    if (a < b) {\n-      return -1;\n-    } else if (a > b) {\n-      return +1;\n-    } else {\n-      return 0;\n-    }\n-  }\n-};\n-\n-class SkipTest { };\n-\n-TEST(SkipTest, Empty) {\n-  Arena arena;\n-  Comparator cmp;\n-  SkipList<Key, Comparator> list(cmp, &arena);\n-  ASSERT_TRUE(!list.Contains(10));\n-\n-  SkipList<Key, Comparator>::Iterator iter(&list);\n-  ASSERT_TRUE(!iter.Valid());\n-  iter.SeekToFirst();\n-  ASSERT_TRUE(!iter.Valid());\n-  iter.Seek(100);\n-  ASSERT_TRUE(!iter.Valid());\n-  iter.SeekToLast();\n-  ASSERT_TRUE(!iter.Valid());\n-}\n-\n-TEST(SkipTest, InsertAndLookup) {\n-  const int N = 2000;\n-  const int R = 5000;\n-  Random rnd(1000);\n-  std::set<Key> keys;\n-  Arena arena;\n-  Comparator cmp;\n-  SkipList<Key, Comparator> list(cmp, &arena);\n-  for (int i = 0; i < N; i++) {\n-    Key key = rnd.Next() % R;\n-    if (keys.insert(key).second) {\n-      list.Insert(key);\n-    }\n-  }\n-\n-  for (int i = 0; i < R; i++) {\n-    if (list.Contains(i)) {\n-      ASSERT_EQ(keys.count(i), 1);\n-    } else {\n-      ASSERT_EQ(keys.count(i), 0);\n-    }\n-  }\n-\n-  // Simple iterator tests\n-  {\n-    SkipList<Key, Comparator>::Iterator iter(&list);\n-    ASSERT_TRUE(!iter.Valid());\n-\n-    iter.Seek(0);\n-    ASSERT_TRUE(iter.Valid());\n-    ASSERT_EQ(*(keys.begin()), iter.key());\n-\n-    iter.SeekToFirst();\n-    ASSERT_TRUE(iter.Valid());\n-    ASSERT_EQ(*(keys.begin()), iter.key());\n-\n-    iter.SeekToLast();\n-    ASSERT_TRUE(iter.Valid());\n-    ASSERT_EQ(*(keys.rbegin()), iter.key());\n-  }\n-\n-  // Forward iteration test\n-  for (int i = 0; i < R; i++) {\n-    SkipList<Key, Comparator>::Iterator iter(&list);\n-    iter.Seek(i);\n-\n-    // Compare against model iterator\n-    std::set<Key>::iterator model_iter = keys.lower_bound(i);\n-    for (int j = 0; j < 3; j++) {\n-      if (model_iter == keys.end()) {\n-        ASSERT_TRUE(!iter.Valid());\n-        break;\n-      } else {\n-        ASSERT_TRUE(iter.Valid());\n-        ASSERT_EQ(*model_iter, iter.key());\n-        ++model_iter;\n-        iter.Next();\n-      }\n-    }\n-  }\n-\n-  // Backward iteration test\n-  {\n-    SkipList<Key, Comparator>::Iterator iter(&list);\n-    iter.SeekToLast();\n-\n-    // Compare against model iterator\n-    for (std::set<Key>::reverse_iterator model_iter = keys.rbegin();\n-         model_iter != keys.rend();\n-         ++model_iter) {\n-      ASSERT_TRUE(iter.Valid());\n-      ASSERT_EQ(*model_iter, iter.key());\n-      iter.Prev();\n-    }\n-    ASSERT_TRUE(!iter.Valid());\n-  }\n-}\n-\n-// We want to make sure that with a single writer and multiple\n-// concurrent readers (with no synchronization other than when a\n-// reader's iterator is created), the reader always observes all the\n-// data that was present in the skip list when the iterator was\n-// constructor.  Because insertions are happening concurrently, we may\n-// also observe new values that were inserted since the iterator was\n-// constructed, but we should never miss any values that were present\n-// at iterator construction time.\n-//\n-// We generate multi-part keys:\n-//     <key,gen,hash>\n-// where:\n-//     key is in range [0..K-1]\n-//     gen is a generation number for key\n-//     hash is hash(key,gen)\n-//\n-// The insertion code picks a random key, sets gen to be 1 + the last\n-// generation number inserted for that key, and sets hash to Hash(key,gen).\n-//\n-// At the beginning of a read, we snapshot the last inserted\n-// generation number for each key.  We then iterate, including random\n-// calls to Next() and Seek().  For every key we encounter, we\n-// check that it is either expected given the initial snapshot or has\n-// been concurrently added since the iterator started.\n-class ConcurrentTest {\n- private:\n-  static const uint32_t K = 4;\n-\n-  static uint64_t key(Key key) { return (key >> 40); }\n-  static uint64_t gen(Key key) { return (key >> 8) & 0xffffffffu; }\n-  static uint64_t hash(Key key) { return key & 0xff; }\n-\n-  static uint64_t HashNumbers(uint64_t k, uint64_t g) {\n-    uint64_t data[2] = { k, g };\n-    return Hash(reinterpret_cast<char*>(data), sizeof(data), 0);\n-  }\n-\n-  static Key MakeKey(uint64_t k, uint64_t g) {\n-    assert(sizeof(Key) == sizeof(uint64_t));\n-    assert(k <= K);  // We sometimes pass K to seek to the end of the skiplist\n-    assert(g <= 0xffffffffu);\n-    return ((k << 40) | (g << 8) | (HashNumbers(k, g) & 0xff));\n-  }\n-\n-  static bool IsValidKey(Key k) {\n-    return hash(k) == (HashNumbers(key(k), gen(k)) & 0xff);\n-  }\n-\n-  static Key RandomTarget(Random* rnd) {\n-    switch (rnd->Next() % 10) {\n-      case 0:\n-        // Seek to beginning\n-        return MakeKey(0, 0);\n-      case 1:\n-        // Seek to end\n-        return MakeKey(K, 0);\n-      default:\n-        // Seek to middle\n-        return MakeKey(rnd->Next() % K, 0);\n-    }\n-  }\n-\n-  // Per-key generation\n-  struct State {\n-    port::AtomicPointer generation[K];\n-    void Set(int k, intptr_t v) {\n-      generation[k].Release_Store(reinterpret_cast<void*>(v));\n-    }\n-    intptr_t Get(int k) {\n-      return reinterpret_cast<intptr_t>(generation[k].Acquire_Load());\n-    }\n-\n-    State() {\n-      for (int k = 0; k < K; k++) {\n-        Set(k, 0);\n-      }\n-    }\n-  };\n-\n-  // Current state of the test\n-  State current_;\n-\n-  Arena arena_;\n-\n-  // SkipList is not protected by mu_.  We just use a single writer\n-  // thread to modify it.\n-  SkipList<Key, Comparator> list_;\n-\n- public:\n-  ConcurrentTest() : list_(Comparator(), &arena_) { }\n-\n-  // REQUIRES: External synchronization\n-  void WriteStep(Random* rnd) {\n-    const uint32_t k = rnd->Next() % K;\n-    const intptr_t g = current_.Get(k) + 1;\n-    const Key key = MakeKey(k, g);\n-    list_.Insert(key);\n-    current_.Set(k, g);\n-  }\n-\n-  void ReadStep(Random* rnd) {\n-    // Remember the initial committed state of the skiplist.\n-    State initial_state;\n-    for (int k = 0; k < K; k++) {\n-      initial_state.Set(k, current_.Get(k));\n-    }\n-\n-    Key pos = RandomTarget(rnd);\n-    SkipList<Key, Comparator>::Iterator iter(&list_);\n-    iter.Seek(pos);\n-    while (true) {\n-      Key current;\n-      if (!iter.Valid()) {\n-        current = MakeKey(K, 0);\n-      } else {\n-        current = iter.key();\n-        ASSERT_TRUE(IsValidKey(current)) << current;\n-      }\n-      ASSERT_LE(pos, current) << \"should not go backwards\";\n-\n-      // Verify that everything in [pos,current) was not present in\n-      // initial_state.\n-      while (pos < current) {\n-        ASSERT_LT(key(pos), K) << pos;\n-\n-        // Note that generation 0 is never inserted, so it is ok if\n-        // <*,0,*> is missing.\n-        ASSERT_TRUE((gen(pos) == 0) ||\n-                    (gen(pos) > static_cast<Key>(initial_state.Get(key(pos))))\n-                    ) << \"key: \" << key(pos)\n-                      << \"; gen: \" << gen(pos)\n-                      << \"; initgen: \"\n-                      << initial_state.Get(key(pos));\n-\n-        // Advance to next key in the valid key space\n-        if (key(pos) < key(current)) {\n-          pos = MakeKey(key(pos) + 1, 0);\n-        } else {\n-          pos = MakeKey(key(pos), gen(pos) + 1);\n-        }\n-      }\n-\n-      if (!iter.Valid()) {\n-        break;\n-      }\n-\n-      if (rnd->Next() % 2) {\n-        iter.Next();\n-        pos = MakeKey(key(pos), gen(pos) + 1);\n-      } else {\n-        Key new_target = RandomTarget(rnd);\n-        if (new_target > pos) {\n-          pos = new_target;\n-          iter.Seek(new_target);\n-        }\n-      }\n-    }\n-  }\n-};\n-const uint32_t ConcurrentTest::K;\n-\n-// Simple test that does single-threaded testing of the ConcurrentTest\n-// scaffolding.\n-TEST(SkipTest, ConcurrentWithoutThreads) {\n-  ConcurrentTest test;\n-  Random rnd(test::RandomSeed());\n-  for (int i = 0; i < 10000; i++) {\n-    test.ReadStep(&rnd);\n-    test.WriteStep(&rnd);\n-  }\n-}\n-\n-class TestState {\n- public:\n-  ConcurrentTest t_;\n-  int seed_;\n-  port::AtomicPointer quit_flag_;\n-\n-  enum ReaderState {\n-    STARTING,\n-    RUNNING,\n-    DONE\n-  };\n-\n-  explicit TestState(int s)\n-      : seed_(s),\n-        quit_flag_(NULL),\n-        state_(STARTING),\n-        state_cv_(&mu_) {}\n-\n-  void Wait(ReaderState s) {\n-    mu_.Lock();\n-    while (state_ != s) {\n-      state_cv_.Wait();\n-    }\n-    mu_.Unlock();\n-  }\n-\n-  void Change(ReaderState s) {\n-    mu_.Lock();\n-    state_ = s;\n-    state_cv_.Signal();\n-    mu_.Unlock();\n-  }\n-\n- private:\n-  port::Mutex mu_;\n-  ReaderState state_;\n-  port::CondVar state_cv_;\n-};\n-\n-static void ConcurrentReader(void* arg) {\n-  TestState* state = reinterpret_cast<TestState*>(arg);\n-  Random rnd(state->seed_);\n-  int64_t reads = 0;\n-  state->Change(TestState::RUNNING);\n-  while (!state->quit_flag_.Acquire_Load()) {\n-    state->t_.ReadStep(&rnd);\n-    ++reads;\n-  }\n-  state->Change(TestState::DONE);\n-}\n-\n-static void RunConcurrent(int run) {\n-  const int seed = test::RandomSeed() + (run * 100);\n-  Random rnd(seed);\n-  const int N = 1000;\n-  const int kSize = 1000;\n-  for (int i = 0; i < N; i++) {\n-    if ((i % 100) == 0) {\n-      fprintf(stderr, \"Run %d of %d\\n\", i, N);\n-    }\n-    TestState state(seed + 1);\n-    Env::Default()->Schedule(ConcurrentReader, &state);\n-    state.Wait(TestState::RUNNING);\n-    for (int i = 0; i < kSize; i++) {\n-      state.t_.WriteStep(&rnd);\n-    }\n-    state.quit_flag_.Release_Store(&state);  // Any non-NULL arg will do\n-    state.Wait(TestState::DONE);\n-  }\n-}\n-\n-TEST(SkipTest, Concurrent1) { RunConcurrent(1); }\n-TEST(SkipTest, Concurrent2) { RunConcurrent(2); }\n-TEST(SkipTest, Concurrent3) { RunConcurrent(3); }\n-TEST(SkipTest, Concurrent4) { RunConcurrent(4); }\n-TEST(SkipTest, Concurrent5) { RunConcurrent(5); }\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "6ed413c42d4f4a8d531fba2d53617605741046dc",
        "filename": "src/leveldb/db/snapshot.h",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/snapshot.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/snapshot.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/snapshot.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,67 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_SNAPSHOT_H_\n-#define STORAGE_LEVELDB_DB_SNAPSHOT_H_\n-\n-#include \"db/dbformat.h\"\n-#include \"leveldb/db.h\"\n-\n-namespace leveldb {\n-\n-class SnapshotList;\n-\n-// Snapshots are kept in a doubly-linked list in the DB.\n-// Each SnapshotImpl corresponds to a particular sequence number.\n-class SnapshotImpl : public Snapshot {\n- public:\n-  SequenceNumber number_;  // const after creation\n-\n- private:\n-  friend class SnapshotList;\n-\n-  // SnapshotImpl is kept in a doubly-linked circular list\n-  SnapshotImpl* prev_;\n-  SnapshotImpl* next_;\n-\n-  SnapshotList* list_;                 // just for sanity checks\n-};\n-\n-class SnapshotList {\n- public:\n-  SnapshotList() {\n-    list_.prev_ = &list_;\n-    list_.next_ = &list_;\n-  }\n-\n-  bool empty() const { return list_.next_ == &list_; }\n-  SnapshotImpl* oldest() const { assert(!empty()); return list_.next_; }\n-  SnapshotImpl* newest() const { assert(!empty()); return list_.prev_; }\n-\n-  const SnapshotImpl* New(SequenceNumber seq) {\n-    SnapshotImpl* s = new SnapshotImpl;\n-    s->number_ = seq;\n-    s->list_ = this;\n-    s->next_ = &list_;\n-    s->prev_ = list_.prev_;\n-    s->prev_->next_ = s;\n-    s->next_->prev_ = s;\n-    return s;\n-  }\n-\n-  void Delete(const SnapshotImpl* s) {\n-    assert(s->list_ == this);\n-    s->prev_->next_ = s->next_;\n-    s->next_->prev_ = s->prev_;\n-    delete s;\n-  }\n-\n- private:\n-  // Dummy head of doubly-linked list of snapshots\n-  SnapshotImpl list_;\n-};\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_SNAPSHOT_H_"
      },
      {
        "sha": "e3d82cd3ea2d89d11ca6ca06b5ce7d5b7068a358",
        "filename": "src/leveldb/db/table_cache.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 127,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/table_cache.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/table_cache.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/table_cache.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,127 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/table_cache.h\"\n-\n-#include \"db/filename.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/table.h\"\n-#include \"util/coding.h\"\n-\n-namespace leveldb {\n-\n-struct TableAndFile {\n-  RandomAccessFile* file;\n-  Table* table;\n-};\n-\n-static void DeleteEntry(const Slice& key, void* value) {\n-  TableAndFile* tf = reinterpret_cast<TableAndFile*>(value);\n-  delete tf->table;\n-  delete tf->file;\n-  delete tf;\n-}\n-\n-static void UnrefEntry(void* arg1, void* arg2) {\n-  Cache* cache = reinterpret_cast<Cache*>(arg1);\n-  Cache::Handle* h = reinterpret_cast<Cache::Handle*>(arg2);\n-  cache->Release(h);\n-}\n-\n-TableCache::TableCache(const std::string& dbname,\n-                       const Options* options,\n-                       int entries)\n-    : env_(options->env),\n-      dbname_(dbname),\n-      options_(options),\n-      cache_(NewLRUCache(entries)) {\n-}\n-\n-TableCache::~TableCache() {\n-  delete cache_;\n-}\n-\n-Status TableCache::FindTable(uint64_t file_number, uint64_t file_size,\n-                             Cache::Handle** handle) {\n-  Status s;\n-  char buf[sizeof(file_number)];\n-  EncodeFixed64(buf, file_number);\n-  Slice key(buf, sizeof(buf));\n-  *handle = cache_->Lookup(key);\n-  if (*handle == NULL) {\n-    std::string fname = TableFileName(dbname_, file_number);\n-    RandomAccessFile* file = NULL;\n-    Table* table = NULL;\n-    s = env_->NewRandomAccessFile(fname, &file);\n-    if (!s.ok()) {\n-      std::string old_fname = SSTTableFileName(dbname_, file_number);\n-      if (env_->NewRandomAccessFile(old_fname, &file).ok()) {\n-        s = Status::OK();\n-      }\n-    }\n-    if (s.ok()) {\n-      s = Table::Open(*options_, file, file_size, &table);\n-    }\n-\n-    if (!s.ok()) {\n-      assert(table == NULL);\n-      delete file;\n-      // We do not cache error results so that if the error is transient,\n-      // or somebody repairs the file, we recover automatically.\n-    } else {\n-      TableAndFile* tf = new TableAndFile;\n-      tf->file = file;\n-      tf->table = table;\n-      *handle = cache_->Insert(key, tf, 1, &DeleteEntry);\n-    }\n-  }\n-  return s;\n-}\n-\n-Iterator* TableCache::NewIterator(const ReadOptions& options,\n-                                  uint64_t file_number,\n-                                  uint64_t file_size,\n-                                  Table** tableptr) {\n-  if (tableptr != NULL) {\n-    *tableptr = NULL;\n-  }\n-\n-  Cache::Handle* handle = NULL;\n-  Status s = FindTable(file_number, file_size, &handle);\n-  if (!s.ok()) {\n-    return NewErrorIterator(s);\n-  }\n-\n-  Table* table = reinterpret_cast<TableAndFile*>(cache_->Value(handle))->table;\n-  Iterator* result = table->NewIterator(options);\n-  result->RegisterCleanup(&UnrefEntry, cache_, handle);\n-  if (tableptr != NULL) {\n-    *tableptr = table;\n-  }\n-  return result;\n-}\n-\n-Status TableCache::Get(const ReadOptions& options,\n-                       uint64_t file_number,\n-                       uint64_t file_size,\n-                       const Slice& k,\n-                       void* arg,\n-                       void (*saver)(void*, const Slice&, const Slice&)) {\n-  Cache::Handle* handle = NULL;\n-  Status s = FindTable(file_number, file_size, &handle);\n-  if (s.ok()) {\n-    Table* t = reinterpret_cast<TableAndFile*>(cache_->Value(handle))->table;\n-    s = t->InternalGet(options, k, arg, saver);\n-    cache_->Release(handle);\n-  }\n-  return s;\n-}\n-\n-void TableCache::Evict(uint64_t file_number) {\n-  char buf[sizeof(file_number)];\n-  EncodeFixed64(buf, file_number);\n-  cache_->Erase(Slice(buf, sizeof(buf)));\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "8cf4aaf12d8ed1a02bd7d1962b79cc8506575b6f",
        "filename": "src/leveldb/db/table_cache.h",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/table_cache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/table_cache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/table_cache.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,61 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// Thread-safe (provides internal synchronization)\n-\n-#ifndef STORAGE_LEVELDB_DB_TABLE_CACHE_H_\n-#define STORAGE_LEVELDB_DB_TABLE_CACHE_H_\n-\n-#include <string>\n-#include <stdint.h>\n-#include \"db/dbformat.h\"\n-#include \"leveldb/cache.h\"\n-#include \"leveldb/table.h\"\n-#include \"port/port.h\"\n-\n-namespace leveldb {\n-\n-class Env;\n-\n-class TableCache {\n- public:\n-  TableCache(const std::string& dbname, const Options* options, int entries);\n-  ~TableCache();\n-\n-  // Return an iterator for the specified file number (the corresponding\n-  // file length must be exactly \"file_size\" bytes).  If \"tableptr\" is\n-  // non-NULL, also sets \"*tableptr\" to point to the Table object\n-  // underlying the returned iterator, or NULL if no Table object underlies\n-  // the returned iterator.  The returned \"*tableptr\" object is owned by\n-  // the cache and should not be deleted, and is valid for as long as the\n-  // returned iterator is live.\n-  Iterator* NewIterator(const ReadOptions& options,\n-                        uint64_t file_number,\n-                        uint64_t file_size,\n-                        Table** tableptr = NULL);\n-\n-  // If a seek to internal key \"k\" in specified file finds an entry,\n-  // call (*handle_result)(arg, found_key, found_value).\n-  Status Get(const ReadOptions& options,\n-             uint64_t file_number,\n-             uint64_t file_size,\n-             const Slice& k,\n-             void* arg,\n-             void (*handle_result)(void*, const Slice&, const Slice&));\n-\n-  // Evict any entry for the specified file number\n-  void Evict(uint64_t file_number);\n-\n- private:\n-  Env* const env_;\n-  const std::string dbname_;\n-  const Options* options_;\n-  Cache* cache_;\n-\n-  Status FindTable(uint64_t file_number, uint64_t file_size, Cache::Handle**);\n-};\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_TABLE_CACHE_H_"
      },
      {
        "sha": "f10a2d58b211cb16becb0ac0298210f0dacbd2a5",
        "filename": "src/leveldb/db/version_edit.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 266,
        "changes": 266,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_edit.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_edit.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_edit.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,266 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/version_edit.h\"\n-\n-#include \"db/version_set.h\"\n-#include \"util/coding.h\"\n-\n-namespace leveldb {\n-\n-// Tag numbers for serialized VersionEdit.  These numbers are written to\n-// disk and should not be changed.\n-enum Tag {\n-  kComparator           = 1,\n-  kLogNumber            = 2,\n-  kNextFileNumber       = 3,\n-  kLastSequence         = 4,\n-  kCompactPointer       = 5,\n-  kDeletedFile          = 6,\n-  kNewFile              = 7,\n-  // 8 was used for large value refs\n-  kPrevLogNumber        = 9\n-};\n-\n-void VersionEdit::Clear() {\n-  comparator_.clear();\n-  log_number_ = 0;\n-  prev_log_number_ = 0;\n-  last_sequence_ = 0;\n-  next_file_number_ = 0;\n-  has_comparator_ = false;\n-  has_log_number_ = false;\n-  has_prev_log_number_ = false;\n-  has_next_file_number_ = false;\n-  has_last_sequence_ = false;\n-  deleted_files_.clear();\n-  new_files_.clear();\n-}\n-\n-void VersionEdit::EncodeTo(std::string* dst) const {\n-  if (has_comparator_) {\n-    PutVarint32(dst, kComparator);\n-    PutLengthPrefixedSlice(dst, comparator_);\n-  }\n-  if (has_log_number_) {\n-    PutVarint32(dst, kLogNumber);\n-    PutVarint64(dst, log_number_);\n-  }\n-  if (has_prev_log_number_) {\n-    PutVarint32(dst, kPrevLogNumber);\n-    PutVarint64(dst, prev_log_number_);\n-  }\n-  if (has_next_file_number_) {\n-    PutVarint32(dst, kNextFileNumber);\n-    PutVarint64(dst, next_file_number_);\n-  }\n-  if (has_last_sequence_) {\n-    PutVarint32(dst, kLastSequence);\n-    PutVarint64(dst, last_sequence_);\n-  }\n-\n-  for (size_t i = 0; i < compact_pointers_.size(); i++) {\n-    PutVarint32(dst, kCompactPointer);\n-    PutVarint32(dst, compact_pointers_[i].first);  // level\n-    PutLengthPrefixedSlice(dst, compact_pointers_[i].second.Encode());\n-  }\n-\n-  for (DeletedFileSet::const_iterator iter = deleted_files_.begin();\n-       iter != deleted_files_.end();\n-       ++iter) {\n-    PutVarint32(dst, kDeletedFile);\n-    PutVarint32(dst, iter->first);   // level\n-    PutVarint64(dst, iter->second);  // file number\n-  }\n-\n-  for (size_t i = 0; i < new_files_.size(); i++) {\n-    const FileMetaData& f = new_files_[i].second;\n-    PutVarint32(dst, kNewFile);\n-    PutVarint32(dst, new_files_[i].first);  // level\n-    PutVarint64(dst, f.number);\n-    PutVarint64(dst, f.file_size);\n-    PutLengthPrefixedSlice(dst, f.smallest.Encode());\n-    PutLengthPrefixedSlice(dst, f.largest.Encode());\n-  }\n-}\n-\n-static bool GetInternalKey(Slice* input, InternalKey* dst) {\n-  Slice str;\n-  if (GetLengthPrefixedSlice(input, &str)) {\n-    dst->DecodeFrom(str);\n-    return true;\n-  } else {\n-    return false;\n-  }\n-}\n-\n-static bool GetLevel(Slice* input, int* level) {\n-  uint32_t v;\n-  if (GetVarint32(input, &v) &&\n-      v < config::kNumLevels) {\n-    *level = v;\n-    return true;\n-  } else {\n-    return false;\n-  }\n-}\n-\n-Status VersionEdit::DecodeFrom(const Slice& src) {\n-  Clear();\n-  Slice input = src;\n-  const char* msg = NULL;\n-  uint32_t tag;\n-\n-  // Temporary storage for parsing\n-  int level;\n-  uint64_t number;\n-  FileMetaData f;\n-  Slice str;\n-  InternalKey key;\n-\n-  while (msg == NULL && GetVarint32(&input, &tag)) {\n-    switch (tag) {\n-      case kComparator:\n-        if (GetLengthPrefixedSlice(&input, &str)) {\n-          comparator_ = str.ToString();\n-          has_comparator_ = true;\n-        } else {\n-          msg = \"comparator name\";\n-        }\n-        break;\n-\n-      case kLogNumber:\n-        if (GetVarint64(&input, &log_number_)) {\n-          has_log_number_ = true;\n-        } else {\n-          msg = \"log number\";\n-        }\n-        break;\n-\n-      case kPrevLogNumber:\n-        if (GetVarint64(&input, &prev_log_number_)) {\n-          has_prev_log_number_ = true;\n-        } else {\n-          msg = \"previous log number\";\n-        }\n-        break;\n-\n-      case kNextFileNumber:\n-        if (GetVarint64(&input, &next_file_number_)) {\n-          has_next_file_number_ = true;\n-        } else {\n-          msg = \"next file number\";\n-        }\n-        break;\n-\n-      case kLastSequence:\n-        if (GetVarint64(&input, &last_sequence_)) {\n-          has_last_sequence_ = true;\n-        } else {\n-          msg = \"last sequence number\";\n-        }\n-        break;\n-\n-      case kCompactPointer:\n-        if (GetLevel(&input, &level) &&\n-            GetInternalKey(&input, &key)) {\n-          compact_pointers_.push_back(std::make_pair(level, key));\n-        } else {\n-          msg = \"compaction pointer\";\n-        }\n-        break;\n-\n-      case kDeletedFile:\n-        if (GetLevel(&input, &level) &&\n-            GetVarint64(&input, &number)) {\n-          deleted_files_.insert(std::make_pair(level, number));\n-        } else {\n-          msg = \"deleted file\";\n-        }\n-        break;\n-\n-      case kNewFile:\n-        if (GetLevel(&input, &level) &&\n-            GetVarint64(&input, &f.number) &&\n-            GetVarint64(&input, &f.file_size) &&\n-            GetInternalKey(&input, &f.smallest) &&\n-            GetInternalKey(&input, &f.largest)) {\n-          new_files_.push_back(std::make_pair(level, f));\n-        } else {\n-          msg = \"new-file entry\";\n-        }\n-        break;\n-\n-      default:\n-        msg = \"unknown tag\";\n-        break;\n-    }\n-  }\n-\n-  if (msg == NULL && !input.empty()) {\n-    msg = \"invalid tag\";\n-  }\n-\n-  Status result;\n-  if (msg != NULL) {\n-    result = Status::Corruption(\"VersionEdit\", msg);\n-  }\n-  return result;\n-}\n-\n-std::string VersionEdit::DebugString() const {\n-  std::string r;\n-  r.append(\"VersionEdit {\");\n-  if (has_comparator_) {\n-    r.append(\"\\n  Comparator: \");\n-    r.append(comparator_);\n-  }\n-  if (has_log_number_) {\n-    r.append(\"\\n  LogNumber: \");\n-    AppendNumberTo(&r, log_number_);\n-  }\n-  if (has_prev_log_number_) {\n-    r.append(\"\\n  PrevLogNumber: \");\n-    AppendNumberTo(&r, prev_log_number_);\n-  }\n-  if (has_next_file_number_) {\n-    r.append(\"\\n  NextFile: \");\n-    AppendNumberTo(&r, next_file_number_);\n-  }\n-  if (has_last_sequence_) {\n-    r.append(\"\\n  LastSeq: \");\n-    AppendNumberTo(&r, last_sequence_);\n-  }\n-  for (size_t i = 0; i < compact_pointers_.size(); i++) {\n-    r.append(\"\\n  CompactPointer: \");\n-    AppendNumberTo(&r, compact_pointers_[i].first);\n-    r.append(\" \");\n-    r.append(compact_pointers_[i].second.DebugString());\n-  }\n-  for (DeletedFileSet::const_iterator iter = deleted_files_.begin();\n-       iter != deleted_files_.end();\n-       ++iter) {\n-    r.append(\"\\n  DeleteFile: \");\n-    AppendNumberTo(&r, iter->first);\n-    r.append(\" \");\n-    AppendNumberTo(&r, iter->second);\n-  }\n-  for (size_t i = 0; i < new_files_.size(); i++) {\n-    const FileMetaData& f = new_files_[i].second;\n-    r.append(\"\\n  AddFile: \");\n-    AppendNumberTo(&r, new_files_[i].first);\n-    r.append(\" \");\n-    AppendNumberTo(&r, f.number);\n-    r.append(\" \");\n-    AppendNumberTo(&r, f.file_size);\n-    r.append(\" \");\n-    r.append(f.smallest.DebugString());\n-    r.append(\" .. \");\n-    r.append(f.largest.DebugString());\n-  }\n-  r.append(\"\\n}\\n\");\n-  return r;\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "eaef77b327c64a3756a5f2512bc1786530907cbd",
        "filename": "src/leveldb/db/version_edit.h",
        "status": "removed",
        "additions": 0,
        "deletions": 107,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_edit.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_edit.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_edit.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,107 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_VERSION_EDIT_H_\n-#define STORAGE_LEVELDB_DB_VERSION_EDIT_H_\n-\n-#include <set>\n-#include <utility>\n-#include <vector>\n-#include \"db/dbformat.h\"\n-\n-namespace leveldb {\n-\n-class VersionSet;\n-\n-struct FileMetaData {\n-  int refs;\n-  int allowed_seeks;          // Seeks allowed until compaction\n-  uint64_t number;\n-  uint64_t file_size;         // File size in bytes\n-  InternalKey smallest;       // Smallest internal key served by table\n-  InternalKey largest;        // Largest internal key served by table\n-\n-  FileMetaData() : refs(0), allowed_seeks(1 << 30), file_size(0) { }\n-};\n-\n-class VersionEdit {\n- public:\n-  VersionEdit() { Clear(); }\n-  ~VersionEdit() { }\n-\n-  void Clear();\n-\n-  void SetComparatorName(const Slice& name) {\n-    has_comparator_ = true;\n-    comparator_ = name.ToString();\n-  }\n-  void SetLogNumber(uint64_t num) {\n-    has_log_number_ = true;\n-    log_number_ = num;\n-  }\n-  void SetPrevLogNumber(uint64_t num) {\n-    has_prev_log_number_ = true;\n-    prev_log_number_ = num;\n-  }\n-  void SetNextFile(uint64_t num) {\n-    has_next_file_number_ = true;\n-    next_file_number_ = num;\n-  }\n-  void SetLastSequence(SequenceNumber seq) {\n-    has_last_sequence_ = true;\n-    last_sequence_ = seq;\n-  }\n-  void SetCompactPointer(int level, const InternalKey& key) {\n-    compact_pointers_.push_back(std::make_pair(level, key));\n-  }\n-\n-  // Add the specified file at the specified number.\n-  // REQUIRES: This version has not been saved (see VersionSet::SaveTo)\n-  // REQUIRES: \"smallest\" and \"largest\" are smallest and largest keys in file\n-  void AddFile(int level, uint64_t file,\n-               uint64_t file_size,\n-               const InternalKey& smallest,\n-               const InternalKey& largest) {\n-    FileMetaData f;\n-    f.number = file;\n-    f.file_size = file_size;\n-    f.smallest = smallest;\n-    f.largest = largest;\n-    new_files_.push_back(std::make_pair(level, f));\n-  }\n-\n-  // Delete the specified \"file\" from the specified \"level\".\n-  void DeleteFile(int level, uint64_t file) {\n-    deleted_files_.insert(std::make_pair(level, file));\n-  }\n-\n-  void EncodeTo(std::string* dst) const;\n-  Status DecodeFrom(const Slice& src);\n-\n-  std::string DebugString() const;\n-\n- private:\n-  friend class VersionSet;\n-\n-  typedef std::set< std::pair<int, uint64_t> > DeletedFileSet;\n-\n-  std::string comparator_;\n-  uint64_t log_number_;\n-  uint64_t prev_log_number_;\n-  uint64_t next_file_number_;\n-  SequenceNumber last_sequence_;\n-  bool has_comparator_;\n-  bool has_log_number_;\n-  bool has_prev_log_number_;\n-  bool has_next_file_number_;\n-  bool has_last_sequence_;\n-\n-  std::vector< std::pair<int, InternalKey> > compact_pointers_;\n-  DeletedFileSet deleted_files_;\n-  std::vector< std::pair<int, FileMetaData> > new_files_;\n-};\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_VERSION_EDIT_H_"
      },
      {
        "sha": "280310b49d846e245df0d000ca1407724582daa2",
        "filename": "src/leveldb/db/version_edit_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_edit_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_edit_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_edit_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,46 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/version_edit.h\"\n-#include \"util/testharness.h\"\n-\n-namespace leveldb {\n-\n-static void TestEncodeDecode(const VersionEdit& edit) {\n-  std::string encoded, encoded2;\n-  edit.EncodeTo(&encoded);\n-  VersionEdit parsed;\n-  Status s = parsed.DecodeFrom(encoded);\n-  ASSERT_TRUE(s.ok()) << s.ToString();\n-  parsed.EncodeTo(&encoded2);\n-  ASSERT_EQ(encoded, encoded2);\n-}\n-\n-class VersionEditTest { };\n-\n-TEST(VersionEditTest, EncodeDecode) {\n-  static const uint64_t kBig = 1ull << 50;\n-\n-  VersionEdit edit;\n-  for (int i = 0; i < 4; i++) {\n-    TestEncodeDecode(edit);\n-    edit.AddFile(3, kBig + 300 + i, kBig + 400 + i,\n-                 InternalKey(\"foo\", kBig + 500 + i, kTypeValue),\n-                 InternalKey(\"zoo\", kBig + 600 + i, kTypeDeletion));\n-    edit.DeleteFile(4, kBig + 700 + i);\n-    edit.SetCompactPointer(i, InternalKey(\"x\", kBig + 900 + i, kTypeValue));\n-  }\n-\n-  edit.SetComparatorName(\"foo\");\n-  edit.SetLogNumber(kBig + 100);\n-  edit.SetNextFile(kBig + 200);\n-  edit.SetLastSequence(kBig + 1000);\n-  TestEncodeDecode(edit);\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "a5e0f77a6a91312eaffe69352d79fd4416d764b3",
        "filename": "src/leveldb/db/version_set.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 1522,
        "changes": 1522,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_set.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_set.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,1522 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/version_set.h\"\n-\n-#include <algorithm>\n-#include <stdio.h>\n-#include \"db/filename.h\"\n-#include \"db/log_reader.h\"\n-#include \"db/log_writer.h\"\n-#include \"db/memtable.h\"\n-#include \"db/table_cache.h\"\n-#include \"leveldb/env.h\"\n-#include \"leveldb/table_builder.h\"\n-#include \"table/merger.h\"\n-#include \"table/two_level_iterator.h\"\n-#include \"util/coding.h\"\n-#include \"util/logging.h\"\n-\n-namespace leveldb {\n-\n-static const int kTargetFileSize = 2 * 1048576;\n-\n-// Maximum bytes of overlaps in grandparent (i.e., level+2) before we\n-// stop building a single file in a level->level+1 compaction.\n-static const int64_t kMaxGrandParentOverlapBytes = 10 * kTargetFileSize;\n-\n-// Maximum number of bytes in all compacted files.  We avoid expanding\n-// the lower level file set of a compaction if it would make the\n-// total compaction cover more than this many bytes.\n-static const int64_t kExpandedCompactionByteSizeLimit = 25 * kTargetFileSize;\n-\n-static double MaxBytesForLevel(int level) {\n-  // Note: the result for level zero is not really used since we set\n-  // the level-0 compaction threshold based on number of files.\n-  double result = 10 * 1048576.0;  // Result for both level-0 and level-1\n-  while (level > 1) {\n-    result *= 10;\n-    level--;\n-  }\n-  return result;\n-}\n-\n-static uint64_t MaxFileSizeForLevel(int level) {\n-  return kTargetFileSize;  // We could vary per level to reduce number of files?\n-}\n-\n-static int64_t TotalFileSize(const std::vector<FileMetaData*>& files) {\n-  int64_t sum = 0;\n-  for (size_t i = 0; i < files.size(); i++) {\n-    sum += files[i]->file_size;\n-  }\n-  return sum;\n-}\n-\n-Version::~Version() {\n-  assert(refs_ == 0);\n-\n-  // Remove from linked list\n-  prev_->next_ = next_;\n-  next_->prev_ = prev_;\n-\n-  // Drop references to files\n-  for (int level = 0; level < config::kNumLevels; level++) {\n-    for (size_t i = 0; i < files_[level].size(); i++) {\n-      FileMetaData* f = files_[level][i];\n-      assert(f->refs > 0);\n-      f->refs--;\n-      if (f->refs <= 0) {\n-        delete f;\n-      }\n-    }\n-  }\n-}\n-\n-int FindFile(const InternalKeyComparator& icmp,\n-             const std::vector<FileMetaData*>& files,\n-             const Slice& key) {\n-  uint32_t left = 0;\n-  uint32_t right = files.size();\n-  while (left < right) {\n-    uint32_t mid = (left + right) / 2;\n-    const FileMetaData* f = files[mid];\n-    if (icmp.InternalKeyComparator::Compare(f->largest.Encode(), key) < 0) {\n-      // Key at \"mid.largest\" is < \"target\".  Therefore all\n-      // files at or before \"mid\" are uninteresting.\n-      left = mid + 1;\n-    } else {\n-      // Key at \"mid.largest\" is >= \"target\".  Therefore all files\n-      // after \"mid\" are uninteresting.\n-      right = mid;\n-    }\n-  }\n-  return right;\n-}\n-\n-static bool AfterFile(const Comparator* ucmp,\n-                      const Slice* user_key, const FileMetaData* f) {\n-  // NULL user_key occurs before all keys and is therefore never after *f\n-  return (user_key != NULL &&\n-          ucmp->Compare(*user_key, f->largest.user_key()) > 0);\n-}\n-\n-static bool BeforeFile(const Comparator* ucmp,\n-                       const Slice* user_key, const FileMetaData* f) {\n-  // NULL user_key occurs after all keys and is therefore never before *f\n-  return (user_key != NULL &&\n-          ucmp->Compare(*user_key, f->smallest.user_key()) < 0);\n-}\n-\n-bool SomeFileOverlapsRange(\n-    const InternalKeyComparator& icmp,\n-    bool disjoint_sorted_files,\n-    const std::vector<FileMetaData*>& files,\n-    const Slice* smallest_user_key,\n-    const Slice* largest_user_key) {\n-  const Comparator* ucmp = icmp.user_comparator();\n-  if (!disjoint_sorted_files) {\n-    // Need to check against all files\n-    for (size_t i = 0; i < files.size(); i++) {\n-      const FileMetaData* f = files[i];\n-      if (AfterFile(ucmp, smallest_user_key, f) ||\n-          BeforeFile(ucmp, largest_user_key, f)) {\n-        // No overlap\n-      } else {\n-        return true;  // Overlap\n-      }\n-    }\n-    return false;\n-  }\n-\n-  // Binary search over file list\n-  uint32_t index = 0;\n-  if (smallest_user_key != NULL) {\n-    // Find the earliest possible internal key for smallest_user_key\n-    InternalKey small(*smallest_user_key, kMaxSequenceNumber,kValueTypeForSeek);\n-    index = FindFile(icmp, files, small.Encode());\n-  }\n-\n-  if (index >= files.size()) {\n-    // beginning of range is after all files, so no overlap.\n-    return false;\n-  }\n-\n-  return !BeforeFile(ucmp, largest_user_key, files[index]);\n-}\n-\n-// An internal iterator.  For a given version/level pair, yields\n-// information about the files in the level.  For a given entry, key()\n-// is the largest key that occurs in the file, and value() is an\n-// 16-byte value containing the file number and file size, both\n-// encoded using EncodeFixed64.\n-class Version::LevelFileNumIterator : public Iterator {\n- public:\n-  LevelFileNumIterator(const InternalKeyComparator& icmp,\n-                       const std::vector<FileMetaData*>* flist)\n-      : icmp_(icmp),\n-        flist_(flist),\n-        index_(flist->size()) {        // Marks as invalid\n-  }\n-  virtual bool Valid() const {\n-    return index_ < flist_->size();\n-  }\n-  virtual void Seek(const Slice& target) {\n-    index_ = FindFile(icmp_, *flist_, target);\n-  }\n-  virtual void SeekToFirst() { index_ = 0; }\n-  virtual void SeekToLast() {\n-    index_ = flist_->empty() ? 0 : flist_->size() - 1;\n-  }\n-  virtual void Next() {\n-    assert(Valid());\n-    index_++;\n-  }\n-  virtual void Prev() {\n-    assert(Valid());\n-    if (index_ == 0) {\n-      index_ = flist_->size();  // Marks as invalid\n-    } else {\n-      index_--;\n-    }\n-  }\n-  Slice key() const {\n-    assert(Valid());\n-    return (*flist_)[index_]->largest.Encode();\n-  }\n-  Slice value() const {\n-    assert(Valid());\n-    EncodeFixed64(value_buf_, (*flist_)[index_]->number);\n-    EncodeFixed64(value_buf_+8, (*flist_)[index_]->file_size);\n-    return Slice(value_buf_, sizeof(value_buf_));\n-  }\n-  virtual Status status() const { return Status::OK(); }\n- private:\n-  const InternalKeyComparator icmp_;\n-  const std::vector<FileMetaData*>* const flist_;\n-  uint32_t index_;\n-\n-  // Backing store for value().  Holds the file number and size.\n-  mutable char value_buf_[16];\n-};\n-\n-static Iterator* GetFileIterator(void* arg,\n-                                 const ReadOptions& options,\n-                                 const Slice& file_value) {\n-  TableCache* cache = reinterpret_cast<TableCache*>(arg);\n-  if (file_value.size() != 16) {\n-    return NewErrorIterator(\n-        Status::Corruption(\"FileReader invoked with unexpected value\"));\n-  } else {\n-    return cache->NewIterator(options,\n-                              DecodeFixed64(file_value.data()),\n-                              DecodeFixed64(file_value.data() + 8));\n-  }\n-}\n-\n-Iterator* Version::NewConcatenatingIterator(const ReadOptions& options,\n-                                            int level) const {\n-  return NewTwoLevelIterator(\n-      new LevelFileNumIterator(vset_->icmp_, &files_[level]),\n-      &GetFileIterator, vset_->table_cache_, options);\n-}\n-\n-void Version::AddIterators(const ReadOptions& options,\n-                           std::vector<Iterator*>* iters) {\n-  // Merge all level zero files together since they may overlap\n-  for (size_t i = 0; i < files_[0].size(); i++) {\n-    iters->push_back(\n-        vset_->table_cache_->NewIterator(\n-            options, files_[0][i]->number, files_[0][i]->file_size));\n-  }\n-\n-  // For levels > 0, we can use a concatenating iterator that sequentially\n-  // walks through the non-overlapping files in the level, opening them\n-  // lazily.\n-  for (int level = 1; level < config::kNumLevels; level++) {\n-    if (!files_[level].empty()) {\n-      iters->push_back(NewConcatenatingIterator(options, level));\n-    }\n-  }\n-}\n-\n-// Callback from TableCache::Get()\n-namespace {\n-enum SaverState {\n-  kNotFound,\n-  kFound,\n-  kDeleted,\n-  kCorrupt,\n-};\n-struct Saver {\n-  SaverState state;\n-  const Comparator* ucmp;\n-  Slice user_key;\n-  std::string* value;\n-};\n-}\n-static void SaveValue(void* arg, const Slice& ikey, const Slice& v) {\n-  Saver* s = reinterpret_cast<Saver*>(arg);\n-  ParsedInternalKey parsed_key;\n-  if (!ParseInternalKey(ikey, &parsed_key)) {\n-    s->state = kCorrupt;\n-  } else {\n-    if (s->ucmp->Compare(parsed_key.user_key, s->user_key) == 0) {\n-      s->state = (parsed_key.type == kTypeValue) ? kFound : kDeleted;\n-      if (s->state == kFound) {\n-        s->value->assign(v.data(), v.size());\n-      }\n-    }\n-  }\n-}\n-\n-static bool NewestFirst(FileMetaData* a, FileMetaData* b) {\n-  return a->number > b->number;\n-}\n-\n-void Version::ForEachOverlapping(Slice user_key, Slice internal_key,\n-                                 void* arg,\n-                                 bool (*func)(void*, int, FileMetaData*)) {\n-  // TODO(sanjay): Change Version::Get() to use this function.\n-  const Comparator* ucmp = vset_->icmp_.user_comparator();\n-\n-  // Search level-0 in order from newest to oldest.\n-  std::vector<FileMetaData*> tmp;\n-  tmp.reserve(files_[0].size());\n-  for (uint32_t i = 0; i < files_[0].size(); i++) {\n-    FileMetaData* f = files_[0][i];\n-    if (ucmp->Compare(user_key, f->smallest.user_key()) >= 0 &&\n-        ucmp->Compare(user_key, f->largest.user_key()) <= 0) {\n-      tmp.push_back(f);\n-    }\n-  }\n-  if (!tmp.empty()) {\n-    std::sort(tmp.begin(), tmp.end(), NewestFirst);\n-    for (uint32_t i = 0; i < tmp.size(); i++) {\n-      if (!(*func)(arg, 0, tmp[i])) {\n-        return;\n-      }\n-    }\n-  }\n-\n-  // Search other levels.\n-  for (int level = 1; level < config::kNumLevels; level++) {\n-    size_t num_files = files_[level].size();\n-    if (num_files == 0) continue;\n-\n-    // Binary search to find earliest index whose largest key >= internal_key.\n-    uint32_t index = FindFile(vset_->icmp_, files_[level], internal_key);\n-    if (index < num_files) {\n-      FileMetaData* f = files_[level][index];\n-      if (ucmp->Compare(user_key, f->smallest.user_key()) < 0) {\n-        // All of \"f\" is past any data for user_key\n-      } else {\n-        if (!(*func)(arg, level, f)) {\n-          return;\n-        }\n-      }\n-    }\n-  }\n-}\n-\n-Status Version::Get(const ReadOptions& options,\n-                    const LookupKey& k,\n-                    std::string* value,\n-                    GetStats* stats) {\n-  Slice ikey = k.internal_key();\n-  Slice user_key = k.user_key();\n-  const Comparator* ucmp = vset_->icmp_.user_comparator();\n-  Status s;\n-\n-  stats->seek_file = NULL;\n-  stats->seek_file_level = -1;\n-  FileMetaData* last_file_read = NULL;\n-  int last_file_read_level = -1;\n-\n-  // We can search level-by-level since entries never hop across\n-  // levels.  Therefore we are guaranteed that if we find data\n-  // in an smaller level, later levels are irrelevant.\n-  std::vector<FileMetaData*> tmp;\n-  FileMetaData* tmp2;\n-  for (int level = 0; level < config::kNumLevels; level++) {\n-    size_t num_files = files_[level].size();\n-    if (num_files == 0) continue;\n-\n-    // Get the list of files to search in this level\n-    FileMetaData* const* files = &files_[level][0];\n-    if (level == 0) {\n-      // Level-0 files may overlap each other.  Find all files that\n-      // overlap user_key and process them in order from newest to oldest.\n-      tmp.reserve(num_files);\n-      for (uint32_t i = 0; i < num_files; i++) {\n-        FileMetaData* f = files[i];\n-        if (ucmp->Compare(user_key, f->smallest.user_key()) >= 0 &&\n-            ucmp->Compare(user_key, f->largest.user_key()) <= 0) {\n-          tmp.push_back(f);\n-        }\n-      }\n-      if (tmp.empty()) continue;\n-\n-      std::sort(tmp.begin(), tmp.end(), NewestFirst);\n-      files = &tmp[0];\n-      num_files = tmp.size();\n-    } else {\n-      // Binary search to find earliest index whose largest key >= ikey.\n-      uint32_t index = FindFile(vset_->icmp_, files_[level], ikey);\n-      if (index >= num_files) {\n-        files = NULL;\n-        num_files = 0;\n-      } else {\n-        tmp2 = files[index];\n-        if (ucmp->Compare(user_key, tmp2->smallest.user_key()) < 0) {\n-          // All of \"tmp2\" is past any data for user_key\n-          files = NULL;\n-          num_files = 0;\n-        } else {\n-          files = &tmp2;\n-          num_files = 1;\n-        }\n-      }\n-    }\n-\n-    for (uint32_t i = 0; i < num_files; ++i) {\n-      if (last_file_read != NULL && stats->seek_file == NULL) {\n-        // We have had more than one seek for this read.  Charge the 1st file.\n-        stats->seek_file = last_file_read;\n-        stats->seek_file_level = last_file_read_level;\n-      }\n-\n-      FileMetaData* f = files[i];\n-      last_file_read = f;\n-      last_file_read_level = level;\n-\n-      Saver saver;\n-      saver.state = kNotFound;\n-      saver.ucmp = ucmp;\n-      saver.user_key = user_key;\n-      saver.value = value;\n-      s = vset_->table_cache_->Get(options, f->number, f->file_size,\n-                                   ikey, &saver, SaveValue);\n-      if (!s.ok()) {\n-        return s;\n-      }\n-      switch (saver.state) {\n-        case kNotFound:\n-          break;      // Keep searching in other files\n-        case kFound:\n-          return s;\n-        case kDeleted:\n-          s = Status::NotFound(Slice());  // Use empty error message for speed\n-          return s;\n-        case kCorrupt:\n-          s = Status::Corruption(\"corrupted key for \", user_key);\n-          return s;\n-      }\n-    }\n-  }\n-\n-  return Status::NotFound(Slice());  // Use an empty error message for speed\n-}\n-\n-bool Version::UpdateStats(const GetStats& stats) {\n-  FileMetaData* f = stats.seek_file;\n-  if (f != NULL) {\n-    f->allowed_seeks--;\n-    if (f->allowed_seeks <= 0 && file_to_compact_ == NULL) {\n-      file_to_compact_ = f;\n-      file_to_compact_level_ = stats.seek_file_level;\n-      return true;\n-    }\n-  }\n-  return false;\n-}\n-\n-bool Version::RecordReadSample(Slice internal_key) {\n-  ParsedInternalKey ikey;\n-  if (!ParseInternalKey(internal_key, &ikey)) {\n-    return false;\n-  }\n-\n-  struct State {\n-    GetStats stats;  // Holds first matching file\n-    int matches;\n-\n-    static bool Match(void* arg, int level, FileMetaData* f) {\n-      State* state = reinterpret_cast<State*>(arg);\n-      state->matches++;\n-      if (state->matches == 1) {\n-        // Remember first match.\n-        state->stats.seek_file = f;\n-        state->stats.seek_file_level = level;\n-      }\n-      // We can stop iterating once we have a second match.\n-      return state->matches < 2;\n-    }\n-  };\n-\n-  State state;\n-  state.matches = 0;\n-  ForEachOverlapping(ikey.user_key, internal_key, &state, &State::Match);\n-\n-  // Must have at least two matches since we want to merge across\n-  // files. But what if we have a single file that contains many\n-  // overwrites and deletions?  Should we have another mechanism for\n-  // finding such files?\n-  if (state.matches >= 2) {\n-    // 1MB cost is about 1 seek (see comment in Builder::Apply).\n-    return UpdateStats(state.stats);\n-  }\n-  return false;\n-}\n-\n-void Version::Ref() {\n-  ++refs_;\n-}\n-\n-void Version::Unref() {\n-  assert(this != &vset_->dummy_versions_);\n-  assert(refs_ >= 1);\n-  --refs_;\n-  if (refs_ == 0) {\n-    delete this;\n-  }\n-}\n-\n-bool Version::OverlapInLevel(int level,\n-                             const Slice* smallest_user_key,\n-                             const Slice* largest_user_key) {\n-  return SomeFileOverlapsRange(vset_->icmp_, (level > 0), files_[level],\n-                               smallest_user_key, largest_user_key);\n-}\n-\n-int Version::PickLevelForMemTableOutput(\n-    const Slice& smallest_user_key,\n-    const Slice& largest_user_key) {\n-  int level = 0;\n-  if (!OverlapInLevel(0, &smallest_user_key, &largest_user_key)) {\n-    // Push to next level if there is no overlap in next level,\n-    // and the #bytes overlapping in the level after that are limited.\n-    InternalKey start(smallest_user_key, kMaxSequenceNumber, kValueTypeForSeek);\n-    InternalKey limit(largest_user_key, 0, static_cast<ValueType>(0));\n-    std::vector<FileMetaData*> overlaps;\n-    while (level < config::kMaxMemCompactLevel) {\n-      if (OverlapInLevel(level + 1, &smallest_user_key, &largest_user_key)) {\n-        break;\n-      }\n-      if (level + 2 < config::kNumLevels) {\n-        // Check that file does not overlap too many grandparent bytes.\n-        GetOverlappingInputs(level + 2, &start, &limit, &overlaps);\n-        const int64_t sum = TotalFileSize(overlaps);\n-        if (sum > kMaxGrandParentOverlapBytes) {\n-          break;\n-        }\n-      }\n-      level++;\n-    }\n-  }\n-  return level;\n-}\n-\n-// Store in \"*inputs\" all files in \"level\" that overlap [begin,end]\n-void Version::GetOverlappingInputs(\n-    int level,\n-    const InternalKey* begin,\n-    const InternalKey* end,\n-    std::vector<FileMetaData*>* inputs) {\n-  assert(level >= 0);\n-  assert(level < config::kNumLevels);\n-  inputs->clear();\n-  Slice user_begin, user_end;\n-  if (begin != NULL) {\n-    user_begin = begin->user_key();\n-  }\n-  if (end != NULL) {\n-    user_end = end->user_key();\n-  }\n-  const Comparator* user_cmp = vset_->icmp_.user_comparator();\n-  for (size_t i = 0; i < files_[level].size(); ) {\n-    FileMetaData* f = files_[level][i++];\n-    const Slice file_start = f->smallest.user_key();\n-    const Slice file_limit = f->largest.user_key();\n-    if (begin != NULL && user_cmp->Compare(file_limit, user_begin) < 0) {\n-      // \"f\" is completely before specified range; skip it\n-    } else if (end != NULL && user_cmp->Compare(file_start, user_end) > 0) {\n-      // \"f\" is completely after specified range; skip it\n-    } else {\n-      inputs->push_back(f);\n-      if (level == 0) {\n-        // Level-0 files may overlap each other.  So check if the newly\n-        // added file has expanded the range.  If so, restart search.\n-        if (begin != NULL && user_cmp->Compare(file_start, user_begin) < 0) {\n-          user_begin = file_start;\n-          inputs->clear();\n-          i = 0;\n-        } else if (end != NULL && user_cmp->Compare(file_limit, user_end) > 0) {\n-          user_end = file_limit;\n-          inputs->clear();\n-          i = 0;\n-        }\n-      }\n-    }\n-  }\n-}\n-\n-std::string Version::DebugString() const {\n-  std::string r;\n-  for (int level = 0; level < config::kNumLevels; level++) {\n-    // E.g.,\n-    //   --- level 1 ---\n-    //   17:123['a' .. 'd']\n-    //   20:43['e' .. 'g']\n-    r.append(\"--- level \");\n-    AppendNumberTo(&r, level);\n-    r.append(\" ---\\n\");\n-    const std::vector<FileMetaData*>& files = files_[level];\n-    for (size_t i = 0; i < files.size(); i++) {\n-      r.push_back(' ');\n-      AppendNumberTo(&r, files[i]->number);\n-      r.push_back(':');\n-      AppendNumberTo(&r, files[i]->file_size);\n-      r.append(\"[\");\n-      r.append(files[i]->smallest.DebugString());\n-      r.append(\" .. \");\n-      r.append(files[i]->largest.DebugString());\n-      r.append(\"]\\n\");\n-    }\n-  }\n-  return r;\n-}\n-\n-// A helper class so we can efficiently apply a whole sequence\n-// of edits to a particular state without creating intermediate\n-// Versions that contain full copies of the intermediate state.\n-class VersionSet::Builder {\n- private:\n-  // Helper to sort by v->files_[file_number].smallest\n-  struct BySmallestKey {\n-    const InternalKeyComparator* internal_comparator;\n-\n-    bool operator()(FileMetaData* f1, FileMetaData* f2) const {\n-      int r = internal_comparator->Compare(f1->smallest, f2->smallest);\n-      if (r != 0) {\n-        return (r < 0);\n-      } else {\n-        // Break ties by file number\n-        return (f1->number < f2->number);\n-      }\n-    }\n-  };\n-\n-  typedef std::set<FileMetaData*, BySmallestKey> FileSet;\n-  struct LevelState {\n-    std::set<uint64_t> deleted_files;\n-    FileSet* added_files;\n-  };\n-\n-  VersionSet* vset_;\n-  Version* base_;\n-  LevelState levels_[config::kNumLevels];\n-\n- public:\n-  // Initialize a builder with the files from *base and other info from *vset\n-  Builder(VersionSet* vset, Version* base)\n-      : vset_(vset),\n-        base_(base) {\n-    base_->Ref();\n-    BySmallestKey cmp;\n-    cmp.internal_comparator = &vset_->icmp_;\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      levels_[level].added_files = new FileSet(cmp);\n-    }\n-  }\n-\n-  ~Builder() {\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      const FileSet* added = levels_[level].added_files;\n-      std::vector<FileMetaData*> to_unref;\n-      to_unref.reserve(added->size());\n-      for (FileSet::const_iterator it = added->begin();\n-          it != added->end(); ++it) {\n-        to_unref.push_back(*it);\n-      }\n-      delete added;\n-      for (uint32_t i = 0; i < to_unref.size(); i++) {\n-        FileMetaData* f = to_unref[i];\n-        f->refs--;\n-        if (f->refs <= 0) {\n-          delete f;\n-        }\n-      }\n-    }\n-    base_->Unref();\n-  }\n-\n-  // Apply all of the edits in *edit to the current state.\n-  void Apply(VersionEdit* edit) {\n-    // Update compaction pointers\n-    for (size_t i = 0; i < edit->compact_pointers_.size(); i++) {\n-      const int level = edit->compact_pointers_[i].first;\n-      vset_->compact_pointer_[level] =\n-          edit->compact_pointers_[i].second.Encode().ToString();\n-    }\n-\n-    // Delete files\n-    const VersionEdit::DeletedFileSet& del = edit->deleted_files_;\n-    for (VersionEdit::DeletedFileSet::const_iterator iter = del.begin();\n-         iter != del.end();\n-         ++iter) {\n-      const int level = iter->first;\n-      const uint64_t number = iter->second;\n-      levels_[level].deleted_files.insert(number);\n-    }\n-\n-    // Add new files\n-    for (size_t i = 0; i < edit->new_files_.size(); i++) {\n-      const int level = edit->new_files_[i].first;\n-      FileMetaData* f = new FileMetaData(edit->new_files_[i].second);\n-      f->refs = 1;\n-\n-      // We arrange to automatically compact this file after\n-      // a certain number of seeks.  Let's assume:\n-      //   (1) One seek costs 10ms\n-      //   (2) Writing or reading 1MB costs 10ms (100MB/s)\n-      //   (3) A compaction of 1MB does 25MB of IO:\n-      //         1MB read from this level\n-      //         10-12MB read from next level (boundaries may be misaligned)\n-      //         10-12MB written to next level\n-      // This implies that 25 seeks cost the same as the compaction\n-      // of 1MB of data.  I.e., one seek costs approximately the\n-      // same as the compaction of 40KB of data.  We are a little\n-      // conservative and allow approximately one seek for every 16KB\n-      // of data before triggering a compaction.\n-      f->allowed_seeks = (f->file_size / 16384);\n-      if (f->allowed_seeks < 100) f->allowed_seeks = 100;\n-\n-      levels_[level].deleted_files.erase(f->number);\n-      levels_[level].added_files->insert(f);\n-    }\n-  }\n-\n-  // Save the current state in *v.\n-  void SaveTo(Version* v) {\n-    BySmallestKey cmp;\n-    cmp.internal_comparator = &vset_->icmp_;\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      // Merge the set of added files with the set of pre-existing files.\n-      // Drop any deleted files.  Store the result in *v.\n-      const std::vector<FileMetaData*>& base_files = base_->files_[level];\n-      std::vector<FileMetaData*>::const_iterator base_iter = base_files.begin();\n-      std::vector<FileMetaData*>::const_iterator base_end = base_files.end();\n-      const FileSet* added = levels_[level].added_files;\n-      v->files_[level].reserve(base_files.size() + added->size());\n-      for (FileSet::const_iterator added_iter = added->begin();\n-           added_iter != added->end();\n-           ++added_iter) {\n-        // Add all smaller files listed in base_\n-        for (std::vector<FileMetaData*>::const_iterator bpos\n-                 = std::upper_bound(base_iter, base_end, *added_iter, cmp);\n-             base_iter != bpos;\n-             ++base_iter) {\n-          MaybeAddFile(v, level, *base_iter);\n-        }\n-\n-        MaybeAddFile(v, level, *added_iter);\n-      }\n-\n-      // Add remaining base files\n-      for (; base_iter != base_end; ++base_iter) {\n-        MaybeAddFile(v, level, *base_iter);\n-      }\n-\n-#ifndef NDEBUG\n-      // Make sure there is no overlap in levels > 0\n-      if (level > 0) {\n-        for (uint32_t i = 1; i < v->files_[level].size(); i++) {\n-          const InternalKey& prev_end = v->files_[level][i-1]->largest;\n-          const InternalKey& this_begin = v->files_[level][i]->smallest;\n-          if (vset_->icmp_.Compare(prev_end, this_begin) >= 0) {\n-            fprintf(stderr, \"overlapping ranges in same level %s vs. %s\\n\",\n-                    prev_end.DebugString().c_str(),\n-                    this_begin.DebugString().c_str());\n-            abort();\n-          }\n-        }\n-      }\n-#endif\n-    }\n-  }\n-\n-  void MaybeAddFile(Version* v, int level, FileMetaData* f) {\n-    if (levels_[level].deleted_files.count(f->number) > 0) {\n-      // File is deleted: do nothing\n-    } else {\n-      std::vector<FileMetaData*>* files = &v->files_[level];\n-      if (level > 0 && !files->empty()) {\n-        // Must not overlap\n-        assert(vset_->icmp_.Compare((*files)[files->size()-1]->largest,\n-                                    f->smallest) < 0);\n-      }\n-      f->refs++;\n-      files->push_back(f);\n-    }\n-  }\n-};\n-\n-VersionSet::VersionSet(const std::string& dbname,\n-                       const Options* options,\n-                       TableCache* table_cache,\n-                       const InternalKeyComparator* cmp)\n-    : env_(options->env),\n-      dbname_(dbname),\n-      options_(options),\n-      table_cache_(table_cache),\n-      icmp_(*cmp),\n-      next_file_number_(2),\n-      manifest_file_number_(0),  // Filled by Recover()\n-      last_sequence_(0),\n-      log_number_(0),\n-      prev_log_number_(0),\n-      descriptor_file_(NULL),\n-      descriptor_log_(NULL),\n-      dummy_versions_(this),\n-      current_(NULL) {\n-  AppendVersion(new Version(this));\n-}\n-\n-VersionSet::~VersionSet() {\n-  current_->Unref();\n-  assert(dummy_versions_.next_ == &dummy_versions_);  // List must be empty\n-  delete descriptor_log_;\n-  delete descriptor_file_;\n-}\n-\n-void VersionSet::AppendVersion(Version* v) {\n-  // Make \"v\" current\n-  assert(v->refs_ == 0);\n-  assert(v != current_);\n-  if (current_ != NULL) {\n-    current_->Unref();\n-  }\n-  current_ = v;\n-  v->Ref();\n-\n-  // Append to linked list\n-  v->prev_ = dummy_versions_.prev_;\n-  v->next_ = &dummy_versions_;\n-  v->prev_->next_ = v;\n-  v->next_->prev_ = v;\n-}\n-\n-Status VersionSet::LogAndApply(VersionEdit* edit, port::Mutex* mu) {\n-  if (edit->has_log_number_) {\n-    assert(edit->log_number_ >= log_number_);\n-    assert(edit->log_number_ < next_file_number_);\n-  } else {\n-    edit->SetLogNumber(log_number_);\n-  }\n-\n-  if (!edit->has_prev_log_number_) {\n-    edit->SetPrevLogNumber(prev_log_number_);\n-  }\n-\n-  edit->SetNextFile(next_file_number_);\n-  edit->SetLastSequence(last_sequence_);\n-\n-  Version* v = new Version(this);\n-  {\n-    Builder builder(this, current_);\n-    builder.Apply(edit);\n-    builder.SaveTo(v);\n-  }\n-  Finalize(v);\n-\n-  // Initialize new descriptor log file if necessary by creating\n-  // a temporary file that contains a snapshot of the current version.\n-  std::string new_manifest_file;\n-  Status s;\n-  if (descriptor_log_ == NULL) {\n-    // No reason to unlock *mu here since we only hit this path in the\n-    // first call to LogAndApply (when opening the database).\n-    assert(descriptor_file_ == NULL);\n-    new_manifest_file = DescriptorFileName(dbname_, manifest_file_number_);\n-    edit->SetNextFile(next_file_number_);\n-    s = env_->NewWritableFile(new_manifest_file, &descriptor_file_);\n-    if (s.ok()) {\n-      descriptor_log_ = new log::Writer(descriptor_file_);\n-      s = WriteSnapshot(descriptor_log_);\n-    }\n-  }\n-\n-  // Unlock during expensive MANIFEST log write\n-  {\n-    mu->Unlock();\n-\n-    // Write new record to MANIFEST log\n-    if (s.ok()) {\n-      std::string record;\n-      edit->EncodeTo(&record);\n-      s = descriptor_log_->AddRecord(record);\n-      if (s.ok()) {\n-        s = descriptor_file_->Sync();\n-      }\n-      if (!s.ok()) {\n-        Log(options_->info_log, \"MANIFEST write: %s\\n\", s.ToString().c_str());\n-      }\n-    }\n-\n-    // If we just created a new descriptor file, install it by writing a\n-    // new CURRENT file that points to it.\n-    if (s.ok() && !new_manifest_file.empty()) {\n-      s = SetCurrentFile(env_, dbname_, manifest_file_number_);\n-    }\n-\n-    mu->Lock();\n-  }\n-\n-  // Install the new version\n-  if (s.ok()) {\n-    AppendVersion(v);\n-    log_number_ = edit->log_number_;\n-    prev_log_number_ = edit->prev_log_number_;\n-  } else {\n-    delete v;\n-    if (!new_manifest_file.empty()) {\n-      delete descriptor_log_;\n-      delete descriptor_file_;\n-      descriptor_log_ = NULL;\n-      descriptor_file_ = NULL;\n-      env_->DeleteFile(new_manifest_file);\n-    }\n-  }\n-\n-  return s;\n-}\n-\n-Status VersionSet::Recover(bool *save_manifest) {\n-  struct LogReporter : public log::Reader::Reporter {\n-    Status* status;\n-    virtual void Corruption(size_t bytes, const Status& s) {\n-      if (this->status->ok()) *this->status = s;\n-    }\n-  };\n-\n-  // Read \"CURRENT\" file, which contains a pointer to the current manifest file\n-  std::string current;\n-  Status s = ReadFileToString(env_, CurrentFileName(dbname_), &current);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-  if (current.empty() || current[current.size()-1] != '\\n') {\n-    return Status::Corruption(\"CURRENT file does not end with newline\");\n-  }\n-  current.resize(current.size() - 1);\n-\n-  std::string dscname = dbname_ + \"/\" + current;\n-  SequentialFile* file;\n-  s = env_->NewSequentialFile(dscname, &file);\n-  if (!s.ok()) {\n-    return s;\n-  }\n-\n-  bool have_log_number = false;\n-  bool have_prev_log_number = false;\n-  bool have_next_file = false;\n-  bool have_last_sequence = false;\n-  uint64_t next_file = 0;\n-  uint64_t last_sequence = 0;\n-  uint64_t log_number = 0;\n-  uint64_t prev_log_number = 0;\n-  Builder builder(this, current_);\n-\n-  {\n-    LogReporter reporter;\n-    reporter.status = &s;\n-    log::Reader reader(file, &reporter, true/*checksum*/, 0/*initial_offset*/);\n-    Slice record;\n-    std::string scratch;\n-    while (reader.ReadRecord(&record, &scratch) && s.ok()) {\n-      VersionEdit edit;\n-      s = edit.DecodeFrom(record);\n-      if (s.ok()) {\n-        if (edit.has_comparator_ &&\n-            edit.comparator_ != icmp_.user_comparator()->Name()) {\n-          s = Status::InvalidArgument(\n-              edit.comparator_ + \" does not match existing comparator \",\n-              icmp_.user_comparator()->Name());\n-        }\n-      }\n-\n-      if (s.ok()) {\n-        builder.Apply(&edit);\n-      }\n-\n-      if (edit.has_log_number_) {\n-        log_number = edit.log_number_;\n-        have_log_number = true;\n-      }\n-\n-      if (edit.has_prev_log_number_) {\n-        prev_log_number = edit.prev_log_number_;\n-        have_prev_log_number = true;\n-      }\n-\n-      if (edit.has_next_file_number_) {\n-        next_file = edit.next_file_number_;\n-        have_next_file = true;\n-      }\n-\n-      if (edit.has_last_sequence_) {\n-        last_sequence = edit.last_sequence_;\n-        have_last_sequence = true;\n-      }\n-    }\n-  }\n-  delete file;\n-  file = NULL;\n-\n-  if (s.ok()) {\n-    if (!have_next_file) {\n-      s = Status::Corruption(\"no meta-nextfile entry in descriptor\");\n-    } else if (!have_log_number) {\n-      s = Status::Corruption(\"no meta-lognumber entry in descriptor\");\n-    } else if (!have_last_sequence) {\n-      s = Status::Corruption(\"no last-sequence-number entry in descriptor\");\n-    }\n-\n-    if (!have_prev_log_number) {\n-      prev_log_number = 0;\n-    }\n-\n-    MarkFileNumberUsed(prev_log_number);\n-    MarkFileNumberUsed(log_number);\n-  }\n-\n-  if (s.ok()) {\n-    Version* v = new Version(this);\n-    builder.SaveTo(v);\n-    // Install recovered version\n-    Finalize(v);\n-    AppendVersion(v);\n-    manifest_file_number_ = next_file;\n-    next_file_number_ = next_file + 1;\n-    last_sequence_ = last_sequence;\n-    log_number_ = log_number;\n-    prev_log_number_ = prev_log_number;\n-\n-    // See if we can reuse the existing MANIFEST file.\n-    if (ReuseManifest(dscname, current)) {\n-      // No need to save new manifest\n-    } else {\n-      *save_manifest = true;\n-    }\n-  }\n-\n-  return s;\n-}\n-\n-bool VersionSet::ReuseManifest(const std::string& dscname,\n-                               const std::string& dscbase) {\n-  if (!options_->reuse_logs) {\n-    return false;\n-  }\n-  FileType manifest_type;\n-  uint64_t manifest_number;\n-  uint64_t manifest_size;\n-  if (!ParseFileName(dscbase, &manifest_number, &manifest_type) ||\n-      manifest_type != kDescriptorFile ||\n-      !env_->GetFileSize(dscname, &manifest_size).ok() ||\n-      // Make new compacted MANIFEST if old one is too big\n-      manifest_size >= kTargetFileSize) {\n-    return false;\n-  }\n-\n-  assert(descriptor_file_ == NULL);\n-  assert(descriptor_log_ == NULL);\n-  Status r = env_->NewAppendableFile(dscname, &descriptor_file_);\n-  if (!r.ok()) {\n-    Log(options_->info_log, \"Reuse MANIFEST: %s\\n\", r.ToString().c_str());\n-    assert(descriptor_file_ == NULL);\n-    return false;\n-  }\n-\n-  Log(options_->info_log, \"Reusing MANIFEST %s\\n\", dscname.c_str());\n-  descriptor_log_ = new log::Writer(descriptor_file_, manifest_size);\n-  manifest_file_number_ = manifest_number;\n-  return true;\n-}\n-\n-void VersionSet::MarkFileNumberUsed(uint64_t number) {\n-  if (next_file_number_ <= number) {\n-    next_file_number_ = number + 1;\n-  }\n-}\n-\n-void VersionSet::Finalize(Version* v) {\n-  // Precomputed best level for next compaction\n-  int best_level = -1;\n-  double best_score = -1;\n-\n-  for (int level = 0; level < config::kNumLevels-1; level++) {\n-    double score;\n-    if (level == 0) {\n-      // We treat level-0 specially by bounding the number of files\n-      // instead of number of bytes for two reasons:\n-      //\n-      // (1) With larger write-buffer sizes, it is nice not to do too\n-      // many level-0 compactions.\n-      //\n-      // (2) The files in level-0 are merged on every read and\n-      // therefore we wish to avoid too many files when the individual\n-      // file size is small (perhaps because of a small write-buffer\n-      // setting, or very high compression ratios, or lots of\n-      // overwrites/deletions).\n-      score = v->files_[level].size() /\n-          static_cast<double>(config::kL0_CompactionTrigger);\n-    } else {\n-      // Compute the ratio of current size to size limit.\n-      const uint64_t level_bytes = TotalFileSize(v->files_[level]);\n-      score = static_cast<double>(level_bytes) / MaxBytesForLevel(level);\n-    }\n-\n-    if (score > best_score) {\n-      best_level = level;\n-      best_score = score;\n-    }\n-  }\n-\n-  v->compaction_level_ = best_level;\n-  v->compaction_score_ = best_score;\n-}\n-\n-Status VersionSet::WriteSnapshot(log::Writer* log) {\n-  // TODO: Break up into multiple records to reduce memory usage on recovery?\n-\n-  // Save metadata\n-  VersionEdit edit;\n-  edit.SetComparatorName(icmp_.user_comparator()->Name());\n-\n-  // Save compaction pointers\n-  for (int level = 0; level < config::kNumLevels; level++) {\n-    if (!compact_pointer_[level].empty()) {\n-      InternalKey key;\n-      key.DecodeFrom(compact_pointer_[level]);\n-      edit.SetCompactPointer(level, key);\n-    }\n-  }\n-\n-  // Save files\n-  for (int level = 0; level < config::kNumLevels; level++) {\n-    const std::vector<FileMetaData*>& files = current_->files_[level];\n-    for (size_t i = 0; i < files.size(); i++) {\n-      const FileMetaData* f = files[i];\n-      edit.AddFile(level, f->number, f->file_size, f->smallest, f->largest);\n-    }\n-  }\n-\n-  std::string record;\n-  edit.EncodeTo(&record);\n-  return log->AddRecord(record);\n-}\n-\n-int VersionSet::NumLevelFiles(int level) const {\n-  assert(level >= 0);\n-  assert(level < config::kNumLevels);\n-  return current_->files_[level].size();\n-}\n-\n-const char* VersionSet::LevelSummary(LevelSummaryStorage* scratch) const {\n-  // Update code if kNumLevels changes\n-  assert(config::kNumLevels == 7);\n-  snprintf(scratch->buffer, sizeof(scratch->buffer),\n-           \"files[ %d %d %d %d %d %d %d ]\",\n-           int(current_->files_[0].size()),\n-           int(current_->files_[1].size()),\n-           int(current_->files_[2].size()),\n-           int(current_->files_[3].size()),\n-           int(current_->files_[4].size()),\n-           int(current_->files_[5].size()),\n-           int(current_->files_[6].size()));\n-  return scratch->buffer;\n-}\n-\n-uint64_t VersionSet::ApproximateOffsetOf(Version* v, const InternalKey& ikey) {\n-  uint64_t result = 0;\n-  for (int level = 0; level < config::kNumLevels; level++) {\n-    const std::vector<FileMetaData*>& files = v->files_[level];\n-    for (size_t i = 0; i < files.size(); i++) {\n-      if (icmp_.Compare(files[i]->largest, ikey) <= 0) {\n-        // Entire file is before \"ikey\", so just add the file size\n-        result += files[i]->file_size;\n-      } else if (icmp_.Compare(files[i]->smallest, ikey) > 0) {\n-        // Entire file is after \"ikey\", so ignore\n-        if (level > 0) {\n-          // Files other than level 0 are sorted by meta->smallest, so\n-          // no further files in this level will contain data for\n-          // \"ikey\".\n-          break;\n-        }\n-      } else {\n-        // \"ikey\" falls in the range for this table.  Add the\n-        // approximate offset of \"ikey\" within the table.\n-        Table* tableptr;\n-        Iterator* iter = table_cache_->NewIterator(\n-            ReadOptions(), files[i]->number, files[i]->file_size, &tableptr);\n-        if (tableptr != NULL) {\n-          result += tableptr->ApproximateOffsetOf(ikey.Encode());\n-        }\n-        delete iter;\n-      }\n-    }\n-  }\n-  return result;\n-}\n-\n-void VersionSet::AddLiveFiles(std::set<uint64_t>* live) {\n-  for (Version* v = dummy_versions_.next_;\n-       v != &dummy_versions_;\n-       v = v->next_) {\n-    for (int level = 0; level < config::kNumLevels; level++) {\n-      const std::vector<FileMetaData*>& files = v->files_[level];\n-      for (size_t i = 0; i < files.size(); i++) {\n-        live->insert(files[i]->number);\n-      }\n-    }\n-  }\n-}\n-\n-int64_t VersionSet::NumLevelBytes(int level) const {\n-  assert(level >= 0);\n-  assert(level < config::kNumLevels);\n-  return TotalFileSize(current_->files_[level]);\n-}\n-\n-int64_t VersionSet::MaxNextLevelOverlappingBytes() {\n-  int64_t result = 0;\n-  std::vector<FileMetaData*> overlaps;\n-  for (int level = 1; level < config::kNumLevels - 1; level++) {\n-    for (size_t i = 0; i < current_->files_[level].size(); i++) {\n-      const FileMetaData* f = current_->files_[level][i];\n-      current_->GetOverlappingInputs(level+1, &f->smallest, &f->largest,\n-                                     &overlaps);\n-      const int64_t sum = TotalFileSize(overlaps);\n-      if (sum > result) {\n-        result = sum;\n-      }\n-    }\n-  }\n-  return result;\n-}\n-\n-// Stores the minimal range that covers all entries in inputs in\n-// *smallest, *largest.\n-// REQUIRES: inputs is not empty\n-void VersionSet::GetRange(const std::vector<FileMetaData*>& inputs,\n-                          InternalKey* smallest,\n-                          InternalKey* largest) {\n-  assert(!inputs.empty());\n-  smallest->Clear();\n-  largest->Clear();\n-  for (size_t i = 0; i < inputs.size(); i++) {\n-    FileMetaData* f = inputs[i];\n-    if (i == 0) {\n-      *smallest = f->smallest;\n-      *largest = f->largest;\n-    } else {\n-      if (icmp_.Compare(f->smallest, *smallest) < 0) {\n-        *smallest = f->smallest;\n-      }\n-      if (icmp_.Compare(f->largest, *largest) > 0) {\n-        *largest = f->largest;\n-      }\n-    }\n-  }\n-}\n-\n-// Stores the minimal range that covers all entries in inputs1 and inputs2\n-// in *smallest, *largest.\n-// REQUIRES: inputs is not empty\n-void VersionSet::GetRange2(const std::vector<FileMetaData*>& inputs1,\n-                           const std::vector<FileMetaData*>& inputs2,\n-                           InternalKey* smallest,\n-                           InternalKey* largest) {\n-  std::vector<FileMetaData*> all = inputs1;\n-  all.insert(all.end(), inputs2.begin(), inputs2.end());\n-  GetRange(all, smallest, largest);\n-}\n-\n-Iterator* VersionSet::MakeInputIterator(Compaction* c) {\n-  ReadOptions options;\n-  options.verify_checksums = options_->paranoid_checks;\n-  options.fill_cache = false;\n-\n-  // Level-0 files have to be merged together.  For other levels,\n-  // we will make a concatenating iterator per level.\n-  // TODO(opt): use concatenating iterator for level-0 if there is no overlap\n-  const int space = (c->level() == 0 ? c->inputs_[0].size() + 1 : 2);\n-  Iterator** list = new Iterator*[space];\n-  int num = 0;\n-  for (int which = 0; which < 2; which++) {\n-    if (!c->inputs_[which].empty()) {\n-      if (c->level() + which == 0) {\n-        const std::vector<FileMetaData*>& files = c->inputs_[which];\n-        for (size_t i = 0; i < files.size(); i++) {\n-          list[num++] = table_cache_->NewIterator(\n-              options, files[i]->number, files[i]->file_size);\n-        }\n-      } else {\n-        // Create concatenating iterator for the files from this level\n-        list[num++] = NewTwoLevelIterator(\n-            new Version::LevelFileNumIterator(icmp_, &c->inputs_[which]),\n-            &GetFileIterator, table_cache_, options);\n-      }\n-    }\n-  }\n-  assert(num <= space);\n-  Iterator* result = NewMergingIterator(&icmp_, list, num);\n-  delete[] list;\n-  return result;\n-}\n-\n-Compaction* VersionSet::PickCompaction() {\n-  Compaction* c;\n-  int level;\n-\n-  // We prefer compactions triggered by too much data in a level over\n-  // the compactions triggered by seeks.\n-  const bool size_compaction = (current_->compaction_score_ >= 1);\n-  const bool seek_compaction = (current_->file_to_compact_ != NULL);\n-  if (size_compaction) {\n-    level = current_->compaction_level_;\n-    assert(level >= 0);\n-    assert(level+1 < config::kNumLevels);\n-    c = new Compaction(level);\n-\n-    // Pick the first file that comes after compact_pointer_[level]\n-    for (size_t i = 0; i < current_->files_[level].size(); i++) {\n-      FileMetaData* f = current_->files_[level][i];\n-      if (compact_pointer_[level].empty() ||\n-          icmp_.Compare(f->largest.Encode(), compact_pointer_[level]) > 0) {\n-        c->inputs_[0].push_back(f);\n-        break;\n-      }\n-    }\n-    if (c->inputs_[0].empty()) {\n-      // Wrap-around to the beginning of the key space\n-      c->inputs_[0].push_back(current_->files_[level][0]);\n-    }\n-  } else if (seek_compaction) {\n-    level = current_->file_to_compact_level_;\n-    c = new Compaction(level);\n-    c->inputs_[0].push_back(current_->file_to_compact_);\n-  } else {\n-    return NULL;\n-  }\n-\n-  c->input_version_ = current_;\n-  c->input_version_->Ref();\n-\n-  // Files in level 0 may overlap each other, so pick up all overlapping ones\n-  if (level == 0) {\n-    InternalKey smallest, largest;\n-    GetRange(c->inputs_[0], &smallest, &largest);\n-    // Note that the next call will discard the file we placed in\n-    // c->inputs_[0] earlier and replace it with an overlapping set\n-    // which will include the picked file.\n-    current_->GetOverlappingInputs(0, &smallest, &largest, &c->inputs_[0]);\n-    assert(!c->inputs_[0].empty());\n-  }\n-\n-  SetupOtherInputs(c);\n-\n-  return c;\n-}\n-\n-void VersionSet::SetupOtherInputs(Compaction* c) {\n-  const int level = c->level();\n-  InternalKey smallest, largest;\n-  GetRange(c->inputs_[0], &smallest, &largest);\n-\n-  current_->GetOverlappingInputs(level+1, &smallest, &largest, &c->inputs_[1]);\n-\n-  // Get entire range covered by compaction\n-  InternalKey all_start, all_limit;\n-  GetRange2(c->inputs_[0], c->inputs_[1], &all_start, &all_limit);\n-\n-  // See if we can grow the number of inputs in \"level\" without\n-  // changing the number of \"level+1\" files we pick up.\n-  if (!c->inputs_[1].empty()) {\n-    std::vector<FileMetaData*> expanded0;\n-    current_->GetOverlappingInputs(level, &all_start, &all_limit, &expanded0);\n-    const int64_t inputs0_size = TotalFileSize(c->inputs_[0]);\n-    const int64_t inputs1_size = TotalFileSize(c->inputs_[1]);\n-    const int64_t expanded0_size = TotalFileSize(expanded0);\n-    if (expanded0.size() > c->inputs_[0].size() &&\n-        inputs1_size + expanded0_size < kExpandedCompactionByteSizeLimit) {\n-      InternalKey new_start, new_limit;\n-      GetRange(expanded0, &new_start, &new_limit);\n-      std::vector<FileMetaData*> expanded1;\n-      current_->GetOverlappingInputs(level+1, &new_start, &new_limit,\n-                                     &expanded1);\n-      if (expanded1.size() == c->inputs_[1].size()) {\n-        Log(options_->info_log,\n-            \"Expanding@%d %d+%d (%ld+%ld bytes) to %d+%d (%ld+%ld bytes)\\n\",\n-            level,\n-            int(c->inputs_[0].size()),\n-            int(c->inputs_[1].size()),\n-            long(inputs0_size), long(inputs1_size),\n-            int(expanded0.size()),\n-            int(expanded1.size()),\n-            long(expanded0_size), long(inputs1_size));\n-        smallest = new_start;\n-        largest = new_limit;\n-        c->inputs_[0] = expanded0;\n-        c->inputs_[1] = expanded1;\n-        GetRange2(c->inputs_[0], c->inputs_[1], &all_start, &all_limit);\n-      }\n-    }\n-  }\n-\n-  // Compute the set of grandparent files that overlap this compaction\n-  // (parent == level+1; grandparent == level+2)\n-  if (level + 2 < config::kNumLevels) {\n-    current_->GetOverlappingInputs(level + 2, &all_start, &all_limit,\n-                                   &c->grandparents_);\n-  }\n-\n-  if (false) {\n-    Log(options_->info_log, \"Compacting %d '%s' .. '%s'\",\n-        level,\n-        smallest.DebugString().c_str(),\n-        largest.DebugString().c_str());\n-  }\n-\n-  // Update the place where we will do the next compaction for this level.\n-  // We update this immediately instead of waiting for the VersionEdit\n-  // to be applied so that if the compaction fails, we will try a different\n-  // key range next time.\n-  compact_pointer_[level] = largest.Encode().ToString();\n-  c->edit_.SetCompactPointer(level, largest);\n-}\n-\n-Compaction* VersionSet::CompactRange(\n-    int level,\n-    const InternalKey* begin,\n-    const InternalKey* end) {\n-  std::vector<FileMetaData*> inputs;\n-  current_->GetOverlappingInputs(level, begin, end, &inputs);\n-  if (inputs.empty()) {\n-    return NULL;\n-  }\n-\n-  // Avoid compacting too much in one shot in case the range is large.\n-  // But we cannot do this for level-0 since level-0 files can overlap\n-  // and we must not pick one file and drop another older file if the\n-  // two files overlap.\n-  if (level > 0) {\n-    const uint64_t limit = MaxFileSizeForLevel(level);\n-    uint64_t total = 0;\n-    for (size_t i = 0; i < inputs.size(); i++) {\n-      uint64_t s = inputs[i]->file_size;\n-      total += s;\n-      if (total >= limit) {\n-        inputs.resize(i + 1);\n-        break;\n-      }\n-    }\n-  }\n-\n-  Compaction* c = new Compaction(level);\n-  c->input_version_ = current_;\n-  c->input_version_->Ref();\n-  c->inputs_[0] = inputs;\n-  SetupOtherInputs(c);\n-  return c;\n-}\n-\n-Compaction::Compaction(int level)\n-    : level_(level),\n-      max_output_file_size_(MaxFileSizeForLevel(level)),\n-      input_version_(NULL),\n-      grandparent_index_(0),\n-      seen_key_(false),\n-      overlapped_bytes_(0) {\n-  for (int i = 0; i < config::kNumLevels; i++) {\n-    level_ptrs_[i] = 0;\n-  }\n-}\n-\n-Compaction::~Compaction() {\n-  if (input_version_ != NULL) {\n-    input_version_->Unref();\n-  }\n-}\n-\n-bool Compaction::IsTrivialMove() const {\n-  // Avoid a move if there is lots of overlapping grandparent data.\n-  // Otherwise, the move could create a parent file that will require\n-  // a very expensive merge later on.\n-  return (num_input_files(0) == 1 &&\n-          num_input_files(1) == 0 &&\n-          TotalFileSize(grandparents_) <= kMaxGrandParentOverlapBytes);\n-}\n-\n-void Compaction::AddInputDeletions(VersionEdit* edit) {\n-  for (int which = 0; which < 2; which++) {\n-    for (size_t i = 0; i < inputs_[which].size(); i++) {\n-      edit->DeleteFile(level_ + which, inputs_[which][i]->number);\n-    }\n-  }\n-}\n-\n-bool Compaction::IsBaseLevelForKey(const Slice& user_key) {\n-  // Maybe use binary search to find right entry instead of linear search?\n-  const Comparator* user_cmp = input_version_->vset_->icmp_.user_comparator();\n-  for (int lvl = level_ + 2; lvl < config::kNumLevels; lvl++) {\n-    const std::vector<FileMetaData*>& files = input_version_->files_[lvl];\n-    for (; level_ptrs_[lvl] < files.size(); ) {\n-      FileMetaData* f = files[level_ptrs_[lvl]];\n-      if (user_cmp->Compare(user_key, f->largest.user_key()) <= 0) {\n-        // We've advanced far enough\n-        if (user_cmp->Compare(user_key, f->smallest.user_key()) >= 0) {\n-          // Key falls in this file's range, so definitely not base level\n-          return false;\n-        }\n-        break;\n-      }\n-      level_ptrs_[lvl]++;\n-    }\n-  }\n-  return true;\n-}\n-\n-bool Compaction::ShouldStopBefore(const Slice& internal_key) {\n-  // Scan to find earliest grandparent file that contains key.\n-  const InternalKeyComparator* icmp = &input_version_->vset_->icmp_;\n-  while (grandparent_index_ < grandparents_.size() &&\n-      icmp->Compare(internal_key,\n-                    grandparents_[grandparent_index_]->largest.Encode()) > 0) {\n-    if (seen_key_) {\n-      overlapped_bytes_ += grandparents_[grandparent_index_]->file_size;\n-    }\n-    grandparent_index_++;\n-  }\n-  seen_key_ = true;\n-\n-  if (overlapped_bytes_ > kMaxGrandParentOverlapBytes) {\n-    // Too much overlap for current output; start new output\n-    overlapped_bytes_ = 0;\n-    return true;\n-  } else {\n-    return false;\n-  }\n-}\n-\n-void Compaction::ReleaseInputs() {\n-  if (input_version_ != NULL) {\n-    input_version_->Unref();\n-    input_version_ = NULL;\n-  }\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "1dec74567380915988f9dbb3beffa98a85c97cd2",
        "filename": "src/leveldb/db/version_set.h",
        "status": "removed",
        "additions": 0,
        "deletions": 398,
        "changes": 398,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_set.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_set.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,398 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// The representation of a DBImpl consists of a set of Versions.  The\n-// newest version is called \"current\".  Older versions may be kept\n-// around to provide a consistent view to live iterators.\n-//\n-// Each Version keeps track of a set of Table files per level.  The\n-// entire set of versions is maintained in a VersionSet.\n-//\n-// Version,VersionSet are thread-compatible, but require external\n-// synchronization on all accesses.\n-\n-#ifndef STORAGE_LEVELDB_DB_VERSION_SET_H_\n-#define STORAGE_LEVELDB_DB_VERSION_SET_H_\n-\n-#include <map>\n-#include <set>\n-#include <vector>\n-#include \"db/dbformat.h\"\n-#include \"db/version_edit.h\"\n-#include \"port/port.h\"\n-#include \"port/thread_annotations.h\"\n-\n-namespace leveldb {\n-\n-namespace log { class Writer; }\n-\n-class Compaction;\n-class Iterator;\n-class MemTable;\n-class TableBuilder;\n-class TableCache;\n-class Version;\n-class VersionSet;\n-class WritableFile;\n-\n-// Return the smallest index i such that files[i]->largest >= key.\n-// Return files.size() if there is no such file.\n-// REQUIRES: \"files\" contains a sorted list of non-overlapping files.\n-extern int FindFile(const InternalKeyComparator& icmp,\n-                    const std::vector<FileMetaData*>& files,\n-                    const Slice& key);\n-\n-// Returns true iff some file in \"files\" overlaps the user key range\n-// [*smallest,*largest].\n-// smallest==NULL represents a key smaller than all keys in the DB.\n-// largest==NULL represents a key largest than all keys in the DB.\n-// REQUIRES: If disjoint_sorted_files, files[] contains disjoint ranges\n-//           in sorted order.\n-extern bool SomeFileOverlapsRange(\n-    const InternalKeyComparator& icmp,\n-    bool disjoint_sorted_files,\n-    const std::vector<FileMetaData*>& files,\n-    const Slice* smallest_user_key,\n-    const Slice* largest_user_key);\n-\n-class Version {\n- public:\n-  // Append to *iters a sequence of iterators that will\n-  // yield the contents of this Version when merged together.\n-  // REQUIRES: This version has been saved (see VersionSet::SaveTo)\n-  void AddIterators(const ReadOptions&, std::vector<Iterator*>* iters);\n-\n-  // Lookup the value for key.  If found, store it in *val and\n-  // return OK.  Else return a non-OK status.  Fills *stats.\n-  // REQUIRES: lock is not held\n-  struct GetStats {\n-    FileMetaData* seek_file;\n-    int seek_file_level;\n-  };\n-  Status Get(const ReadOptions&, const LookupKey& key, std::string* val,\n-             GetStats* stats);\n-\n-  // Adds \"stats\" into the current state.  Returns true if a new\n-  // compaction may need to be triggered, false otherwise.\n-  // REQUIRES: lock is held\n-  bool UpdateStats(const GetStats& stats);\n-\n-  // Record a sample of bytes read at the specified internal key.\n-  // Samples are taken approximately once every config::kReadBytesPeriod\n-  // bytes.  Returns true if a new compaction may need to be triggered.\n-  // REQUIRES: lock is held\n-  bool RecordReadSample(Slice key);\n-\n-  // Reference count management (so Versions do not disappear out from\n-  // under live iterators)\n-  void Ref();\n-  void Unref();\n-\n-  void GetOverlappingInputs(\n-      int level,\n-      const InternalKey* begin,         // NULL means before all keys\n-      const InternalKey* end,           // NULL means after all keys\n-      std::vector<FileMetaData*>* inputs);\n-\n-  // Returns true iff some file in the specified level overlaps\n-  // some part of [*smallest_user_key,*largest_user_key].\n-  // smallest_user_key==NULL represents a key smaller than all keys in the DB.\n-  // largest_user_key==NULL represents a key largest than all keys in the DB.\n-  bool OverlapInLevel(int level,\n-                      const Slice* smallest_user_key,\n-                      const Slice* largest_user_key);\n-\n-  // Return the level at which we should place a new memtable compaction\n-  // result that covers the range [smallest_user_key,largest_user_key].\n-  int PickLevelForMemTableOutput(const Slice& smallest_user_key,\n-                                 const Slice& largest_user_key);\n-\n-  int NumFiles(int level) const { return files_[level].size(); }\n-\n-  // Return a human readable string that describes this version's contents.\n-  std::string DebugString() const;\n-\n- private:\n-  friend class Compaction;\n-  friend class VersionSet;\n-\n-  class LevelFileNumIterator;\n-  Iterator* NewConcatenatingIterator(const ReadOptions&, int level) const;\n-\n-  // Call func(arg, level, f) for every file that overlaps user_key in\n-  // order from newest to oldest.  If an invocation of func returns\n-  // false, makes no more calls.\n-  //\n-  // REQUIRES: user portion of internal_key == user_key.\n-  void ForEachOverlapping(Slice user_key, Slice internal_key,\n-                          void* arg,\n-                          bool (*func)(void*, int, FileMetaData*));\n-\n-  VersionSet* vset_;            // VersionSet to which this Version belongs\n-  Version* next_;               // Next version in linked list\n-  Version* prev_;               // Previous version in linked list\n-  int refs_;                    // Number of live refs to this version\n-\n-  // List of files per level\n-  std::vector<FileMetaData*> files_[config::kNumLevels];\n-\n-  // Next file to compact based on seek stats.\n-  FileMetaData* file_to_compact_;\n-  int file_to_compact_level_;\n-\n-  // Level that should be compacted next and its compaction score.\n-  // Score < 1 means compaction is not strictly needed.  These fields\n-  // are initialized by Finalize().\n-  double compaction_score_;\n-  int compaction_level_;\n-\n-  explicit Version(VersionSet* vset)\n-      : vset_(vset), next_(this), prev_(this), refs_(0),\n-        file_to_compact_(NULL),\n-        file_to_compact_level_(-1),\n-        compaction_score_(-1),\n-        compaction_level_(-1) {\n-  }\n-\n-  ~Version();\n-\n-  // No copying allowed\n-  Version(const Version&);\n-  void operator=(const Version&);\n-};\n-\n-class VersionSet {\n- public:\n-  VersionSet(const std::string& dbname,\n-             const Options* options,\n-             TableCache* table_cache,\n-             const InternalKeyComparator*);\n-  ~VersionSet();\n-\n-  // Apply *edit to the current version to form a new descriptor that\n-  // is both saved to persistent state and installed as the new\n-  // current version.  Will release *mu while actually writing to the file.\n-  // REQUIRES: *mu is held on entry.\n-  // REQUIRES: no other thread concurrently calls LogAndApply()\n-  Status LogAndApply(VersionEdit* edit, port::Mutex* mu)\n-      EXCLUSIVE_LOCKS_REQUIRED(mu);\n-\n-  // Recover the last saved descriptor from persistent storage.\n-  Status Recover(bool *save_manifest);\n-\n-  // Return the current version.\n-  Version* current() const { return current_; }\n-\n-  // Return the current manifest file number\n-  uint64_t ManifestFileNumber() const { return manifest_file_number_; }\n-\n-  // Allocate and return a new file number\n-  uint64_t NewFileNumber() { return next_file_number_++; }\n-\n-  // Arrange to reuse \"file_number\" unless a newer file number has\n-  // already been allocated.\n-  // REQUIRES: \"file_number\" was returned by a call to NewFileNumber().\n-  void ReuseFileNumber(uint64_t file_number) {\n-    if (next_file_number_ == file_number + 1) {\n-      next_file_number_ = file_number;\n-    }\n-  }\n-\n-  // Return the number of Table files at the specified level.\n-  int NumLevelFiles(int level) const;\n-\n-  // Return the combined file size of all files at the specified level.\n-  int64_t NumLevelBytes(int level) const;\n-\n-  // Return the last sequence number.\n-  uint64_t LastSequence() const { return last_sequence_; }\n-\n-  // Set the last sequence number to s.\n-  void SetLastSequence(uint64_t s) {\n-    assert(s >= last_sequence_);\n-    last_sequence_ = s;\n-  }\n-\n-  // Mark the specified file number as used.\n-  void MarkFileNumberUsed(uint64_t number);\n-\n-  // Return the current log file number.\n-  uint64_t LogNumber() const { return log_number_; }\n-\n-  // Return the log file number for the log file that is currently\n-  // being compacted, or zero if there is no such log file.\n-  uint64_t PrevLogNumber() const { return prev_log_number_; }\n-\n-  // Pick level and inputs for a new compaction.\n-  // Returns NULL if there is no compaction to be done.\n-  // Otherwise returns a pointer to a heap-allocated object that\n-  // describes the compaction.  Caller should delete the result.\n-  Compaction* PickCompaction();\n-\n-  // Return a compaction object for compacting the range [begin,end] in\n-  // the specified level.  Returns NULL if there is nothing in that\n-  // level that overlaps the specified range.  Caller should delete\n-  // the result.\n-  Compaction* CompactRange(\n-      int level,\n-      const InternalKey* begin,\n-      const InternalKey* end);\n-\n-  // Return the maximum overlapping data (in bytes) at next level for any\n-  // file at a level >= 1.\n-  int64_t MaxNextLevelOverlappingBytes();\n-\n-  // Create an iterator that reads over the compaction inputs for \"*c\".\n-  // The caller should delete the iterator when no longer needed.\n-  Iterator* MakeInputIterator(Compaction* c);\n-\n-  // Returns true iff some level needs a compaction.\n-  bool NeedsCompaction() const {\n-    Version* v = current_;\n-    return (v->compaction_score_ >= 1) || (v->file_to_compact_ != NULL);\n-  }\n-\n-  // Add all files listed in any live version to *live.\n-  // May also mutate some internal state.\n-  void AddLiveFiles(std::set<uint64_t>* live);\n-\n-  // Return the approximate offset in the database of the data for\n-  // \"key\" as of version \"v\".\n-  uint64_t ApproximateOffsetOf(Version* v, const InternalKey& key);\n-\n-  // Return a human-readable short (single-line) summary of the number\n-  // of files per level.  Uses *scratch as backing store.\n-  struct LevelSummaryStorage {\n-    char buffer[100];\n-  };\n-  const char* LevelSummary(LevelSummaryStorage* scratch) const;\n-\n- private:\n-  class Builder;\n-\n-  friend class Compaction;\n-  friend class Version;\n-\n-  bool ReuseManifest(const std::string& dscname, const std::string& dscbase);\n-\n-  void Finalize(Version* v);\n-\n-  void GetRange(const std::vector<FileMetaData*>& inputs,\n-                InternalKey* smallest,\n-                InternalKey* largest);\n-\n-  void GetRange2(const std::vector<FileMetaData*>& inputs1,\n-                 const std::vector<FileMetaData*>& inputs2,\n-                 InternalKey* smallest,\n-                 InternalKey* largest);\n-\n-  void SetupOtherInputs(Compaction* c);\n-\n-  // Save current contents to *log\n-  Status WriteSnapshot(log::Writer* log);\n-\n-  void AppendVersion(Version* v);\n-\n-  Env* const env_;\n-  const std::string dbname_;\n-  const Options* const options_;\n-  TableCache* const table_cache_;\n-  const InternalKeyComparator icmp_;\n-  uint64_t next_file_number_;\n-  uint64_t manifest_file_number_;\n-  uint64_t last_sequence_;\n-  uint64_t log_number_;\n-  uint64_t prev_log_number_;  // 0 or backing store for memtable being compacted\n-\n-  // Opened lazily\n-  WritableFile* descriptor_file_;\n-  log::Writer* descriptor_log_;\n-  Version dummy_versions_;  // Head of circular doubly-linked list of versions.\n-  Version* current_;        // == dummy_versions_.prev_\n-\n-  // Per-level key at which the next compaction at that level should start.\n-  // Either an empty string, or a valid InternalKey.\n-  std::string compact_pointer_[config::kNumLevels];\n-\n-  // No copying allowed\n-  VersionSet(const VersionSet&);\n-  void operator=(const VersionSet&);\n-};\n-\n-// A Compaction encapsulates information about a compaction.\n-class Compaction {\n- public:\n-  ~Compaction();\n-\n-  // Return the level that is being compacted.  Inputs from \"level\"\n-  // and \"level+1\" will be merged to produce a set of \"level+1\" files.\n-  int level() const { return level_; }\n-\n-  // Return the object that holds the edits to the descriptor done\n-  // by this compaction.\n-  VersionEdit* edit() { return &edit_; }\n-\n-  // \"which\" must be either 0 or 1\n-  int num_input_files(int which) const { return inputs_[which].size(); }\n-\n-  // Return the ith input file at \"level()+which\" (\"which\" must be 0 or 1).\n-  FileMetaData* input(int which, int i) const { return inputs_[which][i]; }\n-\n-  // Maximum size of files to build during this compaction.\n-  uint64_t MaxOutputFileSize() const { return max_output_file_size_; }\n-\n-  // Is this a trivial compaction that can be implemented by just\n-  // moving a single input file to the next level (no merging or splitting)\n-  bool IsTrivialMove() const;\n-\n-  // Add all inputs to this compaction as delete operations to *edit.\n-  void AddInputDeletions(VersionEdit* edit);\n-\n-  // Returns true if the information we have available guarantees that\n-  // the compaction is producing data in \"level+1\" for which no data exists\n-  // in levels greater than \"level+1\".\n-  bool IsBaseLevelForKey(const Slice& user_key);\n-\n-  // Returns true iff we should stop building the current output\n-  // before processing \"internal_key\".\n-  bool ShouldStopBefore(const Slice& internal_key);\n-\n-  // Release the input version for the compaction, once the compaction\n-  // is successful.\n-  void ReleaseInputs();\n-\n- private:\n-  friend class Version;\n-  friend class VersionSet;\n-\n-  explicit Compaction(int level);\n-\n-  int level_;\n-  uint64_t max_output_file_size_;\n-  Version* input_version_;\n-  VersionEdit edit_;\n-\n-  // Each compaction reads inputs from \"level_\" and \"level_+1\"\n-  std::vector<FileMetaData*> inputs_[2];      // The two sets of inputs\n-\n-  // State used to check for number of of overlapping grandparent files\n-  // (parent == level_ + 1, grandparent == level_ + 2)\n-  std::vector<FileMetaData*> grandparents_;\n-  size_t grandparent_index_;  // Index in grandparent_starts_\n-  bool seen_key_;             // Some output key has been seen\n-  int64_t overlapped_bytes_;  // Bytes of overlap between current output\n-                              // and grandparent files\n-\n-  // State for implementing IsBaseLevelForKey\n-\n-  // level_ptrs_ holds indices into input_version_->levels_: our state\n-  // is that we are positioned at one of the file ranges for each\n-  // higher level than the ones involved in this compaction (i.e. for\n-  // all L >= level_ + 2).\n-  size_t level_ptrs_[config::kNumLevels];\n-};\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_DB_VERSION_SET_H_"
      },
      {
        "sha": "501e34d1337d3917185b70369d9982db54e787aa",
        "filename": "src/leveldb/db/version_set_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 179,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_set_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/version_set_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,179 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"db/version_set.h\"\n-#include \"util/logging.h\"\n-#include \"util/testharness.h\"\n-#include \"util/testutil.h\"\n-\n-namespace leveldb {\n-\n-class FindFileTest {\n- public:\n-  std::vector<FileMetaData*> files_;\n-  bool disjoint_sorted_files_;\n-\n-  FindFileTest() : disjoint_sorted_files_(true) { }\n-\n-  ~FindFileTest() {\n-    for (int i = 0; i < files_.size(); i++) {\n-      delete files_[i];\n-    }\n-  }\n-\n-  void Add(const char* smallest, const char* largest,\n-           SequenceNumber smallest_seq = 100,\n-           SequenceNumber largest_seq = 100) {\n-    FileMetaData* f = new FileMetaData;\n-    f->number = files_.size() + 1;\n-    f->smallest = InternalKey(smallest, smallest_seq, kTypeValue);\n-    f->largest = InternalKey(largest, largest_seq, kTypeValue);\n-    files_.push_back(f);\n-  }\n-\n-  int Find(const char* key) {\n-    InternalKey target(key, 100, kTypeValue);\n-    InternalKeyComparator cmp(BytewiseComparator());\n-    return FindFile(cmp, files_, target.Encode());\n-  }\n-\n-  bool Overlaps(const char* smallest, const char* largest) {\n-    InternalKeyComparator cmp(BytewiseComparator());\n-    Slice s(smallest != NULL ? smallest : \"\");\n-    Slice l(largest != NULL ? largest : \"\");\n-    return SomeFileOverlapsRange(cmp, disjoint_sorted_files_, files_,\n-                                 (smallest != NULL ? &s : NULL),\n-                                 (largest != NULL ? &l : NULL));\n-  }\n-};\n-\n-TEST(FindFileTest, Empty) {\n-  ASSERT_EQ(0, Find(\"foo\"));\n-  ASSERT_TRUE(! Overlaps(\"a\", \"z\"));\n-  ASSERT_TRUE(! Overlaps(NULL, \"z\"));\n-  ASSERT_TRUE(! Overlaps(\"a\", NULL));\n-  ASSERT_TRUE(! Overlaps(NULL, NULL));\n-}\n-\n-TEST(FindFileTest, Single) {\n-  Add(\"p\", \"q\");\n-  ASSERT_EQ(0, Find(\"a\"));\n-  ASSERT_EQ(0, Find(\"p\"));\n-  ASSERT_EQ(0, Find(\"p1\"));\n-  ASSERT_EQ(0, Find(\"q\"));\n-  ASSERT_EQ(1, Find(\"q1\"));\n-  ASSERT_EQ(1, Find(\"z\"));\n-\n-  ASSERT_TRUE(! Overlaps(\"a\", \"b\"));\n-  ASSERT_TRUE(! Overlaps(\"z1\", \"z2\"));\n-  ASSERT_TRUE(Overlaps(\"a\", \"p\"));\n-  ASSERT_TRUE(Overlaps(\"a\", \"q\"));\n-  ASSERT_TRUE(Overlaps(\"a\", \"z\"));\n-  ASSERT_TRUE(Overlaps(\"p\", \"p1\"));\n-  ASSERT_TRUE(Overlaps(\"p\", \"q\"));\n-  ASSERT_TRUE(Overlaps(\"p\", \"z\"));\n-  ASSERT_TRUE(Overlaps(\"p1\", \"p2\"));\n-  ASSERT_TRUE(Overlaps(\"p1\", \"z\"));\n-  ASSERT_TRUE(Overlaps(\"q\", \"q\"));\n-  ASSERT_TRUE(Overlaps(\"q\", \"q1\"));\n-\n-  ASSERT_TRUE(! Overlaps(NULL, \"j\"));\n-  ASSERT_TRUE(! Overlaps(\"r\", NULL));\n-  ASSERT_TRUE(Overlaps(NULL, \"p\"));\n-  ASSERT_TRUE(Overlaps(NULL, \"p1\"));\n-  ASSERT_TRUE(Overlaps(\"q\", NULL));\n-  ASSERT_TRUE(Overlaps(NULL, NULL));\n-}\n-\n-\n-TEST(FindFileTest, Multiple) {\n-  Add(\"150\", \"200\");\n-  Add(\"200\", \"250\");\n-  Add(\"300\", \"350\");\n-  Add(\"400\", \"450\");\n-  ASSERT_EQ(0, Find(\"100\"));\n-  ASSERT_EQ(0, Find(\"150\"));\n-  ASSERT_EQ(0, Find(\"151\"));\n-  ASSERT_EQ(0, Find(\"199\"));\n-  ASSERT_EQ(0, Find(\"200\"));\n-  ASSERT_EQ(1, Find(\"201\"));\n-  ASSERT_EQ(1, Find(\"249\"));\n-  ASSERT_EQ(1, Find(\"250\"));\n-  ASSERT_EQ(2, Find(\"251\"));\n-  ASSERT_EQ(2, Find(\"299\"));\n-  ASSERT_EQ(2, Find(\"300\"));\n-  ASSERT_EQ(2, Find(\"349\"));\n-  ASSERT_EQ(2, Find(\"350\"));\n-  ASSERT_EQ(3, Find(\"351\"));\n-  ASSERT_EQ(3, Find(\"400\"));\n-  ASSERT_EQ(3, Find(\"450\"));\n-  ASSERT_EQ(4, Find(\"451\"));\n-\n-  ASSERT_TRUE(! Overlaps(\"100\", \"149\"));\n-  ASSERT_TRUE(! Overlaps(\"251\", \"299\"));\n-  ASSERT_TRUE(! Overlaps(\"451\", \"500\"));\n-  ASSERT_TRUE(! Overlaps(\"351\", \"399\"));\n-\n-  ASSERT_TRUE(Overlaps(\"100\", \"150\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"200\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"300\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"400\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"500\"));\n-  ASSERT_TRUE(Overlaps(\"375\", \"400\"));\n-  ASSERT_TRUE(Overlaps(\"450\", \"450\"));\n-  ASSERT_TRUE(Overlaps(\"450\", \"500\"));\n-}\n-\n-TEST(FindFileTest, MultipleNullBoundaries) {\n-  Add(\"150\", \"200\");\n-  Add(\"200\", \"250\");\n-  Add(\"300\", \"350\");\n-  Add(\"400\", \"450\");\n-  ASSERT_TRUE(! Overlaps(NULL, \"149\"));\n-  ASSERT_TRUE(! Overlaps(\"451\", NULL));\n-  ASSERT_TRUE(Overlaps(NULL, NULL));\n-  ASSERT_TRUE(Overlaps(NULL, \"150\"));\n-  ASSERT_TRUE(Overlaps(NULL, \"199\"));\n-  ASSERT_TRUE(Overlaps(NULL, \"200\"));\n-  ASSERT_TRUE(Overlaps(NULL, \"201\"));\n-  ASSERT_TRUE(Overlaps(NULL, \"400\"));\n-  ASSERT_TRUE(Overlaps(NULL, \"800\"));\n-  ASSERT_TRUE(Overlaps(\"100\", NULL));\n-  ASSERT_TRUE(Overlaps(\"200\", NULL));\n-  ASSERT_TRUE(Overlaps(\"449\", NULL));\n-  ASSERT_TRUE(Overlaps(\"450\", NULL));\n-}\n-\n-TEST(FindFileTest, OverlapSequenceChecks) {\n-  Add(\"200\", \"200\", 5000, 3000);\n-  ASSERT_TRUE(! Overlaps(\"199\", \"199\"));\n-  ASSERT_TRUE(! Overlaps(\"201\", \"300\"));\n-  ASSERT_TRUE(Overlaps(\"200\", \"200\"));\n-  ASSERT_TRUE(Overlaps(\"190\", \"200\"));\n-  ASSERT_TRUE(Overlaps(\"200\", \"210\"));\n-}\n-\n-TEST(FindFileTest, OverlappingFiles) {\n-  Add(\"150\", \"600\");\n-  Add(\"400\", \"500\");\n-  disjoint_sorted_files_ = false;\n-  ASSERT_TRUE(! Overlaps(\"100\", \"149\"));\n-  ASSERT_TRUE(! Overlaps(\"601\", \"700\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"150\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"200\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"300\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"400\"));\n-  ASSERT_TRUE(Overlaps(\"100\", \"500\"));\n-  ASSERT_TRUE(Overlaps(\"375\", \"400\"));\n-  ASSERT_TRUE(Overlaps(\"450\", \"450\"));\n-  ASSERT_TRUE(Overlaps(\"450\", \"500\"));\n-  ASSERT_TRUE(Overlaps(\"450\", \"700\"));\n-  ASSERT_TRUE(Overlaps(\"600\", \"700\"));\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "33f4a4257ea94e0105a9368de79d761ac7bf979a",
        "filename": "src/leveldb/db/write_batch.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/write_batch.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/write_batch.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/write_batch.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,147 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// WriteBatch::rep_ :=\n-//    sequence: fixed64\n-//    count: fixed32\n-//    data: record[count]\n-// record :=\n-//    kTypeValue varstring varstring         |\n-//    kTypeDeletion varstring\n-// varstring :=\n-//    len: varint32\n-//    data: uint8[len]\n-\n-#include \"leveldb/write_batch.h\"\n-\n-#include \"leveldb/db.h\"\n-#include \"db/dbformat.h\"\n-#include \"db/memtable.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"util/coding.h\"\n-\n-namespace leveldb {\n-\n-// WriteBatch header has an 8-byte sequence number followed by a 4-byte count.\n-static const size_t kHeader = 12;\n-\n-WriteBatch::WriteBatch() {\n-  Clear();\n-}\n-\n-WriteBatch::~WriteBatch() { }\n-\n-WriteBatch::Handler::~Handler() { }\n-\n-void WriteBatch::Clear() {\n-  rep_.clear();\n-  rep_.resize(kHeader);\n-}\n-\n-Status WriteBatch::Iterate(Handler* handler) const {\n-  Slice input(rep_);\n-  if (input.size() < kHeader) {\n-    return Status::Corruption(\"malformed WriteBatch (too small)\");\n-  }\n-\n-  input.remove_prefix(kHeader);\n-  Slice key, value;\n-  int found = 0;\n-  while (!input.empty()) {\n-    found++;\n-    char tag = input[0];\n-    input.remove_prefix(1);\n-    switch (tag) {\n-      case kTypeValue:\n-        if (GetLengthPrefixedSlice(&input, &key) &&\n-            GetLengthPrefixedSlice(&input, &value)) {\n-          handler->Put(key, value);\n-        } else {\n-          return Status::Corruption(\"bad WriteBatch Put\");\n-        }\n-        break;\n-      case kTypeDeletion:\n-        if (GetLengthPrefixedSlice(&input, &key)) {\n-          handler->Delete(key);\n-        } else {\n-          return Status::Corruption(\"bad WriteBatch Delete\");\n-        }\n-        break;\n-      default:\n-        return Status::Corruption(\"unknown WriteBatch tag\");\n-    }\n-  }\n-  if (found != WriteBatchInternal::Count(this)) {\n-    return Status::Corruption(\"WriteBatch has wrong count\");\n-  } else {\n-    return Status::OK();\n-  }\n-}\n-\n-int WriteBatchInternal::Count(const WriteBatch* b) {\n-  return DecodeFixed32(b->rep_.data() + 8);\n-}\n-\n-void WriteBatchInternal::SetCount(WriteBatch* b, int n) {\n-  EncodeFixed32(&b->rep_[8], n);\n-}\n-\n-SequenceNumber WriteBatchInternal::Sequence(const WriteBatch* b) {\n-  return SequenceNumber(DecodeFixed64(b->rep_.data()));\n-}\n-\n-void WriteBatchInternal::SetSequence(WriteBatch* b, SequenceNumber seq) {\n-  EncodeFixed64(&b->rep_[0], seq);\n-}\n-\n-void WriteBatch::Put(const Slice& key, const Slice& value) {\n-  WriteBatchInternal::SetCount(this, WriteBatchInternal::Count(this) + 1);\n-  rep_.push_back(static_cast<char>(kTypeValue));\n-  PutLengthPrefixedSlice(&rep_, key);\n-  PutLengthPrefixedSlice(&rep_, value);\n-}\n-\n-void WriteBatch::Delete(const Slice& key) {\n-  WriteBatchInternal::SetCount(this, WriteBatchInternal::Count(this) + 1);\n-  rep_.push_back(static_cast<char>(kTypeDeletion));\n-  PutLengthPrefixedSlice(&rep_, key);\n-}\n-\n-namespace {\n-class MemTableInserter : public WriteBatch::Handler {\n- public:\n-  SequenceNumber sequence_;\n-  MemTable* mem_;\n-\n-  virtual void Put(const Slice& key, const Slice& value) {\n-    mem_->Add(sequence_, kTypeValue, key, value);\n-    sequence_++;\n-  }\n-  virtual void Delete(const Slice& key) {\n-    mem_->Add(sequence_, kTypeDeletion, key, Slice());\n-    sequence_++;\n-  }\n-};\n-}  // namespace\n-\n-Status WriteBatchInternal::InsertInto(const WriteBatch* b,\n-                                      MemTable* memtable) {\n-  MemTableInserter inserter;\n-  inserter.sequence_ = WriteBatchInternal::Sequence(b);\n-  inserter.mem_ = memtable;\n-  return b->Iterate(&inserter);\n-}\n-\n-void WriteBatchInternal::SetContents(WriteBatch* b, const Slice& contents) {\n-  assert(contents.size() >= kHeader);\n-  b->rep_.assign(contents.data(), contents.size());\n-}\n-\n-void WriteBatchInternal::Append(WriteBatch* dst, const WriteBatch* src) {\n-  SetCount(dst, Count(dst) + Count(src));\n-  assert(src->rep_.size() >= kHeader);\n-  dst->rep_.append(src->rep_.data() + kHeader, src->rep_.size() - kHeader);\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "9448ef7b21c3af42c570cf91391694bc6369972e",
        "filename": "src/leveldb/db/write_batch_internal.h",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/write_batch_internal.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/write_batch_internal.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/write_batch_internal.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,50 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_DB_WRITE_BATCH_INTERNAL_H_\n-#define STORAGE_LEVELDB_DB_WRITE_BATCH_INTERNAL_H_\n-\n-#include \"db/dbformat.h\"\n-#include \"leveldb/write_batch.h\"\n-\n-namespace leveldb {\n-\n-class MemTable;\n-\n-// WriteBatchInternal provides static methods for manipulating a\n-// WriteBatch that we don't want in the public WriteBatch interface.\n-class WriteBatchInternal {\n- public:\n-  // Return the number of entries in the batch.\n-  static int Count(const WriteBatch* batch);\n-\n-  // Set the count for the number of entries in the batch.\n-  static void SetCount(WriteBatch* batch, int n);\n-\n-  // Return the sequence number for the start of this batch.\n-  static SequenceNumber Sequence(const WriteBatch* batch);\n-\n-  // Store the specified number as the sequence number for the start of\n-  // this batch.\n-  static void SetSequence(WriteBatch* batch, SequenceNumber seq);\n-\n-  static Slice Contents(const WriteBatch* batch) {\n-    return Slice(batch->rep_);\n-  }\n-\n-  static size_t ByteSize(const WriteBatch* batch) {\n-    return batch->rep_.size();\n-  }\n-\n-  static void SetContents(WriteBatch* batch, const Slice& contents);\n-\n-  static Status InsertInto(const WriteBatch* batch, MemTable* memtable);\n-\n-  static void Append(WriteBatch* dst, const WriteBatch* src);\n-};\n-\n-}  // namespace leveldb\n-\n-\n-#endif  // STORAGE_LEVELDB_DB_WRITE_BATCH_INTERNAL_H_"
      },
      {
        "sha": "9064e3d85eb35f32d20ef4c7456b0866d525aee8",
        "filename": "src/leveldb/db/write_batch_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 120,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/write_batch_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/db/write_batch_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/write_batch_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,120 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"leveldb/db.h\"\n-\n-#include \"db/memtable.h\"\n-#include \"db/write_batch_internal.h\"\n-#include \"leveldb/env.h\"\n-#include \"util/logging.h\"\n-#include \"util/testharness.h\"\n-\n-namespace leveldb {\n-\n-static std::string PrintContents(WriteBatch* b) {\n-  InternalKeyComparator cmp(BytewiseComparator());\n-  MemTable* mem = new MemTable(cmp);\n-  mem->Ref();\n-  std::string state;\n-  Status s = WriteBatchInternal::InsertInto(b, mem);\n-  int count = 0;\n-  Iterator* iter = mem->NewIterator();\n-  for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-    ParsedInternalKey ikey;\n-    ASSERT_TRUE(ParseInternalKey(iter->key(), &ikey));\n-    switch (ikey.type) {\n-      case kTypeValue:\n-        state.append(\"Put(\");\n-        state.append(ikey.user_key.ToString());\n-        state.append(\", \");\n-        state.append(iter->value().ToString());\n-        state.append(\")\");\n-        count++;\n-        break;\n-      case kTypeDeletion:\n-        state.append(\"Delete(\");\n-        state.append(ikey.user_key.ToString());\n-        state.append(\")\");\n-        count++;\n-        break;\n-    }\n-    state.append(\"@\");\n-    state.append(NumberToString(ikey.sequence));\n-  }\n-  delete iter;\n-  if (!s.ok()) {\n-    state.append(\"ParseError()\");\n-  } else if (count != WriteBatchInternal::Count(b)) {\n-    state.append(\"CountMismatch()\");\n-  }\n-  mem->Unref();\n-  return state;\n-}\n-\n-class WriteBatchTest { };\n-\n-TEST(WriteBatchTest, Empty) {\n-  WriteBatch batch;\n-  ASSERT_EQ(\"\", PrintContents(&batch));\n-  ASSERT_EQ(0, WriteBatchInternal::Count(&batch));\n-}\n-\n-TEST(WriteBatchTest, Multiple) {\n-  WriteBatch batch;\n-  batch.Put(Slice(\"foo\"), Slice(\"bar\"));\n-  batch.Delete(Slice(\"box\"));\n-  batch.Put(Slice(\"baz\"), Slice(\"boo\"));\n-  WriteBatchInternal::SetSequence(&batch, 100);\n-  ASSERT_EQ(100, WriteBatchInternal::Sequence(&batch));\n-  ASSERT_EQ(3, WriteBatchInternal::Count(&batch));\n-  ASSERT_EQ(\"Put(baz, boo)@102\"\n-            \"Delete(box)@101\"\n-            \"Put(foo, bar)@100\",\n-            PrintContents(&batch));\n-}\n-\n-TEST(WriteBatchTest, Corruption) {\n-  WriteBatch batch;\n-  batch.Put(Slice(\"foo\"), Slice(\"bar\"));\n-  batch.Delete(Slice(\"box\"));\n-  WriteBatchInternal::SetSequence(&batch, 200);\n-  Slice contents = WriteBatchInternal::Contents(&batch);\n-  WriteBatchInternal::SetContents(&batch,\n-                                  Slice(contents.data(),contents.size()-1));\n-  ASSERT_EQ(\"Put(foo, bar)@200\"\n-            \"ParseError()\",\n-            PrintContents(&batch));\n-}\n-\n-TEST(WriteBatchTest, Append) {\n-  WriteBatch b1, b2;\n-  WriteBatchInternal::SetSequence(&b1, 200);\n-  WriteBatchInternal::SetSequence(&b2, 300);\n-  WriteBatchInternal::Append(&b1, &b2);\n-  ASSERT_EQ(\"\",\n-            PrintContents(&b1));\n-  b2.Put(\"a\", \"va\");\n-  WriteBatchInternal::Append(&b1, &b2);\n-  ASSERT_EQ(\"Put(a, va)@200\",\n-            PrintContents(&b1));\n-  b2.Clear();\n-  b2.Put(\"b\", \"vb\");\n-  WriteBatchInternal::Append(&b1, &b2);\n-  ASSERT_EQ(\"Put(a, va)@200\"\n-            \"Put(b, vb)@201\",\n-            PrintContents(&b1));\n-  b2.Delete(\"foo\");\n-  WriteBatchInternal::Append(&b1, &b2);\n-  ASSERT_EQ(\"Put(a, va)@200\"\n-            \"Put(b, vb)@202\"\n-            \"Put(b, vb)@201\"\n-            \"Delete(foo)@203\",\n-            PrintContents(&b1));\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "e63aaa8dcc289915176b12749dd9ec21b50aba02",
        "filename": "src/leveldb/doc/bench/db_bench_sqlite3.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 718,
        "changes": 718,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/bench/db_bench_sqlite3.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/bench/db_bench_sqlite3.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/bench/db_bench_sqlite3.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,718 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <sqlite3.h>\n-#include \"util/histogram.h\"\n-#include \"util/random.h\"\n-#include \"util/testutil.h\"\n-\n-// Comma-separated list of operations to run in the specified order\n-//   Actual benchmarks:\n-//\n-//   fillseq       -- write N values in sequential key order in async mode\n-//   fillseqsync   -- write N/100 values in sequential key order in sync mode\n-//   fillseqbatch  -- batch write N values in sequential key order in async mode\n-//   fillrandom    -- write N values in random key order in async mode\n-//   fillrandsync  -- write N/100 values in random key order in sync mode\n-//   fillrandbatch -- batch write N values in sequential key order in async mode\n-//   overwrite     -- overwrite N values in random key order in async mode\n-//   fillrand100K  -- write N/1000 100K values in random order in async mode\n-//   fillseq100K   -- write N/1000 100K values in sequential order in async mode\n-//   readseq       -- read N times sequentially\n-//   readrandom    -- read N times in random order\n-//   readrand100K  -- read N/1000 100K values in sequential order in async mode\n-static const char* FLAGS_benchmarks =\n-    \"fillseq,\"\n-    \"fillseqsync,\"\n-    \"fillseqbatch,\"\n-    \"fillrandom,\"\n-    \"fillrandsync,\"\n-    \"fillrandbatch,\"\n-    \"overwrite,\"\n-    \"overwritebatch,\"\n-    \"readrandom,\"\n-    \"readseq,\"\n-    \"fillrand100K,\"\n-    \"fillseq100K,\"\n-    \"readseq,\"\n-    \"readrand100K,\"\n-    ;\n-\n-// Number of key/values to place in database\n-static int FLAGS_num = 1000000;\n-\n-// Number of read operations to do.  If negative, do FLAGS_num reads.\n-static int FLAGS_reads = -1;\n-\n-// Size of each value\n-static int FLAGS_value_size = 100;\n-\n-// Print histogram of operation timings\n-static bool FLAGS_histogram = false;\n-\n-// Arrange to generate values that shrink to this fraction of\n-// their original size after compression\n-static double FLAGS_compression_ratio = 0.5;\n-\n-// Page size. Default 1 KB.\n-static int FLAGS_page_size = 1024;\n-\n-// Number of pages.\n-// Default cache size = FLAGS_page_size * FLAGS_num_pages = 4 MB.\n-static int FLAGS_num_pages = 4096;\n-\n-// If true, do not destroy the existing database.  If you set this\n-// flag and also specify a benchmark that wants a fresh database, that\n-// benchmark will fail.\n-static bool FLAGS_use_existing_db = false;\n-\n-// If true, we allow batch writes to occur\n-static bool FLAGS_transaction = true;\n-\n-// If true, we enable Write-Ahead Logging\n-static bool FLAGS_WAL_enabled = true;\n-\n-// Use the db with the following name.\n-static const char* FLAGS_db = NULL;\n-\n-inline\n-static void ExecErrorCheck(int status, char *err_msg) {\n-  if (status != SQLITE_OK) {\n-    fprintf(stderr, \"SQL error: %s\\n\", err_msg);\n-    sqlite3_free(err_msg);\n-    exit(1);\n-  }\n-}\n-\n-inline\n-static void StepErrorCheck(int status) {\n-  if (status != SQLITE_DONE) {\n-    fprintf(stderr, \"SQL step error: status = %d\\n\", status);\n-    exit(1);\n-  }\n-}\n-\n-inline\n-static void ErrorCheck(int status) {\n-  if (status != SQLITE_OK) {\n-    fprintf(stderr, \"sqlite3 error: status = %d\\n\", status);\n-    exit(1);\n-  }\n-}\n-\n-inline\n-static void WalCheckpoint(sqlite3* db_) {\n-  // Flush all writes to disk\n-  if (FLAGS_WAL_enabled) {\n-    sqlite3_wal_checkpoint_v2(db_, NULL, SQLITE_CHECKPOINT_FULL, NULL, NULL);\n-  }\n-}\n-\n-namespace leveldb {\n-\n-// Helper for quickly generating random data.\n-namespace {\n-class RandomGenerator {\n- private:\n-  std::string data_;\n-  int pos_;\n-\n- public:\n-  RandomGenerator() {\n-    // We use a limited amount of data over and over again and ensure\n-    // that it is larger than the compression window (32KB), and also\n-    // large enough to serve all typical value sizes we want to write.\n-    Random rnd(301);\n-    std::string piece;\n-    while (data_.size() < 1048576) {\n-      // Add a short fragment that is as compressible as specified\n-      // by FLAGS_compression_ratio.\n-      test::CompressibleString(&rnd, FLAGS_compression_ratio, 100, &piece);\n-      data_.append(piece);\n-    }\n-    pos_ = 0;\n-  }\n-\n-  Slice Generate(int len) {\n-    if (pos_ + len > data_.size()) {\n-      pos_ = 0;\n-      assert(len < data_.size());\n-    }\n-    pos_ += len;\n-    return Slice(data_.data() + pos_ - len, len);\n-  }\n-};\n-\n-static Slice TrimSpace(Slice s) {\n-  int start = 0;\n-  while (start < s.size() && isspace(s[start])) {\n-    start++;\n-  }\n-  int limit = s.size();\n-  while (limit > start && isspace(s[limit-1])) {\n-    limit--;\n-  }\n-  return Slice(s.data() + start, limit - start);\n-}\n-\n-}  // namespace\n-\n-class Benchmark {\n- private:\n-  sqlite3* db_;\n-  int db_num_;\n-  int num_;\n-  int reads_;\n-  double start_;\n-  double last_op_finish_;\n-  int64_t bytes_;\n-  std::string message_;\n-  Histogram hist_;\n-  RandomGenerator gen_;\n-  Random rand_;\n-\n-  // State kept for progress messages\n-  int done_;\n-  int next_report_;     // When to report next\n-\n-  void PrintHeader() {\n-    const int kKeySize = 16;\n-    PrintEnvironment();\n-    fprintf(stdout, \"Keys:       %d bytes each\\n\", kKeySize);\n-    fprintf(stdout, \"Values:     %d bytes each\\n\", FLAGS_value_size);\n-    fprintf(stdout, \"Entries:    %d\\n\", num_);\n-    fprintf(stdout, \"RawSize:    %.1f MB (estimated)\\n\",\n-            ((static_cast<int64_t>(kKeySize + FLAGS_value_size) * num_)\n-             / 1048576.0));\n-    PrintWarnings();\n-    fprintf(stdout, \"------------------------------------------------\\n\");\n-  }\n-\n-  void PrintWarnings() {\n-#if defined(__GNUC__) && !defined(__OPTIMIZE__)\n-    fprintf(stdout,\n-            \"WARNING: Optimization is disabled: benchmarks unnecessarily slow\\n\"\n-            );\n-#endif\n-#ifndef NDEBUG\n-    fprintf(stdout,\n-            \"WARNING: Assertions are enabled; benchmarks unnecessarily slow\\n\");\n-#endif\n-  }\n-\n-  void PrintEnvironment() {\n-    fprintf(stderr, \"SQLite:     version %s\\n\", SQLITE_VERSION);\n-\n-#if defined(__linux)\n-    time_t now = time(NULL);\n-    fprintf(stderr, \"Date:       %s\", ctime(&now));  // ctime() adds newline\n-\n-    FILE* cpuinfo = fopen(\"/proc/cpuinfo\", \"r\");\n-    if (cpuinfo != NULL) {\n-      char line[1000];\n-      int num_cpus = 0;\n-      std::string cpu_type;\n-      std::string cache_size;\n-      while (fgets(line, sizeof(line), cpuinfo) != NULL) {\n-        const char* sep = strchr(line, ':');\n-        if (sep == NULL) {\n-          continue;\n-        }\n-        Slice key = TrimSpace(Slice(line, sep - 1 - line));\n-        Slice val = TrimSpace(Slice(sep + 1));\n-        if (key == \"model name\") {\n-          ++num_cpus;\n-          cpu_type = val.ToString();\n-        } else if (key == \"cache size\") {\n-          cache_size = val.ToString();\n-        }\n-      }\n-      fclose(cpuinfo);\n-      fprintf(stderr, \"CPU:        %d * %s\\n\", num_cpus, cpu_type.c_str());\n-      fprintf(stderr, \"CPUCache:   %s\\n\", cache_size.c_str());\n-    }\n-#endif\n-  }\n-\n-  void Start() {\n-    start_ = Env::Default()->NowMicros() * 1e-6;\n-    bytes_ = 0;\n-    message_.clear();\n-    last_op_finish_ = start_;\n-    hist_.Clear();\n-    done_ = 0;\n-    next_report_ = 100;\n-  }\n-\n-  void FinishedSingleOp() {\n-    if (FLAGS_histogram) {\n-      double now = Env::Default()->NowMicros() * 1e-6;\n-      double micros = (now - last_op_finish_) * 1e6;\n-      hist_.Add(micros);\n-      if (micros > 20000) {\n-        fprintf(stderr, \"long op: %.1f micros%30s\\r\", micros, \"\");\n-        fflush(stderr);\n-      }\n-      last_op_finish_ = now;\n-    }\n-\n-    done_++;\n-    if (done_ >= next_report_) {\n-      if      (next_report_ < 1000)   next_report_ += 100;\n-      else if (next_report_ < 5000)   next_report_ += 500;\n-      else if (next_report_ < 10000)  next_report_ += 1000;\n-      else if (next_report_ < 50000)  next_report_ += 5000;\n-      else if (next_report_ < 100000) next_report_ += 10000;\n-      else if (next_report_ < 500000) next_report_ += 50000;\n-      else                            next_report_ += 100000;\n-      fprintf(stderr, \"... finished %d ops%30s\\r\", done_, \"\");\n-      fflush(stderr);\n-    }\n-  }\n-\n-  void Stop(const Slice& name) {\n-    double finish = Env::Default()->NowMicros() * 1e-6;\n-\n-    // Pretend at least one op was done in case we are running a benchmark\n-    // that does not call FinishedSingleOp().\n-    if (done_ < 1) done_ = 1;\n-\n-    if (bytes_ > 0) {\n-      char rate[100];\n-      snprintf(rate, sizeof(rate), \"%6.1f MB/s\",\n-               (bytes_ / 1048576.0) / (finish - start_));\n-      if (!message_.empty()) {\n-        message_  = std::string(rate) + \" \" + message_;\n-      } else {\n-        message_ = rate;\n-      }\n-    }\n-\n-    fprintf(stdout, \"%-12s : %11.3f micros/op;%s%s\\n\",\n-            name.ToString().c_str(),\n-            (finish - start_) * 1e6 / done_,\n-            (message_.empty() ? \"\" : \" \"),\n-            message_.c_str());\n-    if (FLAGS_histogram) {\n-      fprintf(stdout, \"Microseconds per op:\\n%s\\n\", hist_.ToString().c_str());\n-    }\n-    fflush(stdout);\n-  }\n-\n- public:\n-  enum Order {\n-    SEQUENTIAL,\n-    RANDOM\n-  };\n-  enum DBState {\n-    FRESH,\n-    EXISTING\n-  };\n-\n-  Benchmark()\n-  : db_(NULL),\n-    db_num_(0),\n-    num_(FLAGS_num),\n-    reads_(FLAGS_reads < 0 ? FLAGS_num : FLAGS_reads),\n-    bytes_(0),\n-    rand_(301) {\n-    std::vector<std::string> files;\n-    std::string test_dir;\n-    Env::Default()->GetTestDirectory(&test_dir);\n-    Env::Default()->GetChildren(test_dir, &files);\n-    if (!FLAGS_use_existing_db) {\n-      for (int i = 0; i < files.size(); i++) {\n-        if (Slice(files[i]).starts_with(\"dbbench_sqlite3\")) {\n-          std::string file_name(test_dir);\n-          file_name += \"/\";\n-          file_name += files[i];\n-          Env::Default()->DeleteFile(file_name.c_str());\n-        }\n-      }\n-    }\n-  }\n-\n-  ~Benchmark() {\n-    int status = sqlite3_close(db_);\n-    ErrorCheck(status);\n-  }\n-\n-  void Run() {\n-    PrintHeader();\n-    Open();\n-\n-    const char* benchmarks = FLAGS_benchmarks;\n-    while (benchmarks != NULL) {\n-      const char* sep = strchr(benchmarks, ',');\n-      Slice name;\n-      if (sep == NULL) {\n-        name = benchmarks;\n-        benchmarks = NULL;\n-      } else {\n-        name = Slice(benchmarks, sep - benchmarks);\n-        benchmarks = sep + 1;\n-      }\n-\n-      bytes_ = 0;\n-      Start();\n-\n-      bool known = true;\n-      bool write_sync = false;\n-      if (name == Slice(\"fillseq\")) {\n-        Write(write_sync, SEQUENTIAL, FRESH, num_, FLAGS_value_size, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillseqbatch\")) {\n-        Write(write_sync, SEQUENTIAL, FRESH, num_, FLAGS_value_size, 1000);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillrandom\")) {\n-        Write(write_sync, RANDOM, FRESH, num_, FLAGS_value_size, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillrandbatch\")) {\n-        Write(write_sync, RANDOM, FRESH, num_, FLAGS_value_size, 1000);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"overwrite\")) {\n-        Write(write_sync, RANDOM, EXISTING, num_, FLAGS_value_size, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"overwritebatch\")) {\n-        Write(write_sync, RANDOM, EXISTING, num_, FLAGS_value_size, 1000);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillrandsync\")) {\n-        write_sync = true;\n-        Write(write_sync, RANDOM, FRESH, num_ / 100, FLAGS_value_size, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillseqsync\")) {\n-        write_sync = true;\n-        Write(write_sync, SEQUENTIAL, FRESH, num_ / 100, FLAGS_value_size, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillrand100K\")) {\n-        Write(write_sync, RANDOM, FRESH, num_ / 1000, 100 * 1000, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"fillseq100K\")) {\n-        Write(write_sync, SEQUENTIAL, FRESH, num_ / 1000, 100 * 1000, 1);\n-        WalCheckpoint(db_);\n-      } else if (name == Slice(\"readseq\")) {\n-        ReadSequential();\n-      } else if (name == Slice(\"readrandom\")) {\n-        Read(RANDOM, 1);\n-      } else if (name == Slice(\"readrand100K\")) {\n-        int n = reads_;\n-        reads_ /= 1000;\n-        Read(RANDOM, 1);\n-        reads_ = n;\n-      } else {\n-        known = false;\n-        if (name != Slice()) {  // No error message for empty name\n-          fprintf(stderr, \"unknown benchmark '%s'\\n\", name.ToString().c_str());\n-        }\n-      }\n-      if (known) {\n-        Stop(name);\n-      }\n-    }\n-  }\n-\n-  void Open() {\n-    assert(db_ == NULL);\n-\n-    int status;\n-    char file_name[100];\n-    char* err_msg = NULL;\n-    db_num_++;\n-\n-    // Open database\n-    std::string tmp_dir;\n-    Env::Default()->GetTestDirectory(&tmp_dir);\n-    snprintf(file_name, sizeof(file_name),\n-             \"%s/dbbench_sqlite3-%d.db\",\n-             tmp_dir.c_str(),\n-             db_num_);\n-    status = sqlite3_open(file_name, &db_);\n-    if (status) {\n-      fprintf(stderr, \"open error: %s\\n\", sqlite3_errmsg(db_));\n-      exit(1);\n-    }\n-\n-    // Change SQLite cache size\n-    char cache_size[100];\n-    snprintf(cache_size, sizeof(cache_size), \"PRAGMA cache_size = %d\",\n-             FLAGS_num_pages);\n-    status = sqlite3_exec(db_, cache_size, NULL, NULL, &err_msg);\n-    ExecErrorCheck(status, err_msg);\n-\n-    // FLAGS_page_size is defaulted to 1024\n-    if (FLAGS_page_size != 1024) {\n-      char page_size[100];\n-      snprintf(page_size, sizeof(page_size), \"PRAGMA page_size = %d\",\n-               FLAGS_page_size);\n-      status = sqlite3_exec(db_, page_size, NULL, NULL, &err_msg);\n-      ExecErrorCheck(status, err_msg);\n-    }\n-\n-    // Change journal mode to WAL if WAL enabled flag is on\n-    if (FLAGS_WAL_enabled) {\n-      std::string WAL_stmt = \"PRAGMA journal_mode = WAL\";\n-\n-      // LevelDB's default cache size is a combined 4 MB\n-      std::string WAL_checkpoint = \"PRAGMA wal_autocheckpoint = 4096\";\n-      status = sqlite3_exec(db_, WAL_stmt.c_str(), NULL, NULL, &err_msg);\n-      ExecErrorCheck(status, err_msg);\n-      status = sqlite3_exec(db_, WAL_checkpoint.c_str(), NULL, NULL, &err_msg);\n-      ExecErrorCheck(status, err_msg);\n-    }\n-\n-    // Change locking mode to exclusive and create tables/index for database\n-    std::string locking_stmt = \"PRAGMA locking_mode = EXCLUSIVE\";\n-    std::string create_stmt =\n-          \"CREATE TABLE test (key blob, value blob, PRIMARY KEY(key))\";\n-    std::string stmt_array[] = { locking_stmt, create_stmt };\n-    int stmt_array_length = sizeof(stmt_array) / sizeof(std::string);\n-    for (int i = 0; i < stmt_array_length; i++) {\n-      status = sqlite3_exec(db_, stmt_array[i].c_str(), NULL, NULL, &err_msg);\n-      ExecErrorCheck(status, err_msg);\n-    }\n-  }\n-\n-  void Write(bool write_sync, Order order, DBState state,\n-             int num_entries, int value_size, int entries_per_batch) {\n-    // Create new database if state == FRESH\n-    if (state == FRESH) {\n-      if (FLAGS_use_existing_db) {\n-        message_ = \"skipping (--use_existing_db is true)\";\n-        return;\n-      }\n-      sqlite3_close(db_);\n-      db_ = NULL;\n-      Open();\n-      Start();\n-    }\n-\n-    if (num_entries != num_) {\n-      char msg[100];\n-      snprintf(msg, sizeof(msg), \"(%d ops)\", num_entries);\n-      message_ = msg;\n-    }\n-\n-    char* err_msg = NULL;\n-    int status;\n-\n-    sqlite3_stmt *replace_stmt, *begin_trans_stmt, *end_trans_stmt;\n-    std::string replace_str = \"REPLACE INTO test (key, value) VALUES (?, ?)\";\n-    std::string begin_trans_str = \"BEGIN TRANSACTION;\";\n-    std::string end_trans_str = \"END TRANSACTION;\";\n-\n-    // Check for synchronous flag in options\n-    std::string sync_stmt = (write_sync) ? \"PRAGMA synchronous = FULL\" :\n-                                           \"PRAGMA synchronous = OFF\";\n-    status = sqlite3_exec(db_, sync_stmt.c_str(), NULL, NULL, &err_msg);\n-    ExecErrorCheck(status, err_msg);\n-\n-    // Preparing sqlite3 statements\n-    status = sqlite3_prepare_v2(db_, replace_str.c_str(), -1,\n-                                &replace_stmt, NULL);\n-    ErrorCheck(status);\n-    status = sqlite3_prepare_v2(db_, begin_trans_str.c_str(), -1,\n-                                &begin_trans_stmt, NULL);\n-    ErrorCheck(status);\n-    status = sqlite3_prepare_v2(db_, end_trans_str.c_str(), -1,\n-                                &end_trans_stmt, NULL);\n-    ErrorCheck(status);\n-\n-    bool transaction = (entries_per_batch > 1);\n-    for (int i = 0; i < num_entries; i += entries_per_batch) {\n-      // Begin write transaction\n-      if (FLAGS_transaction && transaction) {\n-        status = sqlite3_step(begin_trans_stmt);\n-        StepErrorCheck(status);\n-        status = sqlite3_reset(begin_trans_stmt);\n-        ErrorCheck(status);\n-      }\n-\n-      // Create and execute SQL statements\n-      for (int j = 0; j < entries_per_batch; j++) {\n-        const char* value = gen_.Generate(value_size).data();\n-\n-        // Create values for key-value pair\n-        const int k = (order == SEQUENTIAL) ? i + j :\n-                      (rand_.Next() % num_entries);\n-        char key[100];\n-        snprintf(key, sizeof(key), \"%016d\", k);\n-\n-        // Bind KV values into replace_stmt\n-        status = sqlite3_bind_blob(replace_stmt, 1, key, 16, SQLITE_STATIC);\n-        ErrorCheck(status);\n-        status = sqlite3_bind_blob(replace_stmt, 2, value,\n-                                   value_size, SQLITE_STATIC);\n-        ErrorCheck(status);\n-\n-        // Execute replace_stmt\n-        bytes_ += value_size + strlen(key);\n-        status = sqlite3_step(replace_stmt);\n-        StepErrorCheck(status);\n-\n-        // Reset SQLite statement for another use\n-        status = sqlite3_clear_bindings(replace_stmt);\n-        ErrorCheck(status);\n-        status = sqlite3_reset(replace_stmt);\n-        ErrorCheck(status);\n-\n-        FinishedSingleOp();\n-      }\n-\n-      // End write transaction\n-      if (FLAGS_transaction && transaction) {\n-        status = sqlite3_step(end_trans_stmt);\n-        StepErrorCheck(status);\n-        status = sqlite3_reset(end_trans_stmt);\n-        ErrorCheck(status);\n-      }\n-    }\n-\n-    status = sqlite3_finalize(replace_stmt);\n-    ErrorCheck(status);\n-    status = sqlite3_finalize(begin_trans_stmt);\n-    ErrorCheck(status);\n-    status = sqlite3_finalize(end_trans_stmt);\n-    ErrorCheck(status);\n-  }\n-\n-  void Read(Order order, int entries_per_batch) {\n-    int status;\n-    sqlite3_stmt *read_stmt, *begin_trans_stmt, *end_trans_stmt;\n-\n-    std::string read_str = \"SELECT * FROM test WHERE key = ?\";\n-    std::string begin_trans_str = \"BEGIN TRANSACTION;\";\n-    std::string end_trans_str = \"END TRANSACTION;\";\n-\n-    // Preparing sqlite3 statements\n-    status = sqlite3_prepare_v2(db_, begin_trans_str.c_str(), -1,\n-                                &begin_trans_stmt, NULL);\n-    ErrorCheck(status);\n-    status = sqlite3_prepare_v2(db_, end_trans_str.c_str(), -1,\n-                                &end_trans_stmt, NULL);\n-    ErrorCheck(status);\n-    status = sqlite3_prepare_v2(db_, read_str.c_str(), -1, &read_stmt, NULL);\n-    ErrorCheck(status);\n-\n-    bool transaction = (entries_per_batch > 1);\n-    for (int i = 0; i < reads_; i += entries_per_batch) {\n-      // Begin read transaction\n-      if (FLAGS_transaction && transaction) {\n-        status = sqlite3_step(begin_trans_stmt);\n-        StepErrorCheck(status);\n-        status = sqlite3_reset(begin_trans_stmt);\n-        ErrorCheck(status);\n-      }\n-\n-      // Create and execute SQL statements\n-      for (int j = 0; j < entries_per_batch; j++) {\n-        // Create key value\n-        char key[100];\n-        int k = (order == SEQUENTIAL) ? i + j : (rand_.Next() % reads_);\n-        snprintf(key, sizeof(key), \"%016d\", k);\n-\n-        // Bind key value into read_stmt\n-        status = sqlite3_bind_blob(read_stmt, 1, key, 16, SQLITE_STATIC);\n-        ErrorCheck(status);\n-\n-        // Execute read statement\n-        while ((status = sqlite3_step(read_stmt)) == SQLITE_ROW) {}\n-        StepErrorCheck(status);\n-\n-        // Reset SQLite statement for another use\n-        status = sqlite3_clear_bindings(read_stmt);\n-        ErrorCheck(status);\n-        status = sqlite3_reset(read_stmt);\n-        ErrorCheck(status);\n-        FinishedSingleOp();\n-      }\n-\n-      // End read transaction\n-      if (FLAGS_transaction && transaction) {\n-        status = sqlite3_step(end_trans_stmt);\n-        StepErrorCheck(status);\n-        status = sqlite3_reset(end_trans_stmt);\n-        ErrorCheck(status);\n-      }\n-    }\n-\n-    status = sqlite3_finalize(read_stmt);\n-    ErrorCheck(status);\n-    status = sqlite3_finalize(begin_trans_stmt);\n-    ErrorCheck(status);\n-    status = sqlite3_finalize(end_trans_stmt);\n-    ErrorCheck(status);\n-  }\n-\n-  void ReadSequential() {\n-    int status;\n-    sqlite3_stmt *pStmt;\n-    std::string read_str = \"SELECT * FROM test ORDER BY key\";\n-\n-    status = sqlite3_prepare_v2(db_, read_str.c_str(), -1, &pStmt, NULL);\n-    ErrorCheck(status);\n-    for (int i = 0; i < reads_ && SQLITE_ROW == sqlite3_step(pStmt); i++) {\n-      bytes_ += sqlite3_column_bytes(pStmt, 1) + sqlite3_column_bytes(pStmt, 2);\n-      FinishedSingleOp();\n-    }\n-\n-    status = sqlite3_finalize(pStmt);\n-    ErrorCheck(status);\n-  }\n-\n-};\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  std::string default_db_path;\n-  for (int i = 1; i < argc; i++) {\n-    double d;\n-    int n;\n-    char junk;\n-    if (leveldb::Slice(argv[i]).starts_with(\"--benchmarks=\")) {\n-      FLAGS_benchmarks = argv[i] + strlen(\"--benchmarks=\");\n-    } else if (sscanf(argv[i], \"--histogram=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_histogram = n;\n-    } else if (sscanf(argv[i], \"--compression_ratio=%lf%c\", &d, &junk) == 1) {\n-      FLAGS_compression_ratio = d;\n-    } else if (sscanf(argv[i], \"--use_existing_db=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_use_existing_db = n;\n-    } else if (sscanf(argv[i], \"--num=%d%c\", &n, &junk) == 1) {\n-      FLAGS_num = n;\n-    } else if (sscanf(argv[i], \"--reads=%d%c\", &n, &junk) == 1) {\n-      FLAGS_reads = n;\n-    } else if (sscanf(argv[i], \"--value_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_value_size = n;\n-    } else if (leveldb::Slice(argv[i]) == leveldb::Slice(\"--no_transaction\")) {\n-      FLAGS_transaction = false;\n-    } else if (sscanf(argv[i], \"--page_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_page_size = n;\n-    } else if (sscanf(argv[i], \"--num_pages=%d%c\", &n, &junk) == 1) {\n-      FLAGS_num_pages = n;\n-    } else if (sscanf(argv[i], \"--WAL_enabled=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_WAL_enabled = n;\n-    } else if (strncmp(argv[i], \"--db=\", 5) == 0) {\n-      FLAGS_db = argv[i] + 5;\n-    } else {\n-      fprintf(stderr, \"Invalid flag '%s'\\n\", argv[i]);\n-      exit(1);\n-    }\n-  }\n-\n-  // Choose a location for the test database if none given with --db=<path>\n-  if (FLAGS_db == NULL) {\n-      leveldb::Env::Default()->GetTestDirectory(&default_db_path);\n-      default_db_path += \"/dbbench\";\n-      FLAGS_db = default_db_path.c_str();\n-  }\n-\n-  leveldb::Benchmark benchmark;\n-  benchmark.Run();\n-  return 0;\n-}"
      },
      {
        "sha": "4ca381f11f354126088419a7997710a8fe37da49",
        "filename": "src/leveldb/doc/bench/db_bench_tree_db.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 528,
        "changes": 528,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/bench/db_bench_tree_db.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/bench/db_bench_tree_db.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/bench/db_bench_tree_db.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,528 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <kcpolydb.h>\n-#include \"util/histogram.h\"\n-#include \"util/random.h\"\n-#include \"util/testutil.h\"\n-\n-// Comma-separated list of operations to run in the specified order\n-//   Actual benchmarks:\n-//\n-//   fillseq       -- write N values in sequential key order in async mode\n-//   fillrandom    -- write N values in random key order in async mode\n-//   overwrite     -- overwrite N values in random key order in async mode\n-//   fillseqsync   -- write N/100 values in sequential key order in sync mode\n-//   fillrandsync  -- write N/100 values in random key order in sync mode\n-//   fillrand100K  -- write N/1000 100K values in random order in async mode\n-//   fillseq100K   -- write N/1000 100K values in seq order in async mode\n-//   readseq       -- read N times sequentially\n-//   readseq100K   -- read N/1000 100K values in sequential order in async mode\n-//   readrand100K  -- read N/1000 100K values in sequential order in async mode\n-//   readrandom    -- read N times in random order\n-static const char* FLAGS_benchmarks =\n-    \"fillseq,\"\n-    \"fillseqsync,\"\n-    \"fillrandsync,\"\n-    \"fillrandom,\"\n-    \"overwrite,\"\n-    \"readrandom,\"\n-    \"readseq,\"\n-    \"fillrand100K,\"\n-    \"fillseq100K,\"\n-    \"readseq100K,\"\n-    \"readrand100K,\"\n-    ;\n-\n-// Number of key/values to place in database\n-static int FLAGS_num = 1000000;\n-\n-// Number of read operations to do.  If negative, do FLAGS_num reads.\n-static int FLAGS_reads = -1;\n-\n-// Size of each value\n-static int FLAGS_value_size = 100;\n-\n-// Arrange to generate values that shrink to this fraction of\n-// their original size after compression\n-static double FLAGS_compression_ratio = 0.5;\n-\n-// Print histogram of operation timings\n-static bool FLAGS_histogram = false;\n-\n-// Cache size. Default 4 MB\n-static int FLAGS_cache_size = 4194304;\n-\n-// Page size. Default 1 KB\n-static int FLAGS_page_size = 1024;\n-\n-// If true, do not destroy the existing database.  If you set this\n-// flag and also specify a benchmark that wants a fresh database, that\n-// benchmark will fail.\n-static bool FLAGS_use_existing_db = false;\n-\n-// Compression flag. If true, compression is on. If false, compression\n-// is off.\n-static bool FLAGS_compression = true;\n-\n-// Use the db with the following name.\n-static const char* FLAGS_db = NULL;\n-\n-inline\n-static void DBSynchronize(kyotocabinet::TreeDB* db_)\n-{\n-  // Synchronize will flush writes to disk\n-  if (!db_->synchronize()) {\n-    fprintf(stderr, \"synchronize error: %s\\n\", db_->error().name());\n-  }\n-}\n-\n-namespace leveldb {\n-\n-// Helper for quickly generating random data.\n-namespace {\n-class RandomGenerator {\n- private:\n-  std::string data_;\n-  int pos_;\n-\n- public:\n-  RandomGenerator() {\n-    // We use a limited amount of data over and over again and ensure\n-    // that it is larger than the compression window (32KB), and also\n-    // large enough to serve all typical value sizes we want to write.\n-    Random rnd(301);\n-    std::string piece;\n-    while (data_.size() < 1048576) {\n-      // Add a short fragment that is as compressible as specified\n-      // by FLAGS_compression_ratio.\n-      test::CompressibleString(&rnd, FLAGS_compression_ratio, 100, &piece);\n-      data_.append(piece);\n-    }\n-    pos_ = 0;\n-  }\n-\n-  Slice Generate(int len) {\n-    if (pos_ + len > data_.size()) {\n-      pos_ = 0;\n-      assert(len < data_.size());\n-    }\n-    pos_ += len;\n-    return Slice(data_.data() + pos_ - len, len);\n-  }\n-};\n-\n-static Slice TrimSpace(Slice s) {\n-  int start = 0;\n-  while (start < s.size() && isspace(s[start])) {\n-    start++;\n-  }\n-  int limit = s.size();\n-  while (limit > start && isspace(s[limit-1])) {\n-    limit--;\n-  }\n-  return Slice(s.data() + start, limit - start);\n-}\n-\n-}  // namespace\n-\n-class Benchmark {\n- private:\n-  kyotocabinet::TreeDB* db_;\n-  int db_num_;\n-  int num_;\n-  int reads_;\n-  double start_;\n-  double last_op_finish_;\n-  int64_t bytes_;\n-  std::string message_;\n-  Histogram hist_;\n-  RandomGenerator gen_;\n-  Random rand_;\n-  kyotocabinet::LZOCompressor<kyotocabinet::LZO::RAW> comp_;\n-\n-  // State kept for progress messages\n-  int done_;\n-  int next_report_;     // When to report next\n-\n-  void PrintHeader() {\n-    const int kKeySize = 16;\n-    PrintEnvironment();\n-    fprintf(stdout, \"Keys:       %d bytes each\\n\", kKeySize);\n-    fprintf(stdout, \"Values:     %d bytes each (%d bytes after compression)\\n\",\n-            FLAGS_value_size,\n-            static_cast<int>(FLAGS_value_size * FLAGS_compression_ratio + 0.5));\n-    fprintf(stdout, \"Entries:    %d\\n\", num_);\n-    fprintf(stdout, \"RawSize:    %.1f MB (estimated)\\n\",\n-            ((static_cast<int64_t>(kKeySize + FLAGS_value_size) * num_)\n-             / 1048576.0));\n-    fprintf(stdout, \"FileSize:   %.1f MB (estimated)\\n\",\n-            (((kKeySize + FLAGS_value_size * FLAGS_compression_ratio) * num_)\n-             / 1048576.0));\n-    PrintWarnings();\n-    fprintf(stdout, \"------------------------------------------------\\n\");\n-  }\n-\n-  void PrintWarnings() {\n-#if defined(__GNUC__) && !defined(__OPTIMIZE__)\n-    fprintf(stdout,\n-            \"WARNING: Optimization is disabled: benchmarks unnecessarily slow\\n\"\n-            );\n-#endif\n-#ifndef NDEBUG\n-    fprintf(stdout,\n-            \"WARNING: Assertions are enabled; benchmarks unnecessarily slow\\n\");\n-#endif\n-  }\n-\n-  void PrintEnvironment() {\n-    fprintf(stderr, \"Kyoto Cabinet:    version %s, lib ver %d, lib rev %d\\n\",\n-            kyotocabinet::VERSION, kyotocabinet::LIBVER, kyotocabinet::LIBREV);\n-\n-#if defined(__linux)\n-    time_t now = time(NULL);\n-    fprintf(stderr, \"Date:           %s\", ctime(&now));  // ctime() adds newline\n-\n-    FILE* cpuinfo = fopen(\"/proc/cpuinfo\", \"r\");\n-    if (cpuinfo != NULL) {\n-      char line[1000];\n-      int num_cpus = 0;\n-      std::string cpu_type;\n-      std::string cache_size;\n-      while (fgets(line, sizeof(line), cpuinfo) != NULL) {\n-        const char* sep = strchr(line, ':');\n-        if (sep == NULL) {\n-          continue;\n-        }\n-        Slice key = TrimSpace(Slice(line, sep - 1 - line));\n-        Slice val = TrimSpace(Slice(sep + 1));\n-        if (key == \"model name\") {\n-          ++num_cpus;\n-          cpu_type = val.ToString();\n-        } else if (key == \"cache size\") {\n-          cache_size = val.ToString();\n-        }\n-      }\n-      fclose(cpuinfo);\n-      fprintf(stderr, \"CPU:            %d * %s\\n\", num_cpus, cpu_type.c_str());\n-      fprintf(stderr, \"CPUCache:       %s\\n\", cache_size.c_str());\n-    }\n-#endif\n-  }\n-\n-  void Start() {\n-    start_ = Env::Default()->NowMicros() * 1e-6;\n-    bytes_ = 0;\n-    message_.clear();\n-    last_op_finish_ = start_;\n-    hist_.Clear();\n-    done_ = 0;\n-    next_report_ = 100;\n-  }\n-\n-  void FinishedSingleOp() {\n-    if (FLAGS_histogram) {\n-      double now = Env::Default()->NowMicros() * 1e-6;\n-      double micros = (now - last_op_finish_) * 1e6;\n-      hist_.Add(micros);\n-      if (micros > 20000) {\n-        fprintf(stderr, \"long op: %.1f micros%30s\\r\", micros, \"\");\n-        fflush(stderr);\n-      }\n-      last_op_finish_ = now;\n-    }\n-\n-    done_++;\n-    if (done_ >= next_report_) {\n-      if      (next_report_ < 1000)   next_report_ += 100;\n-      else if (next_report_ < 5000)   next_report_ += 500;\n-      else if (next_report_ < 10000)  next_report_ += 1000;\n-      else if (next_report_ < 50000)  next_report_ += 5000;\n-      else if (next_report_ < 100000) next_report_ += 10000;\n-      else if (next_report_ < 500000) next_report_ += 50000;\n-      else                            next_report_ += 100000;\n-      fprintf(stderr, \"... finished %d ops%30s\\r\", done_, \"\");\n-      fflush(stderr);\n-    }\n-  }\n-\n-  void Stop(const Slice& name) {\n-    double finish = Env::Default()->NowMicros() * 1e-6;\n-\n-    // Pretend at least one op was done in case we are running a benchmark\n-    // that does not call FinishedSingleOp().\n-    if (done_ < 1) done_ = 1;\n-\n-    if (bytes_ > 0) {\n-      char rate[100];\n-      snprintf(rate, sizeof(rate), \"%6.1f MB/s\",\n-               (bytes_ / 1048576.0) / (finish - start_));\n-      if (!message_.empty()) {\n-        message_  = std::string(rate) + \" \" + message_;\n-      } else {\n-        message_ = rate;\n-      }\n-    }\n-\n-    fprintf(stdout, \"%-12s : %11.3f micros/op;%s%s\\n\",\n-            name.ToString().c_str(),\n-            (finish - start_) * 1e6 / done_,\n-            (message_.empty() ? \"\" : \" \"),\n-            message_.c_str());\n-    if (FLAGS_histogram) {\n-      fprintf(stdout, \"Microseconds per op:\\n%s\\n\", hist_.ToString().c_str());\n-    }\n-    fflush(stdout);\n-  }\n-\n- public:\n-  enum Order {\n-    SEQUENTIAL,\n-    RANDOM\n-  };\n-  enum DBState {\n-    FRESH,\n-    EXISTING\n-  };\n-\n-  Benchmark()\n-  : db_(NULL),\n-    num_(FLAGS_num),\n-    reads_(FLAGS_reads < 0 ? FLAGS_num : FLAGS_reads),\n-    bytes_(0),\n-    rand_(301) {\n-    std::vector<std::string> files;\n-    std::string test_dir;\n-    Env::Default()->GetTestDirectory(&test_dir);\n-    Env::Default()->GetChildren(test_dir.c_str(), &files);\n-    if (!FLAGS_use_existing_db) {\n-      for (int i = 0; i < files.size(); i++) {\n-        if (Slice(files[i]).starts_with(\"dbbench_polyDB\")) {\n-          std::string file_name(test_dir);\n-          file_name += \"/\";\n-          file_name += files[i];\n-          Env::Default()->DeleteFile(file_name.c_str());\n-        }\n-      }\n-    }\n-  }\n-\n-  ~Benchmark() {\n-    if (!db_->close()) {\n-      fprintf(stderr, \"close error: %s\\n\", db_->error().name());\n-    }\n-  }\n-\n-  void Run() {\n-    PrintHeader();\n-    Open(false);\n-\n-    const char* benchmarks = FLAGS_benchmarks;\n-    while (benchmarks != NULL) {\n-      const char* sep = strchr(benchmarks, ',');\n-      Slice name;\n-      if (sep == NULL) {\n-        name = benchmarks;\n-        benchmarks = NULL;\n-      } else {\n-        name = Slice(benchmarks, sep - benchmarks);\n-        benchmarks = sep + 1;\n-      }\n-\n-      Start();\n-\n-      bool known = true;\n-      bool write_sync = false;\n-      if (name == Slice(\"fillseq\")) {\n-        Write(write_sync, SEQUENTIAL, FRESH, num_, FLAGS_value_size, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"fillrandom\")) {\n-        Write(write_sync, RANDOM, FRESH, num_, FLAGS_value_size, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"overwrite\")) {\n-        Write(write_sync, RANDOM, EXISTING, num_, FLAGS_value_size, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"fillrandsync\")) {\n-        write_sync = true;\n-        Write(write_sync, RANDOM, FRESH, num_ / 100, FLAGS_value_size, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"fillseqsync\")) {\n-        write_sync = true;\n-        Write(write_sync, SEQUENTIAL, FRESH, num_ / 100, FLAGS_value_size, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"fillrand100K\")) {\n-        Write(write_sync, RANDOM, FRESH, num_ / 1000, 100 * 1000, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"fillseq100K\")) {\n-        Write(write_sync, SEQUENTIAL, FRESH, num_ / 1000, 100 * 1000, 1);\n-        DBSynchronize(db_);\n-      } else if (name == Slice(\"readseq\")) {\n-        ReadSequential();\n-      } else if (name == Slice(\"readrandom\")) {\n-        ReadRandom();\n-      } else if (name == Slice(\"readrand100K\")) {\n-        int n = reads_;\n-        reads_ /= 1000;\n-        ReadRandom();\n-        reads_ = n;\n-      } else if (name == Slice(\"readseq100K\")) {\n-        int n = reads_;\n-        reads_ /= 1000;\n-        ReadSequential();\n-        reads_ = n;\n-      } else {\n-        known = false;\n-        if (name != Slice()) {  // No error message for empty name\n-          fprintf(stderr, \"unknown benchmark '%s'\\n\", name.ToString().c_str());\n-        }\n-      }\n-      if (known) {\n-        Stop(name);\n-      }\n-    }\n-  }\n-\n- private:\n-    void Open(bool sync) {\n-    assert(db_ == NULL);\n-\n-    // Initialize db_\n-    db_ = new kyotocabinet::TreeDB();\n-    char file_name[100];\n-    db_num_++;\n-    std::string test_dir;\n-    Env::Default()->GetTestDirectory(&test_dir);\n-    snprintf(file_name, sizeof(file_name),\n-             \"%s/dbbench_polyDB-%d.kct\",\n-             test_dir.c_str(),\n-             db_num_);\n-\n-    // Create tuning options and open the database\n-    int open_options = kyotocabinet::PolyDB::OWRITER |\n-                       kyotocabinet::PolyDB::OCREATE;\n-    int tune_options = kyotocabinet::TreeDB::TSMALL |\n-        kyotocabinet::TreeDB::TLINEAR;\n-    if (FLAGS_compression) {\n-      tune_options |= kyotocabinet::TreeDB::TCOMPRESS;\n-      db_->tune_compressor(&comp_);\n-    }\n-    db_->tune_options(tune_options);\n-    db_->tune_page_cache(FLAGS_cache_size);\n-    db_->tune_page(FLAGS_page_size);\n-    db_->tune_map(256LL<<20);\n-    if (sync) {\n-      open_options |= kyotocabinet::PolyDB::OAUTOSYNC;\n-    }\n-    if (!db_->open(file_name, open_options)) {\n-      fprintf(stderr, \"open error: %s\\n\", db_->error().name());\n-    }\n-  }\n-\n-  void Write(bool sync, Order order, DBState state,\n-             int num_entries, int value_size, int entries_per_batch) {\n-    // Create new database if state == FRESH\n-    if (state == FRESH) {\n-      if (FLAGS_use_existing_db) {\n-        message_ = \"skipping (--use_existing_db is true)\";\n-        return;\n-      }\n-      delete db_;\n-      db_ = NULL;\n-      Open(sync);\n-      Start();  // Do not count time taken to destroy/open\n-    }\n-\n-    if (num_entries != num_) {\n-      char msg[100];\n-      snprintf(msg, sizeof(msg), \"(%d ops)\", num_entries);\n-      message_ = msg;\n-    }\n-\n-    // Write to database\n-    for (int i = 0; i < num_entries; i++)\n-    {\n-      const int k = (order == SEQUENTIAL) ? i : (rand_.Next() % num_entries);\n-      char key[100];\n-      snprintf(key, sizeof(key), \"%016d\", k);\n-      bytes_ += value_size + strlen(key);\n-      std::string cpp_key = key;\n-      if (!db_->set(cpp_key, gen_.Generate(value_size).ToString())) {\n-        fprintf(stderr, \"set error: %s\\n\", db_->error().name());\n-      }\n-      FinishedSingleOp();\n-    }\n-  }\n-\n-  void ReadSequential() {\n-    kyotocabinet::DB::Cursor* cur = db_->cursor();\n-    cur->jump();\n-    std::string ckey, cvalue;\n-    while (cur->get(&ckey, &cvalue, true)) {\n-      bytes_ += ckey.size() + cvalue.size();\n-      FinishedSingleOp();\n-    }\n-    delete cur;\n-  }\n-\n-  void ReadRandom() {\n-    std::string value;\n-    for (int i = 0; i < reads_; i++) {\n-      char key[100];\n-      const int k = rand_.Next() % reads_;\n-      snprintf(key, sizeof(key), \"%016d\", k);\n-      db_->get(key, &value);\n-      FinishedSingleOp();\n-    }\n-  }\n-};\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  std::string default_db_path;\n-  for (int i = 1; i < argc; i++) {\n-    double d;\n-    int n;\n-    char junk;\n-    if (leveldb::Slice(argv[i]).starts_with(\"--benchmarks=\")) {\n-      FLAGS_benchmarks = argv[i] + strlen(\"--benchmarks=\");\n-    } else if (sscanf(argv[i], \"--compression_ratio=%lf%c\", &d, &junk) == 1) {\n-      FLAGS_compression_ratio = d;\n-    } else if (sscanf(argv[i], \"--histogram=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_histogram = n;\n-    } else if (sscanf(argv[i], \"--num=%d%c\", &n, &junk) == 1) {\n-      FLAGS_num = n;\n-    } else if (sscanf(argv[i], \"--reads=%d%c\", &n, &junk) == 1) {\n-      FLAGS_reads = n;\n-    } else if (sscanf(argv[i], \"--value_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_value_size = n;\n-    } else if (sscanf(argv[i], \"--cache_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_cache_size = n;\n-    } else if (sscanf(argv[i], \"--page_size=%d%c\", &n, &junk) == 1) {\n-      FLAGS_page_size = n;\n-    } else if (sscanf(argv[i], \"--compression=%d%c\", &n, &junk) == 1 &&\n-               (n == 0 || n == 1)) {\n-      FLAGS_compression = (n == 1) ? true : false;\n-    } else if (strncmp(argv[i], \"--db=\", 5) == 0) {\n-      FLAGS_db = argv[i] + 5;\n-    } else {\n-      fprintf(stderr, \"Invalid flag '%s'\\n\", argv[i]);\n-      exit(1);\n-    }\n-  }\n-\n-  // Choose a location for the test database if none given with --db=<path>\n-  if (FLAGS_db == NULL) {\n-      leveldb::Env::Default()->GetTestDirectory(&default_db_path);\n-      default_db_path += \"/dbbench\";\n-      FLAGS_db = default_db_path.c_str();\n-  }\n-\n-  leveldb::Benchmark benchmark;\n-  benchmark.Run();\n-  return 0;\n-}"
      },
      {
        "sha": "c4639772c175b463f6f41eeb0cd0c73fe7c16d68",
        "filename": "src/leveldb/doc/benchmark.html",
        "status": "removed",
        "additions": 0,
        "deletions": 459,
        "changes": 459,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/benchmark.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/benchmark.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/benchmark.html?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,459 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-<title>LevelDB Benchmarks</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n-<style>\n-body {\n-  font-family:Helvetica,sans-serif;\n-  padding:20px;\n-}\n-\n-h2 {\n-  padding-top:30px;\n-}\n-\n-table.bn {\n-  width:800px;\n-  border-collapse:collapse;\n-  border:0;\n-  padding:0;\n-}\n-\n-table.bnbase {\n-  width:650px;\n-}\n-\n-table.bn td {\n-  padding:2px 0;\n-}\n-\n-table.bn td.c1 {\n-  font-weight:bold;\n-  width:150px;\n-}\n-\n-table.bn td.c1 div.e {\n-  float:right;\n-  font-weight:normal;\n-}\n-\n-table.bn td.c2 {\n-  width:150px;\n-  text-align:right;\n-  padding:2px;\n-}\n-\n-table.bn td.c3 {\n-  width:350px;\n-}\n-\n-table.bn td.c4 {\n-  width:150px;\n-  font-size:small;\n-  padding-left:4px;\n-}\n-\n-/* chart bars */\n-div.bldb {\n-  background-color:#0255df;\n-}\n-\n-div.bkct {\n-  background-color:#df5555;\n-}\n-\n-div.bsql {\n-  background-color:#aadf55;\n-}\n-\n-.code {\n-  font-family:monospace;\n-  font-size:large;\n-}\n-\n-.todo {\n-  color: red;\n-}\n-\n-</style>\n-</head>\n-<body>\n-<h1>LevelDB Benchmarks</h1>\n-<p>Google, July 2011</p>\n-<hr>\n-\n-<p>In order to test LevelDB's performance, we benchmark it against other well-established database implementations. We compare LevelDB (revision 39) against <a href=\"http://www.sqlite.org/\">SQLite3</a> (version 3.7.6.3) and <a href=\"http://fallabs.com/kyotocabinet/spex.html\">Kyoto Cabinet's</a> (version 1.2.67) TreeDB (a B+Tree based key-value store). We would like to acknowledge Scott Hess and Mikio Hirabayashi for their suggestions and contributions to the SQLite3 and Kyoto Cabinet benchmarks, respectively.</p>\n-\n-<p>Benchmarks were all performed on a six-core Intel(R) Xeon(R) CPU X5650 @ 2.67GHz, with 12288 KB of total L3 cache and 12 GB of DDR3 RAM at 1333 MHz. (Note that LevelDB uses at most two CPUs since the benchmarks are single threaded: one to run the benchmark, and one for background compactions.) We ran the benchmarks on two machines (with identical processors), one with an Ext3 file system and one with an Ext4 file system. The machine with the Ext3 file system has a SATA Hitachi HDS721050CLA362 hard drive. The machine with the Ext4 file system has a SATA Samsung HD502HJ hard drive. Both hard drives spin at 7200 RPM and have hard drive write-caching enabled (using `hdparm -W 1 [device]`). The numbers reported below are the median of three measurements.</p>\n-\n-<h4>Benchmark Source Code</h4>\n-<p>We wrote benchmark tools for SQLite and Kyoto TreeDB based on LevelDB's <span class=\"code\">db_bench</span>. The code for each of the benchmarks resides here:</p>\n-<ul>\n-\t<li> <b>LevelDB:</b> <a href=\"http://code.google.com/p/leveldb/source/browse/trunk/db/db_bench.cc\">db/db_bench.cc</a>.</li>\n-\t<li> <b>SQLite:</b> <a href=\"http://code.google.com/p/leveldb/source/browse/#svn%2Ftrunk%2Fdoc%2Fbench%2Fdb_bench_sqlite3.cc\">doc/bench/db_bench_sqlite3.cc</a>.</li>\n-\t<li> <b>Kyoto TreeDB:</b> <a href=\"http://code.google.com/p/leveldb/source/browse/#svn%2Ftrunk%2Fdoc%2Fbench%2Fdb_bench_tree_db.cc\">doc/bench/db_bench_tree_db.cc</a>.</li>\n-</ul>\n-\n-<h4>Custom Build Specifications</h4>\n-<ul>\n-<li>LevelDB: LevelDB was compiled with the <a href=\"http://code.google.com/p/google-perftools\">tcmalloc</a> library and the <a href=\"http://code.google.com/p/snappy/\">Snappy</a> compression library (revision 33).  Assertions were disabled.</li>\n-<li>TreeDB: TreeDB was compiled using the <a href=\"http://www.oberhumer.com/opensource/lzo/\">LZO</a> compression library (version 2.03). Furthermore, we enabled the TSMALL and TLINEAR options when opening the database in order to reduce the footprint of each record.</li>\n-<li>SQLite: We tuned SQLite's performance, by setting its locking mode to exclusive.  We also enabled SQLite's <a href=\"http://www.sqlite.org/draft/wal.html\">write-ahead logging</a>.</li>\n-</ul>\n-\n-<h2>1. Baseline Performance</h2>\n-<p>This section gives the baseline performance of all the\n-databases.  Following sections show how performance changes as various\n-parameters are varied.  For the baseline:</p>\n-<ul>\n-\t<li> Each database is allowed 4 MB of cache memory.</li>\n-        <li> Databases are opened in <em>asynchronous</em> write mode.\n-             (LevelDB's sync option, TreeDB's OAUTOSYNC option, and\n-             SQLite3's synchronous options are all turned off).  I.e.,\n-             every write is pushed to the operating system, but the\n-             benchmark does not wait for the write to reach the disk.</li>\n-\t<li> Keys are 16 bytes each.</li>\n-        <li> Value are 100 bytes each (with enough redundancy so that\n-             a simple compressor shrinks them to 50% of their original\n-             size).</li>\n-\t<li> Sequential reads/writes traverse the key space in increasing order.</li>\n-\t<li> Random reads/writes traverse the key space in random order.</li>\n-</ul>\n-\n-<h3>A. Sequential Reads</h3>\n-<table class=\"bn bnbase\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">4,030,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">1,010,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:95px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">383,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:33px\">&nbsp;</div></td>\n-</table>\n-<h3>B. Random Reads</h3>\n-<table class=\"bn bnbase\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">129,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:298px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">151,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:350px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">134,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:310px\">&nbsp;</div></td>\n-</table>\n-<h3>C. Sequential Writes</h3>\n-<table class=\"bn bnbase\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">779,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">342,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:154px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">48,600 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:22px\">&nbsp;</div></td>\n-</table>\n-<h3>D. Random Writes</h3>\n-<table class=\"bn bnbase\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">164,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">88,500 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:188px\">&nbsp;</div></td>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">9,860 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:21px\">&nbsp;</div></td>\n-</table>\n-\n-<p>LevelDB outperforms both SQLite3 and TreeDB in sequential and random write operations and sequential read operations. Kyoto Cabinet has the fastest random read operations.</p>\n-\n-<h2>2. Write Performance under Different Configurations</h2>\n-<h3>A. Large Values </h3>\n-<p>For this benchmark, we start with an empty database, and write 100,000 byte values (~50% compressible). To keep the benchmark running time reasonable, we stop after writing 1000 values.</p>\n-<h4>Sequential Writes</h4>\n-<table class=\"bn bnbase\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">1,100 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:234px\">&nbsp;</div></td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">1,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:224px\">&nbsp;</div></td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">1,600 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:350px\">&nbsp;</div></td></tr>\n-</table>\n-<h4>Random Writes</h4>\n-<table class=\"bn bnbase\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">480 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:105px\">&nbsp;</div></td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">1,100 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:240px\">&nbsp;</div></td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">1,600 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:350px\">&nbsp;</div></td></tr>\n-</table>\n-<p>LevelDB doesn't perform as well with large values of 100,000 bytes each. This is because LevelDB writes keys and values at least twice: first time to the transaction log, and second time (during a compaction) to a sorted file.\n-With larger values, LevelDB's per-operation efficiency is swamped by the\n-cost of extra copies of large values.</p>\n-<h3>B. Batch Writes</h3>\n-<p>A batch write is a set of writes that are applied atomically to the underlying database. A single batch of N writes may be significantly faster than N individual writes. The following benchmark writes one thousand batches where each batch contains one thousand 100-byte values. TreeDB does not support batch writes and is omitted from this benchmark.</p>\n-<h4>Sequential Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">840,000 entries/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.08x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">124,000 entries/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:52px\">&nbsp;</div></td>\n-    <td class=\"c4\">(2.55x baseline)</td></tr>\n-</table>\n-<h4>Random Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">221,000 entries/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.35x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">22,000 entries/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:34px\">&nbsp;</div></td>\n-    <td class=\"c4\">(2.23x baseline)</td></tr>\n-</table>\n-\n-<p>Because of the way LevelDB persistent storage is organized, batches of\n-random writes are not much slower (only a factor of 4x) than batches\n-of sequential writes.</p>\n-\n-<h3>C. Synchronous Writes</h3>\n-<p>In the following benchmark, we enable the synchronous writing modes\n-of all of the databases.  Since this change significantly slows down the\n-benchmark, we stop after 10,000 writes. For synchronous write tests, we've\n-disabled hard drive write-caching (using `hdparm -W 0 [device]`).</p>\n-<ul>\n-    <li>For LevelDB, we set WriteOptions.sync = true.</li>\n-    <li>In TreeDB, we enabled TreeDB's OAUTOSYNC option.</li>\n-    <li>For SQLite3, we set \"PRAGMA synchronous = FULL\".</li>\n-</ul>\n-<h4>Sequential Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">100 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.003x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">7 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:27px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.0004x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">88 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:315px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.002x baseline)</td></tr>\n-</table>\n-<h4>Random Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">100 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.015x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">8 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:29px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.001x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">88 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:314px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.009x baseline)</td></tr>\n-</table>\n-\n-<p>Also see the <code>ext4</code> performance numbers below\n-since synchronous writes behave significantly differently\n-on <code>ext3</code> and <code>ext4</code>.</p>\n-\n-<h3>D. Turning Compression Off</h3>\n-\n-<p>In the baseline measurements, LevelDB and TreeDB were using\n-light-weight compression\n-(<a href=\"http://code.google.com/p/snappy/\">Snappy</a> for LevelDB,\n-and <a href=\"http://www.oberhumer.com/opensource/lzo/\">LZO</a> for\n-TreeDB). SQLite3, by default does not use compression.  The\n-experiments below show what happens when compression is disabled in\n-all of the databases (the SQLite3 numbers are just a copy of\n-its baseline measurements):</p>\n-\n-<h4>Sequential Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">594,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.76x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">485,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:239px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.42x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">48,600 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:29px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.00x baseline)</td></tr>\n-</table>\n-<h4>Random Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">135,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:296px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.82x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">159,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.80x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">9,860 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:22px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.00x baseline)</td></tr>\n-</table>\n-\n-<p>LevelDB's write performance is better with compression than without\n-since compression decreases the amount of data that has to be written\n-to disk.  Therefore LevelDB users can leave compression enabled in\n-most scenarios without having worry about a tradeoff between space\n-usage and performance.  TreeDB's performance on the other hand is\n-better without compression than with compression.  Presumably this is\n-because TreeDB's compression library (LZO) is more expensive than\n-LevelDB's compression library (Snappy).<p>\n-\n-<h3>E. Using More Memory</h3>\n-<p>We increased the overall cache size for each database to 128 MB. For LevelDB, we partitioned 128 MB into a 120 MB write buffer and 8 MB of cache (up from 2 MB of write buffer and 2 MB of cache). For SQLite3, we kept the page size at 1024 bytes, but increased the number of pages to 131,072 (up from 4096). For TreeDB, we also kept the page size at 1024 bytes, but increased the cache size to 128 MB (up from 4 MB).</p>\n-<h4>Sequential Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">812,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.04x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">321,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:138px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.94x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">48,500 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:21px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.00x baseline)</td></tr>\n-</table>\n-<h4>Random Writes</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">355,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(2.16x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">284,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:280px\">&nbsp;</div></td>\n-    <td class=\"c4\">(3.21x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">9,670 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:10px\">&nbsp;</div></td>\n-    <td class=\"c4\">(0.98x baseline)</td></tr>\n-</table>\n-\n-<p>SQLite's performance does not change substantially when compared to\n-the baseline, but the random write performance for both LevelDB and\n-TreeDB increases significantly.  LevelDB's performance improves\n-because a larger write buffer reduces the need to merge sorted files\n-(since it creates a smaller number of larger sorted files).  TreeDB's\n-performance goes up because the entire database is available in memory\n-for fast in-place updates.</p>\n-\n-  <h2>3. Read Performance under Different Configurations</h2>\n-<h3>A. Larger Caches</h3>\n-<p>We increased the overall memory usage to 128 MB for each database.\n-For LevelDB, we allocated 8 MB to LevelDB's write buffer and 120 MB\n-to LevelDB's cache. The other databases don't differentiate between a\n-write buffer and a cache, so we simply set their cache size to 128\n-MB.</p>\n-<h4>Sequential Reads</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">5,210,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.29x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">1,070,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:72px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.06x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">609,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:41px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.59x baseline)</td></tr>\n-</table>\n-\n-<h4>Random Reads</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">190,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:144px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.47x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">463,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(3.07x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">186,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:141px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.39x baseline)</td></tr>\n-</table>\n-\n-<p>As expected, the read performance of all of the databases increases\n-when the caches are enlarged.  In particular, TreeDB seems to make\n-very effective use of a cache that is large enough to hold the entire\n-database.</p>\n-\n-<h3>B. No Compression Reads </h3>\n-<p>For this benchmark, we populated a database with 1 million entries consisting of 16 byte keys and 100 byte values. We compiled LevelDB and Kyoto Cabinet without compression support, so results that are read out from the database are already uncompressed. We've listed the SQLite3 baseline read performance as a point of comparison.</p>\n-<h4>Sequential Reads</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">4,880,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.21x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">1,230,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:88px\">&nbsp;</div></td>\n-    <td class=\"c4\">(3.60x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">383,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:27px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.00x baseline)</td></tr>\n-</table>\n-<h4>Random Reads</h4>\n-<table class=\"bn\">\n-<tr><td class=\"c1\">LevelDB</td>\n-    <td class=\"c2\">149,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bldb\" style=\"width:300px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.16x baseline)</td></tr>\n-<tr><td class=\"c1\">Kyoto TreeDB</td>\n-    <td class=\"c2\">175,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bkct\" style=\"width:350px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.16x baseline)</td></tr>\n-<tr><td class=\"c1\">SQLite3</td>\n-    <td class=\"c2\">134,000 ops/sec</td>\n-    <td class=\"c3\"><div class=\"bsql\" style=\"width:268px\">&nbsp;</div></td>\n-    <td class=\"c4\">(1.00x baseline)</td></tr>\n-</table>\n-\n-<p>Performance of both LevelDB and TreeDB improves a small amount when\n-compression is disabled.  Note however that under different workloads,\n-performance may very well be better with compression if it allows more\n-of the working set to fit in memory.</p>\n-\n-<h2>Note about Ext4 Filesystems</h2>\n-<p>The preceding numbers are for an ext3 file system. Synchronous writes are much slower under <a href=\"http://en.wikipedia.org/wiki/Ext4\">ext4</a> (LevelDB drops to ~31 writes / second and TreeDB drops to ~5 writes / second; SQLite3's synchronous writes do not noticeably drop) due to ext4's different handling of <span class=\"code\">fsync</span> / <span class=\"code\">msync</span> calls. Even LevelDB's asynchronous write performance drops somewhat since it spreads its storage across multiple files and issues <span class=\"code\">fsync</span> calls when switching to a new file.</p>\n-\n-<h2>Acknowledgements</h2>\n-<p>Jeff Dean and Sanjay Ghemawat wrote LevelDB. Kevin Tseng wrote and compiled these benchmarks. Mikio Hirabayashi, Scott Hess, and Gabor Cselle provided help and advice.</p>\n-</body>\n-</html>"
      },
      {
        "sha": "700c564e433827c311cd8a26896ceaa7c8260818",
        "filename": "src/leveldb/doc/doc.css",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/doc.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/doc.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/doc.css?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,89 +0,0 @@\n-body {\n-  margin-left: 0.5in;\n-  margin-right: 0.5in;\n-  background: white;\n-  color: black;\n-}\n-\n-h1 {\n-  margin-left: -0.2in;\n-  font-size: 14pt;\n-}\n-h2 {\n-  margin-left: -0in;\n-  font-size: 12pt;\n-}\n-h3 {\n-  margin-left: -0in;\n-}\n-h4 {\n-  margin-left: -0in;\n-}\n-hr {\n-  margin-left: -0in;\n-}\n-\n-/* Definition lists: definition term bold */\n-dt {\n-  font-weight: bold;\n-}\n-\n-address {\n-  text-align: center;\n-}\n-code,samp,var {\n-  color: blue;\n-}\n-kbd {\n-  color: #600000;\n-}\n-div.note p {\n-  float: right;\n-  width: 3in;\n-  margin-right: 0%;\n-  padding: 1px;\n-  border: 2px solid #6060a0;\n-  background-color: #fffff0;\n-}\n-\n-ul {\n-  margin-top: -0em;\n-  margin-bottom: -0em;\n-}\n-\n-ol {\n-  margin-top: -0em;\n-  margin-bottom: -0em;\n-}\n-\n-UL.nobullets {\n-  list-style-type: none;\n-  list-style-image: none;\n-  margin-left: -1em;\n-}\n-\n-p {\n-  margin: 1em 0 1em 0;\n-  padding: 0 0 0 0;\n-}\n-\n-pre {\n-  line-height: 1.3em;\n-  padding: 0.4em 0 0.8em 0;\n-  margin:  0 0 0 0;\n-  border:  0 0 0 0;\n-  color: blue;\n-}\n-\n-.datatable {\n-  margin-left: auto;\n-  margin-right: auto;\n-  margin-top: 2em;\n-  margin-bottom: 2em;\n-  border: 1px solid;\n-}\n-\n-.datatable td,th {\n-  padding: 0 0.5em 0 0.5em;\n-  text-align: right;\n-}"
      },
      {
        "sha": "6a468be0955d921a3e7bad2d55a71989209d06ae",
        "filename": "src/leveldb/doc/impl.html",
        "status": "removed",
        "additions": 0,
        "deletions": 213,
        "changes": 213,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/impl.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/impl.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/impl.html?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,213 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"doc.css\" />\n-<title>Leveldb file layout and compactions</title>\n-</head>\n-\n-<body>\n-\n-<h1>Files</h1>\n-\n-The implementation of leveldb is similar in spirit to the\n-representation of a single\n-<a href=\"http://research.google.com/archive/bigtable.html\">\n-Bigtable tablet (section 5.3)</a>.\n-However the organization of the files that make up the representation\n-is somewhat different and is explained below.\n-\n-<p>\n-Each database is represented by a set of files stored in a directory.\n-There are several different types of files as documented below:\n-<p>\n-<h2>Log files</h2>\n-<p>\n-A log file (*.log) stores a sequence of recent updates.  Each update\n-is appended to the current log file.  When the log file reaches a\n-pre-determined size (approximately 4MB by default), it is converted\n-to a sorted table (see below) and a new log file is created for future\n-updates.\n-<p>\n-A copy of the current log file is kept in an in-memory structure (the\n-<code>memtable</code>).  This copy is consulted on every read so that read\n-operations reflect all logged updates.\n-<p>\n-<h2>Sorted tables</h2>\n-<p>\n-A sorted table (*.sst) stores a sequence of entries sorted by key.\n-Each entry is either a value for the key, or a deletion marker for the\n-key.  (Deletion markers are kept around to hide obsolete values\n-present in older sorted tables).\n-<p>\n-The set of sorted tables are organized into a sequence of levels.  The\n-sorted table generated from a log file is placed in a special <code>young</code>\n-level (also called level-0).  When the number of young files exceeds a\n-certain threshold (currently four), all of the young files are merged\n-together with all of the overlapping level-1 files to produce a\n-sequence of new level-1 files (we create a new level-1 file for every\n-2MB of data.)\n-<p>\n-Files in the young level may contain overlapping keys.  However files\n-in other levels have distinct non-overlapping key ranges.  Consider\n-level number L where L >= 1.  When the combined size of files in\n-level-L exceeds (10^L) MB (i.e., 10MB for level-1, 100MB for level-2,\n-...), one file in level-L, and all of the overlapping files in\n-level-(L+1) are merged to form a set of new files for level-(L+1).\n-These merges have the effect of gradually migrating new updates from\n-the young level to the largest level using only bulk reads and writes\n-(i.e., minimizing expensive seeks).\n-\n-<h2>Manifest</h2>\n-<p>\n-A MANIFEST file lists the set of sorted tables that make up each\n-level, the corresponding key ranges, and other important metadata.\n-A new MANIFEST file (with a new number embedded in the file name)\n-is created whenever the database is reopened.  The MANIFEST file is\n-formatted as a log, and changes made to the serving state (as files\n-are added or removed) are appended to this log.\n-<p>\n-<h2>Current</h2>\n-<p>\n-CURRENT is a simple text file that contains the name of the latest\n-MANIFEST file.\n-<p>\n-<h2>Info logs</h2>\n-<p>\n-Informational messages are printed to files named LOG and LOG.old.\n-<p>\n-<h2>Others</h2>\n-<p>\n-Other files used for miscellaneous purposes may also be present\n-(LOCK, *.dbtmp).\n-\n-<h1>Level 0</h1>\n-When the log file grows above a certain size (1MB by default):\n-<ul>\n-<li>Create a brand new memtable and log file and direct future updates here\n-<li>In the background:\n-<ul>\n-<li>Write the contents of the previous memtable to an sstable\n-<li>Discard the memtable\n-<li>Delete the old log file and the old memtable\n-<li>Add the new sstable to the young (level-0) level.\n-</ul>\n-</ul>\n-\n-<h1>Compactions</h1>\n-\n-<p>\n-When the size of level L exceeds its limit, we compact it in a\n-background thread.  The compaction picks a file from level L and all\n-overlapping files from the next level L+1.  Note that if a level-L\n-file overlaps only part of a level-(L+1) file, the entire file at\n-level-(L+1) is used as an input to the compaction and will be\n-discarded after the compaction.  Aside: because level-0 is special\n-(files in it may overlap each other), we treat compactions from\n-level-0 to level-1 specially: a level-0 compaction may pick more than\n-one level-0 file in case some of these files overlap each other.\n-\n-<p>\n-A compaction merges the contents of the picked files to produce a\n-sequence of level-(L+1) files.  We switch to producing a new\n-level-(L+1) file after the current output file has reached the target\n-file size (2MB).  We also switch to a new output file when the key\n-range of the current output file has grown enough to overlap more than\n-ten level-(L+2) files.  This last rule ensures that a later compaction\n-of a level-(L+1) file will not pick up too much data from level-(L+2).\n-\n-<p>\n-The old files are discarded and the new files are added to the serving\n-state.\n-\n-<p>\n-Compactions for a particular level rotate through the key space.  In\n-more detail, for each level L, we remember the ending key of the last\n-compaction at level L.  The next compaction for level L will pick the\n-first file that starts after this key (wrapping around to the\n-beginning of the key space if there is no such file).\n-\n-<p>\n-Compactions drop overwritten values.  They also drop deletion markers\n-if there are no higher numbered levels that contain a file whose range\n-overlaps the current key.\n-\n-<h2>Timing</h2>\n-\n-Level-0 compactions will read up to four 1MB files from level-0, and\n-at worst all the level-1 files (10MB).  I.e., we will read 14MB and\n-write 14MB.\n-\n-<p>\n-Other than the special level-0 compactions, we will pick one 2MB file\n-from level L.  In the worst case, this will overlap ~ 12 files from\n-level L+1 (10 because level-(L+1) is ten times the size of level-L,\n-and another two at the boundaries since the file ranges at level-L\n-will usually not be aligned with the file ranges at level-L+1).  The\n-compaction will therefore read 26MB and write 26MB.  Assuming a disk\n-IO rate of 100MB/s (ballpark range for modern drives), the worst\n-compaction cost will be approximately 0.5 second.\n-\n-<p>\n-If we throttle the background writing to something small, say 10% of\n-the full 100MB/s speed, a compaction may take up to 5 seconds.  If the\n-user is writing at 10MB/s, we might build up lots of level-0 files\n-(~50 to hold the 5*10MB).  This may significantly increase the cost of\n-reads due to the overhead of merging more files together on every\n-read.\n-\n-<p>\n-Solution 1: To reduce this problem, we might want to increase the log\n-switching threshold when the number of level-0 files is large.  Though\n-the downside is that the larger this threshold, the more memory we will\n-need to hold the corresponding memtable.\n-\n-<p>\n-Solution 2: We might want to decrease write rate artificially when the\n-number of level-0 files goes up.\n-\n-<p>\n-Solution 3: We work on reducing the cost of very wide merges.\n-Perhaps most of the level-0 files will have their blocks sitting\n-uncompressed in the cache and we will only need to worry about the\n-O(N) complexity in the merging iterator.\n-\n-<h2>Number of files</h2>\n-\n-Instead of always making 2MB files, we could make larger files for\n-larger levels to reduce the total file count, though at the expense of\n-more bursty compactions.  Alternatively, we could shard the set of\n-files into multiple directories.\n-\n-<p>\n-An experiment on an <code>ext3</code> filesystem on Feb 04, 2011 shows\n-the following timings to do 100K file opens in directories with\n-varying number of files:\n-<table class=\"datatable\">\n-<tr><th>Files in directory</th><th>Microseconds to open a file</th></tr>\n-<tr><td>1000</td><td>9</td>\n-<tr><td>10000</td><td>10</td>\n-<tr><td>100000</td><td>16</td>\n-</table>\n-So maybe even the sharding is not necessary on modern filesystems?\n-\n-<h1>Recovery</h1>\n-\n-<ul>\n-<li> Read CURRENT to find name of the latest committed MANIFEST\n-<li> Read the named MANIFEST file\n-<li> Clean up stale files\n-<li> We could open all sstables here, but it is probably better to be lazy...\n-<li> Convert log chunk to a new level-0 sstable\n-<li> Start directing new writes to a new log file with recovered sequence#\n-</ul>\n-\n-<h1>Garbage collection of files</h1>\n-\n-<code>DeleteObsoleteFiles()</code> is called at the end of every\n-compaction and at the end of recovery.  It finds the names of all\n-files in the database.  It deletes all log files that are not the\n-current log file.  It deletes all table files that are not referenced\n-from some level and are not the output of an active compaction.\n-\n-</body>\n-</html>"
      },
      {
        "sha": "2155192581e7b79784564f190a47138ae29461f0",
        "filename": "src/leveldb/doc/index.html",
        "status": "removed",
        "additions": 0,
        "deletions": 549,
        "changes": 549,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/index.html?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,549 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"doc.css\" />\n-<title>Leveldb</title>\n-</head>\n-\n-<body>\n-<h1>Leveldb</h1>\n-<address>Jeff Dean, Sanjay Ghemawat</address>\n-<p>\n-The <code>leveldb</code> library provides a persistent key value store.  Keys and\n-values are arbitrary byte arrays.  The keys are ordered within the key\n-value store according to a user-specified comparator function.\n-\n-<p>\n-<h1>Opening A Database</h1>\n-<p>\n-A <code>leveldb</code> database has a name which corresponds to a file system\n-directory.  All of the contents of database are stored in this\n-directory.  The following example shows how to open a database,\n-creating it if necessary:\n-<p>\n-<pre>\n-  #include &lt;cassert&gt;\n-  #include \"leveldb/db.h\"\n-\n-  leveldb::DB* db;\n-  leveldb::Options options;\n-  options.create_if_missing = true;\n-  leveldb::Status status = leveldb::DB::Open(options, \"/tmp/testdb\", &amp;db);\n-  assert(status.ok());\n-  ...\n-</pre>\n-If you want to raise an error if the database already exists, add\n-the following line before the <code>leveldb::DB::Open</code> call:\n-<pre>\n-  options.error_if_exists = true;\n-</pre>\n-<h1>Status</h1>\n-<p>\n-You may have noticed the <code>leveldb::Status</code> type above.  Values of this\n-type are returned by most functions in <code>leveldb</code> that may encounter an\n-error.  You can check if such a result is ok, and also print an\n-associated error message:\n-<p>\n-<pre>\n-   leveldb::Status s = ...;\n-   if (!s.ok()) cerr &lt;&lt; s.ToString() &lt;&lt; endl;\n-</pre>\n-<h1>Closing A Database</h1>\n-<p>\n-When you are done with a database, just delete the database object.\n-Example:\n-<p>\n-<pre>\n-  ... open the db as described above ...\n-  ... do something with db ...\n-  delete db;\n-</pre>\n-<h1>Reads And Writes</h1>\n-<p>\n-The database provides <code>Put</code>, <code>Delete</code>, and <code>Get</code> methods to\n-modify/query the database.  For example, the following code\n-moves the value stored under key1 to key2.\n-<pre>\n-  std::string value;\n-  leveldb::Status s = db-&gt;Get(leveldb::ReadOptions(), key1, &amp;value);\n-  if (s.ok()) s = db-&gt;Put(leveldb::WriteOptions(), key2, value);\n-  if (s.ok()) s = db-&gt;Delete(leveldb::WriteOptions(), key1);\n-</pre>\n-\n-<h1>Atomic Updates</h1>\n-<p>\n-Note that if the process dies after the Put of key2 but before the\n-delete of key1, the same value may be left stored under multiple keys.\n-Such problems can be avoided by using the <code>WriteBatch</code> class to\n-atomically apply a set of updates:\n-<p>\n-<pre>\n-  #include \"leveldb/write_batch.h\"\n-  ...\n-  std::string value;\n-  leveldb::Status s = db-&gt;Get(leveldb::ReadOptions(), key1, &amp;value);\n-  if (s.ok()) {\n-    leveldb::WriteBatch batch;\n-    batch.Delete(key1);\n-    batch.Put(key2, value);\n-    s = db-&gt;Write(leveldb::WriteOptions(), &amp;batch);\n-  }\n-</pre>\n-The <code>WriteBatch</code> holds a sequence of edits to be made to the database,\n-and these edits within the batch are applied in order.  Note that we\n-called <code>Delete</code> before <code>Put</code> so that if <code>key1</code> is identical to <code>key2</code>,\n-we do not end up erroneously dropping the value entirely.\n-<p>\n-Apart from its atomicity benefits, <code>WriteBatch</code> may also be used to\n-speed up bulk updates by placing lots of individual mutations into the\n-same batch.\n-\n-<h1>Synchronous Writes</h1>\n-By default, each write to <code>leveldb</code> is asynchronous: it\n-returns after pushing the write from the process into the operating\n-system.  The transfer from operating system memory to the underlying\n-persistent storage happens asynchronously.  The <code>sync</code> flag\n-can be turned on for a particular write to make the write operation\n-not return until the data being written has been pushed all the way to\n-persistent storage.  (On Posix systems, this is implemented by calling\n-either <code>fsync(...)</code> or <code>fdatasync(...)</code> or\n-<code>msync(..., MS_SYNC)</code> before the write operation returns.)\n-<pre>\n-  leveldb::WriteOptions write_options;\n-  write_options.sync = true;\n-  db-&gt;Put(write_options, ...);\n-</pre>\n-Asynchronous writes are often more than a thousand times as fast as\n-synchronous writes.  The downside of asynchronous writes is that a\n-crash of the machine may cause the last few updates to be lost.  Note\n-that a crash of just the writing process (i.e., not a reboot) will not\n-cause any loss since even when <code>sync</code> is false, an update\n-is pushed from the process memory into the operating system before it\n-is considered done.\n-\n-<p>\n-Asynchronous writes can often be used safely.  For example, when\n-loading a large amount of data into the database you can handle lost\n-updates by restarting the bulk load after a crash.  A hybrid scheme is\n-also possible where every Nth write is synchronous, and in the event\n-of a crash, the bulk load is restarted just after the last synchronous\n-write finished by the previous run.  (The synchronous write can update\n-a marker that describes where to restart on a crash.)\n-\n-<p>\n-<code>WriteBatch</code> provides an alternative to asynchronous writes.\n-Multiple updates may be placed in the same <code>WriteBatch</code> and\n-applied together using a synchronous write (i.e.,\n-<code>write_options.sync</code> is set to true).  The extra cost of\n-the synchronous write will be amortized across all of the writes in\n-the batch.\n-\n-<p>\n-<h1>Concurrency</h1>\n-<p>\n-A database may only be opened by one process at a time.\n-The <code>leveldb</code> implementation acquires a lock from the\n-operating system to prevent misuse.  Within a single process, the\n-same <code>leveldb::DB</code> object may be safely shared by multiple\n-concurrent threads.  I.e., different threads may write into or fetch\n-iterators or call <code>Get</code> on the same database without any\n-external synchronization (the leveldb implementation will\n-automatically do the required synchronization).  However other objects\n-(like Iterator and WriteBatch) may require external synchronization.\n-If two threads share such an object, they must protect access to it\n-using their own locking protocol.  More details are available in\n-the public header files.\n-<p>\n-<h1>Iteration</h1>\n-<p>\n-The following example demonstrates how to print all key,value pairs\n-in a database.\n-<p>\n-<pre>\n-  leveldb::Iterator* it = db-&gt;NewIterator(leveldb::ReadOptions());\n-  for (it-&gt;SeekToFirst(); it-&gt;Valid(); it-&gt;Next()) {\n-    cout &lt;&lt; it-&gt;key().ToString() &lt;&lt; \": \"  &lt;&lt; it-&gt;value().ToString() &lt;&lt; endl;\n-  }\n-  assert(it-&gt;status().ok());  // Check for any errors found during the scan\n-  delete it;\n-</pre>\n-The following variation shows how to process just the keys in the\n-range <code>[start,limit)</code>:\n-<p>\n-<pre>\n-  for (it-&gt;Seek(start);\n-       it-&gt;Valid() &amp;&amp; it-&gt;key().ToString() &lt; limit;\n-       it-&gt;Next()) {\n-    ...\n-  }\n-</pre>\n-You can also process entries in reverse order.  (Caveat: reverse\n-iteration may be somewhat slower than forward iteration.)\n-<p>\n-<pre>\n-  for (it-&gt;SeekToLast(); it-&gt;Valid(); it-&gt;Prev()) {\n-    ...\n-  }\n-</pre>\n-<h1>Snapshots</h1>\n-<p>\n-Snapshots provide consistent read-only views over the entire state of\n-the key-value store.  <code>ReadOptions::snapshot</code> may be non-NULL to indicate\n-that a read should operate on a particular version of the DB state.\n-If <code>ReadOptions::snapshot</code> is NULL, the read will operate on an\n-implicit snapshot of the current state.\n-<p>\n-Snapshots are created by the DB::GetSnapshot() method:\n-<p>\n-<pre>\n-  leveldb::ReadOptions options;\n-  options.snapshot = db-&gt;GetSnapshot();\n-  ... apply some updates to db ...\n-  leveldb::Iterator* iter = db-&gt;NewIterator(options);\n-  ... read using iter to view the state when the snapshot was created ...\n-  delete iter;\n-  db-&gt;ReleaseSnapshot(options.snapshot);\n-</pre>\n-Note that when a snapshot is no longer needed, it should be released\n-using the DB::ReleaseSnapshot interface.  This allows the\n-implementation to get rid of state that was being maintained just to\n-support reading as of that snapshot.\n-<h1>Slice</h1>\n-<p>\n-The return value of the <code>it->key()</code> and <code>it->value()</code> calls above\n-are instances of the <code>leveldb::Slice</code> type.  <code>Slice</code> is a simple\n-structure that contains a length and a pointer to an external byte\n-array.  Returning a <code>Slice</code> is a cheaper alternative to returning a\n-<code>std::string</code> since we do not need to copy potentially large keys and\n-values.  In addition, <code>leveldb</code> methods do not return null-terminated\n-C-style strings since <code>leveldb</code> keys and values are allowed to\n-contain '\\0' bytes.\n-<p>\n-C++ strings and null-terminated C-style strings can be easily converted\n-to a Slice:\n-<p>\n-<pre>\n-   leveldb::Slice s1 = \"hello\";\n-\n-   std::string str(\"world\");\n-   leveldb::Slice s2 = str;\n-</pre>\n-A Slice can be easily converted back to a C++ string:\n-<pre>\n-   std::string str = s1.ToString();\n-   assert(str == std::string(\"hello\"));\n-</pre>\n-Be careful when using Slices since it is up to the caller to ensure that\n-the external byte array into which the Slice points remains live while\n-the Slice is in use.  For example, the following is buggy:\n-<p>\n-<pre>\n-   leveldb::Slice slice;\n-   if (...) {\n-     std::string str = ...;\n-     slice = str;\n-   }\n-   Use(slice);\n-</pre>\n-When the <code>if</code> statement goes out of scope, <code>str</code> will be destroyed and the\n-backing storage for <code>slice</code> will disappear.\n-<p>\n-<h1>Comparators</h1>\n-<p>\n-The preceding examples used the default ordering function for key,\n-which orders bytes lexicographically.  You can however supply a custom\n-comparator when opening a database.  For example, suppose each\n-database key consists of two numbers and we should sort by the first\n-number, breaking ties by the second number.  First, define a proper\n-subclass of <code>leveldb::Comparator</code> that expresses these rules:\n-<p>\n-<pre>\n-  class TwoPartComparator : public leveldb::Comparator {\n-   public:\n-    // Three-way comparison function:\n-    //   if a &lt; b: negative result\n-    //   if a &gt; b: positive result\n-    //   else: zero result\n-    int Compare(const leveldb::Slice&amp; a, const leveldb::Slice&amp; b) const {\n-      int a1, a2, b1, b2;\n-      ParseKey(a, &amp;a1, &amp;a2);\n-      ParseKey(b, &amp;b1, &amp;b2);\n-      if (a1 &lt; b1) return -1;\n-      if (a1 &gt; b1) return +1;\n-      if (a2 &lt; b2) return -1;\n-      if (a2 &gt; b2) return +1;\n-      return 0;\n-    }\n-\n-    // Ignore the following methods for now:\n-    const char* Name() const { return \"TwoPartComparator\"; }\n-    void FindShortestSeparator(std::string*, const leveldb::Slice&amp;) const { }\n-    void FindShortSuccessor(std::string*) const { }\n-  };\n-</pre>\n-Now create a database using this custom comparator:\n-<p>\n-<pre>\n-  TwoPartComparator cmp;\n-  leveldb::DB* db;\n-  leveldb::Options options;\n-  options.create_if_missing = true;\n-  options.comparator = &amp;cmp;\n-  leveldb::Status status = leveldb::DB::Open(options, \"/tmp/testdb\", &amp;db);\n-  ...\n-</pre>\n-<h2>Backwards compatibility</h2>\n-<p>\n-The result of the comparator's <code>Name</code> method is attached to the\n-database when it is created, and is checked on every subsequent\n-database open.  If the name changes, the <code>leveldb::DB::Open</code> call will\n-fail.  Therefore, change the name if and only if the new key format\n-and comparison function are incompatible with existing databases, and\n-it is ok to discard the contents of all existing databases.\n-<p>\n-You can however still gradually evolve your key format over time with\n-a little bit of pre-planning.  For example, you could store a version\n-number at the end of each key (one byte should suffice for most uses).\n-When you wish to switch to a new key format (e.g., adding an optional\n-third part to the keys processed by <code>TwoPartComparator</code>),\n-(a) keep the same comparator name (b) increment the version number\n-for new keys (c) change the comparator function so it uses the\n-version numbers found in the keys to decide how to interpret them.\n-<p>\n-<h1>Performance</h1>\n-<p>\n-Performance can be tuned by changing the default values of the\n-types defined in <code>include/leveldb/options.h</code>.\n-\n-<p>\n-<h2>Block size</h2>\n-<p>\n-<code>leveldb</code> groups adjacent keys together into the same block and such a\n-block is the unit of transfer to and from persistent storage.  The\n-default block size is approximately 4096 uncompressed bytes.\n-Applications that mostly do bulk scans over the contents of the\n-database may wish to increase this size.  Applications that do a lot\n-of point reads of small values may wish to switch to a smaller block\n-size if performance measurements indicate an improvement.  There isn't\n-much benefit in using blocks smaller than one kilobyte, or larger than\n-a few megabytes.  Also note that compression will be more effective\n-with larger block sizes.\n-<p>\n-<h2>Compression</h2>\n-<p>\n-Each block is individually compressed before being written to\n-persistent storage.  Compression is on by default since the default\n-compression method is very fast, and is automatically disabled for\n-uncompressible data.  In rare cases, applications may want to disable\n-compression entirely, but should only do so if benchmarks show a\n-performance improvement:\n-<p>\n-<pre>\n-  leveldb::Options options;\n-  options.compression = leveldb::kNoCompression;\n-  ... leveldb::DB::Open(options, name, ...) ....\n-</pre>\n-<h2>Cache</h2>\n-<p>\n-The contents of the database are stored in a set of files in the\n-filesystem and each file stores a sequence of compressed blocks.  If\n-<code>options.cache</code> is non-NULL, it is used to cache frequently used\n-uncompressed block contents.\n-<p>\n-<pre>\n-  #include \"leveldb/cache.h\"\n-\n-  leveldb::Options options;\n-  options.cache = leveldb::NewLRUCache(100 * 1048576);  // 100MB cache\n-  leveldb::DB* db;\n-  leveldb::DB::Open(options, name, &db);\n-  ... use the db ...\n-  delete db\n-  delete options.cache;\n-</pre>\n-Note that the cache holds uncompressed data, and therefore it should\n-be sized according to application level data sizes, without any\n-reduction from compression.  (Caching of compressed blocks is left to\n-the operating system buffer cache, or any custom <code>Env</code>\n-implementation provided by the client.)\n-<p>\n-When performing a bulk read, the application may wish to disable\n-caching so that the data processed by the bulk read does not end up\n-displacing most of the cached contents.  A per-iterator option can be\n-used to achieve this:\n-<p>\n-<pre>\n-  leveldb::ReadOptions options;\n-  options.fill_cache = false;\n-  leveldb::Iterator* it = db-&gt;NewIterator(options);\n-  for (it-&gt;SeekToFirst(); it-&gt;Valid(); it-&gt;Next()) {\n-    ...\n-  }\n-</pre>\n-<h2>Key Layout</h2>\n-<p>\n-Note that the unit of disk transfer and caching is a block.  Adjacent\n-keys (according to the database sort order) will usually be placed in\n-the same block.  Therefore the application can improve its performance\n-by placing keys that are accessed together near each other and placing\n-infrequently used keys in a separate region of the key space.\n-<p>\n-For example, suppose we are implementing a simple file system on top\n-of <code>leveldb</code>.  The types of entries we might wish to store are:\n-<p>\n-<pre>\n-   filename -&gt; permission-bits, length, list of file_block_ids\n-   file_block_id -&gt; data\n-</pre>\n-We might want to prefix <code>filename</code> keys with one letter (say '/') and the\n-<code>file_block_id</code> keys with a different letter (say '0') so that scans\n-over just the metadata do not force us to fetch and cache bulky file\n-contents.\n-<p>\n-<h2>Filters</h2>\n-<p>\n-Because of the way <code>leveldb</code> data is organized on disk,\n-a single <code>Get()</code> call may involve multiple reads from disk.\n-The optional <code>FilterPolicy</code> mechanism can be used to reduce\n-the number of disk reads substantially.\n-<pre>\n-   leveldb::Options options;\n-   options.filter_policy = NewBloomFilterPolicy(10);\n-   leveldb::DB* db;\n-   leveldb::DB::Open(options, \"/tmp/testdb\", &amp;db);\n-   ... use the database ...\n-   delete db;\n-   delete options.filter_policy;\n-</pre>\n-The preceding code associates a\n-<a href=\"http://en.wikipedia.org/wiki/Bloom_filter\">Bloom filter</a>\n-based filtering policy with the database.  Bloom filter based\n-filtering relies on keeping some number of bits of data in memory per\n-key (in this case 10 bits per key since that is the argument we passed\n-to NewBloomFilterPolicy).  This filter will reduce the number of unnecessary\n-disk reads needed for <code>Get()</code> calls by a factor of\n-approximately a 100.  Increasing the bits per key will lead to a\n-larger reduction at the cost of more memory usage.  We recommend that\n-applications whose working set does not fit in memory and that do a\n-lot of random reads set a filter policy.\n-<p>\n-If you are using a custom comparator, you should ensure that the filter\n-policy you are using is compatible with your comparator.  For example,\n-consider a comparator that ignores trailing spaces when comparing keys.\n-<code>NewBloomFilterPolicy</code> must not be used with such a comparator.\n-Instead, the application should provide a custom filter policy that\n-also ignores trailing spaces.  For example:\n-<pre>\n-  class CustomFilterPolicy : public leveldb::FilterPolicy {\n-   private:\n-    FilterPolicy* builtin_policy_;\n-   public:\n-    CustomFilterPolicy() : builtin_policy_(NewBloomFilterPolicy(10)) { }\n-    ~CustomFilterPolicy() { delete builtin_policy_; }\n-\n-    const char* Name() const { return \"IgnoreTrailingSpacesFilter\"; }\n-\n-    void CreateFilter(const Slice* keys, int n, std::string* dst) const {\n-      // Use builtin bloom filter code after removing trailing spaces\n-      std::vector&lt;Slice&gt; trimmed(n);\n-      for (int i = 0; i &lt; n; i++) {\n-        trimmed[i] = RemoveTrailingSpaces(keys[i]);\n-      }\n-      return builtin_policy_-&gt;CreateFilter(&amp;trimmed[i], n, dst);\n-    }\n-\n-    bool KeyMayMatch(const Slice& key, const Slice& filter) const {\n-      // Use builtin bloom filter code after removing trailing spaces\n-      return builtin_policy_-&gt;KeyMayMatch(RemoveTrailingSpaces(key), filter);\n-    }\n-  };\n-</pre>\n-<p>\n-Advanced applications may provide a filter policy that does not use\n-a bloom filter but uses some other mechanism for summarizing a set\n-of keys.  See <code>leveldb/filter_policy.h</code> for detail.\n-<p>\n-<h1>Checksums</h1>\n-<p>\n-<code>leveldb</code> associates checksums with all data it stores in the file system.\n-There are two separate controls provided over how aggressively these\n-checksums are verified:\n-<p>\n-<ul>\n-<li> <code>ReadOptions::verify_checksums</code> may be set to true to force\n-  checksum verification of all data that is read from the file system on\n-  behalf of a particular read.  By default, no such verification is\n-  done.\n-<p>\n-<li> <code>Options::paranoid_checks</code> may be set to true before opening a\n-  database to make the database implementation raise an error as soon as\n-  it detects an internal corruption.  Depending on which portion of the\n-  database has been corrupted, the error may be raised when the database\n-  is opened, or later by another database operation.  By default,\n-  paranoid checking is off so that the database can be used even if\n-  parts of its persistent storage have been corrupted.\n-<p>\n-  If a database is corrupted (perhaps it cannot be opened when\n-  paranoid checking is turned on), the <code>leveldb::RepairDB</code> function\n-  may be used to recover as much of the data as possible\n-<p>\n-</ul>\n-<h1>Approximate Sizes</h1>\n-<p>\n-The <code>GetApproximateSizes</code> method can used to get the approximate\n-number of bytes of file system space used by one or more key ranges.\n-<p>\n-<pre>\n-   leveldb::Range ranges[2];\n-   ranges[0] = leveldb::Range(\"a\", \"c\");\n-   ranges[1] = leveldb::Range(\"x\", \"z\");\n-   uint64_t sizes[2];\n-   leveldb::Status s = db-&gt;GetApproximateSizes(ranges, 2, sizes);\n-</pre>\n-The preceding call will set <code>sizes[0]</code> to the approximate number of\n-bytes of file system space used by the key range <code>[a..c)</code> and\n-<code>sizes[1]</code> to the approximate number of bytes used by the key range\n-<code>[x..z)</code>.\n-<p>\n-<h1>Environment</h1>\n-<p>\n-All file operations (and other operating system calls) issued by the\n-<code>leveldb</code> implementation are routed through a <code>leveldb::Env</code> object.\n-Sophisticated clients may wish to provide their own <code>Env</code>\n-implementation to get better control.  For example, an application may\n-introduce artificial delays in the file IO paths to limit the impact\n-of <code>leveldb</code> on other activities in the system.\n-<p>\n-<pre>\n-  class SlowEnv : public leveldb::Env {\n-    .. implementation of the Env interface ...\n-  };\n-\n-  SlowEnv env;\n-  leveldb::Options options;\n-  options.env = &amp;env;\n-  Status s = leveldb::DB::Open(options, ...);\n-</pre>\n-<h1>Porting</h1>\n-<p>\n-<code>leveldb</code> may be ported to a new platform by providing platform\n-specific implementations of the types/methods/functions exported by\n-<code>leveldb/port/port.h</code>.  See <code>leveldb/port/port_example.h</code> for more\n-details.\n-<p>\n-In addition, the new platform may need a new default <code>leveldb::Env</code>\n-implementation.  See <code>leveldb/util/env_posix.h</code> for an example.\n-\n-<h1>Other Information</h1>\n-\n-<p>\n-Details about the <code>leveldb</code> implementation may be found in\n-the following documents:\n-<ul>\n-<li> <a href=\"impl.html\">Implementation notes</a>\n-<li> <a href=\"table_format.txt\">Format of an immutable Table file</a>\n-<li> <a href=\"log_format.txt\">Format of a log file</a>\n-</ul>\n-\n-</body>\n-</html>"
      },
      {
        "sha": "4cca5ef6ead327bc4c55d8941528f656fa68166c",
        "filename": "src/leveldb/doc/log_format.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/log_format.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/log_format.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/log_format.txt?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,75 +0,0 @@\n-The log file contents are a sequence of 32KB blocks.  The only\n-exception is that the tail of the file may contain a partial block.\n-\n-Each block consists of a sequence of records:\n-   block := record* trailer?\n-   record :=\n-\tchecksum: uint32\t// crc32c of type and data[] ; little-endian\n-\tlength: uint16\t\t// little-endian\n-\ttype: uint8\t\t// One of FULL, FIRST, MIDDLE, LAST\n-\tdata: uint8[length]\n-\n-A record never starts within the last six bytes of a block (since it\n-won't fit).  Any leftover bytes here form the trailer, which must\n-consist entirely of zero bytes and must be skipped by readers.\n-\n-Aside: if exactly seven bytes are left in the current block, and a new\n-non-zero length record is added, the writer must emit a FIRST record\n-(which contains zero bytes of user data) to fill up the trailing seven\n-bytes of the block and then emit all of the user data in subsequent\n-blocks.\n-\n-More types may be added in the future.  Some Readers may skip record\n-types they do not understand, others may report that some data was\n-skipped.\n-\n-FULL == 1\n-FIRST == 2\n-MIDDLE == 3\n-LAST == 4\n-\n-The FULL record contains the contents of an entire user record.\n-\n-FIRST, MIDDLE, LAST are types used for user records that have been\n-split into multiple fragments (typically because of block boundaries).\n-FIRST is the type of the first fragment of a user record, LAST is the\n-type of the last fragment of a user record, and MIDDLE is the type of\n-all interior fragments of a user record.\n-\n-Example: consider a sequence of user records:\n-   A: length 1000\n-   B: length 97270\n-   C: length 8000\n-A will be stored as a FULL record in the first block.\n-\n-B will be split into three fragments: first fragment occupies the rest\n-of the first block, second fragment occupies the entirety of the\n-second block, and the third fragment occupies a prefix of the third\n-block.  This will leave six bytes free in the third block, which will\n-be left empty as the trailer.\n-\n-C will be stored as a FULL record in the fourth block.\n-\n-===================\n-\n-Some benefits over the recordio format:\n-\n-(1) We do not need any heuristics for resyncing - just go to next\n-block boundary and scan.  If there is a corruption, skip to the next\n-block.  As a side-benefit, we do not get confused when part of the\n-contents of one log file are embedded as a record inside another log\n-file.\n-\n-(2) Splitting at approximate boundaries (e.g., for mapreduce) is\n-simple: find the next block boundary and skip records until we\n-hit a FULL or FIRST record.\n-\n-(3) We do not need extra buffering for large records.\n-\n-Some downsides compared to recordio format:\n-\n-(1) No packing of tiny records.  This could be fixed by adding a new\n-record type, so it is a shortcoming of the current implementation,\n-not necessarily the format.\n-\n-(2) No compression.  Again, this could be fixed by adding new record types."
      },
      {
        "sha": "ca8f9b4460ad85d9e09f14a959ed47bd2812edb5",
        "filename": "src/leveldb/doc/table_format.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/table_format.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/doc/table_format.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/table_format.txt?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,104 +0,0 @@\n-File format\n-===========\n-\n-  <beginning_of_file>\n-  [data block 1]\n-  [data block 2]\n-  ...\n-  [data block N]\n-  [meta block 1]\n-  ...\n-  [meta block K]\n-  [metaindex block]\n-  [index block]\n-  [Footer]        (fixed size; starts at file_size - sizeof(Footer))\n-  <end_of_file>\n-\n-The file contains internal pointers.  Each such pointer is called\n-a BlockHandle and contains the following information:\n-  offset:\t    varint64\n-  size:\t\t    varint64\n-See https://developers.google.com/protocol-buffers/docs/encoding#varints\n-for an explanation of varint64 format.\n-\n-(1) The sequence of key/value pairs in the file are stored in sorted\n-order and partitioned into a sequence of data blocks.  These blocks\n-come one after another at the beginning of the file.  Each data block\n-is formatted according to the code in block_builder.cc, and then\n-optionally compressed.\n-\n-(2) After the data blocks we store a bunch of meta blocks.  The\n-supported meta block types are described below.  More meta block types\n-may be added in the future.  Each meta block is again formatted using\n-block_builder.cc and then optionally compressed.\n-\n-(3) A \"metaindex\" block.  It contains one entry for every other meta\n-block where the key is the name of the meta block and the value is a\n-BlockHandle pointing to that meta block.\n-\n-(4) An \"index\" block.  This block contains one entry per data block,\n-where the key is a string >= last key in that data block and before\n-the first key in the successive data block.  The value is the\n-BlockHandle for the data block.\n-\n-(6) At the very end of the file is a fixed length footer that contains\n-the BlockHandle of the metaindex and index blocks as well as a magic number.\n-       metaindex_handle: char[p];    // Block handle for metaindex\n-       index_handle:     char[q];    // Block handle for index\n-       padding:          char[40-p-q]; // zeroed bytes to make fixed length\n-                                       // (40==2*BlockHandle::kMaxEncodedLength)\n-       magic:            fixed64;    // == 0xdb4775248b80fb57 (little-endian)\n-\n-\"filter\" Meta Block\n--------------------\n-\n-If a \"FilterPolicy\" was specified when the database was opened, a\n-filter block is stored in each table.  The \"metaindex\" block contains\n-an entry that maps from \"filter.<N>\" to the BlockHandle for the filter\n-block where \"<N>\" is the string returned by the filter policy's\n-\"Name()\" method.\n-\n-The filter block stores a sequence of filters, where filter i contains\n-the output of FilterPolicy::CreateFilter() on all keys that are stored\n-in a block whose file offset falls within the range\n-\n-    [ i*base ... (i+1)*base-1 ]\n-\n-Currently, \"base\" is 2KB.  So for example, if blocks X and Y start in\n-the range [ 0KB .. 2KB-1 ], all of the keys in X and Y will be\n-converted to a filter by calling FilterPolicy::CreateFilter(), and the\n-resulting filter will be stored as the first filter in the filter\n-block.\n-\n-The filter block is formatted as follows:\n-\n-     [filter 0]\n-     [filter 1]\n-     [filter 2]\n-     ...\n-     [filter N-1]\n-\n-     [offset of filter 0]                  : 4 bytes\n-     [offset of filter 1]                  : 4 bytes\n-     [offset of filter 2]                  : 4 bytes\n-     ...\n-     [offset of filter N-1]                : 4 bytes\n-\n-     [offset of beginning of offset array] : 4 bytes\n-     lg(base)                              : 1 byte\n-\n-The offset array at the end of the filter block allows efficient\n-mapping from a data block offset to the corresponding filter.\n-\n-\"stats\" Meta Block\n-------------------\n-\n-This meta block contains a bunch of stats.  The key is the name\n-of the statistic.  The value contains the statistic.\n-TODO(postrelease): record following stats.\n-  data size\n-  index size\n-  key size (uncompressed)\n-  value size (uncompressed)\n-  number of entries\n-  number of data blocks"
      },
      {
        "sha": "9a98884daf8d40247a0c57ab5c559ae86010501d",
        "filename": "src/leveldb/helpers/memenv/memenv.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 398,
        "changes": 398,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/helpers/memenv/memenv.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/helpers/memenv/memenv.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/helpers/memenv/memenv.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,398 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"helpers/memenv/memenv.h\"\n-\n-#include \"leveldb/env.h\"\n-#include \"leveldb/status.h\"\n-#include \"port/port.h\"\n-#include \"util/mutexlock.h\"\n-#include <map>\n-#include <string.h>\n-#include <string>\n-#include <vector>\n-\n-namespace leveldb {\n-\n-namespace {\n-\n-class FileState {\n- public:\n-  // FileStates are reference counted. The initial reference count is zero\n-  // and the caller must call Ref() at least once.\n-  FileState() : refs_(0), size_(0) {}\n-\n-  // Increase the reference count.\n-  void Ref() {\n-    MutexLock lock(&refs_mutex_);\n-    ++refs_;\n-  }\n-\n-  // Decrease the reference count. Delete if this is the last reference.\n-  void Unref() {\n-    bool do_delete = false;\n-\n-    {\n-      MutexLock lock(&refs_mutex_);\n-      --refs_;\n-      assert(refs_ >= 0);\n-      if (refs_ <= 0) {\n-        do_delete = true;\n-      }\n-    }\n-\n-    if (do_delete) {\n-      delete this;\n-    }\n-  }\n-\n-  uint64_t Size() const { return size_; }\n-\n-  Status Read(uint64_t offset, size_t n, Slice* result, char* scratch) const {\n-    if (offset > size_) {\n-      return Status::IOError(\"Offset greater than file size.\");\n-    }\n-    const uint64_t available = size_ - offset;\n-    if (n > available) {\n-      n = static_cast<size_t>(available);\n-    }\n-    if (n == 0) {\n-      *result = Slice();\n-      return Status::OK();\n-    }\n-\n-    assert(offset / kBlockSize <= SIZE_MAX);\n-    size_t block = static_cast<size_t>(offset / kBlockSize);\n-    size_t block_offset = offset % kBlockSize;\n-\n-    if (n <= kBlockSize - block_offset) {\n-      // The requested bytes are all in the first block.\n-      *result = Slice(blocks_[block] + block_offset, n);\n-      return Status::OK();\n-    }\n-\n-    size_t bytes_to_copy = n;\n-    char* dst = scratch;\n-\n-    while (bytes_to_copy > 0) {\n-      size_t avail = kBlockSize - block_offset;\n-      if (avail > bytes_to_copy) {\n-        avail = bytes_to_copy;\n-      }\n-      memcpy(dst, blocks_[block] + block_offset, avail);\n-\n-      bytes_to_copy -= avail;\n-      dst += avail;\n-      block++;\n-      block_offset = 0;\n-    }\n-\n-    *result = Slice(scratch, n);\n-    return Status::OK();\n-  }\n-\n-  Status Append(const Slice& data) {\n-    const char* src = data.data();\n-    size_t src_len = data.size();\n-\n-    while (src_len > 0) {\n-      size_t avail;\n-      size_t offset = size_ % kBlockSize;\n-\n-      if (offset != 0) {\n-        // There is some room in the last block.\n-        avail = kBlockSize - offset;\n-      } else {\n-        // No room in the last block; push new one.\n-        blocks_.push_back(new char[kBlockSize]);\n-        avail = kBlockSize;\n-      }\n-\n-      if (avail > src_len) {\n-        avail = src_len;\n-      }\n-      memcpy(blocks_.back() + offset, src, avail);\n-      src_len -= avail;\n-      src += avail;\n-      size_ += avail;\n-    }\n-\n-    return Status::OK();\n-  }\n-\n- private:\n-  // Private since only Unref() should be used to delete it.\n-  ~FileState() {\n-    for (std::vector<char*>::iterator i = blocks_.begin(); i != blocks_.end();\n-         ++i) {\n-      delete [] *i;\n-    }\n-  }\n-\n-  // No copying allowed.\n-  FileState(const FileState&);\n-  void operator=(const FileState&);\n-\n-  port::Mutex refs_mutex_;\n-  int refs_;  // Protected by refs_mutex_;\n-\n-  // The following fields are not protected by any mutex. They are only mutable\n-  // while the file is being written, and concurrent access is not allowed\n-  // to writable files.\n-  std::vector<char*> blocks_;\n-  uint64_t size_;\n-\n-  enum { kBlockSize = 8 * 1024 };\n-};\n-\n-class SequentialFileImpl : public SequentialFile {\n- public:\n-  explicit SequentialFileImpl(FileState* file) : file_(file), pos_(0) {\n-    file_->Ref();\n-  }\n-\n-  ~SequentialFileImpl() {\n-    file_->Unref();\n-  }\n-\n-  virtual Status Read(size_t n, Slice* result, char* scratch) {\n-    Status s = file_->Read(pos_, n, result, scratch);\n-    if (s.ok()) {\n-      pos_ += result->size();\n-    }\n-    return s;\n-  }\n-\n-  virtual Status Skip(uint64_t n) {\n-    if (pos_ > file_->Size()) {\n-      return Status::IOError(\"pos_ > file_->Size()\");\n-    }\n-    const uint64_t available = file_->Size() - pos_;\n-    if (n > available) {\n-      n = available;\n-    }\n-    pos_ += n;\n-    return Status::OK();\n-  }\n-\n- private:\n-  FileState* file_;\n-  uint64_t pos_;\n-};\n-\n-class RandomAccessFileImpl : public RandomAccessFile {\n- public:\n-  explicit RandomAccessFileImpl(FileState* file) : file_(file) {\n-    file_->Ref();\n-  }\n-\n-  ~RandomAccessFileImpl() {\n-    file_->Unref();\n-  }\n-\n-  virtual Status Read(uint64_t offset, size_t n, Slice* result,\n-                      char* scratch) const {\n-    return file_->Read(offset, n, result, scratch);\n-  }\n-\n- private:\n-  FileState* file_;\n-};\n-\n-class WritableFileImpl : public WritableFile {\n- public:\n-  WritableFileImpl(FileState* file) : file_(file) {\n-    file_->Ref();\n-  }\n-\n-  ~WritableFileImpl() {\n-    file_->Unref();\n-  }\n-\n-  virtual Status Append(const Slice& data) {\n-    return file_->Append(data);\n-  }\n-\n-  virtual Status Close() { return Status::OK(); }\n-  virtual Status Flush() { return Status::OK(); }\n-  virtual Status Sync() { return Status::OK(); }\n-\n- private:\n-  FileState* file_;\n-};\n-\n-class NoOpLogger : public Logger {\n- public:\n-  virtual void Logv(const char* format, va_list ap) { }\n-};\n-\n-class InMemoryEnv : public EnvWrapper {\n- public:\n-  explicit InMemoryEnv(Env* base_env) : EnvWrapper(base_env) { }\n-\n-  virtual ~InMemoryEnv() {\n-    for (FileSystem::iterator i = file_map_.begin(); i != file_map_.end(); ++i){\n-      i->second->Unref();\n-    }\n-  }\n-\n-  // Partial implementation of the Env interface.\n-  virtual Status NewSequentialFile(const std::string& fname,\n-                                   SequentialFile** result) {\n-    MutexLock lock(&mutex_);\n-    if (file_map_.find(fname) == file_map_.end()) {\n-      *result = NULL;\n-      return Status::IOError(fname, \"File not found\");\n-    }\n-\n-    *result = new SequentialFileImpl(file_map_[fname]);\n-    return Status::OK();\n-  }\n-\n-  virtual Status NewRandomAccessFile(const std::string& fname,\n-                                     RandomAccessFile** result) {\n-    MutexLock lock(&mutex_);\n-    if (file_map_.find(fname) == file_map_.end()) {\n-      *result = NULL;\n-      return Status::IOError(fname, \"File not found\");\n-    }\n-\n-    *result = new RandomAccessFileImpl(file_map_[fname]);\n-    return Status::OK();\n-  }\n-\n-  virtual Status NewWritableFile(const std::string& fname,\n-                                 WritableFile** result) {\n-    MutexLock lock(&mutex_);\n-    if (file_map_.find(fname) != file_map_.end()) {\n-      DeleteFileInternal(fname);\n-    }\n-\n-    FileState* file = new FileState();\n-    file->Ref();\n-    file_map_[fname] = file;\n-\n-    *result = new WritableFileImpl(file);\n-    return Status::OK();\n-  }\n-\n-  virtual Status NewAppendableFile(const std::string& fname,\n-                                   WritableFile** result) {\n-    MutexLock lock(&mutex_);\n-    FileState** sptr = &file_map_[fname];\n-    FileState* file = *sptr;\n-    if (file == NULL) {\n-      file = new FileState();\n-      file->Ref();\n-    }\n-    *result = new WritableFileImpl(file);\n-    return Status::OK();\n-  }\n-\n-  virtual bool FileExists(const std::string& fname) {\n-    MutexLock lock(&mutex_);\n-    return file_map_.find(fname) != file_map_.end();\n-  }\n-\n-  virtual Status GetChildren(const std::string& dir,\n-                             std::vector<std::string>* result) {\n-    MutexLock lock(&mutex_);\n-    result->clear();\n-\n-    for (FileSystem::iterator i = file_map_.begin(); i != file_map_.end(); ++i){\n-      const std::string& filename = i->first;\n-\n-      if (filename.size() >= dir.size() + 1 && filename[dir.size()] == '/' &&\n-          Slice(filename).starts_with(Slice(dir))) {\n-        result->push_back(filename.substr(dir.size() + 1));\n-      }\n-    }\n-\n-    return Status::OK();\n-  }\n-\n-  void DeleteFileInternal(const std::string& fname) {\n-    if (file_map_.find(fname) == file_map_.end()) {\n-      return;\n-    }\n-\n-    file_map_[fname]->Unref();\n-    file_map_.erase(fname);\n-  }\n-\n-  virtual Status DeleteFile(const std::string& fname) {\n-    MutexLock lock(&mutex_);\n-    if (file_map_.find(fname) == file_map_.end()) {\n-      return Status::IOError(fname, \"File not found\");\n-    }\n-\n-    DeleteFileInternal(fname);\n-    return Status::OK();\n-  }\n-\n-  virtual Status CreateDir(const std::string& dirname) {\n-    return Status::OK();\n-  }\n-\n-  virtual Status DeleteDir(const std::string& dirname) {\n-    return Status::OK();\n-  }\n-\n-  virtual Status GetFileSize(const std::string& fname, uint64_t* file_size) {\n-    MutexLock lock(&mutex_);\n-    if (file_map_.find(fname) == file_map_.end()) {\n-      return Status::IOError(fname, \"File not found\");\n-    }\n-\n-    *file_size = file_map_[fname]->Size();\n-    return Status::OK();\n-  }\n-\n-  virtual Status RenameFile(const std::string& src,\n-                            const std::string& target) {\n-    MutexLock lock(&mutex_);\n-    if (file_map_.find(src) == file_map_.end()) {\n-      return Status::IOError(src, \"File not found\");\n-    }\n-\n-    DeleteFileInternal(target);\n-    file_map_[target] = file_map_[src];\n-    file_map_.erase(src);\n-    return Status::OK();\n-  }\n-\n-  virtual Status LockFile(const std::string& fname, FileLock** lock) {\n-    *lock = new FileLock;\n-    return Status::OK();\n-  }\n-\n-  virtual Status UnlockFile(FileLock* lock) {\n-    delete lock;\n-    return Status::OK();\n-  }\n-\n-  virtual Status GetTestDirectory(std::string* path) {\n-    *path = \"/test\";\n-    return Status::OK();\n-  }\n-\n-  virtual Status NewLogger(const std::string& fname, Logger** result) {\n-    *result = new NoOpLogger;\n-    return Status::OK();\n-  }\n-\n- private:\n-  // Map from filenames to FileState objects, representing a simple file system.\n-  typedef std::map<std::string, FileState*> FileSystem;\n-  port::Mutex mutex_;\n-  FileSystem file_map_;  // Protected by mutex_.\n-};\n-\n-}  // namespace\n-\n-Env* NewMemEnv(Env* base_env) {\n-  return new InMemoryEnv(base_env);\n-}\n-\n-}  // namespace leveldb"
      },
      {
        "sha": "03b88de761dc732e09dec54baddd34e94ee17613",
        "filename": "src/leveldb/helpers/memenv/memenv.h",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/helpers/memenv/memenv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/helpers/memenv/memenv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/helpers/memenv/memenv.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,20 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_HELPERS_MEMENV_MEMENV_H_\n-#define STORAGE_LEVELDB_HELPERS_MEMENV_MEMENV_H_\n-\n-namespace leveldb {\n-\n-class Env;\n-\n-// Returns a new environment that stores its data in memory and delegates\n-// all non-file-storage tasks to base_env. The caller must delete the result\n-// when it is no longer needed.\n-// *base_env must remain live while the result is in use.\n-Env* NewMemEnv(Env* base_env);\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_HELPERS_MEMENV_MEMENV_H_"
      },
      {
        "sha": "5cff77613f11df5eb6adcd8b2fd99310264edbd2",
        "filename": "src/leveldb/helpers/memenv/memenv_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 241,
        "changes": 241,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/helpers/memenv/memenv_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/helpers/memenv/memenv_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/helpers/memenv/memenv_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,241 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#include \"helpers/memenv/memenv.h\"\n-\n-#include \"db/db_impl.h\"\n-#include \"leveldb/db.h\"\n-#include \"leveldb/env.h\"\n-#include \"util/testharness.h\"\n-#include <string>\n-#include <vector>\n-\n-namespace leveldb {\n-\n-class MemEnvTest {\n- public:\n-  Env* env_;\n-\n-  MemEnvTest()\n-      : env_(NewMemEnv(Env::Default())) {\n-  }\n-  ~MemEnvTest() {\n-    delete env_;\n-  }\n-};\n-\n-TEST(MemEnvTest, Basics) {\n-  uint64_t file_size;\n-  WritableFile* writable_file;\n-  std::vector<std::string> children;\n-\n-  ASSERT_OK(env_->CreateDir(\"/dir\"));\n-\n-  // Check that the directory is empty.\n-  ASSERT_TRUE(!env_->FileExists(\"/dir/non_existent\"));\n-  ASSERT_TRUE(!env_->GetFileSize(\"/dir/non_existent\", &file_size).ok());\n-  ASSERT_OK(env_->GetChildren(\"/dir\", &children));\n-  ASSERT_EQ(0, children.size());\n-\n-  // Create a file.\n-  ASSERT_OK(env_->NewWritableFile(\"/dir/f\", &writable_file));\n-  ASSERT_OK(env_->GetFileSize(\"/dir/f\", &file_size));\n-  ASSERT_EQ(0, file_size);\n-  delete writable_file;\n-\n-  // Check that the file exists.\n-  ASSERT_TRUE(env_->FileExists(\"/dir/f\"));\n-  ASSERT_OK(env_->GetFileSize(\"/dir/f\", &file_size));\n-  ASSERT_EQ(0, file_size);\n-  ASSERT_OK(env_->GetChildren(\"/dir\", &children));\n-  ASSERT_EQ(1, children.size());\n-  ASSERT_EQ(\"f\", children[0]);\n-\n-  // Write to the file.\n-  ASSERT_OK(env_->NewWritableFile(\"/dir/f\", &writable_file));\n-  ASSERT_OK(writable_file->Append(\"abc\"));\n-  delete writable_file;\n-\n-  // Check that append works.\n-  ASSERT_OK(env_->NewAppendableFile(\"/dir/f\", &writable_file));\n-  ASSERT_OK(env_->GetFileSize(\"/dir/f\", &file_size));\n-  ASSERT_EQ(3, file_size);\n-  ASSERT_OK(writable_file->Append(\"hello\"));\n-  delete writable_file;\n-\n-  // Check for expected size.\n-  ASSERT_OK(env_->GetFileSize(\"/dir/f\", &file_size));\n-  ASSERT_EQ(8, file_size);\n-\n-  // Check that renaming works.\n-  ASSERT_TRUE(!env_->RenameFile(\"/dir/non_existent\", \"/dir/g\").ok());\n-  ASSERT_OK(env_->RenameFile(\"/dir/f\", \"/dir/g\"));\n-  ASSERT_TRUE(!env_->FileExists(\"/dir/f\"));\n-  ASSERT_TRUE(env_->FileExists(\"/dir/g\"));\n-  ASSERT_OK(env_->GetFileSize(\"/dir/g\", &file_size));\n-  ASSERT_EQ(8, file_size);\n-\n-  // Check that opening non-existent file fails.\n-  SequentialFile* seq_file;\n-  RandomAccessFile* rand_file;\n-  ASSERT_TRUE(!env_->NewSequentialFile(\"/dir/non_existent\", &seq_file).ok());\n-  ASSERT_TRUE(!seq_file);\n-  ASSERT_TRUE(!env_->NewRandomAccessFile(\"/dir/non_existent\", &rand_file).ok());\n-  ASSERT_TRUE(!rand_file);\n-\n-  // Check that deleting works.\n-  ASSERT_TRUE(!env_->DeleteFile(\"/dir/non_existent\").ok());\n-  ASSERT_OK(env_->DeleteFile(\"/dir/g\"));\n-  ASSERT_TRUE(!env_->FileExists(\"/dir/g\"));\n-  ASSERT_OK(env_->GetChildren(\"/dir\", &children));\n-  ASSERT_EQ(0, children.size());\n-  ASSERT_OK(env_->DeleteDir(\"/dir\"));\n-}\n-\n-TEST(MemEnvTest, ReadWrite) {\n-  WritableFile* writable_file;\n-  SequentialFile* seq_file;\n-  RandomAccessFile* rand_file;\n-  Slice result;\n-  char scratch[100];\n-\n-  ASSERT_OK(env_->CreateDir(\"/dir\"));\n-\n-  ASSERT_OK(env_->NewWritableFile(\"/dir/f\", &writable_file));\n-  ASSERT_OK(writable_file->Append(\"hello \"));\n-  ASSERT_OK(writable_file->Append(\"world\"));\n-  delete writable_file;\n-\n-  // Read sequentially.\n-  ASSERT_OK(env_->NewSequentialFile(\"/dir/f\", &seq_file));\n-  ASSERT_OK(seq_file->Read(5, &result, scratch)); // Read \"hello\".\n-  ASSERT_EQ(0, result.compare(\"hello\"));\n-  ASSERT_OK(seq_file->Skip(1));\n-  ASSERT_OK(seq_file->Read(1000, &result, scratch)); // Read \"world\".\n-  ASSERT_EQ(0, result.compare(\"world\"));\n-  ASSERT_OK(seq_file->Read(1000, &result, scratch)); // Try reading past EOF.\n-  ASSERT_EQ(0, result.size());\n-  ASSERT_OK(seq_file->Skip(100)); // Try to skip past end of file.\n-  ASSERT_OK(seq_file->Read(1000, &result, scratch));\n-  ASSERT_EQ(0, result.size());\n-  delete seq_file;\n-\n-  // Random reads.\n-  ASSERT_OK(env_->NewRandomAccessFile(\"/dir/f\", &rand_file));\n-  ASSERT_OK(rand_file->Read(6, 5, &result, scratch)); // Read \"world\".\n-  ASSERT_EQ(0, result.compare(\"world\"));\n-  ASSERT_OK(rand_file->Read(0, 5, &result, scratch)); // Read \"hello\".\n-  ASSERT_EQ(0, result.compare(\"hello\"));\n-  ASSERT_OK(rand_file->Read(10, 100, &result, scratch)); // Read \"d\".\n-  ASSERT_EQ(0, result.compare(\"d\"));\n-\n-  // Too high offset.\n-  ASSERT_TRUE(!rand_file->Read(1000, 5, &result, scratch).ok());\n-  delete rand_file;\n-}\n-\n-TEST(MemEnvTest, Locks) {\n-  FileLock* lock;\n-\n-  // These are no-ops, but we test they return success.\n-  ASSERT_OK(env_->LockFile(\"some file\", &lock));\n-  ASSERT_OK(env_->UnlockFile(lock));\n-}\n-\n-TEST(MemEnvTest, Misc) {\n-  std::string test_dir;\n-  ASSERT_OK(env_->GetTestDirectory(&test_dir));\n-  ASSERT_TRUE(!test_dir.empty());\n-\n-  WritableFile* writable_file;\n-  ASSERT_OK(env_->NewWritableFile(\"/a/b\", &writable_file));\n-\n-  // These are no-ops, but we test they return success.\n-  ASSERT_OK(writable_file->Sync());\n-  ASSERT_OK(writable_file->Flush());\n-  ASSERT_OK(writable_file->Close());\n-  delete writable_file;\n-}\n-\n-TEST(MemEnvTest, LargeWrite) {\n-  const size_t kWriteSize = 300 * 1024;\n-  char* scratch = new char[kWriteSize * 2];\n-\n-  std::string write_data;\n-  for (size_t i = 0; i < kWriteSize; ++i) {\n-    write_data.append(1, static_cast<char>(i));\n-  }\n-\n-  WritableFile* writable_file;\n-  ASSERT_OK(env_->NewWritableFile(\"/dir/f\", &writable_file));\n-  ASSERT_OK(writable_file->Append(\"foo\"));\n-  ASSERT_OK(writable_file->Append(write_data));\n-  delete writable_file;\n-\n-  SequentialFile* seq_file;\n-  Slice result;\n-  ASSERT_OK(env_->NewSequentialFile(\"/dir/f\", &seq_file));\n-  ASSERT_OK(seq_file->Read(3, &result, scratch)); // Read \"foo\".\n-  ASSERT_EQ(0, result.compare(\"foo\"));\n-\n-  size_t read = 0;\n-  std::string read_data;\n-  while (read < kWriteSize) {\n-    ASSERT_OK(seq_file->Read(kWriteSize - read, &result, scratch));\n-    read_data.append(result.data(), result.size());\n-    read += result.size();\n-  }\n-  ASSERT_TRUE(write_data == read_data);\n-  delete seq_file;\n-  delete [] scratch;\n-}\n-\n-TEST(MemEnvTest, DBTest) {\n-  Options options;\n-  options.create_if_missing = true;\n-  options.env = env_;\n-  DB* db;\n-\n-  const Slice keys[] = {Slice(\"aaa\"), Slice(\"bbb\"), Slice(\"ccc\")};\n-  const Slice vals[] = {Slice(\"foo\"), Slice(\"bar\"), Slice(\"baz\")};\n-\n-  ASSERT_OK(DB::Open(options, \"/dir/db\", &db));\n-  for (size_t i = 0; i < 3; ++i) {\n-    ASSERT_OK(db->Put(WriteOptions(), keys[i], vals[i]));\n-  }\n-\n-  for (size_t i = 0; i < 3; ++i) {\n-    std::string res;\n-    ASSERT_OK(db->Get(ReadOptions(), keys[i], &res));\n-    ASSERT_TRUE(res == vals[i]);\n-  }\n-\n-  Iterator* iterator = db->NewIterator(ReadOptions());\n-  iterator->SeekToFirst();\n-  for (size_t i = 0; i < 3; ++i) {\n-    ASSERT_TRUE(iterator->Valid());\n-    ASSERT_TRUE(keys[i] == iterator->key());\n-    ASSERT_TRUE(vals[i] == iterator->value());\n-    iterator->Next();\n-  }\n-  ASSERT_TRUE(!iterator->Valid());\n-  delete iterator;\n-\n-  DBImpl* dbi = reinterpret_cast<DBImpl*>(db);\n-  ASSERT_OK(dbi->TEST_CompactMemTable());\n-\n-  for (size_t i = 0; i < 3; ++i) {\n-    std::string res;\n-    ASSERT_OK(db->Get(ReadOptions(), keys[i], &res));\n-    ASSERT_TRUE(res == vals[i]);\n-  }\n-\n-  delete db;\n-}\n-\n-}  // namespace leveldb\n-\n-int main(int argc, char** argv) {\n-  return leveldb::test::RunAllTests();\n-}"
      },
      {
        "sha": "1048fe3b8683cb81963a103c2133d276e2ec04fd",
        "filename": "src/leveldb/include/leveldb/c.h",
        "status": "removed",
        "additions": 0,
        "deletions": 290,
        "changes": 290,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/c.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/c.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/c.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,290 +0,0 @@\n-/* Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-  Use of this source code is governed by a BSD-style license that can be\n-  found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-  C bindings for leveldb.  May be useful as a stable ABI that can be\n-  used by programs that keep leveldb in a shared library, or for\n-  a JNI api.\n-\n-  Does not support:\n-  . getters for the option types\n-  . custom comparators that implement key shortening\n-  . custom iter, db, env, cache implementations using just the C bindings\n-\n-  Some conventions:\n-\n-  (1) We expose just opaque struct pointers and functions to clients.\n-  This allows us to change internal representations without having to\n-  recompile clients.\n-\n-  (2) For simplicity, there is no equivalent to the Slice type.  Instead,\n-  the caller has to pass the pointer and length as separate\n-  arguments.\n-\n-  (3) Errors are represented by a null-terminated c string.  NULL\n-  means no error.  All operations that can raise an error are passed\n-  a \"char** errptr\" as the last argument.  One of the following must\n-  be true on entry:\n-     *errptr == NULL\n-     *errptr points to a malloc()ed null-terminated error message\n-       (On Windows, *errptr must have been malloc()-ed by this library.)\n-  On success, a leveldb routine leaves *errptr unchanged.\n-  On failure, leveldb frees the old value of *errptr and\n-  set *errptr to a malloc()ed error message.\n-\n-  (4) Bools have the type unsigned char (0 == false; rest == true)\n-\n-  (5) All of the pointer arguments must be non-NULL.\n-*/\n-\n-#ifndef STORAGE_LEVELDB_INCLUDE_C_H_\n-#define STORAGE_LEVELDB_INCLUDE_C_H_\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n-#include <stdarg.h>\n-#include <stddef.h>\n-#include <stdint.h>\n-\n-/* Exported types */\n-\n-typedef struct leveldb_t               leveldb_t;\n-typedef struct leveldb_cache_t         leveldb_cache_t;\n-typedef struct leveldb_comparator_t    leveldb_comparator_t;\n-typedef struct leveldb_env_t           leveldb_env_t;\n-typedef struct leveldb_filelock_t      leveldb_filelock_t;\n-typedef struct leveldb_filterpolicy_t  leveldb_filterpolicy_t;\n-typedef struct leveldb_iterator_t      leveldb_iterator_t;\n-typedef struct leveldb_logger_t        leveldb_logger_t;\n-typedef struct leveldb_options_t       leveldb_options_t;\n-typedef struct leveldb_randomfile_t    leveldb_randomfile_t;\n-typedef struct leveldb_readoptions_t   leveldb_readoptions_t;\n-typedef struct leveldb_seqfile_t       leveldb_seqfile_t;\n-typedef struct leveldb_snapshot_t      leveldb_snapshot_t;\n-typedef struct leveldb_writablefile_t  leveldb_writablefile_t;\n-typedef struct leveldb_writebatch_t    leveldb_writebatch_t;\n-typedef struct leveldb_writeoptions_t  leveldb_writeoptions_t;\n-\n-/* DB operations */\n-\n-extern leveldb_t* leveldb_open(\n-    const leveldb_options_t* options,\n-    const char* name,\n-    char** errptr);\n-\n-extern void leveldb_close(leveldb_t* db);\n-\n-extern void leveldb_put(\n-    leveldb_t* db,\n-    const leveldb_writeoptions_t* options,\n-    const char* key, size_t keylen,\n-    const char* val, size_t vallen,\n-    char** errptr);\n-\n-extern void leveldb_delete(\n-    leveldb_t* db,\n-    const leveldb_writeoptions_t* options,\n-    const char* key, size_t keylen,\n-    char** errptr);\n-\n-extern void leveldb_write(\n-    leveldb_t* db,\n-    const leveldb_writeoptions_t* options,\n-    leveldb_writebatch_t* batch,\n-    char** errptr);\n-\n-/* Returns NULL if not found.  A malloc()ed array otherwise.\n-   Stores the length of the array in *vallen. */\n-extern char* leveldb_get(\n-    leveldb_t* db,\n-    const leveldb_readoptions_t* options,\n-    const char* key, size_t keylen,\n-    size_t* vallen,\n-    char** errptr);\n-\n-extern leveldb_iterator_t* leveldb_create_iterator(\n-    leveldb_t* db,\n-    const leveldb_readoptions_t* options);\n-\n-extern const leveldb_snapshot_t* leveldb_create_snapshot(\n-    leveldb_t* db);\n-\n-extern void leveldb_release_snapshot(\n-    leveldb_t* db,\n-    const leveldb_snapshot_t* snapshot);\n-\n-/* Returns NULL if property name is unknown.\n-   Else returns a pointer to a malloc()-ed null-terminated value. */\n-extern char* leveldb_property_value(\n-    leveldb_t* db,\n-    const char* propname);\n-\n-extern void leveldb_approximate_sizes(\n-    leveldb_t* db,\n-    int num_ranges,\n-    const char* const* range_start_key, const size_t* range_start_key_len,\n-    const char* const* range_limit_key, const size_t* range_limit_key_len,\n-    uint64_t* sizes);\n-\n-extern void leveldb_compact_range(\n-    leveldb_t* db,\n-    const char* start_key, size_t start_key_len,\n-    const char* limit_key, size_t limit_key_len);\n-\n-/* Management operations */\n-\n-extern void leveldb_destroy_db(\n-    const leveldb_options_t* options,\n-    const char* name,\n-    char** errptr);\n-\n-extern void leveldb_repair_db(\n-    const leveldb_options_t* options,\n-    const char* name,\n-    char** errptr);\n-\n-/* Iterator */\n-\n-extern void leveldb_iter_destroy(leveldb_iterator_t*);\n-extern unsigned char leveldb_iter_valid(const leveldb_iterator_t*);\n-extern void leveldb_iter_seek_to_first(leveldb_iterator_t*);\n-extern void leveldb_iter_seek_to_last(leveldb_iterator_t*);\n-extern void leveldb_iter_seek(leveldb_iterator_t*, const char* k, size_t klen);\n-extern void leveldb_iter_next(leveldb_iterator_t*);\n-extern void leveldb_iter_prev(leveldb_iterator_t*);\n-extern const char* leveldb_iter_key(const leveldb_iterator_t*, size_t* klen);\n-extern const char* leveldb_iter_value(const leveldb_iterator_t*, size_t* vlen);\n-extern void leveldb_iter_get_error(const leveldb_iterator_t*, char** errptr);\n-\n-/* Write batch */\n-\n-extern leveldb_writebatch_t* leveldb_writebatch_create();\n-extern void leveldb_writebatch_destroy(leveldb_writebatch_t*);\n-extern void leveldb_writebatch_clear(leveldb_writebatch_t*);\n-extern void leveldb_writebatch_put(\n-    leveldb_writebatch_t*,\n-    const char* key, size_t klen,\n-    const char* val, size_t vlen);\n-extern void leveldb_writebatch_delete(\n-    leveldb_writebatch_t*,\n-    const char* key, size_t klen);\n-extern void leveldb_writebatch_iterate(\n-    leveldb_writebatch_t*,\n-    void* state,\n-    void (*put)(void*, const char* k, size_t klen, const char* v, size_t vlen),\n-    void (*deleted)(void*, const char* k, size_t klen));\n-\n-/* Options */\n-\n-extern leveldb_options_t* leveldb_options_create();\n-extern void leveldb_options_destroy(leveldb_options_t*);\n-extern void leveldb_options_set_comparator(\n-    leveldb_options_t*,\n-    leveldb_comparator_t*);\n-extern void leveldb_options_set_filter_policy(\n-    leveldb_options_t*,\n-    leveldb_filterpolicy_t*);\n-extern void leveldb_options_set_create_if_missing(\n-    leveldb_options_t*, unsigned char);\n-extern void leveldb_options_set_error_if_exists(\n-    leveldb_options_t*, unsigned char);\n-extern void leveldb_options_set_paranoid_checks(\n-    leveldb_options_t*, unsigned char);\n-extern void leveldb_options_set_env(leveldb_options_t*, leveldb_env_t*);\n-extern void leveldb_options_set_info_log(leveldb_options_t*, leveldb_logger_t*);\n-extern void leveldb_options_set_write_buffer_size(leveldb_options_t*, size_t);\n-extern void leveldb_options_set_max_open_files(leveldb_options_t*, int);\n-extern void leveldb_options_set_cache(leveldb_options_t*, leveldb_cache_t*);\n-extern void leveldb_options_set_block_size(leveldb_options_t*, size_t);\n-extern void leveldb_options_set_block_restart_interval(leveldb_options_t*, int);\n-\n-enum {\n-  leveldb_no_compression = 0,\n-  leveldb_snappy_compression = 1\n-};\n-extern void leveldb_options_set_compression(leveldb_options_t*, int);\n-\n-/* Comparator */\n-\n-extern leveldb_comparator_t* leveldb_comparator_create(\n-    void* state,\n-    void (*destructor)(void*),\n-    int (*compare)(\n-        void*,\n-        const char* a, size_t alen,\n-        const char* b, size_t blen),\n-    const char* (*name)(void*));\n-extern void leveldb_comparator_destroy(leveldb_comparator_t*);\n-\n-/* Filter policy */\n-\n-extern leveldb_filterpolicy_t* leveldb_filterpolicy_create(\n-    void* state,\n-    void (*destructor)(void*),\n-    char* (*create_filter)(\n-        void*,\n-        const char* const* key_array, const size_t* key_length_array,\n-        int num_keys,\n-        size_t* filter_length),\n-    unsigned char (*key_may_match)(\n-        void*,\n-        const char* key, size_t length,\n-        const char* filter, size_t filter_length),\n-    const char* (*name)(void*));\n-extern void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t*);\n-\n-extern leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(\n-    int bits_per_key);\n-\n-/* Read options */\n-\n-extern leveldb_readoptions_t* leveldb_readoptions_create();\n-extern void leveldb_readoptions_destroy(leveldb_readoptions_t*);\n-extern void leveldb_readoptions_set_verify_checksums(\n-    leveldb_readoptions_t*,\n-    unsigned char);\n-extern void leveldb_readoptions_set_fill_cache(\n-    leveldb_readoptions_t*, unsigned char);\n-extern void leveldb_readoptions_set_snapshot(\n-    leveldb_readoptions_t*,\n-    const leveldb_snapshot_t*);\n-\n-/* Write options */\n-\n-extern leveldb_writeoptions_t* leveldb_writeoptions_create();\n-extern void leveldb_writeoptions_destroy(leveldb_writeoptions_t*);\n-extern void leveldb_writeoptions_set_sync(\n-    leveldb_writeoptions_t*, unsigned char);\n-\n-/* Cache */\n-\n-extern leveldb_cache_t* leveldb_cache_create_lru(size_t capacity);\n-extern void leveldb_cache_destroy(leveldb_cache_t* cache);\n-\n-/* Env */\n-\n-extern leveldb_env_t* leveldb_create_default_env();\n-extern void leveldb_env_destroy(leveldb_env_t*);\n-\n-/* Utility */\n-\n-/* Calls free(ptr).\n-   REQUIRES: ptr was malloc()-ed and returned by one of the routines\n-   in this file.  Note that in certain cases (typically on Windows), you\n-   may need to call this routine instead of free(ptr) to dispose of\n-   malloc()-ed memory returned by this library. */\n-extern void leveldb_free(void* ptr);\n-\n-/* Return the major version number for this release. */\n-extern int leveldb_major_version();\n-\n-/* Return the minor version number for this release. */\n-extern int leveldb_minor_version();\n-\n-#ifdef __cplusplus\n-}  /* end extern \"C\" */\n-#endif\n-\n-#endif  /* STORAGE_LEVELDB_INCLUDE_C_H_ */"
      },
      {
        "sha": "6819d5bc49f674d47cddf0b23ade8a19d316051c",
        "filename": "src/leveldb/include/leveldb/cache.h",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/cache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/cache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/cache.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,110 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-//\n-// A Cache is an interface that maps keys to values.  It has internal\n-// synchronization and may be safely accessed concurrently from\n-// multiple threads.  It may automatically evict entries to make room\n-// for new entries.  Values have a specified charge against the cache\n-// capacity.  For example, a cache where the values are variable\n-// length strings, may use the length of the string as the charge for\n-// the string.\n-//\n-// A builtin cache implementation with a least-recently-used eviction\n-// policy is provided.  Clients may use their own implementations if\n-// they want something more sophisticated (like scan-resistance, a\n-// custom eviction policy, variable cache sizing, etc.)\n-\n-#ifndef STORAGE_LEVELDB_INCLUDE_CACHE_H_\n-#define STORAGE_LEVELDB_INCLUDE_CACHE_H_\n-\n-#include <stdint.h>\n-#include \"leveldb/slice.h\"\n-\n-namespace leveldb {\n-\n-class Cache;\n-\n-// Create a new cache with a fixed size capacity.  This implementation\n-// of Cache uses a least-recently-used eviction policy.\n-extern Cache* NewLRUCache(size_t capacity);\n-\n-class Cache {\n- public:\n-  Cache() { }\n-\n-  // Destroys all existing entries by calling the \"deleter\"\n-  // function that was passed to the constructor.\n-  virtual ~Cache();\n-\n-  // Opaque handle to an entry stored in the cache.\n-  struct Handle { };\n-\n-  // Insert a mapping from key->value into the cache and assign it\n-  // the specified charge against the total cache capacity.\n-  //\n-  // Returns a handle that corresponds to the mapping.  The caller\n-  // must call this->Release(handle) when the returned mapping is no\n-  // longer needed.\n-  //\n-  // When the inserted entry is no longer needed, the key and\n-  // value will be passed to \"deleter\".\n-  virtual Handle* Insert(const Slice& key, void* value, size_t charge,\n-                         void (*deleter)(const Slice& key, void* value)) = 0;\n-\n-  // If the cache has no mapping for \"key\", returns NULL.\n-  //\n-  // Else return a handle that corresponds to the mapping.  The caller\n-  // must call this->Release(handle) when the returned mapping is no\n-  // longer needed.\n-  virtual Handle* Lookup(const Slice& key) = 0;\n-\n-  // Release a mapping returned by a previous Lookup().\n-  // REQUIRES: handle must not have been released yet.\n-  // REQUIRES: handle must have been returned by a method on *this.\n-  virtual void Release(Handle* handle) = 0;\n-\n-  // Return the value encapsulated in a handle returned by a\n-  // successful Lookup().\n-  // REQUIRES: handle must not have been released yet.\n-  // REQUIRES: handle must have been returned by a method on *this.\n-  virtual void* Value(Handle* handle) = 0;\n-\n-  // If the cache contains entry for key, erase it.  Note that the\n-  // underlying entry will be kept around until all existing handles\n-  // to it have been released.\n-  virtual void Erase(const Slice& key) = 0;\n-\n-  // Return a new numeric id.  May be used by multiple clients who are\n-  // sharing the same cache to partition the key space.  Typically the\n-  // client will allocate a new id at startup and prepend the id to\n-  // its cache keys.\n-  virtual uint64_t NewId() = 0;\n-\n-  // Remove all cache entries that are not actively in use.  Memory-constrained\n-  // applications may wish to call this method to reduce memory usage.\n-  // Default implementation of Prune() does nothing.  Subclasses are strongly\n-  // encouraged to override the default implementation.  A future release of\n-  // leveldb may change Prune() to a pure abstract method.\n-  virtual void Prune() {}\n-\n-  // Return an estimate of the combined charges of all elements stored in the\n-  // cache.\n-  virtual size_t TotalCharge() const = 0;\n-\n- private:\n-  void LRU_Remove(Handle* e);\n-  void LRU_Append(Handle* e);\n-  void Unref(Handle* e);\n-\n-  struct Rep;\n-  Rep* rep_;\n-\n-  // No copying allowed\n-  Cache(const Cache&);\n-  void operator=(const Cache&);\n-};\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_INCLUDE_CACHE_H_"
      },
      {
        "sha": "556b984c7694f6520088754f3017bf58c7cafc9d",
        "filename": "src/leveldb/include/leveldb/comparator.h",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/comparator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/comparator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/comparator.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737",
        "patch": "@@ -1,63 +0,0 @@\n-// Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style license that can be\n-// found in the LICENSE file. See the AUTHORS file for names of contributors.\n-\n-#ifndef STORAGE_LEVELDB_INCLUDE_COMPARATOR_H_\n-#define STORAGE_LEVELDB_INCLUDE_COMPARATOR_H_\n-\n-#include <string>\n-\n-namespace leveldb {\n-\n-class Slice;\n-\n-// A Comparator object provides a total order across slices that are\n-// used as keys in an sstable or a database.  A Comparator implementation\n-// must be thread-safe since leveldb may invoke its methods concurrently\n-// from multiple threads.\n-class Comparator {\n- public:\n-  virtual ~Comparator();\n-\n-  // Three-way comparison.  Returns value:\n-  //   < 0 iff \"a\" < \"b\",\n-  //   == 0 iff \"a\" == \"b\",\n-  //   > 0 iff \"a\" > \"b\"\n-  virtual int Compare(const Slice& a, const Slice& b) const = 0;\n-\n-  // The name of the comparator.  Used to check for comparator\n-  // mismatches (i.e., a DB created with one comparator is\n-  // accessed using a different comparator.\n-  //\n-  // The client of this package should switch to a new name whenever\n-  // the comparator implementation changes in a way that will cause\n-  // the relative ordering of any two keys to change.\n-  //\n-  // Names starting with \"leveldb.\" are reserved and should not be used\n-  // by any clients of this package.\n-  virtual const char* Name() const = 0;\n-\n-  // Advanced functions: these are used to reduce the space requirements\n-  // for internal data structures like index blocks.\n-\n-  // If *start < limit, changes *start to a short string in [start,limit).\n-  // Simple comparator implementations may return with *start unchanged,\n-  // i.e., an implementation of this method that does nothing is correct.\n-  virtual void FindShortestSeparator(\n-      std::string* start,\n-      const Slice& limit) const = 0;\n-\n-  // Changes *key to a short string >= *key.\n-  // Simple comparator implementations may return with *key unchanged,\n-  // i.e., an implementation of this method that does nothing is correct.\n-  virtual void FindShortSuccessor(std::string* key) const = 0;\n-};\n-\n-// Return a builtin comparator that uses lexicographic byte-wise\n-// ordering.  The result remains the property of this module and\n-// must not be deleted.\n-extern const Comparator* BytewiseComparator();\n-\n-}  // namespace leveldb\n-\n-#endif  // STORAGE_LEVELDB_INCLUDE_COMPARATOR_H_"
      },
      {
        "sha": "9752cbad512de5ce11c9cdabb65fdb763f4da118",
        "filename": "src/leveldb/include/leveldb/db.h",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/db.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "3f97fda16baa96c6d83f62cb822c8ae9438da979",
        "filename": "src/leveldb/include/leveldb/dumpfile.h",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/dumpfile.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/dumpfile.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/dumpfile.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "99b6c21414b2e6c2d66b0b1a7674923e41b01976",
        "filename": "src/leveldb/include/leveldb/env.h",
        "status": "removed",
        "additions": 0,
        "deletions": 351,
        "changes": 351,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/env.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/env.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/env.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1fba08001fc335a14bde90fa5a1c5d58025ae038",
        "filename": "src/leveldb/include/leveldb/filter_policy.h",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/filter_policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/filter_policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/filter_policy.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "da631ed9d89bbc9cb764a624d8d5a26c34a626b7",
        "filename": "src/leveldb/include/leveldb/iterator.h",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/iterator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/iterator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/iterator.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "83a1ef39a4814d684006f5dd4980d4c01a2458ed",
        "filename": "src/leveldb/include/leveldb/options.h",
        "status": "removed",
        "additions": 0,
        "deletions": 201,
        "changes": 201,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/options.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/options.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/options.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "bc367986f7e8e26fdf22afc02283d4dd13970158",
        "filename": "src/leveldb/include/leveldb/slice.h",
        "status": "removed",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/slice.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/slice.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/slice.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "d9575f97532eb1e64451a9965a5076be99656610",
        "filename": "src/leveldb/include/leveldb/status.h",
        "status": "removed",
        "additions": 0,
        "deletions": 112,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/status.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/status.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/status.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "a9746c3f5ea90250d8bde12d9ec7e9091fd5bd51",
        "filename": "src/leveldb/include/leveldb/table.h",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/table.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/table.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/table.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "5fd1dc71f1cb7541ef62397b6795946ad8c20652",
        "filename": "src/leveldb/include/leveldb/table_builder.h",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/table_builder.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/table_builder.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/table_builder.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ee9aab68e0d83dc4d94835ee21cf926c1ff0c0db",
        "filename": "src/leveldb/include/leveldb/write_batch.h",
        "status": "removed",
        "additions": 0,
        "deletions": 64,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/write_batch.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/include/leveldb/write_batch.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/write_batch.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1b1cf8bb28da5cf6a117ffdc4cb6527ef1585d6b",
        "filename": "src/leveldb/issues/issue178_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/issues/issue178_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/issues/issue178_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/issues/issue178_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1cec79f4433ac1c7ba361860c113e7b250b87e03",
        "filename": "src/leveldb/issues/issue200_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/issues/issue200_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/issues/issue200_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/issues/issue200_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "422563e25ce0230d92373637799da8d28ab60223",
        "filename": "src/leveldb/port/README",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/README?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1c4c7aafc63eb86e11062ebda13d1038287d5dfc",
        "filename": "src/leveldb/port/atomic_pointer.h",
        "status": "removed",
        "additions": 0,
        "deletions": 242,
        "changes": 242,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/atomic_pointer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/atomic_pointer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/atomic_pointer.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "4baafa8e22fd290cfd73ad4daf0b5245e0d109c1",
        "filename": "src/leveldb/port/port.h",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ab9e489b32d8eb4ec8a43da07a20ad917fb35a1b",
        "filename": "src/leveldb/port/port_example.h",
        "status": "removed",
        "additions": 0,
        "deletions": 135,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_example.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_example.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_example.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "30e8007ae3cf11e6b82c1f0cd71627525515f045",
        "filename": "src/leveldb/port/port_posix.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ccca9939d3dc6fbee3afa2d6ad54c39041b4f13f",
        "filename": "src/leveldb/port/port_posix.h",
        "status": "removed",
        "additions": 0,
        "deletions": 158,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_posix.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_posix.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1b0f060a19caabfbb5dffe8ef87f1d90536d44f2",
        "filename": "src/leveldb/port/port_win.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_win.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "45bf2f0ea749d60abb2de3d7b357e7a70eac94de",
        "filename": "src/leveldb/port/port_win.h",
        "status": "removed",
        "additions": 0,
        "deletions": 174,
        "changes": 174,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_win.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/port_win.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_win.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "9470ef587c9496fff4804f64c4a94dbd7c268671",
        "filename": "src/leveldb/port/thread_annotations.h",
        "status": "removed",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/thread_annotations.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/thread_annotations.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/thread_annotations.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "39edd0db13f436dc57dd28ed4013ab4d55a28a31",
        "filename": "src/leveldb/port/win/stdint.h",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/win/stdint.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/port/win/stdint.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/win/stdint.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "43e402c9c07acc5c6e009f1e3c5666169557a118",
        "filename": "src/leveldb/table/block.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 268,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/block.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "2493eb9f9fd9da41aafcac80180c3f831928a32d",
        "filename": "src/leveldb/table/block.h",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/block.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "db660cd07cf50ad1b54310c21b22108ab6994802",
        "filename": "src/leveldb/table/block_builder.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block_builder.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block_builder.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/block_builder.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "4fbcb33972fd77c47e6aaa8621e0000858297dbe",
        "filename": "src/leveldb/table/block_builder.h",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block_builder.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/block_builder.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/block_builder.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "4e78b954f8d90c9c0aa0b4fd3ccff19ce8bdd62b",
        "filename": "src/leveldb/table/filter_block.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 111,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/filter_block.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/filter_block.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/filter_block.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "c67d010bd106756c456dea013c5babdf0a18494f",
        "filename": "src/leveldb/table/filter_block.h",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/filter_block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/filter_block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/filter_block.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "8c4a4741f223e28cbdebfcbb7f220b7e665dbb43",
        "filename": "src/leveldb/table/filter_block_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 128,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/filter_block_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/filter_block_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/filter_block_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "24e4e02445b8a01201e77a9697e2b0dd85255017",
        "filename": "src/leveldb/table/format.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 144,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/format.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/format.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/format.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "6c0b80c0179c7fffbf6ee2af802a10ec02d73998",
        "filename": "src/leveldb/table/format.h",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/format.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/format.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/format.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "3d1c87fdece73d4c1ef16a0a762f70059b9443e6",
        "filename": "src/leveldb/table/iterator.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/iterator.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/iterator.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/iterator.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "f410c3fabe61048eee669454496be9b8c9ac1d17",
        "filename": "src/leveldb/table/iterator_wrapper.h",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/iterator_wrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/iterator_wrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/iterator_wrapper.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "2dde4dc21fde9d86e98f5a3f3b493745d07a22f7",
        "filename": "src/leveldb/table/merger.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 197,
        "changes": 197,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/merger.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/merger.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/merger.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "91ddd80faa35bfcf7edb81ee2f22ed3f29b58f98",
        "filename": "src/leveldb/table/merger.h",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/merger.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/merger.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/merger.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "decf8082cc1837802559886319cc40180fc7a5b8",
        "filename": "src/leveldb/table/table.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 285,
        "changes": 285,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/table.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/table.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/table.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "62002c84f2b18f479fdb1cd3ab142c179e1f3a6f",
        "filename": "src/leveldb/table/table_builder.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 270,
        "changes": 270,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/table_builder.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/table_builder.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/table_builder.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "abf6e246ff8e2751c4d8830b3a84b453f62f38e6",
        "filename": "src/leveldb/table/table_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 876,
        "changes": 876,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/table_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/table_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/table_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "7822ebab9c32ce579c42f9621545d7283e8332b9",
        "filename": "src/leveldb/table/two_level_iterator.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 182,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/two_level_iterator.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/two_level_iterator.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/two_level_iterator.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "629ca34525414582e39df8ad7a48eff72e0e450f",
        "filename": "src/leveldb/table/two_level_iterator.h",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/two_level_iterator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/table/two_level_iterator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/two_level_iterator.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "74078213eedac2069d5704e2aad7a444d0c4c2ea",
        "filename": "src/leveldb/util/arena.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/arena.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/arena.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "48bab3374159543f1d261f60467d4563c9103a8a",
        "filename": "src/leveldb/util/arena.h",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/arena.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/arena.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "58e870ec4459ee5092c4d665ca94628a7e0c6db7",
        "filename": "src/leveldb/util/arena_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/arena_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/arena_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "bf3e4ca6e93146b056fdff7eb5dfd5e397f52df7",
        "filename": "src/leveldb/util/bloom.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 95,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/bloom.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/bloom.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/bloom.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1b87a2be3f540c673ee1749b0b855d396251f5aa",
        "filename": "src/leveldb/util/bloom_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 162,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/bloom_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/bloom_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/bloom_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ce46886171ad446e6b78340c800fbce3df903e3e",
        "filename": "src/leveldb/util/cache.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 405,
        "changes": 405,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/cache.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/cache.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/cache.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "468f7a6425bfa92ff05bb412202846ddc263f8f8",
        "filename": "src/leveldb/util/cache_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 226,
        "changes": 226,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/cache_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/cache_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/cache_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "21e3186d5dcff984a11563fd0d09c714426a29c3",
        "filename": "src/leveldb/util/coding.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 194,
        "changes": 194,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/coding.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/coding.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "3993c4a755dfa5a0f8b966f1a698a371fa08556d",
        "filename": "src/leveldb/util/coding.h",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/coding.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/coding.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "521541ea61bb6037984be50208b4a2a849ead554",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 196,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "4b7b5724ef3be5f6c7ed9f95dcb47a99f2ee2f9b",
        "filename": "src/leveldb/util/comparator.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/comparator.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/comparator.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/comparator.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "6db9e770774d7ebc0b0c3bc4a230b5b8254cd1f4",
        "filename": "src/leveldb/util/crc32c.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 332,
        "changes": 332,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/crc32c.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/crc32c.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/crc32c.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1d7e5c075d86d6cf2551cfcd0fd9ac5adce6fc38",
        "filename": "src/leveldb/util/crc32c.h",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/crc32c.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/crc32c.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/crc32c.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "4b957ee120c8f805c0240d3d90eaf16a759437ba",
        "filename": "src/leveldb/util/crc32c_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/crc32c_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/crc32c_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/crc32c_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "c58a0821ef7a3a8487d4449ce121ffdf9fcf87be",
        "filename": "src/leveldb/util/env.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "e0fca52f4632a2a141dad0f6030393678d11bb7f",
        "filename": "src/leveldb/util/env_posix.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 621,
        "changes": 621,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_posix.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "b72cb4438425bca83d9a6ca0d207dbc8590efb2e",
        "filename": "src/leveldb/util/env_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ab0909293ca028dc861e02b91a698cd4755eafa5",
        "filename": "src/leveldb/util/env_win.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 896,
        "changes": 896,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_win.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "7b045c8c91d6f6d600308e50966ccf56e53638bf",
        "filename": "src/leveldb/util/filter_policy.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/filter_policy.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/filter_policy.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/filter_policy.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ed439ce7a2ad204da4c5f3898fc09d99dea559c9",
        "filename": "src/leveldb/util/hash.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/hash.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/hash.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/hash.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "8889d56be80e2f6342a1a292c6a0075d2481de80",
        "filename": "src/leveldb/util/hash.h",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/hash.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "eaa1c92c23240cfb1bc097621f760b1174182212",
        "filename": "src/leveldb/util/hash_test.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/hash_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/hash_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/hash_test.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "bb95f583eac6a6f916a83e409045f0a226bd9ae7",
        "filename": "src/leveldb/util/histogram.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 139,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/histogram.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/histogram.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/histogram.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1ef9f3c8abdfc50858be433110611086bb3c0da6",
        "filename": "src/leveldb/util/histogram.h",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/histogram.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/histogram.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/histogram.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ca6b3244038ec21bb7aacc2447e8593c79d48b4f",
        "filename": "src/leveldb/util/logging.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/logging.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/logging.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/logging.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1b450d2480e60d53b6e6454038b9e757df03946c",
        "filename": "src/leveldb/util/logging.h",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/logging.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "1ff5a9efa15efa166b427ef9611ccc58c96a3984",
        "filename": "src/leveldb/util/mutexlock.h",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/mutexlock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/mutexlock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/mutexlock.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "8b618fb1ae858d9af8484b81b1cd6c2f60bb018b",
        "filename": "src/leveldb/util/options.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/options.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/options.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/options.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "c063c2b7cb200dffa3c253fe76ee851910cfbe2f",
        "filename": "src/leveldb/util/posix_logger.h",
        "status": "removed",
        "additions": 0,
        "deletions": 98,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/posix_logger.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/posix_logger.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/posix_logger.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "ddd51b1c7b51743ea34fcfa14a9dec61b38ff577",
        "filename": "src/leveldb/util/random.h",
        "status": "removed",
        "additions": 0,
        "deletions": 64,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/random.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "a44f35b3149fa8fe88d9ca32dbf92fbb9f6d534c",
        "filename": "src/leveldb/util/status.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/status.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/status.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/status.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "402fab34d77349d4f16ff8fb9b9fb147bc158bf5",
        "filename": "src/leveldb/util/testharness.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 77,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testharness.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testharness.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testharness.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "da4fe68bb4e76ee69af136d76f9417d349fa9605",
        "filename": "src/leveldb/util/testharness.h",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testharness.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testharness.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testharness.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "bee56bf75f1b02c6f91bee984e56d90f6ee5d42f",
        "filename": "src/leveldb/util/testutil.cc",
        "status": "removed",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testutil.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testutil.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testutil.cc?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      },
      {
        "sha": "d7e45837027db6d1d6235c43082bc20747c0571d",
        "filename": "src/leveldb/util/testutil.h",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0971ad0fae35f40e5998da1cbc7ac08635c66737/src/leveldb/util/testutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testutil.h?ref=0971ad0fae35f40e5998da1cbc7ac08635c66737"
      }
    ]
  },
  {
    "sha": "14cd49afdbcbe640cbe7f6128601d5f2123044d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNGNkNDlhZmRiY2JlNjQwY2JlN2Y2MTI4NjAxZDVmMjEyMzA0NGQ3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-17T16:21:59Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:57:35Z"
      },
      "message": "Remove LEVELDB_PLATFORM_WINDOWS definition (it's is planned to be defined by nuget package)",
      "tree": {
        "sha": "b8444b2165d656cbe385c2871588c797fb727705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8444b2165d656cbe385c2871588c797fb727705"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14cd49afdbcbe640cbe7f6128601d5f2123044d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14cd49afdbcbe640cbe7f6128601d5f2123044d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14cd49afdbcbe640cbe7f6128601d5f2123044d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14cd49afdbcbe640cbe7f6128601d5f2123044d7/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68f8e2f03448cc343c7983bb249ac5d668fd1a14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f8e2f03448cc343c7983bb249ac5d668fd1a14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68f8e2f03448cc343c7983bb249ac5d668fd1a14"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6ed409034ffd047f814868ac5e01b5d306f5735a",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14cd49afdbcbe640cbe7f6128601d5f2123044d7/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14cd49afdbcbe640cbe7f6128601d5f2123044d7/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=14cd49afdbcbe640cbe7f6128601d5f2123044d7",
        "patch": "@@ -87,7 +87,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n@@ -103,7 +103,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n@@ -121,7 +121,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n@@ -141,7 +141,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>LEVELDB_PLATFORM_WINDOWS;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>"
      }
    ]
  },
  {
    "sha": "35864958795932848d9b4b76b6ebbc1ad515f59e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTg2NDk1ODc5NTkzMjg0OGQ5YjRiNzZiNmViYmMxYWQ1MTVmNTll",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-17T16:36:48Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:57:53Z"
      },
      "message": "Remove leveldb include directory (it's planned to be set by nuget package)",
      "tree": {
        "sha": "639d4b002913944eb852d6fb10898a4483aa9a5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/639d4b002913944eb852d6fb10898a4483aa9a5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35864958795932848d9b4b76b6ebbc1ad515f59e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35864958795932848d9b4b76b6ebbc1ad515f59e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35864958795932848d9b4b76b6ebbc1ad515f59e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35864958795932848d9b4b76b6ebbc1ad515f59e/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14cd49afdbcbe640cbe7f6128601d5f2123044d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14cd49afdbcbe640cbe7f6128601d5f2123044d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14cd49afdbcbe640cbe7f6128601d5f2123044d7"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "07700835652f7ad2d31d0b1c532b31c209524324",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35864958795932848d9b4b76b6ebbc1ad515f59e/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35864958795932848d9b4b76b6ebbc1ad515f59e/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=35864958795932848d9b4b76b6ebbc1ad515f59e",
        "patch": "@@ -89,7 +89,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n@@ -105,7 +105,7 @@\n       <Optimization>Disabled</Optimization>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n@@ -123,7 +123,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>\n@@ -143,7 +143,7 @@\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/leveldb;$(ProjectDir)/src/leveldb/include;$(ProjectDir)/src/leveldb/helpers/memenv;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n+      <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n     </ClCompile>\n     <Link>"
      }
    ]
  },
  {
    "sha": "1cd97744c43a9025defb35d059d3c522ad7ea9b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2Q5Nzc0NGM0M2E5MDI1ZGVmYjM1ZDA1OWQzYzUyMmFkN2VhOWIz",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:01:54Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:03:20Z"
      },
      "message": "Install-Package leveldb-vc140",
      "tree": {
        "sha": "cb810e568d084bf432078d305685d7bc7dca0c10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb810e568d084bf432078d305685d7bc7dca0c10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cd97744c43a9025defb35d059d3c522ad7ea9b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cd97744c43a9025defb35d059d3c522ad7ea9b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cd97744c43a9025defb35d059d3c522ad7ea9b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cd97744c43a9025defb35d059d3c522ad7ea9b3/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35864958795932848d9b4b76b6ebbc1ad515f59e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35864958795932848d9b4b76b6ebbc1ad515f59e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35864958795932848d9b4b76b6ebbc1ad515f59e"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "153e236f5968ba6ef656a6ba5499470f63c32b22",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd97744c43a9025defb35d059d3c522ad7ea9b3/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd97744c43a9025defb35d059d3c522ad7ea9b3/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=1cd97744c43a9025defb35d059d3c522ad7ea9b3",
        "patch": "@@ -416,6 +416,7 @@\n     <Import Project=\"packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets\" Condition=\"Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" />\n     <Import Project=\"packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets\" Condition=\"Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" />\n     <Import Project=\"packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets\" Condition=\"Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" />\n+    <Import Project=\"packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets\" Condition=\"Exists('packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -470,5 +471,6 @@\n     <Error Condition=\"!Exists('packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\libevent2-vc140.2.1.8\\build\\native\\libevent2-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "ca2ce5e3b7628e4e3cbddf228b570dcd238d9cbc",
        "filename": "packages.config",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd97744c43a9025defb35d059d3c522ad7ea9b3/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd97744c43a9025defb35d059d3c522ad7ea9b3/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=1cd97744c43a9025defb35d059d3c522ad7ea9b3",
        "patch": "@@ -40,6 +40,7 @@\n   <package id=\"boost_wserialization-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost_zlib-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"boost-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n+  <package id=\"leveldb-vc140\" version=\"1.16.0.5\" targetFramework=\"native\" />\n   <package id=\"libevent2-vc140\" version=\"2.1.8\" targetFramework=\"native\" />\n   <package id=\"miniupnpc-vc140\" version=\"2.0.0\" targetFramework=\"native\" />\n   <package id=\"openssl\" version=\"1.0.2.0\" targetFramework=\"native\" />"
      }
    ]
  },
  {
    "sha": "cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzkzZWE3ODA0NmU5NjQyMmM0Y2I5Mjk5ZjYzYzNlNWE0NDQ1ZmZk",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:00:21Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:03:22Z"
      },
      "message": "vcxproj: add some .cpp files",
      "tree": {
        "sha": "c512f4c545e46cb98c2a45289bf2e313193d2510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c512f4c545e46cb98c2a45289bf2e313193d2510"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc93ea78046e96422c4cb9299f63c3e5a4445ffd/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1cd97744c43a9025defb35d059d3c522ad7ea9b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cd97744c43a9025defb35d059d3c522ad7ea9b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cd97744c43a9025defb35d059d3c522ad7ea9b3"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 28,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ebabd870a87a9f8282c3b8099ba4364483a670c3",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc93ea78046e96422c4cb9299f63c3e5a4445ffd/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc93ea78046e96422c4cb9299f63c3e5a4445ffd/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
        "patch": "@@ -247,6 +247,9 @@\n     <ClCompile Include=\"src\\wallet\\wallet.cpp\" />\n     <ClCompile Include=\"src\\wallet\\walletdb.cpp\" />\n     <ClCompile Include=\"src\\warnings.cpp\" />\n+    <ClCompile Include=\"src\\zmq\\zmqabstractnotifier.cpp\" />\n+    <ClCompile Include=\"src\\zmq\\zmqnotificationinterface.cpp\" />\n+    <ClCompile Include=\"src\\zmq\\zmqpublishnotifier.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -364,6 +367,10 @@\n     <ClInclude Include=\"src\\wallet\\walletdb.h\" />\n     <ClInclude Include=\"src\\warnings.h\" />\n     <ClInclude Include=\"src\\wintype.h\" />\n+    <ClInclude Include=\"src\\zmq\\zmqabstractnotifier.h\" />\n+    <ClInclude Include=\"src\\zmq\\zmqconfig.h\" />\n+    <ClInclude Include=\"src\\zmq\\zmqnotificationinterface.h\" />\n+    <ClInclude Include=\"src\\zmq\\zmqpublishnotifier.h\" />\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">"
      },
      {
        "sha": "46a5c4a80ca38513b2db69bc5d45006590aba2bd",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc93ea78046e96422c4cb9299f63c3e5a4445ffd/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc93ea78046e96422c4cb9299f63c3e5a4445ffd/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
        "patch": "@@ -294,6 +294,15 @@\n     <ClCompile Include=\"src\\compat\\strnlen.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\zmq\\zmqpublishnotifier.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\zmq\\zmqnotificationinterface.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\zmq\\zmqabstractnotifier.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -635,5 +644,17 @@\n     <ClInclude Include=\"src\\compat\\sanity.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\zmq\\zmqpublishnotifier.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\zmq\\zmqnotificationinterface.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\zmq\\zmqconfig.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\zmq\\zmqabstractnotifier.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzFlNzlhZjE5Y2U4NjUxZDllNDNkMjgwNTFjYjFlMTE4OGU5ZGM3",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:04:54Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:03:55Z"
      },
      "message": "Install-Package libzmq-nightly",
      "tree": {
        "sha": "f2c04f2535f6f783e6a022039b58f53ab19d254c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2c04f2535f6f783e6a022039b58f53ab19d254c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc93ea78046e96422c4cb9299f63c3e5a4445ffd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc93ea78046e96422c4cb9299f63c3e5a4445ffd"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0391d7c9b9d2b60873ca02856f9c3590a626b8fc",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
        "patch": "@@ -424,6 +424,8 @@\n     <Import Project=\"packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets\" Condition=\"Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" />\n     <Import Project=\"packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets\" Condition=\"Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" />\n     <Import Project=\"packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets\" Condition=\"Exists('packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets')\" />\n+    <Import Project=\"packages\\libzmq-nightly.redist.4.2.2.4\\build\\native\\libzmq-nightly.redist.targets\" Condition=\"Exists('packages\\libzmq-nightly.redist.4.2.2.4\\build\\native\\libzmq-nightly.redist.targets')\" />\n+    <Import Project=\"packages\\libzmq-nightly.4.2.2.4\\build\\native\\libzmq-nightly.targets\" Condition=\"Exists('packages\\libzmq-nightly.4.2.2.4\\build\\native\\libzmq-nightly.targets')\" />\n   </ImportGroup>\n   <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>\n@@ -479,5 +481,7 @@\n     <Error Condition=\"!Exists('packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\miniupnpc-vc140.2.0.0\\build\\native\\miniupnpc-vc140.targets'))\" />\n     <Error Condition=\"!Exists('packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\BerkeleyDB-4_8_30-Cpp.4.8.30.2\\build\\native\\BerkeleyDB-4_8_30-Cpp.targets'))\" />\n     <Error Condition=\"!Exists('packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\leveldb-vc140.1.16.0.5\\build\\native\\leveldb-vc140.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\libzmq-nightly.redist.4.2.2.4\\build\\native\\libzmq-nightly.redist.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\libzmq-nightly.redist.4.2.2.4\\build\\native\\libzmq-nightly.redist.targets'))\" />\n+    <Error Condition=\"!Exists('packages\\libzmq-nightly.4.2.2.4\\build\\native\\libzmq-nightly.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\libzmq-nightly.4.2.2.4\\build\\native\\libzmq-nightly.targets'))\" />\n   </Target>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "86709bfde8eed35d5f2387fac4b1b79c5482bf12",
        "filename": "packages.config",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7/packages.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7/packages.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/packages.config?ref=3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
        "patch": "@@ -42,6 +42,8 @@\n   <package id=\"boost-vc140\" version=\"1.63.0.0\" targetFramework=\"native\" />\n   <package id=\"leveldb-vc140\" version=\"1.16.0.5\" targetFramework=\"native\" />\n   <package id=\"libevent2-vc140\" version=\"2.1.8\" targetFramework=\"native\" />\n+  <package id=\"libzmq-nightly\" version=\"4.2.2.4\" targetFramework=\"native\" />\n+  <package id=\"libzmq-nightly.redist\" version=\"4.2.2.4\" targetFramework=\"native\" />\n   <package id=\"miniupnpc-vc140\" version=\"2.0.0\" targetFramework=\"native\" />\n   <package id=\"openssl\" version=\"1.0.2.0\" targetFramework=\"native\" />\n   <package id=\"openssl.v120.windesktop.msvcstl.dyn.rt-dyn\" version=\"1.0.2.0\" targetFramework=\"native\" />"
      }
    ]
  },
  {
    "sha": "bc0c172c1236d9360f77535d826206ef2b21b4b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzBjMTcyYzEyMzZkOTM2MGY3NzUzNWQ4MjYyMDZlZjJiMjFiNGI1",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:17:30Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:04:00Z"
      },
      "message": "PreprocessorDefinitions: NOMINMAX",
      "tree": {
        "sha": "0f2ed0ae71f6819393904722add60efd8d85f799",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f2ed0ae71f6819393904722add60efd8d85f799"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc0c172c1236d9360f77535d826206ef2b21b4b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc0c172c1236d9360f77535d826206ef2b21b4b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc0c172c1236d9360f77535d826206ef2b21b4b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc0c172c1236d9360f77535d826206ef2b21b4b5/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c1e79af19ce8651d9e43d28051cb1e1188e9dc7"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b1c28dd210e9b1ef08ab9f140045aa5938f8a6a0",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc0c172c1236d9360f77535d826206ef2b21b4b5/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc0c172c1236d9360f77535d826206ef2b21b4b5/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=bc0c172c1236d9360f77535d826206ef2b21b4b5",
        "patch": "@@ -87,7 +87,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n@@ -103,7 +103,7 @@\n       </PrecompiledHeader>\n       <WarningLevel>Level3</WarningLevel>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n@@ -121,7 +121,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>\n@@ -141,7 +141,7 @@\n       <Optimization>MaxSpeed</Optimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;HAVE_CONFIG_H;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <AdditionalIncludeDirectories>$(ProjectDir)/src;$(ProjectDir)/src/config;$(ProjectDir)/src/univalue/include</AdditionalIncludeDirectories>\n       <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>"
      }
    ]
  },
  {
    "sha": "9078d2c111a8f09de692c17600ff715d7aa80dd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDc4ZDJjMTExYThmMDlkZTY5MmMxNzYwMGZmNzE1ZDdhYTgwZGQx",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:27:28Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:04:00Z"
      },
      "message": "vcxproj: add some .cpp files",
      "tree": {
        "sha": "7b81eac499710bf479d37aca7c11be44b29d4667",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b81eac499710bf479d37aca7c11be44b29d4667"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9078d2c111a8f09de692c17600ff715d7aa80dd1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9078d2c111a8f09de692c17600ff715d7aa80dd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9078d2c111a8f09de692c17600ff715d7aa80dd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9078d2c111a8f09de692c17600ff715d7aa80dd1/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc0c172c1236d9360f77535d826206ef2b21b4b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc0c172c1236d9360f77535d826206ef2b21b4b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc0c172c1236d9360f77535d826206ef2b21b4b5"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 24,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1541ff81559b27885be908373fccdfcd5d985c6b",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9078d2c111a8f09de692c17600ff715d7aa80dd1/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9078d2c111a8f09de692c17600ff715d7aa80dd1/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=9078d2c111a8f09de692c17600ff715d7aa80dd1",
        "patch": "@@ -196,6 +196,9 @@\n     <ClCompile Include=\"src\\netbase.cpp\" />\n     <ClCompile Include=\"src\\net_processing.cpp\" />\n     <ClCompile Include=\"src\\noui.cpp\" />\n+    <ClCompile Include=\"src\\policy\\fees.cpp\" />\n+    <ClCompile Include=\"src\\policy\\policy.cpp\" />\n+    <ClCompile Include=\"src\\policy\\rbf.cpp\" />\n     <ClCompile Include=\"src\\pow.cpp\" />\n     <ClCompile Include=\"src\\primitives\\block.cpp\" />\n     <ClCompile Include=\"src\\primitives\\transaction.cpp\" />\n@@ -308,6 +311,9 @@\n     <ClInclude Include=\"src\\netmessagemaker.h\" />\n     <ClInclude Include=\"src\\net_processing.h\" />\n     <ClInclude Include=\"src\\noui.h\" />\n+    <ClInclude Include=\"src\\policy\\fees.h\" />\n+    <ClInclude Include=\"src\\policy\\policy.h\" />\n+    <ClInclude Include=\"src\\policy\\rbf.h\" />\n     <ClInclude Include=\"src\\pow.h\" />\n     <ClInclude Include=\"src\\prevector.h\" />\n     <ClInclude Include=\"src\\primitives\\block.h\" />"
      },
      {
        "sha": "a8d1ccd01c4410974eb01f5b8fef6aa654c0b32e",
        "filename": "bitcoin-msvc.vcxproj.filters",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9078d2c111a8f09de692c17600ff715d7aa80dd1/bitcoin-msvc.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9078d2c111a8f09de692c17600ff715d7aa80dd1/bitcoin-msvc.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj.filters?ref=9078d2c111a8f09de692c17600ff715d7aa80dd1",
        "patch": "@@ -303,6 +303,15 @@\n     <ClCompile Include=\"src\\zmq\\zmqabstractnotifier.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"src\\policy\\fees.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\policy\\policy.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"src\\policy\\rbf.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -656,5 +665,14 @@\n     <ClInclude Include=\"src\\zmq\\zmqabstractnotifier.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"src\\policy\\fees.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\policy\\policy.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"src\\policy\\rbf.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "63fd4ca9caa775235c3e9a06b4efbf484dcec75f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2ZkNGNhOWNhYTc3NTIzNWMzZTlhMDZiNGVmYmY0ODRkY2VjNzVm",
    "commit": {
      "author": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T00:41:29Z"
      },
      "committer": {
        "name": "kobake",
        "email": "kobake@users.sourceforge.net",
        "date": "2017-02-18T01:04:00Z"
      },
      "message": "Linkage-secp256k1: static",
      "tree": {
        "sha": "aa553ed9f1c254a53dec098aba6edfa27b6c8eaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa553ed9f1c254a53dec098aba6edfa27b6c8eaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63fd4ca9caa775235c3e9a06b4efbf484dcec75f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fd4ca9caa775235c3e9a06b4efbf484dcec75f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63fd4ca9caa775235c3e9a06b4efbf484dcec75f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fd4ca9caa775235c3e9a06b4efbf484dcec75f/comments",
    "author": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kobake",
      "id": 2929454,
      "node_id": "MDQ6VXNlcjI5Mjk0NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobake",
      "html_url": "https://github.com/kobake",
      "followers_url": "https://api.github.com/users/kobake/followers",
      "following_url": "https://api.github.com/users/kobake/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobake/subscriptions",
      "organizations_url": "https://api.github.com/users/kobake/orgs",
      "repos_url": "https://api.github.com/users/kobake/repos",
      "events_url": "https://api.github.com/users/kobake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9078d2c111a8f09de692c17600ff715d7aa80dd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9078d2c111a8f09de692c17600ff715d7aa80dd1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9078d2c111a8f09de692c17600ff715d7aa80dd1"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "77ae0fc3e24fe874d54bfb1eaf160095282d40e8",
        "filename": "bitcoin-msvc.vcxproj",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63fd4ca9caa775235c3e9a06b4efbf484dcec75f/bitcoin-msvc.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63fd4ca9caa775235c3e9a06b4efbf484dcec75f/bitcoin-msvc.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-msvc.vcxproj?ref=63fd4ca9caa775235c3e9a06b4efbf484dcec75f",
        "patch": "@@ -71,15 +71,19 @@\n   <PropertyGroup Label=\"UserMacros\" />\n   <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n     <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n   </PropertyGroup>\n   <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n     <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n   </PropertyGroup>\n   <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n     <LinkIncremental>false</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n   </PropertyGroup>\n   <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n     <LinkIncremental>false</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n   </PropertyGroup>\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n     <ClCompile>"
      }
    ]
  }
]