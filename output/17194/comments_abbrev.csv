EthanHeilman,2019-10-18 21:45:55,">We can forward it to these two groups IN ADDITION to forwarding to (1 or 2) peers, if there is a belief that this is might affect their security. The bandwidth overhead would be obviously very low.\n\nIt is good for SPV nodes to get addrs sent to them, but it doesn't benefit the network as much as sending addrs to a full node. Ensuring addrs go to 2 full node peers without excluding SPV nodes s",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-543965236,543965236,
practicalswift,2019-10-20 14:20:14,"Concept ACK\n\nThanks for working on this!",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-544256694,544256694,
MarcoFalke,2019-10-22 19:46:34,"> It is good for SPV nodes to get addrs sent to them\n\nDo you mean *unsolicited* addrs? If so, I tend to disagree. That would make it harder to run a bandwidth efficient non-addr-relay node (e.g. an ""SPV node""). I think that addr messages should only be gossiped to bip-155 nodes or network nodes (detectable via service bit). All other nodes should send a `getaddr` or `getaddrv2` p2p message to ",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-545123214,545123214,
sipa,2019-10-22 19:53:05,"I think it's a bit more nuanced than that.\n\nIn an ideal world, I think light clients would participate in local IP address management. Perhaps they wouldn't relay addresses themselves, but even if not, they should be learning from IP addresses that are gossiped around.\n\nIn reality it seems that none of them do, and obviously gossipping IP addresses to nodes that are just going to ignore th",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-545125684,545125684,
harding,2019-11-03 15:29:57,"I wanted to note that one SPV client I'm aware of does (or at least did) use addr messages to find nodes.  E.g., see this code:\n\n- https://github.com/breadwallet/breadwallet-core/blob/494aa99ed61df24d13e45f6b335cda192c1b765c/bitcoin/BRPeer.c#L268\n\nHowever, that wallet also uses BIP37 bloom filters, so I don't know what their strategy will be going forward with regards to using the P2P prot",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-549148189,549148189,
naumenkogs,2019-11-05 18:48:00,"So, it seems like most of us agree that we should allow light clients to request addrs, and we should **not** send them unsolicited addr messages assuming they forward them.\n\nJust wanted to clarify, it is exactly what this PR does.",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-549964175,549964175,
naumenkogs,2019-12-01 18:09:52,"I updated the script to account for black holes and be more precise in general (original post is updated to reflect new numbers).\nThe result is: current behavior is actually not as bad as I thought.\nI still think it's worth merging it though, especially because it will take a while for us to figure out all addrV2 stuff.\nSo let's save some bandwidth and make address relay be more effective fo",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-560138545,560138545,
EthanHeilman,2019-12-02 15:55:41,"@naumenkogs \nIf I understand you correctly this commit now excludes sending addrs to non-forward nodes, but would send addrs to SPV clients that do forward addrs?\n\nI looked through the commit and it wasn't completely obvious to me, how `MayHaveUsefulAddressDB` excludes non-forwarding nodes?\n\nI know `MayHaveUsefulAddressDB` checks the service flags and I read the service flag descriptions",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-560457030,560457030,
naumenkogs,2019-12-02 18:49:04,"@EthanHeilman\n>this commit now excludes sending addrs to non-forward nodes, but would send addrs to SPV clients that do forward addrs?\n\nNo. Unfortunately, right now there is no way to distinguish forwarding SPV nodes and non-forwarding SPV nodes.\nBased on the implementations of SPV nodes I found, none of them forward addrs, so I suggest not forwarding to *all* SPV nodes for now (until we p",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-560528800,560528800,
DrahtBot,2020-01-17 07:45:02,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19860 (Improve diversification of new connections: privacy and stability by naumenkogs)\n* #19858 (Periodically make bloc",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-575514104,575514104,
vasild,2020-03-30 16:09:29,"Here is a functional test that demonstrates this patch works as intended.\n\n<details>\n<summary>functional test</summary>\n\n```diff\ndiff --git c/test/functional/p2p_addr_relay.py i/test/functional/p2p_addr_relay.py\nnew file mode 100755\nindex 000000000..7b74888f0\n--- /dev/null\n+++ i/test/functional/p2p_addr_relay.py\n@@ -0,0 +1,75 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 20",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-606093434,606093434,
naumenkogs,2020-03-30 19:16:36,"@vasild  Thanks for the test! Will integrate it into this PR. \n\nI anticipate that there's not enough attention *not* because it's too risky, but rather just a natural thing. Maybe a lack of motivation.\nI would say that adding optional would make it even less attractive to review, because of new complexity.",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-606189322,606189322,
vasild,2020-03-30 19:46:44,"Yes, a config knob is not very attractive either.\n\nBtw I had to make this change in the code to make the test pass quickly and deterministically:\n\n```diff\n-static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 30;\n+// Relay immediately, otherwise we may end up delaying the relay for a long\n+// time (without upper limit, see PoissonNextSend()) which makes the\n+// p2p_addr_relay",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-606207494,606207494,
sipa,2020-07-07 19:23:38,"Concept and code review ACK 644eae6558b5becfdd8031ca83d6b92f4467cf3c\n\nGiven evidence that non-full-nodes don't do anything with unsollicited addr relays, and the fact that GETADDR still works, I think it's fine to drop relay to them.\n\nIt's probably worth announcing this on the bitcoin-dev mailinglist, to ask for comments, and suggest that if there are exceptions, we can work on a service f",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-655072930,655072930,
fanquake,2020-07-26 05:05:27,@jnewbery @amitiuttarwar Did you want to take a look here?,https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-663936382,663936382,
jnewbery,2020-07-27 10:31:57,"If the goal is to ensure that ADDR gossips don't disappear into a black hole, then I don't think this is the correct solution.\n\n> Ensuring addrs go to 2 full node peers without excluding SPV nodes seems to capture the requirements well.\n\nThis seems like a much better solution. We lose nothing by gossiping an address to SPV peers, as long as we also gossip to two ""address relay"" peers.\n\",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-664287998,664287998,
naumenkogs,2020-07-28 10:43:25,"@jnewbery \nI don't have a strong opinion on the approach, indeed the goal is to make sure ADDRs don't go into black hole. ~~Otherwise, a node with 8 outbound peers and 100 inbound SPVs will be self-announcing very poorly.~~ (wrong, see [response](https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-665618327))\n\nWe seem to have 2 options: \n- don't send to SPV\n- make sure we choose t",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-664968052,664968052,
EthanHeilman,2020-07-28 15:58:30,"If someone is interested in writing the concept ACK of the second option get in touch with me, happy to review your code provide input. Otherwise I might try to write this.",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-665125416,665125416,
jnewbery,2020-07-29 11:50:21,"> Otherwise, a node with 8 outbound peers and 100 inbound SPVs will be self-announcing very poorly.\n\nThis isn't true. We self-announce our address to _all_ peers on a timer:\n\nhttps://github.com/bitcoin/bitcoin/blob/a76ccb01b96424ef207762b704d81b9d2497f3d2/src/net_processing.cpp#L4058-L4065\n\n(although in practice most of the time this won't actually result in our address being advertise",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-665618327,665618327,
DrahtBot,2020-09-03 13:22:19,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-686486960,686486960,
adamjonas,2020-12-08 15:03:44,@naumenkogs checking in on the status of the PR. Is this something you plan to continue to pursue?,https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-740673593,740673593,
mzumsande,2021-06-18 20:20:12,"If I understand the code at  \nhttps://github.com/bitcoin/bitcoin/blob/da69d9965a112c6421fce5649b5a18beb7513526/src/net_processing.cpp#L2783-L2786\ncorrectly, the assumption of 120 waves of relay in the simulation is too much, because with `nSince = nNow - 10 * 60`, gossip relay for a given addr will just end 10 minutes (=20 waves on average) after the self-announcement, assuming synchronized cl",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-864255228,864255228,
naumenkogs,2021-09-15 13:00:26,"Closing this because it was partially handled by #21528, but also arguments just get outdated after that PR, and the code as well.",https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-919996728,919996728,
