laanwj,2015-10-19T09:25:59Z,People are already complaining about memory usage of the wallet. How much will this make it worse?\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-149156386,149156386,
luke-jr,2015-10-19T09:32:12Z,"I would guess maybe 40 bytes per transaction. I am running some tests to compare.\n\nThe current code is very poor for zapwallettxes because it will re-sort the entire wallet transactions, every time it adds a new one.\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-149160347,149160347,
luke-jr,2015-10-20T04:55:05Z,"With a wallet containing 10184 transactions, I did not observe any measurable memory overhead to the cache.\n\n```\n SIZE    VSZ    SZ\n329352 347192 86798 d78a880\n320552 338396 84599 d78a880+5873cc8\n```\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-149433219,149433219,
jonasschnelli,2015-10-29T19:12:38Z,Nice!\nAdding a wtx to the wallet could also be faster (especially big wallets) because `AddToWallet()` does also call `OrderedTxItems()` (which reads in all the whole transaction history).\n\nutACK.\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-152290903,152290903,
dcousens,2015-10-29T19:19:59Z,"concept ACK, light utACK\n\nAlso,  I feel like any memory overhead required would already exist instantaneously at the call site anyway, this just persists the requirement for the lifetime of the application instead?\n\n**edit**: To clarify, this doesn't really require any extra memory, except in that it is now persistent across the applications lifetime, not just when needed.\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-152292606,152292606,
fanquake,2015-11-06T04:23:48Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-154281504,154281504,
gmaxwell,2015-11-14T07:57:03Z,@luke-jr rebase please\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-156665090,156665090,
luke-jr,2015-11-17T16:38:05Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-157425219,157425219,
pstratem,2015-11-18T21:46:30Z,"Increased memory from 1.5GB on master to 1.8GB \nImproved zapwallet time to 5 minutes from something approximating infinity\n\n$ ./src/bitcoin-cli -testnet  getwalletinfo\n{\n  ""walletversion"": 60000,\n  ""balance"": 1937898.88787003,\n  ""unconfirmed_balance"": 0.00000000,\n  ""immature_balance"": 1275.53301591,\n  ""txcount"": 776267,\n  ""keypoololdest"": 1446285387,\n  ""keypoolsize"": 999999,\n  ""paytxfe",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-157875145,157875145,
bittylicious,2015-11-18T22:05:52Z,"@pstratem Pull request 6850 will improve zapwallet / rescan time similarly with no memory increase. However, this pull request will be good for AddToWallets when near the tip, where there is intermittent CPU spiking when the indexes are recreated.\n\nIMO, this pull request is needed even with the memory increase, but 6850 is less controversial.\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-157879682,157879682,
gmaxwell,2015-11-18T22:43:50Z,Rescan on wallet containing 14WCrzmqVCD7Thf79vutWTB6y1hUc8pP19  (maybe about 53k transactions) went from 23 minutes to 10 minutes.\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-157888957,157888957,
gmaxwell,2015-11-21T00:04:33Z,"oh my numbers there were for the whole rescan, if I limit the benchmark to just the chunk of the blockchain that have transactions...  it goes from 843 seconds to 35 seconds from 63/sec to 1541/sec; or 24x faster.\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-158563329,158563329,
gmaxwell,2015-11-21T00:44:16Z,"On a wallet with 410k transactions in it, this repeatably _decreases_ memory usage by ~5MB from 822MB to 816MB.  I think it's fair to say that any increase is negligible.\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-158567909,158567909,
bittylicious,2015-11-21T01:01:28Z,"@gmaxwell I would expect any memory increase to be within ""measurement error"" tolerances, i.e. not significant. This is essentially just storing another index (or two?). It's great that your measurements seem to agree.\n\nAnd the previous code which ultimately recreated the indexes on each AddToWallet is simply bad.\n",https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-158569660,158569660,
gmaxwell,2015-11-21T02:53:12Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/6851#issuecomment-158579066,158579066,
jonasschnelli,2015-10-29T19:06:52Z,nit: use a better method name? Maybe\n\n``` c\n_WriteAccountingEntry(const CAccountingEntry& acentry) //should only be called from the CWallet\n```\n,https://github.com/bitcoin/bitcoin/pull/6851#discussion_r43430532,43430532,src/wallet/walletdb.cpp
