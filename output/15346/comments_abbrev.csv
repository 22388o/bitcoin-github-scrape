jonasschnelli,2019-02-04T22:30:24Z,"I dislike the fact that bitcoin-cli does have insight into specific commands and argument positions, etc.\n\nNevertheless I think this is an improvement.\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460439290,460439290,
kristapsk,2019-02-04T22:36:12Z,"Concept ACK\n\nIf we should do special handling for `encryptwallet`, I think something similar should be done with `walletpassphrase` and `walletpassphrasechange` as well. Especially `walletpassphrase`, which is most often used from these three.",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460440969,460440969,
darosior,2019-02-05T06:28:46Z,"Yes, I wanted to add the other commands once this one is accepted, in order to do one thing at a time.",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460528150,460528150,
laanwj,2019-02-05T17:27:10Z,"> Yes, I wanted to add the other commands once this one is accepted, in order to do one thing at a time.\n\nI'd prefer to do this all at once, if we're going to do this.",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460727481,460727481,
kristapsk,2019-02-05T17:42:43Z,"I agree with @laanwj, less time spent on testing and code review.",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460733288,460733288,
promag,2019-02-05T17:57:56Z,"One way to avoid client side knowledge of these commands is to support special arguments that are replaced after reading the stdin. For instance:\n```sh\n# before\nbitcoin-cli encryptwallet myawesomepass\n\n# after\nbitcoin-cli encryptwallet -p\nEnter password: *************\nVerify password: *************\n```\nWhen `-p` is detected it is replaced after double reading the password from ",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460738744,460738744,
kristapsk,2019-02-05T21:59:02Z,"> One way to avoid client side knowledge of these commands is to support special arguments that are replaced after reading the stdin.\n\nProblem is these three RPCs differ - with `encryptwallet` you would expect being asked for password twice to verify they match, with `walletpassphrasechange` you expect to be asked first for the old password and then twice for the new password, with `walletpass",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460820379,460820379,
darosior,2019-02-06T11:24:49Z,"> > Yes, I wanted to add the other commands once this one is accepted, in order to do one thing at a time.\n> \n> I'd prefer to do this all at once, if we're going to do this.\n\nOk, I'll commit changes for the other commands.\n\n\n\n> One way to avoid client side knowledge of these commands is to support special arguments that are replaced after reading the stdin. For instance:\n> \n> `",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-460989650,460989650,
promag,2019-02-06T20:47:03Z,Have you seen #13716?,https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-461181126,461181126,
darosior,2019-02-06T22:05:27Z,"> Have you seen #13716?\n\nYes I have, and I still think it is more convenient for the user to change the behavior of the existing commands instead of adding another.\nHowever the two PR are not incompatible and not echoing the password would be nice.",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-461206666,461206666,
darosior,2019-02-06T22:10:31Z,"I added a commit to change the behavior of `walletpassphrase` and `walletpassphrasechange` too.\n```\n./src/bitcoin-cli encryptwallet\nEnter passphrase to encrypt the wallet : test\nRe-enter passphrase : test\n\n./src/bitcoin-cli walletpassphrasechange\nEnter current passphrase : test\nEnter new passphrase : testt\nRepeat new passphrase : testt\n\n./src/bitcoin-cli walletpassphrase 100",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-461208163,461208163,
kristapsk,2019-02-11T00:27:02Z,"Tested this and #13716 and I like this approach better, apart from no-echo password part from by @kallewoof, which would be cool have here too.",https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-462196047,462196047,
darosior,2019-10-10T09:15:11Z,Closing in favor of https://github.com/bitcoin/bitcoin/pull/13716,https://github.com/bitcoin/bitcoin/pull/15346#issuecomment-540478428,540478428,
shahzadlone,2019-02-06T10:39:02Z,perhaps document about the additional throws so user can expect this new behaviour.,https://github.com/bitcoin/bitcoin/pull/15346#discussion_r254217234,254217234,src/bitcoin-cli.cpp
darosior,2019-02-06T11:16:19Z,"This is classic behaviour of enter-then-reenter password, where sould I document ?",https://github.com/bitcoin/bitcoin/pull/15346#discussion_r254229533,254229533,src/bitcoin-cli.cpp
practicalswift,2019-02-11T20:27:11Z,Nit: `args.empty()` is more idiomatic?,https://github.com/bitcoin/bitcoin/pull/15346#discussion_r255679721,255679721,src/bitcoin-cli.cpp
practicalswift,2019-02-11T20:27:31Z,Same here.,https://github.com/bitcoin/bitcoin/pull/15346#discussion_r255679823,255679823,src/bitcoin-cli.cpp
darosior,2019-02-11T22:38:14Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15346#discussion_r255723664,255723664,src/bitcoin-cli.cpp
darosior,2019-02-11T22:38:24Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15346#discussion_r255723712,255723712,src/bitcoin-cli.cpp
