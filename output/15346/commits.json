[
  {
    "sha": "00b422bef179eb9b6b764a2d2a00f0d4fcc2a851",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMGI0MjJiZWYxNzllYjliNmI3NjRhMmQyYTAwZjBkNGZjYzJhODUx",
    "commit": {
      "author": {
        "name": "darosior",
        "email": "darosior@gmail.com",
        "date": "2019-02-13T12:21:46Z"
      },
      "committer": {
        "name": "darosior",
        "email": "darosior@gmail.com",
        "date": "2019-02-13T12:21:46Z"
      },
      "message": "Get wallet encryption passphrases from stdin if not passed as an argument. fixes #15318",
      "tree": {
        "sha": "e7d11f4ceed7285d97570a3694b588b52548f060",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7d11f4ceed7285d97570a3694b588b52548f060"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00b422bef179eb9b6b764a2d2a00f0d4fcc2a851",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00b422bef179eb9b6b764a2d2a00f0d4fcc2a851",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00b422bef179eb9b6b764a2d2a00f0d4fcc2a851",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00b422bef179eb9b6b764a2d2a00f0d4fcc2a851/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc21bb4e359053961c776203d6ea5d6d3b2b626a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc21bb4e359053961c776203d6ea5d6d3b2b626a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc21bb4e359053961c776203d6ea5d6d3b2b626a"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 39,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bbc35182dec11b291cc90551cc5306ef2fd882c2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00b422bef179eb9b6b764a2d2a00f0d4fcc2a851/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00b422bef179eb9b6b764a2d2a00f0d4fcc2a851/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=00b422bef179eb9b6b764a2d2a00f0d4fcc2a851",
        "patch": "@@ -441,6 +441,45 @@ static int CommandLineRPC(int argc, char *argv[])\n             method = args[0];\n             args.erase(args.begin()); // Remove trailing method name from arguments vector\n         }\n+        // Get wallet encryption passphrases from command line\n+        if (method == \"encryptwallet\" && args.empty()) {\n+            std::string passphrase, verification;\n+            fprintf(stdout, \"Enter passphrase to encrypt the wallet : \");\n+            if(!std::getline(std::cin, passphrase)) {\n+                throw std::runtime_error(\"Failed to read passphrase\");\n+            }\n+            fprintf(stdout, \"Re-enter passphrase : \");\n+            if(!std::getline(std::cin, verification) || passphrase != verification) {\n+                throw std::runtime_error(\"Passphrases do not match\");\n+            }\n+            args.push_back(passphrase);\n+        }\n+        else if (method == \"walletpassphrase\" && args.size() == 1) {\n+            std::string passphrase;\n+            fprintf(stderr, \"Enter passphrase to unlock the wallet : \");\n+            fflush(stderr);\n+            if(!std::getline(std::cin, passphrase)) {\n+                throw std::runtime_error(\"Failed to read the passphrase\");\n+            }\n+            args.insert(args.begin(), passphrase); // Second parameter is timeout\n+        }\n+        else if (method == \"walletpassphrasechange\" && args.empty()) {\n+            std::string currentPassphrase, newPassphrase, verification;\n+            fprintf(stdout, \"Enter current passphrase : \");\n+            if(!std::getline(std::cin, currentPassphrase)) {\n+                throw std::runtime_error(\"Failed to read the passphrase\");\n+            }\n+            fprintf(stdout, \"Enter new passphrase : \");\n+            if(!std::getline(std::cin, newPassphrase)) {\n+                throw std::runtime_error(\"Failed to read the passphrase\");\n+            }\n+            fprintf(stdout, \"Repeat new passphrase : \");\n+            if(!std::getline(std::cin, verification) || newPassphrase != verification) {\n+                throw std::runtime_error(\"Passphrases do not match\");\n+            }\n+            args.push_back(currentPassphrase);\n+            args.push_back(newPassphrase);\n+        }\n \n         // Execute and handle connection failures with -rpcwait\n         const bool fWait = gArgs.GetBoolArg(\"-rpcwait\", false);"
      }
    ]
  }
]