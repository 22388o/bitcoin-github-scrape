promag,2019-04-03T15:31:49Z,Similar to #15596.,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-479540691,479540691,
promag,2019-04-03T15:45:49Z,@MarcoFalke is this what you mean in #15702?,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-479546493,479546493,
DrahtBot,2019-04-03T17:07:25Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18592 (rpc: replace raw pointers with shared_ptrs by brakmic)\n* #18502 (doc: Update docs for getbalance (default minconf",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-479576753,479576753,
luke-jr,2019-04-08T11:38:34Z,"This should throw an exception, not simply be ignored...",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-480796044,480796044,
promag,2019-04-08T12:45:33Z,@luke-jr I'm doing the same as #15596. Why throw an error?,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-480816541,480816541,
luke-jr,2019-04-08T13:03:28Z,"Because if I specify minconf=10, I expect the value with received transactions less than 10 blocks deep to be excluded. Returning a wrong answer is not a reasonable API change.\n\n#15596 should probably be throwing an error too.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-480822588,480822588,
promag,2019-04-08T13:39:07Z,@luke-jr how about renaming to `min_conf_theirs=10`? That wouldn't cause confusion and allows to take into account change (or send to self) outputs with 1 confirmation.,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-480835586,480835586,
MarcoFalke,2019-04-08T14:26:31Z,"> @luke-jr I'm doing the same as #15596. Why throw an error?\n\n#15596 has always ignored the minconf parameter, `getbalance` did not. So I think an error is fine here.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-480854364,480854364,
laanwj,2019-04-10T15:20:14Z,"> This should throw an exception, not simply be ignored...\n\nYes, error is definitely better. Programs ignoring arguments can be incredibly frustrating.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-481735751,481735751,
promag,2019-04-10T15:40:36Z,Then when should it throw an error? `minconf > 0`?,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-481744244,481744244,
luke-jr,2019-04-18T06:18:33Z,`minconf != 0`,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-484370958,484370958,
promag,2019-04-22T00:13:39Z,Now raising error.,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-485292630,485292630,
promag,2019-05-25T11:53:39Z,This is ready?,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-495912159,495912159,
jnewbery,2019-07-02T13:48:50Z,Is this still needed now that #15596 is merged?,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507685224,507685224,
MarcoFalke,2019-07-02T13:55:27Z,"On pull request is removing min conf, the other is adding it. Would be nice if there was a uniform general direction.\n\n*  rpc: Add min_conf option to fund transaction calls #14641 \n*  rpc: Raise error in getbalance if minconf is not zero #15729 ",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507687921,507687921,
promag,2019-07-02T14:12:58Z,"@jnewbery that one is unrelated?\n\n@MarcoFalke is #15702 still a concern?",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507695329,507695329,
promag,2019-07-02T15:18:24Z,"> although I think we'd want to check that no-one is relying on the current, broken behaviour.\n\nHow?",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507723307,507723307,
jnewbery,2019-07-02T15:20:58Z,"> How?\n\nAsk in #bitcoin or #bitcoin-core-dev? Deprecate this first before removing in the next release?",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507724347,507724347,
luke-jr,2019-07-02T15:45:04Z,"It's only been broken for a few releases. Much more likely that someone is relying on the correct behaviour, and hasn't noticed it got broken.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507734109,507734109,
jnewbery,2019-07-02T18:04:16Z,"> It's only been broken for a few releases\n\nNo - it's always been inconsistent/broken",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507785162,507785162,
luke-jr,2019-07-02T18:24:09Z,"No, it hasn't. It worked fine until v0.17.0",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507792243,507792243,
jnewbery,2019-07-02T19:26:25Z,"Please see https://github.com/bitcoin/bitcoin/pull/14602#pullrequestreview-179051754 for some of the historic problems with getbalance minconf. _No-one_ has been able to specify what the behaviour even should be, so it's not correct to say that this worked fine - there wasn't even a specified of documented behaviour for this.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507812772,507812772,
luke-jr,2019-07-02T19:32:15Z,"The behaviour it has historically had (and IMO fairly reasonable too) is to add all N-block confirmed incoming, and subtract all (ignoring confirmation) outgoing.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507814628,507814628,
MarcoFalke,2019-07-08T17:04:34Z,"> The behaviour it has historically had (and IMO fairly reasonable too) is to add all N-block confirmed incoming, and subtract all (ignoring confirmation) outgoing.\n\nWhatever the behaviour is, it should be clearly documented. Especially since the behaviour is not obvious from just the one line argument description.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-509310034,509310034,
luke-jr,2019-07-08T17:37:06Z,"Core no longer has code to correctly calculate the balance in this case anymore, so removal via error (ie, this PR) seems like the correct solution.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-509321651,509321651,
MarcoFalke,2019-07-08T17:59:19Z,@promag This does not compile,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-509329540,509329540,
promag,2019-07-08T18:02:08Z,"I know, I'm waiting :popcorn: ",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-509330558,509330558,
promag,2019-08-02T17:22:10Z,"Rebased, updated and added release notes.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-517781353,517781353,
MarcoFalke,2019-08-02T17:37:47Z,I believe my comment https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-507687921 has not been addressed,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-517786251,517786251,
MarcoFalke,2019-08-02T17:47:03Z,"On a second though, I think this is fine to remove. The behavior seems confusing and I can't really come up with a use case.\n\nACK 2a774cf7542d2e321823a1c79c66017fca4993af",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-517789072,517789072,
promag,2019-11-24T22:21:14Z,"Also wallet label?\n\nPing @meshcollider.",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-557934085,557934085,
meshcollider,2019-11-25T09:35:22Z,"With the many minconf PRs and arguments we've had, I think we should at least briefly discuss this in the meeting to make sure people that haven't looked here are ok with the change",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-558070458,558070458,
ryanofsky,2019-11-25T14:07:49Z,"Conditional NACK until this has good release notes.\n\nI don't like this change, but without a better alternative I think it might be an improvement over the status quo. The release notes here are bad though. If you're going to remove a feature (""tell me my balance ignoring incoming payments with less than min_conf confirmations"") that once worked well enough and was more recently broken you sho",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-558171157,558171157,
promag,2019-11-25T15:18:06Z,"> until this has good release notes.\n\nAgree, these are poor, don't explain the motivation.\n\n> I don't like this change, but without a better alternative I think it might be an improvement over the status quo.\n\nI was under the impression there was no intention in fixing the feature. If that's not the case then this should be closed.\n\n> Last discussions I remember having about this w",https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-558201239,558201239,
DrahtBot,2020-04-13T13:19:07Z,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/15729#issuecomment-612894505,612894505,
MarcoFalke,2019-04-03T16:08:41Z,This shouldn't count conflicts,https://github.com/bitcoin/bitcoin/pull/15729#discussion_r271819307,271819307,src/wallet/wallet.cpp
promag,2019-04-04T07:06:29Z,"`IsTrusted` already checks `GetDepthInMainChain > 0`, isn't it enough?",https://github.com/bitcoin/bitcoin/pull/15729#discussion_r272041089,272041089,src/wallet/wallet.cpp
jnewbery,2019-07-02T15:06:24Z,"nit: strictly, you can remove the `tx_depth` check here, since `is_trusted()` will do the `tx_depth` check for you:\n\nhttps://github.com/bitcoin/bitcoin/blob/2f717fb5cdfc312784f9c1539fc41cdfcfbde452/src/wallet/wallet.cpp#L2168\n\nRegardless of whether you make that change, I think a comment here would be helpful. Something like ""Only count coins which are confirmed or are unconfirmed and trus",https://github.com/bitcoin/bitcoin/pull/15729#discussion_r299533071,299533071,src/wallet/wallet.cpp
jnewbery,2019-07-02T15:07:58Z,"nit: seems strange to define a variable in this scope which is just going to get used once. How about:\n\n```\nif (!request.params[1].isNull() && request.params[1].get_int() != 0) {\n    throw ...\n```",https://github.com/bitcoin/bitcoin/pull/15729#discussion_r299533900,299533900,src/wallet/rpcwallet.cpp
promag,2019-07-02T15:17:37Z,Sure.,https://github.com/bitcoin/bitcoin/pull/15729#discussion_r299538999,299538999,src/wallet/rpcwallet.cpp
promag,2019-07-02T15:18:20Z,"~~I'll take your suggestion.~~\n\nI've reverted since the condition is more strong than a comment and IMO self explanatory.",https://github.com/bitcoin/bitcoin/pull/15729#discussion_r299539327,299539327,src/wallet/wallet.cpp
Sjors,2020-02-25T12:52:21Z,"It's very confusing for this to be `0`, because it won't actually show unconfirmed incoming transactions, only unconfirmed change. It's not even really `0` by default, but `1`, see a few lines below. Since we can't drop it and can't rename it to `dummy2`, let's add a comment: `This is ignored and only remains for backward compatibility. Must be excluded or set to zero.`",https://github.com/bitcoin/bitcoin/pull/15729#discussion_r383859119,383859119,src/wallet/rpcwallet.cpp
