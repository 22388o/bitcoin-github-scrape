JustinTArthur,2018-09-24T03:15:06Z,"~Travis tests should be re-run following the merge of #14300.~ Rebased this PR on #14300, so dependency isn't an issue.",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-423869528,423869528,
DrahtBot,2018-09-24T04:13:00Z,"<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14318 (Relay ancestors of transactions by sdaftuar)\n* #14312 (tests: Remove unused testing code by practicalswift)\n* #14220 (Transaction relay privacy bugfix by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, sta",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-423873642,423873642,
practicalswift,2018-09-24T05:49:51Z,"What an excellent first-time contribution! Thanks!\n\nThis is my favourite type of contribution: it not only fixes current code but also fixes **future** code by introducing a mechanism that helps us avoid introducing new instances of the same class of issue. Exactly the type of contribution that I was referring to in https://github.com/bitcoin/bitcoin/pull/14217#issuecomment-423812131:\n\n> P",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-423881690,423881690,
jnewbery,2018-09-24T12:23:54Z,"Concept ACK.\n\nThere's some suggestion in this thread: https://stackoverflow.com/questions/472000/usage-of-slots that using `__slots__` to constrain attribute creation is discouraged. However, I've searched for a few minutes and haven't been able to find a 'better' way to do it.",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-423956439,423956439,
MarcoFalke,2018-09-24T12:53:02Z,"Concept ACK. I guess this could also be implemented with a ""frozen"" decorator, which freezes the attributes after `__init__`.\n\nIt worries me that the tests just pass with or without this fix, which doesn't add much value to the fix. Would you mind changing the tests itself, such that they would fail without, but pass with the change. (See inline comments)",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-423964067,423964067,
gmaxwell,2018-09-26T00:25:05Z,"You are my hero of the day. I am python ignorant, and so I'm only concept ACKing because (1) I've run into this problem before and been frustrated, (2) I see people who know the tests better haven't opposed it, and (3) I asked for someone to fix this. :P",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424544655,424544655,
JustinTArthur,2018-09-26T02:28:22Z,"> Concept ACK. I guess this could also be implemented with a ""frozen"" decorator, which freezes the attributes after `__init__`.\n\nI'm not opposed to moving to that at some point. Using `__slots__`  everywhere makes the code more verbose, where Python can otherwise excel at being concise. Unfortunately, these tests seem to do a bit of assignment after initialization so some refactoring would be ",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424563641,424563641,
JustinTArthur,2018-09-26T05:27:48Z,"@MarcoFalke I've created an alternate implementation that uses a freezing decorator as you've suggested:\nhttps://github.com/bitcoin/bitcoin/compare/master...JustinTArthur:functional-test-attr-enforcement-decorator\nDecorator implementation isn't great to look at, but makes the classes easier on the eyes. We'd lose the performance benefits of `__slots__`, if that matters. Unlike the freezing met",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424589395,424589395,
ken2812221,2018-09-26T06:54:21Z,Concept ACK. Will try to learn how `__slots__` work.,https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424605762,424605762,
promag,2018-09-26T08:43:21Z,"Concept ACK, +1 `__slots__` for this case.",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424635157,424635157,
jnewbery,2018-09-26T15:42:53Z,"Concept ACK either approach. I slightly prefer the `__slots__` approach, since it seems more explicit to me and doesn't require us to roll our own attribute-fixing code, but I'm happy with either.",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424764659,424764659,
MarcoFalke,2018-09-26T16:01:56Z,"Ok, let's keep the slots then.",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424772255,424772255,
practicalswift,2018-09-26T16:49:58Z,"Agree with @jnewbery – the explicitness of `__slots__` is nice. Also: it is more idiomatic since it works out of the box without any extra code.\n\nFrom the Zen of Python:\n* Explicit is better than implicit.\n* There should be one – and preferably only one – obvious way to do it.\n\n:-)",https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424789709,424789709,
JustinTArthur,2018-09-27T03:19:43Z,Revised commits to incorporate code comment suggestions from @MarcoFalke and @jimmysong.,https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-424945677,424945677,
jnewbery,2018-09-27T14:52:27Z,utACK e46023287689fc8e79b9a82fe1a827d87c769423,https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-425123045,425123045,
MarcoFalke,2018-09-27T15:10:04Z,utACK e460232876,https://github.com/bitcoin/bitcoin/pull/14305#issuecomment-425129845,425129845,
MarcoFalke,2018-09-24T12:47:19Z,"Would be nice to demonstrate that this fails due to the correct reason: ""non-mandatory-script-verify-flag (Witness program was passed an empty witness)""\n\nYou can achieve this with the `assert_debug_log` helper.",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r219822066,219822066,test/functional/p2p_segwit.py
MarcoFalke,2018-09-24T12:49:00Z,"Same here: The reject reason is just the same as above, whereas it now should be ""mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element)""",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r219822513,219822513,test/functional/p2p_segwit.py
JustinTArthur,2018-09-26T02:11:21Z,I agree. Thanks for the tip on assert_debug_log. I'm more familiar with Python than I am of the test suite. Addressed in a new commit.,https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220408478,220408478,test/functional/p2p_segwit.py
JustinTArthur,2018-09-26T02:11:55Z,Addressed in a new commit.,https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220408545,220408545,test/functional/p2p_segwit.py
MarcoFalke,2018-09-26T15:17:09Z,"nit: Could use the full error message here?\n\n`'was not accepted: mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element)'`",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220608073,220608073,test/functional/p2p_segwit.py
MarcoFalke,2018-09-26T15:17:38Z,"nit: Could use the full error message here?\n\n`'was not accepted: non-mandatory-script-verify-flag (Witness program was passed an empty witness)'`",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220608269,220608269,test/functional/p2p_segwit.py
jimmysong,2018-09-26T23:52:29Z,Any reason for not doing `__slots__ = ()` for `CScript` below?,https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220757942,220757942,test/functional/test_framework/script.py
JustinTArthur,2018-09-27T02:36:07Z,"I avoided it because it used to be [documented as impossible for variable length sequences](https://docs.python.org/2.5/ref/slots.html#l2h-252). Looks like [recent revisions have been updated](https://docs.python.org/3/reference/datamodel.html#notes-on-using-slots) to clarify that it's ok as long as it's an empty `__slots__`.\n\nI'll revise, test-to-confirm, and adjust the commit.",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220778450,220778450,test/functional/test_framework/script.py
JustinTArthur,2018-09-27T02:44:32Z,"Reasonable, will adjust commit.",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220779291,220779291,test/functional/p2p_segwit.py
JustinTArthur,2018-09-27T02:44:36Z,"Reasonable, will adjust commit.",https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220779298,220779298,test/functional/p2p_segwit.py
JustinTArthur,2018-09-27T03:17:15Z,Done,https://github.com/bitcoin/bitcoin/pull/14305#discussion_r220782900,220782900,test/functional/test_framework/script.py
