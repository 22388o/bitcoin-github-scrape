[
  {
    "sha": "fa457fbd3387661e1973a8f4e5cc2def79e0c625",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ1N2ZiZDMzODc2NjFlMTk3M2E4ZjRlNWNjMmRlZjc5ZTBjNjI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-08T12:54:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-14T17:58:02Z"
      },
      "message": "move-only: Move NDEBUG compile time check to util/check",
      "tree": {
        "sha": "b067c61799628baa207c4a6fadfe6dec283b6320",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b067c61799628baa207c4a6fadfe6dec283b6320"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa457fbd3387661e1973a8f4e5cc2def79e0c625",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj8HQv+OAXgUpyIh+sgKBCHe4Y0pdWHjL2hNyTqcxYZjNyEfRtSbQMAdZkqUjpu\nA1QjCy7NdhYZpQz1FH/eIy6qCG9fRD7CAjB1c9HW6H7L/2VOWRxLHzAvBIIROQbT\neWS5G6PNX5hFWPFcjqJLgwURFAZBb1mlHhqBzQcVJUScvq971VoTueYsdLz2qT/D\novqCHW6cUeFupP7n/0JcmfRfEx+t81yMqkFzwFU3cSnJWUfx8BqHdfeqLs4s0R2B\nVYoBX217qwRrg+a/P3cgA3ZqE0mjaaH78eFugz/9pwExzQ7Q42MSBv+2dcFXBFZ8\nVE/Aa/0yXbbNvmsBfD+NPQWjNmmWEk8HSAYZkvMt6vmE097FwStf6nsjbOj2cDbG\njDm9mHG3qRlQIg4VG/K5T4UXbzLzL6Ppe2/YfS0FRboxm1Ebn5CGajrcLJYpiNbB\noXTv/VaFn1f6DraWlWRBF95C0BEekvkUcoy06hJD9lMInw3GpkjhEqmtTSzL8tGH\nS1unMtZq\n=704j\n-----END PGP SIGNATURE-----",
        "payload": "tree b067c61799628baa207c4a6fadfe6dec283b6320\nparent eac65d99ddb27061e6ae0f9448887db86e2c0734\nauthor MarcoFalke <falke.marco@gmail.com> 1591620863 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592157482 -0400\n\nmove-only: Move NDEBUG compile time check to util/check\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa457fbd3387661e1973a8f4e5cc2def79e0c625",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa457fbd3387661e1973a8f4e5cc2def79e0c625",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa457fbd3387661e1973a8f4e5cc2def79e0c625/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eac65d99ddb27061e6ae0f9448887db86e2c0734",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac65d99ddb27061e6ae0f9448887db86e2c0734",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eac65d99ddb27061e6ae0f9448887db86e2c0734"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 9,
      "deletions": 11
    },
    "files": [
      {
        "sha": "06a6557b3b1c6e759973a88e7a390aa84a915738",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa457fbd3387661e1973a8f4e5cc2def79e0c625/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa457fbd3387661e1973a8f4e5cc2def79e0c625/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa457fbd3387661e1973a8f4e5cc2def79e0c625",
        "patch": "@@ -13,10 +13,9 @@\n #include <consensus/validation.h>\n #include <hash.h>\n #include <index/blockfilterindex.h>\n-#include <validation.h>\n #include <merkleblock.h>\n-#include <netmessagemaker.h>\n #include <netbase.h>\n+#include <netmessagemaker.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n #include <primitives/block.h>\n@@ -26,16 +25,14 @@\n #include <scheduler.h>\n #include <tinyformat.h>\n #include <txmempool.h>\n-#include <util/system.h>\n+#include <util/check.h> // For NDEBUG compile time check\n #include <util/strencodings.h>\n+#include <util/system.h>\n+#include <validation.h>\n \n #include <memory>\n #include <typeinfo>\n \n-#if defined(NDEBUG)\n-# error \"Bitcoin cannot be compiled without assertions.\"\n-#endif\n-\n /** Expiration time for orphan transactions in seconds */\n static constexpr int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */"
      },
      {
        "sha": "5cc078b36b836025e819f284c855019fec65553a",
        "filename": "src/util/check.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa457fbd3387661e1973a8f4e5cc2def79e0c625/src/util/check.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa457fbd3387661e1973a8f4e5cc2def79e0c625/src/util/check.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/check.h?ref=fa457fbd3387661e1973a8f4e5cc2def79e0c625",
        "patch": "@@ -42,4 +42,8 @@ class NonFatalCheckError : public std::runtime_error\n         }                                                         \\\n     } while (false)\n \n+#if defined(NDEBUG)\n+#error \"Cannot compile without assertions!\"\n+#endif\n+\n #endif // BITCOIN_UTIL_CHECK_H"
      },
      {
        "sha": "9f02db80c85ec817a7b2997ffcdfcd9587c6409f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa457fbd3387661e1973a8f4e5cc2def79e0c625/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa457fbd3387661e1973a8f4e5cc2def79e0c625/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa457fbd3387661e1973a8f4e5cc2def79e0c625",
        "patch": "@@ -39,6 +39,7 @@\n #include <ui_interface.h>\n #include <uint256.h>\n #include <undo.h>\n+#include <util/check.h> // For NDEBUG compile time check\n #include <util/moneystr.h>\n #include <util/rbf.h>\n #include <util/strencodings.h>\n@@ -51,10 +52,6 @@\n \n #include <boost/algorithm/string/replace.hpp>\n \n-#if defined(NDEBUG)\n-# error \"Bitcoin cannot be compiled without assertions.\"\n-#endif\n-\n #define MICRO 0.000001\n #define MILLI 0.001\n "
      }
    ]
  },
  {
    "sha": "fa6ef701adba1cb48535cac25fd43c742a82e40d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZlZjcwMWFkYmExY2I0ODUzNWNhYzI1ZmQ0M2M3NDJhODJlNDBk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-08T12:47:10Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-15T11:39:08Z"
      },
      "message": "util: Add Assert identity function\n\nThe utility is primarily useful to dereference pointer types, which are\nknown to be not null at that time.\n\nFor example, the ArgsManager is known to exist when the wallets are\nstarted. Instead of silently relying on that assumption, Assert can be\nused to abort the program and avoid UB should the assumption ever be\nviolated.",
      "tree": {
        "sha": "260e6b7232c595094dea9e545e7e9e5dbed17d12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/260e6b7232c595094dea9e545e7e9e5dbed17d12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6ef701adba1cb48535cac25fd43c742a82e40d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgblwv/SmMt8GrBk9IlZFCGAIKP9180W41sIMb6nRLBViyaMQxY4g5oTFxTih5V\n9WVMg2u7CAdYAjWjSfV9OfcxXctmlvnpMWiEYQuMGjTA1YBFYEHrLvMVnZK25CfL\nwpwCkGEj2NX/6Z/kRgfdWYTql3ugojMREaVJIyjBd1AmSf8ZcybfV4S5eepHXdP9\nhPbk8Vu667HIko1nAPQ9v8J4v6JpP4m00BHUXt4XerGTSs4S9ZtOx4/ox4NTP24f\njhjZwT5SXtghYu9+3nIm/fJtGGaVKdGI/X8RqEn320Nzj+1/ldqPFF2te5G+VkLO\njhb6GJbkkUEtO26OE8gv9vKepx1dYR7g1R/2rVuIAb02KNpx+o32acmSXnfwWBz3\niSbb2756gEvZS+UnJKkJSsSFCfW0/bG7VHmzMjyq0I7JFfzp88bZ45XnuYNKRRkJ\nDU3Z/s1X2PjgGpd9pl2aTAYoqjQWWZvLY+YtItjqvvtdgQ+FF7yUC1luO7uBgR0U\nlunzIjQM\n=mp4b\n-----END PGP SIGNATURE-----",
        "payload": "tree 260e6b7232c595094dea9e545e7e9e5dbed17d12\nparent fa457fbd3387661e1973a8f4e5cc2def79e0c625\nauthor MarcoFalke <falke.marco@gmail.com> 1591620430 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592221148 -0400\n\nutil: Add Assert identity function\n\nThe utility is primarily useful to dereference pointer types, which are\nknown to be not null at that time.\n\nFor example, the ArgsManager is known to exist when the wallets are\nstarted. Instead of silently relying on that assumption, Assert can be\nused to abort the program and avoid UB should the assumption ever be\nviolated.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6ef701adba1cb48535cac25fd43c742a82e40d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6ef701adba1cb48535cac25fd43c742a82e40d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6ef701adba1cb48535cac25fd43c742a82e40d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa457fbd3387661e1973a8f4e5cc2def79e0c625",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa457fbd3387661e1973a8f4e5cc2def79e0c625",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa457fbd3387661e1973a8f4e5cc2def79e0c625"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b0c74954db7ee21941ddfd0ee823ddce32fe681e",
        "filename": "src/test/util/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6ef701adba1cb48535cac25fd43c742a82e40d/src/test/util/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6ef701adba1cb48535cac25fd43c742a82e40d/src/test/util/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.cpp?ref=fa6ef701adba1cb48535cac25fd43c742a82e40d",
        "patch": "@@ -11,6 +11,7 @@\n #include <node/context.h>\n #include <pow.h>\n #include <script/standard.h>\n+#include <util/check.h>\n #include <validation.h>\n \n CTxIn generatetoaddress(const NodeContext& node, const std::string& address)\n@@ -39,9 +40,8 @@ CTxIn MineBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)\n \n std::shared_ptr<CBlock> PrepareBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)\n {\n-    assert(node.mempool);\n     auto block = std::make_shared<CBlock>(\n-        BlockAssembler{*node.mempool, Params()}\n+        BlockAssembler{*Assert(node.mempool), Params()}\n             .CreateNewBlock(coinbase_scriptPubKey)\n             ->block);\n "
      },
      {
        "sha": "b70039e8489076e162c080327c0f5bb75f1a0b69",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6ef701adba1cb48535cac25fd43c742a82e40d/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6ef701adba1cb48535cac25fd43c742a82e40d/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fa6ef701adba1cb48535cac25fd43c742a82e40d",
        "patch": "@@ -13,6 +13,7 @@\n #include <random.h>\n #include <scheduler.h>\n #include <txmempool.h>\n+#include <util/check.h>\n #include <util/string.h>\n \n #include <type_traits>"
      },
      {
        "sha": "3d534fd33e0a6bfa4f6ddbe780d01d2c9cde7902",
        "filename": "src/util/check.h",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6ef701adba1cb48535cac25fd43c742a82e40d/src/util/check.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6ef701adba1cb48535cac25fd43c742a82e40d/src/util/check.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/check.h?ref=fa6ef701adba1cb48535cac25fd43c742a82e40d",
        "patch": "@@ -25,7 +25,7 @@ class NonFatalCheckError : public std::runtime_error\n  * - where the condition is assumed to be true, not for error handling or validating user input\n  * - where a failure to fulfill the condition is recoverable and does not abort the program\n  *\n- * For example in RPC code, where it is undersirable to crash the whole program, this can be generally used to replace\n+ * For example in RPC code, where it is undesirable to crash the whole program, this can be generally used to replace\n  * asserts or recoverable logic errors. A NonFatalCheckError in RPC code is caught and passed as a string to the RPC\n  * caller, which can then report the issue to the developers.\n  */\n@@ -46,4 +46,14 @@ class NonFatalCheckError : public std::runtime_error\n #error \"Cannot compile without assertions!\"\n #endif\n \n+/** Helper for Assert(). TODO remove in C++14 and replace `decltype(get_pure_r_value(val))` with `T` (templated lambda) */\n+template <typename T>\n+T get_pure_r_value(T&& val)\n+{\n+    return std::forward<T>(val);\n+}\n+\n+/** Identity function. Abort if the value compares equal to zero */\n+#define Assert(val) [&]() -> decltype(get_pure_r_value(val))& { auto& check = (val); assert(#val && check); return check; }()\n+\n #endif // BITCOIN_UTIL_CHECK_H"
      },
      {
        "sha": "d30a8ca231a667fe4c52af681d39e9b032ef2ffc",
        "filename": "test/lint/lint-assertions.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6ef701adba1cb48535cac25fd43c742a82e40d/test/lint/lint-assertions.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6ef701adba1cb48535cac25fd43c742a82e40d/test/lint/lint-assertions.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-assertions.sh?ref=fa6ef701adba1cb48535cac25fd43c742a82e40d",
        "patch": "@@ -23,7 +23,7 @@ fi\n # Macro CHECK_NONFATAL(condition) should be used instead of assert for RPC code, where it\n # is undesirable to crash the whole program. See: src/util/check.h\n # src/rpc/server.cpp is excluded from this check since it's mostly meta-code.\n-OUTPUT=$(git grep -nE 'assert *\\(.*\\);' -- \"src/rpc/\" \"src/wallet/rpc*\" \":(exclude)src/rpc/server.cpp\")\n+OUTPUT=$(git grep -nE '\\<(A|a)ssert *\\(.*\\);' -- \"src/rpc/\" \"src/wallet/rpc*\" \":(exclude)src/rpc/server.cpp\")\n if [[ ${OUTPUT} != \"\" ]]; then\n     echo \"CHECK_NONFATAL(condition) should be used instead of assert for RPC code.\"\n     echo"
      }
    ]
  },
  {
    "sha": "fa34587f1c811d99200453b0936219c473f514b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTM0NTg3ZjFjODExZDk5MjAwNDUzYjA5MzYyMTljNDczZjUxNGIw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-14T18:44:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-15T11:39:26Z"
      },
      "message": "scripted-diff: Replace EnsureChainman with Assert in unit tests\n\n-BEGIN VERIFY SCRIPT-\nsed --regexp-extended -i -e 's/EnsureChainman\\((m?_?node)\\)\\./Assert(\\1.chainman)->/g' $(git grep -l EnsureChainman)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "c9bdab467f7f00940e28cf0e2d71b407c09dbe92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9bdab467f7f00940e28cf0e2d71b407c09dbe92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa34587f1c811d99200453b0936219c473f514b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgS1gv/Ro5o0HgZZyGLooLDpgIsMBQhDRLGK2bBLZN0VTX2t9A4eUrp5KKZ7WcO\nkGA9QnVSZsHLXfMYhbR3o1b0AYQsZbQar3lvPdH3EHnH6aK0d+YjBpWxWho7x12C\nV/iuMrPkFBhAM939hgUXurDKbLCiUQsfvtLqPZ6tQ2p5yWYCGelhhFiqcqDpv3FY\n/mw1St3B1eUjkt6ZfrGDhU8zhj+kOw6s2hLwqzzkSy27KkBqmETNI6y/SvPxAFo9\nthqBNUSS1SEZRSP8AJsxWOoV1QpN0NH+gyqO4A93BpsgaC4h33tCBn4RbbGNNbE0\nPeHjzb+s38Pp3bdvQufslkuVwyS/IzjkQSUilobrZYHMyipOzufvA8zcDoyg+E+E\naHdOFn05YrH2Lwe1kuiM0emgM7MVxSknb2KMuA6XNPWZAhuc+uBL5ND+vShhuy7w\n1ISK+vPg1kScgzepXiPxfceb8kjoYvIs5EKfDvLMKdrX923fylZlS9p2jVtDWC+h\nLHNis1k5\n=Eip3\n-----END PGP SIGNATURE-----",
        "payload": "tree c9bdab467f7f00940e28cf0e2d71b407c09dbe92\nparent fa6ef701adba1cb48535cac25fd43c742a82e40d\nauthor MarcoFalke <falke.marco@gmail.com> 1592160275 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592221166 -0400\n\nscripted-diff: Replace EnsureChainman with Assert in unit tests\n\n-BEGIN VERIFY SCRIPT-\nsed --regexp-extended -i -e 's/EnsureChainman\\((m?_?node)\\)\\./Assert(\\1.chainman)->/g' $(git grep -l EnsureChainman)\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa34587f1c811d99200453b0936219c473f514b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa34587f1c811d99200453b0936219c473f514b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa34587f1c811d99200453b0936219c473f514b0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa6ef701adba1cb48535cac25fd43c742a82e40d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6ef701adba1cb48535cac25fd43c742a82e40d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6ef701adba1cb48535cac25fd43c742a82e40d"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "00c4bdc14efb2f41197b636d62f24c582f1e687d",
        "filename": "src/test/blockfilter_index_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa34587f1c811d99200453b0936219c473f514b0/src/test/blockfilter_index_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa34587f1c811d99200453b0936219c473f514b0/src/test/blockfilter_index_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_index_tests.cpp?ref=fa34587f1c811d99200453b0936219c473f514b0",
        "patch": "@@ -94,7 +94,7 @@ bool BuildChainTestingSetup::BuildChain(const CBlockIndex* pindex,\n         CBlockHeader header = block->GetBlockHeader();\n \n         BlockValidationState state;\n-        if (!EnsureChainman(m_node).ProcessNewBlockHeaders({header}, state, Params(), &pindex)) {\n+        if (!Assert(m_node.chainman)->ProcessNewBlockHeaders({header}, state, Params(), &pindex)) {\n             return false;\n         }\n     }\n@@ -171,7 +171,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, BuildChainTestingSetup)\n     uint256 chainA_last_header = last_header;\n     for (size_t i = 0; i < 2; i++) {\n         const auto& block = chainA[i];\n-        BOOST_REQUIRE(EnsureChainman(m_node).ProcessNewBlock(Params(), block, true, nullptr));\n+        BOOST_REQUIRE(Assert(m_node.chainman)->ProcessNewBlock(Params(), block, true, nullptr));\n     }\n     for (size_t i = 0; i < 2; i++) {\n         const auto& block = chainA[i];\n@@ -189,7 +189,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, BuildChainTestingSetup)\n     uint256 chainB_last_header = last_header;\n     for (size_t i = 0; i < 3; i++) {\n         const auto& block = chainB[i];\n-        BOOST_REQUIRE(EnsureChainman(m_node).ProcessNewBlock(Params(), block, true, nullptr));\n+        BOOST_REQUIRE(Assert(m_node.chainman)->ProcessNewBlock(Params(), block, true, nullptr));\n     }\n     for (size_t i = 0; i < 3; i++) {\n         const auto& block = chainB[i];\n@@ -220,7 +220,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, BuildChainTestingSetup)\n     // Reorg back to chain A.\n      for (size_t i = 2; i < 4; i++) {\n          const auto& block = chainA[i];\n-         BOOST_REQUIRE(EnsureChainman(m_node).ProcessNewBlock(Params(), block, true, nullptr));\n+         BOOST_REQUIRE(Assert(m_node.chainman)->ProcessNewBlock(Params(), block, true, nullptr));\n      }\n \n      // Check that chain A and B blocks can be retrieved."
      },
      {
        "sha": "62a0dc42413f7c795ee61c3b3ac6ba91b46eca30",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa34587f1c811d99200453b0936219c473f514b0/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa34587f1c811d99200453b0936219c473f514b0/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=fa34587f1c811d99200453b0936219c473f514b0",
        "patch": "@@ -253,7 +253,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n             pblock->nNonce = blockinfo[i].nonce;\n         }\n         std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(*pblock);\n-        BOOST_CHECK(EnsureChainman(m_node).ProcessNewBlock(chainparams, shared_pblock, true, nullptr));\n+        BOOST_CHECK(Assert(m_node.chainman)->ProcessNewBlock(chainparams, shared_pblock, true, nullptr));\n         pblock->hashPrevBlock = pblock->GetHash();\n     }\n "
      },
      {
        "sha": "74536ae74ce28e6f4d055b5a92985522a0a4ca79",
        "filename": "src/test/util/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa34587f1c811d99200453b0936219c473f514b0/src/test/util/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa34587f1c811d99200453b0936219c473f514b0/src/test/util/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.cpp?ref=fa34587f1c811d99200453b0936219c473f514b0",
        "patch": "@@ -32,7 +32,7 @@ CTxIn MineBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)\n         assert(block->nNonce);\n     }\n \n-    bool processed{EnsureChainman(node).ProcessNewBlock(Params(), block, true, nullptr)};\n+    bool processed{Assert(node.chainman)->ProcessNewBlock(Params(), block, true, nullptr)};\n     assert(processed);\n \n     return CTxIn{block->vtx[0]->GetHash(), 0};"
      },
      {
        "sha": "b8a64c32317ed9e4ce794206f9af0df161ce05d8",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa34587f1c811d99200453b0936219c473f514b0/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa34587f1c811d99200453b0936219c473f514b0/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa34587f1c811d99200453b0936219c473f514b0",
        "patch": "@@ -228,7 +228,7 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     while (!CheckProofOfWork(block.GetHash(), block.nBits, chainparams.GetConsensus())) ++block.nNonce;\n \n     std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(block);\n-    EnsureChainman(m_node).ProcessNewBlock(chainparams, shared_pblock, true, nullptr);\n+    Assert(m_node.chainman)->ProcessNewBlock(chainparams, shared_pblock, true, nullptr);\n \n     CBlock result = block;\n     return result;"
      },
      {
        "sha": "8e85b7df3ee2b76964e7526bf506b80c8e761830",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa34587f1c811d99200453b0936219c473f514b0/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa34587f1c811d99200453b0936219c473f514b0/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=fa34587f1c811d99200453b0936219c473f514b0",
        "patch": "@@ -163,10 +163,10 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n     std::transform(blocks.begin(), blocks.end(), std::back_inserter(headers), [](std::shared_ptr<const CBlock> b) { return b->GetBlockHeader(); });\n \n     // Process all the headers so we understand the toplogy of the chain\n-    BOOST_CHECK(EnsureChainman(m_node).ProcessNewBlockHeaders(headers, state, Params()));\n+    BOOST_CHECK(Assert(m_node.chainman)->ProcessNewBlockHeaders(headers, state, Params()));\n \n     // Connect the genesis block and drain any outstanding events\n-    BOOST_CHECK(EnsureChainman(m_node).ProcessNewBlock(Params(), std::make_shared<CBlock>(Params().GenesisBlock()), true, &ignored));\n+    BOOST_CHECK(Assert(m_node.chainman)->ProcessNewBlock(Params(), std::make_shared<CBlock>(Params().GenesisBlock()), true, &ignored));\n     SyncWithValidationInterfaceQueue();\n \n     // subscribe to events (this subscriber will validate event ordering)\n@@ -188,13 +188,13 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n             FastRandomContext insecure;\n             for (int i = 0; i < 1000; i++) {\n                 auto block = blocks[insecure.randrange(blocks.size() - 1)];\n-                EnsureChainman(m_node).ProcessNewBlock(Params(), block, true, &ignored);\n+                Assert(m_node.chainman)->ProcessNewBlock(Params(), block, true, &ignored);\n             }\n \n             // to make sure that eventually we process the full chain - do it here\n             for (auto block : blocks) {\n                 if (block->vtx.size() == 1) {\n-                    bool processed = EnsureChainman(m_node).ProcessNewBlock(Params(), block, true, &ignored);\n+                    bool processed = Assert(m_node.chainman)->ProcessNewBlock(Params(), block, true, &ignored);\n                     assert(processed);\n                 }\n             }\n@@ -233,7 +233,7 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n {\n     bool ignored;\n     auto ProcessBlock = [&](std::shared_ptr<const CBlock> block) -> bool {\n-        return EnsureChainman(m_node).ProcessNewBlock(Params(), block, /* fForceProcessing */ true, /* fNewBlock */ &ignored);\n+        return Assert(m_node.chainman)->ProcessNewBlock(Params(), block, /* fForceProcessing */ true, /* fNewBlock */ &ignored);\n     };\n \n     // Process all mined blocks"
      },
      {
        "sha": "e27264e8d24d98da0cf69a76672024aac48585c7",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa34587f1c811d99200453b0936219c473f514b0/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa34587f1c811d99200453b0936219c473f514b0/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=fa34587f1c811d99200453b0936219c473f514b0",
        "patch": "@@ -118,7 +118,7 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     // Prune the older block file.\n     {\n         LOCK(cs_main);\n-        EnsureChainman(m_node).PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+        Assert(m_node.chainman)->PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n     }\n     UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n \n@@ -144,7 +144,7 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     // Prune the remaining block file.\n     {\n         LOCK(cs_main);\n-        EnsureChainman(m_node).PruneOneBlockFile(newTip->GetBlockPos().nFile);\n+        Assert(m_node.chainman)->PruneOneBlockFile(newTip->GetBlockPos().nFile);\n     }\n     UnlinkPrunedFiles({newTip->GetBlockPos().nFile});\n \n@@ -181,7 +181,7 @@ BOOST_FIXTURE_TEST_CASE(importmulti_rescan, TestChain100Setup)\n     // Prune the older block file.\n     {\n         LOCK(cs_main);\n-        EnsureChainman(m_node).PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+        Assert(m_node.chainman)->PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n     }\n     UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n "
      }
    ]
  },
  {
    "sha": "fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI4MGZlZjYxZGRkNGFmZWZmNmU0OTdjN2U3NmJmZmNkMDVlOGE0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-14T18:17:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-15T11:39:35Z"
      },
      "message": "refactor: Remove unused EnsureChainman",
      "tree": {
        "sha": "18eee04e36fc7dc2fc30c82da3608b7df4d2fca8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18eee04e36fc7dc2fc30c82da3608b7df4d2fca8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhBGAv/frR9rSM/2nBEXy7HrbRfdg7T20VDGCmn67Nmznk3/XWZ1MvUIL7E18a/\naVyUOE1IcZSokxjuxUaqjv3OdkNHcb7bJlt9uVibIeBM6vUZgDAKl3YJ90fwJYTw\nTGuVKaKaqbHfUSmKkOCELquPMrh4UMbEdJ6jguE9eHti4NRotvhHox7T7koqBpxf\n1SJ+4AWnm4JI0cx87V/IuOw1psCQrMovqWwqhCd/tnbXwE201mePJ7P4oDQ6Ebsg\n2lS9zvVOIemY77sTivElfN4o6r46SrtTtN98eKoevFSkO8Naipw6T9AjlXy+gBkV\n8QROdTfmVrZ9FkvP3ILf0LrLwUY/aZ44EmxOcFz+OrzA/CQF8wBY53cl/cQ1QfLZ\n/OWhclO4n8VjDZ0KTTtbvrqX4VMKfYywEqPywnj6Psm9NGmoNg2l0kPckXnSK4r5\nFo7j0sBzAW8l8p869Bp2V1tM4SYzpsYWcfoINGc5YVUyj/R072urK+h5oY2LPvLt\nJ/THQE+y\n=u01j\n-----END PGP SIGNATURE-----",
        "payload": "tree 18eee04e36fc7dc2fc30c82da3608b7df4d2fca8\nparent fa34587f1c811d99200453b0936219c473f514b0\nauthor MarcoFalke <falke.marco@gmail.com> 1592158644 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592221175 -0400\n\nrefactor: Remove unused EnsureChainman\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa34587f1c811d99200453b0936219c473f514b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa34587f1c811d99200453b0936219c473f514b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa34587f1c811d99200453b0936219c473f514b0"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "41b4700dde533339d9bb219871453507bd0fc3f7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
        "patch": "@@ -50,6 +50,7 @@\n #include <txmempool.h>\n #include <ui_interface.h>\n #include <util/asmap.h>\n+#include <util/check.h>\n #include <util/moneystr.h>\n #include <util/string.h>\n #include <util/system.h>\n@@ -1377,9 +1378,9 @@ bool AppInitMain(const util::Ref& context, NodeContext& node)\n     node.mempool = &::mempool;\n     assert(!node.chainman);\n     node.chainman = &g_chainman;\n-    ChainstateManager& chainman = EnsureChainman(node);\n+    ChainstateManager& chainman = *Assert(node.chainman);\n \n-    node.peer_logic.reset(new PeerLogicValidation(node.connman.get(), node.banman.get(), *node.scheduler, *node.chainman, *node.mempool));\n+    node.peer_logic.reset(new PeerLogicValidation(node.connman.get(), node.banman.get(), *node.scheduler, chainman, *node.mempool));\n     RegisterValidationInterface(node.peer_logic.get());\n \n     // sanitize comments per BIP-0014, format user agent and check total size"
      },
      {
        "sha": "c783c39cd6491b0416f7f5de9b2dc06b6e506ea2",
        "filename": "src/node/context.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/src/node/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/src/node/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.h?ref=fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
        "patch": "@@ -49,10 +49,4 @@ struct NodeContext {\n     ~NodeContext();\n };\n \n-inline ChainstateManager& EnsureChainman(const NodeContext& node)\n-{\n-    assert(node.chainman);\n-    return *node.chainman;\n-}\n-\n #endif // BITCOIN_NODE_CONTEXT_H"
      },
      {
        "sha": "cd1b27490dd106fee2f48a41e4592d27d50f6207",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab80fef61ddd4afeff6e497c7e76bffcd05e8a4/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fab80fef61ddd4afeff6e497c7e76bffcd05e8a4",
        "patch": "@@ -75,7 +75,10 @@ CTxMemPool& EnsureMemPool(const util::Ref& context)\n ChainstateManager& EnsureChainman(const util::Ref& context)\n {\n     NodeContext& node = EnsureNodeContext(context);\n-    return EnsureChainman(node);\n+    if (!node.chainman) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Node chainman not found\");\n+    }\n+    return *node.chainman;\n }\n \n /* Calculate the difficulty for a given block index."
      }
    ]
  }
]