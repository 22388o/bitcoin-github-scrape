laanwj,2016-12-16T16:19:51Z,"Yes, this looks better, thanks",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267631373,267631373,
theuni,2016-12-16T19:08:16Z,"Hmm, is it really necessary to have the system-specific bswaps anymore? Since we require a modern compiler, these are likely to be detected/optimized automatically anyway.\n\nTest file: https://gist.github.com/theuni/deb0b97c31890bd0a06a65dd3cb51822\ncompiled with gcc/clang: ```c++ -std=c++11 -O2 -c -o bswapcomp.o bswap.cpp```\n\nResults: https://gist.github.com/theuni/508b69da908be1e52bbdd0b",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267671592,267671592,
kallewoof,2016-12-16T23:17:20Z,"@theuni So you think it's better to basically `#undef` and `#define` them always for consistency?\n\nEdit: I meant to say that since we want the same thing to happen no matter which include order is taken, we might as well just redefine them each time on our own side.",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267719439,267719439,
theuni,2016-12-17T00:13:20Z,"@kallewoof I was suggesting just skipping the platform includes (byteswap.h/OSByteOrder.h), skipping the use of any system implementations, and renaming bswap_foo -> int_bswap_foo to avoid collisions.\n\nNeed others to chime in first though.",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267726627,267726627,
kallewoof,2016-12-17T01:15:41Z,FWIW I like the idea personally. ,https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267732744,267732744,
theuni,2016-12-17T08:10:02Z,"utACK https://github.com/bitcoin/bitcoin/pull/9366/commits/815f4148b2eff6c64c764e910e79677d5a67adc7 for the sake of fixing the build.\n\nDropping the system includes (or alternatively autoconfing this) can come as a next step if it's agreed upon.",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267749666,267749666,
laanwj,2016-12-19T07:27:59Z,"> Hmm, is it really necessary to have the system-specific bswaps anymore? Since we require a modern compiler, these are likely to be detected/optimized automatically anyway.\n\nIf there are bswap primitives, I think we should use them. This is used internally in the serialization as well as crypto operations, so performance here (if there is a compiler where it makes sense) does matter.\nIf you",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267898881,267898881,
laanwj,2016-12-19T07:29:30Z,"utACK https://github.com/bitcoin/bitcoin/pull/9366/commits/815f4148b2eff6c64c764e910e79677d5a67adc7, let's just fix this to fix the build, I think we've been through enough shed-painting here.",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-267899059,267899059,
droark,2017-02-01T00:23:38Z,"FYI, I [backported this to 0.13](https://github.com/bitcoin/bitcoin/pull/9660). I noticed it when trying to compile the Elements Alpha refresh.",https://github.com/bitcoin/bitcoin/pull/9366#issuecomment-276537129,276537129,
laanwj,2016-12-16T16:20:41Z,"I'd prefer moving this one to the qt unit tests, instead of adding a qt-specific unit test to the core unit tests.",https://github.com/bitcoin/bitcoin/pull/9366#discussion_r92839747,92839747,src/test/bswap_protobuf_tests.cpp
kallewoof,2016-12-17T01:35:09Z,"I moved this into a new ""CompatTests"" test suite in the QT tests.",https://github.com/bitcoin/bitcoin/pull/9366#discussion_r92911544,92911544,src/test/bswap_protobuf_tests.cpp
