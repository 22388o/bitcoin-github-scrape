[
  {
    "sha": "815f4148b2eff6c64c764e910e79677d5a67adc7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTVmNDE0OGIyZWZmNmM2NGM3NjRlOTEwZTc5Njc3ZDVhNjdhZGM3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-16T07:52:35Z"
      },
      "committer": {
        "name": "Kalle Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2016-12-17T03:27:00Z"
      },
      "message": "Uses built-in byte swap if available (Apple) and if bswap_XX is undefined.\n\nDefers to pre-defined version if found (e.g. protobuf). For protobuf case, the definitions are identical and thus include order should not affect results.",
      "tree": {
        "sha": "1b9e3e892ca7e6ec21b607a96b4c7ca97da1d3dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b9e3e892ca7e6ec21b607a96b4c7ca97da1d3dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/815f4148b2eff6c64c764e910e79677d5a67adc7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/815f4148b2eff6c64c764e910e79677d5a67adc7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/815f4148b2eff6c64c764e910e79677d5a67adc7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/815f4148b2eff6c64c764e910e79677d5a67adc7/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9e00591cd3fce7b7cf20730922d45991ce9aece",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9e00591cd3fce7b7cf20730922d45991ce9aece",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9e00591cd3fce7b7cf20730922d45991ce9aece"
      }
    ],
    "stats": {
      "total": 95,
      "additions": 95,
      "deletions": 0
    },
    "files": [
      {
        "sha": "039f8ac547acd8d2c53e0c82132f10a225067d90",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -6,6 +6,7 @@ bin_PROGRAMS += qt/test/test_bitcoin-qt\n TESTS += qt/test/test_bitcoin-qt\n \n TEST_QT_MOC_CPP = \\\n+  qt/test/moc_compattests.cpp \\\n   qt/test/moc_rpcnestedtests.cpp \\\n   qt/test/moc_uritests.cpp\n \n@@ -14,6 +15,7 @@ TEST_QT_MOC_CPP += qt/test/moc_paymentservertests.cpp\n endif\n \n TEST_QT_H = \\\n+  qt/test/compattests.h \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n   qt/test/paymentrequestdata.h \\\n@@ -23,6 +25,7 @@ qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n qt_test_test_bitcoin_qt_SOURCES = \\\n+  qt/test/compattests.cpp \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\"
      },
      {
        "sha": "5969de087ed9ebada06a0a850ef3f0f3f0306c17",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -52,6 +52,7 @@ BITCOIN_TESTS =\\\n   test/bip32_tests.cpp \\\n   test/blockencodings_tests.cpp \\\n   test/bloom_tests.cpp \\\n+  test/bswap_tests.cpp \\\n   test/coins_tests.cpp \\\n   test/compress_tests.cpp \\\n   test/crypto_tests.cpp \\"
      },
      {
        "sha": "56f4240e49d8d68589c9a2e7111d44e0ee4f978e",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -15,6 +15,23 @@\n #include <byteswap.h>\n #endif\n \n+#if defined(__APPLE__)\n+\n+#if !defined(bswap_16)\n+\n+// Mac OS X / Darwin features; we include a check for bswap_16 because if it is already defined, protobuf has\n+// defined these macros for us already; if it isn't, we do it ourselves. In either case, we get the exact same\n+// result regardless which path was taken\n+#include <libkern/OSByteOrder.h>\n+#define bswap_16(x) OSSwapInt16(x)\n+#define bswap_32(x) OSSwapInt32(x)\n+#define bswap_64(x) OSSwapInt64(x)\n+\n+#endif // !defined(bswap_16)\n+\n+#else\n+// Non-Mac OS X / non-Darwin\n+\n #if HAVE_DECL_BSWAP_16 == 0\n inline uint16_t bswap_16(uint16_t x)\n {\n@@ -44,4 +61,6 @@ inline uint64_t bswap_64(uint64_t x)\n }\n #endif // HAVE_DECL_BSWAP64\n \n+#endif // defined(__APPLE__)\n+\n #endif // BITCOIN_COMPAT_BYTESWAP_H"
      },
      {
        "sha": "2a7284b5b2262834c4b537091e62d5848b09e44c",
        "filename": "src/qt/test/compattests.cpp",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/qt/test/compattests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/qt/test/compattests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/compattests.cpp?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"paymentrequestplus.h\" // this includes protobuf's port.h which defines its own bswap macos\n+\n+#include \"compattests.h\"\n+\n+#include \"compat/byteswap.h\"\n+\n+void CompatTests::bswapTests()\n+{\n+\t// Sibling in bitcoin/src/test/bswap_tests.cpp\n+\tuint16_t u1 = 0x1234;\n+\tuint32_t u2 = 0x56789abc;\n+\tuint64_t u3 = 0xdef0123456789abc;\n+\tuint16_t e1 = 0x3412;\n+\tuint32_t e2 = 0xbc9a7856;\n+\tuint64_t e3 = 0xbc9a78563412f0de;\n+\tQVERIFY(bswap_16(u1) == e1);\n+\tQVERIFY(bswap_32(u2) == e2);\n+\tQVERIFY(bswap_64(u3) == e3);\n+}"
      },
      {
        "sha": "35dede774344cd4ddda861d0d46855421f36e22e",
        "filename": "src/qt/test/compattests.h",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/qt/test/compattests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/qt/test/compattests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/compattests.h?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_TEST_COMPATTESTS_H\n+#define BITCOIN_QT_TEST_COMPATTESTS_H\n+\n+#include <QObject>\n+#include <QTest>\n+\n+class CompatTests : public QObject\n+{\n+    Q_OBJECT\n+\n+private Q_SLOTS:\n+    void bswapTests();\n+};\n+\n+#endif // BITCOIN_QT_TEST_COMPATTESTS_H"
      },
      {
        "sha": "d44d711315d848065fefc5523e73550e540bf3f8",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -11,6 +11,7 @@\n #include \"rpcnestedtests.h\"\n #include \"util.h\"\n #include \"uritests.h\"\n+#include \"compattests.h\"\n \n #ifdef ENABLE_WALLET\n #include \"paymentservertests.h\"\n@@ -61,6 +62,9 @@ int main(int argc, char *argv[])\n     RPCNestedTests test3;\n     if (QTest::qExec(&test3) != 0)\n         fInvalid = true;\n+    CompatTests test4;\n+    if (QTest::qExec(&test4) != 0)\n+        fInvalid = true;\n \n     ECC_Stop();\n     return fInvalid;"
      },
      {
        "sha": "7b3134d327d9b28af9e3f677d7f525baa3d62feb",
        "filename": "src/test/bswap_tests.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/815f4148b2eff6c64c764e910e79677d5a67adc7/src/test/bswap_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/815f4148b2eff6c64c764e910e79677d5a67adc7/src/test/bswap_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bswap_tests.cpp?ref=815f4148b2eff6c64c764e910e79677d5a67adc7",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"compat/byteswap.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(bswap_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(bswap_tests)\n+{\n+\t// Sibling in bitcoin/src/qt/test/compattests.cpp\n+\tuint16_t u1 = 0x1234;\n+\tuint32_t u2 = 0x56789abc;\n+\tuint64_t u3 = 0xdef0123456789abc;\n+\tuint16_t e1 = 0x3412;\n+\tuint32_t e2 = 0xbc9a7856;\n+\tuint64_t e3 = 0xbc9a78563412f0de;\n+\tBOOST_CHECK(bswap_16(u1) == e1);\n+\tBOOST_CHECK(bswap_32(u2) == e2);\n+\tBOOST_CHECK(bswap_64(u3) == e3);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]