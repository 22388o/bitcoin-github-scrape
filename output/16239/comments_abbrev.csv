DrahtBot,2019-06-19 07:20:14,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16240](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16240.html) (JSONRPCRequest-aware RPCHelpMan by kallewoo",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503439580,503439580,
kallewoof,2019-06-19 14:26:48,@promag Thanks a lot for review! I addressed everything you noted.,https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503584473,503584473,
kallewoof,2019-06-19 15:46:33,"@promag Thanks for thoroughness, it is very appreciated. Addressed all.",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503617599,503617599,
MarcoFalke,2019-06-19 15:49:45,"I left some review in the other pull, which could be addressed here?",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503618835,503618835,
kallewoof,2019-06-19 16:09:55,Addressed @MarcoFalke comments in #13756. Thanks for feedback!,https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503626911,503626911,
kallewoof,2019-06-19 16:55:07,"@MarcoFalke Thanks, I missed that one. I believe I got all of them this time. Also updated release notes based on your suggestions.",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503643428,503643428,
MarcoFalke,2019-06-19 16:59:19,ACK b59d4c7da1b886a0834211e70850127faf3e121e (scrolled through the diff on GitHub),https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-503644901,503644901,
kallewoof,2019-06-21 02:38:30,@jnewbery thanks! Trimmed tests as suggested.,https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504267046,504267046,
meshcollider,2019-06-21 07:55:16,"Code looks good, code review ACK https://github.com/bitcoin/bitcoin/pull/16239/commits/7f39c40a332824043e3bef282580daf748131bb4\n\nI'm just slightly unsure about the word ""used"" in the getbalance RPC, could seem like the balance which has been used (spent) rather than the balance which is ""dirty"" or ""reused"" or something\n",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504330493,504330493,
kallewoof,2019-06-21 12:29:28,"I initially used the word ""dirty"", but then realized that is internally used for something else in the wallet, and there was a comment about ""dirty"" being confusing in https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408214120\n\n> I think ""dirty"" is a confusing concept. Maybe add an exclamation mark (or a detective icon) next to the transaction and when the user clicks on that, say so",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504408018,504408018,
jnewbery,2019-06-21 13:29:34,"> I'm open for changing it, but I'm not sure what would be a good name for it.\n\nHow about ""used address balance"" or ""reused address balance""? Bit of a mouthful, but at least it's explicit.",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504426017,504426017,
kallewoof,2019-06-21 13:54:20,"@jnewbery A bit long, maybe.. I mean, if we change it I would ideally like to change it everywhere, including the ""avoid_reuse"" flags in RPC commands and such.\n\nEven ""used""/""reused"" does not accurately describe what this is referring to, as evident by the fact I as the author screwed it up (thankfully @jnewbery caught that one).\n\n""UTXO/balance that was sent to an address after it was spent",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504434330,504434330,
jnewbery,2019-06-21 18:28:33,"ACK 71d0344cf25d3aaf60112c5248198c444bc98105\n\nThanks for quick turnaround!",https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504526356,504526356,
meshcollider,2019-06-22 09:58:06,re-utACK https://github.com/bitcoin/bitcoin/pull/16239/commits/71d0344cf25d3aaf60112c5248198c444bc98105,https://github.com/bitcoin/bitcoin/pull/16239#issuecomment-504650958,504650958,
promag,2019-06-19 13:39:37,"7e7bb17352a3a74e142eae20572a163384fa1502\n\nOnly present if `avoid_reuse` flag is set.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295302127,295302127,src/wallet/rpcwallet.cpp
promag,2019-06-19 13:39:59,"7e7bb17352a3a74e142eae20572a163384fa1502\n\nnit, const",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295302333,295302333,src/wallet/rpcwallet.cpp
promag,2019-06-19 13:41:47,"7e7bb17352a3a74e142eae20572a163384fa1502\n\nMaybe test that this is not present if `avoid_reused` flag is not set.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295303211,295303211,src/wallet/rpcwallet.cpp
promag,2019-06-19 13:46:41,"5e704ab66336eafef2955e3087f7bbf8c7ca26cd\n\nMove after wallet lock in L3023.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295305739,295305739,src/wallet/rpcwallet.cpp
promag,2019-06-19 13:47:18,"5e704ab66336eafef2955e3087f7bbf8c7ca26cd\n\nMention ""only present if avoid_reuse flag is set"".",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295306055,295306055,src/wallet/rpcwallet.cpp
kallewoof,2019-06-19 14:22:34,"Adding check to wallet_avoidreuse.py that node 0 does not include a ""used"" key.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295325961,295325961,src/wallet/rpcwallet.cpp
promag,2019-06-19 14:45:40,"nit, const.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295339124,295339124,src/wallet/rpcwallet.cpp
promag,2019-06-19 15:03:13,"nit, IMO these assertions aren't necessary, `assert_approx` are enough.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295348857,295348857,test/functional/wallet_avoidreuse.py
kallewoof,2019-06-19 15:46:17,"Yeah, agreed, removing.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295371614,295371614,test/functional/wallet_avoidreuse.py
MarcoFalke,2019-06-19 16:29:39,"```suggestion\nRescanning the blockchain is required, to correctly mark previously\n```",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295393035,295393035,doc/release-notes-13756.md
MarcoFalke,2019-06-19 16:30:47,"```suggestion\nIn addition, `sendtoaddress` has been changed to avoid partial spends ... (if not already enabled via the  `-avoidpartialspends` command line flag) ...\n```",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295393555,295393555,doc/release-notes-13756.md
jnewbery,2019-06-20 17:34:49,I don't think `watchonly` is ever used. Just remove it (and the `if watchonly` block in the function),https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295917922,295917922,test/functional/wallet_avoidreuse.py
jnewbery,2019-06-20 17:36:26,"You can remove these change since `assert_balances()` is never called with `watchonly`, and so `assert_approx()` is only called for `mine` balances.",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r295918585,295918585,test/functional/wallet_avoidreuse.py
jnewbery,2019-06-21 15:33:17,"I felt like this logic could have used more commenting, and the variable was a bit confusingly named (and also could potentially be scoped more tightly).\n\nI think the following is equivalent, but perhaps a little clearer:\n\n```\nâ†’ git d\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\nindex ce1c94905..f53469ce6 100644\n--- a/src/wallet/rpcwallet.cpp\n+++ b/src/wallet/",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r296287372,296287372,src/wallet/rpcwallet.cpp
jnewbery,2019-06-21 15:35:40,micronit (not worth changing): could be combined with line above,https://github.com/bitcoin/bitcoin/pull/16239#discussion_r296288275,296288275,test/functional/wallet_avoidreuse.py
kallewoof,2019-06-21 17:43:53,"Yep, that looks cleaner. Thanks!",https://github.com/bitcoin/bitcoin/pull/16239#discussion_r296331852,296331852,src/wallet/rpcwallet.cpp
