sipa,2016-08-24T07:14:09Z,"As pointed out elsewhere, we first need a means to distinguish pruned nodes from nodes that don't relay/verify at all.\n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-241977073,241977073,
rebroad,2016-08-24T07:16:43Z,"@sipa Why ""first""? Yes, I agree that we need this, but how is banning useful pruning nodes a way forward?\n\nAnd anyway, there's nothing to stop a node advertising as NODE_NETWORK yet not relaying/verifying, so simply banning nodes that don't set NODE_NETWORK is 0% reliable, isn't it?\n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-241977624,241977624,
sipa,2016-08-24T07:24:26Z,"We're always relying on having at least one homest peer.\n\nIt was completely intentional that pruning nodes would not be connected to,\nas we had no means in the protocol to advertize\nfull-node-but-no-old-blocks. Several suggestions for this have been made,\nbut there are several issues that make it difficult. Perhaps it is time to\nrestart that discussion.\n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-241979131,241979131,
pstratem,2016-08-24T08:33:57Z,"Also this commit should just be change the requires services flags, not removing the check.\n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-241994465,241994465,
rebroad,2016-08-24T09:48:12Z,"@pstratem I thought of that - an equally valid place to change it, IMHO\n\n@sipa Where is the right place to have that discussion? I guess the other place to ""fix"" this is to change it so that pruning nodes still advertise as NODE_NETWORK. Perhaps that is a better solution, and then upon connection the node can establish how far back its blocks go. Storing the services bits in the address database",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242011559,242011559,
sipa,2016-08-24T17:02:09Z,"@rebroad Pruning nodes can't advertize NODE_NETWORK, because NODE_NETWORK implies they can serve old blocks.\n\nWe can have a discussion on the mailing list about new flags or means to advertize what ranges a node has available for download. I believe this PR is in error though - it tries to incorrectly change something that is by design. NACK.\n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242137422,242137422,
gmaxwell,2016-08-25T18:33:11Z,"""banning useful pruning nodes a way forward"", please be more careful with your comments. It doesn't ban anything here, it just doesn't connect out to them.  I can envision the headlines now, ""bitcoin core bans pruned nodes!""-- it's just not so. :)\n\nAs mentioned in the other PR we need a service type for nodes that relay near-tip that defines how much they must retain, at a minimum. \n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242493800,242493800,
isle2983,2016-08-26T01:36:18Z,Nit - this change leaves the declaration of REQUIRED_SERVICES in src/net.h behind as dead code. It should probably be removed too.\n,https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242597454,242597454,
rebroad,2016-08-26T04:20:03Z,"@sipa meanings change over time. NETWORK_NODE used to mean that this node was worth connecting to for obtaining blocks. It can still mean this, but by making pruned nodes not have this flag, it is changing the meaning. Before pruning nodes existed, no one was defining NETWORK_NODE as specifically as ""a node that provides blocks all the way from the latest block to the genesis block"" because it was",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242626766,242626766,
rebroad,2016-08-26T04:43:03Z,"@pstratem @isle2983 Have removed REQUIRED_SERVICES variable now, as it was providing no value other than moving the logic away from where it was needed (which I'd argue was a negative value). I've also made it so that the logic about requiring NETWORK_NODE is back, but now only during IBD, afterwhich, pruned nodes will also be selected - obviously they need to be in the address list for this to ha",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242628972,242628972,
sipa,2016-08-26T07:15:35Z,"@rebroad The meaning of NODE_NETWORK can certainly change, but we still\nneed a way to distinguish light nodes that don't relay at all.\n\nWe're going from a situation where there are two classes of nodes (full\nnode vs light nose) to a situation with at least 3 classes (full node that\ndoes not have all historical blocks). Since you can't encode 3 states into\na single flag, we'll need to add at ",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242648639,242648639,
sipa,2016-08-26T12:34:27Z,"NODE_NETWORK is and remains required for connections. We don't ever want to waste a connection slot on a node that does not even claim to relay blocks and transactions.\n\nWe can discuss how to introduce service flags to indicate lack of archive functionality, but this is not the way.\n\nNACK.\n",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242723306,242723306,
sipa,2016-08-26T12:38:47Z,See the discussion about service bits for pruned nodes here: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/thread.html#2461\n,https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242724167,242724167,
rebroad,2016-08-28T03:23:05Z,"@sipa Thanks for the consideration you gave this. I'm in agreement that the code needs refining as we need to ensure a minimum number of NODE_NETWORKS nodes to connect to, which these changes would not guarantee, admittedly.  Have changed to [WIP], as I'm working on refining this, although perhaps closing it is better for now...\n\nThe work I refer to is to make use of pruned nodes better than we ",https://github.com/bitcoin/bitcoin/pull/8572#issuecomment-242953798,242953798,
