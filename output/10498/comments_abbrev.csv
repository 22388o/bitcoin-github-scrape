benma,2017-06-01T13:03:01Z,utACK 1a3c1e24cbce60910843f434dc6c489d03eaed1d,https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-305486506,305486506,
benma,2017-06-04T21:28:36Z,utACK 6090e51b5d3f8024197a31e6a5a50b812ba10aca,https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-306068180,306068180,
MarcoFalke,2017-06-05T16:02:05Z,utACK 6090e51b5d3f8024197a31e6a5a50b812ba10aca does not change the binariy on my platform,https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-306227906,306227906,
practicalswift,2017-07-17T18:14:05Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-315836541,315836541,
practicalswift,2017-08-14T15:44:11Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-322226647,322226647,
practicalswift,2017-09-10T19:06:45Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-328364417,328364417,
practicalswift,2017-09-22T14:05:44Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-331456457,331456457,
practicalswift,2018-01-31T12:45:49Z,Anyone willing to review? ACK or NACK? :-),https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-361921694,361921694,
ghost,2018-01-31T17:34:15Z,"Why not go the extra mile and also add -Wold-style-cast, otherwise you'll be back fixing it a week later.",https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-362009356,362009356,
MarcoFalke,2018-01-31T18:07:05Z,"re-reviewed\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-utACK 9ad6746ccd6dc31141fd0144686b641e31bf626b\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJacgWeAAoJENLqSFDnUoslDH0P/0t30sv4UootDVMUutXKfnsK\nmHKRDOKMbWLYQonJ93x89Oll+U+r+B7m7CzlxqxUNI2Zd6DETOprwLAG8F1yKHez\nJUjjndpfP/6wgzyv+YEJPehFL2vVSu3Di0j82qk/1vSaYHA94bh6Y+pRnVE65951\nYdpuD0scPfXIMuR93swiGpw8ttFEqZVcGt",https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-362019454,362019454,
practicalswift,2018-02-01T08:33:55Z,"@kekimusmaximus That would be nice but I think there might be some instances of C-style casts for non-fundamental types in our dependencies, no? :-)",https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-362194787,362194787,
ryanofsky,2018-02-07T21:10:24Z,"Seems like this could be merged: obvious change, has 3 acks.",https://github.com/bitcoin/bitcoin/pull/10498#issuecomment-363911709,363911709,
benma,2017-06-01T12:53:22Z,maybe `std::string(NetMsgType::BLOCK)` is nicer here.,https://github.com/bitcoin/bitcoin/pull/10498#discussion_r119605109,119605109,src/net_processing.cpp
benma,2017-06-01T12:58:52Z,"Why doesn't this need a cont_cast? `this` is `const`, isn't it?",https://github.com/bitcoin/bitcoin/pull/10498#discussion_r119606319,119606319,src/primitives/block.h
practicalswift,2017-06-04T21:12:02Z,"@benma `this` isn't `const` in the constructor:\n\n> The type of this in a member function of class X is X* (pointer to X). If the member function is cv-qualified, the type of this is cv X* (pointer to identically cv-qualified X). Since constructors and destructors cannot be cv-qualified, the type of this in them is always X*, even when constructing or destroying a const object. ([cppreference.c",https://github.com/bitcoin/bitcoin/pull/10498#discussion_r120021086,120021086,src/primitives/block.h
benma,2017-06-04T21:20:17Z,"Of course, `this` is only const if the function is const. My bad.",https://github.com/bitcoin/bitcoin/pull/10498#discussion_r120021296,120021296,src/primitives/block.h
Sjors,2018-02-10T21:01:54Z,"~Maybe unrelated, but~ I'm trying to make a Gitian Windows build for a branch based off of master and it throws:\n```\nqt/bitcoin.cpp: In function ‘int main(int, char**)’:\nqt/bitcoin.cpp:709:173: error: invalid static_cast from type ‘WId {aka unsigned int}’ to type ‘HWND’\n             WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(""%1 didn't yet exit safely..."").arg(QObject::tr(",https://github.com/bitcoin/bitcoin/pull/10498#discussion_r167410975,167410975,src/qt/bitcoin.cpp
Sjors,2018-02-10T21:09:12Z,Just noticed #12386...,https://github.com/bitcoin/bitcoin/pull/10498#discussion_r167411147,167411147,src/qt/bitcoin.cpp
