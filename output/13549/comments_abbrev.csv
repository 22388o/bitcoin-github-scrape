achow101,2018-06-27T21:47:08Z,utACK 313124067009e372a7d3726b6286d0001cd3ba78,https://github.com/bitcoin/bitcoin/pull/13549#issuecomment-400839690,400839690,
DrahtBot,2018-06-28T09:29:13Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13307 (Replace coin selection fallback strategy with Single Random Draw by achow101)\n* #12257 ([wallet] Use destination groups instead of coins in coin select by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ide",https://github.com/bitcoin/bitcoin/pull/13549#issuecomment-400973083,400973083,
MarcoFalke,2018-06-28T10:35:27Z,"Everything other than `SelectCoinsMinConf` can be moved out of the hot loop, since we don't want to measure the performance of `addCoin`. (Looks like creating and deleting the wallet takes about 20% of the whole benchmark time)",https://github.com/bitcoin/bitcoin/pull/13549#issuecomment-400991319,400991319,
Xekyo,2018-06-27T17:28:49Z,"Perhaps it should also be clarified why the two are expected to have different results given that they have exactly the same input parameters. I assume that the first pass sets bnb_used to true, but @achow101 should be able to clarify.",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198578409,198578409,src/bench/coin_selection.cpp
achow101,2018-06-27T18:17:58Z,This seems like a mistake. The first pass should be using BnB with its own CoinSelectionParams which signals for BnB to be used.,https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198593813,198593813,src/bench/coin_selection.cpp
practicalswift,2018-06-27T19:49:18Z,@achow101 What is the correct `CoinSelectionParams` for the first pass? :-),https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198619197,198619197,src/bench/coin_selection.cpp
achow101,2018-06-27T21:02:49Z,"```\nCoinSelectionParams coin_selection_params(true, 34, 148, CFeeRate(0), 0);\n```",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198640055,198640055,src/bench/coin_selection.cpp
practicalswift,2018-06-27T21:39:05Z,@achow101 Thanks! Please re-review updated version :-),https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198649830,198649830,src/bench/coin_selection.cpp
promag,2018-06-28T10:19:28Z,"Looks like this is a 2 pass algorithm ðŸ˜› \n\nWhy not just `coin_selection_params.use_bnb = false;` and keep the same params?",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198790655,198790655,src/bench/coin_selection.cpp
promag,2018-06-28T10:21:42Z,"nit, inside the retry block:\n```cpp\n    assert(!bnb_used);\n}\n```",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198791244,198791244,src/bench/coin_selection.cpp
MarcoFalke,2018-06-28T10:31:54Z,"sucess is never false, so this is dead code?",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198793813,198793813,src/bench/coin_selection.cpp
promag,2018-06-28T10:36:15Z,You mean it should never be false as there is enough coins?,https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198794967,198794967,src/bench/coin_selection.cpp
MarcoFalke,2018-06-28T10:39:20Z,"Yes, otherwise the benchmark would currently fail, no?",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198795809,198795809,src/bench/coin_selection.cpp
achow101,2018-06-28T18:00:05Z,`success` can be false when BnB fails to find an exact match. The first pass should be using BnB (which is why it needs its own parameters with true set) which can fail. Then it falls back to not using BnB (which is the second params with false) which should never fail.,https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198932621,198932621,src/bench/coin_selection.cpp
promag,2018-06-28T18:05:35Z,But given the current input it always succeeds. I agree that a different test exercising that case would be nice.,https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198934234,198934234,src/bench/coin_selection.cpp
achow101,2018-06-28T18:36:29Z,"Ah, indeed. This should have different test cases to trigger both algorithms.",https://github.com/bitcoin/bitcoin/pull/13549#discussion_r198943856,198943856,src/bench/coin_selection.cpp
