[
  {
    "sha": "c3af143133a7447f7399c61bea67e60cd37d2e97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2FmMTQzMTMzYTc0NDdmNzM5OWM2MWJlYTY3ZTYwY2QzN2QyZTk3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-06-08T12:48:03Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-06-08T12:48:03Z"
      },
      "message": "Remove unreliable lookup-tx-by-utxo functionality",
      "tree": {
        "sha": "7847bc7e4a706cb3255afa8662e588e5116dc8ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7847bc7e4a706cb3255afa8662e588e5116dc8ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3af143133a7447f7399c61bea67e60cd37d2e97",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3af143133a7447f7399c61bea67e60cd37d2e97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3af143133a7447f7399c61bea67e60cd37d2e97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3af143133a7447f7399c61bea67e60cd37d2e97/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7c41f2de03c315394c0560f369544e24a3e5586",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7c41f2de03c315394c0560f369544e24a3e5586",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7c41f2de03c315394c0560f369544e24a3e5586"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 8,
      "deletions": 33
    },
    "files": [
      {
        "sha": "9ec93fe4866de0212a3d40b1d76ae7e6329e77a8",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3af143133a7447f7399c61bea67e60cd37d2e97/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3af143133a7447f7399c61bea67e60cd37d2e97/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=c3af143133a7447f7399c61bea67e60cd37d2e97",
        "patch": "@@ -11,7 +11,7 @@ Supported API\n \n Given a transaction hash: returns a transaction in binary, hex-encoded binary, or JSON formats.\n \n-For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n+This works only on unconfirmed transaction unless the transaction index is enabled via \"txindex=1\" command line / configuration option.\n \n ####Blocks\n `GET /rest/block/<BLOCK-HASH>.<bin|hex|json>`"
      },
      {
        "sha": "61b898620042dba6de754e462cf86294ad2d5877",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 26,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3af143133a7447f7399c61bea67e60cd37d2e97/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3af143133a7447f7399c61bea67e60cd37d2e97/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c3af143133a7447f7399c61bea67e60cd37d2e97",
        "patch": "@@ -1440,7 +1440,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock)\n {\n     CBlockIndex *pindexSlow = NULL;\n \n@@ -1474,31 +1474,6 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::P\n         }\n     }\n \n-    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-        int nHeight = -1;\n-        {\n-            const CCoinsViewCache& view = *pcoinsTip;\n-            const CCoins* coins = view.AccessCoins(hash);\n-            if (coins)\n-                nHeight = coins->nHeight;\n-        }\n-        if (nHeight > 0)\n-            pindexSlow = chainActive[nHeight];\n-    }\n-\n-    if (pindexSlow) {\n-        CBlock block;\n-        if (ReadBlockFromDisk(block, pindexSlow, consensusParams)) {\n-            BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n-                if (tx.GetHash() == hash) {\n-                    txOut = tx;\n-                    hashBlock = pindexSlow->GetBlockHash();\n-                    return true;\n-                }\n-            }\n-        }\n-    }\n-\n     return false;\n }\n "
      },
      {
        "sha": "f5744aae7d44855b27599b3f3184f18fd6a4ed08",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3af143133a7447f7399c61bea67e60cd37d2e97/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3af143133a7447f7399c61bea67e60cd37d2e97/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=c3af143133a7447f7399c61bea67e60cd37d2e97",
        "patch": "@@ -254,8 +254,8 @@ bool IsInitialBlockDownload();\n  * This function only returns the highest priority warning of the set selected by strFor.\n  */\n std::string GetWarnings(const std::string& strFor);\n-/** Retrieve a transaction (from memory pool, or from disk, if possible) */\n-bool GetTransaction(const uint256 &hash, CTransaction &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n+/** Retrieve a transaction (from memory pool, or from txindex) */\n+bool GetTransaction(const uint256 &hash, CTransaction &tx, const Consensus::Params& params, uint256 &hashBlock);\n /** Find the best known block, and make it the tip of the block chain */\n bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams, const CBlock* pblock = NULL);\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);"
      },
      {
        "sha": "1b14b081447d6b8cdcd74b3c42c5ede85123d287",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3af143133a7447f7399c61bea67e60cd37d2e97/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3af143133a7447f7399c61bea67e60cd37d2e97/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=c3af143133a7447f7399c61bea67e60cd37d2e97",
        "patch": "@@ -364,7 +364,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n \n     CTransaction tx;\n     uint256 hashBlock = uint256();\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock))\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "89498aa67733c3e8c97854104d0ba65990691fd1",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3af143133a7447f7399c61bea67e60cd37d2e97/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3af143133a7447f7399c61bea67e60cd37d2e97/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=c3af143133a7447f7399c61bea67e60cd37d2e97",
        "patch": "@@ -188,8 +188,8 @@ UniValue getrawtransaction(const UniValue& params, bool fHelp)\n \n     CTransaction tx;\n     uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No information available about transaction\");\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No information available about transaction. Use `gettransaction` for wallet transactions, or enable -txindex to use getrawtransaction on confirmed transactions.\");\n \n     string strHex = EncodeHexTx(tx);\n \n@@ -258,7 +258,7 @@ UniValue gettxoutproof(const UniValue& params, bool fHelp)\n     if (pblockindex == NULL)\n     {\n         CTransaction tx;\n-        if (!GetTransaction(oneTxid, tx, Params().GetConsensus(), hashBlock, false) || hashBlock.IsNull())\n+        if (!GetTransaction(oneTxid, tx, Params().GetConsensus(), hashBlock) || hashBlock.IsNull())\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not yet in block\");\n         if (!mapBlockIndex.count(hashBlock))\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Transaction index corrupt\");"
      }
    ]
  }
]