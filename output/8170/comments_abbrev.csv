laanwj,2016-06-08T14:24:17Z,What is the migration path for users that were using this to query the utxo set?\nI suppose `gettxout` and REST `/rest/getutxos` cover that?\n,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224605410,224605410,
sipa,2016-06-08T14:27:46Z,"Yes, use UTXO query functions to query the UTXO set.\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224606631,224606631,
laanwj,2016-06-09T05:39:14Z,This definitely needs mention in the release notes.\nMaybe deprecate this functionality in 0.13 (put it behind an option that is disabled by default) then actually remove it in 0.14?\n,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224804655,224804655,
laanwj,2016-06-09T05:42:47Z,"```\nabandonconflict.py:\nInitializing test directory /tmp/testvmbco_b4/4\nstart_node: bitcoind started, waiting for RPC to come up\nstart_node: RPC succesfully started\nstart_node: bitcoind started, waiting for RPC to come up\nstart_node: RPC succesfully started\nJSONRPC error: No information available about transaction. Use `gettransaction` for wallet transactions, or enable -txindex to use getr",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224805023,224805023,
dcousens,2016-06-09T06:40:00Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224812467,224812467,
gmaxwell,2016-06-09T06:43:45Z,"I agree that it's so incomprehensible (and not desirable) in its behavior that it's unlikely anyone was using it (or at least, using it _and_ not silently getting screwed over by it).  I do wish any of these queries that only worked  with txindex had a non-txindex mechanism that took a location parameter (e.g. block height.)\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224813028,224813028,
MarcoFalke,2016-06-09T11:39:53Z,"I don't think we need to deprecate this behind a command line flag. (Keep in mind that there still would be no way for us to find out how many would toggle the flag)\n\nConsidering that this is not really a functionality someone can rely on and it appears unlikely someone (other than our test framework) relies on it, it is probably safe to just remove it.\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224870610,224870610,
laanwj,2016-06-09T14:40:51Z,"> I don't think we need to deprecate this behind a command line flag. (Keep in mind that there still would be no way for us to find out how many would toggle the flag)\n\nThat's true, but it would give people the opportunity to complain about it, while not having to forego the upgrade.\n\nI don't feel strongly about it though, if you guys believe that this is a change that can be made without warn",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224916071,224916071,
sipa,2016-06-09T14:44:11Z,"> Depends on how urgent this change is as well.\n\nThe changes here are not urgent. If we choose to not adopt them quickly, I think at least the updated error message in `getrawtransaction` is useful.\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-224917233,224917233,
petertodd,2016-06-15T04:49:23Z,"One of my clients has something that was using this FWIW, so I'd target actual removal for v0.14\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226087167,226087167,
laanwj,2016-06-16T09:09:43Z,"> One of my clients has something that was using this FWIW, so I'd target actual removal for v0.14\n\nThat's interesting. I somehow expected that, if some functionality is available for so long, some people will come to rely on it.\nWhat is their use case? Could they (in principle, given warning upfront to update their code) use the other UTXO query commands as replacement? \n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226430342,226430342,
petertodd,2016-06-16T10:55:51Z,"@laanwj Basically their wallet code happens to depend on it; with a fair amount of new code they could work around the problem (remember that simply saving the txs when created isn't enough due to malleability).\n\nI don't think that's a show-stopper, but we should give users some kind of warning period. Perhaps we could make v0.13.0 _appear_ to not have this support by default, but then re-enable",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226453094,226453094,
laanwj,2016-06-18T07:30:19Z,">  Perhaps we could make v0.13.0 appear to not have this support by default, but then re-enable it with a command line flag, that's marked as ""will be removed in v0.14.0""?\n\n+1. That's exactly what I suggested too:\n\n> Maybe deprecate this functionality in 0.13 (put it behind an option that is disabled by default) then actually remove it in 0.14?\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226927280,226927280,
petertodd,2016-06-18T21:03:40Z,"@laanwj Cool, sounds like we're in agreement. :)\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226964699,226964699,
sipa,2016-06-18T21:05:18Z,"Ok I'll reword this to just be the extra RPC help/error, and a message that\nit is deprecated?\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226964801,226964801,
petertodd,2016-06-18T21:06:32Z,"@sipa Sounds good to me, thanks!\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-226964847,226964847,
laanwj,2016-08-02T12:54:34Z,Looks like this causes a few RPC tests to fail:\n\n```\nwallet.py                      | False  | 9 s\nrest.py                        | False  | 7 s\nabandonconflict.py             | False  | 7 s\n```\n,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-236895046,236895046,
dcousens,2016-08-02T13:27:43Z,"utACK c3af143,  but needs the command line option (or maybe just a short-term compile flag?)\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-236903517,236903517,
laanwj,2016-10-18T19:08:09Z,Still failing travis.\n,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-254607929,254607929,
gmaxwell,2016-12-04T21:39:15Z,@sipa Needs rebase.,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-264733546,264733546,
morcos,2016-12-05T19:04:23Z,I'm ever so slightly against this change.  I find it's routinely useful for me when I'm trying to debug behavior on a random node.,https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-264944680,264944680,
sipa,2016-12-05T20:26:46Z,"@morcos Perhaps that's a good reason to introduce a `getmempooltransaction` RPC? My reason for this (or a related) change is that `getrawtransaction` has very unclear conditions under which it works, and I keep seeing people say it doesn't work.",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-264967028,264967028,
laanwj,2016-12-21T10:51:33Z,"> Perhaps that's a good reason to introduce a getmempooltransaction RPC\n\nAgree with @morcos that the way toward fixing this could also be make the API clearer instead of removing functionality (that is apparently used by some people sometimes, even if only by developers for troubleshooting).\n\n+1 for splitting up `getrawtransaction` into calls that look in one place only.\n",https://github.com/bitcoin/bitcoin/pull/8170#issuecomment-268493595,268493595,
