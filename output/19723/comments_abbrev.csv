DrahtBot,2020-08-20 20:26:17,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-677885649,677885649,
sdaftuar,2020-08-24 13:49:13,"I've withdrawn my BIP proposal relating to this change, but I think it's worth considering making this change anyway.\n\nMy thought is that if other software on the network deploys changes similar to BIP 339 in the future (where a new message is included between version and verack) that we don't want to support in our project, then it's easier to ignore all such messages than it is to add suppor",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-679137633,679137633,
fanquake,2020-08-25 07:46:29,Concept ACK - I am almost up to date with the mailing list discussion.,https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-679863013,679863013,
laanwj,2020-08-27 07:10:18,"I think there's a kind of elegance in doing the negotiation at that stage. It allows the peers to commit to certain features before the P2P connection goes into normal use. Current signaling messages can be sent at any point which can causes unnessecary complication because the switch can happen later, at any time.\n(and this without extending the `VERSION` message, which is already a mess of leg",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-681660830,681660830,
practicalswift,2020-08-29 01:03:42,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-683208779,683208779,
sdaftuar,2020-09-25 23:23:36,"Pinging reviewers -- the code change here is pretty simple, so if there are concept ACKs on this I hope we can get actual ACKs as well?  I think it would make logical sense to deploy this in 0.21 (at the same time we are deploying wtxid-relay), though there is no code-dependency that requires it.",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-699212527,699212527,
sipa,2020-09-26 01:20:54,"utACK 675e55e01392971aa56bda56cb09498b466d0902\n\nI think it makes sense to ignore unknown messages before VERACK. It's the obvious place to negotiate optional features, and if there is no problem having them _after_ VERACK, I don't see why there should be punishment for it before that point.",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-699261118,699261118,
practicalswift,2020-09-26 11:52:54,ACK 675e55e01392971aa56bda56cb09498b466d0902: patch looks correct,https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-699485313,699485313,
MarcoFalke,2020-09-26 19:49:57,"ACK 675e55e01392971aa56bda56cb09498b466d0902\n\nIt would be nice if the tests were updated at the same time:\n\n* Fix a small incorrect comment\n* Add a test that peers are actually disconnected due to timeout if they never finish the handshake\n\nYou may use this diff freely:\n\n```diff\ndiff --git a/test/functional/p2p_leak.py b/test/functional/p2p_leak.py\nindex 4b32d60db0..68e2bd4a8",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-699540294,699540294,
MarcoFalke,2020-09-26 19:54:42,"Note that the test I suggest passes on master, as the patch in this pull is not a behaviour change for peers that send less than 100 messages prior to finishing the handshake. So I am happy to create a separate pull, but I think the changes here are a nice excuse to shove in the test as well.",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-699540750,699540750,
MarcoFalke,2020-10-04 07:26:32,"> when receiving a message that must go after verack, the node should keep current (unchanged) behavior\n\nCan you explain one benefit of keeping the behavior exactly the same for those messages? I can only see downsides.",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-703215236,703215236,
hebasto,2020-10-04 07:31:53,"> > when receiving a message that must go after verack, the node should keep current (unchanged) behavior\n> \n> Can you explain one benefit of keeping the behavior exactly the same for those messages? I can only see downsides.\n\nIf a peer sends known messages in wrong order it obviously is broken or violates protocol intentionally. The downside I see is more complicated code. What others dow",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-703215724,703215724,
MarcoFalke,2020-10-04 07:49:09,"Yes, if a peer sends us 99 non-verack messages before the version handshake is complete, it is obviously broken. Though, no version of Bitcoin Core with default settings would disconnect it for that. Nor would this pull request change that. I don't see the point of the additional code complexity to keep a theoretical behaviour that isn't observed in practise and confusing/arbitrary anyway.",https://github.com/bitcoin/bitcoin/pull/19723#issuecomment-703217419,703217419,
jnewbery,2020-08-28 11:52:24,"Couple of suggestions:\n\n- we generally refer to ""message types"" rather than ""commands"" these days.\n- the message type may be known, just not supported prior to a verack (eg an ""addr"" message)\n\nSuggested wording: ""Unsupported message \""%s\"" prior to ... """,https://github.com/bitcoin/bitcoin/pull/19723#discussion_r479190282,479190282,src/net_processing.cpp
sdaftuar,2020-08-28 21:29:11,Shed painted.,https://github.com/bitcoin/bitcoin/pull/19723#discussion_r479542657,479542657,src/net_processing.cpp
