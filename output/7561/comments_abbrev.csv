NicolasDorier,2016-02-19T16:07:28Z,Tested ACK 1fc8385\n,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186278780,186278780,
maaku,2016-02-19T17:15:09Z,"Sticklers for process are going to tell you that you should remove the BIP 113 soft-fork as such transactions are only just now getting marked as non-standard in the 0.12 release. By following this logic the earliest a 113 soft-fork could be applied is after the 0.13 release, at which point in time 0.12 will be the oldest supported version.\n",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186310094,186310094,
btcdrak,2016-02-19T17:19:51Z,"@maaku BIP113 mempool policy was deployed since 0.11.2 with the CLTV softfork, so the earliest available softfork is in fact 0.12.1. Also note that BIP68 requires BIP113 so all these BIPs must be enforced at once.\n",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186312121,186312121,
morcos,2016-02-19T20:02:40Z,a couple comments/questions about the rpc tests:\n- `blockversion5-ism.py` seems extraneous to me.  We already have prior versions of ism tests and in particular the p2p tests added here are testing the ISM logic for version 5 blocks already.\n- For BIP 68 we have the existing `bip68-sequence.py` which tests the logic of the code in a mempool only setting.  I think we need to decide whether that i,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186381738,186381738,
morcos,2016-02-19T20:57:07Z,quick once over utACK on the code.\n\nalthough there is a comment in CheckFinalTx about a convention of negative flags meaning consensus enforced rules.  I think that means you need to change the 0 in https://github.com/btcdrak/bitcoin/blob/1fc83850c1308d6f72f357980f66dc9b30f3a4ed/src/main.cpp#L692 to match the result of ISM flags.  But I'm not sure I understand the reasoning for that or if it's n,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186404344,186404344,
btcdrak,2016-02-20T06:36:15Z,I have updated the OP to explain the PR rationale in more detail to address common questions.\n,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186520683,186520683,
morcos,2016-02-20T14:38:40Z,"A couple of comments about your PR message:\n- BIP 68 does not depend on BIP 113.  It independently enforces the same semantics, but BIP 113 only applies for lock time locks, not sequence locks.\n- Are you sure about bit masking version numbers for ISM?  It seems to me like that is fraught with problems.\n",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186618896,186618896,
btcdrak,2016-02-20T15:36:45Z,@morcos updated OP.\n,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186630289,186630289,
NicolasDorier,2016-02-20T18:19:23Z,"@morcos @btcdrak CheckFinalTx and removeForReorg always enforce MTP since 0.11.2. To reflect that, I just got rid of the flags https://github.com/NicolasDorier/bitcoin/commit/2197781dbe4b64bd7a29902f30eb7eb9c259119f\n\nThe flags came from initial old design of CSV BIP112 which had different cutoff depending of MTP activation.\nI don't know if it is better to bundle my commit on this PR or do a sep",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186661935,186661935,
jmcorgan,2016-02-20T18:47:14Z,Initial read through utACK 3bd5c44.  However the additional changes by @NicolasDorier seem unrelated enough to enabling the soft fork logic that I think it would be clearer to have it in a separate PR.\n,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186665062,186665062,
maaku,2016-02-20T20:38:08Z,"@btcdrak BIP 68 doesn't require or presume BIP 113 -- at least not in the original implementation. It must necessarily use MTP as the start point, but the end point is either nTime or MTP based on activation of BIP 113.\n\nIn any case this is a call for @laanwj and @gmaxwell .\n\nEDIT: To be clear I've advocated in the past for more aggressive rollout of BIP 113 and the response I got was that it ",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186678552,186678552,
morcos,2016-02-20T21:39:41Z,"@NicolasDorier I'm sympathetic to trying to remove these flags, but I don't know if should be trying to confuse things by doing it now.   The question is do we want to continue semi-supporting a mempool policy that doesn't enforce MedianTimePast.\n\n@maaku BIP 68 was modified to use MTP semantics for both end points already.  There was discussion about it a couple of months ago and universal agree",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186684382,186684382,
NicolasDorier,2016-02-21T22:20:03Z,"@morcos, I have opened a separate PR for removing the flags in #7574\n",https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-186931356,186931356,
btcdrak,2016-03-15T18:53:24Z,Closing in favour of 7648\n,https://github.com/bitcoin/bitcoin/pull/7561#issuecomment-196971370,196971370,
morcos,2016-02-19T20:43:13Z,in case it saves anyone else time maybe add:\n`# set most signficant bit (little-endian) to activate LOCKTIME_DISABLE_FLAG`\n,https://github.com/bitcoin/bitcoin/pull/7561#discussion_r53515585,53515585,qa/rpc-tests/mempool_reorg.py
jtoomim,2016-03-05T03:13:22Z,"This should be something like\n\n```\nif ((block.nVersion & 15) >= 5 && IsSuperMajority... )\n```\n\nIn order to avoid misinterpreting Version Bits blocks as votes for BIP112. IsSuperMajority would need to be modified slightly as well, plus line 3180.\n\nWithout this change, blocks voting for BIP109 would be incorrectly interpreted as voting for BIP112, which could cause a premature triggering of ",https://github.com/bitcoin/bitcoin/pull/7561#discussion_r55114319,55114319,src/main.cpp
petertodd,2016-03-05T04:28:20Z,This has been discussed a number of times on the mailing list; what you propose is not a good idea. You can read more from the similar discussion on the mailing list back in Sept in the context of CLTV.\n,https://github.com/bitcoin/bitcoin/pull/7561#discussion_r55115360,55115360,src/main.cpp
chaosgrid,2016-03-05T17:49:41Z,"So what is your proposed fix? Or do you want to risk forking prematurely? You do realize this could put Core on a minority chain in the event that BIP 109 has 50+ % hashing power?\n\nOh, and could you elaborate again why this is not a good idea? I did not find the relevant bit in the mailing list discussion.\n",https://github.com/bitcoin/bitcoin/pull/7561#discussion_r55124809,55124809,src/main.cpp
petertodd,2016-03-07T16:13:51Z,We have a proposed fix - versionbits - as well as a backup fix - pseudo-versionbits.\n,https://github.com/bitcoin/bitcoin/pull/7561#discussion_r55226281,55226281,src/main.cpp
petertodd,2016-03-07T16:14:01Z,We have a proposed fix - versionbits - as well as a backup fix - pseudo-versionbits.\n,https://github.com/bitcoin/bitcoin/pull/7561#discussion_r55226306,55226306,src/main.cpp
