[
  {
    "sha": "c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2NmMmY1NTAxM2M0ZWExYzFlZjRhODc4ZmM3ZmY4ZTkyZjJjNDJk",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-02-11T04:54:50Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-06T05:28:49Z"
      },
      "message": "rpc/blockchain.cpp: Remove g_utxosetscan mutex that is only protecting a single atomic variable",
      "tree": {
        "sha": "c8e47395e31c661c43c198538dd927acadafa687",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8e47395e31c661c43c198538dd927acadafa687"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d96fdc2a396f4ca44d64d830b352469674f2845f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d96fdc2a396f4ca44d64d830b352469674f2845f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d96fdc2a396f4ca44d64d830b352469674f2845f"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "d43c22e4da3faef087010f4ad2941bb5b667ac0b",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
        "patch": "@@ -1976,7 +1976,6 @@ bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>&\n }\n \n /** RAII object to prevent concurrency issue when scanning the txout set */\n-static std::mutex g_utxosetscan;\n static std::atomic<int> g_scan_progress;\n static std::atomic<bool> g_scan_in_progress;\n static std::atomic<bool> g_should_abort_scan;\n@@ -1989,18 +1988,15 @@ class CoinsViewScanReserver\n \n     bool reserve() {\n         CHECK_NONFATAL(!m_could_reserve);\n-        std::lock_guard<std::mutex> lock(g_utxosetscan);\n-        if (g_scan_in_progress) {\n+        if (g_scan_in_progress.exchange(true)) {\n             return false;\n         }\n-        g_scan_in_progress = true;\n         m_could_reserve = true;\n         return true;\n     }\n \n     ~CoinsViewScanReserver() {\n         if (m_could_reserve) {\n-            std::lock_guard<std::mutex> lock(g_utxosetscan);\n             g_scan_in_progress = false;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "de7c5f41aba860751ef7824245e6d9d5088a1200",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTdjNWY0MWFiYTg2MDc1MWVmNzgyNDI0NWU2ZDlkNTA4OGExMjAw",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-05-30T04:02:41Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-19T06:33:02Z"
      },
      "message": "wallet/wallet.h: Remove mutexScanning which was only protecting a single atomic bool",
      "tree": {
        "sha": "fbf12cfa5fe55d0f21dcaf57e7b510327b1ab296",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbf12cfa5fe55d0f21dcaf57e7b510327b1ab296"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de7c5f41aba860751ef7824245e6d9d5088a1200",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7c5f41aba860751ef7824245e6d9d5088a1200",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de7c5f41aba860751ef7824245e6d9d5088a1200",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7c5f41aba860751ef7824245e6d9d5088a1200/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3cf2f55013c4ea1c1ef4a878fc7ff8e92f2c42d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a4cb8253d3d26a8262d38e6d04ceea0e3b0d33f6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de7c5f41aba860751ef7824245e6d9d5088a1200/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de7c5f41aba860751ef7824245e6d9d5088a1200/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=de7c5f41aba860751ef7824245e6d9d5088a1200",
        "patch": "@@ -631,7 +631,6 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     std::atomic<bool> fScanningWallet{false}; // controlled by WalletRescanReserver\n     std::atomic<int64_t> m_scanning_start{0};\n     std::atomic<double> m_scanning_progress{0};\n-    std::mutex mutexScanning;\n     friend class WalletRescanReserver;\n \n     //! the current wallet version: clients below this version are not able to load the wallet\n@@ -1286,13 +1285,11 @@ class WalletRescanReserver\n     bool reserve()\n     {\n         assert(!m_could_reserve);\n-        std::lock_guard<std::mutex> lock(m_wallet.mutexScanning);\n-        if (m_wallet.fScanningWallet) {\n+        if (m_wallet.fScanningWallet.exchange(true)) {\n             return false;\n         }\n         m_wallet.m_scanning_start = GetTimeMillis();\n         m_wallet.m_scanning_progress = 0;\n-        m_wallet.fScanningWallet = true;\n         m_could_reserve = true;\n         return true;\n     }\n@@ -1304,7 +1301,6 @@ class WalletRescanReserver\n \n     ~WalletRescanReserver()\n     {\n-        std::lock_guard<std::mutex> lock(m_wallet.mutexScanning);\n         if (m_could_reserve) {\n             m_wallet.fScanningWallet = false;\n         }"
      }
    ]
  },
  {
    "sha": "8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjVhZjNkNGMxMjcwMjY3YWQ4NWU3OGY2NjFiZjhmYWIwNmYzYWFk",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-05-30T03:44:02Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-19T06:33:10Z"
      },
      "message": "net: fMsgProcWake use LOCK instead of lock_guard",
      "tree": {
        "sha": "fb51d32074cfe24c9f92bfc6bf7c21069cbeda10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb51d32074cfe24c9f92bfc6bf7c21069cbeda10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b5af3d4c1270267ad85e78f661bf8fab06f3aad/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de7c5f41aba860751ef7824245e6d9d5088a1200",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7c5f41aba860751ef7824245e6d9d5088a1200",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de7c5f41aba860751ef7824245e6d9d5088a1200"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4e80e123d1cf6c10626ad987f475a655d51398de",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b5af3d4c1270267ad85e78f661bf8fab06f3aad/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b5af3d4c1270267ad85e78f661bf8fab06f3aad/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
        "patch": "@@ -1454,7 +1454,7 @@ void CConnman::ThreadSocketHandler()\n void CConnman::WakeMessageHandler()\n {\n     {\n-        std::lock_guard<std::mutex> lock(mutexMsgProc);\n+        LOCK(mutexMsgProc);\n         fMsgProcWake = true;\n     }\n     condMsgProc.notify_one();\n@@ -2057,7 +2057,7 @@ void CConnman::ThreadMessageHandler()\n \n         WAIT_LOCK(mutexMsgProc, lock);\n         if (!fMoreWork) {\n-            condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this] { return fMsgProcWake; });\n+            condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this]() EXCLUSIVE_LOCKS_REQUIRED(mutexMsgProc) { return fMsgProcWake; });\n         }\n         fMsgProcWake = false;\n     }\n@@ -2366,7 +2366,7 @@ static CNetCleanup instance_of_cnetcleanup;\n void CConnman::Interrupt()\n {\n     {\n-        std::lock_guard<std::mutex> lock(mutexMsgProc);\n+        LOCK(mutexMsgProc);\n         flagInterruptMsgProc = true;\n     }\n     condMsgProc.notify_all();"
      },
      {
        "sha": "a4bf06e47f6c8317fcca3b77417dacf2900e5f23",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b5af3d4c1270267ad85e78f661bf8fab06f3aad/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b5af3d4c1270267ad85e78f661bf8fab06f3aad/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
        "patch": "@@ -451,7 +451,7 @@ class CConnman\n     const uint64_t nSeed0, nSeed1;\n \n     /** flag for waking the message processor. */\n-    bool fMsgProcWake;\n+    bool fMsgProcWake GUARDED_BY(mutexMsgProc);\n \n     std::condition_variable condMsgProc;\n     Mutex mutexMsgProc;"
      }
    ]
  },
  {
    "sha": "479c5846f7477625ec275fbb8a076c7ef157172b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzljNTg0NmY3NDc3NjI1ZWMyNzVmYmI4YTA3NmM3ZWYxNTcxNzJi",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-05-30T03:37:31Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-19T06:33:10Z"
      },
      "message": "rpc/blockchain.cpp: thread safety annotations for latestblock",
      "tree": {
        "sha": "d78433815f0c3602770e3ebd71a1e6ef2369274a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d78433815f0c3602770e3ebd71a1e6ef2369274a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/479c5846f7477625ec275fbb8a076c7ef157172b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/479c5846f7477625ec275fbb8a076c7ef157172b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/479c5846f7477625ec275fbb8a076c7ef157172b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/479c5846f7477625ec275fbb8a076c7ef157172b/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b5af3d4c1270267ad85e78f661bf8fab06f3aad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b5af3d4c1270267ad85e78f661bf8fab06f3aad"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "dbf8da69c15eb3f3715183cae297defe756f9559",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/479c5846f7477625ec275fbb8a076c7ef157172b/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/479c5846f7477625ec275fbb8a076c7ef157172b/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=479c5846f7477625ec275fbb8a076c7ef157172b",
        "patch": "@@ -51,7 +51,7 @@ struct CUpdatedBlock\n \n static Mutex cs_blockchange;\n static std::condition_variable cond_blockchange;\n-static CUpdatedBlock latestblock;\n+static CUpdatedBlock latestblock GUARDED_BY(cs_blockchange);\n \n CTxMemPool& EnsureMemPool()\n {\n@@ -208,7 +208,7 @@ static UniValue getbestblockhash(const JSONRPCRequest& request)\n void RPCNotifyBlockChange(bool ibd, const CBlockIndex * pindex)\n {\n     if(pindex) {\n-        std::lock_guard<std::mutex> lock(cs_blockchange);\n+        LOCK(cs_blockchange);\n         latestblock.hash = pindex->GetBlockHash();\n         latestblock.height = pindex->nHeight;\n     }\n@@ -243,9 +243,9 @@ static UniValue waitfornewblock(const JSONRPCRequest& request)\n         WAIT_LOCK(cs_blockchange, lock);\n         block = latestblock;\n         if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n+            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&block]() EXCLUSIVE_LOCKS_REQUIRED(cs_blockchange) {return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n         else\n-            cond_blockchange.wait(lock, [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n+            cond_blockchange.wait(lock, [&block]() EXCLUSIVE_LOCKS_REQUIRED(cs_blockchange) {return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n         block = latestblock;\n     }\n     UniValue ret(UniValue::VOBJ);\n@@ -285,9 +285,9 @@ static UniValue waitforblock(const JSONRPCRequest& request)\n     {\n         WAIT_LOCK(cs_blockchange, lock);\n         if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&hash]{return latestblock.hash == hash || !IsRPCRunning();});\n+            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&hash]() EXCLUSIVE_LOCKS_REQUIRED(cs_blockchange) {return latestblock.hash == hash || !IsRPCRunning();});\n         else\n-            cond_blockchange.wait(lock, [&hash]{return latestblock.hash == hash || !IsRPCRunning(); });\n+            cond_blockchange.wait(lock, [&hash]() EXCLUSIVE_LOCKS_REQUIRED(cs_blockchange) {return latestblock.hash == hash || !IsRPCRunning(); });\n         block = latestblock;\n     }\n \n@@ -329,9 +329,9 @@ static UniValue waitforblockheight(const JSONRPCRequest& request)\n     {\n         WAIT_LOCK(cs_blockchange, lock);\n         if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&height]{return latestblock.height >= height || !IsRPCRunning();});\n+            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&height]() EXCLUSIVE_LOCKS_REQUIRED(cs_blockchange) {return latestblock.height >= height || !IsRPCRunning();});\n         else\n-            cond_blockchange.wait(lock, [&height]{return latestblock.height >= height || !IsRPCRunning(); });\n+            cond_blockchange.wait(lock, [&height]() EXCLUSIVE_LOCKS_REQUIRED(cs_blockchange) {return latestblock.height >= height || !IsRPCRunning(); });\n         block = latestblock;\n     }\n     UniValue ret(UniValue::VOBJ);"
      }
    ]
  },
  {
    "sha": "a7887899480db72328784009181d93904e6d479d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzg4Nzg5OTQ4MGRiNzIzMjg3ODQwMDkxODFkOTM5MDRlNmQ0Nzlk",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-02-11T06:00:47Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-19T06:33:10Z"
      },
      "message": "test/checkqueue_tests: thread safety annotations",
      "tree": {
        "sha": "a4bedcb914413f44583136f3c14646b60c3df93e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4bedcb914413f44583136f3c14646b60c3df93e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7887899480db72328784009181d93904e6d479d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7887899480db72328784009181d93904e6d479d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7887899480db72328784009181d93904e6d479d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7887899480db72328784009181d93904e6d479d/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "479c5846f7477625ec275fbb8a076c7ef157172b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/479c5846f7477625ec275fbb8a076c7ef157172b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/479c5846f7477625ec275fbb8a076c7ef157172b"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 14,
      "deletions": 9
    },
    "files": [
      {
        "sha": "35750b2ebc5b32f49d5a789fe06c08fff74e013e",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7887899480db72328784009181d93904e6d479d/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7887899480db72328784009181d93904e6d479d/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=a7887899480db72328784009181d93904e6d479d",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <checkqueue.h>\n+#include <sync.h>\n #include <test/util/setup_common.h>\n #include <util/memory.h>\n #include <util/system.h>\n@@ -57,14 +58,14 @@ struct FailingCheck {\n };\n \n struct UniqueCheck {\n-    static std::mutex m;\n-    static std::unordered_multiset<size_t> results;\n+    static Mutex m;\n+    static std::unordered_multiset<size_t> results GUARDED_BY(m);\n     size_t check_id;\n     UniqueCheck(size_t check_id_in) : check_id(check_id_in){};\n     UniqueCheck() : check_id(0){};\n     bool operator()()\n     {\n-        std::lock_guard<std::mutex> l(m);\n+        LOCK(m);\n         results.insert(check_id);\n         return true;\n     }\n@@ -127,7 +128,7 @@ struct FrozenCleanupCheck {\n std::mutex FrozenCleanupCheck::m{};\n std::atomic<uint64_t> FrozenCleanupCheck::nFrozen{0};\n std::condition_variable FrozenCleanupCheck::cv{};\n-std::mutex UniqueCheck::m;\n+Mutex UniqueCheck::m;\n std::unordered_multiset<size_t> UniqueCheck::results;\n std::atomic<size_t> FakeCheckCheckCompletion::n_calls{0};\n std::atomic<size_t> MemoryCheck::fake_allocated_memory{0};\n@@ -290,11 +291,15 @@ BOOST_AUTO_TEST_CASE(test_CheckQueue_UniqueCheck)\n             control.Add(vChecks);\n         }\n     }\n-    bool r = true;\n-    BOOST_REQUIRE_EQUAL(UniqueCheck::results.size(), COUNT);\n-    for (size_t i = 0; i < COUNT; ++i)\n-        r = r && UniqueCheck::results.count(i) == 1;\n-    BOOST_REQUIRE(r);\n+    {\n+        LOCK(UniqueCheck::m);\n+        bool r = true;\n+        BOOST_REQUIRE_EQUAL(UniqueCheck::results.size(), COUNT);\n+        for (size_t i = 0; i < COUNT; ++i) {\n+            r = r && UniqueCheck::results.count(i) == 1;\n+        }\n+        BOOST_REQUIRE(r);\n+    }\n     tg.interrupt_all();\n     tg.join_all();\n }"
      }
    ]
  },
  {
    "sha": "e685ca19928eec4e687c66f5edfcfff085a42c27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjg1Y2ExOTkyOGVlYzRlNjg3YzY2ZjVlZGZjZmZmMDg1YTQyYzI3",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-02-11T06:15:37Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-26T13:23:15Z"
      },
      "message": "util/system.cpp: add thread safety annotations for dir_locks",
      "tree": {
        "sha": "fd61f2be576402fd929a491e0afd451ed6ac51b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd61f2be576402fd929a491e0afd451ed6ac51b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e685ca19928eec4e687c66f5edfcfff085a42c27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e685ca19928eec4e687c66f5edfcfff085a42c27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e685ca19928eec4e687c66f5edfcfff085a42c27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e685ca19928eec4e687c66f5edfcfff085a42c27/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7887899480db72328784009181d93904e6d479d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7887899480db72328784009181d93904e6d479d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7887899480db72328784009181d93904e6d479d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "bde0f097be60dca402b94eafca3df13bd2f3ff45",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e685ca19928eec4e687c66f5edfcfff085a42c27/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e685ca19928eec4e687c66f5edfcfff085a42c27/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=e685ca19928eec4e687c66f5edfcfff085a42c27",
        "patch": "@@ -3,6 +3,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <sync.h>\n #include <util/system.h>\n \n #include <chainparamsbase.h>\n@@ -75,18 +76,18 @@ const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n \n ArgsManager gArgs;\n \n+/** Mutex to protect dir_locks. */\n+static Mutex cs_dir_locks;\n /** A map that contains all the currently held directory locks. After\n  * successful locking, these will be held here until the global destructor\n  * cleans them up and thus automatically unlocks them, or ReleaseDirectoryLocks\n  * is called.\n  */\n-static std::map<std::string, std::unique_ptr<fsbridge::FileLock>> dir_locks;\n-/** Mutex to protect dir_locks. */\n-static std::mutex cs_dir_locks;\n+static std::map<std::string, std::unique_ptr<fsbridge::FileLock>> dir_locks GUARDED_BY(cs_dir_locks);\n \n bool LockDirectory(const fs::path& directory, const std::string lockfile_name, bool probe_only)\n {\n-    std::lock_guard<std::mutex> ulock(cs_dir_locks);\n+    LOCK(cs_dir_locks);\n     fs::path pathLockFile = directory / lockfile_name;\n \n     // If a lock for this directory already exists in the map, don't try to re-lock it\n@@ -110,13 +111,13 @@ bool LockDirectory(const fs::path& directory, const std::string lockfile_name, b\n \n void UnlockDirectory(const fs::path& directory, const std::string& lockfile_name)\n {\n-    std::lock_guard<std::mutex> lock(cs_dir_locks);\n+    LOCK(cs_dir_locks);\n     dir_locks.erase((directory / lockfile_name).string());\n }\n \n void ReleaseDirectoryLocks()\n {\n-    std::lock_guard<std::mutex> ulock(cs_dir_locks);\n+    LOCK(cs_dir_locks);\n     dir_locks.clear();\n }\n "
      }
    ]
  },
  {
    "sha": "5478d6c099e76fe070703cc5383cba7b91468b0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDc4ZDZjMDk5ZTc2ZmUwNzA3MDNjYzUzODNjYmE3YjkxNDY4YjBm",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-02-11T06:50:22Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-26T15:31:51Z"
      },
      "message": "logging: thread safety annotations\n\nAdds LockGuard helper in threadsafety.h to replace lock_guard<mutex>\nwhen LOCK(Mutex) isn't available for use.",
      "tree": {
        "sha": "ec02170ef4e628dad3bbec5d7c1199671c5c4c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec02170ef4e628dad3bbec5d7c1199671c5c4c23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5478d6c099e76fe070703cc5383cba7b91468b0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5478d6c099e76fe070703cc5383cba7b91468b0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5478d6c099e76fe070703cc5383cba7b91468b0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5478d6c099e76fe070703cc5383cba7b91468b0f/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e685ca19928eec4e687c66f5edfcfff085a42c27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e685ca19928eec4e687c66f5edfcfff085a42c27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e685ca19928eec4e687c66f5edfcfff085a42c27"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 23,
      "deletions": 10
    },
    "files": [
      {
        "sha": "8ec05624ff403d126176c5571ad0b4e639802611",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5478d6c099e76fe070703cc5383cba7b91468b0f/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5478d6c099e76fe070703cc5383cba7b91468b0f/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=5478d6c099e76fe070703cc5383cba7b91468b0f",
        "patch": "@@ -41,7 +41,7 @@ static int FileWriteStr(const std::string &str, FILE *fp)\n \n bool BCLog::Logger::StartLogging()\n {\n-    std::lock_guard<std::mutex> scoped_lock(m_cs);\n+    LockGuard scoped_lock(m_cs);\n \n     assert(m_buffering);\n     assert(m_fileout == nullptr);\n@@ -80,7 +80,7 @@ bool BCLog::Logger::StartLogging()\n \n void BCLog::Logger::DisconnectTestLogger()\n {\n-    std::lock_guard<std::mutex> scoped_lock(m_cs);\n+    LockGuard scoped_lock(m_cs);\n     m_buffering = true;\n     if (m_fileout != nullptr) fclose(m_fileout);\n     m_fileout = nullptr;\n@@ -246,7 +246,7 @@ namespace BCLog {\n \n void BCLog::Logger::LogPrintStr(const std::string& str)\n {\n-    std::lock_guard<std::mutex> scoped_lock(m_cs);\n+    LockGuard scoped_lock(m_cs);\n     std::string str_prefixed = LogEscapeMessage(str);\n \n     if (m_log_threadnames && m_started_new_line) {"
      },
      {
        "sha": "c55f581916347fe7914aa9dcd824a6ed06f540a0",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5478d6c099e76fe070703cc5383cba7b91468b0f/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5478d6c099e76fe070703cc5383cba7b91468b0f/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=5478d6c099e76fe070703cc5383cba7b91468b0f",
        "patch": "@@ -8,6 +8,7 @@\n \n #include <fs.h>\n #include <tinyformat.h>\n+#include <threadsafety.h>\n #include <util/string.h>\n \n #include <atomic>\n@@ -62,9 +63,10 @@ namespace BCLog {\n     {\n     private:\n         mutable std::mutex m_cs;                   // Can not use Mutex from sync.h because in debug mode it would cause a deadlock when a potential deadlock was detected\n-        FILE* m_fileout = nullptr;                 // GUARDED_BY(m_cs)\n-        std::list<std::string> m_msgs_before_open; // GUARDED_BY(m_cs)\n-        bool m_buffering{true};                    //!< Buffer messages before logging can be started. GUARDED_BY(m_cs)\n+\n+        FILE* m_fileout GUARDED_BY(m_cs) = nullptr;\n+        std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);\n+        bool m_buffering GUARDED_BY(m_cs) = true; //!< Buffer messages before logging can be started.\n \n         /**\n          * m_started_new_line is a state variable that will suppress printing of\n@@ -79,7 +81,7 @@ namespace BCLog {\n         std::string LogTimestampStr(const std::string& str);\n \n         /** Slots that connect to the print signal */\n-        std::list<std::function<void(const std::string&)>> m_print_callbacks /* GUARDED_BY(m_cs) */ {};\n+        std::list<std::function<void(const std::string&)>> m_print_callbacks GUARDED_BY(m_cs) {};\n \n     public:\n         bool m_print_to_console = false;\n@@ -98,22 +100,22 @@ namespace BCLog {\n         /** Returns whether logs will be written to any output */\n         bool Enabled() const\n         {\n-            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            LockGuard scoped_lock(m_cs);\n             return m_buffering || m_print_to_console || m_print_to_file || !m_print_callbacks.empty();\n         }\n \n         /** Connect a slot to the print signal and return the connection */\n         std::list<std::function<void(const std::string&)>>::iterator PushBackCallback(std::function<void(const std::string&)> fun)\n         {\n-            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            LockGuard scoped_lock(m_cs);\n             m_print_callbacks.push_back(std::move(fun));\n             return --m_print_callbacks.end();\n         }\n \n         /** Delete a connection */\n         void DeleteCallback(std::list<std::function<void(const std::string&)>>::iterator it)\n         {\n-            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            LockGuard scoped_lock(m_cs);\n             m_print_callbacks.erase(it);\n         }\n "
      },
      {
        "sha": "81f86eac3a6e8add86d77f8f06962ca8bbb1fca6",
        "filename": "src/threadsafety.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5478d6c099e76fe070703cc5383cba7b91468b0f/src/threadsafety.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5478d6c099e76fe070703cc5383cba7b91468b0f/src/threadsafety.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/threadsafety.h?ref=5478d6c099e76fe070703cc5383cba7b91468b0f",
        "patch": "@@ -6,6 +6,8 @@\n #ifndef BITCOIN_THREADSAFETY_H\n #define BITCOIN_THREADSAFETY_H\n \n+#include <mutex>\n+\n #ifdef __clang__\n // TL;DR Add GUARDED_BY(mutex) to member variables. The others are\n // rarely necessary. Ex: int nFoo GUARDED_BY(cs_foo);\n@@ -54,4 +56,13 @@\n #define ASSERT_EXCLUSIVE_LOCK(...)\n #endif // __GNUC__\n \n+// LockGuard provides an annotated version of lock_guard for us\n+// should only be used when sync.h Mutex/LOCK/etc aren't usable\n+class SCOPED_LOCKABLE LockGuard : public std::lock_guard<std::mutex>\n+{\n+public:\n+    explicit LockGuard(std::mutex& cs) EXCLUSIVE_LOCK_FUNCTION(cs) : std::lock_guard<std::mutex>(cs) { }\n+    ~LockGuard() UNLOCK_FUNCTION() {};\n+};\n+\n #endif // BITCOIN_THREADSAFETY_H"
      }
    ]
  }
]