NicolasDorier,2016-07-29T02:00:31Z,"test_big_witness_transaction add significant test duration because of the creation of many signature, I don't feel like removing it as it may still be useful though.\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236075849,236075849,
NicolasDorier,2016-07-29T03:34:58Z,travis fail probably unrelated to this PR \n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236086719,236086719,
NicolasDorier,2016-07-29T17:14:04Z,@instagibbs I've just updated the PR following your suggestion.\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236238422,236238422,
sipa,2016-07-29T19:06:09Z,"You're making script/interpreter depend on sync, which causes a compile failure as libconsensus (which uses script/interpreter) does not link in Boost.\n\nOne way would be to make CachedHashesMap a virtual class, with only a naive implementation (which does not cache anything). Then elsewhere you can create a derived class which adds the map and the lock.\n\nEDIT: oh no, I think you just need to s",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236267171,236267171,
sipa,2016-07-29T19:40:56Z,"Can you also follow the coding style? Spaces after `if`, and `{` on the same line (except for classes or function bodies).\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236274847,236274847,
NicolasDorier,2016-07-29T19:52:42Z,"@sipa yes, it was a mistake just removed it and fixed coding style.\n\nI am suprised, that https://travis-ci.org/bitcoin/bitcoin/builds/148371080 and when I compiled myself I did not experienced any build fails because of this mistake.\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236277470,236277470,
sipa,2016-07-29T19:54:15Z,Did you run `make check` ?\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236277803,236277803,
NicolasDorier,2016-07-29T19:54:58Z,"nop, only make -j4. What does the check do ? I thought it was only running tests.\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236277964,236277964,
NicolasDorier,2016-07-30T04:22:44Z,@sipa nits fix\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236340830,236340830,
sipa,2016-07-30T18:06:55Z,utACK 5547521c0ae38583e9f0504b3302bba928f5477d\nWill test.\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236380272,236380272,
sipa,2016-08-01T14:47:50Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236602701,236602701,
NicolasDorier,2016-08-01T15:11:28Z,"Rebased, it made the diff smaller as [this commit](https://github.com/bitcoin/bitcoin/commit/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2) removed a code path where CachedHashesMap was previously needed. (but not used)\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-236609730,236609730,
sipa,2016-08-02T23:26:12Z,Noting that this requires backport to 0.13 before segwit is activated.\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-237080719,237080719,
jtimon,2016-08-04T01:54:00Z,utACK 7dbd2e7\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-237430348,237430348,
btcdrak,2016-08-05T10:57:26Z,utACK 7dbd2e7\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-237822515,237822515,
NicolasDorier,2016-08-05T20:49:41Z,@btcdrak updated the file header.\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-237962520,237962520,
sipa,2016-08-15T17:17:56Z,"Tested ACK 910e7bb0fc519eacca6aff996dec31e9f0185bc8: I timed the verification in the added test_big_witness_transaction test, and backported it to master (without sighash cache); this PR made it 7.5 times faster.\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-239865313,239865313,
sipa,2016-08-16T10:18:54Z,"Merely listing this for exposure, as I am perfectly fine with merging this PR here as it is:\n\nI made an altered implementation in https://github.com/sipa/bitcoin/commits/noprecomputecachedhashes that simply precomputes the 3 hashes for each transaction. In the listed benchmark, it is around 1% faster than the PR here. It may be preferable if we want to avoid contention on the sighash cache like ",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-240063171,240063171,
NicolasDorier,2016-08-16T12:29:05Z,"@sipa actually I did that before (https://github.com/bitcoin/bitcoin/pull/8259)\n\nEDIT: ah no, it is actually different\n",https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-240087205,240087205,
NicolasDorier,2016-08-28T12:35:13Z,supersede by https://github.com/bitcoin/bitcoin/pull/8524\n,https://github.com/bitcoin/bitcoin/pull/8422#issuecomment-242972442,242972442,
instagibbs,2016-07-29T13:01:13Z,"Might make sense to check if any ""progress"" was made instead to avoid grabbing locks for setting any time the retrieved cachedHashes isn't empty already. \n",https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72787163,72787163,src/main.cpp
sipa,2016-07-29T23:30:28Z,Space after if.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874539,72874539,src/main.cpp
sipa,2016-07-29T23:30:37Z,Space after if.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874550,72874550,src/main.cpp
sipa,2016-07-29T23:31:23Z,Newline at the end of the file.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874596,72874596,src/script/cachedhashesmap.cpp
sipa,2016-07-29T23:31:53Z,This whole method can be written as `LOCK(cs); map[txId].Merge(hashes);`.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874625,72874625,src/script/cachedhashesmap.cpp
sipa,2016-07-29T23:32:36Z,Can you pass the uint256 as a const reference to avoid copying it?\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874669,72874669,src/script/cachedhashesmap.h
sipa,2016-07-29T23:33:11Z,Satoshi did not write this.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874703,72874703,src/script/cachedhashesmap.cpp
sipa,2016-07-29T23:33:45Z,You can turn this into a `struct` and drop the `public:` declaration.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72874772,72874772,src/script/interpreter.h
sipa,2016-07-29T23:50:23Z,This mutable isn't needed.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72875845,72875845,src/script/interpreter.h
sipa,2016-07-29T23:53:27Z,Unused variable.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72875978,72875978,src/test/transaction_tests.cpp
NicolasDorier,2016-07-30T04:06:09Z,it is CachedHashes is modified by SignatureHash\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72881516,72881516,src/script/interpreter.h
sipa,2016-07-30T04:15:08Z,"> it is CachedHashes is modified by SignatureHash\n\nI don't think so? cacheHashes is not modified. *cacheHashes is.\n\nIf you have a const TransactionSignatureChecker method, its cacheHashes\nvariable is of type const pointer to non-const CachedHashes. It means the\npointer can't be changed, but the object pointed to can be.\n",https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72881615,72881615,src/script/interpreter.h
NicolasDorier,2016-07-30T04:17:03Z,"oh, it is not needed, by which magic. I remember having to add it because I was modifying it in SignatureHash, why not anymore?\n",https://github.com/bitcoin/bitcoin/pull/8422#discussion_r72881635,72881635,src/script/interpreter.h
jtimon,2016-08-04T01:32:43Z,You can move this include to the cpp or save the `class CachedHashes;` below.\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r73450580,73450580,src/script/cachedhashesmap.h
jtimon,2016-08-04T01:34:21Z,Style: Maybe we want a variable for TransactionSignatureChecker here at some point?\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r73450694,73450694,src/script/bitcoinconsensus.cpp
btcdrak,2016-08-05T10:56:09Z,s/2015/2016/\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r73675429,73675429,src/script/cachedhashesmap.cpp
btcdrak,2016-08-05T10:56:17Z,s/2015/2016/\n,https://github.com/bitcoin/bitcoin/pull/8422#discussion_r73675445,73675445,src/script/cachedhashesmap.h
