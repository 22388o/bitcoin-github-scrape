[
  {
    "sha": "c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjY5MjA5MzM2ZGZhN2U0MjU4Y2ZlN2Q1YjBhM2JjMDdiMGRhM2Iy",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-11T15:04:06Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-16T15:27:13Z"
      },
      "message": "[tests] Small fixups before deprecating generate\n\nIn advance of deprecating the generate RPC method, make some small\nchanges to a small number of inidividual test cases:\n\n- make memory checking less prescriptive in wallet_basic.py\n- replace calls to generate with generatetoaddress in wallet_keypool.py\n- replace calls to generate with generatetoaddress and fixup label\n  issues in wallet_labels.py\n- replace calls to generate with generatetoaddress in wallet_multiwallet.py",
      "tree": {
        "sha": "f400f7e5cd4ff186a82cae17a7833a209775fe1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f400f7e5cd4ff186a82cae17a7833a209775fe1b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be992701b018f256db6d64786624be4cb60d8975",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be992701b018f256db6d64786624be4cb60d8975",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be992701b018f256db6d64786624be4cb60d8975"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 16,
      "deletions": 15
    },
    "files": [
      {
        "sha": "4de3356d79ab6e2d67364f3a7d91db43daaa7bd7",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
        "patch": "@@ -11,6 +11,7 @@\n     assert_array_result,\n     assert_equal,\n     assert_fee_amount,\n+    assert_greater_than,\n     assert_raises_rpc_error,\n     connect_nodes_bi,\n     sync_blocks,\n@@ -92,13 +93,13 @@ def run_test(self):\n         assert_equal(txout['value'], 50)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n-        # Locked memory should use at least 32 bytes to sign each transaction\n+        # Locked memory should increase to sign transactions\n         self.log.info(\"test getmemoryinfo\")\n         memory_before = self.nodes[0].getmemoryinfo()\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n         mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n         memory_after = self.nodes[0].getmemoryinfo()\n-        assert(memory_before['locked']['used'] + 64 <= memory_after['locked']['used'])\n+        assert_greater_than(memory_after['locked']['used'], memory_before['locked']['used'])\n \n         self.log.info(\"test gettxout (second part)\")\n         # utxo spent in mempool should be visible if you exclude mempool"
      },
      {
        "sha": "ceb9709712d640c1454c8b3fe72276acd182e5b7",
        "filename": "test/functional/wallet_keypool.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool.py?ref=c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
        "patch": "@@ -73,11 +73,10 @@ def run_test(self):\n         time.sleep(1.1)\n         assert_equal(nodes[0].getwalletinfo()[\"unlocked_until\"], 0)\n \n-        # drain them by mining\n-        nodes[0].generate(1)\n-        nodes[0].generate(1)\n-        nodes[0].generate(1)\n-        assert_raises_rpc_error(-12, \"Keypool ran out\", nodes[0].generate, 1)\n+        # drain the keypool\n+        for _ in range(3):\n+            nodes[0].getnewaddress()\n+        assert_raises_rpc_error(-12, \"Keypool ran out\", nodes[0].getnewaddress)\n \n         nodes[0].walletpassphrase('test', 100)\n         nodes[0].keypoolrefill(100)"
      },
      {
        "sha": "b71dae9f40d7fc05d40cfe454de7202744c0f811",
        "filename": "test/functional/wallet_labels.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_labels.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_labels.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_labels.py?ref=c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
        "patch": "@@ -29,8 +29,8 @@ def run_test(self):\n \n         # Note each time we call generate, all generated coins go into\n         # the same address, so we call twice to get two addresses w/50 each\n-        node.generate(1)\n-        node.generate(101)\n+        node.generatetoaddress(nblocks=1, address=node.getnewaddress(label='coinbase'))\n+        node.generatetoaddress(nblocks=101, address=node.getnewaddress(label='coinbase'))\n         assert_equal(node.getbalance(), 100)\n \n         # there should be 2 address groups\n@@ -42,8 +42,9 @@ def run_test(self):\n         linked_addresses = set()\n         for address_group in address_groups:\n             assert_equal(len(address_group), 1)\n-            assert_equal(len(address_group[0]), 2)\n+            assert_equal(len(address_group[0]), 3)\n             assert_equal(address_group[0][1], 50)\n+            assert_equal(address_group[0][2], 'coinbase')\n             linked_addresses.add(address_group[0][0])\n \n         # send 50 from each address to a third address not in this wallet\n@@ -77,7 +78,7 @@ def run_test(self):\n             label.verify(node)\n \n         # Check all labels are returned by listlabels.\n-        assert_equal(node.listlabels(), [label.name for label in labels])\n+        assert_equal(node.listlabels(), sorted(['coinbase'] + [label.name for label in labels]))\n \n         # Send a transaction to each label.\n         for label in labels:"
      },
      {
        "sha": "9fa6d02993f13236a9825969f6b27b472ad4c716",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
        "patch": "@@ -125,7 +125,7 @@ def wallet_file(name):\n         self.start_node(0, ['-wallet=w4', '-wallet=w5'])\n         assert_equal(set(node.listwallets()), {\"w4\", \"w5\"})\n         w5 = wallet(\"w5\")\n-        w5.generate(1)\n+        node.generatetoaddress(nblocks=1, address=w5.getnewaddress())\n \n         # now if wallets/ exists again, but the rootdir is specified as the walletdir, w4 and w5 should still be loaded\n         os.rename(wallet_dir2, wallet_dir())\n@@ -147,7 +147,7 @@ def wallet_file(name):\n         wallet_bad = wallet(\"bad\")\n \n         # check wallet names and balances\n-        wallets[0].generate(1)\n+        node.generatetoaddress(nblocks=1, address=wallets[0].getnewaddress())\n         for wallet_name, wallet in zip(wallet_names, wallets):\n             info = wallet.getwalletinfo()\n             assert_equal(info['immature_balance'], 50 if wallet is wallets[0] else 0)\n@@ -160,7 +160,7 @@ def wallet_file(name):\n         assert_raises_rpc_error(-19, \"Wallet file not specified\", node.getwalletinfo)\n \n         w1, w2, w3, w4, *_ = wallets\n-        w1.generate(101)\n+        node.generatetoaddress(nblocks=101, address=w1.getnewaddress())\n         assert_equal(w1.getbalance(), 100)\n         assert_equal(w2.getbalance(), 0)\n         assert_equal(w3.getbalance(), 0)\n@@ -169,7 +169,7 @@ def wallet_file(name):\n         w1.sendtoaddress(w2.getnewaddress(), 1)\n         w1.sendtoaddress(w3.getnewaddress(), 2)\n         w1.sendtoaddress(w4.getnewaddress(), 3)\n-        w1.generate(1)\n+        node.generatetoaddress(nblocks=1, address=w1.getnewaddress())\n         assert_equal(w2.getbalance(), 1)\n         assert_equal(w3.getbalance(), 2)\n         assert_equal(w4.getbalance(), 3)"
      }
    ]
  },
  {
    "sha": "aab81720de237b258ed4e15f1b1831c11abf74f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWI4MTcyMGRlMjM3YjI1OGVkNGUxNWYxYjE4MzFjMTFhYmY3NGYw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-05T07:51:10Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-18T21:46:48Z"
      },
      "message": "[tests] Add generate method to TestNode\n\nAdds a generate() method to the TestNode class in the test framework.\nThis method intercepts calls to generate, imports a dewterministic\nprivate key to the node and then calls generatetoaddress to generate the\nblock to that address.\n\nNote that repeated calls to importprivkey for the same private keys are\nno-ops, so it's fine to call the generate() method many times.",
      "tree": {
        "sha": "821676af4c944e0cc776f7f5e18d7de973739259",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/821676af4c944e0cc776f7f5e18d7de973739259"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aab81720de237b258ed4e15f1b1831c11abf74f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aab81720de237b258ed4e15f1b1831c11abf74f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aab81720de237b258ed4e15f1b1831c11abf74f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aab81720de237b258ed4e15f1b1831c11abf74f0/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c269209336dfa7e4258cfe7d5b0a3bc07b0da3b2"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cc1bfabbfa09de260be66b1cda5b70b44dce41f6",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aab81720de237b258ed4e15f1b1831c11abf74f0/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aab81720de237b258ed4e15f1b1831c11abf74f0/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=aab81720de237b258ed4e15f1b1831c11abf74f0",
        "patch": "@@ -197,6 +197,25 @@ def wait_for_rpc_connection(self):\n             time.sleep(1.0 / poll_per_s)\n         self._raise_assertion_error(\"Unable to connect to bitcoind\")\n \n+    def generate(self, nblocks, maxtries=1000000):\n+        self.log.debug(\"TestNode.generate() dispatches `generate` call to `generatetoaddress`\")\n+        # Try to import the node's deterministic private key. This is a no-op if the private key\n+        # has already been imported.\n+        try:\n+            self.rpc.importprivkey(privkey=self.get_deterministic_priv_key().key, label='coinbase', rescan=False)\n+        except JSONRPCException as e:\n+            # This may fail if:\n+            # - wallet is disabled ('Method not found')\n+            # - there are multiple wallets to import to ('Wallet file not specified')\n+            # - wallet is locked ('Error: Please enter the wallet passphrase with walletpassphrase first')\n+            # Just ignore those errors. We can make this tidier by importing the privkey during TestFramework.setup_nodes\n+            # TODO: tidy up deterministic privkey import.\n+            assert str(e).startswith('Method not found') or \\\n+                str(e).startswith('Wallet file not specified') or \\\n+                str(e).startswith('Error: Please enter the wallet passphrase with walletpassphrase first')\n+\n+        return self.generatetoaddress(nblocks=nblocks, address=self.get_deterministic_priv_key().address, maxtries=maxtries)\n+\n     def get_wallet_rpc(self, wallet_name):\n         if self.use_cli:\n             return self.cli(\"-rpcwallet={}\".format(wallet_name))"
      }
    ]
  },
  {
    "sha": "c9f02955b2e9062808a9455c4ee7d52cf401eef5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOWYwMjk1NWIyZTkwNjI4MDhhOTQ1NWM0ZWU3ZDUyY2Y0MDFlZWY1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-11T14:14:27Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-18T21:46:48Z"
      },
      "message": "[wallet] Deprecate the generate RPC method",
      "tree": {
        "sha": "0b111c518e15bd3295c4d0ba29e7210db8e05b24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b111c518e15bd3295c4d0ba29e7210db8e05b24"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9f02955b2e9062808a9455c4ee7d52cf401eef5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9f02955b2e9062808a9455c4ee7d52cf401eef5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9f02955b2e9062808a9455c4ee7d52cf401eef5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9f02955b2e9062808a9455c4ee7d52cf401eef5/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aab81720de237b258ed4e15f1b1831c11abf74f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aab81720de237b258ed4e15f1b1831c11abf74f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aab81720de237b258ed4e15f1b1831c11abf74f0"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 31,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fb0243aba80a4134b8738f688ae6127cc657a24d",
        "filename": "doc/release-notes-14468.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9f02955b2e9062808a9455c4ee7d52cf401eef5/doc/release-notes-14468.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9f02955b2e9062808a9455c4ee7d52cf401eef5/doc/release-notes-14468.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14468.md?ref=c9f02955b2e9062808a9455c4ee7d52cf401eef5",
        "patch": "@@ -0,0 +1,15 @@\n+Wallet `generate` RPC method deprecated\n+---------------------------------------\n+\n+The wallet's `generate` RPC method has been deprecated and will be fully\n+removed in v0.19.\n+\n+`generate` is only used for testing. The RPC call reaches across multiple\n+subsystems (wallet and mining), so is deprecated to simplify the wallet-node\n+interface. Projects that are using `generate` for testing purposes should\n+transition to using the `generatetoaddress` call, which does not require or use\n+the wallet component. Calling `generatetoaddress` with an address returned by\n+`getnewaddress` gives the same functionality as the old `generate` method.\n+\n+To continue using `generate` in v0.18, restart bitcoind with the\n+`-deprecatedrpc=generate` configuration."
      },
      {
        "sha": "9827e025c26d3f65d5407632038d55fc2fc81e3a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9f02955b2e9062808a9455c4ee7d52cf401eef5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9f02955b2e9062808a9455c4ee7d52cf401eef5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c9f02955b2e9062808a9455c4ee7d52cf401eef5",
        "patch": "@@ -3289,6 +3289,12 @@ UniValue generate(const JSONRPCRequest& request)\n         );\n     }\n \n+    if (!IsDeprecatedRPCEnabled(\"generate\")) {\n+        throw JSONRPCError(RPC_METHOD_DEPRECATED, \"The wallet generate rpc method is deprecated and will be fully removed in v0.19. \"\n+            \"To use generate in v0.18, restart bitcoind with -deprecatedrpc=generate.\\n\"\n+            \"Clients should transition to using the node rpc method generatetoaddress\\n\");\n+    }\n+\n     int num_generate = request.params[0].get_int();\n     uint64_t max_tries = 1000000;\n     if (!request.params[1].isNull()) {"
      },
      {
        "sha": "588bfbe0833fd198e6e2266d4b5ec9669e743d0d",
        "filename": "test/functional/rpc_deprecated.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9f02955b2e9062808a9455c4ee7d52cf401eef5/test/functional/rpc_deprecated.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9f02955b2e9062808a9455c4ee7d52cf401eef5/test/functional/rpc_deprecated.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_deprecated.py?ref=c9f02955b2e9062808a9455c4ee7d52cf401eef5",
        "patch": "@@ -4,12 +4,17 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test deprecation of RPC calls.\"\"\"\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n \n class DeprecatedRpcTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.setup_clean_chain = True\n-        self.extra_args = [[], [\"-deprecatedrpc=validateaddress\"]]\n+        self.extra_args = [[], [\"-deprecatedrpc=generate\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        # The generate RPC method requires the wallet to be compiled\n+        self.skip_if_no_wallet()\n \n     def run_test(self):\n         # This test should be used to verify correct behaviour of deprecated\n@@ -18,7 +23,10 @@ def run_test(self):\n         # self.log.info(\"Make sure that -deprecatedrpc=createmultisig allows it to take addresses\")\n         # assert_raises_rpc_error(-5, \"Invalid public key\", self.nodes[0].createmultisig, 1, [self.nodes[0].getnewaddress()])\n         # self.nodes[1].createmultisig(1, [self.nodes[1].getnewaddress()])\n-        pass\n+\n+        self.log.info(\"Test generate RPC\")\n+        assert_raises_rpc_error(-32, 'The wallet generate rpc method is deprecated', self.nodes[0].rpc.generate, 1)\n+        self.nodes[1].generate(1)\n \n if __name__ == '__main__':\n     DeprecatedRpcTest().main()"
      }
    ]
  },
  {
    "sha": "ab9aca2bdfe68fcd512955ed2c4d706933088528",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjlhY2EyYmRmZTY4ZmNkNTEyOTU1ZWQyYzRkNzA2OTMzMDg4NTI4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-23T12:32:00Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-10-23T12:32:00Z"
      },
      "message": "[rpc] add 'getnewaddress' hint to 'generatetoaddress' help text.",
      "tree": {
        "sha": "b514b22f6aac843a7926d14e49f3c18eceec1afc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b514b22f6aac843a7926d14e49f3c18eceec1afc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab9aca2bdfe68fcd512955ed2c4d706933088528",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab9aca2bdfe68fcd512955ed2c4d706933088528",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab9aca2bdfe68fcd512955ed2c4d706933088528",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab9aca2bdfe68fcd512955ed2c4d706933088528/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9f02955b2e9062808a9455c4ee7d52cf401eef5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9f02955b2e9062808a9455c4ee7d52cf401eef5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9f02955b2e9062808a9455c4ee7d52cf401eef5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a47ae34b40fa6b7ffa0a87d33e1b38c674da0db1",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab9aca2bdfe68fcd512955ed2c4d706933088528/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab9aca2bdfe68fcd512955ed2c4d706933088528/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=ab9aca2bdfe68fcd512955ed2c4d706933088528",
        "patch": "@@ -167,6 +167,8 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n             \"\\nExamples:\\n\"\n             \"\\nGenerate 11 blocks to myaddress\\n\"\n             + HelpExampleCli(\"generatetoaddress\", \"11 \\\"myaddress\\\"\")\n+            + \"If you are running the bitcoin core wallet, you can get a new address to send the newly generated bitcoin to with:\\n\"\n+            + HelpExampleCli(\"getnewaddress\", \"\")\n         );\n \n     int nGenerate = request.params[0].get_int();"
      }
    ]
  }
]