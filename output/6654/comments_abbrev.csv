sdaftuar,2015-09-09T01:31:45Z,@sipa  I did end up reworking the tracking of in-mempool parents/children to use iterators rather than hashes as you had suggested (which I never pushed up to #6557).\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-138748338,138748338,
btcdrak,2015-09-09T03:11:28Z,@laanwj looks like travis crapped out on one of the jobs and needs restarting.\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-138764516,138764516,
sdaftuar,2015-09-09T12:35:29Z,@btcdrak Actually I think this is some kind of problem with the unit test code -- not sure why it fails to compile only in that one job but I was just able to reproduce locally. Working on a fix...\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-138895713,138895713,
sdaftuar,2015-09-09T13:09:21Z,"@btcdrak Fixed and pushed back up, travis is happy now...\n",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-138904329,138904329,
petertodd,2015-09-14T19:42:07Z,"In general, it'd be good to think about separating the reorg case entirely from the main mempool codebase. For instance, keep a simple linear list of reorged transactions, and after a reorg attempt to add them back the mempool one-by-one. This separate code could also handle cases where we might want to remine transactions that we otherwise wouldn't, as a ""goodwill"" gesture to reduce the impact of",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140186250,140186250,
pstratem,2015-09-14T19:54:07Z,Needs a comment defining ancestor/descendant. \n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140188867,140188867,
sipa,2015-09-14T20:45:56Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140200727,140200727,
petertodd,2015-09-14T20:54:52Z,"utACK, modulo nits.\n",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140203389,140203389,
jonasschnelli,2015-09-14T21:00:52Z,Concept ACK / code review ACK.\nPasses gitian/osx/debian build/unit-tests/rpc-tests.\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140204729,140204729,
petertodd,2015-09-14T21:16:00Z,"Tested with my FSS and Full RBF stress tests and -checkmempool, no unexpected failures. (this pull-req of course doesn't enable any RBF behavior, so replacements failed!)\n",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140208052,140208052,
dcousens,2015-09-14T22:00:15Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140217087,140217087,
sdaftuar,2015-09-16T13:44:17Z,"Thanks everyone for reviewing!  I've pushed up a series of commits to address everyone's feedback; I believe all comments should have been addressed.\n\nThese cleanups need to be squashed, and this pull now needs to be rebased (a merge conflict crept in now that I'm outputting additional information in getrawmempool).  Reviewers -- please let me know if you prefer I leave these commits unsquashed/",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140746438,140746438,
dcousens,2015-09-16T15:16:49Z,"utACK,  thanks @sdaftuar!\n\n**edit:** wait up,  might need to re-evaluate the policy options in regards to comments in #6403\n",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-140773288,140773288,
TheBlueMatt,2015-09-19T01:23:48Z,"My computer's battery died, but in txmempool.h, the definition of txiter as ""boost::multi_index_container::iterator"" is ""implementation defined"" according to boost's docs. In the latest versions it is defined to an equivalent of ""boost::multi_index_container::nth_index<0>::type::iterator"", so you should use that.\n\nOn September 16, 2015 8:44:26 AM CDT, Suhas Daftuar notifications@github.com wrote",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-141606429,141606429,
dcousens,2015-09-19T03:04:04Z,@sdaftuar needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-141613695,141613695,
sdaftuar,2015-09-19T17:40:03Z,"I addressed the latest comments from @morcos and @TheBlueMatt, added an rpc test (it only tests the ancestor/descendant length limits, not the size limits, nor the handling of reorgs -- so that still can be improved), and then squashed everything down and rebased on master to get rid of the merge conflict in `rpcblockchain.cpp`.\n",https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-141692820,141692820,
Mirobit,2015-09-19T18:39:08Z,Does anyone else think the ancestor limit is way to generous? In what other case than spamming do txs have 100 ancestors in mempool? Shouldn't 5 be enough?\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-141696711,141696711,
petertodd,2015-09-20T00:53:25Z,@Mirobit The limits are there to limit computational costs in determining things like dependent fees/size etc. There's no need to set them low unless the algorithms take a long time to compute those sums; the data structures in the mempool are mainly pointer following so it's fairly fast.\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-141723288,141723288,
laanwj,2015-09-21T12:26:44Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-141957549,141957549,
sipa,2015-09-22T16:47:02Z,My node running 5add7a7 with -checkmempool crashed. Last debug.log message was:\n\n```\n2015-09-22 13:06:19 - Disconnect block: 90.04ms\n```\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-142345556,142345556,
morcos,2015-09-22T17:13:56Z,@sipa can you give us some more details?  were you running will all -debug options?  for instance I assume you were not running with estimatefee debugging?   it helps to narrow down where it crashed based on what didn't get printed to the debug log.\n,https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-142352916,142352916,
sdaftuar,2015-09-14T19:13:25Z,Will move this to not be an internal code (so we send a reject message back).\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39434359,39434359,src/main.h
petertodd,2015-09-14T19:29:24Z,"As the idea is the ancestor size is set such that the whole string of transactions could be included in a single block, we really want this to be a less than the max block size, as there's always overhead to consider. (e.g. the coinbase, soft-limit, etc)\n\nI'd suggest we set this to 900KB for a 100KB buffer - plenty even in the case of p2pool's large max 50KB coinbase. Another option might be to ",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39436182,39436182,src/main.cpp
petertodd,2015-09-14T19:45:54Z,trailing whitespace\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39437909,39437909,src/txmempool.cpp
petertodd,2015-09-14T19:54:28Z,trailing whitespace\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39438792,39438792,src/txmempool.cpp
petertodd,2015-09-14T19:56:25Z,trailing whitespace\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39438992,39438992,src/txmempool.cpp
petertodd,2015-09-14T20:10:06Z,trailing whitespace\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39440454,39440454,src/txmempool.cpp
petertodd,2015-09-14T20:18:35Z,trailing whitespace\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39441365,39441365,src/txmempool.cpp
petertodd,2015-09-14T20:39:14Z,Need to document what RemoveStaged() is.\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39443752,39443752,src/txmempool.h
petertodd,2015-09-14T20:40:29Z,"Would prefer if comments like this are written as ""Name()"" rather than just ""Name"" to make it clear what's a variable and what's a function.\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39443903,39443903,src/txmempool.h
petertodd,2015-09-14T20:41:20Z,Double-space after periods? Obvs you're actually Satoshi.\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39443986,39443986,src/txmempool.h
petertodd,2015-09-14T20:42:34Z,This comment doesn't make it clear whether or not transactions in hashesToUpdate are or are not already in the mempool. :)\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39444131,39444131,src/txmempool.h
dcousens,2015-09-14T22:14:48Z,Using `GetArg` (an application level function) in mempool code feels a bit odd.\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39454363,39454363,src/main.cpp
dcousens,2015-09-14T22:25:48Z,"Dirty implies something changed typically,  perhaps instead change this to `ShouldSkip`?\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455254,39455254,src/txmempool.cpp
dcousens,2015-09-14T22:28:43Z,Do we need to check `childIter == mapTx.end()`?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455495,39455495,src/txmempool.cpp
dcousens,2015-09-14T22:29:23Z,`const`?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455549,39455549,src/txmempool.cpp
dcousens,2015-09-14T22:29:51Z,nit: Spacing between operators\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455606,39455606,src/txmempool.cpp
dcousens,2015-09-14T22:32:20Z,nit: `const` on these?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455793,39455793,src/txmempool.cpp
dcousens,2015-09-14T22:33:09Z,Check/assert `it == mapTx.end()`?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455846,39455846,src/txmempool.cpp
dcousens,2015-09-14T22:33:53Z,"Check/assert `it == mapTx.end()`, especially before de-reference\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39455889,39455889,src/txmempool.cpp
dcousens,2015-09-14T22:35:51Z,"Check/assert `it == mapTx.end()`?\nWould only be possible on the first `stagehash` AFAIK\n\nAlso, `const`/`const_iterator`?\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39456040,39456040,src/txmempool.cpp
dcousens,2015-09-14T22:36:54Z,"Again,  assumption of `hash` in `mapTx`,  worth asserting?\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39456108,39456108,src/txmempool.cpp
dcousens,2015-09-14T22:39:13Z,"Again, `find` not checked,  if this assumption can hold true,  can it be documented?\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39456258,39456258,src/txmempool.cpp
dcousens,2015-09-14T22:40:16Z,Is `mapLinks` in perfect sync with `mapTx`?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39456322,39456322,src/txmempool.cpp
sdaftuar,2015-09-15T19:13:03Z,Yes -- I'll be adding some additional asserts to make this more clear.\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39552306,39552306,src/txmempool.cpp
sdaftuar,2015-09-15T20:06:04Z,"mapNextTx contains exactly the in-mempool children of a given transaction, so this code should be safe.  I'll add an assert to make the assumption clearer (the semantics of mapNextTx weren't changed by this pull).\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39557768,39557768,src/txmempool.cpp
sdaftuar,2015-09-16T00:12:05Z,"I agree but is there a better way to do this?  I think I'm following the common practice in the code base, though I look forward to a future refactoring when we have better encapsulation.\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39581755,39581755,src/main.cpp
sdaftuar,2015-09-16T00:31:38Z,I'll add an assert to make clear that is not possible.\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39582922,39582922,src/txmempool.cpp
morcos,2015-09-16T16:02:31Z,Can all these new members from here through to `UpdateChild` be made private?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39649035,39649035,src/txmempool.h
morcos,2015-09-16T16:04:53Z,needs LOCK(cs)?\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39649355,39649355,src/txmempool.cpp
morcos,2015-09-16T16:05:24Z,Needs LOCK(cs) if ever called from somewhere else.\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39649424,39649424,src/txmempool.cpp
morcos,2015-09-16T16:06:08Z,Needs LOCK(cs)\n,https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39649501,39649501,src/txmempool.cpp
morcos,2015-09-16T16:15:40Z,"oops, `setEntries` needs to be public, the rest can be private though.\n",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39650632,39650632,src/txmempool.h
TheBlueMatt,2015-09-19T01:23:30Z,"You can also AssertLockHeld(cs), otherwise, to make things more readable.\n\nOn September 16, 2015 11:05:34 AM CDT, Alex Morcos notifications@github.com wrote:\n\n> > @@ -429,5 +758,58 @@ bool CCoinsViewMemPool::HaveCoins(const uint256\n> > &txid) const {\n> > \n> >  size_t CTxMemPool::DynamicMemoryUsage() const {\n> >      LOCK(cs);\n> > -    return memusage::DynamicUsage(mapTx) +\n> >   memusage",https://github.com/bitcoin/bitcoin/pull/6654#discussion_r39914366,39914366,src/txmempool.cpp
