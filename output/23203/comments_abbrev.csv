laanwj,2021-10-06 11:04:01,"Cocnept ACK, this is great!\n\n> Note that all dependencies do compile, except for Qt (build issue with FreeType I have not investigated), I've just excluded all optional dependencies from the depends build above.\n\nQt is going to be a big challenge for full-static linking (due to system dependencies for X, FreeType etc). It's ok to skip that for now, IMO, would be nice to be able to ship a s",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-935980772,935980772,
DrahtBot,2021-10-06 11:15:12,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-936011846,936011846,
laanwj,2021-10-06 13:23:10,"~~Looking at the depends build log, I think the custom toolchain isn't correctly fed into the boost build. It's using my system compiler:~~\n(snipâ€”this was wrong)",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-936227639,936227639,
fanquake,2021-10-06 13:37:29,"> It's using my system compiler:\n\nThat excerpt is for the native b2 build, where using the system compiler is expected.",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-936251128,936251128,
laanwj,2021-10-06 13:56:34,"I might have not properly cleaned my tree. Will retry a full build.\n\nEdit: whoops, that did it.\n**Testing note** make sure you start from a clean tree. If you get a linking error about `boost::system::generic_category()`, this is caused by pollution from previous builds.",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-936284016,936284016,
laanwj,2021-10-06 14:20:53,"Great, the functional tests pass and so does `test_bitcoin`\n`make check` fails on the secp256k1 tests, but not because of any error, simply because they're not built.\n```\nFAIL: tests\n===========\n\n/home/user/src/bitcoin/src/secp256k1/build-aux/test-driver: line 107: ./tests: No such file or directory\nFAIL tests (exit status: 127)\n\nFAIL: exhaustive_tests\n======================\n",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-936326334,936326334,
laanwj,2021-10-06 18:20:54,"The build works as-is on RISC-V! Except I had to add `--without-asm` to prevent secp256k1 from including x86 assembly (failing while linking `bitcoind` etc). I think the problem is that the instruction set detection in secp256k1's configure compiles a C file with `__asm__` in it but doesn't link it: the IR files likely contain the assembly code as text, and only in the link phase assembling is act",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-936840417,936840417,
yanmaani,2021-10-08 15:06:04,"Concept ACK, always great to see people doing static builds.",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-938715287,938715287,
theStack,2021-10-11 10:38:03,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-939905330,939905330,
laanwj,2021-10-11 13:37:42,"> does it matter what C++ libarary version is on the system?\n\nFWIW I checked and there's another copy of the C++ library headers under `depends/riscv64-unknown-linux-gnu/native/x86_64-linux-musl/include/c++/10.3.0`. I think it's supposed to get `shared_mutex` from there. But also looked at the diff with my local one under `/usr/include` and there's only a comment difference. So not sure this i",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-940040690,940040690,
fanquake,2021-10-14 11:07:55,"I've reworked this PR a bit. It's been rebased, and now builds on #20744 (using `std::filesystem` over `boost::filesystem`) and #23152 (`--enable-lto`). `bitcoind` is no longer linking against any Boost libs, only libevent, which should lessen the potential for build issues. I've also changed the native musl package to point to [my fork](https://github.com/fanquake/musl-cross-make/), where I've ad",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-943253320,943253320,
practicalswift,2021-10-14 11:23:38,"@fanquake \n\nNice work!\n\nIt would be interesting to see the output of `ldd src/bitcoind` :)",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-943264908,943264908,
fanquake,2021-10-14 11:25:39,"@practicalswift \n> It would be interesting to see the output of ldd src/bitcoind :)\n\nIt's:\n```bash\n$ ldd src/bitcoind\n	statically linked\n```",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-943266289,943266289,
dongcarl,2021-10-20 14:19:36,"It seems like musl-cross-make automagically downloads a bunch of repositories (gcc, etc)... Any way we can ""pre-seed"" that?",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-947714751,947714751,
theuni,2021-10-20 19:05:27,"Nice! Playing around with this. Got it to build, great work.\n\nFirst observation (could be a red herring, take with a grain of salt) is the link line:\n\n`x86_64-linux-musl-g++ ... /home/cory/dev/bitcoin2/depends/x86_64-pc-linux-gnu/native/bin/../lib/gcc/x86_64-linux-musl/11.2.0/../../../../x86_64-linux-musl/lib/libstdc++.a libbitcoin_consensus.a crypto/libbitcoin_crypto_base.a crypto/libbitc",https://github.com/bitcoin/bitcoin/pull/23203#issuecomment-947955304,947955304,
