BitcoinPullTester,2013-12-04T05:28:40Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9344275de4207864678b1ebae526447eaee9bfc2 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-29780646,29780646,
super3,2013-12-26T22:15:55Z,"I quite like this. Adds much more user and merchant protection for reasonable zero-confirmation transactions (which I seem to get much grief about when explaining the protocol). \n\nSince double spends should(hopefully) be very few, perhaps there should be two RPC calls. One to check the double spend status of a single tx, and another to detect the double spend status off all current zero-confirma",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-31238174,31238174,
laanwj,2013-12-27T09:02:05Z,"@super3 Sure, there could be a -doublespendnotify that notifies when a transaction in the wallet is attempted double-spent.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-31253190,31253190,
gavinandresen,2013-12-28T08:41:48Z,"I was thinking -walletnotify should notify for the second-spend, and then gettransaction would add a doublespend field (array of ""other"" txids that spend this txns inputs, default empty array).\n\nI suppose a separate -doublespendnotify might be handy, but it seems like the ""I got a new transaction"" -walletnotify code would always be the best place to detect doublespends.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-31292937,31292937,
luke-jr,2014-02-21T17:03:53Z,@gavinandresen Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-35750372,35750372,
dgenr8,2014-03-06T22:50:58Z,"The case where local wallet learns of a remote double-spend AFTER seeing the expected transaction seems just as important, and demands immediate notification, no? Because that other transaction, though just having got here, may already be getting confirmed somewhere.\n\nAlso, is it necessary to check for a chain of txes in the memory pool, where the double spend is earlier in the chain?\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-36947805,36947805,
gmaxwell,2014-03-21T00:36:53Z,Should this really be relaying functionally equivalent double spends? E.g. ones that pay the same amounts to the same outputs?\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38237328,38237328,
gavinandresen,2014-03-21T02:02:56Z,"@gmaxwell : No. The point is to better support in-person face-to-face transactions, where the danger is customer buys a coffee with a hacked app that sends a spend to your point-of-sale system and, at the same time, broadcasts a send-to-self double-spend (different outputs) to the network.\n\nThis change makes it much easier for the PoS system to alert the cashier that the customer is doing someth",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38242266,38242266,
gavinandresen,2014-03-21T02:05:09Z,"Wait: I just reread @gmaxwell's comment, and realize I might have misinterpreted it....\n\nNot relaying functionally equivalent double spends is probably a good idea, given transaction malleability....\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38242360,38242360,
gmaxwell,2014-03-21T02:05:24Z,haha. Thanks. I was about to say!\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38242369,38242369,
dgenr8,2014-03-21T07:10:36Z,Definitely no relay for a respend that could be constructed by a third party.  Doesn't the IsStandardTx() check ensure this?\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38253276,38253276,
gmaxwell,2014-03-21T07:27:33Z,So what happens when an attacker constructs his doublespends using transaction patterns which are rejected by IsStandard but accepted by miners?  There is currently a really significant portion of the hashrate which mines a definition somewhat wider than IsStandard.\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38253910,38253910,
gavinandresen,2014-03-21T11:34:01Z,@gmaxwell : that is the same as a Finney attack.\n\nRE: hashrate accepting wider IsStandard:  just Eligius? Or are there others?\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38268090,38268090,
sipa,2014-03-21T18:13:03Z,"Very random and not well-thought out idea: when relaying a double spend, clear one of the scriptSigs (or find another way to 'neuter' it), so that it cannot possibly confirm, but still proves someone signed a double spend.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38306003,38306003,
petertodd,2014-03-22T07:47:49Z,"@sipa Not likely to do any good, as malicious double-spends will just spend a single input. Of course, that leads to the next step of ""why don't we just provide the signature and prove two signatures were signed for the same scriptPubKey"" which then makes address re-use of any kind ever rather problematic, to say the least. Conveniently SHA256 midstates are no use here either, as the important bit",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38345459,38345459,
gmaxwell,2014-03-22T11:23:51Z,"@gavinandresen Indeed, but it doesn't require the attacker have hashpower themselves and may— at times— be easy to exploit. I think it's easy to exploit at the moment. I guess ultimately thats just yet-another argument to hurry up and get rid of most of IsStandard.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38348959,38348959,
dgenr8,2014-03-22T13:52:02Z,@sipa Sometimes what this node thinks is a respend is actually the one that will get confirmed.  Respender will have tried to introduce the transactions in disparate parts of the network.\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38352023,38352023,
dgenr8,2014-03-22T14:22:37Z,"@petertodd I don't follow.  You posit that one transaction doesn't relay, but then assume that both do.  Who is ""target""?  The target of a respend is the merchant who is about to hand over a venti cappuccino.  Can I currently pay miners OOB $.25 to allow me to get it for free?  If so, then things are worse than I thought.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38352715,38352715,
luke-jr,2014-03-27T04:56:07Z,Does this relay double spends if they are non-standard? Should it?\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38769129,38769129,
sipa,2014-03-27T05:58:25Z,"@dgenr8 Yes, the network cannot guarantee any 0-confirmation security. If a miner is willing to mine a conflicting transaction for you, the original can't be confirmed anymore. Note that the ""attacking"" miner either needs a significant portion of the hashrate (to have a chance to be the one mining the next block), or needs to do a Finney attack (which is difficulty in PoS settings due to timing co",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38771534,38771534,
dgenr8,2014-03-27T23:24:34Z,"@gmaxwell @petertodd @luke-jr How about a weaker !IsMutantTx function to allow one relay, rather than being subject to IsStandardTx\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38873424,38873424,
luke-jr,2014-03-27T23:27:26Z,"@dgenr8 The problem isn't that simple: If you don't relay non-standard non-mutants, then it's easy to make a double-spend that avoids announcement. But if you do relay non-standard non-mutants, then you effectively destroy the IsStandard rule entirely, since anyone can then get their non-standard transactions relayed by double-spending it with a standard transaction (which might still never confir",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38873627,38873627,
dgenr8,2014-03-27T23:35:26Z,I agree that is worse.  So this alert scheme will not be 100% effective until there is a consensus around what gets relayed.  How about we have the reference client set the example though.\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38874250,38874250,
luke-jr,2014-03-27T23:37:40Z,"It will never be 100% effective. Unless my point is resolved, it won't even be 1% effective. Therefore, as it is today, this is IMO _only_ a false sense of security.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38874410,38874410,
petertodd,2014-03-28T05:14:51Z,"@luke-jr  IMO the reason to have IsStandard() these days is so that during a soft-fork non-upgraded miners will still mine valid blocks, and as a safety net for bugs. With Eligius mining them anyway, I'm much less worried about bugs; relaying them for double-spend notification doesn't mean you have to add them to your mempool and blocks.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-38889452,38889452,
dgenr8,2014-03-31T03:48:23Z,"@luke-jr It doesn't taste good worrying about you mining that non-standard double-spend.  I have an idea that would require you to waste a whole block if you want to do that.  Of course, it is not likely to happen, even if it works (obviously an eventual fork is involved).\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-39051998,39051998,
dgenr8,2014-03-31T03:54:24Z,@sipa 0-conf security < 1-conf security < 2-conf security...  But does 0-conf security have to be zero?  With all the payment protocol stuff happening I would think this question would be more popular.\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-39052196,39052196,
luke-jr,2014-03-31T04:42:54Z,"@petertodd Without IsStandard, even relay nodes will execute the ""non-standard"" scripts. You can't skip that with double-spend-relay, or it's insecure and trivially DoS'd.\n\n@dgenr8 Sounds like a 51% attack.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-39053655,39053655,
dgenr8,2014-03-31T05:45:47Z,"@luke-jr I was imprecise as usual. You would have to forego transactions worth .5 of the fees, on average, but keep the reward.  I look forward to you blowing holes in it :)\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-39055593,39055593,
luke-jr,2014-03-31T06:01:31Z,"@dgenr8 Whether a transaction IsStandard or not is _not_ part of the Bitcoin protocol, changes all the time, and will eventually include everything possible. Making any protocol rules based on it (such as foregoing fees) would be a 51% attack or (if it had consensus) a softfork.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-39056144,39056144,
laanwj,2014-03-31T06:30:39Z,"@dgenr8, others can you please take the basic bitcoin discussion somewhere else. Github isn't very suitable for forum-like discussions (everyone gets emails every time something is posted!) and this clutters the issue for people that want to actually comment on the working of the posted code.\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-39057322,39057322,
dgenr8,2014-05-19T11:06:51Z,A patch like 2c65830 is needed to fix the bug in bloom filter clear.\n,https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-43489377,43489377,
BitcoinPullTester,2014-06-23T16:21:13Z,"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/p3354_9344275de4207864678b1ebae526447eaee9bfc2/ for test log.\n\nThis pull does not merge cleanly onto current master\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.lo",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-46867260,46867260,
gavinandresen,2014-07-04T19:04:53Z,"Closing; @dgenr8 picked this up and ran with it, thanks!\n",https://github.com/bitcoin/bitcoin/pull/3354#issuecomment-48065987,48065987,
