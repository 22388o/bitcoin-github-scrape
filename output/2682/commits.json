[
  {
    "sha": "95c7db3dbf4012dd02e5f1f30e6d982341facaa6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWM3ZGIzZGJmNDAxMmRkMDJlNWYxZjMwZTZkOTgyMzQxZmFjYWE2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2013-05-22T18:58:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2013-05-22T18:59:36Z"
      },
      "message": "More bestblock records in wallets\n\nWrite bestblock records in wallets:\n* Every 20160 blocks synced, no matter what (before: none during IBD)\n* Every 144 blocks after IBD (before: for every block, slow)\n* When creating a new wallet\n* At shutdown\n\nThis should result in far fewer spurious rescans.",
      "tree": {
        "sha": "b5148e78e2e84eeb4c337b4db5755bf34ca0dc8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5148e78e2e84eeb4c337b4db5755bf34ca0dc8b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95c7db3dbf4012dd02e5f1f30e6d982341facaa6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95c7db3dbf4012dd02e5f1f30e6d982341facaa6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95c7db3dbf4012dd02e5f1f30e6d982341facaa6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95c7db3dbf4012dd02e5f1f30e6d982341facaa6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b99cfae3cf3e8f3a5f0bbda9e77fe3419902f9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b99cfae3cf3e8f3a5f0bbda9e77fe3419902f9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b99cfae3cf3e8f3a5f0bbda9e77fe3419902f9d"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ebd9dee7b2ffd86e5b1662786c50484982d29193",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95c7db3dbf4012dd02e5f1f30e6d982341facaa6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95c7db3dbf4012dd02e5f1f30e6d982341facaa6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=95c7db3dbf4012dd02e5f1f30e6d982341facaa6",
        "patch": "@@ -100,6 +100,7 @@ void Shutdown()\n     StopNode();\n     {\n         LOCK(cs_main);\n+        pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n         if (pblocktree)\n             pblocktree->Flush();\n         if (pcoinsTip)\n@@ -998,6 +999,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n             if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n                 strErrors << _(\"Cannot write default address\") << \"\\n\";\n         }\n+\n+        pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n     }\n \n     printf(\"%s\", strErrors.str().c_str());"
      },
      {
        "sha": "b7efac53b1e1126e5b83f4e334063ab91734b95f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95c7db3dbf4012dd02e5f1f30e6d982341facaa6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95c7db3dbf4012dd02e5f1f30e6d982341facaa6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=95c7db3dbf4012dd02e5f1f30e6d982341facaa6",
        "patch": "@@ -1870,7 +1870,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     }\n \n     // Update best block in wallet (so we can detect restored wallets)\n-    if (!fIsInitialDownload)\n+    if ((pindexNew->nHeight % 20160) == 0 || (!fIsInitialDownload && (pindexNew->nHeight % 144) == 0))\n     {\n         const CBlockLocator locator(pindexNew);\n         ::SetBestChain(locator);"
      }
    ]
  }
]