sdaftuar,2018-09-24T19:04:14Z,"Why did you decide to close this PR?  After some digging I believe this change correctly fixes a bug, though I think the problem is not in the unsigned integer overflow (which is well-defined), but in casting the resulting unsigned integer to a signed type (which I have recently learned is not defined behavior, when the unsigned value would be negative).\n\nSo I think this change, which casts to",https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-424088605,424088605,
practicalswift,2018-09-24T19:24:55Z,@sdaftuar I received some feedback about my PR:s creating too much review work â€“ that's the background to the close. But I'm happy to re-open :-),https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-424094825,424094825,
MarcoFalke,2018-09-24T19:56:15Z,"I haven't reviewed the claim that @sdaftuar makes, but I checked that on my machine the bitcoind compiled with clang doesn't change at all, and for gcc the objdump is the same.",https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-424103877,424103877,
DrahtBot,2018-09-24T20:52:31Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#13804](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13804.html) (WIP: Transaction Pool Layer by MarcoFalke)\",https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-424120796,424120796,
sdaftuar,2018-09-24T21:01:13Z,"utACK\n\n@ryanofsky pointed me to this:  http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3690.pdf, from section 4.7.3 \n\n> If the destination type is signed, the value is unchanged if it can be represented in the destination type (and bit-field width); otherwise, the value is implementation-defined.\n",https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-424123452,424123452,
practicalswift,2018-09-24T21:12:28Z,"@sdaftuar @ryanofsky You might want to take a look at #11551 (`Fix unsigned integer wrap-around in GetBlockProofEquivalentTime`) and #11535 :-)\n\n",https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-424126787,424126787,
DrahtBot,2018-09-28T09:55:15Z,<!--32850dd3fdea838b4049e64f46995ea2-->\n| Coverage  | Change ([pull 14226](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/14226/total.coverage/index.html)) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html))   |\n|-----------|-------------------------|--------------------|\n| Lines     | -0.0552 %            | 87.0361 %,https://github.com/bitcoin/bitcoin/pull/14226#issuecomment-425385719,425385719,
