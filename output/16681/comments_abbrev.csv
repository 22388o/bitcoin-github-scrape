Sjors,2019-08-22 18:03:19,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-524014047,524014047,
DrahtBot,2019-08-22 21:17:08,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16895](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16895.html) (External signer multisig support by Sjors)\",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-524081251,524081251,
jtimon,2019-09-06 21:20:19,"Now also in newly included wallet_reorgsrestore.py\n",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-529018238,529018238,
laanwj,2019-09-10 13:56:55,I don't understand the rationale behind this. How much chance do these tests have of working with a non-regtest chain?,https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-529947371,529947371,
instagibbs,2019-09-10 17:59:22,"@laanwj with a custom testchain, most tests should work out of the box. Only ones that rely on specific genesis block information will break(there are a couple).\n\nBy itself it isn't greatly motivated, but it's also not a burden to maintain, so for me concept ACK.",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-530051862,530051862,
laanwj,2019-09-10 18:42:58,"Many of the functional tests depend on specific parameters of the regtest chain to be able to test things: reward schedule, mining difficulty, even address format.\n\nAnyhow, conecpt ACK on this change, I was just wondering.",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-530068539,530068539,
jtimon,2019-09-10 19:12:45,"> I don't understand the rationale behind this. How much chance do these tests have of working with a non-regtest chain?\n\nWell, any custom chain created with #8994 should pass all the tests, like, for example, does -chain=regtest2 (in that PR).\nOther chains like signets I guess don't benefit much from this change.\nProjects based on bitcoin core that periodically rebase like elements should",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-530079445,530079445,
laanwj,2019-09-26 11:34:32,"Well I think in any case it's better to have the chain configurable instead of hardcoding a magic string `""regtest""`.\n\nACK 72d822fc2c46d55d959cc8d2f50145d8607e7126",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-535463066,535463066,
MarcoFalke,2019-10-02 16:19:50,+-0 `self.chain` and `regtest` are the same for these test and I don't think it will ever change,https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-537570010,537570010,
jtimon,2019-10-02 16:53:23,"@MarcoFalke does that imply a nack to #8994 ?\nBecause that changes there.",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-537583614,537583614,
jtimon,2019-10-02 16:57:23,"Also, wouldn't it make sense alone, if anything, for consistency with https://github.com/bitcoin/bitcoin/pull/16509 ?\n",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-537585213,537585213,
MarcoFalke,2019-10-02 17:47:48,"> does that imply a nack to #8994 ?\n\nYeah, I am -0 on changing to `regtest2`.\n\n> Also, wouldn't it make sense alone, if anything, for consistency with #16509 ?\n\nYeah, +0 on this.\n\nSo overall +-0",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-537605454,537605454,
Sjors,2019-10-06 08:04:42,ACK 72d822f. Tests still pass on macOS 10.14.6. ,https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-538721862,538721862,
MarcoFalke,2019-10-07 17:14:12,"Also, this is not a complete fix, since it is impossible to protect against re-introduction of `regtest` in new code. E.g. https://github.com/bitcoin/bitcoin/blob/eeecdfa27a14df83c441cb4b04c0ae78a2ccbd2c/test/functional/feature_loadblock.py#L39",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-539113756,539113756,
MarcoFalke,2019-10-07 17:14:35,"So, I'll change to overall -0.1",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-539113896,539113896,
laanwj,2019-10-08 08:23:51,"> Also, this is not a complete fix, since it is impossible to protect against re-introduction of regtest in new code. E.g. \n\nStrictly you could: randomize the test chain name every time.\nNot sure it's worth it though â€¦\n\n> Yeah, I am -0 on changing to regtest2.\n\nI don't think we should change the default name of the regtest network either. The only chain we'd potentially rename would ",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-539406866,539406866,
jtimon,2019-10-08 20:15:27,"> Also, this is not a complete fix,...\n\nRebased on top of master, but I don't see that test in master. It seems that commit doesn't belong in master unless I'm missing something.\n\nI added https://github.com/jtimon/bitcoin/commit/e889b4ba1fc20fe49cce2f23f0594fd8bf19993d#diff-6651d2553d181295a8570f18069e6b2bR28 for completion when doing the grep.\nIn any case, even if it's not complete (and",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-539684060,539684060,
MarcoFalke,2019-10-08 20:39:22,"> In that case, I guess we should close this.\n\nOk, closing then",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-539694699,539694699,
jtimon,2019-10-09 13:36:14,"So consistency and completion are not good enough reasons to do things and neither is avoiding hardcoding strings?\nOk, noted.\n\n\n",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-540003921,540003921,
MarcoFalke,2019-10-25 17:12:33,"> So consistency and completion are not good enough reasons to do things and neither is avoiding hardcoding strings?\n\nAs mentioned previously, this is not complete nor consistent. If you rebase on master, new `regtest` strings have been introduced. And there is no sane way to prevent that happen in the future, even if this pull was merged.\n\nAlso, we have a lot more stuff hardcoded to regte",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-546436325,546436325,
jtimon,2019-10-25 17:30:35,"As answered before, is (or was) only not complete for one case whuch is\ncontemplated in other prs.\nThe example you poibted out wasn't ecen part of master.\n\nOf course, the more we delay this the more new things there will be to\ncorrect, for people will continue to copy ""regtest"" instead of self.chain\nfrom other tests.\n\nI will grep again later, but I really hope this time you're not talking\",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-546442227,546442227,
jtimon,2019-10-26 11:26:44,"Rebased, adapted new test feature_loadblock.py",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-546594309,546594309,
Sjors,2019-10-27 18:39:14,"re-ACK 1abcecc. I think it's an improvement even if incomplete and if some PR's might accidentally bring ""regtest"" back. Subsequent improvements hopefully don't have to touch 16 files.\n\nI'd like to break the circular arguments between this and related pull requests. Those are complicated enough to reason about without ""but I don't like this name change in the other PR""; using `self.chain` inst",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-546721751,546721751,
jtimon,2020-02-04 11:46:46,"I guess if I rebase now there will be more instances, but then I would lose the 2 ACKs.\nWhat should I do?\n",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-581870687,581870687,
elichai,2020-02-04 13:51:59,"Code review ACK 1abcecc40c518a98b7d17880657ec0247abdf125\nI do wonder how many of these tests will fail on testnet (even a custom one with difficulty 1).\nAnyhow reducing hard coded strings is good IMHO, and I think even though it's incomplete it will help prevent future hard coded strings just by the fact that a lot of people copy-paste that code.",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-581918926,581918926,
ryanofsky,2020-02-04 16:12:27,"> I guess if I rebase now there will be more instances, but then I would lose the 2 ACKs.\n> What should I do?\n\nI'd suggest rebasing, the changes here are straightforward and I'm happy to reack.",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-581986042,581986042,
MarcoFalke,2020-02-04 20:55:54,"This has two ACKs, merging now.",https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-582110773,582110773,
fanquake,2020-02-05 00:08:05,Opened #18068 to track a followup PR.,https://github.com/bitcoin/bitcoin/pull/16681#issuecomment-582177642,582177642,
