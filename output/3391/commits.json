[
  {
    "sha": "3380713af5f47efba48fcbd153013e57c9004ded",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzgwNzEzYWY1ZjQ3ZWZiYTQ4ZmNiZDE1MzAxM2U1N2M5MDA0ZGVk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-11T14:12:13Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-20T14:50:21Z"
      },
      "message": "[Qt] coin control change address handling update\n\n- re-work change address handling so that default is CNoDestination(),\n  until a verified and known change address was entered (easier code flow)\n- add a missing NULL pointer check for adresstablemodel\n- add a missing text when opening coin control address selection for\n  priority and ensure the label is black\n- add a missing . at the end of a sentence",
      "tree": {
        "sha": "b303762c2889ce901e9edf6be279a3240e7d8f96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b303762c2889ce901e9edf6be279a3240e7d8f96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3380713af5f47efba48fcbd153013e57c9004ded",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3380713af5f47efba48fcbd153013e57c9004ded",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3380713af5f47efba48fcbd153013e57c9004ded",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3380713af5f47efba48fcbd153013e57c9004ded/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f498d43ee2ebc1507ca0d649af6bffd1b3182646"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 35,
      "deletions": 34
    },
    "files": [
      {
        "sha": "e1a9140f456eff2084b8aa7018a063bb0c6d9de2",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=3380713af5f47efba48fcbd153013e57c9004ded",
        "patch": "@@ -449,7 +449,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         }\n     }\n \n-    QString sPriorityLabel      = \"\";\n+    QString sPriorityLabel      = tr(\"none\");\n     int64_t nAmount             = 0;\n     int64_t nPayFee             = 0;\n     int64_t nAfterFee           = 0;\n@@ -593,18 +593,18 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n \n     // turn labels \"red\"\n-    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                // Bytes >= 1000\n-    l6->setStyleSheet((!AllowFree(dPriority)) ? \"color:red;\" : \"\");         // Priority < \"medium\"\n-    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                    // Low Output = \"yes\"\n-    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\"); // Change < 0.01BTC\n+    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                            // Bytes >= 1000\n+    l6->setStyleSheet((dPriority > 0 && !AllowFree(dPriority)) ? \"color:red;\" : \"\");    // Priority < \"medium\"\n+    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                                // Low Output = \"yes\"\n+    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\");             // Change < 0.01BTC\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n     toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\"\") + \"<br /><br />\";\n+    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n     toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n \n     QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";"
      },
      {
        "sha": "92be835c566fe10575763f51b7b6bcce69bca2f0",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 28,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=3380713af5f47efba48fcbd153013e57c9004ded",
        "patch": "@@ -546,44 +546,45 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n // Coin Control: custom change address changed\n void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n {\n-    if (model)\n+    if (model && model->getAddressTableModel())\n     {\n-        CoinControlDialog::coinControl->destChange = CBitcoinAddress(text.toStdString()).Get();\n+        // Default to no change address until verified\n+        CoinControlDialog::coinControl->destChange = CNoDestination();\n+        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n+\n+        CBitcoinAddress addr = CBitcoinAddress(text.toStdString());\n \n-        // label for the change address\n-        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n-        if (text.isEmpty())\n+        if (text.isEmpty()) // Nothing entered\n+        {\n             ui->labelCoinControlChangeLabel->setText(\"\");\n-        else if (!CBitcoinAddress(text.toStdString()).IsValid())\n+        }\n+        else if (!addr.IsValid()) // Invalid address\n         {\n-            // invalid change address\n-            CoinControlDialog::coinControl->destChange = CNoDestination();\n-\n             ui->lineEditCoinControlChange->setValid(false);\n-            ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n             ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Bitcoin address\"));\n         }\n-        else\n+        else // Valid address\n         {\n-            QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n-            if (!associatedLabel.isEmpty())\n-                ui->labelCoinControlChangeLabel->setText(associatedLabel);\n-            else\n+            CPubKey pubkey;\n+            CKeyID keyid;\n+            addr.GetKeyID(keyid);\n+            if (!model->getPubKey(keyid, pubkey)) // Unknown change address\n             {\n-                CPubKey pubkey;\n-                CKeyID keyid;\n-                CBitcoinAddress(text.toStdString()).GetKeyID(keyid);\n-                if (model->getPubKey(keyid, pubkey))\n-                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+                ui->lineEditCoinControlChange->setValid(false);\n+                ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n+            }\n+            else // Known change address\n+            {\n+                ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n+\n+                // Query label\n+                QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n+                if (!associatedLabel.isEmpty())\n+                    ui->labelCoinControlChangeLabel->setText(associatedLabel);\n                 else\n-                {\n-                    // unknown change address\n-                    CoinControlDialog::coinControl->destChange = CNoDestination();\n-\n-                    ui->lineEditCoinControlChange->setValid(false);\n-                    ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n-                    ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n-                }\n+                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+\n+                CoinControlDialog::coinControl->destChange = addr.Get();\n             }\n         }\n     }"
      }
    ]
  }
]