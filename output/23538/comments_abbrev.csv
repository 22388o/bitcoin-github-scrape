katesalazar,2021-11-17 21:09:10,"Concept ACK.\n\n~~Cppreference.com: [std::from_chars_result from_chars(...)][0]: [locale independence][1]~~ refers to code initially proposed and later removed completely.\n\n[0]: https://en.cppreference.com/w/cpp/utility/from_chars\n[1]: https://en.cppreference.com/w/cpp/utility/from_chars#Notes",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-972030595,972030595,
fanquake,2021-11-18 00:08:08,"https://github.com/bitcoin/bitcoin/pull/23538/checks?check_run_id=4242747766\n```bash\ntorcontrol.cpp:279:49: runtime error: implicit conversion from type 'unsigned char' of value 255 (8-bit, unsigned) to type 'char' changed the value to -1 (8-bit, signed)\n    #0 0x557c2b741c35 in ParseTorReplyMapping(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/t",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-972351963,972351963,
DrahtBot,2021-11-18 02:46:02,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22953](https://github.com/bitcoin/bitcoin/pull/22953) (refactor: introduce single-separator split helper (boost::split r",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-972465614,972465614,
laanwj,2021-11-18 09:39:52,"Concept ACK.\nI wondered how this ended up in the code (I definitely didn't remember writing it), but looks like the `strtol` was introduced in 49a199bb51fc00659f8134e5b16f5d36364b0554",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-972696302,972696302,
laanwj,2021-11-18 09:48:22,"honestly, I kind of wonder why this isn't implemented with a little\n```\nnum *= 8;\nnum += val - '0';\n```\nkind of loop.\nWrapping it in a `std::string` then passing it to a parsing function seems overkill, especially if no validation nor special whitespace handling is needed, and it already iterates over every character.",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-972703238,972703238,
MarcoFalke,2021-11-18 17:09:58,">  Wrapping it in a std::string then passing it to a parsing function seems overkill, especially if no validation nor special whitespace handling is needed, and it already iterates over every character.\n\nThe validation pass needs to be a different loop than the calculation loop, so I think a one-line function call is fine. If speed is a concern, ToIntegral could be changed to use `std::string_",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-973068103,973068103,
laanwj,2021-11-24 10:51:59,"Code review and tested ACK fa186eb7f45a9d420503f96ff3a5f753afb75dec\n\n> If speed is a concern, ToIntegral could be changed to use std::string_view instead.\n\nI don't think speed is a concern, the whole construction just looked fragile and bolted on to me, I think it's much clearer what the code does and what the intent is this way.",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-977759398,977759398,
laanwj,2021-11-25 10:39:08,"It looks like this code is sufficiently tested in `util_ParseTorReplyMapping`.\n\nI've done some manual testing, too, in this way:\n```\n$ src/bitcoind -regtest -listenonion=1 -listen=1 -debug=tor\nâ‹® \n2021-11-25T10:34:45Z tor: Connected to Tor version 0.4.6.7\n2021-11-25T10:34:45Z tor: Supported authentication method: SAFECOOKIE\n2021-11-25T10:34:45Z tor: Using SAFECOOKIE authentication, ",https://github.com/bitcoin/bitcoin/pull/23538#issuecomment-979079331,979079331,
flack,2021-11-17 21:38:27,"if this was the last occurence as you say, could the TODO in line 40/41 be removed?",https://github.com/bitcoin/bitcoin/pull/23538#discussion_r751656500,751656500,test/lint/lint-locale-dependence.sh
MarcoFalke,2021-11-18 19:22:14,"thx, fixed.",https://github.com/bitcoin/bitcoin/pull/23538#discussion_r752555985,752555985,test/lint/lint-locale-dependence.sh
