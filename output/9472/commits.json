[
  {
    "sha": "a4bac66cca62a5514579a15d198f3baa80683172",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGJhYzY2Y2NhNjJhNTUxNDU3OWExNWQxOThmM2JhYTgwNjgzMTcy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T15:09:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T21:18:49Z"
      },
      "message": "[MOVEONLY] Move progress estimation out of checkpoints",
      "tree": {
        "sha": "8b87de6722b0626d1616667dbfeb587f75a0efcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b87de6722b0626d1616667dbfeb587f75a0efcf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4bac66cca62a5514579a15d198f3baa80683172",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4bac66cca62a5514579a15d198f3baa80683172",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4bac66cca62a5514579a15d198f3baa80683172",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4bac66cca62a5514579a15d198f3baa80683172/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7dac1e5e9e887f5f6ff146e812a05bd3bf281eae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dac1e5e9e887f5f6ff146e812a05bd3bf281eae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dac1e5e9e887f5f6ff146e812a05bd3bf281eae"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 52,
      "deletions": 50
    },
    "files": [
      {
        "sha": "13b58765301df7aa9eaaf4021d624f1731ff18fd",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -15,46 +15,6 @@\n \n namespace Checkpoints {\n \n-    /**\n-     * How many times slower we expect checking transactions after the last\n-     * checkpoint to be (from checking signatures, which is skipped up to the\n-     * last checkpoint). This number is a compromise, as it can't be accurate\n-     * for every system. When reindexing from a fast disk with a slow CPU, it\n-     * can be up to 20, while when downloading from a slow network with a\n-     * fast multicore CPU, it won't be much higher than 1.\n-     */\n-    static const double SIGCHECK_VERIFICATION_FACTOR = 5.0;\n-\n-    //! Guess how far we are in the verification process at the given block index\n-    double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex *pindex, bool fSigchecks) {\n-        if (pindex==NULL)\n-            return 0.0;\n-\n-        int64_t nNow = time(NULL);\n-\n-        double fSigcheckVerificationFactor = fSigchecks ? SIGCHECK_VERIFICATION_FACTOR : 1.0;\n-        double fWorkBefore = 0.0; // Amount of work done before pindex\n-        double fWorkAfter = 0.0;  // Amount of work left after pindex (estimated)\n-        // Work is defined as: 1.0 per transaction before the last checkpoint, and\n-        // fSigcheckVerificationFactor per transaction after.\n-\n-        if (pindex->nChainTx <= data.nTransactionsLastCheckpoint) {\n-            double nCheapBefore = pindex->nChainTx;\n-            double nCheapAfter = data.nTransactionsLastCheckpoint - pindex->nChainTx;\n-            double nExpensiveAfter = (nNow - data.nTimeLastCheckpoint)/86400.0*data.fTransactionsPerDay;\n-            fWorkBefore = nCheapBefore;\n-            fWorkAfter = nCheapAfter + nExpensiveAfter*fSigcheckVerificationFactor;\n-        } else {\n-            double nCheapBefore = data.nTransactionsLastCheckpoint;\n-            double nExpensiveBefore = pindex->nChainTx - data.nTransactionsLastCheckpoint;\n-            double nExpensiveAfter = (nNow - pindex->GetBlockTime())/86400.0*data.fTransactionsPerDay;\n-            fWorkBefore = nCheapBefore + nExpensiveBefore*fSigcheckVerificationFactor;\n-            fWorkAfter = nExpensiveAfter*fSigcheckVerificationFactor;\n-        }\n-\n-        return fWorkBefore / (fWorkBefore + fWorkAfter);\n-    }\n-\n     CBlockIndex* GetLastCheckpoint(const CCheckpointData& data)\n     {\n         const MapCheckpoints& checkpoints = data.mapCheckpoints;"
      },
      {
        "sha": "7449d1063babdf2cafd3c92c567ee28c3495ab0e",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -22,8 +22,6 @@ namespace Checkpoints\n //! Returns last CBlockIndex* in mapBlockIndex that is a checkpoint\n CBlockIndex* GetLastCheckpoint(const CCheckpointData& data);\n \n-double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex* pindex, bool fSigchecks = true);\n-\n } //namespace Checkpoints\n \n #endif // BITCOIN_CHECKPOINTS_H"
      },
      {
        "sha": "aefcc47255b608070318706c1fdef391c6a19a88",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -130,7 +130,7 @@ double ClientModel::getVerificationProgress(const CBlockIndex *tipIn) const\n         LOCK(cs_main);\n         tip = chainActive.Tip();\n     }\n-    return Checkpoints::GuessVerificationProgress(Params().Checkpoints(), tip);\n+    return GuessVerificationProgress(Params().Checkpoints(), tip);\n }\n \n void ClientModel::updateTimer()"
      },
      {
        "sha": "a3954d81fcb72a6f6ece033edf22727bef524f4e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -1073,7 +1073,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"bestblockhash\",         chainActive.Tip()->GetBlockHash().GetHex()));\n     obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n     obj.push_back(Pair(\"mediantime\",            (int64_t)chainActive.Tip()->GetMedianTimePast()));\n-    obj.push_back(Pair(\"verificationprogress\",  Checkpoints::GuessVerificationProgress(Params().Checkpoints(), chainActive.Tip())));\n+    obj.push_back(Pair(\"verificationprogress\",  GuessVerificationProgress(Params().Checkpoints(), chainActive.Tip())));\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     obj.push_back(Pair(\"pruned\",                fPruneMode));\n "
      },
      {
        "sha": "ea43d4f17190d56fdf5c958849a5e74f610443e7",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 2,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -2080,7 +2080,7 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n       chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), chainActive.Tip()->nVersion,\n       log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n-      Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n+      GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n     if (!warningMessages.empty())\n         LogPrintf(\" warning='%s'\", boost::algorithm::join(warningMessages, \", \"));\n     LogPrintf(\"\\n\");\n@@ -3445,7 +3445,7 @@ bool static LoadBlockIndexDB(const CChainParams& chainparams)\n     LogPrintf(\"%s: hashBestChain=%s height=%d date=%s progress=%f\\n\", __func__,\n         chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(),\n         DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n-        Checkpoints::GuessVerificationProgress(chainparams.Checkpoints(), chainActive.Tip()));\n+        GuessVerificationProgress(chainparams.Checkpoints(), chainActive.Tip()));\n \n     return true;\n }\n@@ -4141,6 +4141,46 @@ void DumpMempool(void)\n     }\n }\n \n+/**\n+ * How many times slower we expect checking transactions after the last\n+ * checkpoint to be (from checking signatures, which is skipped up to the\n+ * last checkpoint). This number is a compromise, as it can't be accurate\n+ * for every system. When reindexing from a fast disk with a slow CPU, it\n+ * can be up to 20, while when downloading from a slow network with a\n+ * fast multicore CPU, it won't be much higher than 1.\n+ */\n+static const double SIGCHECK_VERIFICATION_FACTOR = 5.0;\n+\n+//! Guess how far we are in the verification process at the given block index\n+double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex *pindex, bool fSigchecks) {\n+    if (pindex==NULL)\n+        return 0.0;\n+\n+    int64_t nNow = time(NULL);\n+\n+    double fSigcheckVerificationFactor = fSigchecks ? SIGCHECK_VERIFICATION_FACTOR : 1.0;\n+    double fWorkBefore = 0.0; // Amount of work done before pindex\n+    double fWorkAfter = 0.0;  // Amount of work left after pindex (estimated)\n+    // Work is defined as: 1.0 per transaction before the last checkpoint, and\n+    // fSigcheckVerificationFactor per transaction after.\n+\n+    if (pindex->nChainTx <= data.nTransactionsLastCheckpoint) {\n+        double nCheapBefore = pindex->nChainTx;\n+        double nCheapAfter = data.nTransactionsLastCheckpoint - pindex->nChainTx;\n+        double nExpensiveAfter = (nNow - data.nTimeLastCheckpoint)/86400.0*data.fTransactionsPerDay;\n+        fWorkBefore = nCheapBefore;\n+        fWorkAfter = nCheapAfter + nExpensiveAfter*fSigcheckVerificationFactor;\n+    } else {\n+        double nCheapBefore = data.nTransactionsLastCheckpoint;\n+        double nExpensiveBefore = pindex->nChainTx - data.nTransactionsLastCheckpoint;\n+        double nExpensiveAfter = (nNow - pindex->GetBlockTime())/86400.0*data.fTransactionsPerDay;\n+        fWorkBefore = nCheapBefore + nExpensiveBefore*fSigcheckVerificationFactor;\n+        fWorkAfter = nExpensiveAfter*fSigcheckVerificationFactor;\n+    }\n+\n+    return fWorkBefore / (fWorkBefore + fWorkAfter);\n+}\n+\n class CMainCleanup\n {\n public:"
      },
      {
        "sha": "0288e9163e6c95a5acea631b6740b1f5e4051684",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -42,6 +42,7 @@ class CScriptCheck;\n class CTxMemPool;\n class CValidationInterface;\n class CValidationState;\n+class CCheckpointData;\n \n struct PrecomputedTransactionData;\n struct LockPoints;\n@@ -279,6 +280,9 @@ bool GetTransaction(const uint256 &hash, CTransactionRef &tx, const Consensus::P\n bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock = std::shared_ptr<const CBlock>());\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n \n+/** Guess verification progress (as a fraction between 0.0=genesis and 1.0=current tip). */\n+double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex* pindex, bool fSigchecks = true);\n+\n /**\n  * Prune block and undo files (blk???.dat and undo???.dat) so that the disk space used is less than a user-defined target.\n  * The user sets the target (in MB) on the command line or in config file.  This will be run on startup and whenever new"
      },
      {
        "sha": "50eab61739a55780647beb1c00b1b97054941a2e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bac66cca62a5514579a15d198f3baa80683172/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bac66cca62a5514579a15d198f3baa80683172/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a4bac66cca62a5514579a15d198f3baa80683172",
        "patch": "@@ -1479,12 +1479,12 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n             pindex = chainActive.Next(pindex);\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), pindex, false);\n-        double dProgressTip = Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip(), false);\n+        double dProgressStart = GuessVerificationProgress(chainParams.Checkpoints(), pindex, false);\n+        double dProgressTip = GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip(), false);\n         while (pindex)\n         {\n             if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.Checkpoints(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n             ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n@@ -1497,7 +1497,7 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n             pindex = chainActive.Next(pindex);\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n-                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), pindex));\n+                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.Checkpoints(), pindex));\n             }\n         }\n         ShowProgress(_(\"Rescanning...\"), 100); // hide progress dialog in GUI"
      }
    ]
  },
  {
    "sha": "3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjQxMTQxYzhmOWJkYzY4ZmNjMDc5MmNlODg0MmE4ZTMzZWE3MzIw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T15:31:56Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T21:18:49Z"
      },
      "message": "Move tx estimation data out of CCheckPointData",
      "tree": {
        "sha": "defc323ff6b727e8b50bbe944b4671119fea30f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/defc323ff6b727e8b50bbe944b4671119fea30f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4bac66cca62a5514579a15d198f3baa80683172",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4bac66cca62a5514579a15d198f3baa80683172",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4bac66cca62a5514579a15d198f3baa80683172"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 28,
      "deletions": 13
    },
    "files": [
      {
        "sha": "06196de3625297c8700244a902f7bcc15d3e69f6",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -151,7 +151,10 @@ class CMainParams : public CChainParams {\n             (225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n             (250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\"))\n             (279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\"))\n-            (295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")),\n+            (295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\"))\n+        };\n+\n+        chainTxData = ChainTxData{\n             1397080064, // * UNIX timestamp of last checkpoint block\n             36544669,   // * total number of transactions between genesis and last checkpoint\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n@@ -234,6 +237,9 @@ class CTestNetParams : public CChainParams {\n         checkpointData = (CCheckpointData) {\n             boost::assign::map_list_of\n             ( 546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")),\n+        };\n+\n+        chainTxData = ChainTxData{\n             1337966069,\n             1488,\n             300\n@@ -297,11 +303,15 @@ class CRegTestParams : public CChainParams {\n \n         checkpointData = (CCheckpointData){\n             boost::assign::map_list_of\n-            ( 0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\")),\n+            ( 0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n+        };\n+\n+        chainTxData = ChainTxData{\n             0,\n             0,\n             0\n         };\n+\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);"
      },
      {
        "sha": "8dbde9fc241eb2c8cfd194a5786cb8bd736ec7a6",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -28,6 +28,9 @@ typedef std::map<int, uint256> MapCheckpoints;\n \n struct CCheckpointData {\n     MapCheckpoints mapCheckpoints;\n+};\n+\n+struct ChainTxData {\n     int64_t nTimeLastCheckpoint;\n     int64_t nTransactionsLastCheckpoint;\n     double fTransactionsPerDay;\n@@ -73,6 +76,7 @@ class CChainParams\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n+    const ChainTxData& TxData() const { return chainTxData; }\n protected:\n     CChainParams() {}\n \n@@ -90,6 +94,7 @@ class CChainParams\n     bool fRequireStandard;\n     bool fMineBlocksOnDemand;\n     CCheckpointData checkpointData;\n+    ChainTxData chainTxData;\n };\n \n /**"
      },
      {
        "sha": "bb10e494220689b30e9583a62fe230ea92c73158",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -130,7 +130,7 @@ double ClientModel::getVerificationProgress(const CBlockIndex *tipIn) const\n         LOCK(cs_main);\n         tip = chainActive.Tip();\n     }\n-    return GuessVerificationProgress(Params().Checkpoints(), tip);\n+    return GuessVerificationProgress(Params().TxData(), tip);\n }\n \n void ClientModel::updateTimer()"
      },
      {
        "sha": "09671ea20e4f6decf6574e78e6d4ed315a6884a7",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -1073,7 +1073,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"bestblockhash\",         chainActive.Tip()->GetBlockHash().GetHex()));\n     obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n     obj.push_back(Pair(\"mediantime\",            (int64_t)chainActive.Tip()->GetMedianTimePast()));\n-    obj.push_back(Pair(\"verificationprogress\",  GuessVerificationProgress(Params().Checkpoints(), chainActive.Tip())));\n+    obj.push_back(Pair(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), chainActive.Tip())));\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     obj.push_back(Pair(\"pruned\",                fPruneMode));\n "
      },
      {
        "sha": "14d5dbe45261f12bb7162cf1614e64fc0bc44447",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -2080,7 +2080,7 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n       chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), chainActive.Tip()->nVersion,\n       log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n-      GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n+      GuessVerificationProgress(chainParams.TxData(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n     if (!warningMessages.empty())\n         LogPrintf(\" warning='%s'\", boost::algorithm::join(warningMessages, \", \"));\n     LogPrintf(\"\\n\");\n@@ -3445,7 +3445,7 @@ bool static LoadBlockIndexDB(const CChainParams& chainparams)\n     LogPrintf(\"%s: hashBestChain=%s height=%d date=%s progress=%f\\n\", __func__,\n         chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(),\n         DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n-        GuessVerificationProgress(chainparams.Checkpoints(), chainActive.Tip()));\n+        GuessVerificationProgress(chainparams.TxData(), chainActive.Tip()));\n \n     return true;\n }\n@@ -4152,7 +4152,7 @@ void DumpMempool(void)\n static const double SIGCHECK_VERIFICATION_FACTOR = 5.0;\n \n //! Guess how far we are in the verification process at the given block index\n-double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex *pindex, bool fSigchecks) {\n+double GuessVerificationProgress(const ChainTxData& data, CBlockIndex *pindex, bool fSigchecks) {\n     if (pindex==NULL)\n         return 0.0;\n "
      },
      {
        "sha": "7bde123bfe5e53c554a88ee3a937e40e3c40c9d8",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -42,7 +42,7 @@ class CScriptCheck;\n class CTxMemPool;\n class CValidationInterface;\n class CValidationState;\n-class CCheckpointData;\n+struct ChainTxData;\n \n struct PrecomputedTransactionData;\n struct LockPoints;\n@@ -281,7 +281,7 @@ bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams,\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n \n /** Guess verification progress (as a fraction between 0.0=genesis and 1.0=current tip). */\n-double GuessVerificationProgress(const CCheckpointData& data, CBlockIndex* pindex, bool fSigchecks = true);\n+double GuessVerificationProgress(const ChainTxData& data, CBlockIndex* pindex, bool fSigchecks = true);\n \n /**\n  * Prune block and undo files (blk???.dat and undo???.dat) so that the disk space used is less than a user-defined target."
      },
      {
        "sha": "7101a1a3bee57aa3f22d4eff9c8e312757554190",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3641141c8f9bdc68fcc0792ce8842a8e33ea7320/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "patch": "@@ -1479,12 +1479,12 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n             pindex = chainActive.Next(pindex);\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.Checkpoints(), pindex, false);\n-        double dProgressTip = GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip(), false);\n+        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex, false);\n+        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip(), false);\n         while (pindex)\n         {\n             if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.Checkpoints(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n             ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n@@ -1497,7 +1497,7 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n             pindex = chainActive.Next(pindex);\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n-                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.Checkpoints(), pindex));\n+                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n         }\n         ShowProgress(_(\"Rescanning...\"), 100); // hide progress dialog in GUI"
      }
    ]
  },
  {
    "sha": "6dd81169fc33f0c9720afe0b9b52ed4539e59580",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGQ4MTE2OWZjMzNmMGM5NzIwYWZlMGI5YjUyZWQ0NTM5ZTU5NTgw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T21:09:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T21:18:49Z"
      },
      "message": "Remove SIGCHECK_VERIFICATION_FACTOR",
      "tree": {
        "sha": "f243c60aefacfa18baea08ec7626b00c20a1ae0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f243c60aefacfa18baea08ec7626b00c20a1ae0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dd81169fc33f0c9720afe0b9b52ed4539e59580",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd81169fc33f0c9720afe0b9b52ed4539e59580",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd81169fc33f0c9720afe0b9b52ed4539e59580",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd81169fc33f0c9720afe0b9b52ed4539e59580/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3641141c8f9bdc68fcc0792ce8842a8e33ea7320",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3641141c8f9bdc68fcc0792ce8842a8e33ea7320"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 10,
      "deletions": 32
    },
    "files": [
      {
        "sha": "0ff9a00254bed8f52f2efdef4d45116c37b61aaa",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 28,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd81169fc33f0c9720afe0b9b52ed4539e59580/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd81169fc33f0c9720afe0b9b52ed4539e59580/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=6dd81169fc33f0c9720afe0b9b52ed4539e59580",
        "patch": "@@ -4141,44 +4141,22 @@ void DumpMempool(void)\n     }\n }\n \n-/**\n- * How many times slower we expect checking transactions after the last\n- * checkpoint to be (from checking signatures, which is skipped up to the\n- * last checkpoint). This number is a compromise, as it can't be accurate\n- * for every system. When reindexing from a fast disk with a slow CPU, it\n- * can be up to 20, while when downloading from a slow network with a\n- * fast multicore CPU, it won't be much higher than 1.\n- */\n-static const double SIGCHECK_VERIFICATION_FACTOR = 5.0;\n-\n //! Guess how far we are in the verification process at the given block index\n-double GuessVerificationProgress(const ChainTxData& data, CBlockIndex *pindex, bool fSigchecks) {\n-    if (pindex==NULL)\n+double GuessVerificationProgress(const ChainTxData& data, CBlockIndex *pindex) {\n+    if (pindex == NULL)\n         return 0.0;\n \n     int64_t nNow = time(NULL);\n \n-    double fSigcheckVerificationFactor = fSigchecks ? SIGCHECK_VERIFICATION_FACTOR : 1.0;\n-    double fWorkBefore = 0.0; // Amount of work done before pindex\n-    double fWorkAfter = 0.0;  // Amount of work left after pindex (estimated)\n-    // Work is defined as: 1.0 per transaction before the last checkpoint, and\n-    // fSigcheckVerificationFactor per transaction after.\n+    double fTxTotal;\n \n     if (pindex->nChainTx <= data.nTransactionsLastCheckpoint) {\n-        double nCheapBefore = pindex->nChainTx;\n-        double nCheapAfter = data.nTransactionsLastCheckpoint - pindex->nChainTx;\n-        double nExpensiveAfter = (nNow - data.nTimeLastCheckpoint)/86400.0*data.fTransactionsPerDay;\n-        fWorkBefore = nCheapBefore;\n-        fWorkAfter = nCheapAfter + nExpensiveAfter*fSigcheckVerificationFactor;\n+        fTxTotal = data.nTransactionsLastCheckpoint + (nNow - data.nTimeLastCheckpoint) / 86400.0 * data.fTransactionsPerDay;\n     } else {\n-        double nCheapBefore = data.nTransactionsLastCheckpoint;\n-        double nExpensiveBefore = pindex->nChainTx - data.nTransactionsLastCheckpoint;\n-        double nExpensiveAfter = (nNow - pindex->GetBlockTime())/86400.0*data.fTransactionsPerDay;\n-        fWorkBefore = nCheapBefore + nExpensiveBefore*fSigcheckVerificationFactor;\n-        fWorkAfter = nExpensiveAfter*fSigcheckVerificationFactor;\n+        fTxTotal = pindex->nChainTx + (nNow - pindex->GetBlockTime()) / 86400.0 * data.fTransactionsPerDay;\n     }\n \n-    return fWorkBefore / (fWorkBefore + fWorkAfter);\n+    return pindex->nChainTx / fTxTotal;\n }\n \n class CMainCleanup"
      },
      {
        "sha": "ebfff66ea1796dc66d50e36b9a0b75b92a80bd2b",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd81169fc33f0c9720afe0b9b52ed4539e59580/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd81169fc33f0c9720afe0b9b52ed4539e59580/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=6dd81169fc33f0c9720afe0b9b52ed4539e59580",
        "patch": "@@ -281,7 +281,7 @@ bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams,\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n \n /** Guess verification progress (as a fraction between 0.0=genesis and 1.0=current tip). */\n-double GuessVerificationProgress(const ChainTxData& data, CBlockIndex* pindex, bool fSigchecks = true);\n+double GuessVerificationProgress(const ChainTxData& data, CBlockIndex* pindex);\n \n /**\n  * Prune block and undo files (blk???.dat and undo???.dat) so that the disk space used is less than a user-defined target."
      },
      {
        "sha": "686efe7c4377f437be6d25859fa34feacb4989f7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd81169fc33f0c9720afe0b9b52ed4539e59580/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd81169fc33f0c9720afe0b9b52ed4539e59580/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6dd81169fc33f0c9720afe0b9b52ed4539e59580",
        "patch": "@@ -1479,12 +1479,12 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n             pindex = chainActive.Next(pindex);\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex, false);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip(), false);\n+        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n         while (pindex)\n         {\n             if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n             ReadBlockFromDisk(block, pindex, Params().GetConsensus());"
      }
    ]
  },
  {
    "sha": "e356d9a758fff44841c0a630ef6b048de05e53f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzU2ZDlhNzU4ZmZmNDQ4NDFjMGE2MzBlZjZiMDQ4ZGUwNWU1M2Yw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T15:35:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-11T16:21:37Z"
      },
      "message": "Shorten variable names and switch to tx/s",
      "tree": {
        "sha": "39ef7e8da308218dfe54b1c458e1d743cea933b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39ef7e8da308218dfe54b1c458e1d743cea933b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e356d9a758fff44841c0a630ef6b048de05e53f0",
      "comment_count": 4,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e356d9a758fff44841c0a630ef6b048de05e53f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e356d9a758fff44841c0a630ef6b048de05e53f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e356d9a758fff44841c0a630ef6b048de05e53f0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6dd81169fc33f0c9720afe0b9b52ed4539e59580",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd81169fc33f0c9720afe0b9b52ed4539e59580",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd81169fc33f0c9720afe0b9b52ed4539e59580"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "626dc9f8cbbd1e17503ce55a60014f37f99388ff",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e356d9a758fff44841c0a630ef6b048de05e53f0/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e356d9a758fff44841c0a630ef6b048de05e53f0/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e356d9a758fff44841c0a630ef6b048de05e53f0",
        "patch": "@@ -158,7 +158,7 @@ class CMainParams : public CChainParams {\n             1397080064, // * UNIX timestamp of last checkpoint block\n             36544669,   // * total number of transactions between genesis and last checkpoint\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n-            60000.0     // * estimated number of transactions per day after checkpoint\n+            0.7         // * estimated number of transactions per second after checkpoint\n         };\n     }\n };\n@@ -242,7 +242,7 @@ class CTestNetParams : public CChainParams {\n         chainTxData = ChainTxData{\n             1337966069,\n             1488,\n-            300\n+            0.0035\n         };\n \n     }"
      },
      {
        "sha": "db524e8f8edfe013ea1ccaae6c9ac8bc9b741ea4",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e356d9a758fff44841c0a630ef6b048de05e53f0/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e356d9a758fff44841c0a630ef6b048de05e53f0/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e356d9a758fff44841c0a630ef6b048de05e53f0",
        "patch": "@@ -31,9 +31,9 @@ struct CCheckpointData {\n };\n \n struct ChainTxData {\n-    int64_t nTimeLastCheckpoint;\n-    int64_t nTransactionsLastCheckpoint;\n-    double fTransactionsPerDay;\n+    int64_t nTime;\n+    int64_t nTxCount;\n+    double dTxRate;\n };\n \n /**"
      },
      {
        "sha": "f9b1cd52ec2d65b2a3722f980f77c294fd98403f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e356d9a758fff44841c0a630ef6b048de05e53f0/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e356d9a758fff44841c0a630ef6b048de05e53f0/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e356d9a758fff44841c0a630ef6b048de05e53f0",
        "patch": "@@ -4150,10 +4150,10 @@ double GuessVerificationProgress(const ChainTxData& data, CBlockIndex *pindex) {\n \n     double fTxTotal;\n \n-    if (pindex->nChainTx <= data.nTransactionsLastCheckpoint) {\n-        fTxTotal = data.nTransactionsLastCheckpoint + (nNow - data.nTimeLastCheckpoint) / 86400.0 * data.fTransactionsPerDay;\n+    if (pindex->nChainTx <= data.nTxCount) {\n+        fTxTotal = data.nTxCount + (nNow - data.nTime) * data.dTxRate;\n     } else {\n-        fTxTotal = pindex->nChainTx + (nNow - pindex->GetBlockTime()) / 86400.0 * data.fTransactionsPerDay;\n+        fTxTotal = pindex->nChainTx + (nNow - pindex->GetBlockTime()) * data.dTxRate;\n     }\n \n     return pindex->nChainTx / fTxTotal;"
      }
    ]
  },
  {
    "sha": "df3637177a5988261e6ce704018e14140401e1e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjM2MzcxNzdhNTk4ODI2MWU2Y2U3MDQwMThlMTQxNDA0MDFlMWUx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-04T16:20:37Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-01-11T16:21:40Z"
      },
      "message": "Update estimated transaction count data",
      "tree": {
        "sha": "36b26c854dbc390ad34070c91530782b3791fd63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36b26c854dbc390ad34070c91530782b3791fd63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df3637177a5988261e6ce704018e14140401e1e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df3637177a5988261e6ce704018e14140401e1e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df3637177a5988261e6ce704018e14140401e1e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df3637177a5988261e6ce704018e14140401e1e1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e356d9a758fff44841c0a630ef6b048de05e53f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e356d9a758fff44841c0a630ef6b048de05e53f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e356d9a758fff44841c0a630ef6b048de05e53f0"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "66b5d48fd93807d569a16192ec58dd512b90f454",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df3637177a5988261e6ce704018e14140401e1e1/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df3637177a5988261e6ce704018e14140401e1e1/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=df3637177a5988261e6ce704018e14140401e1e1",
        "patch": "@@ -155,10 +155,11 @@ class CMainParams : public CChainParams {\n         };\n \n         chainTxData = ChainTxData{\n-            1397080064, // * UNIX timestamp of last checkpoint block\n-            36544669,   // * total number of transactions between genesis and last checkpoint\n+            // Data as of block 00000000000000000166d612d5595e2b1cd88d71d695fc580af64d8da8658c23 (height 446482).\n+            1483472411, // * UNIX timestamp of last known number of transactions\n+            184495391,  // * total number of transactions between genesis and that timestamp\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n-            0.7         // * estimated number of transactions per second after checkpoint\n+            3.2         // * estimated number of transactions per second after that timestamp\n         };\n     }\n };\n@@ -240,9 +241,10 @@ class CTestNetParams : public CChainParams {\n         };\n \n         chainTxData = ChainTxData{\n-            1337966069,\n-            1488,\n-            0.0035\n+            // Data as of block 00000000c2872f8f8a8935c8e3c5862be9038c97d4de2cf37ed496991166928a (height 1063660)\n+            1483546230,\n+            12834668,\n+            0.15\n         };\n \n     }"
      }
    ]
  }
]