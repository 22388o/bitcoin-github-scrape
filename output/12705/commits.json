[
  {
    "sha": "e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOThjZjAzMWUxMjBkNmNkNjFiZDhlMTlkY2Y3NjFmNWYyNGZmNzJl",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-03-16T06:26:54Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T04:35:29Z"
      },
      "message": "wallet: [rpc] [doc] Fix rescan description",
      "tree": {
        "sha": "3f9b870b6f8e91ab3e7da5409f579fb6c24d3af6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f9b870b6f8e91ab3e7da5409f579fb6c24d3af6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjQjUACgkQV692LbM1\nMyLjWw/8D8wOQ85koURyy4w0uKVG4yByjG5IzSI320owx0RYfLe2uUuNElUlvzOX\nmHgtFTSXBwm7i1OWJMNQWKRh2jCCTrCZwxuEqEAmn6TWWOvY3O5HbHwD2hiyYURh\nRuKA0zg2OZneEYBxlzGc8S61ZSJQ5wWT5eTOQRu1gO9JlYdSOyhBcNyFsIEhMFhN\nZ1EWAKRPuZ0cFGvsiKF/7wtqxeH8EoaX1wLLM7po8hQ0i9KilfvYHuTkzJ6RrG6P\nQ+F2uKfSnZG1WROJTTxGfRyQgceV+mLka7qYQRoe3exUHN5jL0Kw8iuKAnczmFoa\nXv9l2Nwr1/kuFGPwMl7QjENmef38nHzXbBmQ/fIWGfPns1Lq10yEpOyCYOTvtx9J\nL162q9tIVh42s+2DSE7pNW9cgm5t8s/qcTyTc93bc2scCLfRrZKi8Nu2I4YUaVIk\nzhtD0MjWyQQ4iSUvnWLnaCExGCDUTVqjVZf80d9o0rBj7xPn3kYgKrsAXmUNbWZV\nHMkiuUVqybRXVSDvWeZXkM79cogz6WJgLVljU+CmdzeRUkxBt3pcDmP8Ultmj7yw\n+LYPbRkBIAvsoYHBxXMH4tmSJVqLCaA8nYd62edqdbegAdwPTEiw9MjRN49Vw4EI\npm7u4tx+iuz3BqPKZml+k089Rj5c4Sz5s2NvDOkKh4Kcn6GvYQE=\n=bmsp\n-----END PGP SIGNATURE-----",
        "payload": "tree 3f9b870b6f8e91ab3e7da5409f579fb6c24d3af6\nparent e057589dc67f25da6779b60d0e247a3730adbc6d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1521181614 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529037329 +0900\n\nwallet: [rpc] [doc] Fix rescan description\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e057589dc67f25da6779b60d0e247a3730adbc6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e057589dc67f25da6779b60d0e247a3730adbc6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e057589dc67f25da6779b60d0e247a3730adbc6d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3d5f27bb22d0f2dfeb5c0ee1cd7316876ad128c5",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
        "patch": "@@ -1132,7 +1132,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n             \"  ]\\n\"\n             \"2. options                 (json, optional)\\n\"\n             \"  {\\n\"\n-            \"     \\\"rescan\\\": <false>,         (boolean, optional, default: true) Stating if should rescan the blockchain after all imports\\n\"\n+            \"     \\\"rescan\\\": <bool>,          (boolean, optional, default: true) Whether a rescan of the blockchain after all imports should be executed\\n\"\n             \"  }\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true, during that time, other rpc calls\\n\"\n             \"may report that the imported keys, addresses or scripts exists but related transactions are still missing.\\n\""
      }
    ]
  },
  {
    "sha": "b01a8d41a7a71c4d4e9080820f4efb113920c38b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDFhOGQ0MWE3YTcxYzRkNGU5MDgwODIwZjRlZmIxMTM5MjBjMzhi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-03-16T07:06:59Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T04:37:32Z"
      },
      "message": "wallet: [rpc] Move private key import functionality out of importprivkey\n\nThe new ImportPrivateKey method is to be used by importmulti when user provides a private key.",
      "tree": {
        "sha": "712e9957fb9cd8822587b4bf8fc135961e6ae02c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/712e9957fb9cd8822587b4bf8fc135961e6ae02c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b01a8d41a7a71c4d4e9080820f4efb113920c38b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjQowACgkQV692LbM1\nMyJD/xAAhbWXWicRMabiHq+cYSDLO0Y2Lf7GNi8ODKSaLG+1isAJcVLsaJz8pcB2\nuJ5OSmUgOM75w+c/pPdZb8ubxe0mgOYzbteJms3pO8+2CBu3MWLcUpyCjBJ2fPbV\nCLlM9PC00eyae9vw2lWPA7AI2RRFs9eO/gmDBVQO5Lj6qOzMqlBh3M46pCVlziJi\nWK8HFDCrZnRhI0HO3LBmmTyeCk2Wyre6MW94BRYWZxRwBCAjXjtALGngRb8iw1hj\n/vIRtrCO4kL16eMFXDjU/MoRIPof7h1lBwZh2vhlef8gaGN9nz7LHHog83ZCksBS\n0vNhzrAP9XZ7sguHtVwpeB/U/RniiD5UEhC6Koz8ADM0DSZ4A6raOBuLp205eg8/\nUmxOkRfF5smUu3dorvJq1nBk7X8yP722IRP7k7U9f+5i+OegnTORUZWqpV2f5VJO\noih2H1hjxk8WYVrPoxcgDkC3bde4FGWv8gk8cur1PKEoYewhrcAzxLl+nlxYYF7R\n8z3AHOqZ+gUcIC8XPlr/dDJ6WWRk/H7XZY+6dRKm0fbjA70qkkc+scHMbus9G4+x\nDbZ75uNH8cS7imb1Fb5JeFxeWPXLDOQfp+BU0mOaezdHoLfTsTCgUprcFxPuKf6P\nY9UBtQaj8NAxSpZuc4KFv5mwxAG4eJOhceDQSQDq2WbR8bDfhhs=\n=hD+M\n-----END PGP SIGNATURE-----",
        "payload": "tree 712e9957fb9cd8822587b4bf8fc135961e6ae02c\nparent e98cf031e120d6cd61bd8e19dcf761f5f24ff72e\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1521184019 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529037452 +0900\n\nwallet: [rpc] Move private key import functionality out of importprivkey\n\nThe new ImportPrivateKey method is to be used by importmulti when user provides a private key.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b01a8d41a7a71c4d4e9080820f4efb113920c38b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b01a8d41a7a71c4d4e9080820f4efb113920c38b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b01a8d41a7a71c4d4e9080820f4efb113920c38b/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e98cf031e120d6cd61bd8e19dcf761f5f24ff72e"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 36,
      "deletions": 27
    },
    "files": [
      {
        "sha": "c09967a60f31180d12fcc07c6266759e525c5acd",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 27,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b01a8d41a7a71c4d4e9080820f4efb113920c38b/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b01a8d41a7a71c4d4e9080820f4efb113920c38b/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=b01a8d41a7a71c4d4e9080820f4efb113920c38b",
        "patch": "@@ -88,6 +88,38 @@ bool GetWalletAddressesForKey(CWallet * const pwallet, const CKeyID &keyid, std:\n     return fLabelFound;\n }\n \n+static bool ImportPrivateKey(CWallet * const pwallet, const UniValue& privkey, const std::string& label = \"\", const int64_t timestamp = 1)\n+{\n+    CKey key = DecodeSecret(privkey.get_str());\n+    if (!key.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+    }\n+\n+    CPubKey pubkey = key.GetPubKey();\n+    assert(key.VerifyPubKey(pubkey));\n+    CKeyID address = pubkey.GetID();\n+    pwallet->MarkDirty();\n+    // We don't know which corresponding address will be used; label them all\n+    for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n+        pwallet->SetAddressBook(dest, label, \"receive\");\n+    }\n+\n+    // Don't throw error in case a key is already there\n+    if (pwallet->HaveKey(address)) {\n+        return false;\n+    }\n+\n+    // whenever a key is imported, we need to scan the whole chain\n+    pwallet->UpdateTimeFirstKey(timestamp);\n+    pwallet->mapKeyMetadata[address].nCreateTime = timestamp;\n+\n+    if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+    }\n+    pwallet->LearnAllRelatedScripts(pubkey);\n+\n+    return true;\n+}\n \n UniValue importprivkey(const JSONRPCRequest& request)\n {\n@@ -127,7 +159,6 @@ UniValue importprivkey(const JSONRPCRequest& request)\n \n         EnsureWalletIsUnlocked(pwallet);\n \n-        std::string strSecret = request.params[0].get_str();\n         std::string strLabel = \"\";\n         if (!request.params[1].isNull())\n             strLabel = request.params[1].get_str();\n@@ -143,32 +174,10 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        CKey key = DecodeSecret(strSecret);\n-        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n-\n-        CPubKey pubkey = key.GetPubKey();\n-        assert(key.VerifyPubKey(pubkey));\n-        CKeyID vchAddress = pubkey.GetID();\n-        {\n-            pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n-            for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n-            }\n-\n-            // Don't throw error in case a key is already there\n-            if (pwallet->HaveKey(vchAddress)) {\n-                return NullUniValue;\n-            }\n-\n-            // whenever a key is imported, we need to scan the whole chain\n-            pwallet->UpdateTimeFirstKey(1);\n-            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n-\n-            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-            }\n-            pwallet->LearnAllRelatedScripts(pubkey);\n+        // If the import failed (due to key already known) we silently exit\n+        // without rescanning\n+        if (!ImportPrivateKey(pwallet, request.params[0], strLabel)) {\n+            return NullUniValue;\n         }\n     }\n     if (fRescan) {"
      }
    ]
  },
  {
    "sha": "7977f1f7e27fb3802d74a799f57a79f874645436",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTc3ZjFmN2UyN2ZiMzgwMmQ3NGE3OTlmNTdhNzlmODc0NjQ1NDM2",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-03-16T07:14:16Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T04:37:32Z"
      },
      "message": "wallet: [rpc] Add privkey support to importmulti",
      "tree": {
        "sha": "2f571e7f1285d9e46f38962a4a9c8d51ca174f04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f571e7f1285d9e46f38962a4a9c8d51ca174f04"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7977f1f7e27fb3802d74a799f57a79f874645436",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjQowACgkQV692LbM1\nMyJ+sw//culGi6scIP06MPHybLKyyvxmijt+O9T7ujuBQfwPs+ZnRNFqS3STS54c\ngZIc+iUayP2QFS18zfADoCS+KuNyI9/atqd6TVzXgA8dOxa3ifPGDU4eZ25GMwPV\niTCFRQusruGTzgJCwTkyyHNVS9oDtcAeb1tXGZGuqioORPqkTQpRkbGhb0QzKdCP\naJi9DhAkks/yvph4gcT2Nx0hRaszBD2b5heIbNXytGtXqJY2VeZS4zg7+9DYt4KM\nOeU2u9LNWmS+5kH85y8HEXB8jj9Ub8190KH3pJAVbcr2KlNreNILj73ESINSftb/\n1FZ8IRaJg3c3PAD1c6J7M9oUe4T83YkLdlw3/BxXa3MFX5YkrNOtFkxQnbw5Q2Ug\ncAhhhQERX/mICsXHpCG0sKmoEdsOQVilzCdKzTfEfRWqSYqYWNDQxX+doKjg5qmB\nGNk3UrABbJ0/BfsQtUAVtj16hYJNmWuojSqj4JmdgZ2T/UfQSAPaIaukStIIWbP4\nQBd/sxhM9Gc8Ig4U28rP1MPKTkz0LZmGlMqBspf1m2iVaQIrptkXaSzjSStblvHo\n3xFxqJfkboulGFykhy4OOm1NFtKG4S63P38ECGBDE4ykEVQIpUdZ8I8CTKWyQIK1\n2GVG3hsDiqll8MVHLJXcsFCDNz0h+VyXPcKlsWe3UP6mu9hCXyM=\n=++DJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 2f571e7f1285d9e46f38962a4a9c8d51ca174f04\nparent b01a8d41a7a71c4d4e9080820f4efb113920c38b\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1521184456 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529037452 +0900\n\nwallet: [rpc] Add privkey support to importmulti\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7977f1f7e27fb3802d74a799f57a79f874645436",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7977f1f7e27fb3802d74a799f57a79f874645436",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7977f1f7e27fb3802d74a799f57a79f874645436/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b01a8d41a7a71c4d4e9080820f4efb113920c38b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b01a8d41a7a71c4d4e9080820f4efb113920c38b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b01a8d41a7a71c4d4e9080820f4efb113920c38b"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 20,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cf38f13fce7fd88d020eee744dd192f3aa16fb51",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7977f1f7e27fb3802d74a799f57a79f874645436/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7977f1f7e27fb3802d74a799f57a79f874645436/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=7977f1f7e27fb3802d74a799f57a79f874645436",
        "patch": "@@ -798,12 +798,12 @@ UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, const int6\n     try {\n         bool success = false;\n \n-        // Required fields.\n+        // Required fields (optional if privkey field provided).\n         const UniValue& scriptPubKey = data[\"scriptPubKey\"];\n \n-        // Should have script or JSON with \"address\".\n-        if (!(scriptPubKey.getType() == UniValue::VOBJ && scriptPubKey.exists(\"address\")) && !(scriptPubKey.getType() == UniValue::VSTR)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid scriptPubKey\");\n+        // Should have script or JSON with \"address\", if privkey is null.\n+        if (!data.exists(\"privkey\") && !(scriptPubKey.getType() == UniValue::VOBJ && scriptPubKey.exists(\"address\")) && !(scriptPubKey.getType() == UniValue::VSTR)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid scriptPubKey/privkey\");\n         }\n \n         // Optional fields.\n@@ -814,6 +814,20 @@ UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, const int6\n         const bool watchOnly = data.exists(\"watchonly\") ? data[\"watchonly\"].get_bool() : false;\n         const std::string& label = data.exists(\"label\") && !internal ? data[\"label\"].get_str() : \"\";\n \n+        if (data.exists(\"privkey\")) {\n+            const UniValue& privkey = data[\"privkey\"];\n+            if (data.exists(\"scriptPubKey\"))           throw JSONRPCError(RPC_INVALID_PARAMETER, \"Must provide either a privkey or a scriptPubKey\");\n+            if (strRedeemScript != \"\")                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Redeem script not supported for privkey import\");\n+            if (pubKeys.size() > 0 || keys.size() > 0) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Keys/pubkeys not supported for privkey import\");\n+            if (watchOnly)                             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Privkeys cannot be imported watch-only\");\n+            if (!ImportPrivateKey(pwallet, privkey, label, timestamp)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the given private key\");\n+            }\n+            UniValue result = UniValue(UniValue::VOBJ);\n+            result.pushKV(\"success\", UniValue(true));\n+            return result;\n+        }\n+\n         bool isScript = scriptPubKey.getType() == UniValue::VSTR;\n         bool isP2SH = strRedeemScript.length() > 0;\n         const std::string& output = isScript ? scriptPubKey.get_str() : scriptPubKey[\"address\"].get_str();\n@@ -1123,6 +1137,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n             \"1. requests     (array, required) Data to be imported\\n\"\n             \"  [     (array of json objects)\\n\"\n             \"    {\\n\"\n+            \"      \\\"privkey\\\": \\\"<privkey>\\\",                               (string) A WIF private key, instead of scriptPubKey below\\n\"\n             \"      \\\"scriptPubKey\\\": \\\"<script>\\\" | { \\\"address\\\":\\\"<address>\\\" }, (string / json, required) Type of scriptPubKey (string for script, json for address)\\n\"\n             \"      \\\"timestamp\\\": timestamp | \\\"now\\\"                        , (integer / string, required) Creation time of the key in seconds since epoch (Jan 1 1970 GMT),\\n\"\n             \"                                                              or the string \\\"now\\\" to substitute the current synced blockchain time. The timestamp of the oldest\\n\"\n@@ -1234,7 +1249,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 if (scannedTime <= GetImportTimestamp(request, now) || results.at(i).exists(\"error\")) {\n                     response.push_back(results.at(i));\n                 } else {\n-                    UniValue result = UniValue(UniValue::VOBJ);\n+                    UniValue result(UniValue::VOBJ);\n                     result.pushKV(\"success\", UniValue(false));\n                     result.pushKV(\n                         \"error\","
      }
    ]
  },
  {
    "sha": "da0b1f85b2e235a470515491eaa74584883f29fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTBiMWY4NWIyZTIzNWE0NzA1MTU0OTFlYWE3NDU4NDg4M2YyOWZk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-03-16T07:35:21Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T04:37:32Z"
      },
      "message": "test: Add tests for privkey-style importmulti",
      "tree": {
        "sha": "5dc4678202843cc00db715e3566f5d5884b8283f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5dc4678202843cc00db715e3566f5d5884b8283f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da0b1f85b2e235a470515491eaa74584883f29fd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjQowACgkQV692LbM1\nMyLmRQ//U3vHcRxXxiGnC2SEuSZaX6Fc4rxZujKqvYK64rZ9cR7Xuk4THlL0ARA0\neDwX6gi4eV5rcirocbvjdzfL9K1uddkGP1eBU/vo28NA8Cou4CdUritKMiFfoCyR\nk5R490xEYWzv87FIN41WNk1hqi0clSavFlgqnGwkvx+NEbo7cGVYVlTW5P7xg5sP\nCsJj+0M2jd6SHp/I4tRUY1YWG+Z9ARgH2/Z4gSkFTx7S/cSH0Ko2Sc1F08ieg5fW\nmfzbf/roeXr+ecb/89J9jOze/BSvgvyNj8XfDHL8b9trMiQ0rkqq0pBOuOoyEwH6\nRjX60yf1Zn4dpz4wFv49hqGYyax0eMyzNqXWnKxa7pL7cyxJNArtleDt0ZRTs3y4\nweZO5s6VAWeykNIsbA5V5impZnkR5j67Up5AsZ840zZGJFajsylnf0Y9TBcTAcLs\nbsOCNgJdzYH7Uhp2b8EZDR/lM6VJuRDqc5p/c37Lj1ax4pV8bzhWtr+udfRgYyyZ\nxm4d1EhgQqrl7J6wFP0CU54W7PaxOSHCaQMU5tq+ffEvC9BvDsO89avvg4K96Kp3\n0vwn0Aut66MhoY8rKuBqkJAGW1CsDBvpfekUv+JPLwmPGM1W/KGzFSC5/bTpkZT8\njAwG1xsQZ++iRD59lkHV4TJKztJbcdPpxoj57LSLew19ihqYxE0=\n=ZIk3\n-----END PGP SIGNATURE-----",
        "payload": "tree 5dc4678202843cc00db715e3566f5d5884b8283f\nparent 7977f1f7e27fb3802d74a799f57a79f874645436\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1521185721 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529037452 +0900\n\ntest: Add tests for privkey-style importmulti\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da0b1f85b2e235a470515491eaa74584883f29fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da0b1f85b2e235a470515491eaa74584883f29fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da0b1f85b2e235a470515491eaa74584883f29fd/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7977f1f7e27fb3802d74a799f57a79f874645436",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7977f1f7e27fb3802d74a799f57a79f874645436",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7977f1f7e27fb3802d74a799f57a79f874645436"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 65,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e5ad947b2d133df5fedfe121514d6b937275d106",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da0b1f85b2e235a470515491eaa74584883f29fd/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da0b1f85b2e235a470515491eaa74584883f29fd/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=da0b1f85b2e235a470515491eaa74584883f29fd",
        "patch": "@@ -65,6 +65,31 @@ def run_test (self):\n         assert_equal(result[0]['error']['code'], -5)\n         assert_equal(result[0]['error']['message'], 'Invalid address')\n \n+        self.log.info(\"Should not import an invalid privkey\")\n+        result = self.nodes[1].importmulti([{\n+            \"privkey\": \"not valid privkey\",\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(result[0]['success'], False)\n+        assert_equal(result[0]['error']['code'], -5)\n+        assert_equal(result[0]['error']['message'], 'Invalid private key encoding')\n+\n+        self.log.info(\"Should not import given both a scriptPubKey and a privkey\")\n+        address = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n+        privkey = self.nodes[0].dumpprivkey(address['address'])\n+        result = self.nodes[1].importmulti([{\n+            \"scriptPubKey\": address['scriptPubKey'],\n+            \"privkey\": privkey,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(result[0]['success'], False)\n+        assert_equal(result[0]['error']['code'], -8)\n+        assert_equal(result[0]['error']['message'], 'Must provide either a privkey or a scriptPubKey')\n+        address_assert = self.nodes[1].getaddressinfo(address['address'])\n+        assert_equal(address_assert['iswatchonly'], False)\n+        assert_equal(address_assert['ismine'], False)\n+        assert_equal('timestamp' in address_assert, False)\n+\n         # ScriptPubKey + internal\n         self.log.info(\"Should import a scriptPubKey with internal flag\")\n         address = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n@@ -223,6 +248,46 @@ def run_test (self):\n         assert_equal(address_assert['ismine'], False)\n         assert_equal('timestamp' in address_assert, False)\n \n+        # Explicit private key + !watchonly\n+        self.log.info(\"Should import an explicit private key\")\n+        address = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n+        privkey = self.nodes[0].dumpprivkey(address['address'])\n+        result = self.nodes[1].importmulti([{\n+            \"privkey\": privkey,\n+            \"timestamp\": \"now\"\n+        }])\n+        assert_equal(result[0]['success'], True)\n+        address_assert = self.nodes[1].getaddressinfo(address['address'])\n+        assert_equal(address_assert['iswatchonly'], False)\n+        assert_equal(address_assert['ismine'], True)\n+        assert_equal(address_assert['timestamp'], timestamp)\n+\n+        self.log.info(\"Should not import a private key if it is already imported\")\n+        result = self.nodes[1].importmulti([{\n+            \"privkey\": privkey,\n+            \"timestamp\": \"now\"\n+        }])\n+        assert_equal(result[0]['success'], False)\n+        assert_equal(result[0]['error']['code'], -4)\n+        assert_equal(result[0]['error']['message'], 'The wallet already contains the given private key')\n+\n+        # Explicit private key + watchonly\n+        self.log.info(\"Should not import a private key with watchonly\")\n+        address = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n+        privkey = self.nodes[0].dumpprivkey(address['address'])\n+        result = self.nodes[1].importmulti([{\n+            \"privkey\": privkey,\n+            \"timestamp\": \"now\",\n+            \"watchonly\": True\n+        }])\n+        assert_equal(result[0]['success'], False)\n+        assert_equal(result[0]['error']['code'], -8)\n+        assert_equal(result[0]['error']['message'], 'Privkeys cannot be imported watch-only')\n+        address_assert = self.nodes[1].getaddressinfo(address['address'])\n+        assert_equal(address_assert['iswatchonly'], False)\n+        assert_equal(address_assert['ismine'], False)\n+        assert_equal('timestamp' in address_assert, False)\n+\n \n         # P2SH address\n         sig_address_1 = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())"
      }
    ]
  },
  {
    "sha": "158269878ad17515f119712ce7c439342459396d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTgyNjk4NzhhZDE3NTE1ZjExOTcxMmNlN2M0MzkzNDI0NTkzOTZk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-03-19T04:38:23Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T04:37:32Z"
      },
      "message": "wallet: [rpc] [doc] importmulti: standardize defaults in help text",
      "tree": {
        "sha": "5deefa3f38031528563ec71c043eedb614229e12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5deefa3f38031528563ec71c043eedb614229e12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/158269878ad17515f119712ce7c439342459396d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjQowACgkQV692LbM1\nMyI+rhAAh8/PkX2LudgyBMQrTTODj+dPe7O7iiJYNxZM4yGdAlVT/nM1ix9wjmcd\nqxy9HL1wTg1ipK9qpn7vVRWYRTfUYrJZgk38rBU2s2fU5QRG5hcE3SvTIbaTcA81\niKkElnBV0/KjNUPmdEEFCBR7wC9dPzI0UIO8qxDvEgwucAoTaWCFX5FUDVqP/c1/\nPuwEMSKwLhdzQhR4feW/n++6vE/IGzt7xxMvfyErwYcYWvZf74hdzwL5vKXYeVqk\nLPLrc4YFdE/pJgZCQ4WmmADZNzGlBTyFcsj5eaHZg4o3lyzqTuWWr3+SqhtUhiCY\n9MPvPILsD324bNCk7FstC7xSJHpgjoPnfS9xafq5AQloBW9znw4zS5s/vt5HLlzx\nvb9Gb3aLtGr45Wgp5z9sE196/2JgDp9YC56c6IUUcpE7SAqVmJ4eL6gQ932uk5t4\nry52xHIXYvw8eyTtt/mDBwtDk+rx69JVzLsYFdiiNxbJfM8VARPUj3tBFaift591\nlmjNpp7jb46IB6wDz43t+pAGdUzzq8NzRP8B7Wajhpvco6myu/cjxzs+yYkkwhYy\nE/iwc72PoiQMjR5zFD4zO8BAHsG/Y7Qj6uGZDFt82uzSDwMELaEAmLVHTlA+OUkW\nAsbH3web+6boD7f9m9PJgvK5nLGl/s+M0z3gXfbbB7q2yMsiV1Y=\n=PrE1\n-----END PGP SIGNATURE-----",
        "payload": "tree 5deefa3f38031528563ec71c043eedb614229e12\nparent da0b1f85b2e235a470515491eaa74584883f29fd\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1521434303 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529037452 +0900\n\nwallet: [rpc] [doc] importmulti: standardize defaults in help text\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/158269878ad17515f119712ce7c439342459396d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/158269878ad17515f119712ce7c439342459396d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/158269878ad17515f119712ce7c439342459396d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da0b1f85b2e235a470515491eaa74584883f29fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da0b1f85b2e235a470515491eaa74584883f29fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da0b1f85b2e235a470515491eaa74584883f29fd"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f986549e7a627a17ca81106fca871c4f93394b2c",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/158269878ad17515f119712ce7c439342459396d/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/158269878ad17515f119712ce7c439342459396d/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=158269878ad17515f119712ce7c439342459396d",
        "patch": "@@ -1148,15 +1148,15 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n             \"      \\\"redeemscript\\\": \\\"<script>\\\"                            , (string, optional) Allowed only if the scriptPubKey is a P2SH address or a P2SH scriptPubKey\\n\"\n             \"      \\\"pubkeys\\\": [\\\"<pubKey>\\\", ... ]                         , (array, optional) Array of strings giving pubkeys that must occur in the output or redeemscript\\n\"\n             \"      \\\"keys\\\": [\\\"<key>\\\", ... ]                               , (array, optional) Array of strings giving private keys whose corresponding public keys must occur in the output or redeemscript\\n\"\n-            \"      \\\"internal\\\": <true>                                    , (boolean, optional, default: false) Stating whether matching outputs should be treated as not incoming payments\\n\"\n-            \"      \\\"watchonly\\\": <true>                                   , (boolean, optional, default: false) Stating whether matching outputs should be considered watched even when they're not spendable, only allowed if keys are empty\\n\"\n-            \"      \\\"label\\\": <label>                                      , (string, optional, default: '') Label to assign to the address (aka account name, for now), only allowed with internal=false\\n\"\n+            \"      \\\"internal\\\": <true>                                    , (boolean, optional, default=false) Stating whether matching outputs should be treated as not incoming payments\\n\"\n+            \"      \\\"watchonly\\\": <true>                                   , (boolean, optional, default=false) Stating whether matching outputs should be considered watched even when they're not spendable, only allowed if keys are empty\\n\"\n+            \"      \\\"label\\\": <label>                                      , (string, optional, default='') Label to assign to the address (aka account name, for now), only allowed with internal=false\\n\"\n             \"    }\\n\"\n             \"  ,...\\n\"\n             \"  ]\\n\"\n             \"2. options                 (json, optional)\\n\"\n             \"  {\\n\"\n-            \"     \\\"rescan\\\": <bool>,          (boolean, optional, default: true) Whether a rescan of the blockchain after all imports should be executed\\n\"\n+            \"     \\\"rescan\\\": <bool>,          (boolean, optional, default=true) Whether a rescan of the blockchain after all imports should be executed\\n\"\n             \"  }\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true, during that time, other rpc calls\\n\"\n             \"may report that the imported keys, addresses or scripts exists but related transactions are still missing.\\n\""
      }
    ]
  },
  {
    "sha": "a5ff7631a9fe5a527150a30d40ed8129011a5b49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWZmNzYzMWE5ZmU1YTUyNzE1MGEzMGQ0MGVkODEyOTAxMWE1YjQ5",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T05:06:45Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T05:06:45Z"
      },
      "message": "f'rpcdump.cpp: assert locks held",
      "tree": {
        "sha": "7c5c510fb515980f6294cc62c13fb86f8d9d38c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c5c510fb515980f6294cc62c13fb86f8d9d38c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5ff7631a9fe5a527150a30d40ed8129011a5b49",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjSWUACgkQV692LbM1\nMyICrBAAiCkd9UB6YhZevSC2Mdf03X5gNcDEzJjjeQK8fPWmBbEbeGHtqXPUpU2R\n/mg28dJV72Fk70orhW7x2ac0ZpYNEIbAppI7awdH7Yi0y/dx7gd/Q8KCqJo0y45C\nx/v0gaPRJo0VFVC4v7F2kp6bhS5H0490+1YpjkXrDxqCgZPwfQ9g9ssBJTnGhB73\nGQc1+XOSwQ56B653I8c60uQlbnZld+rbEISuz3QGrZz/bxsakasTqIe4N1m44Un+\nuElidxKMJPvJVZmtkqgEtxHoxW8Nc1pINi8SqwpmDOMHo0qW8e1X8NXQwj6yfDYK\nOsuv1shygdPBwkJvgp4wgnMsjH86/p3Tke6Y5c7a76H2C8DPfgZUI5oCtQoTUTP8\nR4biHi4+/S53IjgbnoR0kvQ1u/n0sb3zsTy9ea69bdwC9pDxptBf1PQ+/NA48y1M\nkSTpe8B9aONIjPab8wCTuGQx3vWI2ctgNLGtqECkQsG5A/QdufOoSneMAi0m4bo8\nTFMOexCo70CG87GcYcwBffozpjuM/eAvoRs94uIjbnWt8cJAtM5OuXcmpbLnOMmk\nnT7f3ORlkrPEhsvkceJQjQH2lloi9P39G5+IhchjcxPWzv2et6jDyl+1OdYhIxlx\nSJMW3nzfmztsXWhVwIJZM/k+l5SFCR/UEz3iuY9WEOzui0MuWPI=\n=tgZk\n-----END PGP SIGNATURE-----",
        "payload": "tree 7c5c510fb515980f6294cc62c13fb86f8d9d38c7\nparent 158269878ad17515f119712ce7c439342459396d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529039205 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529039205 +0900\n\nf'rpcdump.cpp: assert locks held\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5ff7631a9fe5a527150a30d40ed8129011a5b49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5ff7631a9fe5a527150a30d40ed8129011a5b49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5ff7631a9fe5a527150a30d40ed8129011a5b49/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "158269878ad17515f119712ce7c439342459396d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/158269878ad17515f119712ce7c439342459396d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/158269878ad17515f119712ce7c439342459396d"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3497e2be9714e7737d9018d395e0ff05b3e0d350",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5ff7631a9fe5a527150a30d40ed8129011a5b49/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5ff7631a9fe5a527150a30d40ed8129011a5b49/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a5ff7631a9fe5a527150a30d40ed8129011a5b49",
        "patch": "@@ -90,6 +90,7 @@ bool GetWalletAddressesForKey(CWallet * const pwallet, const CKeyID &keyid, std:\n \n static bool ImportPrivateKey(CWallet * const pwallet, const UniValue& privkey, const std::string& label = \"\", const int64_t timestamp = 1)\n {\n+    AssertLockHeld(pwallet->cs_wallet);\n     CKey key = DecodeSecret(privkey.get_str());\n     if (!key.IsValid()) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");"
      }
    ]
  },
  {
    "sha": "ca8c953293288e37506c40a6bab0687e1e7a826b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYThjOTUzMjkzMjg4ZTM3NTA2YzQwYTZiYWIwNjg3ZTFlN2E4MjZi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T05:21:47Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T05:21:47Z"
      },
      "message": "f'rpcdump.cpp: lock explicitly",
      "tree": {
        "sha": "3927d1b7a56b7b154dbc7d1018868f280239d9fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3927d1b7a56b7b154dbc7d1018868f280239d9fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca8c953293288e37506c40a6bab0687e1e7a826b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjTOsACgkQV692LbM1\nMyLi9w//WGYzi3p5RHb2fduttAPNWhoguUG51++ZQQKl63RlKPSiNV+iQttcOizf\nyRYvkxYPZ7YAi8B1vrbRaDmieM1uWmQ3qjTAmQpzMS4VdRPWaekC16rzbCZPHyUy\nkrp0bGm85WFICA1a3LXNuWhXV2Kz0WkftVbFlw8CnWhw68fvHEtmboDQQy/e+QCv\nRxJHM3zPCJJcN84DQDQpcbgRNlwu/hAlFMt4EmhzhSQDKy06PbWJHY9pe6AUceTL\n6uUGX1w/MH4CkziMAPIwXpnl5JDenZ8pxbGbsh68TjLG4A7qoUrrq+dzgtKQgowE\nb/zXLhZldTGDCH3DSO487fyRNsNfzc63xy11BaRGQxVl9ePVZg3ki9JLsEA4CVPE\n4fm7XG7r8PQalA6iNkbTHnVI6tM05iK0itvDtTcQVno3ERG1FTQs3HRaDSW4I+07\nu9bfGJ60iq2Be4/Rq+sI4612lCAFmsTxNX/rijjA+80erfJYpFV9o0EX7R+GSUSz\nHjWDcsNgv9Li8kAp7XTNP1TW4folJ5mnM3HlDebawh2qpkhfVqPiuDFFpRXbR9T0\n86SpQtimqB0nkthMvIh/F0K/NGjCAPG5hZ7o5V387Tjq9Uno39jObobTTODXuRmx\nEv7Nvu2fHSRMyek6UcutOogmrr9w0emeR9UFbrl3CUsIZXjtzy4=\n=GYIF\n-----END PGP SIGNATURE-----",
        "payload": "tree 3927d1b7a56b7b154dbc7d1018868f280239d9fa\nparent a5ff7631a9fe5a527150a30d40ed8129011a5b49\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529040107 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529040107 +0900\n\nf'rpcdump.cpp: lock explicitly\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8c953293288e37506c40a6bab0687e1e7a826b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8c953293288e37506c40a6bab0687e1e7a826b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8c953293288e37506c40a6bab0687e1e7a826b/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5ff7631a9fe5a527150a30d40ed8129011a5b49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5ff7631a9fe5a527150a30d40ed8129011a5b49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5ff7631a9fe5a527150a30d40ed8129011a5b49"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f6881fc7687338bc7ebd06f6b07cdc00562f729e",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8c953293288e37506c40a6bab0687e1e7a826b/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8c953293288e37506c40a6bab0687e1e7a826b/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ca8c953293288e37506c40a6bab0687e1e7a826b",
        "patch": "@@ -90,7 +90,6 @@ bool GetWalletAddressesForKey(CWallet * const pwallet, const CKeyID &keyid, std:\n \n static bool ImportPrivateKey(CWallet * const pwallet, const UniValue& privkey, const std::string& label = \"\", const int64_t timestamp = 1)\n {\n-    AssertLockHeld(pwallet->cs_wallet);\n     CKey key = DecodeSecret(privkey.get_str());\n     if (!key.IsValid()) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n@@ -110,6 +109,7 @@ static bool ImportPrivateKey(CWallet * const pwallet, const UniValue& privkey, c\n         return false;\n     }\n \n+    LOCK(pwallet->cs_wallet);\n     // whenever a key is imported, we need to scan the whole chain\n     pwallet->UpdateTimeFirstKey(timestamp);\n     pwallet->mapKeyMetadata[address].nCreateTime = timestamp;"
      }
    ]
  }
]