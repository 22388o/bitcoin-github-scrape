meshcollider,2018-03-17T22:53:15Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-373958839,373958839,
jonasschnelli,2018-03-18T05:06:46Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-373973411,373973411,
sipa,2018-03-18T05:15:48Z,"Thank you for working on this!\n\nI think we should be careful here though. `importprivkey` has a number a quirks that are for historical or compatibility reasons, that we shouldn't maintain:\n* `importprivkey` does not know what the corresponding address is, and thus can't know what type to use (p2pkh, p2sh-p2wpkh, p2wpkh), and thus has to assume all are possible (which results in at least labell",https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-373973741,373973741,
sipa,2018-03-18T07:18:59Z,"> One question is if this should be simplified to where a user can put private keys in keys and leave scriptPubKey empty, or if it makes more sense to add a new field as I do here.\n\nI think it should absolutely use `keys` - there is no need to add new fields to just provide the same functionality in a different way.\n\nThe way it should work IMO is that it integrates into all the functionali",https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-373977828,373977828,
kallewoof,2018-03-19T03:46:05Z,"@sipa It seems Electrum 3.0 included an extension to WIF for segwit stuff: \n\nhttps://github.com/spesmilo/electrum/blob/5fef1e7980e6c9811448ad7d9fb6afa4460ac7fc/RELEASE-NOTES#L181-L194\n\nA good starting point might be to rework this PR to adopt that and see what people think?",https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-374093178,374093178,
kallewoof,2018-03-19T04:39:19Z,"@promag Thanks for the feedback, see e896ba0, 6408244.",https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-374099516,374099516,
kallewoof,2018-03-19T04:40:34Z,"@sipa Small note:\n\n> importprivkey doesn't support key birth times; but this is not inherent, keys can have birth times.\n\nThe method implementation does support birth times, in the `timestamp` argument which is always 1 for `importprivkey`, but uses the provided timestamp for `importmulti`.",https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-374099643,374099643,
cdecker,2018-03-26T13:45:29Z,"Concept ACK\n\nOther than the quirks that `importprivkey` has to support mentioned by @sipa, which would be nice to avoid for a new call.",https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-376170982,376170982,
DrahtBot,2018-07-25T15:00:43Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-407785605,407785605,
kallewoof,2018-08-10T03:15:00Z,Closing as too many aspects of this are up in the air.,https://github.com/bitcoin/bitcoin/pull/12705#issuecomment-411963093,411963093,
promag,2018-03-16T12:30:34Z,"In commit ""Importmulti private key support"",\n\nAlso fix `default=true` to be consistent with most of the code.",https://github.com/bitcoin/bitcoin/pull/12705#discussion_r175074368,175074368,src/wallet/rpcdump.cpp
promag,2018-03-16T12:32:34Z,"In commit ""[wallet] [rpc] Move private key import functionality out of importprivkey"",\n\nRemove this scope?",https://github.com/bitcoin/bitcoin/pull/12705#discussion_r175075100,175075100,src/wallet/rpcdump.cpp
promag,2018-03-16T12:33:02Z,"In commit ""[wallet] [rpc] Move private key import functionality out of importprivkey"",\n\nNit, move throw to new line.",https://github.com/bitcoin/bitcoin/pull/12705#discussion_r175075217,175075217,src/wallet/rpcdump.cpp
promag,2018-03-16T12:34:25Z,"In commit ""[wallet] [rpc] Move private key import functionality out of importprivkey"",\n\n`static bool ...`?",https://github.com/bitcoin/bitcoin/pull/12705#discussion_r175075607,175075607,src/wallet/rpcdump.cpp
promag,2018-03-16T12:37:04Z,"In commit ""[wallet] [rpc] Add privkey support to importmulti"",\n\nNit, `UniValue result(UniValue::VOBJ);`",https://github.com/bitcoin/bitcoin/pull/12705#discussion_r175076159,175076159,src/wallet/rpcdump.cpp
kallewoof,2018-03-19T04:33:14Z,Why?,https://github.com/bitcoin/bitcoin/pull/12705#discussion_r175330197,175330197,src/wallet/rpcdump.cpp
cdecker,2018-03-26T13:39:51Z,Consistency?,https://github.com/bitcoin/bitcoin/pull/12705#discussion_r177092800,177092800,src/wallet/rpcdump.cpp
kallewoof,2018-04-16T02:34:08Z,"Ahh, because of the other one below. Fixed.",https://github.com/bitcoin/bitcoin/pull/12705#discussion_r181610964,181610964,src/wallet/rpcdump.cpp
