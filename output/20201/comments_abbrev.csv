practicalswift,2020-10-20 19:18:30,Concept ACK: nice cleanup!,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-713083170,713083170,
DrahtBot,2020-10-21 01:26:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23593](https://github.com/bitcoin/bitcoin/pull/23593) (build: remove x-prefix's from comparisons by fanquake)\n\nIf you ",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-713232964,713232964,
DrahtBot,2020-10-22 10:18:11,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit f5bd46a4cc6d395ce71ecb99852c1774235a249c<br>(master) | commit 04440de7a43624b9a6a5fd46d862e0657db068f0<br>(master and this pull) |\n|--|--|--|\n| bitcoin-core-linux-0.21-res.yml | [`d1971dabc444008d...`](https://drahtbot.space/gitian/bitcoin/bitcoin/f5bd46a4cc6d395ce71ecb99852c1774235a249c/bitcoin-core-linux-0.21-res.yml,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-714391437,714391437,
DrahtBot,2020-10-24 04:26:48,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 9af7c1993b3512a7230f723b1923abd496989c59<br>(master) | commit a997e711d9317d8985130ac366b5434045999309<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`a0883e94fe7d7b45...`](https://drahtbot.space/guix/bitcoin/bitcoin/9af7c1993b3512a7230f723b1923abd496989c59/bitcoin-9af7c1993b35-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-715671370,715671370,
laanwj,2020-11-19 10:42:42,"> drops redundant AC_SUBST macros\n\nWhat makes these redundant?",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-730286593,730286593,
hebasto,2020-11-19 10:49:52,"> > drops redundant AC_SUBST macros\n> \n> What makes these redundant?\n\nFrom commit message:\n> Variables that are declared with AC_ARG_VAR macro are substituted via\n> AC_SUBST macro.\n> PKG_CHECK_MODULES macro already has AC_ARG_VAR(${PACKAGE}_CFLAGS) and\n> AC_ARG_VAR(${PACKAGE}_LIBS).\n\nAlso https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Setting",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-730290209,730290209,
laanwj,2020-11-19 14:26:27,"Thanks. Yes, clear. But otoh that seems pretty deeply buried. I think one advantage of specifying them explicitly is to have a better idea what gets exported from the `configure.ac` script, what its interface is to the makefiles and config.h file.",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-730410222,730410222,
hebasto,2020-11-26 15:11:43,"@laanwj \n> I think one advantage of specifying them explicitly is to have a better idea what gets exported from the `configure.ac` script, what its interface is to the makefiles and config.h file.\n\n`PKG_CHECK_MODULES` has a pretty self-documenting feature, as its internal `AC_ARG_VAR` include variable description in the variable section of `./configure --help`.",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-734351307,734351307,
hebasto,2020-11-26 15:25:56,Rebased ae92fb1e103c17302fdbf03b1bbd04c6919c7920 -> 58737de5807445aeb3bc89e8215f85a1df0f398f ([pr20201.01](https://github.com/hebasto/bitcoin/commits/pr20201.01) -> [pr20201.02](https://github.com/hebasto/bitcoin/commits/pr20201.02)) due to the conflict with #20202.,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-734359144,734359144,
hebasto,2021-01-08 00:01:23,Rebased 58737de5807445aeb3bc89e8215f85a1df0f398f -> ab1feadf4e6cd4f5f2c7e74cea1c7baad61458ba ([pr20201.02](https://github.com/hebasto/bitcoin/commits/pr20201.02) -> [pr20201.03](https://github.com/hebasto/bitcoin/commits/pr20201.03)) due to the conflict with #18077.,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-756460144,756460144,
bitmastercoin,2021-01-11 07:07:21,"Running Kali Linux. 2020.4 and getting the error after attempting `sudo ./autogen.sh` \nwith the out put being a long string and eventually. ::\n`configure.ac:16: error: possibly undefined macro: AC_MSG_ERROR\n      If this token and others are legitimate, please use m4_pattern_allow.\n      See the Autoconf documentation.\nconfigure.ac:255: error: possibly undefined macro: AC_DEFINE\nconfig",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-757666171,757666171,
hebasto,2021-01-11 07:36:03,@bitmastercoin What happens when you do the same on the master branch?,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-757677098,757677098,
jarolrod,2021-08-10 23:59:29,@bitmastercoin I was able to successfully build and and run with Kali Linux 2020.4 and 2021.1 on master branch and PR branch. Can you give any update?,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896390325,896390325,
fanquake,2021-08-11 01:42:36,"> If we look at the pkg.m4 source code,\n> Lines 141 and 142 of the pkg.m4 source code.\n\nNot sure if you're aware, but https://github.com/pkgconf/pkgconf (which you've been linking to here), is not the same piece of software as https://www.freedesktop.org/wiki/Software/pkg-config/, which is what most builders would actually be using.",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896433663,896433663,
jarolrod,2021-08-11 01:47:27,@fanquake ah thanks for the clarification. Just trying to learn about our build system by reviewing. I've checked the source code for the pkg-config you've linked and have found the same relevant lines in its `pkg.m4`,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896435332,896435332,
hebasto,2021-08-11 11:44:59,"@jarolrod \n> ... I want to confirm the reproducibility of the stripped information with the [bitcoin-maintainer-tools/build-for-compare.py](https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/master/build-for-compare.py) script, but I'm currently running into the following issue:\n\nTry https://github.com/bitcoin-core/bitcoin-maintainer-tools/pull/108.",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896757064,896757064,
hebasto,2021-08-11 12:16:42,Comparing the current master (c3545a7396787c1d649f2d12fcb380b714cab6b2) with `pull/20201/merge` using [bitcoin-maintainer-tools/build-for-compare.py](https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/master/build-for-compare.py) (with https://github.com/bitcoin-core/bitcoin-maintainer-tools/pull/108) returns zero diff.,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896776324,896776324,
hebasto,2021-08-11 12:42:45,"@jarolrod \n> * Commit [388135b](https://github.com/bitcoin/bitcoin/commit/388135bcf91bcc665417b59980468db270e48d9a)  states that it is removing a redundant check of `PKG_CHECK_MODULES`. If we look at the  [pkg.m4](https://github.com/pkgconf/pkgconf/blob/master/pkg.m4) source code, and specifically [lines 131-142](https://github.com/pkgconf/pkgconf/blob/cef30268e1a3f79efd607c26abcf556aa314c9c4/pk",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896793697,896793697,
hebasto,2021-08-11 12:47:55,"> > If we look at the pkg.m4 source code,\n> > Lines 141 and 142 of the pkg.m4 source code.\n> \n> Not sure if you're aware, but https://github.com/pkgconf/pkgconf (which you've been linking to here), is not the same piece of software as https://www.freedesktop.org/wiki/Software/pkg-config/, which is what most builders would actually be using.\n\nThe correct reference is [here](https://gitlab",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896797451,896797451,
hebasto,2021-08-11 12:52:45,Rebased ab1feadf4e6cd4f5f2c7e74cea1c7baad61458ba -> 17c2cad948855f8f08e798b3e11b2be5e5fffdf1 ([pr20201.03](https://github.com/hebasto/bitcoin/commits/pr20201.03) -> [pr20201.04](https://github.com/hebasto/bitcoin/commits/pr20201.04)) on top of the recent change in the build system (including Guix) and CI.,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896800695,896800695,
hebasto,2021-08-11 14:28:41,"#### Guix hashes:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n3eac41c46efef01623ad8b7511eb5368f57415a45dd1d6a435c257bd41839446  guix-build-17c2cad94885/output/aarch64-linux-gnu/SHA256SUMS.part\nf00e74b71820778b361c2eeea7012bc61280d48e72e892bab554304df408fd5e  guix-build-17c2cad94885/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-896875402,896875402,
jarolrod,2021-08-19 23:30:08,"GUIX hashes, mine match @hebasto \n\n```\nfind guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n\n3eac41c46efef01623ad8b7511eb5368f57415a45dd1d6a435c257bd41839446  guix-build-17c2cad94885/output/aarch64-linux-gnu/SHA256SUMS.part\nf00e74b71820778b361c2eeea7012bc61280d48e72e892bab554304df408fd5e  guix-build-17c2cad94885/output/aa",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-902318804,902318804,
hebasto,2021-10-20 18:45:32,Rebased 17c2cad948855f8f08e798b3e11b2be5e5fffdf1 -> 362edc2aebc2de41c55248521e446f0d1cb24498 ([pr20201.04](https://github.com/hebasto/bitcoin/commits/pr20201.04) -> [pr20201.05](https://github.com/hebasto/bitcoin/commits/pr20201.05)) due to the conflict with #22646.,https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-947940983,947940983,
hebasto,2021-10-21 06:15:57,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\na2a40775cceebe46119187b6813751b26f994c61da769d6af8b0b770577f347f  guix-build-362edc2aebc2/output/aarch64-linux-gnu/SHA256SUMS.part\n9423bfa83362b47e72e2eccfa213ae4e748fad1b0d45f71c09714093bf693603  guix-build-362edc2aebc2/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/20201#issuecomment-948291755,948291755,
