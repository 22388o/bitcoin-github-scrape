[
  {
    "sha": "f827e151a2ce96e14aadb9e7d25045fe0a8afbd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODI3ZTE1MWEyY2U5NmUxNGFhZGI5ZTdkMjUwNDVmZTBhOGFmYmQy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-01-26T07:57:28Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-01-26T07:57:28Z"
      },
      "message": "refactor: remove straggling boost::mutex usage\n\nAfter the merge of #18710, the linter is warning:\n```bash\nA new Boost dependency in the form of \"boost/thread/mutex.hpp\" appears to have been introduced:\nsrc/sync.cpp:#include <boost/thread/mutex.hpp>\nsrc/test/sync_tests.cpp:#include <boost/thread/mutex.hpp>\n\n^---- failure generated from test/lint/lint-includes.sh\n```\n\nthe interim #19337 was merged, which introduced more `boost::mutex` usage.\n\nGiven we no longer use `boost::mutex`, just remove the double lock test\nand remaining includes.",
      "tree": {
        "sha": "f6391977492cd2472aec79c6538e37d499fe1d3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6391977492cd2472aec79c6538e37d499fe1d3c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmAPy7wACgkQLuufXMCV\nJsGxkxAAkcp53oxGvxLxTI4xPUSjLU27usuAJwr1SWLqexJWTLZQznzLm4ZyQ54W\nJhRkI3yrHR3XdxD8gXkePj1JLvPFjYuQDQGgI7l7BxbXsSJd9yMCvkCPFniMjfl2\nuTVk4I+3/oF1O8Avy+An4T7B35DUldAA+gwldwl4bBFnNACnGOB4bKjVOGqqMIUN\nDSbVeUYiig1LYnAG+coHB8UcIDKi6Rx64hw0sKA1NNE/Vh4x7a/sQV3X5jbriCgO\nLmpgO29rxaEKpoSo7G1M4zvb5FUQo0ZRGQlF7LAb4bn4TjMsw+nGQcfa7fMsIl2O\nysiGwnFRkfT+dwCw5sm8qFaQvJB3ng0uJ7cs4Euo0CAgklHd7488qorEDVdAv9vv\ng3HilYFZCUybzAGiPahlwITRPm2lag6/Mmf5n5n0wJqY3v9rM93uvi0FWJVeFTLQ\nvBzFhAIa93rb6lB6X/XxXZeyof4NrFqglgRuREBa1Bb+5Zr9M9P7iF3ienJHFFo/\nzAsSMuWSeIaHXZU9Kew7fP/Wxc7XuClyq+1r7NesxyGAiSTx4oGtrwBXBLNcmZ1m\nVMvA8/mm8e/dH/gYJL6t0pk7+7M8l2XafkjzkGBv6ZI+8BVgXjGjzQRXiIqX+bj4\nk7Q9DpOdihfFwG3uwrmMMP9ZabInNe84lqjB21OeTn9QxE1trGU=\n=ljEy\n-----END PGP SIGNATURE-----",
        "payload": "tree f6391977492cd2472aec79c6538e37d499fe1d3c\nparent 16ae3368f2a20cffa312b6ee9b724c1e302ca5fb\nauthor fanquake <fanquake@gmail.com> 1611647848 +0800\ncommitter fanquake <fanquake@gmail.com> 1611647848 +0800\n\nrefactor: remove straggling boost::mutex usage\n\nAfter the merge of #18710, the linter is warning:\n```bash\nA new Boost dependency in the form of \"boost/thread/mutex.hpp\" appears to have been introduced:\nsrc/sync.cpp:#include <boost/thread/mutex.hpp>\nsrc/test/sync_tests.cpp:#include <boost/thread/mutex.hpp>\n\n^---- failure generated from test/lint/lint-includes.sh\n```\n\nthe interim #19337 was merged, which introduced more `boost::mutex` usage.\n\nGiven we no longer use `boost::mutex`, just remove the double lock test\nand remaining includes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16ae3368f2a20cffa312b6ee9b724c1e302ca5fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ae3368f2a20cffa312b6ee9b724c1e302ca5fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16ae3368f2a20cffa312b6ee9b724c1e302ca5fb"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 0,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a2b62c2286b7e09ba541803a079b672ebb7312ce",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=f827e151a2ce96e14aadb9e7d25045fe0a8afbd2",
        "patch": "@@ -13,8 +13,6 @@\n #include <util/strencodings.h>\n #include <util/threadnames.h>\n \n-#include <boost/thread/mutex.hpp>\n-\n #include <map>\n #include <mutex>\n #include <set>\n@@ -224,7 +222,6 @@ template void EnterCritical(const char*, const char*, int, Mutex*, bool);\n template void EnterCritical(const char*, const char*, int, RecursiveMutex*, bool);\n template void EnterCritical(const char*, const char*, int, std::mutex*, bool);\n template void EnterCritical(const char*, const char*, int, std::recursive_mutex*, bool);\n-template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);\n \n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line)\n {"
      },
      {
        "sha": "3e4d1dac9eff965912f9b05eb4bc2977c81cbcb5",
        "filename": "src/test/sync_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2/src/test/sync_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f827e151a2ce96e14aadb9e7d25045fe0a8afbd2/src/test/sync_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sync_tests.cpp?ref=f827e151a2ce96e14aadb9e7d25045fe0a8afbd2",
        "patch": "@@ -6,7 +6,6 @@\n #include <test/util/setup_common.h>\n \n #include <boost/test/unit_test.hpp>\n-#include <boost/thread/mutex.hpp>\n \n #include <mutex>\n \n@@ -110,11 +109,6 @@ BOOST_AUTO_TEST_CASE(double_lock_mutex)\n     TestDoubleLock<Mutex>(true /* should throw */);\n }\n \n-BOOST_AUTO_TEST_CASE(double_lock_boost_mutex)\n-{\n-    TestDoubleLock<boost::mutex>(true /* should throw */);\n-}\n-\n BOOST_AUTO_TEST_CASE(double_lock_recursive_mutex)\n {\n     TestDoubleLock<RecursiveMutex>(false /* should not throw */);"
      }
    ]
  }
]