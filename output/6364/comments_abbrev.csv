mikehearn,2015-07-02T12:06:41Z,"@jonasschnelli asked the following questions on the original commit:\n\n> What if an attacker uses Tor Bridges?\n\nIt makes no difference, traffic that enters Tor via a bridge still leaves via a regular exit.\n\n> Is there no way of detecting a misbehaving node that tries to feed jam to my node?\n\nThe current notion of misbehaviour is insufficient and we have all known this for a long time. By an",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118010633,118010633,
mikehearn,2015-07-02T13:12:43Z,I'm not sure why Travis is unhappy. The header is included in the patch and it builds fine here.\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118027934,118027934,
jonasschnelli,2015-07-02T13:21:53Z,@mikehearn: you need to add `ipgroups.h` to `src/Makefile.am` (around L101).\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118030758,118030758,
petertodd,2015-07-03T00:25:25Z,"You know, I gotta wonder if going to all this engineering effort trying to blacklist Tor really is worthwhile, given we're still just talking about 125 or something connection slots - getting that many non-Tor IP addresses really isn't all that hard. Just look at how F2Pool was subject to a DoS attack recently that actually knocked a few % off their hashing power - script kiddies routinely play ar",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118201477,118201477,
gmaxwell,2015-07-03T00:47:19Z,"The system already has a IP address group (called netgroups).   This hardcoded blacklist of tor nodes is problematic in a couple respects-- it's not sensitive to the host actually being able to exit to the user in particular or even Bitcoin at all-- so it effectively punishes people for running tor exits, even ones that can't reach Bitcoin-- and of course the list will rot.\n\nThe generation proce",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118203758,118203758,
gmaxwell,2015-07-03T01:06:22Z,If someone does want to take PT's advice and do this in some implementation; at the very minimum it should download the tor directory and verify its signatures from the tor directory authorities; and filter hosts to actually test if they can exit to the port/host in question.  A nice way to handle fetching the directory securely would be gain the feature only when you're running tor alongside the ,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118205604,118205604,
pstratem,2015-07-03T02:16:10Z,The issues around connection slots as a limited resource has been known since it was first implemented in 2011 (5a3e82f9f543bdc88b8eaadee5d694b4f6cebdc7).\n\n@jgarzik has done some great work in designing a UDP protocol for p2p messaging ( https://bitcointalk.org/index.php?topic=156769.0 )\n\nThis is not a problem that calls for a blacklist.\n\nOh and your codes wrong.\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118211717,118211717,
pstratem,2015-07-03T03:09:58Z,I'm working on an alternative proposal.\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118219104,118219104,
jwilkins,2015-07-03T05:21:57Z,"How much effort do you think any judicial agency is going to put into chasing someone DOSing a node through even a basic VPS that they paid for using their own name. If you complain, the best you can realistically hope for is a quick response from the hosting provider.  There is essentially no recourse beyond that unless you're Visa and someone feels like making an example of Wikileaks supporters.",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118238307,118238307,
laanwj,2015-07-03T06:52:13Z,"I deeply dislike the blacklist idea.\n- This creates hardcoded discrimination on IP addresses, singled out based on anecdotal attacks. What is next, a proposal to make all Chinese IPs second class, because many DoSes originate there? Determined attackers can hire a botnet to get thousands of IPs wherever they want. This only hurts legitimate users - Tor isn't even very suitable for DoS because the",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118254814,118254814,
jwilkins,2015-07-03T08:14:53Z,"If you're having trouble, here's a better way to deal with blocking tor exit nodes\n\n```\nipset -N tor_exit_nodes iphash\nfor IP in `curl https://check.torproject.org/cgi-bin/TorBulkExitList.py\?ip=$YOUR_IP\&port=8333 | grep -v \# `; do \n ipset -q -A tor_exit_nodes $IP\ndone\niptables -A INPUT -m set --match-set tor_exit_nodes src -j DROP\n```\n",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118270882,118270882,
mikehearn,2015-07-03T09:49:37Z,"Yes, there should be a break statement. Thanks, I'll add it.\n\nOf course, a future patch can add support for smarter download mechanisms and smarter priority calculations. As I said in the patch description, in fact. It would require more code because Core does not have any way to download files over HTTPS. But there isn't much point in me or anyone else implementing such a thing until the base c",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118302282,118302282,
davout,2015-07-03T10:35:25Z,"If bitcoind is vulnerable to DDoS, bitcoind should be fixed.\n\ncat hearn > /dev/null\n",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118311051,118311051,
coinx-ltc,2015-07-03T10:52:36Z,@davout You cann't prevent an attacker from blocking all connections of a node with a simple fix in bitcoind.\nSince Tor makes it easier to launch such an attack this patch is a step in the right direction.\n\nIn case of such an attack non-tor connections should be prioritized since they are more likely to be nodes/miners/merchants. Therefore more important to the network than end user.\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118314577,118314577,
gits7r,2015-07-03T11:16:09Z,"Don't the netgroups in bitcoin core have a group for 'onions' (Tor hidden service peers). When a genuine client (one not trying to DoS other nodes) uses bitcoind over Tor, bitcoind will connect to more onion full nodes as opposite to clearnet IP nodes. This should prevent the attack, if not at least limit it. One of my full nodes (dual stack onion + clearnet) currently has 96 connections out of wh",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118319809,118319809,
mikehearn,2015-07-03T11:26:56Z,"I used to work with the anti-DoS system at Google, about 10 years ago I used it quite extensively. It was very sophisticated even back then ..... but it started out as a simple text file of IPs that were bad, being scpd to servers.\n\nThe notion that ""good is the enemy of the perfect"" isn't one based in engineering, it's an academic viewpoint. One day bitcoind might have a sophisticated, dynamic s",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118321258,118321258,
paveljanik,2015-07-03T11:30:21Z,So lets start with a script in contrib doing something like @jwilkins said.\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118322270,118322270,
gits7r,2015-07-03T11:40:45Z,"@mikehearn if the current behavior is not as I stated above, might be better to make bitcoind check if it can reach onion peers. Assuming it can reach onion peers if it has a proxy set is not reliable since Tor can be used transparently very easy.  The rule is simple, bitcoind should try to connect and if foo.onion is reachable, prefer onion peers vs. clearnet peers. \n\nThis will not affect the c",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118325141,118325141,
mikehearn,2015-07-03T12:39:20Z,"@paveljanik That script is Linux specific, wouldn't be shipped with the binary and (the biggest problem) requires manual communication with and intervention from every node operator. Normally when designing DoS defences you want to automate as much as possible. Most node operators won't know there's a DoS happening and find the script, etc.\n\n@gits7r Making bitcoind prefer to connect to hidden se",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118337204,118337204,
laanwj,2015-07-03T13:17:06Z,"@mikehearn A while ago you said you wanted me to behave more like a dictator.\nI still refuse to do this with regard to the consensus rules, but I'm fine with doing it for technical changes.\n\nSo: I reject an anti-Tor blacklist in Bitcoin Core.\n\nGo ahead and merge this into your own fork, but the discussion here is done. Every pull you touch turns into a cesspool, a big controversy that detract",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118347254,118347254,
mikehearn,2015-07-03T14:08:32Z,"Well, I do appreciate the clear and quick decision making at least :) OK then, go ahead and stick with your current approach. Just remember that relying entirely on 'misbehaviour' lets anyone switch off Tor for everyone, globally: that's the opposite of what you want.\n\nWith respect to my patches being ""cesspools"", I'm afraid I feel everything you just wrote applies to you guys as well. This patc",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118360301,118360301,
petertodd,2015-07-03T14:58:36Z,"@gits7r \n\n> This will also decrease the load on the Tor network exit capacity, since Tor exits are scarce, and in a rendezvous circuit to an onion peer Tor will use only non-exit relays.\n\nActually I brought up that point at a Tor dev's workshop last year and apparently there has been so much new support that - at least at that point - the situation had reversed to relay capacity being the bott",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118369043,118369043,
petertodd,2015-07-03T15:37:19Z,"@laanwj +1\n\nYou know, @mikehearn simplifying the issue to 'Don't let ""good is the enemy of the perfect"" stay your modus operandi.' is probably a big part of the problem - changes to Bitcoin aren't things that can be evaluated in a simple, linear, better or worse framework, but rather they have multi-dimensional effects with simultaneous good and bad outcomes. Often the outcomes are significantly",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-118376556,118376556,
kristovatlas,2015-08-27T03:49:38Z,"@mikehearn sorry to beat a dead horse/closed PR, but would this not make it fairly trivial to block access to all full nodes for Tor users using a very small (125 strong?) botnet? Still wondering of the merits of this now that it has been merged into XT.\n",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135282768,135282768,
gmaxwell,2015-08-27T06:19:40Z,"@kristovatlas It was my belief that it could be done with a single host-- including a new tor exit that just wasn't in the list at fetch time, in fact.  But I didn't try it and might be missing some detail.\n",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135304833,135304833,
mikehearn,2015-08-27T11:21:51Z,"Yes, you can. However, Tor is significantly easier to use/get access to than most botnets.\n\nPlease read the roadmap at the top. The next step is to handle multiple connections from single IPs better, and to allow user-configurable priority lists. Then a quick fix would be to drop your little botnet IPs into a file and give it lower priority than Tor. After that, Tor connections would evict the b",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135392848,135392848,
dcousens,2015-08-27T11:30:26Z,"> Then a quick fix would be to drop your little botnet IPs into a file and give it lower priority than Tor.\n\n~~How is anyone to keep up with manually putting IPs into a file?~~\n\nNever mind,  you mention automating this in the next paragraph.\n",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135394057,135394057,
mikehearn,2015-08-27T12:02:24Z,Yes. I think people are forgetting that DoS attackers don't politely wait around for you to come up with the perfect system. Sometimes you need a quick kludge if the automated systems you have aren't working.\n\nThe problem of handling DoS attacks in an open network like Bitcoin bears a strong resemblance to spam filtering in the email network. Random IPs are sending you messages and you don't hav,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135401160,135401160,
dcousens,2015-08-27T12:14:16Z,"@mikehearn that is all fine.  Hacks are a reality in a lot of software.  I think most people understand that.\nBut remember this is the core client,  it is literally the software run by the entire network in one way or another.\n\nThis isn't some hack that will only occur for some guys email server,  or a small business building out an new email platform.  This is the protocol and back bone of the",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135403926,135403926,
kristovatlas,2015-08-27T16:57:21Z,"> Yes, you can. However, Tor is significantly easier to use/get access to than most botnets.\n\nGranted, but the pool of people who might want to grief/DoS Tor users of bitcoin who also can get access to 1-125 IP addresses is pretty large. It would only take one, as a list of Bitcoin node IPs is pretty easy to discover.\n\nOTOH it looks like the way Bitcoin Core works right now is not better, if i",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135492509,135492509,
kristovatlas,2015-08-27T17:02:42Z,"With respect to better DoS resistance, what would it take to increase the # of connection slots a would-be attacker would consume? When you scale up the # of connection slots, which consumed resources tend to be the most expensive? Can we make them less expensive?\n",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135493622,135493622,
kristovatlas,2015-08-27T17:13:55Z,"Another way to look at DoS is in terms of economics. I think the fundamental problem with DoS is asymmetry in costs. Right now, there aren't many connection slots to consume, and it's very cheap (Tor or not -- this seems nearly irrelevant to me) to consume them. Even if we were to increase the number of slots, I bet a DoS attacker can find some operation that will require a node to consume a bunch",https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135495859,135495859,
mikehearn,2015-08-27T18:12:19Z,I think the right place to discuss this stuff would be the Bitcoin XT list.\n,https://github.com/bitcoin/bitcoin/pull/6364#issuecomment-135510545,135510545,
pstratem,2015-07-03T02:16:49Z,This will disconnect all connections from tor exit nodes.\n,https://github.com/bitcoin/bitcoin/pull/6364#discussion_r33837188,33837188,src/net.cpp
btcdrak,2015-07-03T06:47:59Z,A hard coded list? Really?\n,https://github.com/bitcoin/bitcoin/pull/6364#discussion_r33843395,33843395,src/torips.cpp
