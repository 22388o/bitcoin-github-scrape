[
  {
    "sha": "610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTBmZTU3NGNkOGEzNmQ0NjgzMGIwY2I0YmQ1MTNiYzE3YWQyMWJk",
    "commit": {
      "author": {
        "name": "shannon1916",
        "email": "shannon@unita.network",
        "date": "2019-06-13T02:57:44Z"
      },
      "committer": {
        "name": "shannon1916",
        "email": "shannon@unita.network",
        "date": "2019-06-25T05:24:30Z"
      },
      "message": "rpc: fix showing wrong amount when not all inputs are from me in gettransaction; see #14136",
      "tree": {
        "sha": "955d2307308d6043754a5f671d124762c0680e2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/955d2307308d6043754a5f671d124762c0680e2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/comments",
    "author": {
      "login": "web3shannon",
      "id": 3756217,
      "node_id": "MDQ6VXNlcjM3NTYyMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3756217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web3shannon",
      "html_url": "https://github.com/web3shannon",
      "followers_url": "https://api.github.com/users/web3shannon/followers",
      "following_url": "https://api.github.com/users/web3shannon/following{/other_user}",
      "gists_url": "https://api.github.com/users/web3shannon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web3shannon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web3shannon/subscriptions",
      "organizations_url": "https://api.github.com/users/web3shannon/orgs",
      "repos_url": "https://api.github.com/users/web3shannon/repos",
      "events_url": "https://api.github.com/users/web3shannon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web3shannon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web3shannon",
      "id": 3756217,
      "node_id": "MDQ6VXNlcjM3NTYyMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3756217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web3shannon",
      "html_url": "https://github.com/web3shannon",
      "followers_url": "https://api.github.com/users/web3shannon/followers",
      "following_url": "https://api.github.com/users/web3shannon/following{/other_user}",
      "gists_url": "https://api.github.com/users/web3shannon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web3shannon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web3shannon/subscriptions",
      "organizations_url": "https://api.github.com/users/web3shannon/orgs",
      "repos_url": "https://api.github.com/users/web3shannon/repos",
      "events_url": "https://api.github.com/users/web3shannon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web3shannon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f792395d13aa99ce51887db14e4f77a746d910e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f792395d13aa99ce51887db14e4f77a746d910e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f792395d13aa99ce51887db14e4f77a746d910e3"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 39,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cb9dab11c21c43a1cedd05d1f3891236f956122b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
        "patch": "@@ -1739,7 +1739,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n     CAmount nCredit = wtx.GetCredit(*locked_chain, filter);\n     CAmount nDebit = wtx.GetDebit(filter);\n     CAmount nNet = nCredit - nDebit;\n-    CAmount nFee = (wtx.IsFromMe(filter) ? wtx.tx->GetValueOut() - nDebit : 0);\n+    CAmount nFee = (wtx.IsAllFromMe(filter) ? wtx.tx->GetValueOut() - nDebit : 0);\n \n     entry.pushKV(\"amount\", ValueFromAmount(nNet - nFee));\n     if (wtx.IsFromMe(filter))"
      },
      {
        "sha": "68dffab7551b4c193bbc6080a453f46f0701941c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
        "patch": "@@ -1735,9 +1735,10 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n     listSent.clear();\n \n     // Compute fee:\n-    CAmount nDebit = GetDebit(filter);\n-    if (nDebit > 0) // debit>0 means we signed/sent this transaction\n+    bool fIsAllFromMe = IsAllFromMe(filter);\n+    if (fIsAllFromMe)\n     {\n+        CAmount nDebit = GetDebit(filter);\n         CAmount nValueOut = tx->GetValueOut();\n         nFee = nDebit - nValueOut;\n     }\n@@ -1750,7 +1751,7 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n         // Only need to handle txouts if AT LEAST one of these is true:\n         //   1) they debit from us (sent)\n         //   2) the output is to us (received)\n-        if (nDebit > 0)\n+        if (fIsAllFromMe)\n         {\n             // Don't report 'change' txouts\n             if (pwallet->IsChange(txout))\n@@ -1772,7 +1773,7 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n         COutputEntry output = {address, txout.nValue, (int)i};\n \n         // If we are debited by the transaction, add the output as a \"sent\" entry\n-        if (nDebit > 0)\n+        if (fIsAllFromMe)\n             listSent.push_back(output);\n \n         // If we are receiving the output, add it as a \"received\" entry\n@@ -2003,6 +2004,11 @@ std::set<uint256> CWalletTx::GetConflicts() const\n     return result;\n }\n \n+bool CWalletTx::IsAllFromMe(const isminefilter& filter) const\n+{\n+    return pwallet->IsAllFromMe(*tx, filter);\n+}\n+\n CAmount CWalletTx::GetCachableAmount(AmountType type, const isminefilter& filter, bool recalculate) const\n {\n     auto& amount = m_amounts[type];"
      },
      {
        "sha": "c69a3f8867782658a4e25207d026b8195874fe9c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
        "patch": "@@ -577,6 +577,7 @@ class CWalletTx : public CMerkleTx\n     {\n         return (GetDebit(filter) > 0);\n     }\n+    bool IsAllFromMe(const isminefilter& filter) const;\n \n     // True if only scriptSigs are different\n     bool IsEquivalentTo(const CWalletTx& tx) const;"
      },
      {
        "sha": "5be9b3a2b666463cc5d71c858e981759125c6359",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/610fe574cd8a36d46830b0cb4bd513bc17ad21bd/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=610fe574cd8a36d46830b0cb4bd513bc17ad21bd",
        "patch": "@@ -496,6 +496,33 @@ def run_test(self):\n         self.nodes[0].setlabel(change, 'foobar')\n         assert_equal(self.nodes[0].getaddressinfo(change)['ischange'], False)\n \n+        # Test gettransaction for showing CoinJoin transaction. See issue #14136.\n+        # Build a tx where inputs = [10 mine, 10 not-mine] and outputs = [15 mine, 4.99 not-mine].\n+        # The amount returned by gettransaction is expected to be 15 - 10 = 5.\n+        input_address_1 = self.nodes[1].getnewaddress()\n+        input_address_2 = self.nodes[2].getnewaddress()\n+        output_address_1 = self.nodes[1].getnewaddress()\n+        output_address_2 = self.nodes[2].getnewaddress()\n+        input_privkey_1 = self.nodes[1].dumpprivkey(input_address_1)\n+        input_privkey_2 = self.nodes[2].dumpprivkey(input_address_2)\n+        txid = self.nodes[1].sendmany('', {input_address_1: 10, input_address_2: 10})\n+        tx_obj = self.nodes[1].getrawtransaction(txid, 1)\n+        inputs = []\n+        for utxo in tx_obj['vout']:\n+            address = utxo['scriptPubKey']['addresses'][0]\n+            if address == input_address_1 or address == input_address_2:\n+                inputs.append({\"txid\": txid, \"vout\": utxo['n']})\n+        outputs = [{output_address_1: 15}, {output_address_2: 4.99}]\n+        tx = self.nodes[1].createrawtransaction(inputs, outputs)\n+        tx = self.nodes[1].signrawtransactionwithkey(tx, [input_privkey_1, input_privkey_2])['hex']\n+        txid = self.nodes[1].sendrawtransaction(tx)\n+        tx_obj = self.nodes[1].gettransaction(txid)\n+        assert_equal(tx_obj['amount'], Decimal('5.00000000'))\n+        assert_equal(tx_obj['fee'], Decimal('0E-8'))\n+        assert_equal(tx_obj['trusted'], False)\n+        assert_equal(len(tx_obj['details']), 1)\n+        assert_equal(tx_obj['details'][0]['category'], 'receive')\n+        assert_equal(tx_obj['details'][0]['amount'], Decimal('15.00000000'))\n \n if __name__ == '__main__':\n     WalletTest().main()"
      }
    ]
  }
]