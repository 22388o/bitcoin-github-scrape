promag,2019-06-13 12:03:48,Can you add a test to exercise this change? ,https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-501673601,501673601,
web3shannon,2019-06-13 13:38:10,"Sure, one or two days later.",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-501706468,501706468,
web3shannon,2019-06-14 07:10:49,@promag Do you mean adding a `rpc_gettransaction.py` to `test/functional`?,https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-501996249,501996249,
promag,2019-06-14 07:16:17,"I think you can extend and existing test, there are some that use gettransaction.",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-501997669,501997669,
web3shannon,2019-06-17 05:38:32,The test is added. ,https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-502541279,502541279,
DrahtBot,2019-06-17 06:15:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16185](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16185.html) (gettransaction: add an argument to decode t",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-502548553,502548553,
web3shannon,2019-06-19 08:39:51,"@promag Yes, I'll fix the `details` part.",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-503465701,503465701,
web3shannon,2019-06-25 06:02:32,The `details` is fixed and the test is modified. @promag ,https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-505296822,505296822,
instagibbs,2019-07-16 01:47:31,"Before gathering more review I think this will need some concept ACKs.\n\nFor instance, I'm not sure returning a fee of 0 is the right thing here in cases of `!IsAllFromMe`? Clearly the previous behavior is odd/wrong, but we might want to re-think what information this is trying to convey first.",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-511631886,511631886,
luke-jr,2019-08-19 23:23:27,"I'm pretty sure it's impossible to do the right thing for CoinJoins here without extra metadata.\n\nWe can't just blindly add all the outputs as ""sent"", because we only sent some of them - but we have no way to know which one(s).",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-522791200,522791200,
DrahtBot,2019-09-02 11:54:43,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-527120188,527120188,
adamjonas,2020-06-05 17:41:50,Hi @shannon1916 - It looks like this is still lacking concept ACKs. Is this something that you plan on continuing to pursue? #19002 and #18919 are also relevant and maybe you can piggyback off those approaches.,https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-639659890,639659890,
shesek,2021-03-05 23:24:50,"> I'm not sure returning a fee of 0 is the right thing here\n\nI agree, I think it should be a `null` to differentiate from transactions that are actually paying no fee.\n\nIt would be great to see this issue get fixed.",https://github.com/bitcoin/bitcoin/pull/16199#issuecomment-791785870,791785870,
promag,2019-06-17 14:41:30,Could also assert key `trusted = false`.,https://github.com/bitcoin/bitcoin/pull/16199#discussion_r294332574,294332574,test/functional/wallet_basic.py
promag,2019-06-17 14:42:20,At this point `self.nodes[1]` has some UTXO that can be used instead of generating more blocks.,https://github.com/bitcoin/bitcoin/pull/16199#discussion_r294332973,294332973,test/functional/wallet_basic.py
web3shannon,2019-06-19 08:38:21,"Obtaining txids, amounts, addresses of those existing UTXOs would make the code much more complex. Is it really necessary?",https://github.com/bitcoin/bitcoin/pull/16199#discussion_r295182286,295182286,test/functional/wallet_basic.py
web3shannon,2019-06-19 08:46:51,OK. Will add more `assert_equal`s.,https://github.com/bitcoin/bitcoin/pull/16199#discussion_r295186183,295186183,test/functional/wallet_basic.py
promag,2019-06-19 08:54:06,Just `listunspent`?,https://github.com/bitcoin/bitcoin/pull/16199#discussion_r295189337,295189337,test/functional/wallet_basic.py
shesek,2021-03-05 23:24:55,"Does this mean that a transaction where some inputs are wallet related and none of the outputs are won't get registered as either 'sent' or 'received'?\n\nEdit: Actually, it seems like these transactions will already get skipped sooner, in the `continue` above on line 1761.",https://github.com/bitcoin/bitcoin/pull/16199#discussion_r588780730,588780730,src/wallet/wallet.cpp
