[
  {
    "sha": "08b992675cf8d946db19b7bea747fa1085fdb2a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGI5OTI2NzVjZjhkOTQ2ZGIxOWI3YmVhNzQ3ZmExMDg1ZmRiMmEy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-28T11:50:20Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:24:08Z"
      },
      "message": "test: add feature_asmap functional tests\n\nto verify node behaviour and debug log when launching bitcoind in these cases:\n\n1. `bitcoind` with no -asmap arg, using /16 prefix for IP bucketing\n\n2. `bitcoind -asmap=<relative path>`, using the unit test skeleton asmap\n\n3. `bitcoind -asmap/-asmap=` with no file specified, using the default asmap\n\n4. `bitcoind -asmap` with no file specified, and a missing default asmap file\n\nThe tests are order-independent. The slowest test (missing default asmap file)\nis placed last.",
      "tree": {
        "sha": "229325a74b4a0ccfa4bd9b68ba6c023f222da4b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/229325a74b4a0ccfa4bd9b68ba6c023f222da4b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08b992675cf8d946db19b7bea747fa1085fdb2a2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5fq/kACgkQT1chs9Dj\nkh05hQ/8DDrUQ2Qg5UHRZPG5zxrcd8HNloJzhRyQFASV57JJ9tQDLwwMxcmtR+nu\nKNHcq2881r78CiS3l2DdihaWBijCyB71GQw9/yeBbKSEynZYClXpR+Yqu3jdYQid\nQkJUwdOnQ+J307XHqmCzBGOUnOGxoDEBdK2HSm8eAxTxDKTwD3jEIaf+Ck4Z02L5\nSU52BzcUqGjAWPpdfp16GlAqK9py+VO+ICRRKSdOL7m4vAxwrbRGGw1x3jAZNa+n\nIY5U+zqzSwzaWNF153MeKawoq5OPVhZj9ne+LtR7vsswtBYwg35YCaLk6h0QdYuq\nZlVO3pY2NrGio7Jl+F+8Ytl3ug88sWdZWJKM0YBGw1qMgoQDZLvBJlzTvVriN79m\noNO94iUM1/yDMauGMWtOJCpkZiTHMQSXVWEySg1vvVocBMDKI3Tt5WeJE9xJwWaZ\nigS3R/IR5max5gKenbdwQYlDM5rW5BaYkzt7ZkKLfboBJIWfN1GtzGvupU6cf4D8\nwRz8Ss16LzusiiVpgHbTJ9rcylLHvtyDb3lNiHBAkIrQ6C72TRjS/DW8cvTqxmlN\nE0SFH3DCplcqlc/AqMIlcpKDuXoVn8//xhPizz+Pc4eev6jeuHqRvvxdUER4ltWT\ne9PTBPHQ4zfBhGCFAtpBoPpbOtlvz+L4h3/eC4GjWK3l7tjOdwo=\n=Fjlm\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILuUtGK9MWYlhkQGLxJOyYju6R6gbFXDMAWz3DZhgUmMCP/wEA7GE1l0exl7\n3+ii9G+l2wwI8QReX6v78AjnfHRNrM+sKQCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQRnPChTf6reQwffzX\nP0OaFAjxIP3wx1zrJ3C54aH2Ud8otir2zEvbvtFeHiAJxUzHY5HiCPEEXl+r+vAI\nnUaLiAn8aNsAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4\neS5jb23/8BCFHEcNNMej+uJGt7263gyvCPAgpUcnVdumIRBo79EnDGu0GPjzaWIJ\nuf5uD4lo6Iu07FkI8QReX6v78AgWsk/UbXwO9ACD3+MNLvkMjikoaHR0cHM6Ly9m\naW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQtfFDR4Gr2o4PO9DUjwKG\nuwjxIKeGGyAu2fa8CynDRW/UaKn6KZ1BYfB5xi4c6Gx0MHMXCPEEXl+r+vAI3pi9\nbid0MVwAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 229325a74b4a0ccfa4bd9b68ba6c023f222da4b7\nparent a71c34742c24245a0d642e68f9e61f46cc7573fb\nauthor Jon Atack <jon@atack.com> 1577533820 +0100\ncommitter Jon Atack <jon@atack.com> 1583328248 +0100\n\ntest: add feature_asmap functional tests\n\nto verify node behaviour and debug log when launching bitcoind in these cases:\n\n1. `bitcoind` with no -asmap arg, using /16 prefix for IP bucketing\n\n2. `bitcoind -asmap=<relative path>`, using the unit test skeleton asmap\n\n3. `bitcoind -asmap/-asmap=` with no file specified, using the default asmap\n\n4. `bitcoind -asmap` with no file specified, and a missing default asmap file\n\nThe tests are order-independent. The slowest test (missing default asmap file)\nis placed last.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b992675cf8d946db19b7bea747fa1085fdb2a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08b992675cf8d946db19b7bea747fa1085fdb2a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b992675cf8d946db19b7bea747fa1085fdb2a2/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a71c34742c24245a0d642e68f9e61f46cc7573fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a71c34742c24245a0d642e68f9e61f46cc7573fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a71c34742c24245a0d642e68f9e61f46cc7573fb"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 84,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a196d7cc9d6e21926f1533a5a380e3b3e7c9142b",
        "filename": "test/functional/feature_asmap.py",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b992675cf8d946db19b7bea747fa1085fdb2a2/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b992675cf8d946db19b7bea747fa1085fdb2a2/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=08b992675cf8d946db19b7bea747fa1085fdb2a2",
        "patch": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test asmap config argument for ASN-based IP bucketing.\n+\n+Verify node behaviour and debug log when launching bitcoind in these cases:\n+\n+1. `bitcoind` with no -asmap arg, using /16 prefix for IP bucketing\n+\n+2. `bitcoind -asmap=<relative path>`, using the unit test skeleton asmap\n+\n+3. `bitcoind -asmap/-asmap=` with no file specified, using the default asmap\n+\n+4. `bitcoind -asmap` with no file specified, and a missing default asmap file\n+\n+The tests are order-independent. The slowest test (missing default asmap file)\n+is placed last.\n+\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+DEFAULT_ASMAP_FILENAME = 'ip_asn.map' # defined in src/init.cpp\n+ASMAP = '../../src/test/data/asmap.raw' # path to unit test skeleton asmap\n+VERSION = 'fec61fa21a9f46f3b17bdcd660d7f4cd90b966aad3aec593c99b35f0aca15853'\n+\n+def expected_messages(filename):\n+    return ['Opened asmap file \"{}\" (59 bytes) from disk.'.format(filename),\n+            'Using asmap version {} for IP bucketing.'.format(VERSION)]\n+\n+class AsmapTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def test_without_asmap_arg(self):\n+        self.log.info('Test bitcoind with no -asmap arg passed')\n+        self.stop_node(0)\n+        with self.node.assert_debug_log(['Using /16 prefix for IP bucketing']):\n+            self.start_node(0)\n+\n+    def test_asmap_with_relative_path(self):\n+        self.log.info('Test bitcoind -asmap=<relative path>')\n+        self.stop_node(0)\n+        name = 'ASN_map'\n+        filename = os.path.join(self.datadir, name)\n+        shutil.copyfile(self.asmap_raw, filename)\n+        with self.node.assert_debug_log(expected_messages(filename)):\n+            self.start_node(0, ['-asmap={}'.format(name)])\n+        os.remove(filename)\n+\n+    def test_default_asmap(self):\n+        shutil.copyfile(self.asmap_raw, self.default_asmap)\n+        for arg in ['-asmap', '-asmap=']:\n+            self.log.info('Test bitcoind {} (using default map file)'.format(arg))\n+            self.stop_node(0)\n+            with self.node.assert_debug_log(expected_messages(self.default_asmap)):\n+                self.start_node(0, [arg])\n+        os.remove(self.default_asmap)\n+\n+    def test_default_asmap_with_missing_file(self):\n+        self.log.info('Test bitcoind -asmap with missing default map file')\n+        self.stop_node(0)\n+        msg = \"Error: Could not find or parse specified asmap: '\\\"{}\\\"'\".format(self.default_asmap)\n+        self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\n+\n+    def run_test(self):\n+        self.node = self.nodes[0]\n+        self.datadir = os.path.join(self.node.datadir, self.chain)\n+        self.default_asmap = os.path.join(self.datadir, DEFAULT_ASMAP_FILENAME)\n+        self.asmap_raw = os.path.join(os.path.dirname(os.path.realpath(__file__)), ASMAP)\n+\n+        self.test_without_asmap_arg()\n+        self.test_asmap_with_relative_path()\n+        self.test_default_asmap()\n+        self.test_default_asmap_with_missing_file()\n+\n+\n+if __name__ == '__main__':\n+    AsmapTest().main()"
      },
      {
        "sha": "ac746ea9bfcbc1027c051d2c2c5f210caf7e6b35",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b992675cf8d946db19b7bea747fa1085fdb2a2/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b992675cf8d946db19b7bea747fa1085fdb2a2/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=08b992675cf8d946db19b7bea747fa1085fdb2a2",
        "patch": "@@ -101,6 +101,7 @@\n     'rpc_txoutproof.py',\n     'wallet_listreceivedby.py',\n     'wallet_abandonconflict.py',\n+    'feature_asmap.py',\n     'feature_csv_activation.py',\n     'rpc_rawtransaction.py',\n     'wallet_address_types.py',"
      }
    ]
  },
  {
    "sha": "fbe9b024f01c29153afe494fed74b623ce3ffefa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmU5YjAyNGYwMWMyOTE1M2FmZTQ5NGZlZDc0YjYyM2NlM2ZmZWZh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-29T09:43:39Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:24:11Z"
      },
      "message": "config: use default value in -asmap config\n\nand move to sorted position",
      "tree": {
        "sha": "387a4f00159550881449b2d661349c5c60695449",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/387a4f00159550881449b2d661349c5c60695449"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbe9b024f01c29153afe494fed74b623ce3ffefa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5fq/wACgkQT1chs9Dj\nkh1gohAAt1S/a82NHRX4asAsSPSuG7miFypE+bTEhg6Hxg3hfwAA+5afRaPWK8PK\n010yIPXPDiDNTXF0S6XIALObHeb1pqaaW9lF0VQomkXFVFtEZvbcdsdYWLRHth/5\nbw1xSde/pHJf4UItfh0BJkT3nG67iqnpVkORWHcwhqFnwsJR+O3l/QZg4C6edq9v\nHZ+mXCTLsA7lu9fH5Ng/h40tH8+pvd0nLPGNUz+myzenHhrfMn1IKgk5uIhnjUXG\nxbAlv1B2njk2jNXNGUveh3ay5cackDQRaimjEAN6V1MoZtQkE2fNRLYTDZQm11av\ni1sqoIMUEeINF5+GPyW9fpll+ewAIfuBbDk20O39ZkNltqCVnA9SjrE25Nyw7EHV\n0Yu94JrSpOflGVbh7L25AiK1+NbK24vpw+RUUQoC3FTfE8JVYWvqKIshrTJU34yr\narf3p6mAzZ8LqnIZAZc5sYRIsqMiSytXzKa+jMoljlge2xZS5zKhwjMlJIvzz2Z6\nQRm5wWIG6Qepk02pHh8uJ4NQ93KgPh/IyaZ0gLZIyCoV1gHNsC6qrP4cozk6MrwM\nzsGkLBSiyGQT5cg7fPWl+JSogMHn0fB5OcLp+eseEMhNhW/Q6ouI+V2XqgC8iYxQ\nDy0o6XbFu/1FQuMuZi/3qpHLZaDXe5rFJLPV2o0gWYwgUwNRuIY=\n=7hQu\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJZZ/zGrobuZLXtoT5obS45t1CTc29niUwZnomw/lNqCCP/wEDuaOaqW+fkf\nOEejotkmOR0I8QReX6v98AjI3fypn01oagCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEFnbElsjYxAFM0frxFkg\nXDMI8QReX6v98AgPk4SiWXv0HQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQYmMB95tDAau+3D6ip2MmKwjx\nBF5fq/3wCHmIKHfytpEZAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BB55WopBqBxnVKbhksCwoYiCPEEXl+r/fAI+G0Q2i7FZ+IA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 387a4f00159550881449b2d661349c5c60695449\nparent 08b992675cf8d946db19b7bea747fa1085fdb2a2\nauthor Jon Atack <jon@atack.com> 1577612619 +0100\ncommitter Jon Atack <jon@atack.com> 1583328251 +0100\n\nconfig: use default value in -asmap config\n\nand move to sorted position\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbe9b024f01c29153afe494fed74b623ce3ffefa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbe9b024f01c29153afe494fed74b623ce3ffefa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbe9b024f01c29153afe494fed74b623ce3ffefa/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08b992675cf8d946db19b7bea747fa1085fdb2a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b992675cf8d946db19b7bea747fa1085fdb2a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08b992675cf8d946db19b7bea747fa1085fdb2a2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5b312af978810ef05283644f4193d8442ca5b337",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbe9b024f01c29153afe494fed74b623ce3ffefa/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbe9b024f01c29153afe494fed74b623ce3ffefa/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fbe9b024f01c29153afe494fed74b623ce3ffefa",
        "patch": "@@ -408,6 +408,7 @@ void SetupServerArgs()\n                  ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n     gArgs.AddArg(\"-addnode=<ip>\", \"Add a node to connect to and attempt to keep the connection open (see the `addnode` RPC command help for more info). This option can be specified multiple times to add multiple nodes.\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: %s). Path should be relative to the -datadir path.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-banscore=<n>\", strprintf(\"Threshold for disconnecting misbehaving peers (default: %u)\", DEFAULT_BANSCORE_THRESHOLD), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-bantime=<n>\", strprintf(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\", DEFAULT_MISBEHAVING_BANTIME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-bind=<addr>\", \"Bind to given address and always listen on it. Use [host]:port notation for IPv6\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n@@ -436,7 +437,6 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-peertimeout=<n>\", strprintf(\"Specify p2p connection timeout in seconds. This option determines the amount of time a peer may be inactive before the connection to it is dropped. (minimum: 1, default: %d)\", DEFAULT_PEER_CONNECT_TIMEOUT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n #ifdef USE_UPNP\n #if USE_UPNP\n     gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);"
      }
    ]
  },
  {
    "sha": "81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWMzOGEyNDk3NWYzNGU1ODk0ZWZlM2QxYWFmNDVmZjZhOGNlZTRh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-29T17:45:59Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:24:13Z"
      },
      "message": "config: enable passing -asmap an absolute file path\n\n- allow passing an absolute file path to the -asmap config arg\n\n- update the -asmap config help\n\n- add a functional test in feature_asmap.py",
      "tree": {
        "sha": "5194d591a5752ef29cc3c45d49930ded0bec93c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5194d591a5752ef29cc3c45d49930ded0bec93c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5fq/4ACgkQT1chs9Dj\nkh12+Q/8CurNfJ+BqFyAy0CEMlXF0XetBY7xLi84mPei8EYXWgYnwSdS54PRU/eY\ntijB9W1QYDMVJaCxt98ralLc2ytSGLyOEjwOS7pGXUtX4Ra8TYhyU9N9m2lZZSYM\nqd2ZhHK0SonbeHO4dwzufpgJNfoFeIuOme5kPbcn+R7nDaotGbPN7B0zAjgGTiXV\n6O8wbQTy2V6mW2lz39GooossMHg1T2v6ghpOEiR4lRNsGjuu87FYHMpUoMYSzU1P\nixsPzld8V4tuPdEoRvWZDTxOLiLazyg5GQhyWezw4hXjmOhykUhP8b8sfr6CfxVQ\n6sIQ5d/2uT230mXaXsG5kIYrB9S1eA2IcO63zK/rUVgXlRBLdU/iW9Xgnfkw6fpN\nBcc+LzNA8G5utlpc5BHMzRPeCeIzjiWTG0h3MMjDiGR45inyOtSVWYNpr0OpW+k1\nuIxTNertvtC+rxkfd0F3mOfEu9W1bonhpmvX6OB9EKKMdObMpz1W6V96d2IJenBT\nitHIcE7Az5LTh7UiitJEoLQ6MhMsJ2+Y2Tv5zcaP15qpJtDFM7+HfEU1DjEq+/V5\n5zcAdIwWy6Ht23WOmVE2WmRWQHa5rcnlTmJZ98VmiLpu9xgxB9Uf7pchTE2jtTTp\n0GfSCfOMcAaj9OzwzVWeNuNJdt5RdD+OUtcqPaDbbRhVKmgtKVk=\n=KN9+\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMNUl1A1ScjV2jHQ+t8NjFfki6xKcsQxK62DlMzwcfSxCP/wEACY3IZV08Gz\noypz6toL0cII8QReX6v/8AgZi/Nhgxv12wCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQaQeZe0n5IB9j6CVn\n7+KlRAjxBF5fq//wCAn7NqTahnXaAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQsjc9xor9a29nnAKbpOWUUwjxBF5fq//wCKET\nk2T+5K7SAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDtlep/Pku481oL5GHRot2QCPEg0zy9F5CgGaFB67C27yKb\ncQEkrIfQmSQBG1owa8jO1NYI8QReX6v/8Aive0fSoLxrzgCD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5194d591a5752ef29cc3c45d49930ded0bec93c7\nparent fbe9b024f01c29153afe494fed74b623ce3ffefa\nauthor Jon Atack <jon@atack.com> 1577641559 +0100\ncommitter Jon Atack <jon@atack.com> 1583328253 +0100\n\nconfig: enable passing -asmap an absolute file path\n\n- allow passing an absolute file path to the -asmap config arg\n\n- update the -asmap config help\n\n- add a functional test in feature_asmap.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbe9b024f01c29153afe494fed74b623ce3ffefa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbe9b024f01c29153afe494fed74b623ce3ffefa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbe9b024f01c29153afe494fed74b623ce3ffefa"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 22,
      "deletions": 8
    },
    "files": [
      {
        "sha": "222e33c1a7e67e5b7ee2150128ea8748d9dce054",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
        "patch": "@@ -408,7 +408,7 @@ void SetupServerArgs()\n                  ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n     gArgs.AddArg(\"-addnode=<ip>\", \"Add a node to connect to and attempt to keep the connection open (see the `addnode` RPC command help for more info). This option can be specified multiple times to add multiple nodes.\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: %s). Path should be relative to the -datadir path.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: %s). Relative paths will be prefixed by the net-specific datadir location.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-banscore=<n>\", strprintf(\"Threshold for disconnecting misbehaving peers (default: %u)\", DEFAULT_BANSCORE_THRESHOLD), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-bantime=<n>\", strprintf(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\", DEFAULT_MISBEHAVING_BANTIME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-bind=<addr>\", \"Bind to given address and always listen on it. Use [host]:port notation for IPv6\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n@@ -1827,11 +1827,13 @@ bool AppInitMain(NodeContext& node)\n \n     // Read asmap file if configured\n     if (gArgs.IsArgSet(\"-asmap\")) {\n-        std::string asmap_file = gArgs.GetArg(\"-asmap\", \"\");\n-        if (asmap_file.empty()) {\n-            asmap_file = DEFAULT_ASMAP_FILENAME;\n+        fs::path asmap_path = fs::path(gArgs.GetArg(\"-asmap\", \"\"));\n+        if (asmap_path.empty()) {\n+            asmap_path = DEFAULT_ASMAP_FILENAME;\n+        }\n+        if (!asmap_path.is_absolute()) {\n+            asmap_path = GetDataDir() / asmap_path;\n         }\n-        const fs::path asmap_path = GetDataDir() / asmap_file;\n         std::vector<bool> asmap = CAddrMan::DecodeAsmap(asmap_path);\n         if (asmap.size() == 0) {\n             InitError(strprintf(_(\"Could not find or parse specified asmap: '%s'\").translated, asmap_path));"
      },
      {
        "sha": "07dde84775242733647e841ac94545f39bfe1afe",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
        "patch": "@@ -8,11 +8,13 @@\n \n 1. `bitcoind` with no -asmap arg, using /16 prefix for IP bucketing\n \n-2. `bitcoind -asmap=<relative path>`, using the unit test skeleton asmap\n+2. `bitcoind -asmap=<absolute path>`, using the unit test skeleton asmap\n \n-3. `bitcoind -asmap/-asmap=` with no file specified, using the default asmap\n+3. `bitcoind -asmap=<relative path>`, using the unit test skeleton asmap\n \n-4. `bitcoind -asmap` with no file specified, and a missing default asmap file\n+4. `bitcoind -asmap/-asmap=` with no file specified, using the default asmap\n+\n+5. `bitcoind -asmap` with no file specified and a missing default asmap file\n \n The tests are order-independent. The slowest test (missing default asmap file)\n is placed last.\n@@ -42,6 +44,15 @@ def test_without_asmap_arg(self):\n         with self.node.assert_debug_log(['Using /16 prefix for IP bucketing']):\n             self.start_node(0)\n \n+    def test_asmap_with_absolute_path(self):\n+        self.log.info('Test bitcoind -asmap=<absolute path>')\n+        self.stop_node(0)\n+        filename = os.path.join(self.datadir, 'my-map-file.map')\n+        shutil.copyfile(self.asmap_raw, filename)\n+        with self.node.assert_debug_log(expected_messages(filename)):\n+            self.start_node(0, ['-asmap={}'.format(filename)])\n+        os.remove(filename)\n+\n     def test_asmap_with_relative_path(self):\n         self.log.info('Test bitcoind -asmap=<relative path>')\n         self.stop_node(0)\n@@ -74,6 +85,7 @@ def run_test(self):\n         self.asmap_raw = os.path.join(os.path.dirname(os.path.realpath(__file__)), ASMAP)\n \n         self.test_without_asmap_arg()\n+        self.test_asmap_with_absolute_path()\n         self.test_asmap_with_relative_path()\n         self.test_default_asmap()\n         self.test_default_asmap_with_missing_file()"
      }
    ]
  },
  {
    "sha": "b8d0412b213df18f23bf8677ab94068c6cca9f51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOGQwNDEyYjIxM2RmMThmMjNiZjg2NzdhYjk0MDY4YzZjY2E5ZjUx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-29T17:52:10Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:24:15Z"
      },
      "message": "config: separate the asmap finding and parsing checks\n\nand update the tests.",
      "tree": {
        "sha": "0e2d5c7258e12284244995d7f61548b3a1f4d6ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e2d5c7258e12284244995d7f61548b3a1f4d6ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8d0412b213df18f23bf8677ab94068c6cca9f51",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5frAAACgkQT1chs9Dj\nkh1hsBAAkt+G8dwMmGYb7aGFQrKKpnBT8a5mDvpG9MI7GvCBoE7fqW9kCvhehGst\nwX3BDXQV4L8iDgBcavlMKzH7rL3KThbZJx7vna/b2jqdW2fzWiXBjr+G5ygJYbDg\n0cWCFstBbC5QGhX8wGInK13YJ26qF3ErNbejVIBXaRoOkcKcMbvpL+3Cv6h0UZFu\nLmPXf0zr9hZX4gV8r9xvDZPmtI4bbWFe+QjUhVEsf9CbTqeCec4feNUFbXhWb/Nc\n3QwAeoyv3LzNCYIBy4SWP74e6HTJyA7ef+ndFILmftCBwPciyMo9nbCFYQGd9x1J\nTDx/n7sEnxnAk1ECbQph09IIjhnIUBgL4VDUT7jo07mZkyQl8wAEopas7/c2/1wI\n7ZJGnIX/J98sOBI4D/4U+Pt6J5LfodqpvdFx1A6SgmjEZ6oDTjKnaCJH5DPDxDLh\niLfLIV9MvSs76esqxsVmmS5NUO7wrDFEgC8LCOfEsc/ucv6VdxhqBetT/9E7vcsM\nDfrnyB8x0fJoa/Coi+eq5jETHjMvrWOoiZEmCeyR12yGjuAuKHK6rgiycjZGFlDE\ncS3kqhuK5iYjgFAfWxzrgllCnxfmjDL2II65sO/eeDnsvSgbMTQ9pSAOu0SpICyX\nRPPJr/eIng4pxFUW1/iUtAlqxzOszJRvWhxpLYnbwQy4w1t6jMo=\n=kdcv\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIH1ozQiE+OE5kJtPpsMGu/HdNhvTIwm3hfebad3wYxe3CP/wEEGcSYZQlgQh\nhuIi4YHGTYsI8QReX6wB8AhupBK5POI+4QCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEMChsMOtjQk3DLzKz3DTB7sI\n8QReX6wB8AjIX1ajvYFqjwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEM/zxvKGEnmSiOtNqkKqASYI8QReX6wB\n8AigmrLpBkNn0QCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDxXmWbZiBgX2GolT1qI7qACPEEXl+sAfAIlVB3\nPmrabDQAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0e2d5c7258e12284244995d7f61548b3a1f4d6ee\nparent 81c38a24975f34e5894efe3d1aaf45ff6a8cee4a\nauthor Jon Atack <jon@atack.com> 1577641930 +0100\ncommitter Jon Atack <jon@atack.com> 1583328255 +0100\n\nconfig: separate the asmap finding and parsing checks\n\nand update the tests.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8d0412b213df18f23bf8677ab94068c6cca9f51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8d0412b213df18f23bf8677ab94068c6cca9f51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8d0412b213df18f23bf8677ab94068c6cca9f51/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81c38a24975f34e5894efe3d1aaf45ff6a8cee4a"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0f56f3881caa635350ac2ac4155a2c83ec54cab8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8d0412b213df18f23bf8677ab94068c6cca9f51/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8d0412b213df18f23bf8677ab94068c6cca9f51/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b8d0412b213df18f23bf8677ab94068c6cca9f51",
        "patch": "@@ -1834,9 +1834,13 @@ bool AppInitMain(NodeContext& node)\n         if (!asmap_path.is_absolute()) {\n             asmap_path = GetDataDir() / asmap_path;\n         }\n+        if (!fs::exists(asmap_path)) {\n+            InitError(strprintf(_(\"Could not find asmap file %s\").translated, asmap_path));\n+            return false;\n+        }\n         std::vector<bool> asmap = CAddrMan::DecodeAsmap(asmap_path);\n         if (asmap.size() == 0) {\n-            InitError(strprintf(_(\"Could not find or parse specified asmap: '%s'\").translated, asmap_path));\n+            InitError(strprintf(_(\"Could not parse asmap file '%s'\").translated, asmap_path));\n             return false;\n         }\n         const uint256 asmap_version = SerializeHash(asmap);"
      },
      {
        "sha": "6b9d90960aaaad6b329552f97a466d1a1c9ad3f3",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8d0412b213df18f23bf8677ab94068c6cca9f51/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8d0412b213df18f23bf8677ab94068c6cca9f51/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=b8d0412b213df18f23bf8677ab94068c6cca9f51",
        "patch": "@@ -75,7 +75,7 @@ def test_default_asmap(self):\n     def test_default_asmap_with_missing_file(self):\n         self.log.info('Test bitcoind -asmap with missing default map file')\n         self.stop_node(0)\n-        msg = \"Error: Could not find or parse specified asmap: '\\\"{}\\\"'\".format(self.default_asmap)\n+        msg = \"Error: Could not find asmap file '\\\"{}\\\"'\".format(self.default_asmap)\n         self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\n \n     def run_test(self):"
      }
    ]
  },
  {
    "sha": "dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2FmNTQzYmEwMjQxZjkyMTljZWE3MGI2N2M3YjA2NmQ0YzljYTli",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-29T18:51:04Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:24:17Z"
      },
      "message": "test: add functional test for an empty, unparsable asmap\n\nThis is now testable after separating the asmap finding and parsing checks in\nthe previous commit.",
      "tree": {
        "sha": "2f5b66aa59a8c8a6fd19e00b505007dc8e692c9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f5b66aa59a8c8a6fd19e00b505007dc8e692c9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5frAIACgkQT1chs9Dj\nkh1GMQ//RFMy/LfYsfxKg7yDhP9TOZRZNiQ5cqSjwD7UJuJdncSxL5El3Bap4bSl\n9dJzF7KESXqk6vAJwYvq7amzyqDOIgfGjkf9meuh74FXGfENkGBX6HumFXnteWnn\nzuGaJt6WIEyTgzvj6uF7/8unQzLZWpPkc/yeAZArxZ/kKtTr20W6qORBe1yZoWCz\nrBCTjSNTgBLg8g/WKIdttYCPX10Y5zg4tgT9Lop5dZG2KChf5BKJVsuOZ4bFC33q\nxrrbyUPq43LBUv2oVwIATxd4p9JVzu4a+M9APUAmYP6+tbqil5PFgiw/WGsYnL8b\nypr3v+GsyhQbhZTBkyoOsWoeeKAQZLbMnYdsgwtF/fo77BrqIqwCnX29GYv8rAQD\nOe8+edkaOUUMawX6bckBGOTauTyFILmZtYrn4hZOuy9/s8Fnpe8tF9f7IkzUFx2d\nkRmed9Xk1T1f+vCjixYRCU6g4zh7s0hscKczxjDupOLsacEDZUWa1+08vlmZ8Nx7\nclse4sHFFI/tYQg6RrwZFVsnqlgcxSyGHo3sxSqvV9zgP0vRUl6OP98bbhmpiGgp\n7jyK21c/jTpJGOFDfRfdb1Map+lsUj0ba+CE5DkMuTCdr76ugVZHGvEWQl3QRcGq\n8QdJ4AwTB1neOVY5X/ZvPBbdNyKtmltqyAIEcGBzbS71Z6kUsrs=\n=JcvF\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEmSpirsorBZFbyhgBXjgLDFFn3g8x95QsoUlxKBpm8ZCP/wEE/VhcD3l04p\nQh96xI65xkkI8QReX6wD8Ai6KpOtf2kbfwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQYgAfyfJ2yBX7zuGZ\n+pTIzgjwIFncSM9QcQvzobzL1YzeiY6ElxmTVYZVZIFDEHdR+TBHCPEEXl+sA/AI\n3eWA0dHKzvsAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BCQYJaEWPhTjvZ3kVmSjjz1CPEEXl+sA/AIhXZ7DApO\nn+4Ag9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2Fs\nbC5jb23wEKwhKLIktUvn5P8YVwbXiwEI8QReX6wD8AjYenUPOodosgCD3+MNLvkM\njiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2f5b66aa59a8c8a6fd19e00b505007dc8e692c9d\nparent b8d0412b213df18f23bf8677ab94068c6cca9f51\nauthor Jon Atack <jon@atack.com> 1577645464 +0100\ncommitter Jon Atack <jon@atack.com> 1583328257 +0100\n\ntest: add functional test for an empty, unparsable asmap\n\nThis is now testable after separating the asmap finding and parsing checks in\nthe previous commit.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8d0412b213df18f23bf8677ab94068c6cca9f51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8d0412b213df18f23bf8677ab94068c6cca9f51",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8d0412b213df18f23bf8677ab94068c6cca9f51"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8f5a77c92dd9f82c16647034383efa90a4c8aab4",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
        "patch": "@@ -16,8 +16,10 @@\n \n 5. `bitcoind -asmap` with no file specified and a missing default asmap file\n \n-The tests are order-independent. The slowest test (missing default asmap file)\n-is placed last.\n+6. `bitcoind -asmap` with an empty (unparsable) default asmap file\n+\n+The tests are order-independent. The slowest tests (missing default asmap and\n+empty asmap) are placed last.\n \n \"\"\"\n import os\n@@ -78,6 +80,15 @@ def test_default_asmap_with_missing_file(self):\n         msg = \"Error: Could not find asmap file '\\\"{}\\\"'\".format(self.default_asmap)\n         self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\n \n+    def test_empty_asmap(self):\n+        self.log.info('Test bitcoind -asmap with empty map file')\n+        self.stop_node(0)\n+        with open(self.default_asmap, \"w\", encoding=\"utf-8\") as f:\n+            f.write(\"\")\n+        msg = \"Error: Could not parse asmap file \\\"{}\\\"\".format(self.default_asmap)\n+        self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\n+        os.remove(self.default_asmap)\n+\n     def run_test(self):\n         self.node = self.nodes[0]\n         self.datadir = os.path.join(self.node.datadir, self.chain)\n@@ -89,6 +100,7 @@ def run_test(self):\n         self.test_asmap_with_relative_path()\n         self.test_default_asmap()\n         self.test_default_asmap_with_missing_file()\n+        self.test_empty_asmap()\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "819fb5549b0d02477f47b3c40338071f37b6d885",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTlmYjU1NDliMGQwMjQ3N2Y0N2IzYzQwMzM4MDcxZjM3YjZkODg1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-29T17:54:33Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:24:19Z"
      },
      "message": "logging: asmap logging and #include fixups\n\n- move asmap #includes to sorted positions in addrman and init (move-only)\n\n- remove redundant quotes in asmap InitError, update test\n\n- remove full stops from asmap logging to be consistent with debug logging,\n  update tests",
      "tree": {
        "sha": "2e3869a5ef7d224a551f91f84645efbf187e0c62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e3869a5ef7d224a551f91f84645efbf187e0c62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/819fb5549b0d02477f47b3c40338071f37b6d885",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5frAQACgkQT1chs9Dj\nkh3rnA/9EV59jq40ttlJuaMIU2Gh1YdUqwwwA+/SVVL6MOxjiZzKxAz+2266XhAg\n3qhi3ZZyavTBNqFhPSlq8TP9nqbSzjqsnVE4w1Ui/9WDNjmXt/yHOZXnjC5qAo1M\n5I1U4uegb7Q1xjuYB7GRxc5qwtALCAYw9pDfqZnxahcDymydFeX4TvKiapCm6uMY\nKyFqFaR8SvUD3dvf+oXCAslNg3nfisivH2Nn/76eIq0v/9alZYGdLTf9GTQGIcAs\nUIbGExhjjOYEyYRmI2M/jSc3dzWHIPurd2+LmbrqVKIqGxuiLfnsSqOdtyS7EwI8\nW+tsFd8YskGL7trAlNVz8ZyL4G/zC6f2ioOIU1lXSZ39F//hPv2QviiVDZ613H+M\nLDqN91L2iKBY8cQzvaL6HhI47GZdKpHKLUumpDxEflytkZyJhOXD+MrKcThuUPCn\nl0gyqEIGeUGkyf84dsoxk/9m7t032fqLMuXnG7K4u86BpCGqaYRfkKzBbyGi8Egu\nU9hVRMsd4arVdRs3eNRrkjDc/RHM5fVAoqOWhk3f6FGsSZQQ747FX/3EamXYyF6Z\nqgZnAunGvaDkfmu27IC+pYUHrNux25JlQ8TMea1Qkix+6XVoaiP2bgEupTrkZQCv\nGNXgI3H30ppQB6AcNlqpH1CEbSlY/ppAfWSD6dBfB+76fYgOoUU=\n=271/\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFZroNZqD9Iiaa6+5v9Njpw/dUw4/lXIsBvVxx6WBhpTCP/wEDTkFmA07O/x\nSEo57z27/e0I8QReX6wF8AhMDXvddBt6vgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEExvc6SrUkhu5LhwPqXGNOEI8QReX6wF\n8Ahc8GcjsQfE0wCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEIQoWXI927ea8xI2FWYNhUQI8QReX6wF8Ag3bCNPuKI0\nPwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQtXbaBZ0CVZtLXMYAhfOnhwjxBF5frAXwCHjUmMvBboRmAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2e3869a5ef7d224a551f91f84645efbf187e0c62\nparent dcaf543ba0241f9219cea70b67c7b066d4c9ca9b\nauthor Jon Atack <jon@atack.com> 1577642073 +0100\ncommitter Jon Atack <jon@atack.com> 1583328259 +0100\n\nlogging: asmap logging and #include fixups\n\n- move asmap #includes to sorted positions in addrman and init (move-only)\n\n- remove redundant quotes in asmap InitError, update test\n\n- remove full stops from asmap logging to be consistent with debug logging,\n  update tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/819fb5549b0d02477f47b3c40338071f37b6d885",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/819fb5549b0d02477f47b3c40338071f37b6d885",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/819fb5549b0d02477f47b3c40338071f37b6d885/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcaf543ba0241f9219cea70b67c7b066d4c9ca9b"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 17,
      "deletions": 18
    },
    "files": [
      {
        "sha": "2f8a3a0bd529b092fd5befa58d6f36098592b931",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/819fb5549b0d02477f47b3c40338071f37b6d885/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/819fb5549b0d02477f47b3c40338071f37b6d885/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=819fb5549b0d02477f47b3c40338071f37b6d885",
        "patch": "@@ -6,16 +6,16 @@\n #include <addrman.h>\n \n #include <hash.h>\n-#include <serialize.h>\n #include <logging.h>\n+#include <serialize.h>\n \n int CAddrInfo::GetTriedBucket(const uint256& nKey, const std::vector<bool> &asmap) const\n {\n     uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << GetKey()).GetCheapHash();\n     uint64_t hash2 = (CHashWriter(SER_GETHASH, 0) << nKey << GetGroup(asmap) << (hash1 % ADDRMAN_TRIED_BUCKETS_PER_GROUP)).GetCheapHash();\n     int tried_bucket = hash2 % ADDRMAN_TRIED_BUCKET_COUNT;\n     uint32_t mapped_as = GetMappedAS(asmap);\n-    LogPrint(BCLog::NET, \"IP %s mapped to AS%i belongs to tried bucket %i.\\n\", ToStringIP(), mapped_as, tried_bucket);\n+    LogPrint(BCLog::NET, \"IP %s mapped to AS%i belongs to tried bucket %i\\n\", ToStringIP(), mapped_as, tried_bucket);\n     return tried_bucket;\n }\n \n@@ -26,7 +26,7 @@ int CAddrInfo::GetNewBucket(const uint256& nKey, const CNetAddr& src, const std:\n     uint64_t hash2 = (CHashWriter(SER_GETHASH, 0) << nKey << vchSourceGroupKey << (hash1 % ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP)).GetCheapHash();\n     int new_bucket = hash2 % ADDRMAN_NEW_BUCKET_COUNT;\n     uint32_t mapped_as = GetMappedAS(asmap);\n-    LogPrint(BCLog::NET, \"IP %s mapped to AS%i belongs to new bucket %i.\\n\", ToStringIP(), mapped_as, new_bucket);\n+    LogPrint(BCLog::NET, \"IP %s mapped to AS%i belongs to new bucket %i\\n\", ToStringIP(), mapped_as, new_bucket);\n     return new_bucket;\n }\n \n@@ -630,12 +630,12 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     FILE *filestr = fsbridge::fopen(path, \"rb\");\n     CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n     if (file.IsNull()) {\n-        LogPrintf(\"Failed to open asmap file from disk.\\n\");\n+        LogPrintf(\"Failed to open asmap file from disk\\n\");\n         return bits;\n     }\n     fseek(filestr, 0, SEEK_END);\n     int length = ftell(filestr);\n-    LogPrintf(\"Opened asmap file %s (%d bytes) from disk.\\n\", path, length);\n+    LogPrintf(\"Opened asmap file %s (%d bytes) from disk\\n\", path, length);\n     fseek(filestr, 0, SEEK_SET);\n     char cur_byte;\n     for (int i = 0; i < length; ++i) {"
      },
      {
        "sha": "8e82020df01676999830ba145220441ab13aa1f4",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/819fb5549b0d02477f47b3c40338071f37b6d885/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/819fb5549b0d02477f47b3c40338071f37b6d885/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=819fb5549b0d02477f47b3c40338071f37b6d885",
        "patch": "@@ -6,23 +6,22 @@\n #ifndef BITCOIN_ADDRMAN_H\n #define BITCOIN_ADDRMAN_H\n \n+#include <clientversion.h>\n #include <netaddress.h>\n #include <protocol.h>\n #include <random.h>\n #include <sync.h>\n #include <timedata.h>\n #include <util/system.h>\n-#include <clientversion.h>\n \n+#include <fs.h>\n+#include <hash.h>\n+#include <iostream>\n #include <map>\n #include <set>\n #include <stdint.h>\n-#include <vector>\n-#include <iostream>\n #include <streams.h>\n-#include <fs.h>\n-#include <hash.h>\n-\n+#include <vector>\n \n /**\n  * Extended statistics about a CAddress"
      },
      {
        "sha": "d7a44d1d4c90017990bec304e0868497ce96d435",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/819fb5549b0d02477f47b3c40338071f37b6d885/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/819fb5549b0d02477f47b3c40338071f37b6d885/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=819fb5549b0d02477f47b3c40338071f37b6d885",
        "patch": "@@ -47,11 +47,11 @@\n #include <txdb.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n+#include <util/asmap.h>\n #include <util/moneystr.h>\n #include <util/system.h>\n #include <util/threadnames.h>\n #include <util/translation.h>\n-#include <util/asmap.h>\n #include <validation.h>\n #include <hash.h>\n \n@@ -1840,14 +1840,14 @@ bool AppInitMain(NodeContext& node)\n         }\n         std::vector<bool> asmap = CAddrMan::DecodeAsmap(asmap_path);\n         if (asmap.size() == 0) {\n-            InitError(strprintf(_(\"Could not parse asmap file '%s'\").translated, asmap_path));\n+            InitError(strprintf(_(\"Could not parse asmap file %s\").translated, asmap_path));\n             return false;\n         }\n         const uint256 asmap_version = SerializeHash(asmap);\n         node.connman->SetAsmap(std::move(asmap));\n-        LogPrintf(\"Using asmap version %s for IP bucketing.\\n\", asmap_version.ToString());\n+        LogPrintf(\"Using asmap version %s for IP bucketing\\n\", asmap_version.ToString());\n     } else {\n-        LogPrintf(\"Using /16 prefix for IP bucketing.\\n\");\n+        LogPrintf(\"Using /16 prefix for IP bucketing\\n\");\n     }\n \n     // ********************************************************* Step 13: finished"
      },
      {
        "sha": "dd12633f5023f3963021b80c5ba83f6f2a92ab25",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/819fb5549b0d02477f47b3c40338071f37b6d885/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/819fb5549b0d02477f47b3c40338071f37b6d885/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=819fb5549b0d02477f47b3c40338071f37b6d885",
        "patch": "@@ -32,8 +32,8 @@\n VERSION = 'fec61fa21a9f46f3b17bdcd660d7f4cd90b966aad3aec593c99b35f0aca15853'\n \n def expected_messages(filename):\n-    return ['Opened asmap file \"{}\" (59 bytes) from disk.'.format(filename),\n-            'Using asmap version {} for IP bucketing.'.format(VERSION)]\n+    return ['Opened asmap file \"{}\" (59 bytes) from disk'.format(filename),\n+            'Using asmap version {} for IP bucketing'.format(VERSION)]\n \n class AsmapTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -77,7 +77,7 @@ def test_default_asmap(self):\n     def test_default_asmap_with_missing_file(self):\n         self.log.info('Test bitcoind -asmap with missing default map file')\n         self.stop_node(0)\n-        msg = \"Error: Could not find asmap file '\\\"{}\\\"'\".format(self.default_asmap)\n+        msg = \"Error: Could not find asmap file \\\"{}\\\"\".format(self.default_asmap)\n         self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\n \n     def test_empty_asmap(self):"
      }
    ]
  },
  {
    "sha": "c90b9a2399f4cead37bad39f388ce1255e123dc4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTBiOWEyMzk5ZjRjZWFkMzdiYWQzOWYzODhjZTEyNTVlMTIzZGM0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-02-05T14:49:33Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:31:31Z"
      },
      "message": "net: extract conditional to bool CNetAddr::IsHeNet\n\nand remove redundant public declaration",
      "tree": {
        "sha": "e3ceb49cd811ee5aa0f251881bccfff8df0953bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3ceb49cd811ee5aa0f251881bccfff8df0953bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c90b9a2399f4cead37bad39f388ce1255e123dc4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5frboACgkQT1chs9Dj\nkh1UiRAAg0pINUP2y5CEDtIdHVA8kmTx+/pG1twTKsKOmzQQWiFhDLA/8QICjRb3\nQOacUNfXlc0Q2i5xSS1eNZKfqWlmbro0jTIfI9Qhx202K/LK9Q8GuX2Z6CuYNuW2\nLuqJd1knL4zxzlEO5SjNseUQ5q1YEKcWdPRQldVM0XPmP7NNek/KdXCwSB2z+Ipb\nRmqtVRnX9Z1TI1RH6M0qLHVqtl67M8zH2a+rJ0xfnfOIDKNlzCxBhw4squ+u29n/\nlxSBR5/uTZ4fa6JkK/0uib1ACoxaF4iYWsrD42xvhGtxb7lZkD/juzN/t9GPIsQF\nnFHijFhItl13LIhJHKEzLMDcOTAPexawQi1HLSkuaiD5yFmDPcMv9cTU6fMxgqsr\nTyIrSQc8YjKSsJi+iFUkl0lNaiQRVtD6sNEa3/GELipI2jPXgNJP+KehoOY2gAb3\nOEbx2gQ4D+/M/LyyS6b1RcM5wJqKEOpMN4dxKhqeuE+3AKjEN73Zmb2eVvR1Ozzl\nstf1t2Jz/c5xlK98yJeIgtoHp4ePmLth0CBsT07fot9YjLtnLWRxz8sAOZ776wH/\nE8d+Jv4rtcdLx0GBA2vhOnIpGXktTfGfSDp2j7r31qvyRUMe5uhJbpoFBB1Pk2se\nZC+cZNXdI2/8L7CRuh9j6cN3de10x0v66GvVXBYOOnqh1KXC/ok=\n=N9xY\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILQ0dWSaABlqzfTP2lVmwqV+sp9KJ0Yaxa9/e/kFs/eBCP/wEJLvJgoizSVq\nPy/T4BppfbAI8SB3lCSeJavmDuF2Ik6T3Lxyw1ddgIegtaE12rdJivgARgjxBF5f\nrbzwCOmSofEWluhgAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BCeDJW41uHxhkFgi8jnx7UnCPAgjQtyNq1e\ntcl0+FwVH58/tZtyleMC4UQONUnZak88OT4I8QReX6288AiamGAlY8imXwCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/w\nEKFKZg7vYx/qLxTInrHPJQUI8QReX6288AgswYw0wbqC6ACD3+MNLvkMjiMiaHR0\ncHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQujlCE99m1mLKH1Jx6uZh\nUwjxIMZQaoJ2VcjisfhcRTy5CIQXTYo3qrnVsw2Gcwjrla8fCPEEXl+tvPAIC3J7\nQYQpYv8Ag9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e3ceb49cd811ee5aa0f251881bccfff8df0953bc\nparent 819fb5549b0d02477f47b3c40338071f37b6d885\nauthor Jon Atack <jon@atack.com> 1580914173 +0100\ncommitter Jon Atack <jon@atack.com> 1583328691 +0100\n\nnet: extract conditional to bool CNetAddr::IsHeNet\n\nand remove redundant public declaration\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c90b9a2399f4cead37bad39f388ce1255e123dc4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c90b9a2399f4cead37bad39f388ce1255e123dc4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c90b9a2399f4cead37bad39f388ce1255e123dc4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "819fb5549b0d02477f47b3c40338071f37b6d885",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/819fb5549b0d02477f47b3c40338071f37b6d885",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/819fb5549b0d02477f47b3c40338071f37b6d885"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "228caf74a936c53ffaae05f20e9a7af6b10ac0cb",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c90b9a2399f4cead37bad39f388ce1255e123dc4/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c90b9a2399f4cead37bad39f388ce1255e123dc4/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=c90b9a2399f4cead37bad39f388ce1255e123dc4",
        "patch": "@@ -210,6 +210,11 @@ bool CNetAddr::IsRFC7343() const\n     return (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x00 && (GetByte(12) & 0xF0) == 0x20);\n }\n \n+bool CNetAddr::IsHeNet() const\n+{\n+    return (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70);\n+}\n+\n /**\n  * @returns Whether or not this is a dummy address that maps an onion address\n  *          into IPv6.\n@@ -516,7 +521,7 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     } else if (IsTor()) {\n         nStartByte = 6;\n         nBits = 4;\n-    } else if (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70) {\n+    } else if (IsHeNet()) {\n         // for he.net, use /36 groups\n         nBits = 36;\n     } else {"
      },
      {
        "sha": "b7381c1eb4007b58255282ab47eb7e5255292032",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c90b9a2399f4cead37bad39f388ce1255e123dc4/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c90b9a2399f4cead37bad39f388ce1255e123dc4/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=c90b9a2399f4cead37bad39f388ce1255e123dc4",
        "patch": "@@ -45,7 +45,6 @@ class CNetAddr\n          */\n         void SetRaw(Network network, const uint8_t *data);\n \n-    public:\n         bool SetInternal(const std::string& name);\n \n         bool SetSpecial(const std::string &strName); // for Tor addresses\n@@ -66,6 +65,7 @@ class CNetAddr\n         bool IsRFC4862() const; // IPv6 autoconfig (FE80::/64)\n         bool IsRFC6052() const; // IPv6 well-known prefix for IPv4-embedded address (64:FF9B::/96)\n         bool IsRFC6145() const; // IPv6 IPv4-translated address (::FFFF:0:0:0/96) (actually defined in RFC2765)\n+        bool IsHeNet() const;   // IPv6 Hurricane Electric - https://he.net (2001:0470::/36)\n         bool IsTor() const;\n         bool IsLocal() const;\n         bool IsRoutable() const;"
      }
    ]
  },
  {
    "sha": "5ba829e12e99f119df56cab422f827b9be03fe57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmE4MjllMTJlOTlmMTE5ZGY1NmNhYjQyMmY4MjdiOWJlMDNmZTU3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-01-29T15:39:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:54:27Z"
      },
      "message": "rpc: fix getpeerinfo RPCResult `mapped_as` type\n\nand mention it is only available if the asmap config flag is set.",
      "tree": {
        "sha": "19d6269d5d9d78e105db9fa046a22891368f00b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19d6269d5d9d78e105db9fa046a22891368f00b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ba829e12e99f119df56cab422f827b9be03fe57",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5fsxQACgkQT1chs9Dj\nkh23XA//Q9xLE1ReCnZVsG/jxqqoS1pKIIsxa13lDuDDwWfLzxb/27aXOEnW98/l\nZO6iYsAelYqUDhT/E2wymJJVgEzJRMnnC9SCNXTtB83/cPO8U8OOOv8PUDp4FibB\nJFwYK2VBc1z7lgd/ltOfg1Ye5xv1LP1jIHFf0kU7UoLT2JYQ9doG78bTArLxLDa2\nvVgBs6RTlJ2tyZGy8cxc45X/QyuPINx6UjDLarK1HpqZuck60gxrFbWZSMrfZx6G\nJ/cClmZkUhKcoEtI4sv2pLG4YoTqeHsnITEG0xnTvB/nalsn0pd4ocCwg2f7mpoU\nssppVvv8WwHcV9L0N50hiGboMgq9CxEWemoIFaTtWJPH771xdU9u8gYrO/5EUoeg\nKYGopIEIVzSfxlAB0E2t68uYZQ4vtpQDaDqb64npP85unu3NKJD2h6QI+TpMoT1U\n0AMfU5b0x1fGCBsfIFqGxQIBchtpagIhh9jtgURVPraJbraTHFBbTSKQqcwdPZWi\nJ/qC4sJ4/yaTDIWLfjf+hhOyFXN4PmOtB11jBLWjhPdfcNt2q8P9RZOHjcGEuiwA\nfY9nAbGkmj6UiGPH2cdES1fHe6fh9eWC4Vrustjc/yU5uKow6JtPTEs1bWtczKfQ\nHVrp+kNtwpReXhz1Z7bOKYY9Srwx3p89UWO93oJb69wLihDqIWA=\n=g9jZ\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHFeH5vlYONOL56ArVEBd0+QB5iC2Y9KyysZNBcBADF0CP/wEARv5eFGtxta\nKkocdYm0yFsI8CDW+ysH7W2sP6mlqoQx2IeqOKhAsgV2+Ih+fjLEpg2UaAjxBF5f\nsxXwCF/wL9xqodw3AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BBX5heZRT7Eelt5Mzx47eNWCPAgyfXl14+L\nOvrYDJhdclLUK3yOv762EblbuCxEyYNoYTQI8QReX7MV8AgPYoQAZb7HZQCD3+MN\nLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEIMNZbmsvPKf5OkC+DWASpMI8CCaLk5HL6A2txqC82qZxzIEWSIMRb6Q7DyF\nwrgP5rLKFQjxBF5fsxXwCAchDmJgKRDUAIPf4w0u+QyOIyJodHRwczovL2J0Yy5j\nYWxlbmRhci5jYXRhbGxheHkuY29t8BDb3RIpRg2l31+Y3NjNQWQKCPAgk7x/Ainh\nBFNBcb2iprn6kgqJGs2gMPrPabcFrWnEaJ8I8QReX7MV8AhekOtmg30H/gCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 19d6269d5d9d78e105db9fa046a22891368f00b1\nparent c90b9a2399f4cead37bad39f388ce1255e123dc4\nauthor Jon Atack <jon@atack.com> 1580312340 +0100\ncommitter Jon Atack <jon@atack.com> 1583330067 +0100\n\nrpc: fix getpeerinfo RPCResult `mapped_as` type\n\nand mention it is only available if the asmap config flag is set.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ba829e12e99f119df56cab422f827b9be03fe57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ba829e12e99f119df56cab422f827b9be03fe57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ba829e12e99f119df56cab422f827b9be03fe57/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c90b9a2399f4cead37bad39f388ce1255e123dc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c90b9a2399f4cead37bad39f388ce1255e123dc4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c90b9a2399f4cead37bad39f388ce1255e123dc4"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "085921095e26389b60af737d7f124de58bb216d8",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ba829e12e99f119df56cab422f827b9be03fe57/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ba829e12e99f119df56cab422f827b9be03fe57/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=5ba829e12e99f119df56cab422f827b9be03fe57",
        "patch": "@@ -86,7 +86,8 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n                             {RPCResult::Type::STR, \"addr\", \"(host:port) The IP address and port of the peer\"},\n                             {RPCResult::Type::STR, \"addrbind\", \"(ip:port) Bind address of the connection to the peer\"},\n                             {RPCResult::Type::STR, \"addrlocal\", \"(ip:port) Local address as reported by the peer\"},\n-                            {RPCResult::Type::STR, \"mapped_as\", \"The AS in the BGP route to the peer used for diversifying peer selection\"},\n+                            {RPCResult::Type::NUM, \"mapped_as\", \"The AS in the BGP route to the peer used for diversifying\\n\"\n+                                                                \"peer selection (only available if the asmap config flag is set)\"},\n                             {RPCResult::Type::STR_HEX, \"services\", \"The services offered\"},\n                             {RPCResult::Type::ARR, \"servicesnames\", \"the services offered, in human-readable form\",\n                             {"
      }
    ]
  },
  {
    "sha": "1ba3e1cc21150abe632a5b82a1a38998b33815dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmEzZTFjYzIxMTUwYWJlNjMyYTViODJhMWEzODk5OGIzMzgxNWRj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-01-29T15:38:25Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-04T13:54:30Z"
      },
      "message": "init: move asmap code earlier in init process\n\nand update feature_asmap.py and test_runner.py\n\nThis commit moves the asmap init.cpp code from the end of \"Step 12: start node\"\nto \"Step 6: network initialization\" to provide feedback on passing an -asmap\nconfig arg much more quickly. This change speeds up the feature_asmap.py\nfunctional test file from 60 to 5 seconds by accelerating the 2 tests that use\n`assert_start_raises_init_error`.\n\nCredit to Wladimir J. van der Laan for the suggestion.",
      "tree": {
        "sha": "aa5b9d7709548bc186a8d0a62dfaa38ea61d1c59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa5b9d7709548bc186a8d0a62dfaa38ea61d1c59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ba3e1cc21150abe632a5b82a1a38998b33815dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl5fsxYACgkQT1chs9Dj\nkh2ocRAAlz+rjG3pnAcHUculA3GI5XXXwpiiiQ9juJOhPePlV5T7sbu7fJnn6ACS\nxDMhEBMsAB8sqsKRYpkXlJ8H2bsEk++zGkVh1NJGoy3NhENXXkOF2AOgKV3o5I4q\nsB7QqW9MJy1ECOxocItH6/KP/nzuC01ZMMsNKjrGVBiUU4uETdhgZ9CO8uqmxqEx\nfmZY9e/FeUVmgT+KExB3AHsfqR92qTvoMbZQ6Emay5cWp9LHUCmibfOMtkTVS7wP\nCxWUz4Br4dqyHqGpsAAoU732npV4nVkSNhTbJVKopc8eFClKHtvvc57n3vUmACvo\nTxlguP9tr160vrQWXeZcHUpZie4HE3xDsKQkZzsUDcWiyoyHmEdlcOTeCWsEqqr9\nW9H8hK5NEjugGQST61lV1t8Q860qr6cdHImV1nfU2TH74j+LjE6Xf+ROYOcdmZru\n9sRHK6Bo95yKH7mq6JsAlPhaUcjyejcn8Lx9wONvvSog+I7ab/AmLR53647u3ysg\nzyZ4dtcMJkEJdQ+5L/MfHpg/V8oDewXfoGfmpi1uCbe48VVsi7jRyWyx5+bWCjNu\nhWaMmoqUS6NBt+9xVVvHDpUOGm7V9WWwLLo1fc87dVeNbhFuWSyIpYAdYkcJ50kS\n8YK3n6JXI2B+wDd2kjDP0F4rdILr+eHj5lSGWkRlOxvNBg2HjuY=\n=QUl2\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINbPsg221pHfv47ROJRkrevetl5wcqRNPLrFHsYD6CW/CP/wELD4SailaMMO\nNgs0b3bzg+UI8QReX7MX8Ai8Ttz9p5LaxgCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQ6gaXmdLyUk9uSPWI\nmZ3E6QjxBF5fsxfwCBmTY5ZJKXoIAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQ6j9jK/Y8Q/SV89DiE66XWgjxBF5f\nsxfwCFBBZnao/YfWAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDwdZM/xCZW3bPbHFJ7qTubCPEEXl+zF/AIoogu\nbYefvUEAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree aa5b9d7709548bc186a8d0a62dfaa38ea61d1c59\nparent 5ba829e12e99f119df56cab422f827b9be03fe57\nauthor Jon Atack <jon@atack.com> 1580312305 +0100\ncommitter Jon Atack <jon@atack.com> 1583330070 +0100\n\ninit: move asmap code earlier in init process\n\nand update feature_asmap.py and test_runner.py\n\nThis commit moves the asmap init.cpp code from the end of \"Step 12: start node\"\nto \"Step 6: network initialization\" to provide feedback on passing an -asmap\nconfig arg much more quickly. This change speeds up the feature_asmap.py\nfunctional test file from 60 to 5 seconds by accelerating the 2 tests that use\n`assert_start_raises_init_error`.\n\nCredit to Wladimir J. van der Laan for the suggestion.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ba3e1cc21150abe632a5b82a1a38998b33815dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ba3e1cc21150abe632a5b82a1a38998b33815dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ba3e1cc21150abe632a5b82a1a38998b33815dc/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ba829e12e99f119df56cab422f827b9be03fe57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ba829e12e99f119df56cab422f827b9be03fe57",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ba829e12e99f119df56cab422f827b9be03fe57"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 27,
      "deletions": 28
    },
    "files": [
      {
        "sha": "14d489617c94dd3544219ed26b67407776976dc5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3e1cc21150abe632a5b82a1a38998b33815dc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3e1cc21150abe632a5b82a1a38998b33815dc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1ba3e1cc21150abe632a5b82a1a38998b33815dc",
        "patch": "@@ -1418,6 +1418,31 @@ bool AppInitMain(NodeContext& node)\n             return InitError(ResolveErrMsg(\"externalip\", strAddr));\n     }\n \n+    // Read asmap file if configured\n+    if (gArgs.IsArgSet(\"-asmap\")) {\n+        fs::path asmap_path = fs::path(gArgs.GetArg(\"-asmap\", \"\"));\n+        if (asmap_path.empty()) {\n+            asmap_path = DEFAULT_ASMAP_FILENAME;\n+        }\n+        if (!asmap_path.is_absolute()) {\n+            asmap_path = GetDataDir() / asmap_path;\n+        }\n+        if (!fs::exists(asmap_path)) {\n+            InitError(strprintf(_(\"Could not find asmap file %s\").translated, asmap_path));\n+            return false;\n+        }\n+        std::vector<bool> asmap = CAddrMan::DecodeAsmap(asmap_path);\n+        if (asmap.size() == 0) {\n+            InitError(strprintf(_(\"Could not parse asmap file %s\").translated, asmap_path));\n+            return false;\n+        }\n+        const uint256 asmap_version = SerializeHash(asmap);\n+        node.connman->SetAsmap(std::move(asmap));\n+        LogPrintf(\"Using asmap version %s for IP bucketing\\n\", asmap_version.ToString());\n+    } else {\n+        LogPrintf(\"Using /16 prefix for IP bucketing\\n\");\n+    }\n+\n #if ENABLE_ZMQ\n     g_zmq_notification_interface = CZMQNotificationInterface::Create();\n \n@@ -1825,31 +1850,6 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n-    // Read asmap file if configured\n-    if (gArgs.IsArgSet(\"-asmap\")) {\n-        fs::path asmap_path = fs::path(gArgs.GetArg(\"-asmap\", \"\"));\n-        if (asmap_path.empty()) {\n-            asmap_path = DEFAULT_ASMAP_FILENAME;\n-        }\n-        if (!asmap_path.is_absolute()) {\n-            asmap_path = GetDataDir() / asmap_path;\n-        }\n-        if (!fs::exists(asmap_path)) {\n-            InitError(strprintf(_(\"Could not find asmap file %s\").translated, asmap_path));\n-            return false;\n-        }\n-        std::vector<bool> asmap = CAddrMan::DecodeAsmap(asmap_path);\n-        if (asmap.size() == 0) {\n-            InitError(strprintf(_(\"Could not parse asmap file %s\").translated, asmap_path));\n-            return false;\n-        }\n-        const uint256 asmap_version = SerializeHash(asmap);\n-        node.connman->SetAsmap(std::move(asmap));\n-        LogPrintf(\"Using asmap version %s for IP bucketing\\n\", asmap_version.ToString());\n-    } else {\n-        LogPrintf(\"Using /16 prefix for IP bucketing\\n\");\n-    }\n-\n     // ********************************************************* Step 13: finished\n \n     SetRPCWarmupFinished();"
      },
      {
        "sha": "2c6553fbe2540d523324c2b81bb9ae7ba397d2aa",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3e1cc21150abe632a5b82a1a38998b33815dc/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3e1cc21150abe632a5b82a1a38998b33815dc/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=1ba3e1cc21150abe632a5b82a1a38998b33815dc",
        "patch": "@@ -18,8 +18,7 @@\n \n 6. `bitcoind -asmap` with an empty (unparsable) default asmap file\n \n-The tests are order-independent. The slowest tests (missing default asmap and\n-empty asmap) are placed last.\n+The tests are order-independent.\n \n \"\"\"\n import os"
      },
      {
        "sha": "2036d208522ad891fbc1c78695ea7d78873b717f",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3e1cc21150abe632a5b82a1a38998b33815dc/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3e1cc21150abe632a5b82a1a38998b33815dc/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=1ba3e1cc21150abe632a5b82a1a38998b33815dc",
        "patch": "@@ -101,7 +101,6 @@\n     'rpc_txoutproof.py',\n     'wallet_listreceivedby.py',\n     'wallet_abandonconflict.py',\n-    'feature_asmap.py',\n     'feature_csv_activation.py',\n     'rpc_rawtransaction.py',\n     'wallet_address_types.py',\n@@ -207,6 +206,7 @@\n     'p2p_dos_header_tree.py',\n     'p2p_unrequested_blocks.py',\n     'feature_includeconf.py',\n+    'feature_asmap.py',\n     'rpc_deriveaddresses.py',\n     'rpc_deriveaddresses.py --usecli',\n     'rpc_scantxoutset.py',"
      }
    ]
  }
]