[
  {
    "sha": "265bd50884ac1984c08f0e5916256d5f12e655f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjViZDUwODg0YWMxOTg0YzA4ZjBlNTkxNjI1NmQ1ZjEyZTY1NWY1",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-08-12T22:37:15Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-08-12T23:24:55Z"
      },
      "message": "Removes unsed `CBloomFilter` constructor.\n\nThis commit removes the `CBloomFilter::CBloomFilter(const unsigned int, const double, const unsigned int)` constructor, which became obsolete with 086ee67.",
      "tree": {
        "sha": "c0605a4d89b82e0bd276013ae08eec90f7e59193",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0605a4d89b82e0bd276013ae08eec90f7e59193"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/265bd50884ac1984c08f0e5916256d5f12e655f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/265bd50884ac1984c08f0e5916256d5f12e655f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/265bd50884ac1984c08f0e5916256d5f12e655f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/265bd50884ac1984c08f0e5916256d5f12e655f5/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0df7a6c13ec484f9f31cfe3ed3039098a9bef124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0df7a6c13ec484f9f31cfe3ed3039098a9bef124",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0df7a6c13ec484f9f31cfe3ed3039098a9bef124"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 0,
      "deletions": 15
    },
    "files": [
      {
        "sha": "94aae742f15c71aaff65a960b66887aec1b9cf74",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/265bd50884ac1984c08f0e5916256d5f12e655f5/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/265bd50884ac1984c08f0e5916256d5f12e655f5/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=265bd50884ac1984c08f0e5916256d5f12e655f5",
        "patch": "@@ -38,17 +38,6 @@ CBloomFilter::CBloomFilter(const unsigned int nElements, const double nFPRate, c\n {\n }\n \n-// Private constructor used by CRollingBloomFilter\n-CBloomFilter::CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweakIn) :\n-    vData((unsigned int)(-1  / LN2SQUARED * nElements * log(nFPRate)) / 8),\n-    isFull(false),\n-    isEmpty(true),\n-    nHashFuncs((unsigned int)(vData.size() * 8 / nElements * LN2)),\n-    nTweak(nTweakIn),\n-    nFlags(BLOOM_UPDATE_NONE)\n-{\n-}\n-\n inline unsigned int CBloomFilter::Hash(unsigned int nHashNum, const std::vector<unsigned char>& vDataToHash) const\n {\n     // 0xFBA4C795 chosen as it guarantees a reasonable bit difference between nHashNum values."
      },
      {
        "sha": "7d3aa878b07f9a902f70fc4c7a8b58babd602e48",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/265bd50884ac1984c08f0e5916256d5f12e655f5/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/265bd50884ac1984c08f0e5916256d5f12e655f5/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=265bd50884ac1984c08f0e5916256d5f12e655f5",
        "patch": "@@ -53,10 +53,6 @@ class CBloomFilter\n \n     unsigned int Hash(unsigned int nHashNum, const std::vector<unsigned char>& vDataToHash) const;\n \n-    // Private constructor for CRollingBloomFilter, no restrictions on size\n-    CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweak);\n-    friend class CRollingBloomFilter;\n-\n public:\n     /**\n      * Creates a new bloom filter which will provide the given fp rate when filled with the given number of elements"
      }
    ]
  }
]