[
  {
    "sha": "20817ce92cc23951d2750076204c66218776f899",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDgxN2NlOTJjYzIzOTUxZDI3NTAwNzYyMDRjNjYyMTg3NzZmODk5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-20T21:11:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-20T21:11:45Z"
      },
      "message": "Bump version to 0.13.2",
      "tree": {
        "sha": "ac1c91a4a73348676d3fd40f6b798c25fb7b6b02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac1c91a4a73348676d3fd40f6b798c25fb7b6b02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20817ce92cc23951d2750076204c66218776f899",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20817ce92cc23951d2750076204c66218776f899",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20817ce92cc23951d2750076204c66218776f899",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20817ce92cc23951d2750076204c66218776f899/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e707e868d6020de0d352279eed4fcd0138f3695",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e707e868d6020de0d352279eed4fcd0138f3695",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e707e868d6020de0d352279eed4fcd0138f3695"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "d4e775aefbbf87ccf1dbd9f5529e299a7f5ff7e9",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20817ce92cc23951d2750076204c66218776f899/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20817ce92cc23951d2750076204c66218776f899/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=20817ce92cc23951d2750076204c66218776f899",
        "patch": "@@ -2,7 +2,7 @@ dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 13)\n-define(_CLIENT_VERSION_REVISION, 1)\n+define(_CLIENT_VERSION_REVISION, 2)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2016)"
      },
      {
        "sha": "c2af687eca1c819b96056f946f081dca6f9f51e7",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20817ce92cc23951d2750076204c66218776f899/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20817ce92cc23951d2750076204c66218776f899/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=20817ce92cc23951d2750076204c66218776f899",
        "patch": "@@ -34,7 +34,7 @@ PROJECT_NAME           = \"Bitcoin Core\"\n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n-PROJECT_NUMBER         = 0.13.1\n+PROJECT_NUMBER         = 0.13.2\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description \n # for a project that appears at the top of each page and should give viewer "
      },
      {
        "sha": "be2ab7283ab96ec9c4e944665d0ec871688e60cd",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20817ce92cc23951d2750076204c66218776f899/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20817ce92cc23951d2750076204c66218776f899/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=20817ce92cc23951d2750076204c66218776f899",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.13.1\n+Bitcoin Core 0.13.2\n =====================\n \n Setup"
      },
      {
        "sha": "0623049da0280df283ed242d5d14409ec275ef90",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20817ce92cc23951d2750076204c66218776f899/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20817ce92cc23951d2750076204c66218776f899/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=20817ce92cc23951d2750076204c66218776f899",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.13.1\r\n+Bitcoin Core 0.13.2\r\n =====================\r\n \r\n Intro\r"
      },
      {
        "sha": "eb0ee5973c831eee37e446459dca76083a069173",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20817ce92cc23951d2750076204c66218776f899/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20817ce92cc23951d2750076204c66218776f899/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=20817ce92cc23951d2750076204c66218776f899",
        "patch": "@@ -16,7 +16,7 @@\n //! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 13\n-#define CLIENT_VERSION_REVISION 1\n+#define CLIENT_VERSION_REVISION 2\n #define CLIENT_VERSION_BUILD 0\n \n //! Set to true for release, false for prerelease or test build"
      }
    ]
  },
  {
    "sha": "7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTI2YTM0MTEyNjYzYjFkNGE4ZGU0Y2U5NGU1ZTFiN2M5N2QwODY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-20T21:17:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-20T21:17:19Z"
      },
      "message": "Bump nMinimumChainWork",
      "tree": {
        "sha": "08f96cac11470f04169e45c4c8ee6bee77258dff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08f96cac11470f04169e45c4c8ee6bee77258dff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "20817ce92cc23951d2750076204c66218776f899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20817ce92cc23951d2750076204c66218776f899",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/20817ce92cc23951d2750076204c66218776f899"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7544e71a023fadc9f9aaaa3a8f8093d1f6ca36e4",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
        "patch": "@@ -98,7 +98,7 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1510704000; // November 15th, 2017.\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000002cb971dd56d1c583c20f90\");\n+        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000003418b3ccbe5e93bcb39b43\");\n \n         /**\n          * The message start string is designed to be unlikely to occur in normal data.\n@@ -198,7 +198,7 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1493596800; // May 1st 2017\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000000198b4def2baa9338d6\");\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000001b3fcc3e766e365e4b\");\n \n         pchMessageStart[0] = 0x0b;\n         pchMessageStart[1] = 0x11;"
      }
    ]
  },
  {
    "sha": "3882c053333ea3deeafdccd38a4bfd40114d776c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODgyYzA1MzMzM2VhM2RlZWFmZGNjZDM4YTRiZmQ0MDExNGQ3NzZj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-20T21:48:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-21T00:45:54Z"
      },
      "message": "[qt] Bump BLOCK_CHAIN_SIZE",
      "tree": {
        "sha": "ddc63d0e8cf915223e263049c714d8e8d7dbe8f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddc63d0e8cf915223e263049c714d8e8d7dbe8f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3882c053333ea3deeafdccd38a4bfd40114d776c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3882c053333ea3deeafdccd38a4bfd40114d776c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3882c053333ea3deeafdccd38a4bfd40114d776c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3882c053333ea3deeafdccd38a4bfd40114d776c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a26a34112663b1d4a8de4ce94e5e1b7c97d0869"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "83b2107d2a27b826866773c528008499f9f2b18a",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3882c053333ea3deeafdccd38a4bfd40114d776c/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3882c053333ea3deeafdccd38a4bfd40114d776c/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=3882c053333ea3deeafdccd38a4bfd40114d776c",
        "patch": "@@ -23,7 +23,7 @@\n \n static const uint64_t GB_BYTES = 1000000000LL;\n /* Minimum free space (in GB) needed for data directory */\n-static const uint64_t BLOCK_CHAIN_SIZE = 80;\n+static const uint64_t BLOCK_CHAIN_SIZE = 100;\n /* Minimum free space (in GB) needed for data directory when pruned; Does not include prune target */\n static const uint64_t CHAIN_STATE_SIZE = 2;\n /* Total required space (in GB) depending on user choice (prune, not prune) */"
      }
    ]
  },
  {
    "sha": "da233db8e09a472cedf21dbc60946a757f52d1af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTIzM2RiOGUwOWE0NzJjZWRmMjFkYmM2MDk0NmE3NTdmNTJkMWFm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-20T21:43:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-21T00:51:31Z"
      },
      "message": "Bump man pages",
      "tree": {
        "sha": "e3e5530fb26446f8d4e7936cf691dadece5cf28e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3e5530fb26446f8d4e7936cf691dadece5cf28e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da233db8e09a472cedf21dbc60946a757f52d1af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da233db8e09a472cedf21dbc60946a757f52d1af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da233db8e09a472cedf21dbc60946a757f52d1af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da233db8e09a472cedf21dbc60946a757f52d1af/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3882c053333ea3deeafdccd38a4bfd40114d776c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3882c053333ea3deeafdccd38a4bfd40114d776c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3882c053333ea3deeafdccd38a4bfd40114d776c"
      }
    ],
    "stats": {
      "total": 1200,
      "additions": 1154,
      "deletions": 46
    },
    "files": [
      {
        "sha": "dbd4745d1927fc36daf38b9cbc558bd888ab6689",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "modified",
        "additions": 79,
        "deletions": 16,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=da233db8e09a472cedf21dbc60946a757f52d1af",
        "patch": "@@ -1,21 +1,84 @@\n-.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIN-CLI \"1\" \"December 2016\" \"bitcoin-cli v0.13.2.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n-.SH SYNOPSIS\n-bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n-.TP\n-bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n+bitcoin-cli \\- manual page for bitcoin-cli v0.13.2.0\n .SH DESCRIPTION\n-This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n-\n-.SH OPTIONS\n+Bitcoin Core RPC client version v0.13.2.0\n+.SS \"Usage:\"\n+.TP\n+bitcoin\\-cli [options] <command> [params]\n+Send command to Bitcoin Core\n .TP\n-\\fB\\-?\\fR\n-Show possible options.\n+bitcoin\\-cli [options] help\n+List commands\n+.TP\n+bitcoin\\-cli [options] help <command>\n+Get help for a command\n+.SH OPTIONS\n+.HP\n+\\-?\n+.IP\n+This help message\n+.HP\n+\\fB\\-conf=\\fR<file>\n+.IP\n+Specify configuration file (default: bitcoin.conf)\n+.HP\n+\\fB\\-datadir=\\fR<dir>\n+.IP\n+Specify data directory\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.HP\n+\\fB\\-regtest\\fR\n+.IP\n+Enter regression test mode, which uses a special chain in which blocks\n+can be solved instantly. This is intended for regression testing\n+tools and app development.\n+.HP\n+\\fB\\-rpcconnect=\\fR<ip>\n+.IP\n+Send commands to node running on <ip> (default: 127.0.0.1)\n+.HP\n+\\fB\\-rpcport=\\fR<port>\n+.IP\n+Connect to JSON\\-RPC on <port> (default: 8332 or testnet: 18332)\n+.HP\n+\\fB\\-rpcwait\\fR\n+.IP\n+Wait for RPC server to start\n+.HP\n+\\fB\\-rpcuser=\\fR<user>\n+.IP\n+Username for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcpassword=\\fR<pw>\n+.IP\n+Password for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcclienttimeout=\\fR<n>\n+.IP\n+Timeout during HTTP requests (default: 900)\n+.HP\n+\\fB\\-stdin\\fR\n+.IP\n+Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n+(recommended for sensitive information such as passphrases)\n+.SH COPYRIGHT\n+Copyright (C) 2009-2016 The Bitcoin Core developers\n+\n+Please contribute if you find Bitcoin Core useful. Visit\n+<https://bitcoincore.org> for further information about the software.\n+The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n-.SH \"SEE ALSO\"\n-\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n-.SH AUTHOR\n-This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <http://www.opensource.org/licenses/mit-license.php>.\n \n-The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP.\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n+by Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "e14e1480afdebed70d58cb80bde8b718da07cf67",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 495,
        "deletions": 7,
        "changes": 502,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=da233db8e09a472cedf21dbc60946a757f52d1af",
        "patch": "@@ -1,13 +1,501 @@\n-.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIN-QT \"1\" \"December 2016\" \"bitcoin-qt v0.13.2.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- peer-to-peer network based digital currency\n+bitcoin-qt \\- manual page for bitcoin-qt v0.13.2.0\n .SH DESCRIPTION\n-.SS \"Usage:\"\n+Bitcoin Core version v0.13.2.0 (64\\-bit)\n+Usage:\n .IP\n bitcoin\\-qt [command\\-line options]\n .SH OPTIONS\n-.TP\n+.HP\n \\-?\n-List options.\n-.SH \"SEE ALSO\"\n-bitcoind(1)\n+.IP\n+Print this help message and exit\n+.HP\n+\\fB\\-version\\fR\n+.IP\n+Print version and exit\n+.HP\n+\\fB\\-alertnotify=\\fR<cmd>\n+.IP\n+Execute command when a relevant alert is received or we see a really\n+long fork (%s in cmd is replaced by message)\n+.HP\n+\\fB\\-blocknotify=\\fR<cmd>\n+.IP\n+Execute command when the best block changes (%s in cmd is replaced by\n+block hash)\n+.HP\n+\\fB\\-checkblocks=\\fR<n>\n+.IP\n+How many blocks to check at startup (default: 6, 0 = all)\n+.HP\n+\\fB\\-checklevel=\\fR<n>\n+.IP\n+How thorough the block verification of \\fB\\-checkblocks\\fR is (0\\-4, default: 3)\n+.HP\n+\\fB\\-conf=\\fR<file>\n+.IP\n+Specify configuration file (default: bitcoin.conf)\n+.HP\n+\\fB\\-datadir=\\fR<dir>\n+.IP\n+Specify data directory\n+.HP\n+\\fB\\-dbcache=\\fR<n>\n+.IP\n+Set database cache size in megabytes (4 to 16384, default: 300)\n+.HP\n+\\fB\\-loadblock=\\fR<file>\n+.IP\n+Imports blocks from external blk000??.dat file on startup\n+.HP\n+\\fB\\-maxorphantx=\\fR<n>\n+.IP\n+Keep at most <n> unconnectable transactions in memory (default: 100)\n+.HP\n+\\fB\\-maxmempool=\\fR<n>\n+.IP\n+Keep the transaction memory pool below <n> megabytes (default: 300)\n+.HP\n+\\fB\\-mempoolexpiry=\\fR<n>\n+.IP\n+Do not keep transactions in the mempool longer than <n> hours (default:\n+72)\n+.HP\n+\\fB\\-par=\\fR<n>\n+.IP\n+Set the number of script verification threads (\\fB\\-2\\fR to 16, 0 = auto, <0 =\n+leave that many cores free, default: 0)\n+.HP\n+\\fB\\-pid=\\fR<file>\n+.IP\n+Specify pid file (default: bitcoind.pid)\n+.HP\n+\\fB\\-prune=\\fR<n>\n+.IP\n+Reduce storage requirements by pruning (deleting) old blocks. This mode\n+is incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting\n+this setting requires re\\-downloading the entire blockchain.\n+(default: 0 = disable pruning blocks, >550 = target size in MiB\n+to use for block files)\n+.HP\n+\\fB\\-reindex\\-chainstate\\fR\n+.IP\n+Rebuild chain state from the currently indexed blocks\n+.HP\n+\\fB\\-reindex\\fR\n+.IP\n+Rebuild chain state and block index from the blk*.dat files on disk\n+.HP\n+\\fB\\-sysperms\\fR\n+.IP\n+Create new files with system default permissions, instead of umask 077\n+(only effective with disabled wallet functionality)\n+.HP\n+\\fB\\-txindex\\fR\n+.IP\n+Maintain a full transaction index, used by the getrawtransaction rpc\n+call (default: 0)\n+.PP\n+Connection options:\n+.HP\n+\\fB\\-addnode=\\fR<ip>\n+.IP\n+Add a node to connect to and attempt to keep the connection open\n+.HP\n+\\fB\\-banscore=\\fR<n>\n+.IP\n+Threshold for disconnecting misbehaving peers (default: 100)\n+.HP\n+\\fB\\-bantime=\\fR<n>\n+.IP\n+Number of seconds to keep misbehaving peers from reconnecting (default:\n+86400)\n+.HP\n+\\fB\\-bind=\\fR<addr>\n+.IP\n+Bind to given address and always listen on it. Use [host]:port notation\n+for IPv6\n+.HP\n+\\fB\\-connect=\\fR<ip>\n+.IP\n+Connect only to the specified node(s)\n+.HP\n+\\fB\\-discover\\fR\n+.IP\n+Discover own IP addresses (default: 1 when listening and no \\fB\\-externalip\\fR\n+or \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-dns\\fR\n+.IP\n+Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (default: 1)\n+.HP\n+\\fB\\-dnsseed\\fR\n+.IP\n+Query for peer addresses via DNS lookup, if low on addresses (default: 1\n+unless \\fB\\-connect\\fR)\n+.HP\n+\\fB\\-externalip=\\fR<ip>\n+.IP\n+Specify your own public address\n+.HP\n+\\fB\\-forcednsseed\\fR\n+.IP\n+Always query for peer addresses via DNS lookup (default: 0)\n+.HP\n+\\fB\\-listen\\fR\n+.IP\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n+.HP\n+\\fB\\-listenonion\\fR\n+.IP\n+Automatically create Tor hidden service (default: 1)\n+.HP\n+\\fB\\-maxconnections=\\fR<n>\n+.IP\n+Maintain at most <n> connections to peers (default: 125)\n+.HP\n+\\fB\\-maxreceivebuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n+.HP\n+\\fB\\-maxsendbuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n+.HP\n+\\fB\\-maxtimeadjustment\\fR\n+.IP\n+Maximum allowed median peer time offset adjustment. Local perspective of\n+time may be influenced by peers forward or backward by this\n+amount. (default: 4200 seconds)\n+.HP\n+\\fB\\-onion=\\fR<ip:port>\n+.IP\n+Use separate SOCKS5 proxy to reach peers via Tor hidden services\n+(default: \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-onlynet=\\fR<net>\n+.IP\n+Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n+.HP\n+\\fB\\-permitbaremultisig\\fR\n+.IP\n+Relay non\\-P2SH multisig (default: 1)\n+.HP\n+\\fB\\-peerbloomfilters\\fR\n+.IP\n+Support filtering of blocks and transaction with bloom filters (default:\n+1)\n+.HP\n+\\fB\\-port=\\fR<port>\n+.IP\n+Listen for connections on <port> (default: 8333 or testnet: 18333)\n+.HP\n+\\fB\\-proxy=\\fR<ip:port>\n+.IP\n+Connect through SOCKS5 proxy\n+.HP\n+\\fB\\-proxyrandomize\\fR\n+.IP\n+Randomize credentials for every proxy connection. This enables Tor\n+stream isolation (default: 1)\n+.HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n+\\fB\\-seednode=\\fR<ip>\n+.IP\n+Connect to a node to retrieve peer addresses, and disconnect\n+.HP\n+\\fB\\-timeout=\\fR<n>\n+.IP\n+Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n+.HP\n+\\fB\\-torcontrol=\\fR<ip>:<port>\n+.IP\n+Tor control port to use if onion listening enabled (default:\n+127.0.0.1:9051)\n+.HP\n+\\fB\\-torpassword=\\fR<pass>\n+.IP\n+Tor control port password (default: empty)\n+.HP\n+\\fB\\-whitebind=\\fR<addr>\n+.IP\n+Bind to given address and whitelist peers connecting to it. Use\n+[host]:port notation for IPv6\n+.HP\n+\\fB\\-whitelist=\\fR<IP address or network>\n+.IP\n+Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n+CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n+times. Whitelisted peers cannot be DoS banned and their\n+transactions are always relayed, even if they are already in the\n+mempool, useful e.g. for a gateway\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n+.HP\n+\\fB\\-maxuploadtarget=\\fR<n>\n+.IP\n+Tries to keep outbound traffic under the given target (in MiB per 24h),\n+0 = no limit (default: 0)\n+.PP\n+Wallet options:\n+.HP\n+\\fB\\-disablewallet\\fR\n+.IP\n+Do not load the wallet and disable wallet RPC calls\n+.HP\n+\\fB\\-keypool=\\fR<n>\n+.IP\n+Set key pool size to <n> (default: 100)\n+.HP\n+\\fB\\-fallbackfee=\\fR<amt>\n+.IP\n+A fee rate (in BTC/kB) that will be used when fee estimation has\n+insufficient data (default: 0.0002)\n+.HP\n+\\fB\\-mintxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for\n+transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-paytxfee=\\fR<amt>\n+.IP\n+Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n+.HP\n+\\fB\\-rescan\\fR\n+.IP\n+Rescan the block chain for missing wallet transactions on startup\n+.HP\n+\\fB\\-salvagewallet\\fR\n+.IP\n+Attempt to recover private keys from a corrupt wallet on startup\n+.HP\n+\\fB\\-spendzeroconfchange\\fR\n+.IP\n+Spend unconfirmed change when sending transactions (default: 1)\n+.HP\n+\\fB\\-txconfirmtarget=\\fR<n>\n+.IP\n+If paytxfee is not set, include enough fee so transactions begin\n+confirmation on average within n blocks (default: 2)\n+.HP\n+\\fB\\-usehd\\fR\n+.IP\n+Use hierarchical deterministic key generation (HD) after BIP32. Only has\n+effect during wallet creation/first start (default: 1)\n+.HP\n+\\fB\\-upgradewallet\\fR\n+.IP\n+Upgrade wallet to latest format on startup\n+.HP\n+\\fB\\-wallet=\\fR<file>\n+.IP\n+Specify wallet file (within data directory) (default: wallet.dat)\n+.HP\n+\\fB\\-walletbroadcast\\fR\n+.IP\n+Make the wallet broadcast transactions (default: 1)\n+.HP\n+\\fB\\-walletnotify=\\fR<cmd>\n+.IP\n+Execute command when a wallet transaction changes (%s in cmd is replaced\n+by TxID)\n+.HP\n+\\fB\\-zapwallettxes=\\fR<mode>\n+.IP\n+Delete all wallet transactions and only recover those parts of the\n+blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n+account owner and payment request information, 2 = drop tx meta\n+data)\n+.PP\n+Debugging/Testing options:\n+.HP\n+\\fB\\-uacomment=\\fR<cmt>\n+.IP\n+Append comment to the user agent string\n+.HP\n+\\fB\\-debug=\\fR<category>\n+.IP\n+Output debugging information (default: 0, supplying <category> is\n+optional). If <category> is not supplied or if <category> = 1,\n+output all debugging information.<category> can be: addrman,\n+alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n+mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n+selectcoins, tor, zmq, qt.\n+.HP\n+\\fB\\-help\\-debug\\fR\n+.IP\n+Show all debugging options (usage: \\fB\\-\\-help\\fR \\fB\\-help\\-debug\\fR)\n+.HP\n+\\fB\\-logips\\fR\n+.IP\n+Include IP addresses in debug output (default: 0)\n+.HP\n+\\fB\\-logtimestamps\\fR\n+.IP\n+Prepend debug output with timestamp (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-maxtxfee=\\fR<amt>\n+.IP\n+Maximum total fees (in BTC) to use in a single wallet transaction or raw\n+transaction; setting this too low may abort large transactions\n+(default: 0.10)\n+.HP\n+\\fB\\-printtoconsole\\fR\n+.IP\n+Send trace/debug info to console instead of debug.log file\n+.HP\n+\\fB\\-shrinkdebugfile\\fR\n+.IP\n+Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.PP\n+Node relay options:\n+.HP\n+\\fB\\-bytespersigop\\fR\n+.IP\n+Equivalent bytes per sigop in transactions for relay and mining\n+(default: 20)\n+.HP\n+\\fB\\-datacarrier\\fR\n+.IP\n+Relay and mine data carrier transactions (default: 1)\n+.HP\n+\\fB\\-datacarriersize\\fR\n+.IP\n+Maximum size of data in data carrier transactions we relay and mine\n+(default: 83)\n+.HP\n+\\fB\\-mempoolreplacement\\fR\n+.IP\n+Enable transaction replacement in the memory pool (default: 1)\n+.PP\n+Block creation options:\n+.HP\n+\\fB\\-blockmaxweight=\\fR<n>\n+.IP\n+Set maximum BIP141 block weight (default: 3000000)\n+.HP\n+\\fB\\-blockmaxsize=\\fR<n>\n+.IP\n+Set maximum block size in bytes (default: 750000)\n+.HP\n+\\fB\\-blockprioritysize=\\fR<n>\n+.IP\n+Set maximum size of high\\-priority/low\\-fee transactions in bytes\n+(default: 0)\n+.PP\n+RPC server options:\n+.HP\n+\\fB\\-server\\fR\n+.IP\n+Accept command line and JSON\\-RPC commands\n+.HP\n+\\fB\\-rest\\fR\n+.IP\n+Accept public REST requests (default: 0)\n+.HP\n+\\fB\\-rpcbind=\\fR<addr>\n+.IP\n+Bind to given address to listen for JSON\\-RPC connections. Use\n+[host]:port notation for IPv6. This option can be specified\n+multiple times (default: bind to all interfaces)\n+.HP\n+\\fB\\-rpccookiefile=\\fR<loc>\n+.IP\n+Location of the auth cookie (default: data dir)\n+.HP\n+\\fB\\-rpcuser=\\fR<user>\n+.IP\n+Username for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcpassword=\\fR<pw>\n+.IP\n+Password for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcauth=\\fR<userpw>\n+.IP\n+Username and hashed password for JSON\\-RPC connections. The field\n+<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n+canonical python script is included in share/rpcuser. This option\n+can be specified multiple times\n+.HP\n+\\fB\\-rpcport=\\fR<port>\n+.IP\n+Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet:\n+18332)\n+.HP\n+\\fB\\-rpcallowip=\\fR<ip>\n+.IP\n+Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n+single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n+1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n+option can be specified multiple times\n+.HP\n+\\fB\\-rpcthreads=\\fR<n>\n+.IP\n+Set the number of threads to service RPC calls (default: 4)\n+.PP\n+UI Options:\n+.HP\n+\\fB\\-choosedatadir\\fR\n+.IP\n+Choose data directory on startup (default: 0)\n+.HP\n+\\fB\\-lang=\\fR<lang>\n+.IP\n+Set language, for example \"de_DE\" (default: system locale)\n+.HP\n+\\fB\\-min\\fR\n+.IP\n+Start minimized\n+.HP\n+\\fB\\-rootcertificates=\\fR<file>\n+.IP\n+Set SSL root certificates for payment request (default: \\fB\\-system\\-\\fR)\n+.HP\n+\\fB\\-splash\\fR\n+.IP\n+Show splash screen on startup (default: 1)\n+.HP\n+\\fB\\-resetguisettings\\fR\n+.IP\n+Reset all settings changed in the GUI\n+.SH COPYRIGHT\n+Copyright (C) 2009-2016 The Bitcoin Core developers\n+\n+Please contribute if you find Bitcoin Core useful. Visit\n+<https://bitcoincore.org> for further information about the software.\n+The source code is available from <https://github.com/bitcoin/bitcoin>.\n+\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <http://www.opensource.org/licenses/mit-license.php>.\n+\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n+by Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "0cbb4ad58fccf0e364943114f529b48cbc436ed9",
        "filename": "contrib/debian/manpages/bitcoin-tx.1",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-tx.1?ref=da233db8e09a472cedf21dbc60946a757f52d1af",
        "patch": "@@ -0,0 +1,107 @@\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIN-TX \"1\" \"December 2016\" \"bitcoin-tx v0.13.2.0\" \"User Commands\"\n+.SH NAME\n+bitcoin-tx \\- manual page for bitcoin-tx v0.13.2.0\n+.SH DESCRIPTION\n+Bitcoin Core bitcoin\\-tx utility version v0.13.2.0\n+.SS \"Usage:\"\n+.TP\n+bitcoin\\-tx [options] <hex\\-tx> [commands]\n+Update hex\\-encoded bitcoin transaction\n+.TP\n+bitcoin\\-tx [options] \\fB\\-create\\fR [commands]\n+Create hex\\-encoded bitcoin transaction\n+.SH OPTIONS\n+.HP\n+\\-?\n+.IP\n+This help message\n+.HP\n+\\fB\\-create\\fR\n+.IP\n+Create new, empty TX.\n+.HP\n+\\fB\\-json\\fR\n+.IP\n+Select JSON output\n+.HP\n+\\fB\\-txid\\fR\n+.IP\n+Output only the hex\\-encoded transaction id of the resultant transaction.\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.HP\n+\\fB\\-regtest\\fR\n+.IP\n+Enter regression test mode, which uses a special chain in which blocks\n+can be solved instantly. This is intended for regression testing\n+tools and app development.\n+.PP\n+Commands:\n+.IP\n+delin=N\n+.IP\n+Delete input N from TX\n+.IP\n+delout=N\n+.IP\n+Delete output N from TX\n+.IP\n+in=TXID:VOUT(:SEQUENCE_NUMBER)\n+.IP\n+Add input to TX\n+.IP\n+locktime=N\n+.IP\n+Set TX lock time to N\n+.IP\n+nversion=N\n+.IP\n+Set TX version to N\n+.IP\n+outaddr=VALUE:ADDRESS\n+.IP\n+Add address\\-based output to TX\n+.IP\n+outdata=[VALUE:]DATA\n+.IP\n+Add data\\-based output to TX\n+.IP\n+outscript=VALUE:SCRIPT\n+.IP\n+Add raw script output to TX\n+.IP\n+sign=SIGHASH\\-FLAGS\n+.IP\n+Add zero or more signatures to transaction. This command requires JSON\n+registers:prevtxs=JSON object, privatekeys=JSON object. See\n+signrawtransaction docs for format of sighash flags, JSON\n+objects.\n+.PP\n+Register Commands:\n+.IP\n+load=NAME:FILENAME\n+.IP\n+Load JSON file FILENAME into register NAME\n+.IP\n+set=NAME:JSON\\-STRING\n+.IP\n+Set register NAME to given JSON\\-STRING\n+.SH COPYRIGHT\n+Copyright (C) 2009-2016 The Bitcoin Core developers\n+\n+Please contribute if you find Bitcoin Core useful. Visit\n+<https://bitcoincore.org> for further information about the software.\n+The source code is available from <https://github.com/bitcoin/bitcoin>.\n+\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <http://www.opensource.org/licenses/mit-license.php>.\n+\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n+by Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "3b83f52ccc4c91318b9cd344b2533db8a686557f",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 473,
        "deletions": 23,
        "changes": 496,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da233db8e09a472cedf21dbc60946a757f52d1af/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=da233db8e09a472cedf21dbc60946a757f52d1af",
        "patch": "@@ -1,30 +1,480 @@\n-.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIND \"1\" \"December 2016\" \"bitcoind v0.13.2.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- peer-to-peer network based digital currency\n-.SH SYNOPSIS\n-bitcoin [options] <command> [params]  \n-.TP\n-bitcoin [options] help <command> \\- Get help for a command\n+bitcoind \\- manual page for bitcoind v0.13.2.0\n .SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n-\n-.SH OPTIONS\n+Bitcoin Core Daemon version v0.13.2.0\n+.SS \"Usage:\"\n .TP\n+bitcoind [options]\n+Start Bitcoin Core Daemon\n+.SH OPTIONS\n+.HP\n \\-?\n-List of possible options.\n-.SH COMMANDS\n-.TP\n-\\fBhelp\\fR\n-List commands.\n-\n-.TP\n-\\fBhelp 'command'\\fR\n-Get help for a command.\n+.IP\n+Print this help message and exit\n+.HP\n+\\fB\\-version\\fR\n+.IP\n+Print version and exit\n+.HP\n+\\fB\\-alertnotify=\\fR<cmd>\n+.IP\n+Execute command when a relevant alert is received or we see a really\n+long fork (%s in cmd is replaced by message)\n+.HP\n+\\fB\\-blocknotify=\\fR<cmd>\n+.IP\n+Execute command when the best block changes (%s in cmd is replaced by\n+block hash)\n+.HP\n+\\fB\\-checkblocks=\\fR<n>\n+.IP\n+How many blocks to check at startup (default: 6, 0 = all)\n+.HP\n+\\fB\\-checklevel=\\fR<n>\n+.IP\n+How thorough the block verification of \\fB\\-checkblocks\\fR is (0\\-4, default: 3)\n+.HP\n+\\fB\\-conf=\\fR<file>\n+.IP\n+Specify configuration file (default: bitcoin.conf)\n+.HP\n+\\fB\\-daemon\\fR\n+.IP\n+Run in the background as a daemon and accept commands\n+.HP\n+\\fB\\-datadir=\\fR<dir>\n+.IP\n+Specify data directory\n+.HP\n+\\fB\\-dbcache=\\fR<n>\n+.IP\n+Set database cache size in megabytes (4 to 16384, default: 300)\n+.HP\n+\\fB\\-loadblock=\\fR<file>\n+.IP\n+Imports blocks from external blk000??.dat file on startup\n+.HP\n+\\fB\\-maxorphantx=\\fR<n>\n+.IP\n+Keep at most <n> unconnectable transactions in memory (default: 100)\n+.HP\n+\\fB\\-maxmempool=\\fR<n>\n+.IP\n+Keep the transaction memory pool below <n> megabytes (default: 300)\n+.HP\n+\\fB\\-mempoolexpiry=\\fR<n>\n+.IP\n+Do not keep transactions in the mempool longer than <n> hours (default:\n+72)\n+.HP\n+\\fB\\-par=\\fR<n>\n+.IP\n+Set the number of script verification threads (\\fB\\-2\\fR to 16, 0 = auto, <0 =\n+leave that many cores free, default: 0)\n+.HP\n+\\fB\\-pid=\\fR<file>\n+.IP\n+Specify pid file (default: bitcoind.pid)\n+.HP\n+\\fB\\-prune=\\fR<n>\n+.IP\n+Reduce storage requirements by pruning (deleting) old blocks. This mode\n+is incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting\n+this setting requires re\\-downloading the entire blockchain.\n+(default: 0 = disable pruning blocks, >550 = target size in MiB\n+to use for block files)\n+.HP\n+\\fB\\-reindex\\-chainstate\\fR\n+.IP\n+Rebuild chain state from the currently indexed blocks\n+.HP\n+\\fB\\-reindex\\fR\n+.IP\n+Rebuild chain state and block index from the blk*.dat files on disk\n+.HP\n+\\fB\\-sysperms\\fR\n+.IP\n+Create new files with system default permissions, instead of umask 077\n+(only effective with disabled wallet functionality)\n+.HP\n+\\fB\\-txindex\\fR\n+.IP\n+Maintain a full transaction index, used by the getrawtransaction rpc\n+call (default: 0)\n+.PP\n+Connection options:\n+.HP\n+\\fB\\-addnode=\\fR<ip>\n+.IP\n+Add a node to connect to and attempt to keep the connection open\n+.HP\n+\\fB\\-banscore=\\fR<n>\n+.IP\n+Threshold for disconnecting misbehaving peers (default: 100)\n+.HP\n+\\fB\\-bantime=\\fR<n>\n+.IP\n+Number of seconds to keep misbehaving peers from reconnecting (default:\n+86400)\n+.HP\n+\\fB\\-bind=\\fR<addr>\n+.IP\n+Bind to given address and always listen on it. Use [host]:port notation\n+for IPv6\n+.HP\n+\\fB\\-connect=\\fR<ip>\n+.IP\n+Connect only to the specified node(s)\n+.HP\n+\\fB\\-discover\\fR\n+.IP\n+Discover own IP addresses (default: 1 when listening and no \\fB\\-externalip\\fR\n+or \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-dns\\fR\n+.IP\n+Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (default: 1)\n+.HP\n+\\fB\\-dnsseed\\fR\n+.IP\n+Query for peer addresses via DNS lookup, if low on addresses (default: 1\n+unless \\fB\\-connect\\fR)\n+.HP\n+\\fB\\-externalip=\\fR<ip>\n+.IP\n+Specify your own public address\n+.HP\n+\\fB\\-forcednsseed\\fR\n+.IP\n+Always query for peer addresses via DNS lookup (default: 0)\n+.HP\n+\\fB\\-listen\\fR\n+.IP\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n+.HP\n+\\fB\\-listenonion\\fR\n+.IP\n+Automatically create Tor hidden service (default: 1)\n+.HP\n+\\fB\\-maxconnections=\\fR<n>\n+.IP\n+Maintain at most <n> connections to peers (default: 125)\n+.HP\n+\\fB\\-maxreceivebuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n+.HP\n+\\fB\\-maxsendbuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n+.HP\n+\\fB\\-maxtimeadjustment\\fR\n+.IP\n+Maximum allowed median peer time offset adjustment. Local perspective of\n+time may be influenced by peers forward or backward by this\n+amount. (default: 4200 seconds)\n+.HP\n+\\fB\\-onion=\\fR<ip:port>\n+.IP\n+Use separate SOCKS5 proxy to reach peers via Tor hidden services\n+(default: \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-onlynet=\\fR<net>\n+.IP\n+Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n+.HP\n+\\fB\\-permitbaremultisig\\fR\n+.IP\n+Relay non\\-P2SH multisig (default: 1)\n+.HP\n+\\fB\\-peerbloomfilters\\fR\n+.IP\n+Support filtering of blocks and transaction with bloom filters (default:\n+1)\n+.HP\n+\\fB\\-port=\\fR<port>\n+.IP\n+Listen for connections on <port> (default: 8333 or testnet: 18333)\n+.HP\n+\\fB\\-proxy=\\fR<ip:port>\n+.IP\n+Connect through SOCKS5 proxy\n+.HP\n+\\fB\\-proxyrandomize\\fR\n+.IP\n+Randomize credentials for every proxy connection. This enables Tor\n+stream isolation (default: 1)\n+.HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n+\\fB\\-seednode=\\fR<ip>\n+.IP\n+Connect to a node to retrieve peer addresses, and disconnect\n+.HP\n+\\fB\\-timeout=\\fR<n>\n+.IP\n+Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n+.HP\n+\\fB\\-torcontrol=\\fR<ip>:<port>\n+.IP\n+Tor control port to use if onion listening enabled (default:\n+127.0.0.1:9051)\n+.HP\n+\\fB\\-torpassword=\\fR<pass>\n+.IP\n+Tor control port password (default: empty)\n+.HP\n+\\fB\\-whitebind=\\fR<addr>\n+.IP\n+Bind to given address and whitelist peers connecting to it. Use\n+[host]:port notation for IPv6\n+.HP\n+\\fB\\-whitelist=\\fR<IP address or network>\n+.IP\n+Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n+CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n+times. Whitelisted peers cannot be DoS banned and their\n+transactions are always relayed, even if they are already in the\n+mempool, useful e.g. for a gateway\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n+.HP\n+\\fB\\-maxuploadtarget=\\fR<n>\n+.IP\n+Tries to keep outbound traffic under the given target (in MiB per 24h),\n+0 = no limit (default: 0)\n+.PP\n+Wallet options:\n+.HP\n+\\fB\\-disablewallet\\fR\n+.IP\n+Do not load the wallet and disable wallet RPC calls\n+.HP\n+\\fB\\-keypool=\\fR<n>\n+.IP\n+Set key pool size to <n> (default: 100)\n+.HP\n+\\fB\\-fallbackfee=\\fR<amt>\n+.IP\n+A fee rate (in BTC/kB) that will be used when fee estimation has\n+insufficient data (default: 0.0002)\n+.HP\n+\\fB\\-mintxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for\n+transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-paytxfee=\\fR<amt>\n+.IP\n+Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n+.HP\n+\\fB\\-rescan\\fR\n+.IP\n+Rescan the block chain for missing wallet transactions on startup\n+.HP\n+\\fB\\-salvagewallet\\fR\n+.IP\n+Attempt to recover private keys from a corrupt wallet on startup\n+.HP\n+\\fB\\-spendzeroconfchange\\fR\n+.IP\n+Spend unconfirmed change when sending transactions (default: 1)\n+.HP\n+\\fB\\-txconfirmtarget=\\fR<n>\n+.IP\n+If paytxfee is not set, include enough fee so transactions begin\n+confirmation on average within n blocks (default: 2)\n+.HP\n+\\fB\\-usehd\\fR\n+.IP\n+Use hierarchical deterministic key generation (HD) after BIP32. Only has\n+effect during wallet creation/first start (default: 1)\n+.HP\n+\\fB\\-upgradewallet\\fR\n+.IP\n+Upgrade wallet to latest format on startup\n+.HP\n+\\fB\\-wallet=\\fR<file>\n+.IP\n+Specify wallet file (within data directory) (default: wallet.dat)\n+.HP\n+\\fB\\-walletbroadcast\\fR\n+.IP\n+Make the wallet broadcast transactions (default: 1)\n+.HP\n+\\fB\\-walletnotify=\\fR<cmd>\n+.IP\n+Execute command when a wallet transaction changes (%s in cmd is replaced\n+by TxID)\n+.HP\n+\\fB\\-zapwallettxes=\\fR<mode>\n+.IP\n+Delete all wallet transactions and only recover those parts of the\n+blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n+account owner and payment request information, 2 = drop tx meta\n+data)\n+.PP\n+Debugging/Testing options:\n+.HP\n+\\fB\\-uacomment=\\fR<cmt>\n+.IP\n+Append comment to the user agent string\n+.HP\n+\\fB\\-debug=\\fR<category>\n+.IP\n+Output debugging information (default: 0, supplying <category> is\n+optional). If <category> is not supplied or if <category> = 1,\n+output all debugging information.<category> can be: addrman,\n+alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n+mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n+selectcoins, tor, zmq.\n+.HP\n+\\fB\\-help\\-debug\\fR\n+.IP\n+Show all debugging options (usage: \\fB\\-\\-help\\fR \\fB\\-help\\-debug\\fR)\n+.HP\n+\\fB\\-logips\\fR\n+.IP\n+Include IP addresses in debug output (default: 0)\n+.HP\n+\\fB\\-logtimestamps\\fR\n+.IP\n+Prepend debug output with timestamp (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-maxtxfee=\\fR<amt>\n+.IP\n+Maximum total fees (in BTC) to use in a single wallet transaction or raw\n+transaction; setting this too low may abort large transactions\n+(default: 0.10)\n+.HP\n+\\fB\\-printtoconsole\\fR\n+.IP\n+Send trace/debug info to console instead of debug.log file\n+.HP\n+\\fB\\-shrinkdebugfile\\fR\n+.IP\n+Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.PP\n+Node relay options:\n+.HP\n+\\fB\\-bytespersigop\\fR\n+.IP\n+Equivalent bytes per sigop in transactions for relay and mining\n+(default: 20)\n+.HP\n+\\fB\\-datacarrier\\fR\n+.IP\n+Relay and mine data carrier transactions (default: 1)\n+.HP\n+\\fB\\-datacarriersize\\fR\n+.IP\n+Maximum size of data in data carrier transactions we relay and mine\n+(default: 83)\n+.HP\n+\\fB\\-mempoolreplacement\\fR\n+.IP\n+Enable transaction replacement in the memory pool (default: 1)\n+.PP\n+Block creation options:\n+.HP\n+\\fB\\-blockmaxweight=\\fR<n>\n+.IP\n+Set maximum BIP141 block weight (default: 3000000)\n+.HP\n+\\fB\\-blockmaxsize=\\fR<n>\n+.IP\n+Set maximum block size in bytes (default: 750000)\n+.HP\n+\\fB\\-blockprioritysize=\\fR<n>\n+.IP\n+Set maximum size of high\\-priority/low\\-fee transactions in bytes\n+(default: 0)\n+.PP\n+RPC server options:\n+.HP\n+\\fB\\-server\\fR\n+.IP\n+Accept command line and JSON\\-RPC commands\n+.HP\n+\\fB\\-rest\\fR\n+.IP\n+Accept public REST requests (default: 0)\n+.HP\n+\\fB\\-rpcbind=\\fR<addr>\n+.IP\n+Bind to given address to listen for JSON\\-RPC connections. Use\n+[host]:port notation for IPv6. This option can be specified\n+multiple times (default: bind to all interfaces)\n+.HP\n+\\fB\\-rpccookiefile=\\fR<loc>\n+.IP\n+Location of the auth cookie (default: data dir)\n+.HP\n+\\fB\\-rpcuser=\\fR<user>\n+.IP\n+Username for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcpassword=\\fR<pw>\n+.IP\n+Password for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcauth=\\fR<userpw>\n+.IP\n+Username and hashed password for JSON\\-RPC connections. The field\n+<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n+canonical python script is included in share/rpcuser. This option\n+can be specified multiple times\n+.HP\n+\\fB\\-rpcport=\\fR<port>\n+.IP\n+Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet:\n+18332)\n+.HP\n+\\fB\\-rpcallowip=\\fR<ip>\n+.IP\n+Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n+single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n+1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n+option can be specified multiple times\n+.HP\n+\\fB\\-rpcthreads=\\fR<n>\n+.IP\n+Set the number of threads to service RPC calls (default: 4)\n+.SH COPYRIGHT\n+Copyright (C) 2009-2016 The Bitcoin Core developers\n \n-.SH \"SEE ALSO\"\n-bitcoin.conf(5)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+Please contribute if you find Bitcoin Core useful. Visit\n+<https://bitcoincore.org> for further information about the software.\n+The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <http://www.opensource.org/licenses/mit-license.php>.\n \n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n+by Eric Young and UPnP software written by Thomas Bernard."
      }
    ]
  }
]