theuni,2017-02-25T21:41:15Z,"I can agree with the idea that BlockAssembler shouldn't need to resort to the heaviness of TestBlockValidity, but we do need _some_ checks here.\n\nAs to your points\n- Grinding for a minute on a block that will be rejected is not worse than an extra quick call to gbt?\n- cs_main is already locked. This change does not reduce locking, only shaves down the time that it's held. Also, technically",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282514495,282514495,
jameshilliard,2017-02-25T22:48:25Z,"Getting an invalid template here should never happen unless there is a bug within bitcoind, this TestBlockValidity call is only an internal sanity check, my definition of validationless mining would be mining on top of a block that you haven't validated, this does not change that.\n\n@luke-jr \n\n- Not all pool software is capable of bypassing GBT, that requires implementing p2p networking in ",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282518294,282518294,
luke-jr,2017-02-26T01:49:55Z,`blocknotify` should be sufficient to begin empty-block mining. But perhaps it would make sense to have bitcoind's GBT itself handle the empty template?,https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282526241,282526241,
jameshilliard,2017-02-26T02:37:23Z,@luke-jr Well you would have to cache some things like nversion if you just use blocknotify right? CreateNewBlock itself seems to be quite fast without TestBlockValidity so I'm not sure sending empty blocks out first is worth the extra bandwidth/complexity.,https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282528064,282528064,
TheBlueMatt,2017-02-26T18:46:33Z,"I'm totally in favor of removing TBV from the critical-path, but only if we trigger some background checker that will print to debug.log (and probably assert) if it returned a template it later found to be invalid.",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282577268,282577268,
jameshilliard,2017-02-26T19:35:14Z,@TheBlueMatt I made an [attempt](https://github.com/bitcoin/bitcoin/pull/7167) to do that before but the way I was doing it there didn't look viable.,https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282580694,282580694,
sipa,2017-02-26T21:33:31Z,"I believe that @jameshilliard assumption that if CNB ever produces an invalid block, it is likely that it will keep doing so is right, and if so, the only benefit of running TBV is better reporting (so developers can fix the bug), not actually changing what is being mined. The better reporting may be useful, as miners may use GBT under circumstances that aren't covered by any tests during rcs, but",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282589465,282589465,
jameshilliard,2017-02-26T21:58:04Z,"@sipa I think just making it optional is probably best, doing block proposals within the stratum server would be good since it can be done completely outside of the critical path, although I'm not sure how easy it would be to add support for that in the various stratum servers themselves. I like cory's faux-mining for testing a little more at least for non-production testing since it can be done w",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282591313,282591313,
gmaxwell,2017-02-27T23:41:41Z,"I don't think making it optional is useful.  It will almost never be run where it needs to be run. And more options mean more mostly untested code that will catch fire later when someone does happen to use it.\n\n> Run a background thread that occasionally runs TBV on the CNB results. It doesn't have to test everything, and it can do so with a delay. Unfortunately, TBV's locking of cs_main may i",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282894178,282894178,
jameshilliard,2017-02-28T00:37:47Z,"@gmaxwell My thoughts are that this should probably be only used for testing and not in production under normal circumstances.\n\nIn regards to failover I would expect that a bug in CNB would likely be deterministic and cause failures on all other pool nodes as well that run similar mempool policy.",https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282904048,282904048,
MarcoFalke,2018-08-25T16:30:37Z,Closing for now. Let me know when you continue to work on this,https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-415980843,415980843,
jtimon,2017-03-07T17:40:37Z,"Do we need a default value here?\nDo we really save that much disruption by not passing false explicitly where it's needed?\n\nBikeshedding: s/TestBlock/fValidateBlock/ ?\n",https://github.com/bitcoin/bitcoin/pull/9858#discussion_r104730403,104730403,src/miner.h
