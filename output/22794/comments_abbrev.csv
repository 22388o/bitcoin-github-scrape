Shubhankar-Gambhir,2021-08-28 05:46:32,"concept ACK\nthere are 2 subtests and only one requires wallet, this PR enables the other one to run even with disabled wallet.\nalthough instead of splitting can add an if condition (using self.is_wallet_compiled()) in runtests.",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-907575249,907575249,
aitorjs,2021-08-29 00:31:02,"- Makes sense to split in two file. There are 2 subtests and only one requires wallet as @Shubhankar-Gambhir sayd.\n\n- `self.skip_if_no_wallet()` calls to [self.is_wallet_compiled()](https://github.com/bitcoin/bitcoin/blob/master/test/functional/test_framework/test_framework.py#L817). Inside bitcoin functional tests, `self.skip_if_no_wallet()` is mainly used (77 times) and self.is_wallet_compil",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-907708358,907708358,
Shubhankar-Gambhir,2021-09-03 12:36:13,"Just in case i was not clear earlier the below patch would achieve the same \n<details>\n<summary>patch</summary>\n\n```diff\ndiff --git a/test/functional/rpc_invalid_address_message.py b/test/functional/rpc_invalid_address_message.py\nindex e362642f0..6b92b2fe1 100755\n--- a/test/functional/rpc_invalid_address_message.py\n+++ b/test/functional/rpc_invalid_address_message.py\n@@ -29,9 +29",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-912504961,912504961,
lsilva01,2021-09-08 22:21:20,"The test has been changed to use `is_wallet_compiled` and `init_wallet`.\n\nAlso added test for `BECH32_INVALID_VERSION` case.",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-915613138,915613138,
Shubhankar-Gambhir,2021-09-20 19:36:37,"Approach ACK\ntest was succesful when run on bitcoin-core compiled without wallet (--disable-wallet):\n```\n2021-09-20T19:30:10.881000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_bha1iotz\n2021-09-20T19:30:26.999000Z TestFramework (INFO): Stopping nodes\n2021-09-20T19:30:33.380000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_bha1iotz on exit\n2021-0",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-923234757,923234757,
pg156,2021-09-21 17:16:27,Concept and approach ACK,https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-924192085,924192085,
pg156,2021-09-21 17:22:21,"Out of curiosity, how did you notice the non-wallet-rpc test is skipped when wallet is not enabled (before your PR)? Thanks @lsilva01.",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-924196722,924196722,
lsilva01,2021-09-21 22:33:16,"@p16n The code below always skips the test if the wallet is not enabled.\n\n```python\ndef skip_test_if_missing_module(self):\n        self.skip_if_no_wallet()\n```\n\nYou can verify this in the `test/functional/test_framework.py/BitcoinTestFramework/skip_if_no_wallet` file.\n\n```python\ndef skip_if_no_wallet(self):\n        """"""Skip the running test if wallet has not been compiled.""""""",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-924438099,924438099,
DrahtBot,2021-10-01 22:30:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16807](https://github.com/bitcoin/bitcoin/pull/16807) (Let validateaddress locate error in Bech32 address by meshcollide",https://github.com/bitcoin/bitcoin/pull/22794#issuecomment-932613718,932613718,
Shubhankar-Gambhir,2021-08-28 05:41:04,"Test can have more invalid address types, check for different error messages in https://github.com/bitcoin/bitcoin/blob/master/src/key_io.cpp#:~:text=CTxDestination%20DecodeDestination(const,%7D%20//%20namespace",https://github.com/bitcoin/bitcoin/pull/22794#discussion_r697813025,697813025,test/functional/rpc_invalid_address_message.py
MarcoFalke,2021-08-31 13:04:55,"Instead of removing this, I think a test should added instead?",https://github.com/bitcoin/bitcoin/pull/22794#discussion_r699302507,699302507,test/functional/rpc_invalid_address_message.py
lsilva01,2021-09-08 22:17:16,Sure. Test added.,https://github.com/bitcoin/bitcoin/pull/22794#discussion_r704813286,704813286,test/functional/rpc_invalid_address_message.py
lsilva01,2021-09-08 22:18:15,Thanks. Test added.,https://github.com/bitcoin/bitcoin/pull/22794#discussion_r704813783,704813783,test/functional/rpc_invalid_address_message.py
MarcoFalke,2021-09-21 07:26:51,"nit: I don't think the comment is needed, when the code is self-explanatory",https://github.com/bitcoin/bitcoin/pull/22794#discussion_r712771319,712771319,test/functional/rpc_invalid_address_message.py
jonatack,2021-09-21 17:58:28,"unrelated to this change, but it might be nice for `init_wallet()` to be defined as\n\n```diff\n-    def init_wallet(self, i):\n+    def init_wallet(self, *, node):\n```\nso the calls become `self.init_wallet(node=0)`\n\nuse of splat optional, to be decided.\n\nFor now there is only a handful of calls to update.",https://github.com/bitcoin/bitcoin/pull/22794#discussion_r713287448,713287448,test/functional/rpc_invalid_address_message.py
lsilva01,2021-09-21 22:28:07,"Really, the comment is not necessary. Removed.",https://github.com/bitcoin/bitcoin/pull/22794#discussion_r713462768,713462768,test/functional/rpc_invalid_address_message.py
lsilva01,2021-09-21 22:34:29,Interesting. I will open a new PR for this change.,https://github.com/bitcoin/bitcoin/pull/22794#discussion_r713465660,713465660,test/functional/rpc_invalid_address_message.py
lsilva01,2021-10-20 03:42:00,Implemented this change in #23316 .,https://github.com/bitcoin/bitcoin/pull/22794#discussion_r732392943,732392943,test/functional/rpc_invalid_address_message.py
