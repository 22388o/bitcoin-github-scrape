[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463235404",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#issuecomment-463235404",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15397",
    "id": 463235404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzIzNTQwNA==",
    "user": {
      "login": "stevenroose",
      "id": 853468,
      "node_id": "MDQ6VXNlcjg1MzQ2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/853468?u=f801880316b53c06b8825aa9b422322f832428c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevenroose",
      "html_url": "https://github.com/stevenroose",
      "followers_url": "https://api.github.com/users/stevenroose/followers",
      "following_url": "https://api.github.com/users/stevenroose/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenroose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
      "organizations_url": "https://api.github.com/users/stevenroose/orgs",
      "repos_url": "https://api.github.com/users/stevenroose/repos",
      "events_url": "https://api.github.com/users/stevenroose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevenroose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T15:12:05Z",
    "updated_at": "2019-02-13T15:12:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Related: https://github.com/bitcoin/bitcoin/pull/15282/files",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463235404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463453673",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#issuecomment-463453673",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15397",
    "id": 463453673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQ1MzY3Mw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T01:55:54Z",
    "updated_at": "2019-02-14T01:55:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh yes. Thanks for doing this.\r\nutACK 6aaa0abc1241ad26f5895760701e77c9c8e93924 once 0.18 is branched off.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463453673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458391",
    "pull_request_review_id": 203288792,
    "id": 256458391,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ1ODM5MQ==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 37,
    "original_position": 37,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Assigned 0.19.0, because this is python3.5 only",
    "created_at": "2019-02-13T15:51:44Z",
    "updated_at": "2019-02-13T15:52:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458391",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458391"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458391"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458622",
    "pull_request_review_id": 203288792,
    "id": 256458622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ1ODYyMg==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 32,
    "original_position": 32,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nice swap",
    "created_at": "2019-02-13T15:52:13Z",
    "updated_at": "2019-02-13T15:52:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256462264",
    "pull_request_review_id": 203293720,
    "id": 256462264,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ2MjI2NA==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 37,
    "original_position": 37,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "SGTM, I like the syntax way more. So should I ping once 0.18 is branched?",
    "created_at": "2019-02-13T15:59:18Z",
    "updated_at": "2019-02-13T15:59:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256462264",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256462264"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256462264"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256462264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT",
    "in_reply_to_id": 256458391
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256467480",
    "pull_request_review_id": 203300135,
    "id": 256467480,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ2NzQ4MA==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 37,
    "original_position": 37,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remind me #14954",
    "created_at": "2019-02-13T16:09:36Z",
    "updated_at": "2019-02-13T16:09:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256467480",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256467480"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256467480"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256467480/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT",
    "in_reply_to_id": 256458391
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512965",
    "pull_request_review_id": 203355921,
    "id": 256512965,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjUxMjk2NQ==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 32,
    "original_position": 32,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Parantheses redundant :-)",
    "created_at": "2019-02-13T17:49:31Z",
    "updated_at": "2019-02-13T17:49:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512965",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512965"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512965"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512983",
    "pull_request_review_id": 203355949,
    "id": 256512983,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjUxMjk4Mw==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 31,
    "original_position": 31,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Parantheses redundant :-)",
    "created_at": "2019-02-13T17:49:34Z",
    "updated_at": "2019-02-13T17:49:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512983",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512983"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512983"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257713875",
    "pull_request_review_id": 204810972,
    "id": 257713875,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzcxMzg3NQ==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 37,
    "original_position": 37,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Already broken in `master`, so just going to merge this as well :woman_shrugging: \r\n\r\n```sh\r\n$ git grep -l '\\.hex()' test/\r\ntest/functional/mining_basic.py\r\ntest/functional/test_framework/wallet_util.py\r\ntest/functional/wallet_txn_clone.py\r\n",
    "created_at": "2019-02-18T14:20:43Z",
    "updated_at": "2019-02-18T14:20:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257713875",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257713875"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257713875"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257713875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT",
    "in_reply_to_id": 256458391
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257714879",
    "pull_request_review_id": 204812258,
    "id": 257714879,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzcxNDg3OQ==",
    "diff_hunk": "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
    "path": "test/functional/wallet_txn_clone.py",
    "position": 37,
    "original_position": 37,
    "commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "original_commit_id": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah at least partially my bad :1st_place_medal: ",
    "created_at": "2019-02-18T14:23:28Z",
    "updated_at": "2019-02-18T14:23:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257714879",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257714879"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257714879"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257714879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT",
    "in_reply_to_id": 256458391
  }
]