[
  {
    "sha": "6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWFhMGFiYzEyNDFhZDI2ZjU4OTU3NjA3MDFlNzdjOWM4ZTkzOTI0",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-02-13T14:49:36Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-02-13T14:49:36Z"
      },
      "message": "Remove manual byte editing in wallet_tx_clone func test",
      "tree": {
        "sha": "58bbc3b05ad14d58aec97d782a23e8808c4e60df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58bbc3b05ad14d58aec97d782a23e8808c4e60df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6aaa0abc1241ad26f5895760701e77c9c8e93924",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6aaa0abc1241ad26f5895760701e77c9c8e93924/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d1160e42185983b398cbc2e2be379002f4a62e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d1160e42185983b398cbc2e2be379002f4a62e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d1160e42185983b398cbc2e2be379002f4a62e9"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 7,
      "deletions": 10
    },
    "files": [
      {
        "sha": "2f927502ff7859dcd1514961c64b9d7e5c12ac06",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6aaa0abc1241ad26f5895760701e77c9c8e93924/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6aaa0abc1241ad26f5895760701e77c9c8e93924/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=6aaa0abc1241ad26f5895760701e77c9c8e93924",
        "patch": "@@ -4,13 +4,15 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet accounts properly when there are cloned transactions with malleated scriptsigs.\"\"\"\n \n+import io\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n     connect_nodes,\n     disconnect_nodes,\n     sync_blocks,\n )\n+from test_framework.messages import CTransaction, COIN\n \n class TxnMallTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")\n         assert_equal(tx1_clone[\"complete\"], True)\n \n         # Have node0 mine a block, if requested:"
      }
    ]
  }
]