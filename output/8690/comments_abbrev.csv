sipa,2016-09-09T12:22:31Z,"I had an alternative version that used a heap (which needs less iterator arithmetic), but realized that just explicitly keeping track of the top two is faster (and doesn't need any allocations).\n",https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-245897801,245897801,
rebroad,2016-09-15T14:49:27Z,@sipa is it worth benchmarking this (since you mentioned benchmarking)?\n,https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-247350527,247350527,
sipa,2016-09-19T13:36:34Z,"@rebroad Perhaps, but that will need abstracting this code out so it can be tested in separation from the rest of the p2p message handing.\n",https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-247994779,247994779,
sipa,2016-10-02T23:58:07Z,Rebased and addressed @gmaxwell's nit.\n,https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-251005059,251005059,
gmaxwell,2016-11-01T05:28:01Z,utACK.\n,https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-257491789,257491789,
sipa,2016-11-03T07:22:43Z,Rebased after #8914.\n,https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-258077300,258077300,
laanwj,2016-11-23T07:19:41Z,"> I had an alternative version that used a heap (which needs less iterator arithmetic), but realized that just explicitly keeping track of the top two is faster (and doesn't need any allocations).\n\nYes if you just need the top two, a heap is overkill.\n\nEven if this doesn't speed up the critical path this conceptually makes a lot of sense.\n\nutACK a33b169\n",https://github.com/bitcoin/bitcoin/pull/8690#issuecomment-262447570,262447570,
gmaxwell,2016-09-22T18:47:56Z,"There should be an assert here that nRelayNodes is <=2, no?\n",https://github.com/bitcoin/bitcoin/pull/8690#discussion_r80110031,80110031,src/main.cpp
