[
  {
    "sha": "a33b1691f11316f839ddfdf51e1950acf0bc08aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzNiMTY5MWYxMTMxNmY4MzlkZGZkZjUxZTE5NTBhY2YwYmMwOGFh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-09-09T11:56:03Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-11-03T07:20:04Z"
      },
      "message": "Do not fully sort all nodes for addr relay\n\nAs we only need 1 or 2, explicitly keep track of the best ones.",
      "tree": {
        "sha": "0fdc559b2fccfb42f14adf669d5ef4b22c7fb731",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fdc559b2fccfb42f14adf669d5ef4b22c7fb731"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a33b1691f11316f839ddfdf51e1950acf0bc08aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a33b1691f11316f839ddfdf51e1950acf0bc08aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a33b1691f11316f839ddfdf51e1950acf0bc08aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a33b1691f11316f839ddfdf51e1950acf0bc08aa/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "508404de98a8a5435f52916cef8f328e82651961",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/508404de98a8a5435f52916cef8f328e82651961",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/508404de98a8a5435f52916cef8f328e82651961"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f5e94d8ec7faeb8d64463293d80f46841967d65c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 7,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a33b1691f11316f839ddfdf51e1950acf0bc08aa/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a33b1691f11316f839ddfdf51e1950acf0bc08aa/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a33b1691f11316f839ddfdf51e1950acf0bc08aa",
        "patch": "@@ -4804,26 +4804,35 @@ static void RelayTransaction(const CTransaction& tx, CConnman& connman)\n \n static void RelayAddress(const CAddress& addr, bool fReachable, CConnman& connman)\n {\n-    int nRelayNodes = fReachable ? 2 : 1; // limited relaying of addresses outside our network(s)\n+    unsigned int nRelayNodes = fReachable ? 2 : 1; // limited relaying of addresses outside our network(s)\n \n     // Relay to a limited number of other nodes\n     // Use deterministic randomness to send to the same nodes for 24 hours\n     // at a time so the addrKnowns of the chosen nodes prevent repeats\n     uint64_t hashAddr = addr.GetHash();\n-    std::multimap<uint64_t, CNode*> mapMix;\n     const CSipHasher hasher = connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24*60*60));\n     FastRandomContext insecure_rand;\n \n-    auto sortfunc = [&mapMix, &hasher](CNode* pnode) {\n+    std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n+    assert(nRelayNodes <= best.size());\n+\n+    auto sortfunc = [&best, &hasher, nRelayNodes](CNode* pnode) {\n         if (pnode->nVersion >= CADDR_TIME_VERSION) {\n             uint64_t hashKey = CSipHasher(hasher).Write(pnode->id).Finalize();\n-            mapMix.emplace(hashKey, pnode);\n+            for (unsigned int i = 0; i < nRelayNodes; i++) {\n+                 if (hashKey > best[i].first) {\n+                     std::copy(best.begin() + i, best.begin() + nRelayNodes - 1, best.begin() + i + 1);\n+                     best[i] = std::make_pair(hashKey, pnode);\n+                     break;\n+                 }\n+            }\n         }\n     };\n \n-    auto pushfunc = [&addr, &mapMix, &nRelayNodes, &insecure_rand] {\n-        for (auto mi = mapMix.begin(); mi != mapMix.end() && nRelayNodes-- > 0; ++mi)\n-            mi->second->PushAddress(addr, insecure_rand);\n+    auto pushfunc = [&addr, &best, nRelayNodes, &insecure_rand] {\n+        for (unsigned int i = 0; i < nRelayNodes && best[i].first != 0; i++) {\n+            best[i].second->PushAddress(addr, insecure_rand);\n+        }\n     };\n \n     connman.ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));"
      }
    ]
  }
]