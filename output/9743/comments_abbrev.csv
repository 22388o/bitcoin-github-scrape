sipa,2017-02-11T23:18:21Z,It's not (see PR description). I think tsan is confused because it's accessed from another object.,https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-279183090,279183090,
sipa,2017-02-12T18:37:51Z,@jonasschnelli Where would it be set to something else?,https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-279238288,279238288,
sipa,2017-02-20T20:16:04Z,I'll try to find something less insane that also doesn't trip it.,https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-281172291,281172291,
sipa,2017-03-05T03:39:05Z,"I'm unable to reproduce that tsan warning, so I just removed the commit.",https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-284202877,284202877,
laanwj,2017-03-05T12:43:45Z,"> I'm unable to reproduce that tsan warning, so I just removed the commit.\n\nI think you forgot to push, it's still there: https://github.com/bitcoin/bitcoin/pull/9743/commits/a10eff9440c0beb6393effdacf34f59e9ca68fda",https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-284225415,284225415,
sipa,2017-03-29T18:42:31Z,"Rebased, and removed the LevelDB and the patches for spurious warning. The LevelDB patch should go through the leveldb repo instead.",https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-290186275,290186275,
jtimon,2017-04-24T19:45:46Z,utACK 1d31093d4d8501a5dc031413a963707f6cae0e0a,https://github.com/bitcoin/bitcoin/pull/9743#issuecomment-296801835,296801835,
theuni,2017-02-11T23:15:20Z,I don't understand this one. How could the ctor be racy?,https://github.com/bitcoin/bitcoin/pull/9743#discussion_r100679113,100679113,src/httpserver.cpp
jonasschnelli,2017-02-12T14:06:06Z,Hmm... how can `ecc` be a `nullptr` at this point?,https://github.com/bitcoin/bitcoin/pull/9743#discussion_r100693012,100693012,src/bitcoin-tx.cpp
jonasschnelli,2017-02-12T20:13:47Z,"Sorry,.. missed the fact that `std::unique_ptr<Secp256k1Init> ecc;` initialises `ecc` with `nullptr`",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r100702938,100702938,src/bitcoin-tx.cpp
laanwj,2017-02-20T16:48:27Z,This is really confusing. I don't think we should be making this nonsensical change just to make a sanitizer tool happy.,https://github.com/bitcoin/bitcoin/pull/9743#discussion_r102057425,102057425,src/httpserver.cpp
TheBlueMatt,2017-02-20T20:02:20Z,I'd highly prefer we do - such tools are pretty critical to our ability to find issues - but should probably have a comment noting why we have this insanity.,https://github.com/bitcoin/bitcoin/pull/9743#discussion_r102084950,102084950,src/httpserver.cpp
laanwj,2017-02-22T12:07:25Z,"The way forward would be to fix the tools, not contort our code around whatever happen to be the bugs in the analysis tools of the day.",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r102447129,102447129,src/httpserver.cpp
TheBlueMatt,2017-04-17T14:25:51Z,I'm confused. The boost docs appear to indicate this should be identical.,https://github.com/bitcoin/bitcoin/pull/9743#discussion_r111748796,111748796,src/sync.cpp
TheBlueMatt,2017-04-17T14:27:40Z,"relaxed here just seems needlessly lossy - mocktime is for testing, it can be slow, and running a test with a race because we're using relaxed everyhwere just seems needlessly confusing.",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r111749129,111749129,src/utiltime.cpp
sipa,2017-04-20T13:21:48Z,"Agree, and tests seem to agree that they are indeed invoked. I'll remove it.",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r112450645,112450645,src/sync.cpp
sipa,2017-04-20T13:24:34Z,"It's read by a relaxed read anyway, using a stronger serializing write won't matter (if I understand the semantics correctly).",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r112451672,112451672,src/utiltime.cpp
TheBlueMatt,2017-04-20T13:36:16Z,"Yes, my suggestion was to change the read as well :)",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r112454576,112454576,src/utiltime.cpp
sipa,2017-04-20T13:38:19Z,"GetTime is called all over the place, no? I don't want to introduce extra synchronization there.",https://github.com/bitcoin/bitcoin/pull/9743#discussion_r112455077,112455077,src/utiltime.cpp
