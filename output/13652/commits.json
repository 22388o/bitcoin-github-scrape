[
  {
    "sha": "89e70f9d7fe384ef9de4fa3828d4c80523290186",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWU3MGY5ZDdmZTM4NGVmOWRlNGZhMzgyOGQ0YzgwNTIzMjkwMTg2",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-12T21:19:00Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-13T15:16:08Z"
      },
      "message": "Fix that CWallet::AbandonTransaction would only traverse one level\n\nPrior to this change, it would mark only the first layer of\nchild transactions abandoned, due to always following the input hashTx\nrather than the current now tx.",
      "tree": {
        "sha": "6b414840dd03987cddd9237864a98ecdf76ddfa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b414840dd03987cddd9237864a98ecdf76ddfa1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89e70f9d7fe384ef9de4fa3828d4c80523290186",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbSMI8AAoJEG7l83hfeLNFZocH/23PhfIwi1jSTJ8uqBtYn/Ek\nQSzmFLQUu81tYzTptcCWt1KxK/5JHMNn35yrFzVO1pYLFMPxrkxE3ZC4km5LABQX\nyjOzdnO/+bRIMbIyZgz5fI0aPd0/RvOkSjegIKgS46Y5+KPPglE5gZUYXrnqaQik\n1NqEX9Dm+vysb6OdYo6KB+yFjjUCcVxHAjY7h5cWFn/kdWS4zAkm05yh2Vb3QQLc\ne84EDXH7iHDFqJglloKOmjaVP/9Y5DdyVyr2kyBnhY3GilOFXa72qaMwmqojr6tf\ny4OEzJgObHJNVP8EfH5HVaRVXxkcWmvV7iLmJ8vSUfnW77Jx+dJ+S0HYvurEKTg=\n=RS59\n-----END PGP SIGNATURE-----",
        "payload": "tree 6b414840dd03987cddd9237864a98ecdf76ddfa1\nparent dcb154e5aad80e49ff41a7851604ac46f38cb167\nauthor Ben Woosley <ben.woosley@gmail.com> 1531430340 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1531494968 -0400\n\nFix that CWallet::AbandonTransaction would only traverse one level\n\nPrior to this change, it would mark only the first layer of\nchild transactions abandoned, due to always following the input hashTx\nrather than the current now tx.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e70f9d7fe384ef9de4fa3828d4c80523290186",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89e70f9d7fe384ef9de4fa3828d4c80523290186",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e70f9d7fe384ef9de4fa3828d4c80523290186/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcb154e5aad80e49ff41a7851604ac46f38cb167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcb154e5aad80e49ff41a7851604ac46f38cb167",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcb154e5aad80e49ff41a7851604ac46f38cb167"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b8cbaeeec7cf98a893b2e8b3bef930bc2c7ca855",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89e70f9d7fe384ef9de4fa3828d4c80523290186/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89e70f9d7fe384ef9de4fa3828d4c80523290186/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=89e70f9d7fe384ef9de4fa3828d4c80523290186",
        "patch": "@@ -1146,7 +1146,7 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\n             batch.WriteTx(wtx);\n             NotifyTransactionChanged(this, wtx.GetHash(), CT_UPDATED);\n             // Iterate over all its outputs, and mark transactions in the wallet that spend them abandoned too\n-            TxSpends::const_iterator iter = mapTxSpends.lower_bound(COutPoint(hashTx, 0));\n+            TxSpends::const_iterator iter = mapTxSpends.lower_bound(COutPoint(now, 0));\n             while (iter != mapTxSpends.end() && iter->first.hash == now) {\n                 if (!done.count(iter->second)) {\n                     todo.insert(iter->second);"
      },
      {
        "sha": "cf2120d4ebac08c14815fca8ae28cad0d70a9d69",
        "filename": "test/functional/wallet_abandonconflict.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89e70f9d7fe384ef9de4fa3828d4c80523290186/test/functional/wallet_abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89e70f9d7fe384ef9de4fa3828d4c80523290186/test/functional/wallet_abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_abandonconflict.py?ref=89e70f9d7fe384ef9de4fa3828d4c80523290186",
        "patch": "@@ -70,9 +70,17 @@ def run_test(self):\n         signed2 = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs))\n         txABC2 = self.nodes[0].sendrawtransaction(signed2[\"hex\"])\n \n+        # Create a child tx spending ABC2\n+        signed3_change = Decimal(\"24.999\")\n+        inputs = [ {\"txid\":txABC2, \"vout\":0} ]\n+        outputs = { self.nodes[0].getnewaddress(): signed3_change }\n+        signed3 = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs))\n+        # note tx is never directly referenced, only abandoned as a child of the above\n+        self.nodes[0].sendrawtransaction(signed3[\"hex\"])\n+\n         # In mempool txs from self should increase balance from change\n         newbalance = self.nodes[0].getbalance()\n-        assert_equal(newbalance, balance - Decimal(\"30\") + Decimal(\"24.9996\"))\n+        assert_equal(newbalance, balance - Decimal(\"30\") + signed3_change)\n         balance = newbalance\n \n         # Restart the node with a higher min relay fee so the parent tx is no longer in mempool\n@@ -87,7 +95,7 @@ def run_test(self):\n         # Not in mempool txs from self should only reduce balance\n         # inputs are still spent, but change not received\n         newbalance = self.nodes[0].getbalance()\n-        assert_equal(newbalance, balance - Decimal(\"24.9996\"))\n+        assert_equal(newbalance, balance - signed3_change)\n         # Unconfirmed received funds that are not in mempool, also shouldn't show\n         # up in unconfirmed balance\n         unconfbalance = self.nodes[0].getunconfirmedbalance() + self.nodes[0].getbalance()"
      }
    ]
  }
]