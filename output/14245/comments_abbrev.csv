DrahtBot,2018-09-28T08:11:26Z,<!--32850dd3fdea838b4049e64f46995ea2-->\n| Coverage  | Change ([pull 14245](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/14245/total.coverage/index.html)) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html))   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0056 %            | 87.0361 %,https://github.com/bitcoin/bitcoin/pull/14245#issuecomment-425357982,425357982,
DrahtBot,2018-11-08T21:48:20Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16902](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16902.html) ([POC] O(1) OP_IF/NOTIF/ELSE/ENDIF script im",https://github.com/bitcoin/bitcoin/pull/14245#issuecomment-437168157,437168157,
DrahtBot,2019-05-07T17:06:19Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 231 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/14245#issuecomment-490166347,490166347,
fanquake,2019-09-18T05:10:17Z,"This has been open for a year, and received no conceptual review / interest (other than nits). Closing as ""Up for grabs"".",https://github.com/bitcoin/bitcoin/pull/14245#issuecomment-532520830,532520830,
sipa,2019-09-18T06:22:18Z,"Oh, I completely forgot about this PR's existence. #16902 is a slightly more advanced version of this.",https://github.com/bitcoin/bitcoin/pull/14245#issuecomment-532538050,532538050,
fanquake,2019-09-18T06:28:02Z,">  #16902 is a slightly more advanced version of this.\n\nGreat. I'll remove ""Up for Grabs"", and reviewers can head to #16902 instead.",https://github.com/bitcoin/bitcoin/pull/14245#issuecomment-532539624,532539624,
jl2012,2018-09-17T18:47:37Z,"By definition, the first opcode must be executed because `vfExec` is empty and without any false item. So `fExec` must be true at the beginning",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r218184168,218184168,src/script/interpreter.cpp
jl2012,2018-09-17T18:49:39Z,"value of `fExec` may change only if an `IF`, `NOTIF`, `ELSE`, or `ENDIF` is encountered. No other opcode may flip `fExec`. So we don't need to redo it for every opcode, just after `IF`, `NOTIF`, `ELSE`, or `ENDIF`",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r218184778,218184778,src/script/interpreter.cpp
jl2012,2018-09-17T18:54:44Z,"in `OP_IF`, if `fExec` is true, the original `vfExec` must be by definition all true. Since `fValue` is added to the end of `vfExec`, the new `fExec` value must be same as `fValue`\n\nIf `fExec` is false, a false will be added to `vfExec`, and by definition `fExec` will remain false, so we don't need to do anything",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r218186741,218186741,src/script/interpreter.cpp
jl2012,2018-09-17T18:59:34Z,"in `OP_ELSE`, if `fExec` is true, the original `vfExec` must be by definition all true. Since `OP_ELSE` will flip the last `vfExec` item, the resulting `vfExec` must have exactly one false at the end. So we know `fExec` must become false.\n\nIf `fExec` is false, there is at least one false in `vfExec` but we don't know where it is, so we have to count as usual (`fExec` will flip if and only if t",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r218188542,218188542,src/script/interpreter.cpp
jl2012,2018-09-17T19:02:31Z,"in `OP_ENDIF`, if `fExec` is true, the original `vfExec` must be by definition all true. Since `OP_ENDIF` will simply remove the last `vfExec` item, the resulting `vfExec` must not have any false. So we know `fExec` must remain true.\n\nIf `fExec` is false, there is at least one false in `vfExec` but we don't know where it is, so we have to count as usual (`fExec` will flip if and only if the or",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r218189852,218189852,src/script/interpreter.cpp
practicalswift,2018-09-21T08:19:14Z,"```\n2018-09-20 01:47:27 cppcheck(pr=14245): [src/script/interpreter.cpp:297]: (style) The scope of the variable 'fExec' can be reduced.\n```",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r219417547,219417547,src/script/interpreter.cpp
jl2012,2018-09-22T09:19:44Z,"yes, but a few variables there, like nOpCount, can be reduced as well",https://github.com/bitcoin/bitcoin/pull/14245#discussion_r219666339,219666339,src/script/interpreter.cpp
promag,2018-10-02T10:35:12Z,`std::count`?,https://github.com/bitcoin/bitcoin/pull/14245#discussion_r221900812,221900812,src/script/interpreter.cpp
promag,2018-10-02T10:39:55Z,Could improve by using `std::find` since the actual count is not necessary?,https://github.com/bitcoin/bitcoin/pull/14245#discussion_r221902021,221902021,src/script/interpreter.cpp
