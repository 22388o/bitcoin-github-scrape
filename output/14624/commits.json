[
  {
    "sha": "9695f31d7544778853aa373f0aeed629fa68d85e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Njk1ZjMxZDc1NDQ3Nzg4NTNhYTM3M2YwYWVlZDYyOWZhNjhkODVl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T20:56:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:22:12Z"
      },
      "message": "Make addrman use its local RNG exclusively",
      "tree": {
        "sha": "4999c234883bf8127716904b36d2873383151317",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4999c234883bf8127716904b36d2873383151317"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9695f31d7544778853aa373f0aeed629fa68d85e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9695f31d7544778853aa373f0aeed629fa68d85e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9695f31d7544778853aa373f0aeed629fa68d85e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9695f31d7544778853aa373f0aeed629fa68d85e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d0a14703e288d72ff19d4d89defbc853233899f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d0a14703e288d72ff19d4d89defbc853233899f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d0a14703e288d72ff19d4d89defbc853233899f"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 12,
      "deletions": 25
    },
    "files": [
      {
        "sha": "06c342ba73d34c0676c13920652930881917fdf6",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 15,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9695f31d7544778853aa373f0aeed629fa68d85e/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9695f31d7544778853aa373f0aeed629fa68d85e/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=9695f31d7544778853aa373f0aeed629fa68d85e",
        "patch": "@@ -217,7 +217,7 @@ void CAddrMan::Good_(const CService& addr, bool test_before_evict, int64_t nTime\n         return;\n \n     // find a bucket it is in now\n-    int nRnd = RandomInt(ADDRMAN_NEW_BUCKET_COUNT);\n+    int nRnd = insecure_rand.randrange(ADDRMAN_NEW_BUCKET_COUNT);\n     int nUBucket = -1;\n     for (unsigned int n = 0; n < ADDRMAN_NEW_BUCKET_COUNT; n++) {\n         int nB = (n + nRnd) % ADDRMAN_NEW_BUCKET_COUNT;\n@@ -291,7 +291,7 @@ bool CAddrMan::Add_(const CAddress& addr, const CNetAddr& source, int64_t nTimeP\n         int nFactor = 1;\n         for (int n = 0; n < pinfo->nRefCount; n++)\n             nFactor *= 2;\n-        if (nFactor > 1 && (RandomInt(nFactor) != 0))\n+        if (nFactor > 1 && (insecure_rand.randrange(nFactor) != 0))\n             return false;\n     } else {\n         pinfo = Create(addr, source, &nId);\n@@ -356,37 +356,37 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n \n     // Use a 50% chance for choosing between tried and new table entries.\n     if (!newOnly &&\n-       (nTried > 0 && (nNew == 0 || RandomInt(2) == 0))) {\n+       (nTried > 0 && (nNew == 0 || insecure_rand.randbool() == 0))) {\n         // use a tried node\n         double fChanceFactor = 1.0;\n         while (1) {\n-            int nKBucket = RandomInt(ADDRMAN_TRIED_BUCKET_COUNT);\n-            int nKBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n+            int nKBucket = insecure_rand.randrange(ADDRMAN_TRIED_BUCKET_COUNT);\n+            int nKBucketPos = insecure_rand.randrange(ADDRMAN_BUCKET_SIZE);\n             while (vvTried[nKBucket][nKBucketPos] == -1) {\n                 nKBucket = (nKBucket + insecure_rand.randbits(ADDRMAN_TRIED_BUCKET_COUNT_LOG2)) % ADDRMAN_TRIED_BUCKET_COUNT;\n                 nKBucketPos = (nKBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvTried[nKBucket][nKBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];\n-            if (RandomInt(1 << 30) < fChanceFactor * info.GetChance() * (1 << 30))\n+            if (insecure_rand.randbits(30) < fChanceFactor * info.GetChance() * (1 << 30))\n                 return info;\n             fChanceFactor *= 1.2;\n         }\n     } else {\n         // use a new node\n         double fChanceFactor = 1.0;\n         while (1) {\n-            int nUBucket = RandomInt(ADDRMAN_NEW_BUCKET_COUNT);\n-            int nUBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n+            int nUBucket = insecure_rand.randrange(ADDRMAN_NEW_BUCKET_COUNT);\n+            int nUBucketPos = insecure_rand.randrange(ADDRMAN_BUCKET_SIZE);\n             while (vvNew[nUBucket][nUBucketPos] == -1) {\n                 nUBucket = (nUBucket + insecure_rand.randbits(ADDRMAN_NEW_BUCKET_COUNT_LOG2)) % ADDRMAN_NEW_BUCKET_COUNT;\n                 nUBucketPos = (nUBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvNew[nUBucket][nUBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];\n-            if (RandomInt(1 << 30) < fChanceFactor * info.GetChance() * (1 << 30))\n+            if (insecure_rand.randbits(30) < fChanceFactor * info.GetChance() * (1 << 30))\n                 return info;\n             fChanceFactor *= 1.2;\n         }\n@@ -482,7 +482,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr)\n         if (vAddr.size() >= nNodes)\n             break;\n \n-        int nRndPos = RandomInt(vRandom.size() - n) + n;\n+        int nRndPos = insecure_rand.randrange(vRandom.size() - n) + n;\n         SwapRandom(n, nRndPos);\n         assert(mapInfo.count(vRandom[n]) == 1);\n \n@@ -530,10 +530,6 @@ void CAddrMan::SetServices_(const CService& addr, ServiceFlags nServices)\n     info.nServices = nServices;\n }\n \n-int CAddrMan::RandomInt(int nMax){\n-    return GetRandInt(nMax);\n-}\n-\n void CAddrMan::ResolveCollisions_()\n {\n     for (std::set<int>::iterator it = m_tried_collisions.begin(); it != m_tried_collisions.end();) {\n@@ -593,7 +589,7 @@ CAddrInfo CAddrMan::SelectTriedCollision_()\n     std::set<int>::iterator it = m_tried_collisions.begin();\n \n     // Selects a random element from m_tried_collisions\n-    std::advance(it, GetRandInt(m_tried_collisions.size()));\n+    std::advance(it, insecure_rand.randrange(m_tried_collisions.size()));\n     int id_new = *it;\n \n     // If id_new not found in mapInfo remove it from m_tried_collisions"
      },
      {
        "sha": "af5a1d3b238847c82811bf1b7db673ded1f87adc",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9695f31d7544778853aa373f0aeed629fa68d85e/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9695f31d7544778853aa373f0aeed629fa68d85e/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=9695f31d7544778853aa373f0aeed629fa68d85e",
        "patch": "@@ -266,9 +266,6 @@ class CAddrMan\n     //! Return a random to-be-evicted tried table address.\n     CAddrInfo SelectTriedCollision_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    //! Wraps GetRandInt to allow tests to override RandomInt and make it determinismistic.\n-    virtual int RandomInt(int nMax);\n-\n #ifdef DEBUG_ADDRMAN\n     //! Perform consistency check. Returns an error code or zero.\n     int Check_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n@@ -473,7 +470,7 @@ class CAddrMan\n     {\n         LOCK(cs);\n         std::vector<int>().swap(vRandom);\n-        nKey = GetRandHash();\n+        nKey = insecure_rand.rand256();\n         for (size_t bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; bucket++) {\n             for (size_t entry = 0; entry < ADDRMAN_BUCKET_SIZE; entry++) {\n                 vvNew[bucket][entry] = -1;"
      },
      {
        "sha": "12e6ace2138cc47b63f658762a8b7fa13775192a",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9695f31d7544778853aa373f0aeed629fa68d85e/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9695f31d7544778853aa373f0aeed629fa68d85e/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=9695f31d7544778853aa373f0aeed629fa68d85e",
        "patch": "@@ -32,12 +32,6 @@ class CAddrManTest : public CAddrMan\n         insecure_rand = FastRandomContext(true);\n     }\n \n-    int RandomInt(int nMax) override\n-    {\n-        state = (CHashWriter(SER_GETHASH, 0) << state).GetCheapHash();\n-        return (unsigned int)(state % nMax);\n-    }\n-\n     CAddrInfo* Find(const CNetAddr& addr, int* pnId = nullptr)\n     {\n         LOCK(cs);"
      }
    ]
  },
  {
    "sha": "8098379be5465f598220e1d6174fc57c56f9da42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDk4Mzc5YmU1NDY1ZjU5ODIyMGUxZDYxNzRmYzU3YzU2ZjlkYTQy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T22:02:24Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:22:12Z"
      },
      "message": "Use a local FastRandomContext in a few more places in net",
      "tree": {
        "sha": "84774840136e8a180439c848b5960161b77ea6b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84774840136e8a180439c848b5960161b77ea6b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8098379be5465f598220e1d6174fc57c56f9da42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8098379be5465f598220e1d6174fc57c56f9da42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8098379be5465f598220e1d6174fc57c56f9da42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8098379be5465f598220e1d6174fc57c56f9da42/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9695f31d7544778853aa373f0aeed629fa68d85e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9695f31d7544778853aa373f0aeed629fa68d85e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9695f31d7544778853aa373f0aeed629fa68d85e"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e595fb0b0bc36db59a72c09338d0ed25ab5810f9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8098379be5465f598220e1d6174fc57c56f9da42/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8098379be5465f598220e1d6174fc57c56f9da42/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=8098379be5465f598220e1d6174fc57c56f9da42",
        "patch": "@@ -134,11 +134,12 @@ static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn\n     const int64_t nOneWeek = 7*24*60*60;\n     std::vector<CAddress> vSeedsOut;\n     vSeedsOut.reserve(vSeedsIn.size());\n+    FastRandomContext rng;\n     for (const auto& seed_in : vSeedsIn) {\n         struct in6_addr ip;\n         memcpy(&ip, seed_in.addr, sizeof(ip));\n         CAddress addr(CService(ip, seed_in.port), GetDesirableServiceFlags(NODE_NONE));\n-        addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n+        addr.nTime = GetTime() - rng.randrange(nOneWeek) - nOneWeek;\n         vSeedsOut.push_back(addr);\n     }\n     return vSeedsOut;\n@@ -189,16 +190,16 @@ void AdvertiseLocal(CNode *pnode)\n         // If discovery is enabled, sometimes give our peer the address it\n         // tells us that it sees us as in case it has a better idea of our\n         // address than we do.\n+        FastRandomContext rng;\n         if (IsPeerAddrLocalGood(pnode) && (!addrLocal.IsRoutable() ||\n-             GetRand((GetnScore(addrLocal) > LOCAL_MANUAL) ? 8:2) == 0))\n+             rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0))\n         {\n             addrLocal.SetIP(pnode->GetAddrLocal());\n         }\n         if (addrLocal.IsRoutable() || gArgs.GetBoolArg(\"-addrmantest\", false))\n         {\n             LogPrint(BCLog::NET, \"AdvertiseLocal: advertising address %s\\n\", addrLocal.ToString());\n-            FastRandomContext insecure_rand;\n-            pnode->PushAddress(addrLocal, insecure_rand);\n+            pnode->PushAddress(addrLocal, rng);\n         }\n     }\n }"
      }
    ]
  },
  {
    "sha": "3db746beb407f7cdd9cd6a605a195bef1254b4c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZGI3NDZiZWI0MDdmN2NkZDljZDZhNjA1YTE5NWJlZjEyNTRiNGMw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T22:42:03Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:22:12Z"
      },
      "message": "Introduce a Shuffle for FastRandomContext and use it in wallet and coinselection",
      "tree": {
        "sha": "cc464b5749de94ce6f96b4768bb2d3f09ce96c18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc464b5749de94ce6f96b4768bb2d3f09ce96c18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3db746beb407f7cdd9cd6a605a195bef1254b4c0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3db746beb407f7cdd9cd6a605a195bef1254b4c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3db746beb407f7cdd9cd6a605a195bef1254b4c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3db746beb407f7cdd9cd6a605a195bef1254b4c0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8098379be5465f598220e1d6174fc57c56f9da42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8098379be5465f598220e1d6174fc57c56f9da42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8098379be5465f598220e1d6174fc57c56f9da42"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 60,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e7e5eb496afbfdf84ca3d28f2b92d2b465040c70",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=3db746beb407f7cdd9cd6a605a195bef1254b4c0",
        "patch": "@@ -130,6 +130,29 @@ class FastRandomContext {\n     inline uint64_t operator()() { return rand64(); }\n };\n \n+/** More efficient than using std::shuffle on a FastRandomContext.\n+ *\n+ * This is more efficient as std::shuffle will consume entropy in groups of\n+ * 64 bits at the time and throw away most.\n+ *\n+ * This also works around a bug in libstdc++ std::shuffle that may cause\n+ * type::operator=(type&&) to be invoked on itself, which the library's\n+ * debug mode detects and panics on. This is a known issue, see\n+ * https://stackoverflow.com/questions/22915325/avoiding-self-assignment-in-stdshuffle\n+ */\n+template<typename I, typename R>\n+void Shuffle(I first, I last, R&& rng)\n+{\n+    while (first != last) {\n+        size_t j = rng.randrange(last - first);\n+        if (j) {\n+            using std::swap;\n+            swap(*first, *(first + j));\n+        }\n+        ++first;\n+    }\n+}\n+\n /* Number of random bytes returned by GetOSRand.\n  * When changing this constant make sure to change all call sites, and make\n  * sure that the underlying OS APIs for all platforms support the number."
      },
      {
        "sha": "9d69d1247d964c799a7190c7bc6128fe5c3c8da7",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=3db746beb407f7cdd9cd6a605a195bef1254b4c0",
        "patch": "@@ -75,8 +75,42 @@ BOOST_AUTO_TEST_CASE(stdrandom_test)\n         for (int j = 1; j <= 10; ++j) {\n             BOOST_CHECK(std::find(test.begin(), test.end(), j) != test.end());\n         }\n+        Shuffle(test.begin(), test.end(), ctx);\n+        for (int j = 1; j <= 10; ++j) {\n+            BOOST_CHECK(std::find(test.begin(), test.end(), j) != test.end());\n+        }\n     }\n \n }\n \n+/** Test that Shuffle reaches every permutation with equal probability. */\n+BOOST_AUTO_TEST_CASE(shuffle_stat_test)\n+{\n+    FastRandomContext ctx(true);\n+    uint32_t counts[5 * 5 * 5 * 5 * 5] = {0};\n+    for (int i = 0; i < 12000; ++i) {\n+        int data[5] = {0, 1, 2, 3, 4};\n+        Shuffle(std::begin(data), std::end(data), ctx);\n+        int pos = data[0] + data[1] * 5 + data[2] * 25 + data[3] * 125 + data[4] * 625;\n+        ++counts[pos];\n+    }\n+    unsigned int sum = 0;\n+    double chi_score = 0.0;\n+    for (int i = 0; i < 5 * 5 * 5 * 5 * 5; ++i) {\n+        int i1 = i % 5, i2 = (i / 5) % 5, i3 = (i / 25) % 5, i4 = (i / 125) % 5, i5 = i / 625;\n+        uint32_t count = counts[i];\n+        if (i1 == i2 || i1 == i3 || i1 == i4 || i1 == i5 || i2 == i3 || i2 == i4 || i2 == i5 || i3 == i4 || i3 == i5 || i4 == i5) {\n+            BOOST_CHECK(count == 0);\n+        } else {\n+            chi_score += ((count - 100.0) * (count - 100.0)) / 100.0;\n+            BOOST_CHECK(count > 50);\n+            BOOST_CHECK(count < 150);\n+            sum += count;\n+        }\n+    }\n+    BOOST_CHECK(chi_score > 58.1411); // 99.9999% confidence interval\n+    BOOST_CHECK(chi_score < 210.275);\n+    BOOST_CHECK_EQUAL(sum, 12000);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "8a37f374a1e54d8f09fcfd21ee82fdcd481b42c8",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=3db746beb407f7cdd9cd6a605a195bef1254b4c0",
        "patch": "@@ -223,7 +223,7 @@ bool KnapsackSolver(const CAmount& nTargetValue, std::vector<OutputGroup>& group\n     std::vector<OutputGroup> applicable_groups;\n     CAmount nTotalLower = 0;\n \n-    random_shuffle(groups.begin(), groups.end(), GetRandInt);\n+    Shuffle(groups.begin(), groups.end(), FastRandomContext());\n \n     for (const OutputGroup& group : groups) {\n         if (group.m_value == nTargetValue) {"
      },
      {
        "sha": "cea6564b4e99d2468a83d3c53e4d5c39e3d4873d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3db746beb407f7cdd9cd6a605a195bef1254b4c0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3db746beb407f7cdd9cd6a605a195bef1254b4c0",
        "patch": "@@ -2462,7 +2462,7 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n         // Cases where we have 11+ outputs all pointing to the same destination may result in\n         // privacy leaks as they will potentially be deterministically sorted. We solve that by\n         // explicitly shuffling the outputs before processing\n-        std::shuffle(vCoins.begin(), vCoins.end(), FastRandomContext());\n+        Shuffle(vCoins.begin(), vCoins.end(), FastRandomContext());\n     }\n     std::vector<OutputGroup> groups = GroupOutputs(vCoins, !coin_control.m_avoid_partial_spends);\n \n@@ -2922,7 +2922,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         // Shuffle selected coins and fill in final vin\n         txNew.vin.clear();\n         std::vector<CInputCoin> selected_coins(setCoins.begin(), setCoins.end());\n-        std::shuffle(selected_coins.begin(), selected_coins.end(), FastRandomContext());\n+        Shuffle(selected_coins.begin(), selected_coins.end(), FastRandomContext());\n \n         // Note how the sequence number is set to non-maxint so that\n         // the nLockTime set above actually works."
      }
    ]
  },
  {
    "sha": "273d02580aa736b7ccea8fce51d90541665fdbd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzNkMDI1ODBhYTczNmI3Y2NlYThmY2U1MWQ5MDU0MTY2NWZkYmQx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T22:05:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:22:12Z"
      },
      "message": "Use a FastRandomContext in LimitOrphanTxSize",
      "tree": {
        "sha": "f7ef66e7d380215feac25aea060aef8c8e56a6a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7ef66e7d380215feac25aea060aef8c8e56a6a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/273d02580aa736b7ccea8fce51d90541665fdbd1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/273d02580aa736b7ccea8fce51d90541665fdbd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/273d02580aa736b7ccea8fce51d90541665fdbd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/273d02580aa736b7ccea8fce51d90541665fdbd1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3db746beb407f7cdd9cd6a605a195bef1254b4c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3db746beb407f7cdd9cd6a605a195bef1254b4c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3db746beb407f7cdd9cd6a605a195bef1254b4c0"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0e222bdfa4775ad12036ed147e312c8f08fa9064",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/273d02580aa736b7ccea8fce51d90541665fdbd1/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/273d02580aa736b7ccea8fce51d90541665fdbd1/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=273d02580aa736b7ccea8fce51d90541665fdbd1",
        "patch": "@@ -779,10 +779,11 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         nNextSweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n+    FastRandomContext rng;\n     while (mapOrphanTransactions.size() > nMaxOrphans)\n     {\n         // Evict a random orphan:\n-        uint256 randomhash = GetRandHash();\n+        uint256 randomhash = rng.rand256();\n         std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.lower_bound(randomhash);\n         if (it == mapOrphanTransactions.end())\n             it = mapOrphanTransactions.begin();"
      }
    ]
  },
  {
    "sha": "8d98d426116f0178612f14d1874d331042c4c4b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDk4ZDQyNjExNmYwMTc4NjEyZjE0ZDE4NzRkMzMxMDQyYzRjNGI3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T21:25:11Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:22:12Z"
      },
      "message": "Bugfix: randbytes should seed when needed (non reachable issue)",
      "tree": {
        "sha": "9ca9e096ec04b5b1332578a06b26a9acc43467ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ca9e096ec04b5b1332578a06b26a9acc43467ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d98d426116f0178612f14d1874d331042c4c4b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d98d426116f0178612f14d1874d331042c4c4b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d98d426116f0178612f14d1874d331042c4c4b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d98d426116f0178612f14d1874d331042c4c4b7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "273d02580aa736b7ccea8fce51d90541665fdbd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/273d02580aa736b7ccea8fce51d90541665fdbd1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/273d02580aa736b7ccea8fce51d90541665fdbd1"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ebc2ff42c8a80df247be3fa05f90a46edadcc810",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d98d426116f0178612f14d1874d331042c4c4b7/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d98d426116f0178612f14d1874d331042c4c4b7/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=8d98d426116f0178612f14d1874d331042c4c4b7",
        "patch": "@@ -398,6 +398,7 @@ uint256 FastRandomContext::rand256()\n \n std::vector<unsigned char> FastRandomContext::randbytes(size_t len)\n {\n+    if (requires_seed) RandomSeed();\n     std::vector<unsigned char> ret(len);\n     if (len > 0) {\n         rng.Output(&ret[0], len);"
      },
      {
        "sha": "1057d09471631c4b6c64ac2f9706435536817f61",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d98d426116f0178612f14d1874d331042c4c4b7/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d98d426116f0178612f14d1874d331042c4c4b7/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=8d98d426116f0178612f14d1874d331042c4c4b7",
        "patch": "@@ -38,11 +38,18 @@ BOOST_AUTO_TEST_CASE(fastrandom_tests)\n     BOOST_CHECK(ctx1.randbytes(50) == ctx2.randbytes(50));\n \n     // Check that a nondeterministic ones are not\n-    FastRandomContext ctx3;\n-    FastRandomContext ctx4;\n-    BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal\n-    BOOST_CHECK(ctx3.rand256() != ctx4.rand256());\n-    BOOST_CHECK(ctx3.randbytes(7) != ctx4.randbytes(7));\n+    {\n+        FastRandomContext ctx3, ctx4;\n+        BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal\n+    }\n+    {\n+        FastRandomContext ctx3, ctx4;\n+        BOOST_CHECK(ctx3.rand256() != ctx4.rand256());\n+    }\n+    {\n+        FastRandomContext ctx3, ctx4;\n+        BOOST_CHECK(ctx3.randbytes(7) != ctx4.randbytes(7));\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(fastrandom_randbits)"
      }
    ]
  },
  {
    "sha": "fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDNlNzk3M2ZmYWFhMTVlZDMyZTVhZWFkY2IwMjk1Njg0OWI4ZmM3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T22:51:41Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:22:12Z"
      },
      "message": "Make unit tests use the insecure_rand_ctx exclusively",
      "tree": {
        "sha": "228672d42e4c5e3625b0979692f7b334226cd0a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/228672d42e4c5e3625b0979692f7b334226cd0a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d98d426116f0178612f14d1874d331042c4c4b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d98d426116f0178612f14d1874d331042c4c4b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d98d426116f0178612f14d1874d331042c4c4b7"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 15,
      "deletions": 32
    },
    "files": [
      {
        "sha": "fea1e1b84146e0d17837bb10e24c4810bcd7cf93",
        "filename": "src/test/cuckoocache_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 28,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/src/test/cuckoocache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/src/test/cuckoocache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/cuckoocache_tests.cpp?ref=fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
        "patch": "@@ -21,40 +21,23 @@\n  *  using BOOST_CHECK_CLOSE to fail.\n  *\n  */\n-FastRandomContext local_rand_ctx(true);\n-\n BOOST_AUTO_TEST_SUITE(cuckoocache_tests);\n \n-\n-/** insecure_GetRandHash fills in a uint256 from local_rand_ctx\n- */\n-static void insecure_GetRandHash(uint256& t)\n-{\n-    uint32_t* ptr = (uint32_t*)t.begin();\n-    for (uint8_t j = 0; j < 8; ++j)\n-        *(ptr++) = local_rand_ctx.rand32();\n-}\n-\n-\n-\n /* Test that no values not inserted into the cache are read out of it.\n  *\n  * There are no repeats in the first 200000 insecure_GetRandHash calls\n  */\n BOOST_AUTO_TEST_CASE(test_cuckoocache_no_fakes)\n {\n-    local_rand_ctx = FastRandomContext(true);\n+    SeedInsecureRand(true);\n     CuckooCache::cache<uint256, SignatureCacheHasher> cc{};\n     size_t megabytes = 4;\n     cc.setup_bytes(megabytes << 20);\n-    uint256 v;\n     for (int x = 0; x < 100000; ++x) {\n-        insecure_GetRandHash(v);\n-        cc.insert(v);\n+        cc.insert(InsecureRand256());\n     }\n     for (int x = 0; x < 100000; ++x) {\n-        insecure_GetRandHash(v);\n-        BOOST_CHECK(!cc.contains(v, false));\n+        BOOST_CHECK(!cc.contains(InsecureRand256(), false));\n     }\n };\n \n@@ -64,7 +47,7 @@ BOOST_AUTO_TEST_CASE(test_cuckoocache_no_fakes)\n template <typename Cache>\n static double test_cache(size_t megabytes, double load)\n {\n-    local_rand_ctx = FastRandomContext(true);\n+    SeedInsecureRand(true);\n     std::vector<uint256> hashes;\n     Cache set{};\n     size_t bytes = megabytes * (1 << 20);\n@@ -74,7 +57,7 @@ static double test_cache(size_t megabytes, double load)\n     for (uint32_t i = 0; i < n_insert; ++i) {\n         uint32_t* ptr = (uint32_t*)hashes[i].begin();\n         for (uint8_t j = 0; j < 8; ++j)\n-            *(ptr++) = local_rand_ctx.rand32();\n+            *(ptr++) = InsecureRand32();\n     }\n     /** We make a copy of the hashes because future optimizations of the\n      * cuckoocache may overwrite the inserted element, so the test is\n@@ -135,7 +118,7 @@ template <typename Cache>\n static void test_cache_erase(size_t megabytes)\n {\n     double load = 1;\n-    local_rand_ctx = FastRandomContext(true);\n+    SeedInsecureRand(true);\n     std::vector<uint256> hashes;\n     Cache set{};\n     size_t bytes = megabytes * (1 << 20);\n@@ -145,7 +128,7 @@ static void test_cache_erase(size_t megabytes)\n     for (uint32_t i = 0; i < n_insert; ++i) {\n         uint32_t* ptr = (uint32_t*)hashes[i].begin();\n         for (uint8_t j = 0; j < 8; ++j)\n-            *(ptr++) = local_rand_ctx.rand32();\n+            *(ptr++) = InsecureRand32();\n     }\n     /** We make a copy of the hashes because future optimizations of the\n      * cuckoocache may overwrite the inserted element, so the test is\n@@ -198,7 +181,7 @@ template <typename Cache>\n static void test_cache_erase_parallel(size_t megabytes)\n {\n     double load = 1;\n-    local_rand_ctx = FastRandomContext(true);\n+    SeedInsecureRand(true);\n     std::vector<uint256> hashes;\n     Cache set{};\n     size_t bytes = megabytes * (1 << 20);\n@@ -208,7 +191,7 @@ static void test_cache_erase_parallel(size_t megabytes)\n     for (uint32_t i = 0; i < n_insert; ++i) {\n         uint32_t* ptr = (uint32_t*)hashes[i].begin();\n         for (uint8_t j = 0; j < 8; ++j)\n-            *(ptr++) = local_rand_ctx.rand32();\n+            *(ptr++) = InsecureRand32();\n     }\n     /** We make a copy of the hashes because future optimizations of the\n      * cuckoocache may overwrite the inserted element, so the test is\n@@ -300,7 +283,7 @@ static void test_cache_generations()\n     // iterations with non-deterministic values, so it isn't \"overfit\" to the\n     // specific entropy in FastRandomContext(true) and implementation of the\n     // cache.\n-    local_rand_ctx = FastRandomContext(true);\n+    SeedInsecureRand(true);\n \n     // block_activity models a chunk of network activity. n_insert elements are\n     // added to the cache. The first and last n/4 are stored for removal later\n@@ -317,7 +300,7 @@ static void test_cache_generations()\n             for (uint32_t i = 0; i < n_insert; ++i) {\n                 uint32_t* ptr = (uint32_t*)inserts[i].begin();\n                 for (uint8_t j = 0; j < 8; ++j)\n-                    *(ptr++) = local_rand_ctx.rand32();\n+                    *(ptr++) = InsecureRand32();\n             }\n             for (uint32_t i = 0; i < n_insert / 4; ++i)\n                 reads.push_back(inserts[i]);"
      },
      {
        "sha": "5291dfdd4b79be0ba41df72e4a9e4e2f248ad2e3",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
        "patch": "@@ -111,7 +111,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n \n static void AddRandomOutboundPeer(std::vector<CNode *> &vNodes, PeerLogicValidation &peerLogic)\n {\n-    CAddress addr(ip(GetRandInt(0xffffffff)), NODE_NONE);\n+    CAddress addr(ip(insecure_rand_ctx.randbits(32)), NODE_NONE);\n     vNodes.emplace_back(new CNode(id++, ServiceFlags(NODE_NETWORK|NODE_WITNESS), 0, INVALID_SOCKET, addr, 0, 0, CAddress(), \"\", /*fInboundIn=*/ false));\n     CNode &node = *vNodes.back();\n     node.SetSendVersion(PROTOCOL_VERSION);"
      },
      {
        "sha": "fb0b8c0e16d22fe1238b3defed9999db6d2c8e08",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
        "patch": "@@ -104,8 +104,8 @@ void BuildChain(const uint256& root, int height, const unsigned int invalid_rate\n {\n     if (height <= 0 || blocks.size() >= max_size) return;\n \n-    bool gen_invalid = GetRand(100) < invalid_rate;\n-    bool gen_fork = GetRand(100) < branch_rate;\n+    bool gen_invalid = InsecureRandRange(100) < invalid_rate;\n+    bool gen_fork = InsecureRandRange(100) < branch_rate;\n \n     const std::shared_ptr<const CBlock> pblock = gen_invalid ? BadBlock(root) : GoodBlock(root);\n     blocks.push_back(pblock);\n@@ -157,7 +157,7 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n         threads.create_thread([&blocks]() {\n             bool ignored;\n             for (int i = 0; i < 1000; i++) {\n-                auto block = blocks[GetRand(blocks.size() - 1)];\n+                auto block = blocks[InsecureRandRange(blocks.size() - 1)];\n                 ProcessNewBlock(Params(), block, true, &ignored);\n             }\n "
      }
    ]
  },
  {
    "sha": "022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjJjZjQ3ZGQ3ZWY4ZjQ2ZTMyYTE4NGU4NGY5NGQxZTlmM2E0OTVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T22:51:57Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:28:15Z"
      },
      "message": "Simplify testing RNG code",
      "tree": {
        "sha": "2e46f41779ed1e98cfc061ca73397b238b03b7b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e46f41779ed1e98cfc061ca73397b238b03b7b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd3e7973ffaaa15ed32e5aeadcb02956849b8fc7"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 5,
      "deletions": 12
    },
    "files": [
      {
        "sha": "7341389208ece75b36aed9120ed30ca5e2f8349a",
        "filename": "src/test/prevector_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/src/test/prevector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/src/test/prevector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/prevector_tests.cpp?ref=022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
        "patch": "@@ -189,8 +189,8 @@ class prevector_tester {\n \n     prevector_tester() {\n         SeedInsecureRand();\n-        rand_seed = insecure_rand_seed;\n-        rand_cache = insecure_rand_ctx;\n+        rand_seed = InsecureRand256();\n+        rand_cache = FastRandomContext(rand_seed);\n     }\n };\n "
      },
      {
        "sha": "9b4076d9563e9757861a366c6d62f221565a34f3",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
        "patch": "@@ -36,8 +36,7 @@ void CConnmanTest::ClearNodes()\n     g_connman->vNodes.clear();\n }\n \n-uint256 insecure_rand_seed = GetRandHash();\n-FastRandomContext insecure_rand_ctx(insecure_rand_seed);\n+FastRandomContext insecure_rand_ctx;\n \n extern bool fPrintToConsole;\n extern void noui_connect();"
      },
      {
        "sha": "124f862de89bfa29742786759541480cab136dfa",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
        "patch": "@@ -26,17 +26,11 @@ std::ostream& operator<<(typename std::enable_if<std::is_enum<T>::value, std::os\n     return stream << static_cast<typename std::underlying_type<T>::type>(e);\n }\n \n-extern uint256 insecure_rand_seed;\n extern FastRandomContext insecure_rand_ctx;\n \n-static inline void SeedInsecureRand(bool fDeterministic = false)\n+static inline void SeedInsecureRand(bool deterministic = false)\n {\n-    if (fDeterministic) {\n-        insecure_rand_seed = uint256();\n-    } else {\n-        insecure_rand_seed = GetRandHash();\n-    }\n-    insecure_rand_ctx = FastRandomContext(insecure_rand_seed);\n+    insecure_rand_ctx = FastRandomContext(deterministic);\n }\n \n static inline uint32_t InsecureRand32() { return insecure_rand_ctx.rand32(); }"
      }
    ]
  },
  {
    "sha": "e414486d56b9f06af7aeb07ce13e3c3780c2b69b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDE0NDg2ZDU2YjlmMDZhZjdhZWIwN2NlMTNlM2MzNzgwYzJiNjli",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-31T22:41:13Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-12T22:28:16Z"
      },
      "message": "Do not permit copying FastRandomContexts",
      "tree": {
        "sha": "1014bfa4fe74fe860bd34e43fad8ef734c270f50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1014bfa4fe74fe860bd34e43fad8ef734c270f50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e414486d56b9f06af7aeb07ce13e3c3780c2b69b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e414486d56b9f06af7aeb07ce13e3c3780c2b69b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e414486d56b9f06af7aeb07ce13e3c3780c2b69b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e414486d56b9f06af7aeb07ce13e3c3780c2b69b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/022cf47dd7ef8f46e32a184e84f94d1e9f3a495c"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f8ffda136d85a5929f5d212d30b0979e7bdcbcf6",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e414486d56b9f06af7aeb07ce13e3c3780c2b69b/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e414486d56b9f06af7aeb07ce13e3c3780c2b69b/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=e414486d56b9f06af7aeb07ce13e3c3780c2b69b",
        "patch": "@@ -464,6 +464,20 @@ FastRandomContext::FastRandomContext(bool fDeterministic) : requires_seed(!fDete\n     rng.SetKey(seed.begin(), 32);\n }\n \n+FastRandomContext& FastRandomContext::operator=(FastRandomContext&& from) noexcept\n+{\n+    requires_seed = from.requires_seed;\n+    rng = from.rng;\n+    std::copy(std::begin(from.bytebuf), std::end(from.bytebuf), std::begin(bytebuf));\n+    bytebuf_size = from.bytebuf_size;\n+    bitbuf = from.bitbuf;\n+    bitbuf_size = from.bitbuf_size;\n+    from.requires_seed = true;\n+    from.bytebuf_size = 0;\n+    from.bitbuf_size = 0;\n+    return *this;\n+}\n+\n void RandomInit()\n {\n     RDRandInit();"
      },
      {
        "sha": "00e90abbc5f7b7786b8f3da1e0ba47dcf02dfddb",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e414486d56b9f06af7aeb07ce13e3c3780c2b69b/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e414486d56b9f06af7aeb07ce13e3c3780c2b69b/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=e414486d56b9f06af7aeb07ce13e3c3780c2b69b",
        "patch": "@@ -76,6 +76,14 @@ class FastRandomContext {\n     /** Initialize with explicit seed (only for testing) */\n     explicit FastRandomContext(const uint256& seed);\n \n+    // Do not permit copying a FastRandomContext (move it, or create a new one to get reseeded).\n+    FastRandomContext(const FastRandomContext&) = delete;\n+    FastRandomContext(FastRandomContext&&) = delete;\n+    FastRandomContext& operator=(const FastRandomContext&) = delete;\n+\n+    /** Move a FastRandomContext. If the original one is used again, it will be reseeded. */\n+    FastRandomContext& operator=(FastRandomContext&& from) noexcept;\n+\n     /** Generate a random 64-bit integer. */\n     uint64_t rand64()\n     {"
      }
    ]
  }
]