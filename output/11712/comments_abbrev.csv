jnewbery,2017-11-23T15:37:13Z,Thanks Russ. I much prefer your suggested way of passing the constructed NodeConnCB object to TestNode. I've incorporated your change and split the PR into smaller commits to aid reviewing.,https://github.com/bitcoin/bitcoin/pull/11712#issuecomment-346648643,346648643,
jnewbery,2017-11-28T17:48:24Z,Addressed @ryanofsky's comments,https://github.com/bitcoin/bitcoin/pull/11712#issuecomment-347605979,347605979,
ryanofsky,2017-11-21T19:25:53Z,"In commit ""[tests] Remove rpc property from TestNode in p2p-segwit.py""\n\nDid you mean to s/node.p2p/p2p/ here and below?",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152377332,152377332,test/functional/p2p-segwit.py
ryanofsky,2017-11-21T19:30:04Z,"In commit ""[tests] Remove rpc property from TestNode in p2p-segwit.py""\n\nDo you want to s/node.rpc/node/ here for consistency with test_transaction_acceptance? Another alternative which would also be nice would be to pass these functions just rpc objects instead of nodes.\n",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152378395,152378395,test/functional/p2p-segwit.py
ryanofsky,2017-11-21T19:36:12Z,"[tests] Remove rpc property from TestNode in p2p-segwit.py\n\nNot a comment on this PR but this whole test file is very repetitive. With a few lambdas / local helper functions it could probably be made a lot shorter and more readable.",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152379930,152379930,test/functional/p2p-segwit.py
ryanofsky,2017-11-21T19:48:13Z,"In commit ""[tests] instantiate NodeConnCB in TestNode""\n\nCan similary control flow and revert this whole commit, see main comment.",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152382964,152382964,test/functional/test_framework/test_node.py
ryanofsky,2017-11-21T21:17:46Z,"In commit ""[tests] Make NodeConnCB a subclass of NodeConn""\n\nCan get rid of all these default parameters repeated so many times. See main comment.",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r152404154,152404154,test/functional/example_test.py
MarcoFalke,2017-11-27T15:50:42Z,stylte-nit: Any reason for this change? I think the previous is easier to read python code.,https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153235647,153235647,test/functional/test_framework/test_node.py
jnewbery,2017-11-27T17:45:32Z,"There's some discussion of the differences here: https://stackoverflow.com/questions/850795/different-ways-of-clearing-lists\n\nIf there was a different reference to this array, then `self.p2ps = []` wouldn't clear that array, it would just change `self.p2ps` to point to a new, empty array.\n\nPractically, there's not much difference, but I think I prefer `del self.p2ps[:]`. I actually got thi",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153271032,153271032,test/functional/test_framework/test_node.py
MarcoFalke,2017-11-27T20:08:09Z,"Ok, fine to keep, since it is ever-so-slightly safer and already used by this syntax in `stop_node`",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153308295,153308295,test/functional/test_framework/test_node.py
ryanofsky,2017-11-27T20:19:46Z,Main reason for suggesting this is that having multiple instances of the same list can make things confusing when you are debugging.,https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153311144,153311144,test/functional/test_framework/test_node.py
ryanofsky,2017-11-27T22:35:43Z,"In commit ""[tests] Tidy up mininode""\n\nThink you missed the readble() function above. Would be good to note that is an asyncore callback like writeable().",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153345038,153345038,test/functional/test_framework/mininode.py
ryanofsky,2017-11-27T22:42:01Z,"In commit ""[tests] Tidy up mininode""\n\nSeems like this method should begin with an underscore (like `_log_message` below), since this is part of the read handler, and not something that should be called externally. I also think a name like `_got_data` `_on_data` `_handle_data` `_process_messages` might be more descriptive since `read_message` suggests a method that blocks waiting for a message ",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153346353,153346353,test/functional/test_framework/mininode.py
ryanofsky,2017-11-27T22:44:47Z,"In commit ""[tests] Tidy up mininode""\n\nWould change ""a message"" to ""messages"" everywhere since this can parse more than just one message.",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153346970,153346970,test/functional/test_framework/mininode.py
ryanofsky,2017-11-27T23:06:08Z,"In commit ""[tests] Make NodeConnCB a subclass of NodeConn""\n\nMaybe keep assigning nServices/messages_count/last_message/ping_counter members that don't depend on connection information in `__init__` rather than `peer_connect`. This would mean you don't need to introduce a `NodeConnCB.peer_connect` method in this commit, and in the next commit it can be a shorter, more focused override. Just a s",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153351274,153351274,test/functional/test_framework/mininode.py
jnewbery,2017-11-28T17:14:11Z,"We can actually just remove the `readable()` override entirely. From https://docs.python.org/3.6/library/asyncore.html#asyncore.dispatcher.readable : ""The default method simply returns True, indicating that by default, all channels will be interested in read events."" so this override isn't actually doing anything.\n\nI'll update the commit.",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153561233,153561233,test/functional/test_framework/mininode.py
jnewbery,2017-11-28T17:29:55Z,Agree. Changed to `_on_data`.,https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153565721,153565721,test/functional/test_framework/mininode.py
jnewbery,2017-11-28T17:30:03Z,Yes. Fixed.,https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153565768,153565768,test/functional/test_framework/mininode.py
jnewbery,2017-11-28T17:47:53Z,Agree. Makes more sense. Thanks.,https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153570501,153570501,test/functional/test_framework/mininode.py
MarcoFalke,2017-11-29T19:14:19Z,"nit: I'd rather do the opposite and disallow passing through unnamed args here. Forcing code to be explicit should be safer and ease future review, imo.\n\n ```py\ndef add_p2p_connection(self, p2p_conn, *, **kwargs)\n```",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153886852,153886852,test/functional/test_framework/test_node.py
ryanofsky,2017-11-29T20:37:18Z,"If the goal is to disallow unnamed arguments, this place to do is where the arguments are actually declared (in the peer_connect method). If you make that change here instead of there, you will be introducing an inconsistency between add_p2p_connection and peer_connect. It is better for testnode to just forward arguments on to peernode, instead making unnecessary assumptions about how it works int",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153908010,153908010,test/functional/test_framework/test_node.py
jnewbery,2017-11-29T21:03:04Z,I think @ryanofsky is right - the right place for this is in `NodeConnCB.peer_connect()`. Can we leave that for a future PR?,https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153914112,153914112,test/functional/test_framework/test_node.py
MarcoFalke,2017-11-29T21:25:44Z,"@jnewbery Sure, future PR sounds good.",https://github.com/bitcoin/bitcoin/pull/11712#discussion_r153919426,153919426,test/functional/test_framework/test_node.py
