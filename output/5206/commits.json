[
  {
    "sha": "81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWI5OWJhNWY2ZWRkMjdhOWEwZTY2NDk0YWI3YTA4YjliYzAxNWQ0",
    "commit": {
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2014-11-04T17:30:31Z"
      },
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2014-11-08T13:51:05Z"
      },
      "message": "CCoinsViewMemPool cleanup\n\nMove the mempool lock into CCoinsViewMemPool, since the existing code\nalways manually locks the mempool (with the lock having same lifetime\nas the view!).\n\nMove a call to CMempool::pruneSpent into CCoinsViewMemPool::GetCoins,\nsince CCoinsViewMemPool::GetCoins is called only once in the codebase,\nfollowed by a call to pruneSpent with a `TODO` suggesting it be moved.",
      "tree": {
        "sha": "64eec9f1b67d3e2501fe09b6678475b840238529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64eec9f1b67d3e2501fe09b6678475b840238529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/comments",
    "author": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ea87f9e187da41964c3cafdadf54b2f767c3450",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ea87f9e187da41964c3cafdadf54b2f767c3450",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ea87f9e187da41964c3cafdadf54b2f767c3450"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "02797e1a214cc6e40d66862bff655dcaed3d2ee1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
        "patch": "@@ -940,7 +940,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         CAmount nValueIn = 0;\n         {\n-        LOCK(pool.cs);\n         CCoinsViewMemPool viewMemPool(pcoinsTip, pool);\n         view.SetBackend(viewMemPool);\n "
      },
      {
        "sha": "28938633e1cc4cedb7b638f9887ba322b41a630c",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
        "patch": "@@ -381,11 +381,9 @@ Value gettxout(const Array& params, bool fHelp)\n \n     CCoins coins;\n     if (fMempool) {\n-        LOCK(mempool.cs);\n         CCoinsViewMemPool view(pcoinsTip, mempool);\n         if (!view.GetCoins(hash, coins))\n             return Value::null;\n-        mempool.pruneSpent(hash, coins); // TODO: this should be done by the CCoinsViewMemPool\n     } else {\n         if (!pcoinsTip->GetCoins(hash, coins))\n             return Value::null;"
      },
      {
        "sha": "86b7d09989d773f1fdb461b9703685eb5d045d22",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
        "patch": "@@ -562,7 +562,6 @@ Value signrawtransaction(const Array& params, bool fHelp)\n     CCoinsView viewDummy;\n     CCoinsViewCache view(&viewDummy);\n     {\n-        LOCK(mempool.cs);\n         CCoinsViewCache &viewChain = *pcoinsTip;\n         CCoinsViewMemPool viewMempool(&viewChain, mempool);\n         view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view"
      },
      {
        "sha": "b8367f368c3dd666950ab375b7e096dce4d17925",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
        "patch": "@@ -633,7 +633,10 @@ void CTxMemPool::ClearPrioritisation(const uint256 hash)\n }\n \n \n-CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n+CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn)\n+    : CCoinsViewBacked(baseIn),\n+      criticalBlock(mempoolIn.cs, \"CCoinsViewMemPool_lock\", __FILE__, __LINE__),\n+      mempool(mempoolIn) {}\n \n bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     // If an entry in the mempool exists, always return that one, as it's guaranteed to never\n@@ -642,6 +645,7 @@ bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     CTransaction tx;\n     if (mempool.lookup(txid, tx)) {\n         coins = CCoins(tx, MEMPOOL_HEIGHT);\n+        mempool.pruneSpent(txid, coins);\n         return true;\n     }\n     return (base->GetCoins(txid, coins) && !coins.IsPruned());"
      },
      {
        "sha": "f8499aab222b10f9bf58c99abae27809af4d967f",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=81b99ba5f6edd27a9a0e66494ab7a08b9bc015d4",
        "patch": "@@ -157,6 +157,7 @@ class CTxMemPool\n class CCoinsViewMemPool : public CCoinsViewBacked\n {\n protected:\n+    CCriticalBlock criticalBlock;\n     CTxMemPool &mempool;\n \n public:"
      }
    ]
  }
]