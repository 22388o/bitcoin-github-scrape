[
  {
    "sha": "d5b41e6b2ed9d864934d9a28325f59f038032af5",
    "node_id": "C_kwDOABII59oAKGQ1YjQxZTZiMmVkOWQ4NjQ5MzRkOWEyODMyNWY1OWYwMzgwMzJhZjU",
    "commit": {
      "author": {
        "name": "Lawrence Nahum",
        "email": "lawrence@greenaddress.it",
        "date": "2021-10-29T15:39:28Z"
      },
      "committer": {
        "name": "Lawrence Nahum",
        "email": "lawrence@greenaddress.it",
        "date": "2021-11-01T20:31:53Z"
      },
      "message": "add support to save fee estimates without shutting down the node",
      "tree": {
        "sha": "d5c713c3e108d0d38acf9796265275fe3356fa93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5c713c3e108d0d38acf9796265275fe3356fa93"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5b41e6b2ed9d864934d9a28325f59f038032af5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEs3VJeyGdexbujr8sF6uLwyCxUdgFAmGATrkACgkQF6uLwyCx\nUdhDUAf8C0emAIyXlCAJ7oQ1GVjIPlFwDgeLe67vfvkXRgGhKpQW05vSUIew6ync\n2is5wHYXcv9eng5EsYHsXgStM+rm/CH0Y3MqgpHbQwS+EgJ278HFWL2qBrL/IDnP\nku03Ru4+FwdP6EOoA+1p+jCrDaqcO6WylOoK1NS19kUcd47qbTkcYv9yo0fjovf7\n6/f8eUDJE6I6K+Du0liKK2Q93Vy6ldpEpldgsvppN9RM3+gPOyOCZcVGZVqD9aNG\nLhld4OhSDJp1ugH9jjDCrp6eyXYjODy6/nBT+4YFAmDh3sd5kJ7MbTPwJ7qEFF7R\nms3GEQjUWZuiRYaOc5i4NQkzXxCmSQ==\n=Hi2u\n-----END PGP SIGNATURE-----",
        "payload": "tree d5c713c3e108d0d38acf9796265275fe3356fa93\nparent 5adc5c02800f00d1e6e8812a2b0559b1800e82e9\nauthor Lawrence Nahum <lawrence@greenaddress.it> 1635521968 +0200\ncommitter Lawrence Nahum <lawrence@greenaddress.it> 1635798713 +0100\n\nadd support to save fee estimates without shutting down the node\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5b41e6b2ed9d864934d9a28325f59f038032af5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5b41e6b2ed9d864934d9a28325f59f038032af5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5b41e6b2ed9d864934d9a28325f59f038032af5/comments",
    "author": {
      "login": "greenaddress",
      "id": 5269298,
      "node_id": "MDQ6VXNlcjUyNjkyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greenaddress",
      "html_url": "https://github.com/greenaddress",
      "followers_url": "https://api.github.com/users/greenaddress/followers",
      "following_url": "https://api.github.com/users/greenaddress/following{/other_user}",
      "gists_url": "https://api.github.com/users/greenaddress/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
      "organizations_url": "https://api.github.com/users/greenaddress/orgs",
      "repos_url": "https://api.github.com/users/greenaddress/repos",
      "events_url": "https://api.github.com/users/greenaddress/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greenaddress/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "greenaddress",
      "id": 5269298,
      "node_id": "MDQ6VXNlcjUyNjkyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greenaddress",
      "html_url": "https://github.com/greenaddress",
      "followers_url": "https://api.github.com/users/greenaddress/followers",
      "following_url": "https://api.github.com/users/greenaddress/following{/other_user}",
      "gists_url": "https://api.github.com/users/greenaddress/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
      "organizations_url": "https://api.github.com/users/greenaddress/orgs",
      "repos_url": "https://api.github.com/users/greenaddress/repos",
      "events_url": "https://api.github.com/users/greenaddress/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greenaddress/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5adc5c02800f00d1e6e8812a2b0559b1800e82e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5adc5c02800f00d1e6e8812a2b0559b1800e82e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5adc5c02800f00d1e6e8812a2b0559b1800e82e9"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 98,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e4f52a1fd999adefaeeb330531bb5dd470fb238d",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=d5b41e6b2ed9d864934d9a28325f59f038032af5",
        "patch": "@@ -883,12 +883,7 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation\n \n void CBlockPolicyEstimator::Flush() {\n     FlushUnconfirmed();\n-\n-    fs::path est_filepath = gArgs.GetDataDirNet() / FEE_ESTIMATES_FILENAME;\n-    CAutoFile est_file(fsbridge::fopen(est_filepath, \"wb\"), SER_DISK, CLIENT_VERSION);\n-    if (est_file.IsNull() || !Write(est_file)) {\n-        LogPrintf(\"Failed to write fee estimates to %s. Continue anyway.\\n\", fs::PathToString(est_filepath));\n-    }\n+    Write();\n }\n \n bool CBlockPolicyEstimator::Write(CAutoFile& fileout) const\n@@ -916,6 +911,17 @@ bool CBlockPolicyEstimator::Write(CAutoFile& fileout) const\n     return true;\n }\n \n+bool CBlockPolicyEstimator::Write() const\n+{\n+    fs::path est_filepath = gArgs.GetDataDirNet() / FEE_ESTIMATES_FILENAME;\n+    CAutoFile est_file(fsbridge::fopen(est_filepath, \"wb\"), SER_DISK, CLIENT_VERSION);\n+    if (est_file.IsNull() || !Write(est_file)) {\n+        LogPrintf(\"Failed to write fee estimates to %s. Continue anyway.\\n\", fs::PathToString(est_filepath));\n+        return false;\n+    }\n+    return true;\n+}\n+\n bool CBlockPolicyEstimator::Read(CAutoFile& filein)\n {\n     try {"
      },
      {
        "sha": "03f44f109713b6bb459bf409b9b95fb148a5ca04",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=d5b41e6b2ed9d864934d9a28325f59f038032af5",
        "patch": "@@ -213,6 +213,9 @@ class CBlockPolicyEstimator\n     /** Write estimation data to a file */\n     bool Write(CAutoFile& fileout) const;\n \n+    /** Write estimation data to the default file */\n+    bool Write() const;\n+\n     /** Read estimation data from a file */\n     bool Read(CAutoFile& filein);\n "
      },
      {
        "sha": "13d4fa0e0ceb19d950817c5861cf1036b84f5417",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=d5b41e6b2ed9d864934d9a28325f59f038032af5",
        "patch": "@@ -14,6 +14,7 @@\n #include <key_io.h>\n #include <node/context.h>\n #include <outputtype.h>\n+#include <policy/fees.h>\n #include <rpc/blockchain.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n@@ -337,6 +338,31 @@ static RPCHelpMan verifymessage()\n     };\n }\n \n+static RPCHelpMan savefeeestimates()\n+{\n+    return RPCHelpMan{\"savefeeestimates\",\n+                \"\\nDumps the fee estimates to disk. It will fail until the previous dump is fully loaded.\\n\",\n+                {},\n+                RPCResult{RPCResult::Type::NONE, \"\", \"\"},\n+                RPCExamples{\n+                    HelpExampleCli(\"savefeeestimates\", \"\")\n+            + HelpExampleRpc(\"savefeeestimates\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    static Mutex dump_mutex;\n+    LOCK(dump_mutex);\n+    CBlockPolicyEstimator& fee_estimator = EnsureAnyFeeEstimator(request.context);\n+\n+    if (!fee_estimator.Write()) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Unable to dump fee estimates to disk\");\n+    }\n+\n+    return NullUniValue;\n+},\n+    };\n+}\n+\n static RPCHelpMan signmessagewithprivkey()\n {\n     return RPCHelpMan{\"signmessagewithprivkey\",\n@@ -790,6 +816,7 @@ static const CRPCCommand commands[] =\n     { \"util\",               &deriveaddresses,         },\n     { \"util\",               &getdescriptorinfo,       },\n     { \"util\",               &verifymessage,           },\n+    { \"util\",               &savefeeestimates,        },\n     { \"util\",               &signmessagewithprivkey,  },\n     { \"util\",               &getindexinfo,            },\n "
      },
      {
        "sha": "df41004faa1dca35be236589b2dcf9b3647ba1a1",
        "filename": "src/test/fuzz/rpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/test/fuzz/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b41e6b2ed9d864934d9a28325f59f038032af5/src/test/fuzz/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rpc.cpp?ref=d5b41e6b2ed9d864934d9a28325f59f038032af5",
        "patch": "@@ -76,6 +76,7 @@ const std::vector<std::string> RPC_COMMANDS_NOT_SAFE_FOR_FUZZING{\n     \"importwallet\", // avoid reading from disk\n     \"loadwallet\",   // avoid reading from disk\n     \"prioritisetransaction\", // avoid signed integer overflow in CTxMemPool::PrioritiseTransaction(uint256 const&, long const&) (https://github.com/bitcoin/bitcoin/issues/20626)\n+    \"savefeeestimates\",      // disabled as a precautionary measure: may take a file path argument in the future\n     \"savemempool\",           // disabled as a precautionary measure: may take a file path argument in the future\n     \"setban\",                // avoid DNS lookups\n     \"stop\",                  // avoid shutdown state"
      },
      {
        "sha": "c6d82345b3ad6c38427483fe22e4caab3bae7f1f",
        "filename": "test/functional/feature_fee_estimates_persist.py",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b41e6b2ed9d864934d9a28325f59f038032af5/test/functional/feature_fee_estimates_persist.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b41e6b2ed9d864934d9a28325f59f038032af5/test/functional/feature_fee_estimates_persist.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimates_persist.py?ref=d5b41e6b2ed9d864934d9a28325f59f038032af5",
        "patch": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test fee estimates persistence.\n+\n+By default, bitcoind will dump fee estimates on shutdown and\n+then reload it on startup.\n+\n+Test is as follows:\n+\n+  - start node0\n+  - call the savefeeestimates RPC and verify the RPC succeeds and\n+    that the file exists\n+  - make the file read only and attempt to call the savefeeestimates RPC\n+    with the expecation that it will fail\n+  - move the read only file and shut down the node, verify the node writes\n+    on shutdown a file that is identical to the one we saved via the RPC\n+\n+\"\"\"\n+\n+import filecmp\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n+\n+\n+class FeeEstimatesPersistTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        fee_estimatesdat = os.path.join(self.nodes[0].datadir, self.chain, 'fee_estimates.dat')\n+        self.log.debug('Verify the fee_estimates.dat file does not exists on start up')\n+        assert not os.path.isfile(fee_estimatesdat)\n+        self.nodes[0].savefeeestimates()\n+        self.log.debug('Verify the fee_estimates.dat file exists after calling savefeeestimates RPC')\n+        assert os.path.isfile(fee_estimatesdat)\n+        self.log.debug(\"Prevent bitcoind from writing fee_estimates.dat to disk. Verify that `savefeeestimates` fails\")\n+        fee_estimatesdatold = fee_estimatesdat + '.old'\n+        os.rename(fee_estimatesdat, fee_estimatesdatold)\n+        os.mkdir(fee_estimatesdat)\n+        assert_raises_rpc_error(-1, \"Unable to dump fee estimates to disk\", self.nodes[0].savefeeestimates)\n+        os.rmdir(fee_estimatesdat)\n+        self.stop_nodes()\n+        self.log.debug(\"Verify that fee_estimates are written on shutdown\")\n+        assert os.path.isfile(fee_estimatesdat)\n+        self.log.debug(\"Verify that the fee estimates from a shutdown are identical from the ones from savefeeestimates\")\n+        assert filecmp.cmp(fee_estimatesdat, fee_estimatesdatold)\n+\n+\n+if __name__ == \"__main__\":\n+    FeeEstimatesPersistTest().main()"
      },
      {
        "sha": "e612a92a44c2c611df36e0198d0249b96d1807b7",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b41e6b2ed9d864934d9a28325f59f038032af5/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b41e6b2ed9d864934d9a28325f59f038032af5/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=d5b41e6b2ed9d864934d9a28325f59f038032af5",
        "patch": "@@ -135,6 +135,7 @@\n     # vv Tests less than 30s vv\n     'wallet_keypool_topup.py --legacy-wallet',\n     'wallet_keypool_topup.py --descriptors',\n+    'feature_fee_estimates_persist.py',\n     'feature_fee_estimation.py',\n     'interface_zmq.py',\n     'rpc_invalid_address_message.py',"
      }
    ]
  }
]