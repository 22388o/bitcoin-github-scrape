[
  {
    "sha": "02a337defdd854efc78ecba6d1fb19cb1c075f16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmEzMzdkZWZkZDg1NGVmYzc4ZWNiYTZkMWZiMTljYjFjMDc1ZjE2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-06-21T20:08:29Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-17T14:44:57Z"
      },
      "message": "Dont remove a \"preferred\" cmpctblock peer if they provide a block",
      "tree": {
        "sha": "15e2aa39b57368a77e4f6e9fff235ff0f2484e2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15e2aa39b57368a77e4f6e9fff235ff0f2484e2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02a337defdd854efc78ecba6d1fb19cb1c075f16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a337defdd854efc78ecba6d1fb19cb1c075f16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02a337defdd854efc78ecba6d1fb19cb1c075f16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a337defdd854efc78ecba6d1fb19cb1c075f16/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c90111314435ab67808a89cac1a664cb19eafd61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c90111314435ab67808a89cac1a664cb19eafd61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c90111314435ab67808a89cac1a664cb19eafd61"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e27fb1fae6a504e7db5ff27fa6cdf5d1c72645df",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a337defdd854efc78ecba6d1fb19cb1c075f16/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a337defdd854efc78ecba6d1fb19cb1c075f16/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=02a337defdd854efc78ecba6d1fb19cb1c075f16",
        "patch": "@@ -485,9 +485,13 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(const CNodeState* nodestate, CNode* pf\n         return;\n     }\n     if (nodestate->fProvidesHeaderAndIDs) {\n-        BOOST_FOREACH(const NodeId nodeid, lNodesAnnouncingHeaderAndIDs)\n-            if (nodeid == pfrom->GetId())\n+        for (std::list<NodeId>::iterator it = lNodesAnnouncingHeaderAndIDs.begin(); it != lNodesAnnouncingHeaderAndIDs.end(); it++) {\n+            if (*it == pfrom->GetId()) {\n+                lNodesAnnouncingHeaderAndIDs.erase(it);\n+                lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\n                 return;\n+            }\n+        }\n         bool fAnnounceUsingCMPCTBLOCK = false;\n         uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n         if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n@@ -5731,6 +5735,12 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     return true;\n                 }\n \n+                if (!fAlreadyInFlight && mapBlocksInFlight.size() == 1 && pindex->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n+                    // with this block! Let's get them to announce using compact blocks in the future.\n+                    MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n+                }\n+\n                 BlockTransactionsRequest req;\n                 for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n                     if (!partialBlock.IsTxAvailable(i))"
      }
    ]
  },
  {
    "sha": "fe998e962dc015978f104b782afb7daec3c4d4df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTk5OGU5NjJkYzAxNTk3OGYxMDRiNzgyYWZiN2RhZWMzYzRkNGRm",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-06-21T23:28:38Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-17T14:44:57Z"
      },
      "message": "More agressively filter compact block requests\n\nUnit test adaptations by Pieter Wuille.",
      "tree": {
        "sha": "b9b4c1e3ba1e107db8a0d0f3b3e52ad02c2a3915",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9b4c1e3ba1e107db8a0d0f3b3e52ad02c2a3915"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe998e962dc015978f104b782afb7daec3c4d4df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe998e962dc015978f104b782afb7daec3c4d4df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe998e962dc015978f104b782afb7daec3c4d4df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe998e962dc015978f104b782afb7daec3c4d4df/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02a337defdd854efc78ecba6d1fb19cb1c075f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a337defdd854efc78ecba6d1fb19cb1c075f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02a337defdd854efc78ecba6d1fb19cb1c075f16"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a24066b0773f20ca45193ba5ce6480083c55aa4c",
        "filename": "qa/rpc-tests/p2p-compactblocks.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe998e962dc015978f104b782afb7daec3c4d4df/qa/rpc-tests/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe998e962dc015978f104b782afb7daec3c4d4df/qa/rpc-tests/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-compactblocks.py?ref=fe998e962dc015978f104b782afb7daec3c4d4df",
        "patch": "@@ -591,7 +591,7 @@ def test_incorrect_blocktxn_response(self, node, test_node, version):\n     def test_getblocktxn_handler(self, node, test_node, version):\n         # bitcoind won't respond for blocks whose height is more than 15 blocks\n         # deep.\n-        MAX_GETBLOCKTXN_DEPTH = 15\n+        MAX_GETBLOCKTXN_DEPTH = 10\n         chain_height = node.getblockcount()\n         current_height = chain_height\n         while (current_height >= chain_height - MAX_GETBLOCKTXN_DEPTH):\n@@ -632,7 +632,7 @@ def test_getblocktxn_handler(self, node, test_node, version):\n \n     def test_compactblocks_not_at_tip(self, node, test_node):\n         # Test that requesting old compactblocks doesn't work.\n-        MAX_CMPCTBLOCK_DEPTH = 11\n+        MAX_CMPCTBLOCK_DEPTH = 6\n         new_blocks = []\n         for i in range(MAX_CMPCTBLOCK_DEPTH):\n             test_node.clear_block_announcement()"
      },
      {
        "sha": "0002a1c08ff3daeda598a73d66ad1b761a96cb7d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe998e962dc015978f104b782afb7daec3c4d4df/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe998e962dc015978f104b782afb7daec3c4d4df/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=fe998e962dc015978f104b782afb7daec3c4d4df",
        "patch": "@@ -4878,7 +4878,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         // and we don't feel like constructing the object for them, so\n                         // instead we respond with the full, non-compact block.\n                         bool fPeerWantsWitness = State(pfrom->GetId())->fWantsCmpctWitness;\n-                        if (mi->second->nHeight >= chainActive.Height() - 10) {\n+                        if (CanDirectFetch(Params().GetConsensus()) && mi->second->nHeight >= chainActive.Height() - 5) {\n                             CBlockHeaderAndShortTxIDs cmpctblock(block, fPeerWantsWitness);\n                             pfrom->PushMessageWithFlag(fPeerWantsWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::CMPCTBLOCK, cmpctblock);\n                         } else\n@@ -5405,8 +5405,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             return true;\n         }\n \n-        if (it->second->nHeight < chainActive.Height() - 15) {\n-            LogPrint(\"net\", \"Peer %d sent us a getblocktxn for a block > 15 deep\", pfrom->id);\n+        if (it->second->nHeight < chainActive.Height() - 10) {\n+            LogPrint(\"net\", \"Peer %d sent us a getblocktxn for a block > 10 deep\", pfrom->id);\n             return true;\n         }\n "
      }
    ]
  },
  {
    "sha": "b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmU5M2EzNDNlYzJkYzdkMjU1Yjk3MGU2ZWU0NWU5YzM5MGY3ZWQw",
    "commit": {
      "author": {
        "name": "instagibbs",
        "email": "gsanders87@gmail.com",
        "date": "2016-06-22T12:18:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-17T14:44:57Z"
      },
      "message": "Add cmpctblock to debug help list",
      "tree": {
        "sha": "02100d218ed38600b752f1a6dcef885b14db8bd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02100d218ed38600b752f1a6dcef885b14db8bd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe998e962dc015978f104b782afb7daec3c4d4df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe998e962dc015978f104b782afb7daec3c4d4df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe998e962dc015978f104b782afb7daec3c4d4df"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "685188c4584625ba0599fa5a1f8a63b1e6c5fe25",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
        "patch": "@@ -423,7 +423,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-bip9params=deployment:start:end\", \"Use given start/end times for specified BIP9 deployment (regtest-only)\");\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, cmpctblock, coindb, db, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +"
      }
    ]
  },
  {
    "sha": "3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWM2ZGUwYTA0NWNjOWIyMDQ3Y2ViMTlhZjk3MGU3ZmZiZjkwNWZh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-08-31T15:35:59Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-17T14:46:30Z"
      },
      "message": "Align constant names for maximum compact block / blocktxn depth",
      "tree": {
        "sha": "db39a34fe1c247bf8b42c05c2bcbf20b4ac3903c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db39a34fe1c247bf8b42c05c2bcbf20b4ac3903c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2e93a343ec2dc7d255b970e6ee45e9c390f7ed0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 10,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6b5d4771310778e617cc4192b68f68c49502787e",
        "filename": "qa/rpc-tests/p2p-compactblocks.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/qa/rpc-tests/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/qa/rpc-tests/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-compactblocks.py?ref=3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
        "patch": "@@ -632,9 +632,9 @@ def test_getblocktxn_handler(self, node, test_node, version):\n \n     def test_compactblocks_not_at_tip(self, node, test_node):\n         # Test that requesting old compactblocks doesn't work.\n-        MAX_CMPCTBLOCK_DEPTH = 6\n+        MAX_CMPCTBLOCK_DEPTH = 5\n         new_blocks = []\n-        for i in range(MAX_CMPCTBLOCK_DEPTH):\n+        for i in range(MAX_CMPCTBLOCK_DEPTH + 1):\n             test_node.clear_block_announcement()\n             new_blocks.append(node.generate(1)[0])\n             wait_until(test_node.received_block_announcement, timeout=30)"
      },
      {
        "sha": "7e274285138308810239638c136225223bddc319",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
        "patch": "@@ -4878,7 +4878,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         // and we don't feel like constructing the object for them, so\n                         // instead we respond with the full, non-compact block.\n                         bool fPeerWantsWitness = State(pfrom->GetId())->fWantsCmpctWitness;\n-                        if (CanDirectFetch(Params().GetConsensus()) && mi->second->nHeight >= chainActive.Height() - 5) {\n+                        if (CanDirectFetch(consensusParams) && mi->second->nHeight >= chainActive.Height() - MAX_CMPCTBLOCK_DEPTH) {\n                             CBlockHeaderAndShortTxIDs cmpctblock(block, fPeerWantsWitness);\n                             pfrom->PushMessageWithFlag(fPeerWantsWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::CMPCTBLOCK, cmpctblock);\n                         } else\n@@ -5405,8 +5405,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             return true;\n         }\n \n-        if (it->second->nHeight < chainActive.Height() - 10) {\n-            LogPrint(\"net\", \"Peer %d sent us a getblocktxn for a block > 10 deep\", pfrom->id);\n+        if (it->second->nHeight < chainActive.Height() - MAX_BLOCKTXN_DEPTH) {\n+            LogPrint(\"net\", \"Peer %d sent us a getblocktxn for a block > %i deep\", pfrom->id, MAX_BLOCKTXN_DEPTH);\n             return true;\n         }\n "
      },
      {
        "sha": "db58b274872b1514c87dc6dde999d414b488e954",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac6de0a045cc9b2047ceb19af970e7ffbf905fa/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=3ac6de0a045cc9b2047ceb19af970e7ffbf905fa",
        "patch": "@@ -90,6 +90,11 @@ static const unsigned int BLOCK_STALLING_TIMEOUT = 2;\n /** Number of headers sent in one getheaders result. We rely on the assumption that if a peer sends\n  *  less than this number, we reached its tip. Changing this value is a protocol upgrade. */\n static const unsigned int MAX_HEADERS_RESULTS = 2000;\n+/** Maximum depth of blocks we're willing to serve as compact blocks to peers\n+ *  when requested. For older blocks, a regular BLOCK response will be sent. */\n+static const int MAX_CMPCTBLOCK_DEPTH = 5;\n+/** Maximum depth of blocks we're willing to respond to GETBLOCKTXN requests for. */\n+static const int MAX_BLOCKTXN_DEPTH = 10;\n /** Size of the \"block download window\": how far ahead of our current height do we fetch?\n  *  Larger windows tolerate larger download speed differences between peer, but increase the potential\n  *  degree of disordering of blocks on disk (which make reindexing and in the future perhaps pruning"
      }
    ]
  }
]