[
  {
    "sha": "d824ad030e70bc72e0c63e1b0d00b08413024b55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODI0YWQwMzBlNzBiYzcyZTBjNjNlMWIwZDAwYjA4NDEzMDI0YjU1",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T17:18:44Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T17:18:44Z"
      },
      "message": "Disable fee estimates for a confirm target of 1 block",
      "tree": {
        "sha": "4edc345a21147e3f4d69987db095857a2e3c1738",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4edc345a21147e3f4d69987db095857a2e3c1738"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d824ad030e70bc72e0c63e1b0d00b08413024b55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d824ad030e70bc72e0c63e1b0d00b08413024b55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d824ad030e70bc72e0c63e1b0d00b08413024b55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d824ad030e70bc72e0c63e1b0d00b08413024b55/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e56cf67e6b3f2e87bee42aaa5ab709f479c9e6ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e56cf67e6b3f2e87bee42aaa5ab709f479c9e6ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e56cf67e6b3f2e87bee42aaa5ab709f479c9e6ca"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 23,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9eb831bc17c42efd26a475d6451583d7183f5c49",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d824ad030e70bc72e0c63e1b0d00b08413024b55/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d824ad030e70bc72e0c63e1b0d00b08413024b55/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=d824ad030e70bc72e0c63e1b0d00b08413024b55",
        "patch": "@@ -404,7 +404,8 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n CFeeRate CBlockPolicyEstimator::estimateFee(int confTarget)\n {\n     // Return failure if trying to analyze a target we're not tracking\n-    if (confTarget <= 0 || (unsigned int)confTarget > feeStats.GetMaxConfirms())\n+    // It's not possible to get reasonable estimates for confTarget of 1\n+    if (confTarget <= 1 || (unsigned int)confTarget > feeStats.GetMaxConfirms())\n         return CFeeRate(0);\n \n     double median = feeStats.EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);\n@@ -423,6 +424,10 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoun\n     if (confTarget <= 0 || (unsigned int)confTarget > feeStats.GetMaxConfirms())\n         return CFeeRate(0);\n \n+    // It's not possible to get reasonable estimates for confTarget of 1\n+    if (confTarget == 1)\n+        confTarget = 2;\n+\n     double median = -1;\n     while (median < 0 && (unsigned int)confTarget <= feeStats.GetMaxConfirms()) {\n         median = feeStats.EstimateMedianVal(confTarget++, SUFFICIENT_FEETXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);"
      },
      {
        "sha": "c2e5791572d32b08f84c40d6852d945e4896ec67",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d824ad030e70bc72e0c63e1b0d00b08413024b55/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d824ad030e70bc72e0c63e1b0d00b08413024b55/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=d824ad030e70bc72e0c63e1b0d00b08413024b55",
        "patch": "@@ -785,6 +785,8 @@ UniValue estimatefee(const JSONRPCRequest& request)\n             \"\\n\"\n             \"A negative value is returned if not enough transactions and blocks\\n\"\n             \"have been observed to make an estimate.\\n\"\n+            \"-1 is always returned for nblocks == 1 as it is impossible to calculate\\n\"\n+            \"a fee that is high enough to get reliably included in the next block.\\n\"\n             \"\\nExample:\\n\"\n             + HelpExampleCli(\"estimatefee\", \"6\")\n             );"
      },
      {
        "sha": "c57feaec909a5ccca7f3dafd084e7ff2efa70f17",
        "filename": "src/test/policyestimator_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d824ad030e70bc72e0c63e1b0d00b08413024b55/src/test/policyestimator_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d824ad030e70bc72e0c63e1b0d00b08413024b55/src/test/policyestimator_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/policyestimator_tests.cpp?ref=d824ad030e70bc72e0c63e1b0d00b08413024b55",
        "patch": "@@ -95,25 +95,31 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n     // Highest feerate is 10*baseRate and gets in all blocks,\n     // second highest feerate is 9*baseRate and gets in 9/10 blocks = 90%,\n     // third highest feerate is 8*base rate, and gets in 8/10 blocks = 80%,\n-    // so estimateFee(1) should return 10*baseRate.\n+    // so estimateFee(1) would return 10*baseRate but is hardcoded to return failure\n     // Second highest feerate has 100% chance of being included by 2 blocks,\n     // so estimateFee(2) should return 9*baseRate etc...\n     for (int i = 1; i < 10;i++) {\n         origFeeEst.push_back(mpool.estimateFee(i).GetFeePerK());\n-        if (i > 1) { // Fee estimates should be monotonically decreasing\n+        if (i > 2) { // Fee estimates should be monotonically decreasing\n             BOOST_CHECK(origFeeEst[i-1] <= origFeeEst[i-2]);\n         }\n         int mult = 11-i;\n-        BOOST_CHECK(origFeeEst[i-1] < mult*baseRate.GetFeePerK() + deltaFee);\n-        BOOST_CHECK(origFeeEst[i-1] > mult*baseRate.GetFeePerK() - deltaFee);\n+        if (i > 1) {\n+            BOOST_CHECK(origFeeEst[i-1] < mult*baseRate.GetFeePerK() + deltaFee);\n+            BOOST_CHECK(origFeeEst[i-1] > mult*baseRate.GetFeePerK() - deltaFee);\n+        }\n+        else {\n+            BOOST_CHECK(origFeeEst[i-1] == CFeeRate(0).GetFeePerK());\n+        }\n     }\n \n     // Mine 50 more blocks with no transactions happening, estimates shouldn't change\n     // We haven't decayed the moving average enough so we still have enough data points in every bucket\n     while (blocknum < 250)\n         mpool.removeForBlock(block, ++blocknum);\n \n-    for (int i = 1; i < 10;i++) {\n+    BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n+    for (int i = 2; i < 10;i++) {\n         BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() < origFeeEst[i-1] + deltaFee);\n         BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n     }\n@@ -151,7 +157,8 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n     }\n     mpool.removeForBlock(block, 265);\n     block.clear();\n-    for (int i = 1; i < 10;i++) {\n+    BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n+    for (int i = 2; i < 10;i++) {\n         BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n     }\n \n@@ -172,7 +179,8 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n         mpool.removeForBlock(block, ++blocknum);\n         block.clear();\n     }\n-    for (int i = 1; i < 10; i++) {\n+    BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n+    for (int i = 2; i < 10; i++) {\n         BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() < origFeeEst[i-1] - deltaFee);\n     }\n "
      }
    ]
  },
  {
    "sha": "e878689e5539d8de30283d1461d6466eac65f894",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODc4Njg5ZTU1MzlkOGRlMzAyODNkMTQ2MWQ2NDY2ZWFjNjVmODk0",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T17:49:03Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T17:49:03Z"
      },
      "message": "Make GUI incapable of setting tx confirm target of 1",
      "tree": {
        "sha": "796eb2cdaae8202c51db36758b600f691ce40816",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/796eb2cdaae8202c51db36758b600f691ce40816"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e878689e5539d8de30283d1461d6466eac65f894",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e878689e5539d8de30283d1461d6466eac65f894",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e878689e5539d8de30283d1461d6466eac65f894",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e878689e5539d8de30283d1461d6466eac65f894/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d824ad030e70bc72e0c63e1b0d00b08413024b55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d824ad030e70bc72e0c63e1b0d00b08413024b55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d824ad030e70bc72e0c63e1b0d00b08413024b55"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "0a8afa2e76e49f976f3858d97f5ad2411d504265",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e878689e5539d8de30283d1461d6466eac65f894/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e878689e5539d8de30283d1461d6466eac65f894/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=e878689e5539d8de30283d1461d6466eac65f894",
        "patch": "@@ -1064,7 +1064,7 @@\n                       <number>0</number>\n                      </property>\n                      <property name=\"maximum\">\n-                      <number>24</number>\n+                      <number>23</number>\n                      </property>\n                      <property name=\"pageStep\">\n                       <number>1</number>"
      },
      {
        "sha": "bd3f20e9dc220e9553a8783a108db8150048b25b",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e878689e5539d8de30283d1461d6466eac65f894/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e878689e5539d8de30283d1461d6466eac65f894/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=e878689e5539d8de30283d1461d6466eac65f894",
        "patch": "@@ -175,7 +175,7 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         // set the smartfee-sliders default value (wallets default conf.target or last stored value)\n         QSettings settings;\n         if (settings.value(\"nSmartFeeSliderPosition\").toInt() == 0)\n-            ui->sliderSmartFee->setValue(ui->sliderSmartFee->maximum() - model->getDefaultConfirmTarget() + 1);\n+            ui->sliderSmartFee->setValue(ui->sliderSmartFee->maximum() - model->getDefaultConfirmTarget() + 2);\n         else\n             ui->sliderSmartFee->setValue(settings.value(\"nSmartFeeSliderPosition\").toInt());\n     }\n@@ -241,7 +241,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     if (model->getOptionsModel()->getCoinControlFeatures())\n         ctrl = *CoinControlDialog::coinControl;\n     if (ui->radioSmartFee->isChecked())\n-        ctrl.nConfirmTarget = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 1;\n+        ctrl.nConfirmTarget = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 2;\n     else\n         ctrl.nConfirmTarget = 0;\n \n@@ -601,7 +601,7 @@ void SendCoinsDialog::updateGlobalFeeVariables()\n {\n     if (ui->radioSmartFee->isChecked())\n     {\n-        int nConfirmTarget = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 1;\n+        int nConfirmTarget = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 2;\n         payTxFee = CFeeRate(0);\n \n         // set nMinimumTotalFee to 0 to not accidentally pay a custom fee\n@@ -646,7 +646,7 @@ void SendCoinsDialog::updateSmartFeeLabel()\n     if(!model || !model->getOptionsModel())\n         return;\n \n-    int nBlocksToConfirm = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 1;\n+    int nBlocksToConfirm = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 2;\n     int estimateFoundAtBlocks = nBlocksToConfirm;\n     CFeeRate feeRate = mempool.estimateSmartFee(nBlocksToConfirm, &estimateFoundAtBlocks);\n     if (feeRate <= CFeeRate(0)) // not enough data => minfee"
      }
    ]
  }
]