[
  {
    "sha": "1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmYyYmI0ZTNlOGVkZmE2ODc5NzkyNmJlOGFhM2FiNTk0OWYyZTBj",
    "commit": {
      "author": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2017-05-02T07:32:21Z"
      },
      "committer": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2017-05-02T07:32:21Z"
      },
      "message": "Remove unused args from GetFetchhFlags()",
      "tree": {
        "sha": "f9239f05524de42333ca9de071436a571e2d46d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9239f05524de42333ca9de071436a571e2d46d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCgAGBQJZCDYqAAoJEMJrAopE8RGg3pkP/iIN27d6mazoDVzmUA/vNmpk\nDgFz/OZHSvlXOEKu4CdPmCA484p7Xle4f7QE/ZewKIf4eQATABlJu9ALhDVdYpCv\nQyjUrTd5bFkO+5/p1SrrkVB3TJ3cUihES4JSlSWl/DDW2FW/CgRhDDcdsOZZFWOc\nwD2ZFLyrbUUTspg58eo5E7UuR50agWOcJRJnNaUGzwCkDhFi3BQc1x5P+aCuKGz+\n/ge2uKlvIv8LF6kgLQxHW4ocspgffiVOw2PPehEed+lP/wtFDZZtZsPrOzPsfK4l\nianX5RG6wI6aVjt4P6x1EDIx8nvUU8pEvQCdDMTwBTH/q1ygdeaQF94h5AVSlspv\nTycleXvBet6fF1yKos9ky6uqkiwmWSBy0N7mFtyT70Uh9XKJ5akI+hA5dQvOfKcp\npjIexdfNYfQA04GE+1WO/uHzJJSRGh2xITVd7B8c0mOhUE6pszrmKBm1E0yH7wbD\nlQyWsrY5nMk0w2CgMWMy6TB87AKqsSQRlZFveDnMKfACY8dRbcM565Tct3g9O/K2\nubGA9H2aKXo/E09SSjZ3Jr9bT1uMtDQDmNJ/DRNXjviMDeO5/BUgekjU5pyqjWmc\n6Oz+ELT/K6wQf3sC91bfo8d5ZwApFKKF25FvnJJFJjq1SbqdahDKL8W3e4gyzTH6\ndBo1t90oVKaJRpWKO9Dp\n=Dq+6\n-----END PGP SIGNATURE-----",
        "payload": "tree f9239f05524de42333ca9de071436a571e2d46d1\nparent 0e8499c53f9e0f27d8cb2e3baa3a5fdf62b59ee1\nauthor BtcDrak <btcdrak@gmail.com> 1493710341 +0000\ncommitter BtcDrak <btcdrak@gmail.com> 1493710341 +0000\n\nRemove unused args from GetFetchhFlags()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c/comments",
    "author": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e8499c53f9e0f27d8cb2e3baa3a5fdf62b59ee1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e8499c53f9e0f27d8cb2e3baa3a5fdf62b59ee1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e8499c53f9e0f27d8cb2e3baa3a5fdf62b59ee1"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "debab436f6bc95db682128d379e695e68f2afd3c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=1ff2bb4e3e8edfa68797926be8aa3ab5949f2e0c",
        "patch": "@@ -1162,7 +1162,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n     }\n }\n \n-uint32_t GetFetchFlags(CNode* pfrom, const CBlockIndex* pprev, const Consensus::Params& chainparams) {\n+uint32_t GetFetchFlags(CNode* pfrom) {\n     uint32_t nFetchFlags = 0;\n     if ((pfrom->GetLocalServices() & NODE_WITNESS) && State(pfrom->GetId())->fHaveWitness) {\n         nFetchFlags |= MSG_WITNESS_FLAG;\n@@ -1550,7 +1550,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         LOCK(cs_main);\n \n-        uint32_t nFetchFlags = GetFetchFlags(pfrom, chainActive.Tip(), chainparams.GetConsensus());\n+        uint32_t nFetchFlags = GetFetchFlags(pfrom);\n \n         std::vector<CInv> vToFetch;\n \n@@ -1903,7 +1903,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 }\n             }\n             if (!fRejectedParents) {\n-                uint32_t nFetchFlags = GetFetchFlags(pfrom, chainActive.Tip(), chainparams.GetConsensus());\n+                uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n                     CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n                     pfrom->AddInventoryKnown(_inv);\n@@ -2040,7 +2040,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // We requested this block for some reason, but our mempool will probably be useless\n                 // so we just grab the block via normal getdata\n                 std::vector<CInv> vInv(1);\n-                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus()), cmpctblock.header.GetHash());\n+                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n             }\n             return true;\n@@ -2084,7 +2084,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 } else if (status == READ_STATUS_FAILED) {\n                     // Duplicate txindexes, the block is now in-flight, so just request it\n                     std::vector<CInv> vInv(1);\n-                    vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus()), cmpctblock.header.GetHash());\n+                    vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n                     connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n                     return true;\n                 }\n@@ -2127,7 +2127,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // We requested this block, but its far into the future, so our\n                 // mempool will probably be useless - request the block normally\n                 std::vector<CInv> vInv(1);\n-                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus()), cmpctblock.header.GetHash());\n+                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n                 return true;\n             } else {\n@@ -2198,7 +2198,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             } else if (status == READ_STATUS_FAILED) {\n                 // Might have collided, fall back to getdata now :(\n                 std::vector<CInv> invs;\n-                invs.push_back(CInv(MSG_BLOCK | GetFetchFlags(pfrom, chainActive.Tip(), chainparams.GetConsensus()), resp.blockhash));\n+                invs.push_back(CInv(MSG_BLOCK | GetFetchFlags(pfrom), resp.blockhash));\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, invs));\n             } else {\n                 // Block is either okay, or possibly we received\n@@ -2366,7 +2366,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                         // Can't download any more from this peer\n                         break;\n                     }\n-                    uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n+                    uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                     vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n                     MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n                     LogPrint(BCLog::NET, \"Requesting block %s from  peer=%d\\n\",\n@@ -3221,7 +3221,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             NodeId staller = -1;\n             FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller, consensusParams);\n             BOOST_FOREACH(const CBlockIndex *pindex, vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(pto, pindex->pprev, consensusParams);\n+                uint32_t nFetchFlags = GetFetchFlags(pto);\n                 vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n                 MarkBlockAsInFlight(pto->GetId(), pindex->GetBlockHash(), consensusParams, pindex);\n                 LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),"
      }
    ]
  }
]