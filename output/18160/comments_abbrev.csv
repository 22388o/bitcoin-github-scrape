promag,2020-02-16 11:49:45,@MarcoFalke considering #18123 this should be backported too (if change is correct).,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-586697182,586697182,
hebasto,2020-02-16 17:58:29,Concept ACK about not wasting resources.,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-586734327,586734327,
DrahtBot,2020-02-16 19:24:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17954 (wallet: Remove calls to Chain::Lock methods by ryanofsky)\n\nIf you consider this pull request important, please a",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-586742866,586742866,
promag,2020-02-17 10:09:01,Might fix #15015.,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-586914765,586914765,
jonasschnelli,2020-02-20 19:02:37,See also https://github.com/bitcoin/bitcoin/pull/10251 (could the discussion there be relevant here?),https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-589254744,589254744,
promag,2020-02-20 19:13:05,"The goal here is to avoid unnecessary calls to `GetBalances` and to be an easy backport.\n\nRefactoring to make it asynchronous can also be done but I don't think it invalidates this change.",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-589259282,589259282,
MarcoFalke,2020-02-25 17:38:01,"Can someone explain to me how this is supposed to work? Why does the balance not change when the block height stays the same? Can't we send out funds or receive them in the meantime (they might be untrusted, but still, the balance should change)?",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-590981914,590981914,
instagibbs,2020-02-25 18:03:17,"@MarcoFalke look at `updateTransaction` which sets the ""force"" parameter. I'll have to dig more to completely understand on my side",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-590988571,590988571,
MarcoFalke,2020-02-25 18:08:22,In that case it seems easier to just call it with the force parameter on every connected block and then remove the polling?,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-590990149,590990149,
promag,2020-02-25 18:15:53,The real deal should be async balance computation to not block the GUI thread. What you suggest is a bigger change and requires locks instead of try locks.,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-590992761,590992761,
ryanofsky,2020-02-25 22:53:56,"I think this PR would be equivalent to adding:\n\n```c++\nif (!fForceCheckBalanceChanged && cachedNumBlocks == m_client_model.getNumBlocks()) return;\n```\n\nto the top of the [`WalletModel::pollBalanceChanged()`](https://github.com/bitcoin/bitcoin/blob/c3b471592346b98ae9aedf7cbc2a4058061b1ad8/src/qt/walletmodel.cpp#L73) function after #17905.\n\nAssuming #17905 is a change we want to make",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-591116229,591116229,
promag,2020-02-25 23:15:30,"@ryanofsky If we call `getBalances` async when the tip changes or a wallet transaction is updated then we can drop `tryGetBalances` (it only exists because of polling).\n\nSo this PR tunes `tryGetBalances` for polling, maybe it should rename it `tryGetBalancesIfNeeded`.",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-591127309,591127309,
promag,2020-02-26 00:52:09,@ryanofsky is the alternative easy to backport?,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-591175029,591175029,
ryanofsky,2020-02-26 01:45:45,"> @ryanofsky is the alternative easy to backport?\n\nThe suggested alternative makes this PR smaller and probably easier to backport, but it builds on #17905 which is bigger and does have minor conflicts with 0.18 and 0.19.\n\nIf the goal is to backport #18160 without #17905, I'd suggest leaving this PR in its current form so it is easier to backport. If the goal is to backport both PRs, then ",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-591192834,591192834,
promag,2020-02-26 01:55:15,Well we could tag this for backport to 0.19 and wait for progress on #17905 or 0.19.1.,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-591195545,591195545,
promag,2020-03-15 02:39:09,IMO this should go into 0.20. @ryanofsky @jonasschnelli @laanwj ,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-599159938,599159938,
luke-jr,2020-03-23 01:50:48,@promag Too late for any non-fixes...,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-602320954,602320954,
promag,2020-03-23 09:37:18,@luke-jr do you consider #15015 and related issues bugs?,https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-602484143,602484143,
promag,2020-03-30 14:28:33,"Made a wallet with 34176 transactions. Then ran instruments before and after this PR for around 90 seconds.\n\nBefore:\n![Screenshot 2020-03-30 at 15 09 24](https://user-images.githubusercontent.com/3534524/77923567-86c7ea00-729a-11ea-8c82-0c2c44e8dee1.png)\n\nAfter:\n![Screenshot 2020-03-30 at 15 19 30](https://user-images.githubusercontent.com/3534524/77923651-a52de580-729a-11ea-95dc-fde3a",https://github.com/bitcoin/bitcoin/pull/18160#issuecomment-606033867,606033867,
hebasto,2020-02-16 18:29:15,"nit: While these lines are touched already, why not apply correct format style?",https://github.com/bitcoin/bitcoin/pull/18160#discussion_r379923201,379923201,src/qt/walletmodel.cpp
promag,2020-02-16 21:30:09,Forgot to mention to review with `&w=1`. ,https://github.com/bitcoin/bitcoin/pull/18160#discussion_r379934867,379934867,src/qt/walletmodel.cpp
instagibbs,2020-02-25 17:10:26,This should mention that it won't attempt to get balances if height is same.,https://github.com/bitcoin/bitcoin/pull/18160#discussion_r384008107,384008107,src/interfaces/wallet.h
