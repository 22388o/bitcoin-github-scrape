[
  {
    "sha": "231b399952fd620ee0f72b1947024dba9651630d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzFiMzk5OTUyZmQ2MjBlZTBmNzJiMTk0NzAyNGRiYTk2NTE2MzBk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-11-24T13:26:51Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-11-25T10:50:35Z"
      },
      "message": "Bugfix: remove conflicting transactions from memory pool\n\nWhen a transaction A is in the memory pool, while a transaction B\n(which shares an input with A) gets accepted into a block, A was\nkept forever in the memory pool.\n\nThis commit adds a CTxMemPool::removeConflicts method, which\nremoves transactions that conflict with a given transaction, and\nall their children.\n\nThis results in less transactions in the memory pool, and faster\nconstruction of new blocks.",
      "tree": {
        "sha": "ae96634672657bf13e0263ffea9a3f943e39d4aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae96634672657bf13e0263ffea9a3f943e39d4aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/231b399952fd620ee0f72b1947024dba9651630d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/231b399952fd620ee0f72b1947024dba9651630d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/231b399952fd620ee0f72b1947024dba9651630d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/231b399952fd620ee0f72b1947024dba9651630d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c07a1a6ee4d39ba04083cd7cb83fc31e91a096d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c07a1a6ee4d39ba04083cd7cb83fc31e91a096d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c07a1a6ee4d39ba04083cd7cb83fc31e91a096d5"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 28,
      "deletions": 3
    },
    "files": [
      {
        "sha": "22a8e03638305d6e96aa5c77ac8d68392f63a6a3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/231b399952fd620ee0f72b1947024dba9651630d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/231b399952fd620ee0f72b1947024dba9651630d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=231b399952fd620ee0f72b1947024dba9651630d",
        "patch": "@@ -818,14 +818,21 @@ bool CTxMemPool::addUnchecked(const uint256& hash, CTransaction &tx)\n }\n \n \n-bool CTxMemPool::remove(CTransaction &tx)\n+bool CTxMemPool::remove(const CTransaction &tx, bool fRecursive)\n {\n     // Remove transaction from memory pool\n     {\n         LOCK(cs);\n         uint256 hash = tx.GetHash();\n         if (mapTx.count(hash))\n         {\n+            if (fRecursive) {\n+                for (unsigned int i = 0; i < tx.vout.size(); i++) {\n+                    std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(COutPoint(hash, i));\n+                    if (it != mapNextTx.end())\n+                        remove(*it->second.ptx, true);\n+                }\n+            }\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n                 mapNextTx.erase(txin.prevout);\n             mapTx.erase(hash);\n@@ -835,6 +842,21 @@ bool CTxMemPool::remove(CTransaction &tx)\n     return true;\n }\n \n+bool CTxMemPool::removeConflicts(const CTransaction &tx)\n+{\n+    // Remove transactions which depend on inputs of tx, recursively\n+    LOCK(cs);\n+    BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n+        std::map<COutPoint, CInPoint>::iterator it = mapNextTx.find(txin.prevout);\n+        if (it != mapNextTx.end()) {\n+            const CTransaction &txConflict = *it->second.ptx;\n+            if (txConflict != tx)\n+                remove(txConflict, true);\n+        }\n+    }\n+    return true;\n+}\n+\n void CTxMemPool::clear()\n {\n     LOCK(cs);\n@@ -1762,8 +1784,10 @@ bool SetBestChain(CBlockIndex* pindexNew)\n         tx.AcceptToMemoryPool(false);\n \n     // Delete redundant memory transactions that are in the connected branch\n-    BOOST_FOREACH(CTransaction& tx, vDelete)\n+    BOOST_FOREACH(CTransaction& tx, vDelete) {\n         mempool.remove(tx);\n+        mempool.removeConflicts(tx);\n+    }\n \n     // Update best block in wallet (so we can detect restored wallets)\n     if (!fIsInitialDownload)"
      },
      {
        "sha": "7a164c77fb366c9845ebd91af13e30f438c44d4b",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/231b399952fd620ee0f72b1947024dba9651630d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/231b399952fd620ee0f72b1947024dba9651630d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=231b399952fd620ee0f72b1947024dba9651630d",
        "patch": "@@ -1814,7 +1814,8 @@ class CTxMemPool\n \n     bool accept(CTransaction &tx, bool fCheckInputs, bool* pfMissingInputs);\n     bool addUnchecked(const uint256& hash, CTransaction &tx);\n-    bool remove(CTransaction &tx);\n+    bool remove(const CTransaction &tx, bool fRecursive = false);\n+    bool removeConflicts(const CTransaction &tx);\n     void clear();\n     void queryHashes(std::vector<uint256>& vtxid);\n     void pruneSpent(const uint256& hash, CCoins &coins);"
      }
    ]
  }
]