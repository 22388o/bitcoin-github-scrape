fanquake,2021-06-16 05:07:26,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-862042841,862042841,
practicalswift,2021-06-16 05:28:35,Concept ACK: nice cleanup!,https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-862051447,862051447,
DrahtBot,2021-06-16 07:20:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22310 (test: Add functional test for replacement relay fee check by ariard)\n* #20892 (tests: Run both descriptor and leg",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-862117652,862117652,
theStack,2021-06-16 14:21:12,"Force-pushed with a change in the second commit: `ToHex` is removed and all instances are replaced with `.serialize().hex()`, as suggested [in this discussion by MarcoFalke](https://github.com/bitcoin/bitcoin/pull/22257#discussion_r652469155). Also adapted PR title and description accordingly.",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-862422970,862422970,
theStack,2021-06-17 15:57:50,Added a commit https://github.com/bitcoin/bitcoin/commit/18b780b6ce2b42245f067e922af5552bd8931be3 to improve the documentation of `FromHex` by mentioning the recommended reverse operation ([as suggested by practicalswift](https://github.com/bitcoin/bitcoin/pull/22257#discussion_r653036925)) and changing to docstring format.,https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-863362002,863362002,
practicalswift,2021-06-17 19:59:22,cr ACK 18b780b6ce2b42245f067e922af5552bd8931be3,https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-863523820,863523820,
theStack,2021-06-19 11:04:33,Rebased on master.,https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-864391200,864391200,
theStack,2021-06-19 20:17:21,"Added another commit to introduce a `tx_from_hex` helper, as suggested by MarcoFalke (https://github.com/bitcoin/bitcoin/pull/22257#discussion_r654817481).\nTempted to squash this with the first commit to minimize reviewing burden, OTOH both replacing code with an existing helper _and_ introducing a new one seems a bit much for a single commit. Opinions?",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-864458621,864458621,
MarcoFalke,2021-06-20 09:31:47,I have a slight preference to squash to avoid repeatedly touching the same lines,https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-864525866,864525866,
theStack,2021-06-20 12:19:26,"Restructured everything a bit (sorry for confusing to all who already reviewed!):\n* the first commit immediately introduces a helper `tx_from_hex`, which is used for instances where deserialization was done manually, and also for instances which used `FromHex` already\n* second commit gets rid of `ToHex`\n* third commit renames `FromHex` to `from_hex` via scripted diff (to follow coding guidel",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-864545613,864545613,
MarcoFalke,2021-06-21 09:25:02,"I've rewritten the scripted diff and it seems there is a silent merge conflict?\n\n```\n$ grd 8ed7dbd386562368e864fce23722676cd3637854 HEAD\n1:  8c127a86be = 1:  8c127a86be test: introduce `tx_from_hex` helper for tx deserialization\n2:  4223f18a8c = 2:  4223f18a8c test: remove `ToHex` helper, use .serialize().hex() instead\n3:  8ed7dbd386 ! 3:  662223f4ba scripted-diff: test: rename `FromHe",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-864880631,864880631,
MarcoFalke,2021-06-21 09:25:39,"review ACK 446fd1792ae3e7d0917df771bc0ccfa7c3c3b8f6 üèµ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK 446fd1792ae3e7d0917df771bc0ccfa7c3c3b8f6 üèµ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiqPAv8DOhtbQZoGRJyrizrhOHso5pM2dbArc/E6N3U",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-864881026,864881026,
theStack,2021-06-21 12:50:49,"> I've rewritten the scripted diff and it seems there is a silent merge conflict?\n> \n> ```\n> $ grd 8ed7dbd386562368e864fce23722676cd3637854 HEAD\n> 1:  8c127a86be = 1:  8c127a86be test: introduce `tx_from_hex` helper for tx deserialization\n> 2:  4223f18a8c = 2:  4223f18a8c test: remove `ToHex` helper, use .serialize().hex() instead\n> 3:  8ed7dbd386 ! 3:  662223f4ba scripted-diff: test: ",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-865006675,865006675,
MarcoFalke,2021-06-23 07:04:58,"review re-ACK bdb8b9a347e68f80a2e8d44ce5590a2e8214b6bb üòÅ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview re-ACK bdb8b9a347e68f80a2e8d44ce5590a2e8214b6bb üòÅ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjrswv/bCHcA6Zpk9Gv9fkRzBtmSfbuLE2ifD",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-866585744,866585744,
MarcoFalke,2021-06-23 07:05:06,"> (Not directly connected to this PR, but it would probably make sense to call the signet mining tool in one of the functional tests, to let it run through CI?)\n\nAgree",https://github.com/bitcoin/bitcoin/pull/22257#issuecomment-866585825,866585825,
MarcoFalke,2021-06-16 07:00:59,"Is there a reason to do this replacement? Now that python supports bin->hex by just appending `.hex()`, the helper isn't really needed anymore.\n\nPersonally I think both versions are fine and there isn't really a way to ""protect"" new code from using one or the other.\n\n",https://github.com/bitcoin/bitcoin/pull/22257#discussion_r652404782,652404782,test/functional/feature_cltv.py
theStack,2021-06-16 07:41:53,"Agree that the gain can be questioned -- I was also hesitating about this replacement, but then thought symmetry (i.e. why get rid of most deserialize() calls, but let the serialize() calls in) and the fact that it's shorter may be worth it.\n\nSome tests already imported and used ToHex, but at some places still called serialize().hex(). At least mixing within the same test should be avoided IMH",https://github.com/bitcoin/bitcoin/pull/22257#discussion_r652432052,652432052,test/functional/feature_cltv.py
MarcoFalke,2021-06-16 08:29:43,Then my preference would be to remove `ToHex` to avoid future pull requests changing it back (or forth),https://github.com/bitcoin/bitcoin/pull/22257#discussion_r652469155,652469155,test/functional/feature_cltv.py
practicalswift,2021-06-16 20:45:09,Non-blocking suggestion: Could add a comment to `FromHex` describing that the recommended inverse is `obj.serialize().hex()` (instead of a hypothetical `ToHex`) :),https://github.com/bitcoin/bitcoin/pull/22257#discussion_r653036925,653036925,test/functional/test_framework/messages.py
theStack,2021-06-17 15:52:51,"Good idea, I added a commit with your suggestion!",https://github.com/bitcoin/bitcoin/pull/22257#discussion_r653698866,653698866,test/functional/test_framework/messages.py
MarcoFalke,2021-06-19 16:58:37,"cd4e0e18dfcda92b0271607a81cf452d7a6bb559: I am wondering if it makes sense to introduce a `tx_from_hex(str)` helper, as `CTransction` is the most common type to be deserialized from hex. This would also solve the ambiguity and verbosity around passing the first parameter to `FromHex`.",https://github.com/bitcoin/bitcoin/pull/22257#discussion_r654817481,654817481,test/functional/mempool_accept.py
theStack,2021-06-19 20:14:02,"Good idea, done.",https://github.com/bitcoin/bitcoin/pull/22257#discussion_r654835742,654835742,test/functional/mempool_accept.py
