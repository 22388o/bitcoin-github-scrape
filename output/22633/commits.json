[
  {
    "sha": "021daedfa100defad553d69cd3d628aaa5bc7caf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjFkYWVkZmExMDBkZWZhZDU1M2Q2OWNkM2Q2MjhhYWE1YmM3Y2Fm",
    "commit": {
      "author": {
        "name": "Zero-1729",
        "email": "zero1729@protonmail.com",
        "date": "2021-08-16T18:30:44Z"
      },
      "committer": {
        "name": "Zero-1729",
        "email": "zero1729@protonmail.com",
        "date": "2021-08-16T18:30:56Z"
      },
      "message": "refactor: replace remaining binascii method calls",
      "tree": {
        "sha": "aea7f9c78aa5e73073d26bfff3e2357986a8e056",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aea7f9c78aa5e73073d26bfff3e2357986a8e056"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021daedfa100defad553d69cd3d628aaa5bc7caf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEL+lVzQbS5epLsv0fqICMxdiN8sAFAmEaruEACgkQqICMxdiN\n8sAoxQ//ZdCWnueslB+I/V8zd/IP0Ps+zrCUMh8mUd+COgrftFORwTni26Bc83IB\nlTAXKPDxl6CudChrAHYgrBLgaSmARJoOy+YE+SC0zCtBtI6JADV3+A9uiROO2sE5\nT2RL3Wzjtd2U6iDX7VzL3jPbXn/pj4xxwM3s0P0GltrrXvYqDhBp+V7vBI/anKil\nrXXPyGuJfjQ8YOYGs/KNvZcWxGeW6KHFGp8nBsWKGnyKnS6S0od4A6rZh9RyIxWz\nYHBb3noa5yiOZVF3PzEvo+5Hdh4aZpLLcEi9jflk75ixKt4C7ZhS1YVD7l8fIZ5c\nNMxYFoukP1K3zy7SD7Q+pBvfZrja1G105c2a9XOUqOx7k9QnK34GthCV84r0ZnKn\nGLtukIP6lj5o3h9FeMTxordyOzoRfLDj+6X1SCzyUS3CkFvi+T6KeK4KN+n0G2TJ\n/30e+9Bc0YK4q2DN2sSwsOPAJ3YRlckEezr2ndnPHmDuHG0m5lBAy2HplY29I6mg\noiK1bpQm3HS5VrWFgN4MdCykeh+EU84b6TiAW67BpluJj13pOSO6tuIDQM/0Ep3W\nHS0ICObCUwNsNl9b6qQxmo82UvM4hab0vPEfdJboa62WdANW5ZW9ki1rmR7QJpgp\nsqaBXkV7d2xQWDGQgMMUx8P6ZKlXyzflEWpMMuBFqaTLiqQqSSg=\n=NBjp\n-----END PGP SIGNATURE-----",
        "payload": "tree aea7f9c78aa5e73073d26bfff3e2357986a8e056\nparent f4328ebef52f51a5ee45cc42815c91ccd28b0669\nauthor Zero-1729 <zero1729@protonmail.com> 1629138644 +0100\ncommitter Zero-1729 <zero1729@protonmail.com> 1629138656 +0100\n\nrefactor: replace remaining binascii method calls \n\n\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021daedfa100defad553d69cd3d628aaa5bc7caf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/021daedfa100defad553d69cd3d628aaa5bc7caf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021daedfa100defad553d69cd3d628aaa5bc7caf/comments",
    "author": {
      "login": "Zero-1729",
      "id": 23586626,
      "node_id": "MDQ6VXNlcjIzNTg2NjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23586626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zero-1729",
      "html_url": "https://github.com/Zero-1729",
      "followers_url": "https://api.github.com/users/Zero-1729/followers",
      "following_url": "https://api.github.com/users/Zero-1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zero-1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zero-1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zero-1729/subscriptions",
      "organizations_url": "https://api.github.com/users/Zero-1729/orgs",
      "repos_url": "https://api.github.com/users/Zero-1729/repos",
      "events_url": "https://api.github.com/users/Zero-1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zero-1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zero-1729",
      "id": 23586626,
      "node_id": "MDQ6VXNlcjIzNTg2NjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23586626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zero-1729",
      "html_url": "https://github.com/Zero-1729",
      "followers_url": "https://api.github.com/users/Zero-1729/followers",
      "following_url": "https://api.github.com/users/Zero-1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zero-1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zero-1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zero-1729/subscriptions",
      "organizations_url": "https://api.github.com/users/Zero-1729/orgs",
      "repos_url": "https://api.github.com/users/Zero-1729/repos",
      "events_url": "https://api.github.com/users/Zero-1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zero-1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4328ebef52f51a5ee45cc42815c91ccd28b0669",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4328ebef52f51a5ee45cc42815c91ccd28b0669",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4328ebef52f51a5ee45cc42815c91ccd28b0669"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 14,
      "deletions": 19
    },
    "files": [
      {
        "sha": "9a8bcc57a59383e610c63e5a585b5253ea30c9f0",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -17,7 +17,6 @@\n import time\n import glob\n from collections import namedtuple\n-from binascii import unhexlify\n \n settings = {}\n \n@@ -332,7 +331,7 @@ def run(self):\n     settings['max_out_sz'] = int(settings['max_out_sz'])\n     settings['split_timestamp'] = int(settings['split_timestamp'])\n     settings['file_timestamp'] = int(settings['file_timestamp'])\n-    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n+    settings['netmagic'] = bytes.fromhex(settings['netmagic'])\n     settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n     settings['debug_output'] = settings['debug_output'].lower()\n "
      },
      {
        "sha": "012bd6cc3149075d56c2de338e05f40527a42fea",
        "filename": "contrib/signet/miner",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/contrib/signet/miner",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/contrib/signet/miner",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/miner?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -15,7 +15,6 @@ import sys\n import time\n import subprocess\n \n-from binascii import unhexlify\n from io import BytesIO\n \n PATH_BASE_CONTRIB_SIGNET = os.path.abspath(os.path.dirname(os.path.realpath(__file__)))\n@@ -202,7 +201,7 @@ def finish_block(block, signet_solution, grind_cmd):\n \n def generate_psbt(tmpl, reward_spk, *, blocktime=None):\n     signet_spk = tmpl[\"signet_challenge\"]\n-    signet_spk_bin = unhexlify(signet_spk)\n+    signet_spk_bin = bytes.fromhex(signet_spk)\n \n     cbtx = create_coinbase(height=tmpl[\"height\"], value=tmpl[\"coinbasevalue\"], spk=reward_spk)\n     cbtx.vin[0].nSequence = 2**32-2\n@@ -258,7 +257,7 @@ def get_reward_addr_spk(args, height):\n         return args.address, args.reward_spk\n \n     reward_addr = get_reward_address(args, height)\n-    reward_spk = unhexlify(json.loads(args.bcli(\"getaddressinfo\", reward_addr))[\"scriptPubKey\"])\n+    reward_spk = bytes.fromhex(json.loads(args.bcli(\"getaddressinfo\", reward_addr))[\"scriptPubKey\"])\n     if args.address is not None:\n         # will always be the same, so cache\n         args.reward_spk = reward_spk"
      },
      {
        "sha": "6269269d377ef2098b1134de058ceca42b76569f",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -23,7 +23,6 @@\n     https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n \"\"\"\n \n-import binascii\n import asyncio\n import zmq\n import zmq.asyncio\n@@ -58,18 +57,18 @@ async def handle(self) :\n             sequence = str(struct.unpack('<I', seq)[-1])\n         if topic == b\"hashblock\":\n             print('- HASH BLOCK ('+sequence+') -')\n-            print(binascii.hexlify(body))\n+            print(body.hex())\n         elif topic == b\"hashtx\":\n             print('- HASH TX  ('+sequence+') -')\n-            print(binascii.hexlify(body))\n+            print(body.hex())\n         elif topic == b\"rawblock\":\n             print('- RAW BLOCK HEADER ('+sequence+') -')\n-            print(binascii.hexlify(body[:80]))\n+            print(body[:80].hex())\n         elif topic == b\"rawtx\":\n             print('- RAW TX ('+sequence+') -')\n-            print(binascii.hexlify(body))\n+            print(body.hex())\n         elif topic == b\"sequence\":\n-            hash = binascii.hexlify(body[:32])\n+            hash = body[:32].hex()\n             label = chr(body[32])\n             mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n             print('- SEQUENCE ('+sequence+') -')"
      },
      {
        "sha": "c6d9b652b8b914da2f528bae962b9e8c22edb6c5",
        "filename": "share/rpcauth/rpcauth.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/share/rpcauth/rpcauth.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/share/rpcauth/rpcauth.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/rpcauth.py?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -5,15 +5,14 @@\n \n from argparse import ArgumentParser\n from base64 import urlsafe_b64encode\n-from binascii import hexlify\n from getpass import getpass\n from os import urandom\n \n import hmac\n \n def generate_salt(size):\n     \"\"\"Create size byte hex salt\"\"\"\n-    return hexlify(urandom(size)).decode()\n+    return urandom(size).hex()\n \n def generate_password():\n     \"\"\"Create 32 byte b64 password\"\"\""
      },
      {
        "sha": "15612e2950fcdd0ded045af82d048dd29401c287",
        "filename": "src/test/serfloat_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/src/test/serfloat_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/src/test/serfloat_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serfloat_tests.cpp?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -102,11 +102,12 @@ BOOST_AUTO_TEST_CASE(double_serfloat_tests) {\n Python code to generate the below hashes:\n \n     def reversed_hex(x):\n-        return binascii.hexlify(''.join(reversed(x)))\n+        return bytes(reversed(x)).hex()\n+\n     def dsha256(x):\n         return hashlib.sha256(hashlib.sha256(x).digest()).digest()\n \n-    reversed_hex(dsha256(''.join(struct.pack('<d', x) for x in range(0,1000)))) == '43d0c82591953c4eafe114590d392676a01585d25b25d433557f0d7878b23f96'\n+    reversed_hex(dsha256(b''.join(struct.pack('<d', x) for x in range(0,1000)))) == '43d0c82591953c4eafe114590d392676a01585d25b25d433557f0d7878b23f96'\n */\n BOOST_AUTO_TEST_CASE(doubles)\n {"
      },
      {
        "sha": "65d90f84487fe9cdaf8275afee88fc13ca403ea9",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -19,7 +19,6 @@\n by tests, compromising their intended effect.\n \"\"\"\n from base64 import b32decode, b32encode\n-from codecs import encode\n import copy\n import hashlib\n from io import BytesIO\n@@ -681,7 +680,7 @@ def calc_sha256(self):\n             r += struct.pack(\"<I\", self.nBits)\n             r += struct.pack(\"<I\", self.nNonce)\n             self.sha256 = uint256_from_str(hash256(r))\n-            self.hash = encode(hash256(r)[::-1], 'hex_codec').decode('ascii')\n+            self.hash = hash256(r)[::-1].hex()\n \n     def rehash(self):\n         self.sha256 = None"
      },
      {
        "sha": "aa8fd6eee5982074ae8b7aee596c6314ce5ebc4b",
        "filename": "test/util/bitcoin-util-test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021daedfa100defad553d69cd3d628aaa5bc7caf/test/util/bitcoin-util-test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021daedfa100defad553d69cd3d628aaa5bc7caf/test/util/bitcoin-util-test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/bitcoin-util-test.py?ref=021daedfa100defad553d69cd3d628aaa5bc7caf",
        "patch": "@@ -10,7 +10,6 @@\n Can also be run manually.\"\"\"\n \n import argparse\n-import binascii\n import configparser\n import difflib\n import json\n@@ -167,7 +166,7 @@ def parse_output(a, fmt):\n     if fmt == 'json':  # json: compare parsed data\n         return json.loads(a)\n     elif fmt == 'hex':  # hex: parse and compare binary data\n-        return binascii.a2b_hex(a.strip())\n+        return bytes.fromhex(a.strip())\n     else:\n         raise NotImplementedError(\"Don't know how to compare %s\" % fmt)\n "
      }
    ]
  }
]