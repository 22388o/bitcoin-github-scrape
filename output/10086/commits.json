[
  {
    "sha": "1403b1a689ffce914c91d1d6900729d87278ed21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDAzYjFhNjg5ZmZjZTkxNGM5MWQxZDY5MDA3MjlkODcyNzhlZDIx",
    "commit": {
      "author": {
        "name": "Jameson Lopp",
        "email": "jameson.lopp@gmail.com",
        "date": "2017-03-26T14:25:17Z"
      },
      "committer": {
        "name": "Jameson Lopp",
        "email": "jameson.lopp@gmail.com",
        "date": "2017-03-26T14:25:17Z"
      },
      "message": "move rpcserialversion into RPC option group",
      "tree": {
        "sha": "c81d123b763773ea4c6ca214fb0eaa0828ebe1ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c81d123b763773ea4c6ca214fb0eaa0828ebe1ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1403b1a689ffce914c91d1d6900729d87278ed21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1403b1a689ffce914c91d1d6900729d87278ed21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1403b1a689ffce914c91d1d6900729d87278ed21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1403b1a689ffce914c91d1d6900729d87278ed21/comments",
    "author": {
      "login": "jlopp",
      "id": 288011,
      "node_id": "MDQ6VXNlcjI4ODAxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/288011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlopp",
      "html_url": "https://github.com/jlopp",
      "followers_url": "https://api.github.com/users/jlopp/followers",
      "following_url": "https://api.github.com/users/jlopp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlopp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlopp/subscriptions",
      "organizations_url": "https://api.github.com/users/jlopp/orgs",
      "repos_url": "https://api.github.com/users/jlopp/repos",
      "events_url": "https://api.github.com/users/jlopp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlopp/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jlopp",
      "id": 288011,
      "node_id": "MDQ6VXNlcjI4ODAxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/288011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlopp",
      "html_url": "https://github.com/jlopp",
      "followers_url": "https://api.github.com/users/jlopp/followers",
      "following_url": "https://api.github.com/users/jlopp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlopp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlopp/subscriptions",
      "organizations_url": "https://api.github.com/users/jlopp/orgs",
      "repos_url": "https://api.github.com/users/jlopp/repos",
      "events_url": "https://api.github.com/users/jlopp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlopp/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "111849345bb5140f86b48e730ceab4bff45fa2e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/111849345bb5140f86b48e730ceab4bff45fa2e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/111849345bb5140f86b48e730ceab4bff45fa2e9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5cdac21a21b2f1bfd8e54793b7d8d829499a1e0a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1403b1a689ffce914c91d1d6900729d87278ed21/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1403b1a689ffce914c91d1d6900729d87278ed21/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1403b1a689ffce914c91d1d6900729d87278ed21",
        "patch": "@@ -379,7 +379,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), Params(CBaseChainParams::MAIN).GetDefaultPort(), Params(CBaseChainParams::TESTNET).GetDefaultPort()));\n     strUsage += HelpMessageOpt(\"-proxy=<ip:port>\", _(\"Connect through SOCKS5 proxy\"));\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), DEFAULT_PROXYRANDOMIZE));\n-    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n@@ -488,6 +487,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), BaseParams(CBaseChainParams::MAIN).RPCPort(), BaseParams(CBaseChainParams::TESTNET).RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n+    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));"
      }
    ]
  }
]