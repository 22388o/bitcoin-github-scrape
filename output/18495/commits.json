[
  {
    "sha": "2599d13c9417dc8c5107535521173687ec5e6c2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTk5ZDEzYzk0MTdkYzhjNTEwNzUzNTUyMTE3MzY4N2VjNWU2YzJm",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-04-01T14:15:35Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-04-10T19:27:01Z"
      },
      "message": "rpc: Remove deprecated migration code\n\nDon't accept a second argument to `sendrawtransaction` and\n`testmempoolaccept` of type `bool`. Actually even the code before this\nchange would not accept `bool`, but it would print a long explanatory\nmessage when rejecting it: \"Second argument must be numeric (maxfeerate)\nand no longer supports a boolean. To allow a transaction with high fees,\nset maxfeerate to 0.\"\n\nThis was scheduled for removal in 6c0a6f73e.",
      "tree": {
        "sha": "154c8e062cd1fa5f51837dbd817534d87cf842f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/154c8e062cd1fa5f51837dbd817534d87cf842f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2599d13c9417dc8c5107535521173687ec5e6c2f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl6QyIYACgkQVN8G9ktV\ny78q3h//fMl2splhWXm6VsYN40vJdnfjpD2DkqnfJKjpVqvSKdLjtSEKiCW6e4Eq\ncxhR9qy4xXruAJr4PHfxnWDPgzDaAZsF5wjqTz4c/up86lw9slK2Mmqjf01vR/Pq\nKcHDh1cdCh/bQEab8LhInZtti0X24pD4lxtElVx/QBYVGrw63XrFlNGbP23W+XH7\nxrj6RhbDTFGUh0r4Z2PRgTHOrr5VsXvz877K9S7Th7oeDdCS00QCLhFGRwHyj4cl\nQhlnsantGEpIfUF1bGMvLw1r6uF7vL2s1JJT5hR9d+VjlzX3OL+dOJX9ChvNkWp5\nSB1W94FBf22YMsUkZ02dU64RjiDGrb/DV/9LEfP6qABdqnsXUiuTkrljOCztc3NH\ny5xWhEWDu1AjLahD8yGc9v6TIxkRAs5q4iUX9WFI8tuD8IMmwGSDf9aHmGoMXh6x\nxn3sAqb7PBNes1GJE052Q0YyIqfgH+PdUhJwly/Io7rH3hcOlgG0hOUxzoqjwJip\nC4idJLC3JAWoLUjY4QVdDaeAyvB53ZJyHTPWEQJimK+hF3vPKFJDw4J6wCyu9XxF\nzVt2tv1w26aSYMrRtA94g2/JGu0s0IypkelIRLME/syqJTVi3sny1wZ4TikqthFZ\nXtVcA+S/DFiVlWH8riKjjwu7AcZPRgmSfj5+lSXCzh0Le51M3o9UKLjQuHUwVH47\nFLgbGoMJGrt+pZxeYO+iUePVPI0M4i+2HGlU3PHZ4OIIQIYIgVsbbcZbE5ax6Lxa\ngEkEKWjOq/z4DnbP3wdCeDgiQyazwbt1oAJIiW0M0bqKY+1xqGk15fY4y87cUWHg\nJkK9HL85vpbEoDN9wRRXFg2KTJZivwUWcv9SnC/zlZc8xrmUsL+DvN6e3hOmsGEA\noqP4zY/UsxKBEA1zhqk9l7dAd9p8XKWlcAWsM9z5sl8iTZE5IIU1JfYwzzTnxiKh\n2H9inhlsacnhBBd49u+5xJxUAauJLyzK3nZjXiakIGKYic+oJbGa7HrbIfaUAtOJ\nUbdaLTSXofCZsl6KdyE6Cky3BwZUIUmeRtUPHJGF3k4n1xDVkmZUbbI6GKEf6t9L\nJDD8MaJMcNmRbGJrcOrSoWp710QXFBJ7+lTkifFvJ2/O+zPILnj2+BdakFQksKl5\nD64baMS+awpuXSMOjjuIp3iJAoC4nY+4vMK68g8GMmrbalo9+BMSuHXgMtl/5Djl\nMJwAkqob2/pM5C02l7bVQb/j8mq8lMMSMNj0WXAZ7dL9wyXDEd9dhkHL/ZKjKlYp\nYZsE95+pf2QEydAfcJmCYU/p/akgL7+YCnRmguu7qS+HZ/Sm+wSL5JTHKGUJOCeP\n6+K7CVJsxVGSWn9aFpKld/dBzkhySA==\n=5HzT\n-----END PGP SIGNATURE-----",
        "payload": "tree 154c8e062cd1fa5f51837dbd817534d87cf842f0\nparent ff53433fe4ed06893d7c497a9687f326b0280d4e\nauthor Vasil Dimov <vd@FreeBSD.org> 1585750535 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1586546821 +0200\n\nrpc: Remove deprecated migration code\n\nDon't accept a second argument to `sendrawtransaction` and\n`testmempoolaccept` of type `bool`. Actually even the code before this\nchange would not accept `bool`, but it would print a long explanatory\nmessage when rejecting it: \"Second argument must be numeric (maxfeerate)\nand no longer supports a boolean. To allow a transaction with high fees,\nset maxfeerate to 0.\"\n\nThis was scheduled for removal in 6c0a6f73e.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2599d13c9417dc8c5107535521173687ec5e6c2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2599d13c9417dc8c5107535521173687ec5e6c2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2599d13c9417dc8c5107535521173687ec5e6c2f/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff53433fe4ed06893d7c497a9687f326b0280d4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff53433fe4ed06893d7c497a9687f326b0280d4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff53433fe4ed06893d7c497a9687f326b0280d4e"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 10,
      "deletions": 20
    },
    "files": [
      {
        "sha": "8b83f18571748e6f24a0acc3949cce6fec4fc22d",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2599d13c9417dc8c5107535521173687ec5e6c2f/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2599d13c9417dc8c5107535521173687ec5e6c2f/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=2599d13c9417dc8c5107535521173687ec5e6c2f",
        "patch": "@@ -97,10 +97,8 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"signrawtransactionwithkey\", 1, \"privkeys\" },\n     { \"signrawtransactionwithkey\", 2, \"prevtxs\" },\n     { \"signrawtransactionwithwallet\", 1, \"prevtxs\" },\n-    { \"sendrawtransaction\", 1, \"allowhighfees\" },\n     { \"sendrawtransaction\", 1, \"maxfeerate\" },\n     { \"testmempoolaccept\", 0, \"rawtxs\" },\n-    { \"testmempoolaccept\", 1, \"allowhighfees\" },\n     { \"testmempoolaccept\", 1, \"maxfeerate\" },\n     { \"combinerawtransaction\", 0, \"txs\" },\n     { \"fundrawtransaction\", 1, \"options\" },"
      },
      {
        "sha": "a079a66096f716ad62b51bc628d7f7769f9c91e2",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 18,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2599d13c9417dc8c5107535521173687ec5e6c2f/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2599d13c9417dc8c5107535521173687ec5e6c2f/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=2599d13c9417dc8c5107535521173687ec5e6c2f",
        "patch": "@@ -825,7 +825,7 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n \n     RPCTypeCheck(request.params, {\n         UniValue::VSTR,\n-        UniValueType(), // NUM or BOOL, checked later\n+        UniValueType(), // VNUM or VSTR, checked inside AmountFromValue()\n     });\n \n     // parse hex string from parameter\n@@ -834,13 +834,9 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n \n-    CFeeRate max_raw_tx_fee_rate = DEFAULT_MAX_RAW_TX_FEE_RATE;\n-    // TODO: temporary migration code for old clients. Remove in v0.20\n-    if (request.params[1].isBool()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second argument must be numeric (maxfeerate) and no longer supports a boolean. To allow a transaction with high fees, set maxfeerate to 0.\");\n-    } else if (!request.params[1].isNull()) {\n-        max_raw_tx_fee_rate = CFeeRate(AmountFromValue(request.params[1]));\n-    }\n+    const CFeeRate max_raw_tx_fee_rate = request.params[1].isNull() ?\n+                                             DEFAULT_MAX_RAW_TX_FEE_RATE :\n+                                             CFeeRate(AmountFromValue(request.params[1]));\n \n     int64_t virtual_size = GetVirtualTransactionSize(*tx);\n     CAmount max_raw_tx_fee = max_raw_tx_fee_rate.GetFee(virtual_size);\n@@ -896,7 +892,7 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n \n     RPCTypeCheck(request.params, {\n         UniValue::VARR,\n-        UniValueType(), // NUM or BOOL, checked later\n+        UniValueType(), // VNUM or VSTR, checked inside AmountFromValue()\n     });\n \n     if (request.params[0].get_array().size() != 1) {\n@@ -910,13 +906,9 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n     const uint256& tx_hash = tx->GetHash();\n \n-    CFeeRate max_raw_tx_fee_rate = DEFAULT_MAX_RAW_TX_FEE_RATE;\n-    // TODO: temporary migration code for old clients. Remove in v0.20\n-    if (request.params[1].isBool()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second argument must be numeric (maxfeerate) and no longer supports a boolean. To allow a transaction with high fees, set maxfeerate to 0.\");\n-    } else if (!request.params[1].isNull()) {\n-        max_raw_tx_fee_rate = CFeeRate(AmountFromValue(request.params[1]));\n-    }\n+    const CFeeRate max_raw_tx_fee_rate = request.params[1].isNull() ?\n+                                             DEFAULT_MAX_RAW_TX_FEE_RATE :\n+                                             CFeeRate(AmountFromValue(request.params[1]));\n \n     CTxMemPool& mempool = EnsureMemPool();\n     int64_t virtual_size = GetVirtualTransactionSize(*tx);\n@@ -1821,10 +1813,10 @@ static const CRPCCommand commands[] =\n     { \"rawtransactions\",    \"createrawtransaction\",         &createrawtransaction,      {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n     { \"rawtransactions\",    \"decoderawtransaction\",         &decoderawtransaction,      {\"hexstring\",\"iswitness\"} },\n     { \"rawtransactions\",    \"decodescript\",                 &decodescript,              {\"hexstring\"} },\n-    { \"rawtransactions\",    \"sendrawtransaction\",           &sendrawtransaction,        {\"hexstring\",\"allowhighfees|maxfeerate\"} },\n+    { \"rawtransactions\",    \"sendrawtransaction\",           &sendrawtransaction,        {\"hexstring\",\"maxfeerate\"} },\n     { \"rawtransactions\",    \"combinerawtransaction\",        &combinerawtransaction,     {\"txs\"} },\n     { \"rawtransactions\",    \"signrawtransactionwithkey\",    &signrawtransactionwithkey, {\"hexstring\",\"privkeys\",\"prevtxs\",\"sighashtype\"} },\n-    { \"rawtransactions\",    \"testmempoolaccept\",            &testmempoolaccept,         {\"rawtxs\",\"allowhighfees|maxfeerate\"} },\n+    { \"rawtransactions\",    \"testmempoolaccept\",            &testmempoolaccept,         {\"rawtxs\",\"maxfeerate\"} },\n     { \"rawtransactions\",    \"decodepsbt\",                   &decodepsbt,                {\"psbt\"} },\n     { \"rawtransactions\",    \"combinepsbt\",                  &combinepsbt,               {\"txs\"} },\n     { \"rawtransactions\",    \"finalizepsbt\",                 &finalizepsbt,              {\"psbt\", \"extract\"} },"
      }
    ]
  }
]