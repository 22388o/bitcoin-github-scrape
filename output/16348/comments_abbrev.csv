DrahtBot,2019-07-06 18:23:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16349](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16349.html) (qt: Remove redundant WalletController::addW",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-508945260,508945260,
hebasto,2019-07-06 19:22:42,"@promag \n> Once we bump Qt to at least 5.10 these can be refactored to use the `invokeMethod` overload that allows connecting to lambdas or member pointers, which are compile checked.\n\nIMO, in the long run it will be better to get rid of `QMetaObject::invokeMethod` completely, because [`QMetaObject` class](https://doc.qt.io/qt-5/qmetaobject.html#details)\n> ... is not normally required for ",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-508948322,508948322,
promag,2019-07-06 19:43:08,@hebasto since Qt 5.10 invokeMethod is very useful to run code (a)synchronous in other thread.,https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-508949369,508949369,
hebasto,2019-07-07 08:35:12,"@promag \n> since Qt 5.10 invokeMethod is very useful to run code (a)synchronous in other thread.\n\nI believe it is possible and convenient to handle all inter-thread communications via signal-slot connections. That is the main Qt feature ;)",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-508981735,508981735,
promag,2019-07-07 09:06:09,"Yes, but there's nothing wrong with convenience, that's why those were added.",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-508983611,508983611,
hebasto,2019-07-07 09:10:23,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-508983843,508983843,
laanwj,2019-07-08 14:19:29,"So to be clear, before concept ACK: these can *only* fail when the name / method signature is wrong, not for run-time reasons such as a full queue ?",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509244889,509244889,
promag,2019-07-08 14:25:50,"@laanwj yes, from the docs:\n> Invokes the member (a signal or a slot name) on the object obj. Returns true if the member could be invoked. Returns false if there is no such member or the parameters did not match.\n\n> such as a full queue \n\nIs this even possible?",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509247496,509247496,
laanwj,2019-07-08 15:31:58,"> Is this even possible?\n\nI don't think so, not sure, my experience (with accidentally not rate-limiting notifications) is that the queue is very deep at least\nbut thanks for quoting the doc that's good enough for me.\n\nconcept and code review ACK 2fd7d0b9081c9add34277e94e8ad21ce22ee2d61",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509274954,509274954,
hebasto,2019-07-08 15:45:10,This approach was used in a720a983015c9ef8cc814c16a5b9ef6379695817 already.,https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509280333,509280333,
hebasto,2019-07-08 16:19:28,"Tested on Debian 9.9 (system Qt 5.7.1):\n```\n$ ./src/qt/bitcoin-qt -regtest -nowallet -debug=qt\n```\nOpen a wallet from menu...\n```\nbitcoin-qt: qt/walletcontroller.cpp:125: WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wallet>): Assertion `invoked' failed.\nAborted\n```\n```\n$ tail -5 ~/.bitcoin/regtest/debug.log \n2019-07-08T16:14:33Z [rpc one] nFile",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509293813,509293813,
promag,2019-07-08 16:24:57,"@hebasto please add `WalletModel*` here:\nhttps://github.com/bitcoin/bitcoin/blob/2679bb8919b5089f8067ccfd94f766747b8df671/src/qt/bitcoin.cpp#L64-L68\nand test again.",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509295713,509295713,
hebasto,2019-07-08 16:33:08,"@promag \n> please add WalletModel* ... and test again.\n\nDone. No luck ((\nResult is the same.\n",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509298564,509298564,
promag,2019-07-08 16:44:27,Also here https://github.com/bitcoin/bitcoin/blob/05623c021681a5a9c4d35f70f3dbd7e1e49fd81c/src/qt/bitcoin.cpp#L453,https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509302433,509302433,
hebasto,2019-07-08 17:00:30,"@promag the latter is enough:\n```diff\ndiff --git a/src/qt/bitcoin.cpp b/src/qt/bitcoin.cpp\nindex 2fdbcca04..b7740d540 100644\n--- a/src/qt/bitcoin.cpp\n+++ b/src/qt/bitcoin.cpp\n@@ -454,6 +454,7 @@ int GuiMain(int argc, char* argv[])\n     qRegisterMetaType< CAmount >(""CAmount"");\n     qRegisterMetaType< std::function<void()> >(""std::function<void()>"");\n     qRegisterMetaType<QMessage",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509308347,509308347,
promag,2019-07-08 17:07:21,"Cool, I'll add it here and you can close your PR.",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509311063,509311063,
hebasto,2019-07-08 17:20:01,"@promag \n> Cool, I'll add it here and you can close your PR.\n\nI will leave it as refactoring, if you don't mind.",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509315769,509315769,
laanwj,2019-07-08 17:50:19,Nice that this helped find an actual bug!,https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509326361,509326361,
promag,2019-07-09 00:39:55,"IMO all done here, thanks @hebasto.",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509442909,509442909,
hebasto,2019-07-09 04:58:12,"ACK f27bd96b5fdc2921d93c44bbf422bff0e979c4de, I have tested the code.",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509488077,509488077,
laanwj,2019-07-09 09:47:48,"@hebasto looks like you didn't ACK the top commit but the one below it\n\nACK 64fee489448c62319e77941c30152084695b5a5d",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509573967,509573967,
hebasto,2019-07-09 09:54:59,"> @hebasto looks like you didn't ACK the top commit but the one below it\n\npost-merge ACK 64fee489448c62319e77941c30152084695b5a5d",https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509576431,509576431,
promag,2019-07-09 13:19:13,Backport in #16359.,https://github.com/bitcoin/bitcoin/pull/16348#issuecomment-509638598,509638598,
