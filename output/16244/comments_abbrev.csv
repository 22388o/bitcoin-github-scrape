promag,2019-06-19 23:37:29,"Concept ACK.\n\n> - I think blank wallet and disable private keys options could be combined into a single, more self-explanatory ""generate keys"" option with values ""immediately"", ""on-demand"", and ""disabled"".\n\n@ryanofsky do you suggest the same for the GUI? I think we could keep both interfaces consistent.",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-503784744,503784744,
DrahtBot,2019-06-20 00:47:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (WIP: Introduce ScriptPubKeyMan interface an",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-503797482,503797482,
practicalswift,2019-06-20 07:45:23,"This looks like a bug? :-)\n\nhttps://github.com/bitcoin/bitcoin/blob/e50573eb097660dc9cd8800990b3f93bdb8f6dd7/src/wallet/rpcwallet.cpp#L2786-L2789",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-503916488,503916488,
achow101,2019-06-20 15:06:25,"@practicalswift Fixed.\n\n> Also, but not directly related to this PR, I think the createwallet RPC interface could be improved:\n\nI think that can be done in a followup PR.",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-504062881,504062881,
meshcollider,2019-06-22 10:16:57,"Code-review utACK https://github.com/bitcoin/bitcoin/pull/16244/commits/49e47c019b63ea06fd2265ad16fa3245bf2093a3\n\nAgree with Russ's comments too.",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-504652330,504652330,
jnewbery,2019-07-09 13:53:01,"utACK 49e47c019b63ea06fd2265ad16fa3245bf2093a3\n\nThis is a nice, tidy refactor PR that simplifies #15450. \n\nThere are some excellent follow-up suggestions in this PR:\n- https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434142\n- https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434172\n- ""new create wallet function [could take] separate option arguments instead of ",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-509651561,509651561,
achow101,2019-07-09 23:50:34,Rebased,https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-509851652,509851652,
jnewbery,2019-07-10 08:55:24,"ACK 1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d\n\nRan the rebase myself and verified our merge resolves were the same.",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-509974339,509974339,
MarcoFalke,2019-07-10 17:51:07,"ACK 1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhv2Qv+Pql8nxt70ITGbhfE0oD5zRZnD7wBrj50x1Ax+akPccN7i0kYvPitdd",https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-510163037,510163037,
promag,2019-06-20 22:42:29,"Maybe pack these like:\n```cpp\nstruct WalletCreationResult\n{\n    WalletCreationStatus status;\n    std::string error;\n    std::string warning;\n    std::shared_ptr<CWallet> wallet;\n}",https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296040589,296040589,src/wallet/rpcwallet.cpp
promag,2019-06-20 22:43:12,ðŸ‘€ what else?,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296040726,296040726,src/wallet/rpcwallet.cpp
promag,2019-06-20 22:44:50,Maybe `else if (status != WalletCreationStatus::SUCCESS) {` and ditch `if (!wallet) {` in L2785.,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296041059,296041059,src/wallet/rpcwallet.cpp
achow101,2019-06-21 17:59:53,I don't think that is necessary.,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296337546,296337546,src/wallet/rpcwallet.cpp
achow101,2019-06-21 18:11:54,Done,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296341489,296341489,src/wallet/rpcwallet.cpp
Empact,2019-06-22 04:50:13,`enum class`,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434142,296434142,src/wallet/wallet.h
Empact,2019-06-22 04:51:39,nit: out args at the end is a nice convention IMO,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434172,296434172,src/wallet/wallet.h
achow101,2019-06-25 14:56:29,I think I'll leave it as is to avoid invalidating existing ACKs.,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r297233439,297233439,src/wallet/wallet.h
achow101,2019-06-25 14:56:31,I think I'll leave it as is to avoid invalidating existing ACKs.,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r297233459,297233459,src/wallet/wallet.h
Sjors,2019-07-10 14:49:07,"Light preference for making `status` the return variable, similar to how the `TransactionStatus` enum is used. ",https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302107394,302107394,src/wallet/rpcwallet.cpp
Sjors,2019-07-10 14:57:55,Use switch without `default` so we don't forget anything?,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302112502,302112502,src/wallet/rpcwallet.cpp
achow101,2019-07-10 15:46:31,Maybe for a follow up. Trying to avoid invalidating ACKs.,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302139984,302139984,src/wallet/rpcwallet.cpp
achow101,2019-07-10 15:46:35,Maybe for a follow up. Trying to avoid invalidating ACKs.,https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302140010,302140010,src/wallet/rpcwallet.cpp
