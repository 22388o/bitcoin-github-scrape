[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529242026",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-529242026",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 529242026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MjAyNg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T21:10:52Z",
    "updated_at": "2020-01-03T20:21:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17783](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17783.html) (util: Fix -norpcwhitelist, -norpcallowip, and similar corner case behavior by ryanofsky)\n* [#17581](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17581.html) (refactor: Remove settings merge reverse precedence code by ryanofsky)\n* [#17580](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17580.html) (refactor: Add ALLOW_LIST flags and enforce usage in CheckArgFlags by ryanofsky)\n* [#17493](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17493.html) (util: Forbid ambiguous multiple assignments in config file by ryanofsky)\n* [#17452](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17452.html) (test: update fuzz directory in .gitignore by jonatack)\n* [#17398](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17398.html) (build: Update leveldb to 1.22+ by laanwj)\n* [#17383](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17383.html) (Refactor: Move consts to their correct translation units by jnewbery)\n* [#17227](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17227.html) (Qt: Add Android packaging support by icota)\n* [#16722](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16722.html) (build: Disable warnings for leveldb subtree by default by hebasto)\n* [#15367](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15367.html) (feature: Added ability for users to add a startup command by benthecarman)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529242026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529243342",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-529243342",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 529243342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTI0MzM0Mg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T21:28:07Z",
    "updated_at": "2019-09-10T04:43:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK: really like these ideas/proof-of-concepts on how to improve block/block header transport diversity. Thanks for working on this @TheBlueMatt!\r\n\r\nThis \"headers over DNS\" idea could be combined with DNS over HTTPS (DoH) using widely used DoH servers.\r\n\r\nDNS lookups are trivial to block/filter for a MITM adversary but if the user is instead doing lookups using DoH with a widely used DoH-server (think Mozilla, Google or CloudFlare or similar large scale operation) -- that would be hard to null route/block without upsetting non-Bitcoin users.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529243342/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529495285",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-529495285",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 529495285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTQ5NTI4NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-09T14:14:19Z",
    "updated_at": "2019-09-09T14:14:19Z",
    "author_association": "MEMBER",
    "body": "Interesting idea!\r\nI think this needs to be disabled when `-proxy` is in use, as the DNS lookups would bypass the proxy.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529495285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529575269",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-529575269",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 529575269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTU3NTI2OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-09T17:06:10Z",
    "updated_at": "2019-09-09T17:06:19Z",
    "author_association": "MEMBER",
    "body": "Tried to test this, but doesn't look like `bitcoinheaders.net` provides headers after 60000, is this still in progress?\r\n````sh\r\n$ host 59999.5.bitcoinheaders.net\r\n59999.5.bitcoinheaders.net has IPv6 address 2001:53ef:f60e:4c5c:670f:1c16:2d0a:300\r\n...\r\n$ host 60000.6.bitcoinheaders.net\r\nHost 60000.6.bitcoinheaders.net not found: 2(SERVFAIL)\r\n````\r\nCan bind (or DNS, for that matter) handle huge numbers of hosts like this?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529575269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529585032",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-529585032",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 529585032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTU4NTAzMg==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-09T17:30:34Z",
    "updated_at": "2019-09-09T17:30:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, I'm currently updating the zones. Bind can't handle huge zones so well hence why it got split up into chunks of 10k, and I'm currently slowly churning through dnssec signing for the larger zones. They should be up in a few hours.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529585032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529685351",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-529685351",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 529685351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTY4NTM1MQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-09T22:04:12Z",
    "updated_at": "2019-09-09T22:04:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should be good now. Turns out bind's inline dnssec signing has some hangs on big zones, worked fine once I manually signed them.\n\n> On Sep 9, 2019, at 13:30, Matt Corallo <notifications@github.com> wrote:\n> \n> Right, I'm currently updating the zones. Bind can't handle huge zones so well hence why it got split up into chunks of 10k, and I'm currently slowly churning through dnssec signing for the larger zones. They should be up in a few hours.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529685351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536797693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-536797693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 536797693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjc5NzY5Mw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-30T23:48:24Z",
    "updated_at": "2019-09-30T23:48:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "No longer based on #16762 (since this is simpler, so a better first-land), plus the build issue was resolved (thanks to @theuni!). Should be ready for review/merge now!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536797693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538640176",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-538640176",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 538640176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODY0MDE3Ng==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-05T11:06:07Z",
    "updated_at": "2019-10-05T11:06:07Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Discussing with @theuni, there might be the possibility to simplify this even further by dropping the use of `Cargo`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538640176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539546642",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-539546642",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 539546642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NjY0Mg==",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-08T14:42:04Z",
    "updated_at": "2019-10-08T15:04:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Personally I really like https://doc.rust-lang.org/std/ptr/struct.NonNull.html as it gives a little bit more compile time assurance (requires you to check for nullness and after you checked you easily know you don't need to check anymore)\r\n\r\nEdit: I'm actually not sure anymore. Because with NonNull it's hard to identify const VS mut pointers.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539546642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540760657",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-540760657",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 540760657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc2MDY1Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T19:59:46Z",
    "updated_at": "2019-10-10T19:59:46Z",
    "author_association": "MEMBER",
    "body": "None of the travis jobs built this, nor gitian",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540760657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540828817",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-540828817",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 540828817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDgyODgxNw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T22:43:22Z",
    "updated_at": "2019-10-10T22:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should be run in travis now, but waiting to see it run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540828817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540833632",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-540833632",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 540833632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDgzMzYzMg==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T23:03:42Z",
    "updated_at": "2019-10-10T23:03:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, looks like the travis changes successfully ran the in-rust tests:\r\n\r\n```\r\nrunning 1 test\r\n\r\ntest dns_headers::test_map_addrs ... ok\r\n\r\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540833632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542148832",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-542148832",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 542148832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE0ODgzMg==",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-15T10:33:21Z",
    "updated_at": "2019-10-15T10:33:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK. I hope to actually test the usability of this in the following days",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542148832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542953905",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-542953905",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 542953905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mjk1MzkwNQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-17T01:12:59Z",
    "updated_at": "2019-10-17T01:12:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed the outstanding issue where rust code changes (outside of lib.rs) doesn't result in rebuild of the rust lib (caused by the migration away from cargo to rustc).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542953905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546456366",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-546456366",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 546456366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjQ1NjM2Ng==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-25T18:11:04Z",
    "updated_at": "2019-10-25T18:13:48Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\n\r\nI'd really like to do a cleanup of the buildsystem changes here, as it's a bit of a Frankenstein after a bunch of back+forth on the rust side.\r\n\r\nBut I haven't had the chance yet, and I've held this up long enough already, so I can do that post-merge (assuming it's merged) if necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546456366/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549001353",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-549001353",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 549001353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTAwMTM1Mw==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-02T02:17:07Z",
    "updated_at": "2019-11-02T02:17:07Z",
    "author_association": "MEMBER",
    "body": "@dongcarl Compile with `--enable-rust-`, rust library is finely compiled in generated `src/rusty` dir but not linked in binary.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549001353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549489371",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-549489371",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 549489371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ4OTM3MQ==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T18:37:31Z",
    "updated_at": "2019-11-04T18:37:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "The latest push seems to be working.\r\n\r\nA few tips for other reviewers:\r\n\r\n1. Empty out your `~/.bitcoin`\r\n2. Comment out\r\nhttps://github.com/bitcoin/bitcoin/blob/b060ca707b6eaa7cff26587b3b5822c1ba8c4b7f/src/rusty/src/dns_headers.rs#L79\r\n3. `./src/bitcoind --headersfetchdns=bitcoinheaders.net --connect=0`\r\n4. Marvel at blockheaders sync progress in stdout, or watch `sudo tcpdump udp port 53`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549489371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551239718",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-551239718",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 551239718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzOTcxOA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T19:59:53Z",
    "updated_at": "2019-11-07T19:59:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rejiggered the defaults again: today's meeting discussion was \"wait, why are we building by default, dont do that\", so we're back to off-by-default, which does neatly solve the issues @theuni had above. Should be ready to go (tm) now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551239718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555402916",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-555402916",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 555402916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQwMjkxNg==",
    "user": {
      "login": "icota",
      "id": 762502,
      "node_id": "MDQ6VXNlcjc2MjUwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/762502?u=9d452bcc84e71f48f369a9a0a1f5be04ce80393f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icota",
      "html_url": "https://github.com/icota",
      "followers_url": "https://api.github.com/users/icota/followers",
      "following_url": "https://api.github.com/users/icota/following{/other_user}",
      "gists_url": "https://api.github.com/users/icota/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icota/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
      "organizations_url": "https://api.github.com/users/icota/orgs",
      "repos_url": "https://api.github.com/users/icota/repos",
      "events_url": "https://api.github.com/users/icota/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icota/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-19T09:02:42Z",
    "updated_at": "2019-11-19T09:02:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "tACK 0a3c6d2e8ed1b62c60e62df3f75f4ac30618597e\r\nIt does what it says on the tin. It's great to have redundancy. IMO Rust is a very welcome addition and this PR (being optional at compile and runtime) is the least controvesial way to introduce it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555402916/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571825345",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-571825345",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 571825345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTgyNTM0NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-07T23:43:07Z",
    "updated_at": "2020-01-07T23:43:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571825345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595413916",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-595413916",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 595413916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTQxMzkxNg==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-05T19:48:09Z",
    "updated_at": "2020-03-05T19:48:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing due to lack of interest.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595413916/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723929733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#issuecomment-723929733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16834",
    "id": 723929733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzkyOTczMw==",
    "user": {
      "login": "gdassori",
      "id": 5659270,
      "node_id": "MDQ6VXNlcjU2NTkyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5659270?u=1ea01d12f937af20187fce7bc7704e0931b4a155&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdassori",
      "html_url": "https://github.com/gdassori",
      "followers_url": "https://api.github.com/users/gdassori/followers",
      "following_url": "https://api.github.com/users/gdassori/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdassori/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdassori/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdassori/subscriptions",
      "organizations_url": "https://api.github.com/users/gdassori/orgs",
      "repos_url": "https://api.github.com/users/gdassori/repos",
      "events_url": "https://api.github.com/users/gdassori/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdassori/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-09T10:42:02Z",
    "updated_at": "2020-11-09T10:42:02Z",
    "author_association": "NONE",
    "body": "Aw, sadly I've missed this at the time. As I told to Matt elsewhere this reminded me of [chaindnsd](https://github.com/chaindns/chaindnsd), a POC I did some years ago... and I would loved that feature into the reference impl :-)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723929733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332487022",
    "pull_request_review_id": 298730345,
    "id": 332487022,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjQ4NzAyMg==",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+use std::ffi::c_void;\n+extern \"C\" {\n+    pub fn rusty_IsInitialBlockDownload() -> bool;\n+    pub fn rusty_ShutdownRequested() -> bool;\n+\n+    fn rusty_ProcessNewBlock(blockdata: *const u8, blockdatalen: usize, blockindex_requested: *const c_void);\n+\n+    /// Connects count headers serialized in a block of memory, each stride bytes from each other.\n+    /// Returns the last header which was connected, if any (or NULL).\n+    fn rusty_ConnectHeaders(headers: *const u8, stride: usize, count: usize) -> *const c_void;\n+\n+    // Utilities to work with CBlockIndex pointers. Wrapped in a safe wrapper below.\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the current tip.\n+    /// Guaranteed to never be NULL (but may be genesis)\n+    fn rusty_GetChainTip() -> *const c_void;\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the genesis block.\n+    /// Guaranteed to never be NULL\n+    fn rusty_GetGenesisIndex() -> *const c_void;\n+\n+    #[allow(dead_code)]\n+    /// Finds a CBlockIndex* for a given block hash, or NULL if none is found\n+    fn rusty_HashToIndex(hash: *const u8) -> *const c_void;\n+\n+    #[allow(dead_code)]\n+    /// Gets the height of a given CBlockIndex* pointer\n+    fn rusty_IndexToHeight(index: *const c_void) -> i32;\n+\n+    /// Gets the hash of a given CBlockIndex* pointer\n+    fn rusty_IndexToHash(index: *const c_void) -> *const u8;\n+}\n+\n+/// Connects the given array of (sorted, in chain order) headers (in serialized, 80-byte form).\n+/// Returns the last header which was connected, if any.\n+pub fn connect_headers_flat_bytes(headers: &[u8]) -> Option<BlockIndex> {\n+    if headers.len() % 80 != 0 { return None; }\n+    if headers.is_empty() { return None; }\n+    let index = unsafe { rusty_ConnectHeaders(headers.as_ptr(), 80, headers.len() / 80) };\n+    if index.is_null() { None } else { Some(BlockIndex { index }) }\n+}\n+\n+/// Processes a new block, in serialized form.\n+/// blockindex_requested_by_state shouild be set *only* if the given BlockIndex was provided by\n+/// BlockProviderState::get_next_block_to_download(), and may be set to None always.\n+pub fn connect_block(blockdata: &[u8], blockindex_requested_by_state: Option<BlockIndex>) {\n+    let blockindex = match blockindex_requested_by_state { Some(index) => index.index, None => std::ptr::null(), };\n+    unsafe {\n+        rusty_ProcessNewBlock(blockdata.as_ptr(), blockdata.len(), blockindex);\n+    }\n+}\n+\n+#[derive(PartialEq, Clone, Copy)]\n+pub struct BlockIndex {\n+    index: *const c_void,\n+}\n+\n+impl BlockIndex {\n+    pub fn tip() -> Self {\n+        Self {\n+            index: unsafe { rusty_GetChainTip() },\n+        }\n+    }\n+\n+    #[allow(dead_code)]\n+    pub fn get_from_hash(hash: &[u8; 32]) -> Option<Self> {\n+        let index = unsafe { rusty_HashToIndex(hash.as_ptr()) };\n+        if index.is_null() {\n+            None\n+        } else {\n+            Some(Self { index })\n+        }\n+    }\n+\n+    pub fn genesis() -> Self {\n+        Self {\n+            index: unsafe { rusty_GetGenesisIndex() },\n+        }\n+    }\n+\n+    #[allow(dead_code)]\n+    pub fn height(&self) -> i32 {\n+        unsafe { rusty_IndexToHeight(self.index) }\n+    }\n+\n+    pub fn hash(&self) -> [u8; 32] {\n+        let hashptr = unsafe { rusty_IndexToHash(self.index) };\n+        let mut res = [0u8; 32];\n+        unsafe { std::ptr::copy(hashptr, res.as_mut_ptr(), 32) };",
    "path": "src/rusty/src/bridge.rs",
    "position": null,
    "original_position": 89,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You use the pointer without checking for nullness, I know that you already asserted that on the C++ side, but I think we should be consistent on which side of the FFI checks for null. (and if the rust side then using `NonNull` everywhere forces you to check)",
    "created_at": "2019-10-08T12:39:09Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332487022",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332487022"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332487022"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332487022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 94,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332493772",
    "pull_request_review_id": 298730345,
    "id": 332493772,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjQ5Mzc3Mg==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))",
    "path": "src/rusty/src/dns_headers.rs",
    "position": 24,
    "original_position": 16,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you add a comment on what this sort is doing/for?",
    "created_at": "2019-10-08T12:54:35Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332493772",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332493772"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332493772"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332493772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332497060",
    "pull_request_review_id": 298730345,
    "id": 332497060,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjQ5NzA2MA==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))\n+    });\n+\n+    let mut offs = 0; // in bytes * 2\n+    'for_ips: for ip in ips {\n+        for i in 1..14*2 {\n+            if i % 2 == 1 {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0x0f) >> 0;\n+            } else {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0xf0) >> 4;\n+            }\n+            if offs % 2 == 0 {\n+                header[offs/2] <<= 4;\n+            }\n+            offs += 1;\n+            if offs == 80*2 {\n+                break 'for_ips;\n+            }\n+        }\n+    }\n+    header\n+}\n+\n+#[test]\n+fn test_map_addrs() {\n+    use std::str::FromStr;\n+\n+    let mut ips = Vec::new();\n+    // The genesis header:\n+    ips.push(Ipv6Addr::from_str(\"2001:5a29:ab5f:49ff:ff00:1d1d:ac2b:7c00\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:41bc:3888:a513:23a9:fb8a:a4b1:e5e4\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:3a7b:12b2:7ac7:2c3e:6776:8f61:7fc8\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:10::\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:2000::3:ba3e:dfd7\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:1000::\").unwrap());\n+\n+    assert_eq!(&map_addrs_to_header(&mut ips)[..],\n+        &[0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3b, 0xa3, 0xed, 0xfd, 0x7a, 0x7b, 0x12, 0xb2, 0x7a, 0xc7, 0x2c, 0x3e, 0x67, 0x76, 0x8f, 0x61, 0x7f, 0xc8, 0x1b, 0xc3, 0x88, 0x8a, 0x51, 0x32, 0x3a, 0x9f, 0xb8, 0xaa, 0x4b, 0x1e, 0x5e, 0x4a, 0x29, 0xab, 0x5f, 0x49, 0xff, 0xff, 0x0, 0x1d, 0x1d, 0xac, 0x2b, 0x7c][..]);\n+}\n+\n+static THREAD_COUNT: AtomicUsize = AtomicUsize::new(0);\n+\n+#[no_mangle]\n+pub extern \"C\" fn init_fetch_dns_headers(domain: *const c_char) -> bool {\n+    let domain_str: String = match unsafe { CStr::from_ptr(domain) }.to_str() {",
    "path": "src/rusty/src/dns_headers.rs",
    "position": null,
    "original_position": 60,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Check for nullness?",
    "created_at": "2019-10-08T13:01:08Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332497060",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332497060"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332497060"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332497060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332498919",
    "pull_request_review_id": 298730345,
    "id": 332498919,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjQ5ODkxOQ==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))\n+    });\n+\n+    let mut offs = 0; // in bytes * 2\n+    'for_ips: for ip in ips {\n+        for i in 1..14*2 {\n+            if i % 2 == 1 {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0x0f) >> 0;\n+            } else {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0xf0) >> 4;\n+            }\n+            if offs % 2 == 0 {\n+                header[offs/2] <<= 4;\n+            }\n+            offs += 1;\n+            if offs == 80*2 {\n+                break 'for_ips;\n+            }\n+        }\n+    }\n+    header\n+}\n+\n+#[test]\n+fn test_map_addrs() {\n+    use std::str::FromStr;\n+\n+    let mut ips = Vec::new();\n+    // The genesis header:\n+    ips.push(Ipv6Addr::from_str(\"2001:5a29:ab5f:49ff:ff00:1d1d:ac2b:7c00\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:41bc:3888:a513:23a9:fb8a:a4b1:e5e4\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:3a7b:12b2:7ac7:2c3e:6776:8f61:7fc8\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:10::\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:2000::3:ba3e:dfd7\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:1000::\").unwrap());\n+\n+    assert_eq!(&map_addrs_to_header(&mut ips)[..],\n+        &[0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3b, 0xa3, 0xed, 0xfd, 0x7a, 0x7b, 0x12, 0xb2, 0x7a, 0xc7, 0x2c, 0x3e, 0x67, 0x76, 0x8f, 0x61, 0x7f, 0xc8, 0x1b, 0xc3, 0x88, 0x8a, 0x51, 0x32, 0x3a, 0x9f, 0xb8, 0xaa, 0x4b, 0x1e, 0x5e, 0x4a, 0x29, 0xab, 0x5f, 0x49, 0xff, 0xff, 0x0, 0x1d, 0x1d, 0xac, 0x2b, 0x7c][..]);\n+}\n+\n+static THREAD_COUNT: AtomicUsize = AtomicUsize::new(0);\n+\n+#[no_mangle]\n+pub extern \"C\" fn init_fetch_dns_headers(domain: *const c_char) -> bool {\n+    let domain_str: String = match unsafe { CStr::from_ptr(domain) }.to_str() {\n+        Ok(r) => r.to_string(),\n+        Err(_) => return false,\n+    };\n+    std::thread::spawn(move || {\n+        // Always catch panics so that even if we have some bug in our parser we don't take the\n+        // rest of Bitcoin Core down with us:\n+        THREAD_COUNT.fetch_add(1, Ordering::AcqRel);",
    "path": "src/rusty/src/dns_headers.rs",
    "position": null,
    "original_position": 67,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could this also panic somehow? (it calls `atomic_xadd_acqrel` and I can't find the source code for it)",
    "created_at": "2019-10-08T13:04:59Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332498919",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332498919"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332498919"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332498919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332506754",
    "pull_request_review_id": 298730345,
    "id": 332506754,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjUwNjc1NA==",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+use std::ffi::c_void;\n+extern \"C\" {\n+    pub fn rusty_IsInitialBlockDownload() -> bool;\n+    pub fn rusty_ShutdownRequested() -> bool;\n+\n+    fn rusty_ProcessNewBlock(blockdata: *const u8, blockdatalen: usize, blockindex_requested: *const c_void);\n+\n+    /// Connects count headers serialized in a block of memory, each stride bytes from each other.\n+    /// Returns the last header which was connected, if any (or NULL).\n+    fn rusty_ConnectHeaders(headers: *const u8, stride: usize, count: usize) -> *const c_void;\n+\n+    // Utilities to work with CBlockIndex pointers. Wrapped in a safe wrapper below.\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the current tip.\n+    /// Guaranteed to never be NULL (but may be genesis)\n+    fn rusty_GetChainTip() -> *const c_void;\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the genesis block.\n+    /// Guaranteed to never be NULL\n+    fn rusty_GetGenesisIndex() -> *const c_void;\n+\n+    #[allow(dead_code)]\n+    /// Finds a CBlockIndex* for a given block hash, or NULL if none is found\n+    fn rusty_HashToIndex(hash: *const u8) -> *const c_void;\n+\n+    #[allow(dead_code)]\n+    /// Gets the height of a given CBlockIndex* pointer\n+    fn rusty_IndexToHeight(index: *const c_void) -> i32;\n+\n+    /// Gets the hash of a given CBlockIndex* pointer\n+    fn rusty_IndexToHash(index: *const c_void) -> *const u8;\n+}\n+\n+/// Connects the given array of (sorted, in chain order) headers (in serialized, 80-byte form).\n+/// Returns the last header which was connected, if any.\n+pub fn connect_headers_flat_bytes(headers: &[u8]) -> Option<BlockIndex> {\n+    if headers.len() % 80 != 0 { return None; }\n+    if headers.is_empty() { return None; }\n+    let index = unsafe { rusty_ConnectHeaders(headers.as_ptr(), 80, headers.len() / 80) };\n+    if index.is_null() { None } else { Some(BlockIndex { index }) }\n+}\n+\n+/// Processes a new block, in serialized form.\n+/// blockindex_requested_by_state shouild be set *only* if the given BlockIndex was provided by",
    "path": "src/rusty/src/bridge.rs",
    "position": null,
    "original_position": 44,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: *should",
    "created_at": "2019-10-08T13:21:03Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332506754",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332506754"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r332506754"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332506754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 44,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333748767",
    "pull_request_review_id": 300369718,
    "id": 333748767,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzc0ODc2Nw==",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+use std::ffi::c_void;\n+extern \"C\" {\n+    pub fn rusty_IsInitialBlockDownload() -> bool;\n+    pub fn rusty_ShutdownRequested() -> bool;\n+\n+    fn rusty_ProcessNewBlock(blockdata: *const u8, blockdatalen: usize, blockindex_requested: *const c_void);\n+\n+    /// Connects count headers serialized in a block of memory, each stride bytes from each other.\n+    /// Returns the last header which was connected, if any (or NULL).\n+    fn rusty_ConnectHeaders(headers: *const u8, stride: usize, count: usize) -> *const c_void;\n+\n+    // Utilities to work with CBlockIndex pointers. Wrapped in a safe wrapper below.\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the current tip.\n+    /// Guaranteed to never be NULL (but may be genesis)\n+    fn rusty_GetChainTip() -> *const c_void;\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the genesis block.\n+    /// Guaranteed to never be NULL\n+    fn rusty_GetGenesisIndex() -> *const c_void;\n+\n+    #[allow(dead_code)]\n+    /// Finds a CBlockIndex* for a given block hash, or NULL if none is found\n+    fn rusty_HashToIndex(hash: *const u8) -> *const c_void;\n+\n+    #[allow(dead_code)]\n+    /// Gets the height of a given CBlockIndex* pointer\n+    fn rusty_IndexToHeight(index: *const c_void) -> i32;\n+\n+    /// Gets the hash of a given CBlockIndex* pointer\n+    fn rusty_IndexToHash(index: *const c_void) -> *const u8;\n+}\n+\n+/// Connects the given array of (sorted, in chain order) headers (in serialized, 80-byte form).\n+/// Returns the last header which was connected, if any.\n+pub fn connect_headers_flat_bytes(headers: &[u8]) -> Option<BlockIndex> {\n+    if headers.len() % 80 != 0 { return None; }\n+    if headers.is_empty() { return None; }\n+    let index = unsafe { rusty_ConnectHeaders(headers.as_ptr(), 80, headers.len() / 80) };\n+    if index.is_null() { None } else { Some(BlockIndex { index }) }\n+}\n+\n+/// Processes a new block, in serialized form.\n+/// blockindex_requested_by_state shouild be set *only* if the given BlockIndex was provided by\n+/// BlockProviderState::get_next_block_to_download(), and may be set to None always.\n+pub fn connect_block(blockdata: &[u8], blockindex_requested_by_state: Option<BlockIndex>) {\n+    let blockindex = match blockindex_requested_by_state { Some(index) => index.index, None => std::ptr::null(), };\n+    unsafe {\n+        rusty_ProcessNewBlock(blockdata.as_ptr(), blockdata.len(), blockindex);\n+    }\n+}\n+\n+#[derive(PartialEq, Clone, Copy)]\n+pub struct BlockIndex {\n+    index: *const c_void,\n+}\n+\n+impl BlockIndex {\n+    pub fn tip() -> Self {\n+        Self {\n+            index: unsafe { rusty_GetChainTip() },\n+        }\n+    }\n+\n+    #[allow(dead_code)]\n+    pub fn get_from_hash(hash: &[u8; 32]) -> Option<Self> {\n+        let index = unsafe { rusty_HashToIndex(hash.as_ptr()) };\n+        if index.is_null() {\n+            None\n+        } else {\n+            Some(Self { index })\n+        }\n+    }\n+\n+    pub fn genesis() -> Self {\n+        Self {\n+            index: unsafe { rusty_GetGenesisIndex() },\n+        }\n+    }\n+\n+    #[allow(dead_code)]\n+    pub fn height(&self) -> i32 {\n+        unsafe { rusty_IndexToHeight(self.index) }\n+    }\n+\n+    pub fn hash(&self) -> [u8; 32] {\n+        let hashptr = unsafe { rusty_IndexToHash(self.index) };\n+        let mut res = [0u8; 32];\n+        unsafe { std::ptr::copy(hashptr, res.as_mut_ptr(), 32) };",
    "path": "src/rusty/src/bridge.rs",
    "position": null,
    "original_position": 89,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added an if is_null() { unreachable!(); } which I think is the right approach - it clearly isn't allowed to be null, but its safe and will panic inside rust.",
    "created_at": "2019-10-10T21:44:44Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333748767",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333748767"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333748767"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333748767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 94,
    "side": "RIGHT",
    "in_reply_to_id": 332487022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333750198",
    "pull_request_review_id": 300371495,
    "id": 333750198,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzc1MDE5OA==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))\n+    });\n+\n+    let mut offs = 0; // in bytes * 2\n+    'for_ips: for ip in ips {\n+        for i in 1..14*2 {\n+            if i % 2 == 1 {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0x0f) >> 0;\n+            } else {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0xf0) >> 4;\n+            }\n+            if offs % 2 == 0 {\n+                header[offs/2] <<= 4;\n+            }\n+            offs += 1;\n+            if offs == 80*2 {\n+                break 'for_ips;\n+            }\n+        }\n+    }\n+    header\n+}\n+\n+#[test]\n+fn test_map_addrs() {\n+    use std::str::FromStr;\n+\n+    let mut ips = Vec::new();\n+    // The genesis header:\n+    ips.push(Ipv6Addr::from_str(\"2001:5a29:ab5f:49ff:ff00:1d1d:ac2b:7c00\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:41bc:3888:a513:23a9:fb8a:a4b1:e5e4\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:3a7b:12b2:7ac7:2c3e:6776:8f61:7fc8\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:10::\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:2000::3:ba3e:dfd7\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:1000::\").unwrap());\n+\n+    assert_eq!(&map_addrs_to_header(&mut ips)[..],\n+        &[0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3b, 0xa3, 0xed, 0xfd, 0x7a, 0x7b, 0x12, 0xb2, 0x7a, 0xc7, 0x2c, 0x3e, 0x67, 0x76, 0x8f, 0x61, 0x7f, 0xc8, 0x1b, 0xc3, 0x88, 0x8a, 0x51, 0x32, 0x3a, 0x9f, 0xb8, 0xaa, 0x4b, 0x1e, 0x5e, 0x4a, 0x29, 0xab, 0x5f, 0x49, 0xff, 0xff, 0x0, 0x1d, 0x1d, 0xac, 0x2b, 0x7c][..]);\n+}\n+\n+static THREAD_COUNT: AtomicUsize = AtomicUsize::new(0);\n+\n+#[no_mangle]\n+pub extern \"C\" fn init_fetch_dns_headers(domain: *const c_char) -> bool {\n+    let domain_str: String = match unsafe { CStr::from_ptr(domain) }.to_str() {\n+        Ok(r) => r.to_string(),\n+        Err(_) => return false,\n+    };\n+    std::thread::spawn(move || {\n+        // Always catch panics so that even if we have some bug in our parser we don't take the\n+        // rest of Bitcoin Core down with us:\n+        THREAD_COUNT.fetch_add(1, Ordering::AcqRel);",
    "path": "src/rusty/src/dns_headers.rs",
    "position": null,
    "original_position": 67,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I dont think so? Certainly in practice it can't panic since it just compiles down to a few instructions, but the docs even say it wraps, which seems like the only type of panic I could imagine.",
    "created_at": "2019-10-10T21:49:17Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333750198",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333750198"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333750198"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333750198/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 332498919
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333750445",
    "pull_request_review_id": 300371808,
    "id": 333750445,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzc1MDQ0NQ==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))\n+    });\n+\n+    let mut offs = 0; // in bytes * 2\n+    'for_ips: for ip in ips {\n+        for i in 1..14*2 {\n+            if i % 2 == 1 {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0x0f) >> 0;\n+            } else {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0xf0) >> 4;\n+            }\n+            if offs % 2 == 0 {\n+                header[offs/2] <<= 4;\n+            }\n+            offs += 1;\n+            if offs == 80*2 {\n+                break 'for_ips;\n+            }\n+        }\n+    }\n+    header\n+}\n+\n+#[test]\n+fn test_map_addrs() {\n+    use std::str::FromStr;\n+\n+    let mut ips = Vec::new();\n+    // The genesis header:\n+    ips.push(Ipv6Addr::from_str(\"2001:5a29:ab5f:49ff:ff00:1d1d:ac2b:7c00\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:41bc:3888:a513:23a9:fb8a:a4b1:e5e4\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:3a7b:12b2:7ac7:2c3e:6776:8f61:7fc8\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:10::\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:2000::3:ba3e:dfd7\").unwrap());\n+    ips.push(Ipv6Addr::from_str(\"2001:1000::\").unwrap());\n+\n+    assert_eq!(&map_addrs_to_header(&mut ips)[..],\n+        &[0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3b, 0xa3, 0xed, 0xfd, 0x7a, 0x7b, 0x12, 0xb2, 0x7a, 0xc7, 0x2c, 0x3e, 0x67, 0x76, 0x8f, 0x61, 0x7f, 0xc8, 0x1b, 0xc3, 0x88, 0x8a, 0x51, 0x32, 0x3a, 0x9f, 0xb8, 0xaa, 0x4b, 0x1e, 0x5e, 0x4a, 0x29, 0xab, 0x5f, 0x49, 0xff, 0xff, 0x0, 0x1d, 0x1d, 0xac, 0x2b, 0x7c][..]);\n+}\n+\n+static THREAD_COUNT: AtomicUsize = AtomicUsize::new(0);\n+\n+#[no_mangle]\n+pub extern \"C\" fn init_fetch_dns_headers(domain: *const c_char) -> bool {\n+    let domain_str: String = match unsafe { CStr::from_ptr(domain) }.to_str() {",
    "path": "src/rusty/src/dns_headers.rs",
    "position": null,
    "original_position": 60,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "a4b948b5d105cdfd58a159f5c008ddfc28c16068",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Meh? I mean its called during init from C++, it would be kinda hard to get a bug here.",
    "created_at": "2019-10-10T21:50:02Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333750445",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333750445"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333750445"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333750445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT",
    "in_reply_to_id": 332497060
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333896217",
    "pull_request_review_id": 300557522,
    "id": 333896217,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzg5NjIxNw==",
    "diff_hunk": "@@ -137,3 +137,7 @@ db4/\n osx_volname\n dist/\n *.background.tiff\n+\n+# Rust\n+src/rusty/Cargo.lock",
    "path": ".gitignore",
    "position": null,
    "original_position": 6,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "stevenroose",
      "id": 853468,
      "node_id": "MDQ6VXNlcjg1MzQ2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/853468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevenroose",
      "html_url": "https://github.com/stevenroose",
      "followers_url": "https://api.github.com/users/stevenroose/followers",
      "following_url": "https://api.github.com/users/stevenroose/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenroose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
      "organizations_url": "https://api.github.com/users/stevenroose/orgs",
      "repos_url": "https://api.github.com/users/stevenroose/repos",
      "events_url": "https://api.github.com/users/stevenroose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevenroose/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I feel like Core is an end product and thus should commit this (as opposed to libraries). This ensures this project can't be targeted by managers of dependent crates.",
    "created_at": "2019-10-11T09:06:54Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333896217",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333896217"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333896217"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333896217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 142,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333960506",
    "pull_request_review_id": 300643291,
    "id": 333960506,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzk2MDUwNg==",
    "diff_hunk": "@@ -137,3 +137,7 @@ db4/\n osx_volname\n dist/\n *.background.tiff\n+\n+# Rust\n+src/rusty/Cargo.lock",
    "path": ".gitignore",
    "position": null,
    "original_position": 6,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We've dropped using Cargo entirely now, so this line can probably go away.",
    "created_at": "2019-10-11T12:13:25Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333960506",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333960506"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333960506"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333960506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 142,
    "side": "RIGHT",
    "in_reply_to_id": 333896217
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333977711",
    "pull_request_review_id": 300666728,
    "id": 333977711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzk3NzcxMQ==",
    "diff_hunk": "@@ -352,6 +364,13 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs\n+\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS)",
    "path": "src/Makefile.am",
    "position": 60,
    "original_position": 47,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you add some comments here on the options your passing to `rustc`, like `panic=unwind` or `--edition`. Similar to some of the discussion in #17090.",
    "created_at": "2019-10-11T12:58:55Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333977711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333977711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333977711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333977711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 396,
    "original_line": 396,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333984769",
    "pull_request_review_id": 300666728,
    "id": 333984769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzk4NDc2OQ==",
    "diff_hunk": "@@ -676,6 +714,8 @@ $(top_srcdir)/$(subdir)/config/bitcoin-config.h.in:  $(am__configure_deps)\n clean-local:\n \t-$(MAKE) -C secp256k1 clean\n \t-$(MAKE) -C univalue clean\n+\t-rm -rf rusty/release",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 113,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will need to add `src/rusty_test` and `src/rusty_test.dSYM/` somewhere in here.",
    "created_at": "2019-10-11T13:15:41Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333984769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333984769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333984769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333984769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 717,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333987224",
    "pull_request_review_id": 300666728,
    "id": 333987224,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzk4NzIyNA==",
    "diff_hunk": "@@ -367,6 +375,9 @@ void SetupServerArgs()\n #endif\n     gArgs.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Transactions from the wallet, RPC and relay whitelisted inbound peers are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+#if ENABLE_RUSTY\n+    gArgs.AddArg(\"-headersfetchdns=<domain>\", \"A domain name from which to fetch headers. eg bitcoinheaders.net\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I'd prefer we didn't have an example domain name in here.",
    "created_at": "2019-10-11T13:21:13Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333987224",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333987224"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333987224"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333987224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 379,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333994467",
    "pull_request_review_id": 300666728,
    "id": 333994467,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzk5NDQ2Nw==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+use std::ffi::c_void;\n+extern \"C\" {\n+    pub fn rusty_IsInitialBlockDownload() -> bool;\n+    pub fn rusty_ShutdownRequested() -> bool;\n+\n+    fn rusty_ProcessNewBlock(blockdata: *const u8, blockdatalen: usize, blockindex_requested: *const c_void);\n+\n+    /// Connects count headers serialized in a block of memory, each stride bytes from each other.\n+    /// Returns the last header which was connected, if any (or NULL).\n+    fn rusty_ConnectHeaders(headers: *const u8, stride: usize, count: usize) -> *const c_void;\n+\n+    // Utilities to work with CBlockIndex pointers. Wrapped in a safe wrapper below.\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the current tip.\n+    /// Guaranteed to never be NULL (but may be genesis)\n+    fn rusty_GetChainTip() -> *const c_void;\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the genesis block.\n+    /// Guaranteed to never be NULL\n+    fn rusty_GetGenesisIndex() -> *const c_void;\n+\n+    #[allow(dead_code)]",
    "path": "src/rusty/src/bridge.rs",
    "position": null,
    "original_position": 22,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There's a lot of `#[allow(dead_code)]` usage here. I assume some of it is because there's code that was/is part of #16762? I'd prefer we didn't introduce anything we aren't actually using here and instead bring it in in subsequent PRs.",
    "created_at": "2019-10-11T13:36:52Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333994467",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333994467"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r333994467"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333994467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334033432",
    "pull_request_review_id": 300666728,
    "id": 334033432,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDAzMzQzMg==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+mod bridge;\n+use bridge::*;\n+mod dns_headers;\n+\n+use std::alloc::{GlobalAlloc, Layout, System};\n+use std::ptr;\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::{Duration, Instant};\n+\n+// We keep track of all memory allocated by Rust code, refusing new allocations if it exceeds\n+// 128MB.\n+//\n+// Note that while Rust's std, in general, should panic in response to a null allocation, it\n+// is totally conceivable that some code will instead dereference this null pointer, which\n+// would violate our guarantees that Rust modules should never crash the entire application.\n+//\n+// In the future, as upstream Rust explores a safer allocation API (eg the Alloc API which\n+// returns Results instead of raw pointers, or redefining the GlobalAlloc API to allow\n+// panic!()s inside of alloc calls), we should switch to those, however these APIs are\n+// currently unstable.\n+const TOTAL_MEM_LIMIT_BYTES: usize = 128 * 1024 * 1024;",
    "path": "src/rusty/src/lib.rs",
    "position": 24,
    "original_position": 21,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> refusing new allocations if it exceeds 128MB.\r\n\r\nSo when Rust tries to allocate more than 128mb bitcoind will crash? I dropped the limit to something tiny and `bitcoind` would crash on startup.",
    "created_at": "2019-10-11T14:56:28Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334033432",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334033432"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334033432"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334033432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334049085",
    "pull_request_review_id": 300763211,
    "id": 334049085,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDA0OTA4NQ==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+mod bridge;\n+use bridge::*;\n+mod dns_headers;\n+\n+use std::alloc::{GlobalAlloc, Layout, System};\n+use std::ptr;\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::{Duration, Instant};\n+\n+// We keep track of all memory allocated by Rust code, refusing new allocations if it exceeds\n+// 128MB.\n+//\n+// Note that while Rust's std, in general, should panic in response to a null allocation, it\n+// is totally conceivable that some code will instead dereference this null pointer, which\n+// would violate our guarantees that Rust modules should never crash the entire application.\n+//\n+// In the future, as upstream Rust explores a safer allocation API (eg the Alloc API which\n+// returns Results instead of raw pointers, or redefining the GlobalAlloc API to allow\n+// panic!()s inside of alloc calls), we should switch to those, however these APIs are\n+// currently unstable.\n+const TOTAL_MEM_LIMIT_BYTES: usize = 128 * 1024 * 1024;",
    "path": "src/rusty/src/lib.rs",
    "position": 24,
    "original_position": 21,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The reason it crashed all of bitcoind when this is tiny is because this allocation is outside out `catch_unwind` https://github.com/bitcoin/bitcoin/pull/16834/files#diff-57a33003fdd95417a0d7d83201893c62R69\r\n\r\n\r\nHow long does https://github.com/bitcoin/bitcoin/pull/16834/files#diff-c865a8939105e6350a50af02766291b7R1841 lives?",
    "created_at": "2019-10-11T15:28:24Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334049085",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334049085"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334049085"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334049085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 334033432
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334220951",
    "pull_request_review_id": 300986141,
    "id": 334220951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDIyMDk1MQ==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+use std::ffi::c_void;\n+extern \"C\" {\n+    pub fn rusty_IsInitialBlockDownload() -> bool;\n+    pub fn rusty_ShutdownRequested() -> bool;\n+\n+    fn rusty_ProcessNewBlock(blockdata: *const u8, blockdatalen: usize, blockindex_requested: *const c_void);\n+\n+    /// Connects count headers serialized in a block of memory, each stride bytes from each other.\n+    /// Returns the last header which was connected, if any (or NULL).\n+    fn rusty_ConnectHeaders(headers: *const u8, stride: usize, count: usize) -> *const c_void;\n+\n+    // Utilities to work with CBlockIndex pointers. Wrapped in a safe wrapper below.\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the current tip.\n+    /// Guaranteed to never be NULL (but may be genesis)\n+    fn rusty_GetChainTip() -> *const c_void;\n+\n+    /// Gets a CBlockIndex* pointer (casted to a c_void) representing the genesis block.\n+    /// Guaranteed to never be NULL\n+    fn rusty_GetGenesisIndex() -> *const c_void;\n+\n+    #[allow(dead_code)]",
    "path": "src/rusty/src/bridge.rs",
    "position": null,
    "original_position": 22,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Admittedly I was being lazy, fixed now.",
    "created_at": "2019-10-12T04:55:59Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334220951",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334220951"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334220951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334220951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT",
    "in_reply_to_id": 333994467
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334221103",
    "pull_request_review_id": 300986358,
    "id": 334221103,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDIyMTEwMw==",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+mod bridge;\n+use bridge::*;\n+mod dns_headers;\n+\n+use std::alloc::{GlobalAlloc, Layout, System};\n+use std::ptr;\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::{Duration, Instant};\n+\n+// We keep track of all memory allocated by Rust code, refusing new allocations if it exceeds\n+// 128MB.\n+//\n+// Note that while Rust's std, in general, should panic in response to a null allocation, it\n+// is totally conceivable that some code will instead dereference this null pointer, which\n+// would violate our guarantees that Rust modules should never crash the entire application.\n+//\n+// In the future, as upstream Rust explores a safer allocation API (eg the Alloc API which\n+// returns Results instead of raw pointers, or redefining the GlobalAlloc API to allow\n+// panic!()s inside of alloc calls), we should switch to those, however these APIs are\n+// currently unstable.\n+const TOTAL_MEM_LIMIT_BYTES: usize = 128 * 1024 * 1024;",
    "path": "src/rusty/src/lib.rs",
    "position": 24,
    "original_position": 21,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed, I think its fine, but just to make your testing easier, I went ahead and wrapped the whole function in a unwind. I *think* we'd be ok with holding the pointer longer, but trying to think about how long a pointer lives is exactly the reason we're writing rust code to begin with, so, please no :)",
    "created_at": "2019-10-12T05:04:33Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334221103",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334221103"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334221103"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334221103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 334033432
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334221161",
    "pull_request_review_id": 300986437,
    "id": 334221161,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDIyMTE2MQ==",
    "diff_hunk": "@@ -367,6 +375,9 @@ void SetupServerArgs()\n #endif\n     gArgs.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Transactions from the wallet, RPC and relay whitelisted inbound peers are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+#if ENABLE_RUSTY\n+    gArgs.AddArg(\"-headersfetchdns=<domain>\", \"A domain name from which to fetch headers. eg bitcoinheaders.net\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "129880fcd8c3d9c88cab6919a468a24f8df722c0",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I actually kinda prefer not, just cause you need something that works. At some point after a few of these things land I want to write up a AntiCensorship.md doc, which I suppose can contain targets for this that include a bit more text (eg \"run by X, wont log, but you may get logged by Y\"), at which point we can use example.com, but...whatever.",
    "created_at": "2019-10-12T05:07:18Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334221161",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334221161"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334221161"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334221161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 379,
    "side": "RIGHT",
    "in_reply_to_id": 333987224
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334240371",
    "pull_request_review_id": 301007960,
    "id": 334240371,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDI0MDM3MQ==",
    "diff_hunk": "@@ -0,0 +1,128 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+/// Maps a set of six IPv6 addresses to an 80-byte Bitcoin header.\n+/// The first two bytes of each address are ignored.\n+/// The next 4 bits in each address indicate the ordering of the addresses\n+/// (as DNS resolvers/servers often shuffle the addresses)\n+/// The first 8 bits (ie the second half of the 3rd byte and first half of the 4th)\n+/// of the first address are interpreted as a version and must currently be 0.\n+/// The remaining bits are placed into the 80 byte result in order.\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        // Sort based on the first 4 bits in the 3rd byte...\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))\n+    });\n+    if ips.len() != 6 { unreachable!(); }\n+    let version = (ips[0].octets()[2] & 0x0f) | (ips[0].octets()[3] & 0xf0);\n+    if version != 0 { return header; }\n+\n+    let mut offs = 0; // in bytes * 2\n+    for (idx, ip) in ips.iter().enumerate() {\n+        for i in if idx == 0 { 3..14*2 } else { 1..14*2 } {\n+            if i % 2 == 1 {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0x0f) >> 0;\n+            } else {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0xf0) >> 4;\n+            }\n+            if offs % 2 == 0 {\n+                header[offs/2] <<= 4;\n+            }\n+            offs += 1;\n+        }\n+    }\n+    header\n+}\n+\n+#[test]",
    "path": "src/rusty/src/dns_headers.rs",
    "position": 48,
    "original_position": 47,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "e86a034eee2c2adac5edd36433624057238a6ada",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "feature gate this? `#[cfg(test)]`",
    "created_at": "2019-10-12T14:34:54Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334240371",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334240371"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334240371"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334240371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 48,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334250324",
    "pull_request_review_id": 301019401,
    "id": 334250324,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDI1MDMyNA==",
    "diff_hunk": "@@ -0,0 +1,128 @@\n+use std::net::{IpAddr, Ipv6Addr, ToSocketAddrs};\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::time::Duration;\n+use std::panic::catch_unwind;\n+\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n+\n+use crate::bridge::*;\n+use crate::await_ibd_complete_or_stalled;\n+\n+/// Maps a set of six IPv6 addresses to an 80-byte Bitcoin header.\n+/// The first two bytes of each address are ignored.\n+/// The next 4 bits in each address indicate the ordering of the addresses\n+/// (as DNS resolvers/servers often shuffle the addresses)\n+/// The first 8 bits (ie the second half of the 3rd byte and first half of the 4th)\n+/// of the first address are interpreted as a version and must currently be 0.\n+/// The remaining bits are placed into the 80 byte result in order.\n+fn map_addrs_to_header(ips: &mut [Ipv6Addr]) -> [u8; 80] {\n+    let mut header = [0u8; 80];\n+    if ips.len() != 6 { return header; }\n+    ips.sort_unstable_by(|a, b| {\n+        // Sort based on the first 4 bits in the 3rd byte...\n+        (&(a.octets()[2] & 0xf0)).cmp(&(b.octets()[2] & 0xf0))\n+    });\n+    if ips.len() != 6 { unreachable!(); }\n+    let version = (ips[0].octets()[2] & 0x0f) | (ips[0].octets()[3] & 0xf0);\n+    if version != 0 { return header; }\n+\n+    let mut offs = 0; // in bytes * 2\n+    for (idx, ip) in ips.iter().enumerate() {\n+        for i in if idx == 0 { 3..14*2 } else { 1..14*2 } {\n+            if i % 2 == 1 {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0x0f) >> 0;\n+            } else {\n+                header[offs/2] |= (ip.octets()[i/2 + 2] & 0xf0) >> 4;\n+            }\n+            if offs % 2 == 0 {\n+                header[offs/2] <<= 4;\n+            }\n+            offs += 1;\n+        }\n+    }\n+    header\n+}\n+\n+#[test]",
    "path": "src/rusty/src/dns_headers.rs",
    "position": 48,
    "original_position": 47,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "e86a034eee2c2adac5edd36433624057238a6ada",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done. Double checked that you can slip non-compiling code into the function and it won't fail to build until you run make check, and that make check still fails if you change the header.",
    "created_at": "2019-10-12T19:25:37Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334250324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334250324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r334250324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/334250324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 48,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 334240371
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340280361",
    "pull_request_review_id": 308775178,
    "id": 340280361,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDI4MDM2MQ==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)",
    "path": "configure.ac",
    "position": null,
    "original_position": 18,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think with the check below... We neeed:\r\n```suggestion\r\n  AC_PATH_PROG(RUSTC, rustc, none)\r\n```",
    "created_at": "2019-10-29T19:25:06Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340280361",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340280361"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340280361"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340280361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 486,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340302330",
    "pull_request_review_id": 308775178,
    "id": 340302330,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwMjMzMA==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)\n+  if test x$RUSTC = xnone; then\n+    use_rust=no\n+    AC_MSG_ERROR(\"rustc required to enable experimental rust support.\")\n+  fi\n+\n+  case $host in\n+    ${host_cpu}-w64-mingw*) RUST_TARGET=${host_cpu}-pc-windows-gnu ;;",
    "path": "configure.ac",
    "position": null,
    "original_position": 25,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Let's perform these checks with `*mingw*`, `*linux*`, and `*darwin*` like we do in other places, or at the very least do the right thing for triples like `aarch64-linux-gnu` (notice that there's no `-pc`)",
    "created_at": "2019-10-29T20:16:41Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340302330",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340302330"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340302330"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340302330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 502,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340303658",
    "pull_request_review_id": 308775178,
    "id": 340303658,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwMzY1OA==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)\n+  if test x$RUSTC = xnone; then\n+    use_rust=no\n+    AC_MSG_ERROR(\"rustc required to enable experimental rust support.\")\n+  fi\n+\n+  case $host in\n+    ${host_cpu}-w64-mingw*) RUST_TARGET=${host_cpu}-pc-windows-gnu ;;\n+    ${host_cpu}-pc-linux*) RUST_TARGET=\"${host_cpu}-unknown-${host_os}\" ;;\n+    ${host_cpu}-apple-darwin*) RUST_TARGET=${host_cpu}-apple-darwin ;;\n+    *) RUST_TARGET=\"${host}\" ;;\n+  esac\n+\n+  dnl TODO: create a rust test project and check host_alias as well as host.\n+  AC_DEFINE(ENABLE_RUSTY, [true], [Use Rusty])",
    "path": "configure.ac",
    "position": null,
    "original_position": 32,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n  AC_DEFINE(ENABLE_RUSTY, [true], [Enable experimental Rust support.])\r\n```",
    "created_at": "2019-10-29T20:19:23Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340303658",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340303658"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340303658"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340303658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 500,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304847",
    "pull_request_review_id": 308775178,
    "id": 340304847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNDg0Nw==",
    "diff_hunk": "@@ -503,6 +527,7 @@ case $host in\n      AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))\n      AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))\n+     AC_CHECK_LIB([userenv],      [main],, AC_MSG_ERROR(libuserenv missing))",
    "path": "configure.ac",
    "position": null,
    "original_position": 42,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do we need `libuserenv` for anything other than Rust?",
    "created_at": "2019-10-29T20:22:04Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340304847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340304847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340304847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 529,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340306159",
    "pull_request_review_id": 308775178,
    "id": 340306159,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMwNjE1OQ==",
    "diff_hunk": "@@ -639,6 +664,14 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n+dnl Find the additional lib (if any) responsible for handling",
    "path": "configure.ac",
    "position": null,
    "original_position": 50,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do we need this for anything other than Rust?",
    "created_at": "2019-10-29T20:24:54Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340306159",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340306159"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340306159"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340306159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 666,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340313612",
    "pull_request_review_id": 308775178,
    "id": 340313612,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMxMzYxMg==",
    "diff_hunk": "@@ -255,6 +262,11 @@ obj/build.h: FORCE\n \t  \"$(abs_top_srcdir)\"\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n+# libbitcoin_rustybridge should not need headers other than Core's internal ones.\n+libbitcoin_rustybridge_a_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir) $(LEVELDB_CPPFLAGS)\n+libbitcoin_rustybridge_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libbitcoin_rustybridge_a_SOURCES =\n+libbitcoin_rustybridge_a_SOURCES += rusty/src/cpp_bridge.cpp",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 36,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I probably don't know Makefile syntax minutiae enough, but why not just:\r\n```\r\nlibbitcoin_rustybridge_a_SOURCES = rusty/src/cpp_bridge.cpp\r\n```",
    "created_at": "2019-10-29T20:41:03Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340313612",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340313612"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340313612"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340313612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 268,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 269,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340319819",
    "pull_request_review_id": 308775178,
    "id": 340319819,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDMxOTgxOQ==",
    "diff_hunk": "@@ -356,6 +368,25 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 47,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n```",
    "created_at": "2019-10-29T20:54:16Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340319819",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340319819"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340319819"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340319819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 374,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340753243",
    "pull_request_review_id": 309383252,
    "id": 340753243,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc1MzI0Mw==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)",
    "path": "configure.ac",
    "position": null,
    "original_position": 18,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't know what this means.... @theuni or should I just take it?",
    "created_at": "2019-10-30T17:20:20Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340753243",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340753243"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340753243"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340753243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 486,
    "side": "RIGHT",
    "in_reply_to_id": 340280361
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340757709",
    "pull_request_review_id": 309389016,
    "id": 340757709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDc1NzcwOQ==",
    "diff_hunk": "@@ -255,6 +262,11 @@ obj/build.h: FORCE\n \t  \"$(abs_top_srcdir)\"\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n+# libbitcoin_rustybridge should not need headers other than Core's internal ones.\n+libbitcoin_rustybridge_a_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir) $(LEVELDB_CPPFLAGS)\n+libbitcoin_rustybridge_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libbitcoin_rustybridge_a_SOURCES =\n+libbitcoin_rustybridge_a_SOURCES += rusty/src/cpp_bridge.cpp",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 36,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think its just historical, fixed.",
    "created_at": "2019-10-30T17:28:27Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340757709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340757709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r340757709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340757709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 268,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 340313612
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341727174",
    "pull_request_review_id": 310662802,
    "id": 341727174,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTcyNzE3NA==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)",
    "path": "configure.ac",
    "position": null,
    "original_position": 18,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, I upated the if to check for empty string, so I think its fine now?",
    "created_at": "2019-11-01T19:51:14Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341727174",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341727174"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341727174"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341727174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 486,
    "side": "RIGHT",
    "in_reply_to_id": 340280361
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341750494",
    "pull_request_review_id": 310694912,
    "id": 341750494,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc1MDQ5NA==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)",
    "path": "configure.ac",
    "position": null,
    "original_position": 18,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thinking about this in terms of actually merging it, it's probably a bad idea for rust support to be opportunistically compiled in if it's auto-detected.\r\n\r\nIt's a significant change, and IMO builders shouldn't have to check build logs to see if they're using rust features or not.\r\n\r\nSo... how about making this explicitly opt-in or opt-out?",
    "created_at": "2019-11-01T21:03:18Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341750494",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341750494"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341750494"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341750494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 486,
    "side": "RIGHT",
    "in_reply_to_id": 340280361
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341752413",
    "pull_request_review_id": 310697239,
    "id": 341752413,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc1MjQxMw==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)\n+  if test x$RUSTC = xnone; then\n+    use_rust=no\n+    AC_MSG_ERROR(\"rustc required to enable experimental rust support.\")\n+  fi\n+\n+  case $host in\n+    ${host_cpu}-w64-mingw*) RUST_TARGET=${host_cpu}-pc-windows-gnu ;;",
    "path": "configure.ac",
    "position": null,
    "original_position": 25,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with moving this into the other sections. Want to create a patch for that?\r\n\r\nNote that these are already expanded triples, though:\r\n```\r\n $ ./config.sub aarch64-linux-gnu\r\naarch64-unknown-linux-gnu\r\n```",
    "created_at": "2019-11-01T21:09:04Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341752413",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341752413"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341752413"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341752413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 502,
    "side": "RIGHT",
    "in_reply_to_id": 340302330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341752948",
    "pull_request_review_id": 310697997,
    "id": 341752948,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc1Mjk0OA==",
    "diff_hunk": "@@ -503,6 +527,7 @@ case $host in\n      AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))\n      AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))\n+     AC_CHECK_LIB([userenv],      [main],, AC_MSG_ERROR(libuserenv missing))",
    "path": "configure.ac",
    "position": null,
    "original_position": 42,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point, this should be gated.\r\nIt may not even be necessary now that we've slimmed down.",
    "created_at": "2019-11-01T21:10:54Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341752948",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341752948"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341752948"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341752948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 529,
    "side": "RIGHT",
    "in_reply_to_id": 340304847
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341753280",
    "pull_request_review_id": 310698470,
    "id": 341753280,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc1MzI4MA==",
    "diff_hunk": "@@ -639,6 +664,14 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n+dnl Find the additional lib (if any) responsible for handling",
    "path": "configure.ac",
    "position": null,
    "original_position": 50,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, and I'm not actually sure why we need it for rust. It would be nice if we could disable the functionality. Again, maybe this isn't necessary now that we've slimmed down and aren't using cargo.",
    "created_at": "2019-11-01T21:12:05Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341753280",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341753280"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341753280"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341753280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 666,
    "side": "RIGHT",
    "in_reply_to_id": 340306159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341753410",
    "pull_request_review_id": 310698673,
    "id": 341753410,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc1MzQxMA==",
    "diff_hunk": "@@ -255,6 +262,11 @@ obj/build.h: FORCE\n \t  \"$(abs_top_srcdir)\"\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n+# libbitcoin_rustybridge should not need headers other than Core's internal ones.\n+libbitcoin_rustybridge_a_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir) $(LEVELDB_CPPFLAGS)\n+libbitcoin_rustybridge_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libbitcoin_rustybridge_a_SOURCES =\n+libbitcoin_rustybridge_a_SOURCES += rusty/src/cpp_bridge.cpp",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 36,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fwiw, I've done this as a convention so that future diffs are 100% straightforward when adding/removing files and keeping them in alphabetical order. I don't really care much either way though.",
    "created_at": "2019-11-01T21:12:31Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341753410",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341753410"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341753410"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341753410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 268,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 340313612
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341768230",
    "pull_request_review_id": 310718298,
    "id": 341768230,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc2ODIzMA==",
    "diff_hunk": "@@ -639,6 +664,14 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n+dnl Find the additional lib (if any) responsible for handling",
    "path": "configure.ac",
    "position": null,
    "original_position": 50,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This also seems to be unnecessary now, at least for linux/win/osx. After removing it (as well as manually removing -ldl from the link line, which some library has rudely added), builds still succeed.",
    "created_at": "2019-11-01T22:11:06Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341768230",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341768230"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341768230"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341768230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 666,
    "side": "RIGHT",
    "in_reply_to_id": 340306159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341769971",
    "pull_request_review_id": 310720508,
    "id": 341769971,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc2OTk3MQ==",
    "diff_hunk": "@@ -359,6 +370,24 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS)\n+\t$(RUSTC) --crate-name rusty $< --crate-type=staticlib --emit=link -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 58,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "74520b47afbe2c4f9b0aad03dc510c1491b5381b",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Whoops, we dropped the --target arg here when switching from cargo. My bad :(\r\n\r\n```--target=$(RUST_TARGET)```",
    "created_at": "2019-11-01T22:19:40Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341769971",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341769971"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341769971"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341769971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 388,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341771482",
    "pull_request_review_id": 310722434,
    "id": 341771482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc3MTQ4Mg==",
    "diff_hunk": "@@ -503,6 +527,7 @@ case $host in\n      AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))\n      AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))\n+     AC_CHECK_LIB([userenv],      [main],, AC_MSG_ERROR(libuserenv missing))",
    "path": "configure.ac",
    "position": null,
    "original_position": 42,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "mingw+rust builds fine without this now, so I guess we can just remove it.",
    "created_at": "2019-11-01T22:27:14Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341771482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341771482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341771482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341771482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 529,
    "side": "RIGHT",
    "in_reply_to_id": 340304847
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341833650",
    "pull_request_review_id": 310797917,
    "id": 341833650,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTgzMzY1MA==",
    "diff_hunk": "@@ -476,6 +482,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(RUSTC,rustc)",
    "path": "configure.ac",
    "position": null,
    "original_position": 18,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm, lets kick this one back to a meeting. I figure some folks will squawk if suddenly Bitcoin Core fails to build cause its missing rustc.",
    "created_at": "2019-11-03T03:25:04Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341833650",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341833650"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341833650"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341833650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 486,
    "side": "RIGHT",
    "in_reply_to_id": 340280361
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341867757",
    "pull_request_review_id": 310834414,
    "id": 341867757,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTg2Nzc1Nw==",
    "diff_hunk": "@@ -639,6 +664,14 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n+dnl Find the additional lib (if any) responsible for handling",
    "path": "configure.ac",
    "position": null,
    "original_position": 50,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "22de67982cb053e1d0ff769e093a4b32a6d5161c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, looks like we do - I unset this then got a build failure on Debian Stable. I did move the block into the if use_rust block.",
    "created_at": "2019-11-03T19:27:05Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341867757",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341867757"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r341867757"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341867757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 666,
    "side": "RIGHT",
    "in_reply_to_id": 340306159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347073549",
    "pull_request_review_id": 317949704,
    "id": 347073549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzA3MzU0OQ==",
    "diff_hunk": "@@ -363,6 +374,27 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs\n+\n+LIBBITCOIN_RUSTY_TEST_SRCS= \\\n+  rusty/src/test_bridge.rs\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS)\n+\t$(RUSTC) --crate-name rusty $< --target=$(RUST_TARGET) --crate-type=staticlib --emit=link -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 61,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "f2564a61709c960d83f1b06cb006967855938049",
    "user": {
      "login": "icota",
      "id": 762502,
      "node_id": "MDQ6VXNlcjc2MjUwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icota",
      "html_url": "https://github.com/icota",
      "followers_url": "https://api.github.com/users/icota/followers",
      "following_url": "https://api.github.com/users/icota/following{/other_user}",
      "gists_url": "https://api.github.com/users/icota/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icota/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
      "organizations_url": "https://api.github.com/users/icota/orgs",
      "repos_url": "https://api.github.com/users/icota/repos",
      "events_url": "https://api.github.com/users/icota/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icota/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Debugging with `gdb` doesn't seem to work with `-O`. Perhaps drop it when `--enable-debug`?",
    "created_at": "2019-11-16T03:15:31Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r347073549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347073549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r347073549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347073549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 395,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347223805",
    "pull_request_review_id": 318128937,
    "id": 347223805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzIyMzgwNQ==",
    "diff_hunk": "@@ -660,7 +692,24 @@ CTAES_DIST += crypto/ctaes/ctaes.h\n CTAES_DIST += crypto/ctaes/README.md\n CTAES_DIST += crypto/ctaes/test.c\n \n-CLEANFILES = $(EXTRA_LIBRARIES)\n+BITCOIN_CORE_H += rusty/src/rust_bridge.h\n+\n+if ENABLE_RUSTY\n+LIBBITCOIN_RUST_LIBS += $(LIBBITCOIN_RUSTY)\n+LIBBITCOIN_RUST_LIBS += $(LIBBITCOIN_RUSTY_BRIDGE)\n+\n+RUSTY_TEST_BIN=rusty/test_rusty\n+$(RUSTY_TEST_BIN): $(LIBBITCOIN_RUSTY_SRCS) $(LIBBITCOIN_RUSTY_TEST_SRCS)\n+\t$(RUSTC) --crate-name test_rusty $< --target=$(RUST_TARGET) --emit=link --test -C debuginfo=2 -C overflow-checks=on --out-dir $(@D)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 98,
    "commit_id": "94051addd99c933338d40a488cf8e810d9cfdd34",
    "original_commit_id": "5c50c0e8f68cfbfe3a3dfd978be1aab17260a1a0",
    "user": {
      "login": "icota",
      "id": 762502,
      "node_id": "MDQ6VXNlcjc2MjUwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icota",
      "html_url": "https://github.com/icota",
      "followers_url": "https://api.github.com/users/icota/followers",
      "following_url": "https://api.github.com/users/icota/following{/other_user}",
      "gists_url": "https://api.github.com/users/icota/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icota/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
      "organizations_url": "https://api.github.com/users/icota/orgs",
      "repos_url": "https://api.github.com/users/icota/repos",
      "events_url": "https://api.github.com/users/icota/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icota/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`RUST_FLAGS` instead of `RUST_TARGET` here?",
    "created_at": "2019-11-18T07:03:05Z",
    "updated_at": "2019-12-05T15:22:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r347223805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347223805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16834#discussion_r347223805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347223805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 703,
    "side": "RIGHT"
  }
]