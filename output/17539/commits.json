[
  {
    "sha": "794fe91395c79f46a6d920bc08de5a0551b359a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTRmZTkxMzk1Yzc5ZjQ2YTZkOTIwYmMwOGRlNWEwNTUxYjM1OWEz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-20T18:30:39Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-20T18:30:39Z"
      },
      "message": "doc: Update and improve Developer Notes",
      "tree": {
        "sha": "c276b955e548706b5272cf30832f1907615f0a3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c276b955e548706b5272cf30832f1907615f0a3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/794fe91395c79f46a6d920bc08de5a0551b359a3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3Vhk8ACgkQQQEIES5+\nqB8AHA/+NlUPNL+XtK0AUIi7aDW1AfkmXb4HjaCHApIqV9KxFTKYiQgN8kRESAWH\nwT2bOiEX12WxYN4JCWf5sNwzvA+ck+5hRPlI855L9r2k2dfdKxmlGY2oeTZ8PX3S\nab/gdo/AJdt1w0blJDtWsf2c5fNn6MPUWpfBdI+e7FDovR14pf1apBloE3OJssNt\n/aahXzt0HrX+06hLVfLqwp21S0hpFaS/k1W5JJPUL++R+Dj7zmupc4MVX+Pgi3kf\nQtxa3cscBATgBCQ1Dj9ZTTuJi2KkcK1bZyGkXuTSptlqoLMX4keKXgB4+txiYTN9\nbx67B/Qj0JWh9byyw4lqf6dhSx06H1INbSshgn09dq2mXFeZbq1Ksn5cHIbrU/Wn\nyEGA5MZlFyMFAddl81mCIQhgfjstUyaCeizXA2vun2FclZx2YRePIv4d5Zud1QoW\nO3gVnHomk8GRbAf6x/oAr31eyHbdWD4oDIeXiKFXtqT+86Lcx6/Tz9PmMwgxZg0s\ndLf+nWnP9EsKjX3IlAoU5SAZC16xlB2c+Cmie7fz/6mBt6iKixfGAcn26FjJ9ChO\neq19L/qckagd4GvS1/lYN7jpebLHBLYTzTSIC7TjN8h7HN5S8rsh2a9Y8wDY8JTJ\njMEiBoLRYCrkpckCVlq0CjPu2ggHxxPuT6fcuSQKmCqNCY0hUD4=\n=F90z\n-----END PGP SIGNATURE-----",
        "payload": "tree c276b955e548706b5272cf30832f1907615f0a3d\nparent 30521302f90e4856a7516867b32a4576fa6d98b3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574274639 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574274639 +0200\n\ndoc: Update and improve Developer Notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794fe91395c79f46a6d920bc08de5a0551b359a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/794fe91395c79f46a6d920bc08de5a0551b359a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794fe91395c79f46a6d920bc08de5a0551b359a3/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30521302f90e4856a7516867b32a4576fa6d98b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30521302f90e4856a7516867b32a4576fa6d98b3"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 16,
      "deletions": 24
    },
    "files": [
      {
        "sha": "60eb542b5347a1f7f06dc7e866d9d5a83cd2f0e7",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 16,
        "deletions": 24,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794fe91395c79f46a6d920bc08de5a0551b359a3/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794fe91395c79f46a6d920bc08de5a0551b359a3/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=794fe91395c79f46a6d920bc08de5a0551b359a3",
        "patch": "@@ -12,12 +12,13 @@ Developer Notes\n     - [Development tips and tricks](#development-tips-and-tricks)\n         - [Compiling for debugging](#compiling-for-debugging)\n         - [Compiling for gprof profiling](#compiling-for-gprof-profiling)\n-        - [debug.log](#debuglog)\n+        - [`debug.log`](#debuglog)\n         - [Testnet and Regtest modes](#testnet-and-regtest-modes)\n         - [DEBUG_LOCKORDER](#debug_lockorder)\n         - [Valgrind suppressions file](#valgrind-suppressions-file)\n         - [Compiling for test coverage](#compiling-for-test-coverage)\n         - [Performance profiling with perf](#performance-profiling-with-perf)\n+        - [Sanitizers](#sanitizers)\n     - [Locking/mutex usage notes](#lockingmutex-usage-notes)\n     - [Threads](#threads)\n     - [Ignoring IDE/editor files](#ignoring-ideeditor-files)\n@@ -62,7 +63,7 @@ tool to clean up patches automatically before submission.\n   - Braces on the same line for everything else.\n   - 4 space indentation (no tabs) for every block except namespaces.\n   - No indentation for `public`/`protected`/`private` or for `namespace`.\n-  - No extra spaces inside parenthesis; don't do ( this ).\n+  - No extra spaces inside parenthesis; don't do `( this )`.\n   - No space after function names; one space after `if`, `for` and `while`.\n   - If an `if` only has a single-statement `then`-clause, it can appear\n     on the same line as the `if`, without braces. In every other case,\n@@ -76,7 +77,7 @@ code.\n     separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n-  - Constant names are all uppercase, and use `_` to separate words.\n+  - Compile-time constant names are all uppercase, and use `_` to separate words.\n   - Class names, function names, and method names are UpperCamelCase\n     (PascalCase). Do not prefix class names with `C`.\n   - Test suite naming convention: The Boost test suite in file\n@@ -207,15 +208,15 @@ produce better debugging builds.\n \n Run configure with the `--enable-gprof` option, then make.\n \n-### debug.log\n+### `debug.log`\n \n-If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+If the code is behaving strangely, take a look in the `debug.log` file in the data directory;\n error and debugging messages are written there.\n \n The `-debug=...` command-line option controls debugging; running with just `-debug` or `-debug=1` will turn\n-on all categories (and give you a very large debug.log file).\n+on all categories (and give you a very large `debug.log` file).\n \n-The Qt code routes `qDebug()` output to debug.log under category \"qt\": run with `-debug=qt`\n+The Qt code routes `qDebug()` output to `debug.log` under category \"qt\": run with `-debug=qt`\n to see it.\n \n ### Testnet and Regtest modes\n@@ -233,7 +234,7 @@ Bitcoin Core is a multi-threaded application, and deadlocks or other\n multi-threading bugs can be very difficult to track down. The `--enable-debug`\n configure option adds `-DDEBUG_LOCKORDER` to the compiler flags. This inserts\n run-time checks to keep track of which locks are held and adds warnings to the\n-debug.log file if inconsistencies are detected.\n+`debug.log` file if inconsistencies are detected.\n \n ### Valgrind suppressions file\n \n@@ -275,8 +276,7 @@ the functional test framework. Perf can observe a running process and sample\n (at some frequency) where its execution is.\n \n Perf installation is contingent on which kernel version you're running; see\n-[this StackExchange\n-thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n+[this thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n for specific instructions.\n \n Certain kernel parameters may need to be set for perf to be able to inspect the\n@@ -311,7 +311,7 @@ or using a graphical tool like [Hotspot](https://github.com/KDAB/hotspot).\n See the functional test documentation for how to invoke perf within tests.\n \n \n-**Sanitizers**\n+### Sanitizers\n \n Bitcoin Core can be compiled with various \"sanitizers\" enabled, which add\n instrumentation for issues regarding things like memory safety, thread race\n@@ -372,7 +372,7 @@ Deadlocks due to inconsistent lock ordering (thread 1 locks `cs_main` and then\n `cs_wallet`, while thread 2 locks them in the opposite order: result, deadlock\n as each waits for the other to release its lock) are a problem. Compile with\n `-DDEBUG_LOCKORDER` (or use `--enable-debug`) to get lock order inconsistencies\n-reported in the debug.log file.\n+reported in the `debug.log` file.\n \n Re-architecting the core code so there are better-defined interfaces\n between the various components is a goal, with any necessary locking\n@@ -386,8 +386,6 @@ Threads\n \n - ThreadImport : Loads blocks from `blk*.dat` files or `-loadblock=<file>`.\n \n-- StartNode : Starts other threads.\n-\n - ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n \n - ThreadMapPort : Universal plug-and-play startup/shutdown.\n@@ -400,7 +398,7 @@ Threads\n \n - ThreadMessageHandler : Higher-level message handling (sending and receiving).\n \n-- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n+- DumpAddresses : Dumps IP addresses of nodes to `peers.dat`.\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n@@ -466,11 +464,6 @@ Wallet\n \n - Make sure that no crashes happen with run-time option `-disablewallet`.\n \n-  - *Rationale*: In RPC code that conditionally uses the wallet (such as\n-    `validateaddress`), it is easy to forget that global pointer `pwalletMain`\n-    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n-    exercising the API with `-disablewallet`.\n-\n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set.\n \n   - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB.\n@@ -545,11 +538,10 @@ class A\n }\n ```\n \n-- By default, declare single-argument constructors `explicit`.\n+- By default, declare constructors `explicit`.\n \n-  - *Rationale*: This is a precaution to avoid unintended conversions that might\n-    arise when single-argument constructors are used as implicit conversion\n-    functions.\n+  - *Rationale*: This is a precaution to avoid unintended\n+    [conversions](https://en.cppreference.com/w/cpp/language/converting_constructor).\n \n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API."
      }
    ]
  }
]