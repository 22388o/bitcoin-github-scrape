[
  {
    "sha": "e871f8338ad180428ff997b80a476d9719d8073f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODcxZjgzMzhhZDE4MDQyOGZmOTk3YjgwYTQ3NmQ5NzE5ZDgwNzNm",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-05-26T18:19:07Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-05-26T18:19:07Z"
      },
      "message": "Tests: add timeout to sync_blocks() and sync_mempools()\n\nPreviously these functions would infinitely loop if sync failed;\nnow they have a default timeout of 60 seconds, after which an\nAssertionError is raised.\n\nsync_blocks() has also been improved and now compares the tip\nhash of each node, rather than just using block count.",
      "tree": {
        "sha": "0c6c9e6704cd2934b99bb7f7fb3a8eb9be9ff871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c6c9e6704cd2934b99bb7f7fb3a8eb9be9ff871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e871f8338ad180428ff997b80a476d9719d8073f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e871f8338ad180428ff997b80a476d9719d8073f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e871f8338ad180428ff997b80a476d9719d8073f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e871f8338ad180428ff997b80a476d9719d8073f/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "425278d17bd0edf8a3a7cc81e55016f7fd8e7726",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/425278d17bd0edf8a3a7cc81e55016f7fd8e7726",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/425278d17bd0edf8a3a7cc81e55016f7fd8e7726"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 13,
      "deletions": 9
    },
    "files": [
      {
        "sha": "fc66ef287d715fa73c55cbea5a64a4bd656c1c4e",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e871f8338ad180428ff997b80a476d9719d8073f/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e871f8338ad180428ff997b80a476d9719d8073f/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=e871f8338ad180428ff997b80a476d9719d8073f",
        "patch": "@@ -121,30 +121,34 @@ def hex_str_to_bytes(hex_str):\n def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n-def sync_blocks(rpc_connections, wait=1):\n+def sync_blocks(rpc_connections, wait=1, timeout=60):\n     \"\"\"\n-    Wait until everybody has the same block count\n+    Wait until everybody has the same tip\n     \"\"\"\n-    while True:\n-        counts = [ x.getblockcount() for x in rpc_connections ]\n-        if counts == [ counts[0] ]*len(counts):\n-            break\n+    while timeout > 0:\n+        tips = [ x.getbestblockhash() for x in rpc_connections ]\n+        if tips == [ tips[0] ]*len(tips):\n+            return True\n         time.sleep(wait)\n+        timeout -= wait\n+    raise AssertionError(\"Block sync failed\")\n \n-def sync_mempools(rpc_connections, wait=1):\n+def sync_mempools(rpc_connections, wait=1, timeout=60):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n-    while True:\n+    while timeout > 0:\n         pool = set(rpc_connections[0].getrawmempool())\n         num_match = 1\n         for i in range(1, len(rpc_connections)):\n             if set(rpc_connections[i].getrawmempool()) == pool:\n                 num_match = num_match+1\n         if num_match == len(rpc_connections):\n-            break\n+            return True\n         time.sleep(wait)\n+        timeout -= wait\n+    raise AssertionError(\"Mempool sync failed\")\n \n bitcoind_processes = {}\n "
      }
    ]
  }
]