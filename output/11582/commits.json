[
  {
    "sha": "bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWIyZGRkNjY0OTcyMTFlMWQwOGQ3ZjcxZjJmMTdlYWMzYTAxMTJh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-10-30T18:48:15Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-10-30T18:48:15Z"
      },
      "message": "wallet: Restore -usehd=0 option\n\nSimply avoiding setting a master key is sufficient to have a non-HD wallet, with the latest wallet version (ie, no-default-key)",
      "tree": {
        "sha": "b3007721675565eb6b502c3277a68393d24bfb80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3007721675565eb6b502c3277a68393d24bfb80"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb9ab0fccfbadd5c032a2cd0bb3135049cffa42b"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "1e00735ed952e1758312a152ebeb34cab4dd1d93",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
        "patch": "@@ -30,6 +30,7 @@ std::string GetWalletHelpString(bool showDebug)\n     strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet on startup\"));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key generation (HD) after BIP32. Only has effect during wallet creation/first start\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_USE_HD_WALLET));\n     strUsage += HelpMessageOpt(\"-walletrbf\", strprintf(_(\"Send transactions with full-RBF opt-in enabled (default: %u)\"), DEFAULT_WALLET_RBF));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));"
      },
      {
        "sha": "4acbd412a1895ece68586fa8888671241d47da61",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
        "patch": "@@ -3867,16 +3867,14 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     if (fFirstRun)\n     {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n-            InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n-            return nullptr;\n-        }\n         walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        if (gArgs.GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET) && !walletInstance->IsHDEnabled()) {\n+            // generate a new master key\n+            CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+            if (!walletInstance->SetHDMasterKey(masterPubKey))\n+                throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        }\n \n         // Top up the keypool\n         if (!walletInstance->TopUpKeyPool()) {\n@@ -3887,7 +3885,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->SetBestChain(chainActive.GetLocator());\n     }\n     else if (gArgs.IsArgSet(\"-usehd\")) {\n-        bool useHD = gArgs.GetBoolArg(\"-usehd\", true);\n+        bool useHD = gArgs.GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET);\n         if (walletInstance->IsHDEnabled() && !useHD) {\n             InitError(strprintf(_(\"Error loading %s: You can't disable HD on an already existing HD wallet\"), walletFile));\n             return nullptr;"
      },
      {
        "sha": "c9954555e5779734f0493ee6be5896f2bcf4be88",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bab2ddd66497211e1d08d7f71f2f17eac3a0112a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=bab2ddd66497211e1d08d7f71f2f17eac3a0112a",
        "patch": "@@ -65,6 +65,8 @@ static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 6;\n static const bool DEFAULT_WALLET_RBF = false;\n static const bool DEFAULT_WALLETBROADCAST = true;\n static const bool DEFAULT_DISABLE_WALLET = false;\n+//! if set, all keys will be derived by using BIP32\n+static const bool DEFAULT_USE_HD_WALLET = true;\n \n extern const char * DEFAULT_WALLET_DAT;\n "
      }
    ]
  }
]