jnewbery,2017-05-23T13:52:09Z,"Looks good. Tested ACK https://github.com/bitcoin/bitcoin/commit/2e041dd247c19a47700b1e1b181c7f8a1b5b109b. It'd be nice to have tests covering the edge cases (block time the same for two consecutive blocks and block time decreasing), but that can be left for a future PR.",https://github.com/bitcoin/bitcoin/pull/10403#issuecomment-303404590,303404590,
jonasschnelli,2017-05-24T06:51:18Z,"utACK 4d2d6045a4784d576d56299244b9f76a5909904b\nVery verbose error description texts (but great explanation).",https://github.com/bitcoin/bitcoin/pull/10403#issuecomment-303634220,303634220,
laanwj,2017-06-05T14:40:49Z,utACK 4d2d604,https://github.com/bitcoin/bitcoin/pull/10403#issuecomment-306204960,306204960,
laanwj,2017-05-22T14:06:05Z,"As it scans forward (increasing date / block numbers), and scanFailed returns the first block that could not be scanned, shouldn't this be ""after time""?",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117753201,117753201,src/wallet/rpcdump.cpp
laanwj,2017-05-22T14:17:37Z,"So this checks that the birthday of the imported key is after most recent block that could not be scanned, in which case the current result will be returned?\nThis seems to disagree with the comment ""key creation date is within the successfully scanned range"".\nWhat am I misunderstanding here?",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117755972,117755972,src/wallet/rpcdump.cpp
ryanofsky,2017-05-22T14:34:44Z,"> As it scans forward (increasing date / block numbers), and scanFailed returns the first block that could not be scanned, shouldn't this be ""after time""?\n\nscanFailed returns the last block that could not be scanned, not the first block that couldn't be scanned. To take a concrete example, say there are two blocks in a row with GetBlockTimeMax() == 1000, and the first block fails to scan, and ",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117760307,117760307,src/wallet/rpcdump.cpp
ryanofsky,2017-05-22T14:46:32Z,"> So this checks that the birthday of the imported key is after most recent block that could not be scanned, in which case the current result will be returned?\n\nYes, if the key birthday is after the GetBlockTimeMax of the most recent block that could not be scanned + TIMESTAMP_WINDOW, the rescan for that key's transactions is considered successful, and the result is not replaced.\n\n> This s",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117763436,117763436,src/wallet/rpcdump.cpp
jnewbery,2017-05-22T23:10:11Z,"I spent some time thinking about edge cases here, and I've basically convinced myself that this is ok, because:\n\n- the `TIMESTAMP_WINDOW` means that we have a good safety window between the address's birthday and the block timestamp (ie we're safe even if an address appears in a block with a timestamp before its birthday).\n- the monotonically increasing `GetBlockTimeMax()` means that this er",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117865547,117865547,src/wallet/rpcdump.cpp
ryanofsky,2017-05-23T13:13:27Z,"Thanks, expanded error message in 2e041dd247c19a47700b1e1b181c7f8a1b5b109b",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117986594,117986594,src/wallet/rpcdump.cpp
laanwj,2017-05-24T10:56:50Z,"> because all the blocks that were bad or missing are older than the key, and therefore not relevant.\n\nThat's the part I'm not sure about: aren't the blocks *at and after* that point missing, instead of before that point? After all it's the point where it failed in a linear forward scan?",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r118222038,118222038,src/wallet/rpcdump.cpp
ryanofsky,2017-05-24T11:46:55Z,"> That's the part I'm not sure about: aren't the blocks at and after that point missing, instead of before that point?\n\nBecause it returns a pointer to the last block that couldn't be scanned,  it means that any blocks after the pointer were scanned successfully.\n\n> After all it's the point where it failed in a linear forward scan?\n\nThe scan does keep going even if individual blocks co",https://github.com/bitcoin/bitcoin/pull/10403#discussion_r118230184,118230184,src/wallet/rpcdump.cpp
