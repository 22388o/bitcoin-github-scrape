[
  {
    "sha": "faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWE5NmY4NDFmZTQ1YmM0OWViYjZlMDdhYzgyYTEyOWZhOWM0MGJm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T14:22:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T18:24:54Z"
      },
      "message": "Remove unused CDataStream methods",
      "tree": {
        "sha": "844e357fc2472e83e4aa359dd408627f533fda0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/844e357fc2472e83e4aa359dd408627f533fda0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgncAv+PqLfM4HBirIaR1/OWq6uto6C3CW27tAptHIIPXnNQZsWasgZy1Avbsjv\nJCxXJr/DBaOwq28rZEZVIGN8hUCgSemcDUEv/bl5m+NrX5C8VSTOIA1YejbSSDKV\nPjG6/lQqFO103kFXCnvecDIh/J9wiSdctY6pv9PGKrWJfARajRF5c3igyyKiy9mE\nlLuh7jrXUOojNotJEwKTw7bKopiX823BPkbaxwVpjmiZpI5JecvZf7rW5zRfOeNc\nl0SciV1yuMn5K0REC22oz8mFJP2S0rjhM5mGTOa5Xs8IEXK90uh/0aazA+zCYndV\nWoDXAcRbfltXgWmGi+ESNP8ygajgXU01R8ObKN4V1L40lS9raNlvykRNhWaaIgTG\nFfkFifLXl64L4uyDBMehBuMvghrUgMs97fccxni6r/HGeyitby55VzF0sX3bR8Vg\nP2NUN4b/lB5tJUzBaKSwJMOGZDHTP3ufctQ4/03YeAVRLDJq8cwhRjZgl+ITNahW\nH628/kzs\n=vLHS\n-----END PGP SIGNATURE-----",
        "payload": "tree 844e357fc2472e83e4aa359dd408627f533fda0a\nparent 555b5d1bf940646a728499cfa1005bcb61383c20\nauthor MarcoFalke <falke.marco@gmail.com> 1606141360 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606155894 +0100\n\nRemove unused CDataStream methods\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "555b5d1bf940646a728499cfa1005bcb61383c20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/555b5d1bf940646a728499cfa1005bcb61383c20",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/555b5d1bf940646a728499cfa1005bcb61383c20"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 0,
      "deletions": 23
    },
    "files": [
      {
        "sha": "793c06b5c580484fb79df5a1e198a50e47234767",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
        "patch": "@@ -264,19 +264,6 @@ class CDataStream\n         nVersion = nVersionIn;\n     }\n \n-    CDataStream& operator+=(const CDataStream& b)\n-    {\n-        vch.insert(vch.end(), b.begin(), b.end());\n-        return *this;\n-    }\n-\n-    friend CDataStream operator+(const CDataStream& a, const CDataStream& b)\n-    {\n-        CDataStream ret = a;\n-        ret += b;\n-        return (ret);\n-    }\n-\n     std::string str() const\n     {\n         return (std::string(begin(), end()));\n@@ -462,11 +449,6 @@ class CDataStream\n         return (*this);\n     }\n \n-    void GetAndClear(CSerializeData &d) {\n-        d.insert(d.end(), begin(), end());\n-        clear();\n-    }\n-\n     /**\n      * XOR the contents of this stream with a certain key.\n      *"
      },
      {
        "sha": "de8d4cbd7ffb32a3c6b385d3a0f31c71dc88f2c7",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
        "patch": "@@ -342,11 +342,6 @@ BOOST_AUTO_TEST_CASE(insert_delete)\n     BOOST_CHECK_EQUAL(ss[1], 1);\n     BOOST_CHECK_EQUAL(ss[2], 2);\n     BOOST_CHECK_EQUAL(ss[3], (char)0xff);\n-\n-    // Make sure GetAndClear does the right thing:\n-    CSerializeData d;\n-    ss.GetAndClear(d);\n-    BOOST_CHECK_EQUAL(ss.size(), 0U);\n }\n \n BOOST_AUTO_TEST_CASE(class_methods)"
      }
    ]
  },
  {
    "sha": "fa8bdb048e65cae2d26bea3f991717a856e2fb39",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThiZGIwNDhlNjVjYWUyZDI2YmVhM2Y5OTE3MTdhODU2ZTJmYjM5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T17:53:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T20:19:22Z"
      },
      "message": "refactor: Drop CDataStream constructors in favor of one taking a Span of bytes",
      "tree": {
        "sha": "c29e6b49aef28d00725ae4477de2f4b7c5bdf1ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c29e6b49aef28d00725ae4477de2f4b7c5bdf1ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8bdb048e65cae2d26bea3f991717a856e2fb39",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiILwwAp7S52hJ/Z2dexbqdZGDUNGSq9v59CBpigfzXhVS42hO9cSPW5kiKwAdY\nN8FOBp8p9zGaTmYk+erwf4ptlBA7ZlJ5kGM+nHAJHCR2Piouwpbu+48Tpe8ZD2yy\ny1aqz3qovcRAqu2piggdLWutxuJ2DZUcZnPH8O8QbGfotPvskoTKBuNakV/vXF/o\nZpqyu5Ydh0aJpGgoqggdRmaj8I+hq1fhArbQSCMrtAGcFYDfehbLyaqj9FFjnQUj\nmAfP7iG4LjeAR62yq1VzsiF7OFAXrVMIiyBlWnbgj+bls1iY8toCFvaIJHsIpJD5\ne5szMn4fdmuiuP8ouN4z6+GF/pB3VIojtNw/pqRo074Dd0ixzrQqsP0/kxOVYC/o\nh08gyC0aNAL5rYEn715pwRNysCFGXYKcAhOUNwtnrSL8H10pqA6Y46CW+rPhb8F1\nDUez8Ks08SSEa0mHzdqB24do18jzkgyqvgm8ukIgG3xhsoEoEMUy0ftszzDb9mf5\nAfX03nE9\n=b5K8\n-----END PGP SIGNATURE-----",
        "payload": "tree c29e6b49aef28d00725ae4477de2f4b7c5bdf1ca\nparent faa96f841fe45bc49ebb6e07ac82a129fa9c40bf\nauthor MarcoFalke <falke.marco@gmail.com> 1606154024 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606162762 +0100\n\nrefactor: Drop CDataStream constructors in favor of one taking a Span of bytes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8bdb048e65cae2d26bea3f991717a856e2fb39",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8bdb048e65cae2d26bea3f991717a856e2fb39",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8bdb048e65cae2d26bea3f991717a856e2fb39/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faa96f841fe45bc49ebb6e07ac82a129fa9c40bf"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 15,
      "deletions": 33
    },
    "files": [
      {
        "sha": "356111b6755a6907028a0cb33f874cd54950d70f",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "patch": "@@ -8,9 +8,10 @@\n #include <clientversion.h>\n #include <fs.h>\n #include <serialize.h>\n+#include <span.h>\n #include <streams.h>\n-#include <util/system.h>\n #include <util/strencodings.h>\n+#include <util/system.h>\n \n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n@@ -146,7 +147,7 @@ class CDBIterator\n     template<typename K> bool GetKey(K& key) {\n         leveldb::Slice slKey = piter->key();\n         try {\n-            CDataStream ssKey(slKey.data(), slKey.data() + slKey.size(), SER_DISK, CLIENT_VERSION);\n+            CDataStream ssKey(MakeUCharSpan(slKey), SER_DISK, CLIENT_VERSION);\n             ssKey >> key;\n         } catch (const std::exception&) {\n             return false;\n@@ -157,7 +158,7 @@ class CDBIterator\n     template<typename V> bool GetValue(V& value) {\n         leveldb::Slice slValue = piter->value();\n         try {\n-            CDataStream ssValue(slValue.data(), slValue.data() + slValue.size(), SER_DISK, CLIENT_VERSION);\n+            CDataStream ssValue(MakeUCharSpan(slValue), SER_DISK, CLIENT_VERSION);\n             ssValue.Xor(dbwrapper_private::GetObfuscateKey(parent));\n             ssValue >> value;\n         } catch (const std::exception&) {\n@@ -243,7 +244,7 @@ class CDBWrapper\n             dbwrapper_private::HandleError(status);\n         }\n         try {\n-            CDataStream ssValue(strValue.data(), strValue.data() + strValue.size(), SER_DISK, CLIENT_VERSION);\n+            CDataStream ssValue(MakeUCharSpan(strValue), SER_DISK, CLIENT_VERSION);\n             ssValue.Xor(obfuscate_key);\n             ssValue >> value;\n         } catch (const std::exception&) {\n@@ -333,7 +334,6 @@ class CDBWrapper\n         leveldb::Slice slKey2(ssKey2.data(), ssKey2.size());\n         pdb->CompactRange(&slKey1, &slKey2);\n     }\n-\n };\n \n #endif // BITCOIN_DBWRAPPER_H"
      },
      {
        "sha": "f51fab6225d1707e2fe301abff55f7d8f39e1133",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "patch": "@@ -360,7 +360,7 @@ bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base6\n \n bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error)\n {\n-    CDataStream ss_data(tx_data.data(), tx_data.data() + tx_data.size(), SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream ss_data(MakeUCharSpan(tx_data), SER_NETWORK, PROTOCOL_VERSION);\n     try {\n         ss_data >> psbt;\n         if (!ss_data.empty()) {"
      },
      {
        "sha": "b11a1ced00b258a8438e554f4798348f39f310bc",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "patch": "@@ -179,7 +179,7 @@ void RecentRequestsTableModel::addNewRequest(const SendCoinsRecipient &recipient\n // called from ctor when loading from wallet\n void RecentRequestsTableModel::addNewRequest(const std::string &recipient)\n {\n-    std::vector<char> data(recipient.begin(), recipient.end());\n+    std::vector<uint8_t> data(recipient.begin(), recipient.end());\n     CDataStream ss(data, SER_DISK, CLIENT_VERSION);\n \n     RecentRequestEntry entry;"
      },
      {
        "sha": "53924d76ed2b2e8b4abf41a9323f428646865422",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 6,
        "deletions": 24,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "patch": "@@ -6,17 +6,18 @@\n #ifndef BITCOIN_STREAMS_H\n #define BITCOIN_STREAMS_H\n \n-#include <support/allocators/zeroafterfree.h>\n #include <serialize.h>\n+#include <span.h>\n+#include <support/allocators/zeroafterfree.h>\n \n #include <algorithm>\n #include <assert.h>\n #include <ios>\n #include <limits>\n #include <stdint.h>\n #include <stdio.h>\n-#include <string>\n #include <string.h>\n+#include <string>\n #include <utility>\n #include <vector>\n \n@@ -225,27 +226,8 @@ class CDataStream\n         Init(nTypeIn, nVersionIn);\n     }\n \n-    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n+    explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n+        : vch(sp.data(), sp.data() + sp.size())\n     {\n         Init(nTypeIn, nVersionIn);\n     }\n@@ -289,7 +271,7 @@ class CDataStream\n     value_type* data()                               { return vch.data() + nReadPos; }\n     const value_type* data() const                   { return vch.data() + nReadPos; }\n \n-    void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)\n+    void insert(iterator it, std::vector<uint8_t>::const_iterator first, std::vector<uint8_t>::const_iterator last)\n     {\n         if (last == first) return;\n         assert(last - first > 0);"
      },
      {
        "sha": "481ffa3da4641b4c3e34b6df9ac7351c56bcb7a9",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "patch": "@@ -48,7 +48,7 @@ NODISCARD inline std::vector<bool> ConsumeRandomLengthBitVector(FuzzedDataProvid\n \n NODISCARD inline CDataStream ConsumeDataStream(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n {\n-    return {ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length), SER_NETWORK, INIT_PROTO_VERSION};\n+    return CDataStream{ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length), SER_NETWORK, INIT_PROTO_VERSION};\n }\n \n NODISCARD inline std::vector<std::string> ConsumeRandomLengthStringVector(FuzzedDataProvider& fuzzed_data_provider, const size_t max_vector_size = 16, const size_t max_string_length = 16) noexcept"
      },
      {
        "sha": "26e24d836a19de3fa256ad257c74b556a934baeb",
        "filename": "src/test/streams_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bdb048e65cae2d26bea3f991717a856e2fb39/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "patch": "@@ -149,7 +149,7 @@ BOOST_AUTO_TEST_CASE(bitstream_reader_writer)\n \n BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n {\n-    std::vector<char> in;\n+    std::vector<uint8_t> in;\n     std::vector<char> expected_xor;\n     std::vector<unsigned char> key;\n     CDataStream ds(in, 0, 0);"
      }
    ]
  },
  {
    "sha": "fada14b948cac147198e3b685b5dd8cb72dc2911",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWRhMTRiOTQ4Y2FjMTQ3MTk4ZTNiNjg1YjVkZDhjYjcyZGMyOTEx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T15:15:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T20:19:50Z"
      },
      "message": "Treat CDataStream bytes as uint8_t\n\nAlso, rename CSerializeData to SerializeData",
      "tree": {
        "sha": "4a84ed9e578c3297a59e5cb06c1667551fafc346",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a84ed9e578c3297a59e5cb06c1667551fafc346"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fada14b948cac147198e3b685b5dd8cb72dc2911",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg8vwv8DJjOnyX3nrpVN6js94epTe1xq9EZZelAnsNW5gR+GR0lWOcG5zAao2Qk\n3OnHJk0TiJwAJoPGVoQY2WtDAZbgBnECQcNAmIadVzDXZqWzBiqiTHHSp5fLFt+A\nIchuVrKFnM2bOdMDvUtPp3JqqhRqEImagYnVK9SWu+8IozJrzKvdKRqGHLvzNMTs\nrezChDRYktQ6iUFIzlQX6SEJf2cFu4VzjD3uE9PhPn311XQBPDy8rBXNhFIDSHPJ\nMvBJytyPTt2OPz5tSqnnuA9HXUm49uUuiUgBR4X/Ofa24WCe4sIzQsb67SZao4xN\nKP4HaE3yOHItNI7QUkdWiB/egOfCEAm4qthgEPdMfnrD72MClvHcN5LqO1CcbBCs\naj/Zr53AYV0TiQszCrodk64uo9Zdx+3Avko9WuCHEZv1NkRSqn6th5LYjraFNZln\nuOFoCRG8cPaMwGHRqYUkpcUgVYyJr5+3laS/DVl5Bwmps2EhPj/w835e36jji7Kq\n2VsEri7t\n=z6Ix\n-----END PGP SIGNATURE-----",
        "payload": "tree 4a84ed9e578c3297a59e5cb06c1667551fafc346\nparent fa8bdb048e65cae2d26bea3f991717a856e2fb39\nauthor MarcoFalke <falke.marco@gmail.com> 1606144550 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606162790 +0100\n\nTreat CDataStream bytes as uint8_t\n\nAlso, rename CSerializeData to SerializeData\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fada14b948cac147198e3b685b5dd8cb72dc2911",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fada14b948cac147198e3b685b5dd8cb72dc2911",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fada14b948cac147198e3b685b5dd8cb72dc2911/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8bdb048e65cae2d26bea3f991717a856e2fb39",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8bdb048e65cae2d26bea3f991717a856e2fb39"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 25,
      "deletions": 41
    },
    "files": [
      {
        "sha": "d58d709e7eb8a7e896c71025f9af91c851ee6034",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -74,12 +74,12 @@ class CDBBatch\n     {\n         ssKey.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey << key;\n-        leveldb::Slice slKey(ssKey.data(), ssKey.size());\n+        leveldb::Slice slKey((const char*)ssKey.data(), ssKey.size());\n \n         ssValue.reserve(DBWRAPPER_PREALLOC_VALUE_SIZE);\n         ssValue << value;\n         ssValue.Xor(dbwrapper_private::GetObfuscateKey(parent));\n-        leveldb::Slice slValue(ssValue.data(), ssValue.size());\n+        leveldb::Slice slValue((const char*)ssValue.data(), ssValue.size());\n \n         batch.Put(slKey, slValue);\n         // LevelDB serializes writes as:\n@@ -99,7 +99,7 @@ class CDBBatch\n     {\n         ssKey.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey << key;\n-        leveldb::Slice slKey(ssKey.data(), ssKey.size());\n+        leveldb::Slice slKey((const char*)ssKey.data(), ssKey.size());\n \n         batch.Delete(slKey);\n         // LevelDB serializes erases as:\n@@ -138,7 +138,7 @@ class CDBIterator\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey << key;\n-        leveldb::Slice slKey(ssKey.data(), ssKey.size());\n+        leveldb::Slice slKey((const char*)ssKey.data(), ssKey.size());\n         piter->Seek(slKey);\n     }\n \n@@ -233,7 +233,7 @@ class CDBWrapper\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey << key;\n-        leveldb::Slice slKey(ssKey.data(), ssKey.size());\n+        leveldb::Slice slKey((const char*)ssKey.data(), ssKey.size());\n \n         std::string strValue;\n         leveldb::Status status = pdb->Get(readoptions, slKey, &strValue);\n@@ -267,7 +267,7 @@ class CDBWrapper\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey << key;\n-        leveldb::Slice slKey(ssKey.data(), ssKey.size());\n+        leveldb::Slice slKey((const char*)ssKey.data(), ssKey.size());\n \n         std::string strValue;\n         leveldb::Status status = pdb->Get(readoptions, slKey, &strValue);\n@@ -311,8 +311,8 @@ class CDBWrapper\n         ssKey2.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey1 << key_begin;\n         ssKey2 << key_end;\n-        leveldb::Slice slKey1(ssKey1.data(), ssKey1.size());\n-        leveldb::Slice slKey2(ssKey2.data(), ssKey2.size());\n+        leveldb::Slice slKey1((const char*)ssKey1.data(), ssKey1.size());\n+        leveldb::Slice slKey2((const char*)ssKey2.data(), ssKey2.size());\n         uint64_t size = 0;\n         leveldb::Range range(slKey1, slKey2);\n         pdb->GetApproximateSizes(&range, 1, &size);\n@@ -330,8 +330,8 @@ class CDBWrapper\n         ssKey2.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n         ssKey1 << key_begin;\n         ssKey2 << key_end;\n-        leveldb::Slice slKey1(ssKey1.data(), ssKey1.size());\n-        leveldb::Slice slKey2(ssKey2.data(), ssKey2.size());\n+        leveldb::Slice slKey1((const char*)ssKey1.data(), ssKey1.size());\n+        leveldb::Slice slKey2((const char*)ssKey2.data(), ssKey2.size());\n         pdb->CompactRange(&slKey1, &slKey2);\n     }\n };"
      },
      {
        "sha": "907444bff82473d6dba750af01461fcb9eb2c272",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -244,7 +244,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n \n         CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n         ssTx << *newTx;\n-        transaction_array.append(&(ssTx[0]), ssTx.size());\n+        transaction_array.append((const char*)&(ssTx[0]), ssTx.size());\n     }\n \n     // Add addresses / update labels that we've sent to the address book,"
      },
      {
        "sha": "4b34cbfd869de4f077084477bb8d690613a619ae",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -203,7 +203,7 @@ class VectorReader\n class CDataStream\n {\n protected:\n-    typedef CSerializeData vector_type;\n+    using vector_type = SerializeData;\n     vector_type vch;\n     unsigned int nReadPos;\n \n@@ -266,8 +266,8 @@ class CDataStream\n     const_reference operator[](size_type pos) const  { return vch[pos + nReadPos]; }\n     reference operator[](size_type pos)              { return vch[pos + nReadPos]; }\n     void clear()                                     { vch.clear(); nReadPos = 0; }\n-    iterator insert(iterator it, const char x=char()) { return vch.insert(it, x); }\n-    void insert(iterator it, size_type n, const char x) { vch.insert(it, n, x); }\n+    iterator insert(iterator it, const uint8_t x) { return vch.insert(it, x); }\n+    void insert(iterator it, size_type n, const uint8_t x) { vch.insert(it, n, x); }\n     value_type* data()                               { return vch.data() + nReadPos; }\n     const value_type* data() const                   { return vch.data() + nReadPos; }\n "
      },
      {
        "sha": "418f0ee6568806f4964009f97ec4fb8762199c54",
        "filename": "src/support/allocators/zeroafterfree.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/support/allocators/zeroafterfree.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/support/allocators/zeroafterfree.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/allocators/zeroafterfree.h?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -42,7 +42,7 @@ struct zero_after_free_allocator : public std::allocator<T> {\n     }\n };\n \n-// Byte-vector that clears its contents before deletion.\n-typedef std::vector<char, zero_after_free_allocator<char> > CSerializeData;\n+/** Byte-vector that clears its contents before deletion. */\n+using SerializeData = std::vector<uint8_t, zero_after_free_allocator<uint8_t>>;\n \n #endif // BITCOIN_SUPPORT_ALLOCATORS_ZEROAFTERFREE_H"
      },
      {
        "sha": "5a9855824057a085f620d2463de76bd50fa1b7cb",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 20,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -42,11 +42,7 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_serialize)\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << filter;\n \n-    std::vector<unsigned char> vch = ParseHex(\"03614e9b050000000000000001\");\n-    std::vector<char> expected(vch.size());\n-\n-    for (unsigned int i = 0; i < vch.size(); i++)\n-        expected[i] = (char)vch[i];\n+    std::vector<uint8_t> expected = ParseHex(\"03614e9b050000000000000001\");\n \n     BOOST_CHECK_EQUAL_COLLECTIONS(stream.begin(), stream.end(), expected.begin(), expected.end());\n \n@@ -72,11 +68,7 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_serialize_with_tweak)\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << filter;\n \n-    std::vector<unsigned char> vch = ParseHex(\"03ce4299050000000100008001\");\n-    std::vector<char> expected(vch.size());\n-\n-    for (unsigned int i = 0; i < vch.size(); i++)\n-        expected[i] = (char)vch[i];\n+    std::vector<uint8_t> expected = ParseHex(\"03ce4299050000000100008001\");\n \n     BOOST_CHECK_EQUAL_COLLECTIONS(stream.begin(), stream.end(), expected.begin(), expected.end());\n }\n@@ -96,11 +88,7 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_key)\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << filter;\n \n-    std::vector<unsigned char> vch = ParseHex(\"038fc16b080000000000000001\");\n-    std::vector<char> expected(vch.size());\n-\n-    for (unsigned int i = 0; i < vch.size(); i++)\n-        expected[i] = (char)vch[i];\n+    std::vector<unsigned char> expected = ParseHex(\"038fc16b080000000000000001\");\n \n     BOOST_CHECK_EQUAL_COLLECTIONS(stream.begin(), stream.end(), expected.begin(), expected.end());\n }\n@@ -352,11 +340,7 @@ BOOST_AUTO_TEST_CASE(merkle_block_3_and_serialize)\n     CDataStream merkleStream(SER_NETWORK, PROTOCOL_VERSION);\n     merkleStream << merkleBlock;\n \n-    std::vector<unsigned char> vch = ParseHex(\"0100000079cda856b143d9db2c1caff01d1aecc8630d30625d10e8b4b8b0000000000000b50cc069d6a3e33e3ff84a5c41d9d3febe7c770fdcc96b2c3ff60abe184f196367291b4d4c86041b8fa45d630100000001b50cc069d6a3e33e3ff84a5c41d9d3febe7c770fdcc96b2c3ff60abe184f19630101\");\n-    std::vector<char> expected(vch.size());\n-\n-    for (unsigned int i = 0; i < vch.size(); i++)\n-        expected[i] = (char)vch[i];\n+    std::vector<uint8_t> expected = ParseHex(\"0100000079cda856b143d9db2c1caff01d1aecc8630d30625d10e8b4b8b0000000000000b50cc069d6a3e33e3ff84a5c41d9d3febe7c770fdcc96b2c3ff60abe184f196367291b4d4c86041b8fa45d630100000001b50cc069d6a3e33e3ff84a5c41d9d3febe7c770fdcc96b2c3ff60abe184f19630101\");\n \n     BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), merkleStream.begin(), merkleStream.end());\n }"
      },
      {
        "sha": "f77cda7ba2e9cb80ecd70e99c0a818b08135db08",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -320,7 +320,7 @@ BOOST_AUTO_TEST_CASE(insert_delete)\n \n     ss.insert(ss.end(), c);\n     BOOST_CHECK_EQUAL(ss.size(), 6U);\n-    BOOST_CHECK_EQUAL(ss[4], (char)0xff);\n+    BOOST_CHECK_EQUAL(ss[4], 0xff);\n     BOOST_CHECK_EQUAL(ss[5], c);\n \n     ss.insert(ss.begin()+2, c);\n@@ -334,14 +334,14 @@ BOOST_AUTO_TEST_CASE(insert_delete)\n \n     ss.erase(ss.begin()+ss.size()-1);\n     BOOST_CHECK_EQUAL(ss.size(), 5U);\n-    BOOST_CHECK_EQUAL(ss[4], (char)0xff);\n+    BOOST_CHECK_EQUAL(ss[4], 0xff);\n \n     ss.erase(ss.begin()+1);\n     BOOST_CHECK_EQUAL(ss.size(), 4U);\n     BOOST_CHECK_EQUAL(ss[0], 0);\n     BOOST_CHECK_EQUAL(ss[1], 1);\n     BOOST_CHECK_EQUAL(ss[2], 2);\n-    BOOST_CHECK_EQUAL(ss[3], (char)0xff);\n+    BOOST_CHECK_EQUAL(ss[3], 0xff);\n }\n \n BOOST_AUTO_TEST_CASE(class_methods)"
      },
      {
        "sha": "8c43e072a3936d6ad2ce71bb7e510c85115e648c",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fada14b948cac147198e3b685b5dd8cb72dc2911/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fada14b948cac147198e3b685b5dd8cb72dc2911/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=fada14b948cac147198e3b685b5dd8cb72dc2911",
        "patch": "@@ -491,9 +491,9 @@ bool BerkeleyDatabase::Rewrite(const char* pszSkip)\n                                 break;\n                             }\n                             if (pszSkip &&\n-                                strncmp(ssKey.data(), pszSkip, std::min(ssKey.size(), strlen(pszSkip))) == 0)\n+                                strncmp((const char*)ssKey.data(), pszSkip, std::min(ssKey.size(), strlen(pszSkip))) == 0)\n                                 continue;\n-                            if (strncmp(ssKey.data(), \"\\x07version\", 8) == 0) {\n+                            if (strncmp((const char*)ssKey.data(), \"\\x07version\", 8) == 0) {\n                                 // Update version:\n                                 ssValue.clear();\n                                 ssValue << CLIENT_VERSION;"
      }
    ]
  },
  {
    "sha": "faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY0YWEyZjQ3YzBkZTRmM2EwYzVmNWZlNWIzZWMzMmY2MTFlZWZk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T18:19:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-31T08:05:51Z"
      },
      "message": "Remove CDataStream::Init in favor of C++11 member initialization",
      "tree": {
        "sha": "df1068b4006aeb8d7ba2a63ff697e39e22972c10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df1068b4006aeb8d7ba2a63ff697e39e22972c10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjKWQwAkaqTszpll/Lri1rCm43z3Dpv2p0t3CD+cCdBYuqQVxur5N9ewfLAGdyV\noCfnkJdKOkZBHfxZhmAqZilN+rOgmWGD5nwXAg/qKxpxGz7epeGfouh1VvFbm/QX\n7OtYwZSYfm5J7Kr+rzBrwdsiEB3Eyl+SzmUa8tdq5PhvnpKBdQUNISgd/Wzn6x9N\nfGl3vfJuBvJi4H5TflUAtNQaS8uFLdR/ld7tOuaCPWQoNpFaEoJ1hD/4/WHCpWr6\n3+JJy+98tl1/qj4mpnzAQcWFujEowOPhNYavO2pHgbw8lMbmx6ciZjiBEPRiqXOU\nfpcdILTDDtGf16CD6qaXZnAbXwDGpWd/Et9UvRKM2hfKWoUqhU5AL9j9DcCcPssP\nJ1bHplfJep2vwHS1niQfWIdyUNiZ+NcNCS5NOi4s+W6h/iO23rv/40UQ1Wg0+e+v\nQaPRa6ib6hLTzgeX2xfAS1UxLg1Z0wjYxccP6nMdMMITkfIJVfWTRGxO/OVpaV0n\nT3aKB02u\n=gwI8\n-----END PGP SIGNATURE-----",
        "payload": "tree df1068b4006aeb8d7ba2a63ff697e39e22972c10\nparent fada14b948cac147198e3b685b5dd8cb72dc2911\nauthor MarcoFalke <falke.marco@gmail.com> 1606155596 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609401951 +0100\n\nRemove CDataStream::Init in favor of C++11 member initialization\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fada14b948cac147198e3b685b5dd8cb72dc2911",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fada14b948cac147198e3b685b5dd8cb72dc2911",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fada14b948cac147198e3b685b5dd8cb72dc2911"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 19,
      "deletions": 21
    },
    "files": [
      {
        "sha": "924b6c0f5a2f286c295956bd6d602d578a163d8d",
        "filename": "src/bench/prevector.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd/src/bench/prevector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd/src/bench/prevector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/prevector.cpp?ref=faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
        "patch": "@@ -84,7 +84,7 @@ static void PrevectorDeserialize(benchmark::Bench& bench)\n         for (auto x = 0; x < 1000; ++x) {\n             s0 >> t1;\n         }\n-        s0.Init(SER_NETWORK, 0);\n+        s0.Rewind();\n     });\n }\n "
      },
      {
        "sha": "a6e781b95ba96686a72c4e2bc5c8100a83a11bd9",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 18,
        "deletions": 20,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
        "patch": "@@ -14,6 +14,7 @@\n #include <assert.h>\n #include <ios>\n #include <limits>\n+#include <optional>\n #include <stdint.h>\n #include <stdio.h>\n #include <string.h>\n@@ -205,12 +206,12 @@ class CDataStream\n protected:\n     using vector_type = SerializeData;\n     vector_type vch;\n-    unsigned int nReadPos;\n+    unsigned int nReadPos{0};\n \n     int nType;\n     int nVersion;\n-public:\n \n+public:\n     typedef vector_type::allocator_type   allocator_type;\n     typedef vector_type::size_type        size_type;\n     typedef vector_type::difference_type  difference_type;\n@@ -222,30 +223,22 @@ class CDataStream\n     typedef vector_type::reverse_iterator reverse_iterator;\n \n     explicit CDataStream(int nTypeIn, int nVersionIn)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n-        : vch(sp.data(), sp.data() + sp.size())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : vch(sp.data(), sp.data() + sp.size()),\n+          nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     template <typename... Args>\n     CDataStream(int nTypeIn, int nVersionIn, Args&&... args)\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn}\n     {\n-        Init(nTypeIn, nVersionIn);\n         ::SerializeMany(*this, std::forward<Args>(args)...);\n     }\n \n-    void Init(int nTypeIn, int nVersionIn)\n-    {\n-        nReadPos = 0;\n-        nType = nTypeIn;\n-        nVersion = nVersionIn;\n-    }\n-\n     std::string str() const\n     {\n         return (std::string(begin(), end()));\n@@ -342,12 +335,17 @@ class CDataStream\n         nReadPos = 0;\n     }\n \n-    bool Rewind(size_type n)\n+    bool Rewind(std::optional<size_type> n = std::nullopt)\n     {\n+        // Total rewind if no size is passed\n+        if (!n) {\n+            nReadPos = 0;\n+            return true;\n+        }\n         // Rewind by n characters if the buffer hasn't been compacted yet\n-        if (n > nReadPos)\n+        if (*n > nReadPos)\n             return false;\n-        nReadPos -= n;\n+        nReadPos -= *n;\n         return true;\n     }\n "
      }
    ]
  },
  {
    "sha": "fa292724598c273867bc6dbf311f1440fe2541ba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI5MjcyNDU5OGMyNzM4NjdiYzZkYmYzMTFmMTQ0MGZlMjU0MWJh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T10:21:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-31T08:06:00Z"
      },
      "message": "Remove redundant MakeUCharSpan wrappers",
      "tree": {
        "sha": "db6d3605368e18a626c17e8dcf1643f1312a31cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db6d3605368e18a626c17e8dcf1643f1312a31cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa292724598c273867bc6dbf311f1440fe2541ba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgUwAwAh9aPvD+nULJ4/iDIaxkho/1c8IJSkDSR1n8WUedXPXRbOJj3MzMmjjgi\nNFB2nCElwVJY64IW1tsbxEN6TWOURzG8gUmXICVNc9n5f7iFrsNSi6cs1OU9u4e+\n9SeTD+N1cAg1DHgSZ8Y4JmcuI+gQAVMHpdThub/jvLY14B/j0bQeHBhn9kaqZW4y\n3HX1HBD1tqJ15fMV459E0tDdutownahYAiJxuPGxoxYEB0XjZmPx27H2QIGHZtUV\nRxAIZsW40RAcN3EBOXZ4S/vqexrxDI0ZyJDraGLON10er8Lo4Lo2/A64DG0YfR+B\n3gKH0XYs3gAAd9V9YSo+ILnFYwtDmXSjNimXVt9kKuNB96G+Rk+z79p1q+GOSw2R\nVfrBZoShulAU1TcKAeWj7qfI/WDuZ+RYBPNYXhu1FGornas1f5kstGMxD3RNn5h1\n17dLqduqcVPk1fhIMZtBFjYavdVQw5cW7ZcbntEYRftqTCiqudp9IGHUfGWIpT1Z\nMqAaNMYk\n=vbGu\n-----END PGP SIGNATURE-----",
        "payload": "tree db6d3605368e18a626c17e8dcf1643f1312a31cf\nparent faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd\nauthor MarcoFalke <falke.marco@gmail.com> 1606299674 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1609401960 +0100\n\nRemove redundant MakeUCharSpan wrappers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa292724598c273867bc6dbf311f1440fe2541ba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa292724598c273867bc6dbf311f1440fe2541ba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa292724598c273867bc6dbf311f1440fe2541ba/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faf4aa2f47c0de4f3a0c5f5fe5b3ec32f611eefd"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8cf98341b1d034fe44eaaa363cfc7e0ef9061fc6",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa292724598c273867bc6dbf311f1440fe2541ba/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa292724598c273867bc6dbf311f1440fe2541ba/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fa292724598c273867bc6dbf311f1440fe2541ba",
        "patch": "@@ -1344,7 +1344,7 @@ static RPCHelpMan combinepsbt()\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << merged_psbt;\n-    return EncodeBase64(MakeUCharSpan(ssTx));\n+    return EncodeBase64(ssTx);\n },\n     };\n }\n@@ -1483,7 +1483,7 @@ static RPCHelpMan createpsbt()\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << psbtx;\n \n-    return EncodeBase64(MakeUCharSpan(ssTx));\n+    return EncodeBase64(ssTx);\n },\n     };\n }\n@@ -1552,7 +1552,7 @@ static RPCHelpMan converttopsbt()\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << psbtx;\n \n-    return EncodeBase64(MakeUCharSpan(ssTx));\n+    return EncodeBase64(ssTx);\n },\n     };\n }\n@@ -1643,7 +1643,7 @@ static RPCHelpMan utxoupdatepsbt()\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << psbtx;\n-    return EncodeBase64(MakeUCharSpan(ssTx));\n+    return EncodeBase64(ssTx);\n },\n     };\n }\n@@ -1739,7 +1739,7 @@ static RPCHelpMan joinpsbts()\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << shuffled_psbt;\n-    return EncodeBase64(MakeUCharSpan(ssTx));\n+    return EncodeBase64(ssTx);\n },\n     };\n }"
      }
    ]
  }
]