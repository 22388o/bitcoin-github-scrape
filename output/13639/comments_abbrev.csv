DrahtBot,2018-07-12T11:30:22Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14045 (Break the chainparamsbase -> util circular dependency by Empact)\n* #14013 ([doc] Add new regtest ports in man following #10825 ports reattributions by ariard)\n* #13942 (refactor: Removal of circular dependency between index/txindex, validation and index/base by mgrychow)\n*",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-404481290,404481290,
l2a5b1,2018-07-12T15:45:53Z,"+1 for going after another dependency cycle :) \n\nExtracting `MakeUnique` seems like a good thing to do.\n\nDoes it make sense to refactor the dependency of `util` on `chainparamsbase`? \nhttps://github.com/bitcoin/bitcoin/blob/9b638c7ce1b93c996b49f02c0bcefb25b6200d8e/src/util.cpp#L8\nThis relationship seems the crux to the circular dependency to  me. Imo`util` should have as little depende",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-404558236,404558236,
Empact,2018-07-12T16:21:45Z,"Agree on minimizing `util`, but seems removing `chainparamsbase` would be a bigger job, since `ArgsManager` uses `CBaseChainParams`, and `ArgsManager` is the bulk of `util`.",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-404569534,404569534,
Empact,2018-07-17T17:50:32Z,Dropped the third commit and extracted #13690 for easier review. ~~Maybe start with that?~~,https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-405669120,405669120,
Empact,2018-07-17T19:16:47Z,Rebased for #13690,https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-405696841,405696841,
Empact,2018-07-17T20:25:35Z,Ran clang-format,https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-405715993,405715993,
Empact,2018-07-20T16:38:14Z,Rebased for  #13695,https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-406656288,406656288,
sipa,2018-07-20T18:09:13Z,"I don't think moving the arguments for chain selection to util is the right solution here.\n\nWhy does util depend on knowing something about chain parameters anyway? It's supposed to be a bunch of utility functions.",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-406683046,406683046,
MarcoFalke,2018-07-20T19:21:35Z,What about moving argsmanager to a separate module?,https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-406702574,406702574,
Empact,2018-07-20T20:16:33Z,"I'll look into that, thanks!",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-406715286,406715286,
Empact,2018-07-28T07:28:19Z,"Ok I looked deeper into this and moved to a more comprehensive approach. The story is, there exist an `m_network` attribute in `ArgsManager`, and a `globalChainBaseParams` variable that drives `BaseParams()`. These are functionally redundant based on the fact that they are always set together. Given that the base params are only two: rpc port and data dir name, we can simply pass the `m_network` v",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-408589151,408589151,
Empact,2018-07-28T08:57:05Z,A possible follow-up - replacing the string-based handling with an enum class: https://github.com/Empact/bitcoin/compare/chainparamsbase-circ...Empact:chain-enum-class?expand=1,https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-408593523,408593523,
Empact,2018-08-24T08:41:02Z,"@sipa you're right, that's much cleaner. Closing in favor of #14045",https://github.com/bitcoin/bitcoin/pull/13639#issuecomment-415693775,415693775,
