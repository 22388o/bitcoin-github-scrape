[
  {
    "sha": "2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmNjMzhlMGQ5YzIwMWIzYTViNjhlY2I2NTg5Y2U0NjViNzRmYTdh",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-28T06:26:35Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-28T06:34:56Z"
      },
      "message": "Prefer gArgs.m_network over the redundant globalChainBaseParams\n\nThese two were being set together in all cases. Using just one removes the\ninternal reliance of chainparamsbase on gArgs in this case.\n\nInstead expose GetRPCPort and GetDataDir methods, which can be called with\nthe m_network name stored by gArgs.",
      "tree": {
        "sha": "59e8a373117475af08f0ccb38df8b2d19f9c19af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59e8a373117475af08f0ccb38df8b2d19f9c19af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbXA6RAAoJEG7l83hfeLNFL9cIAJEr4AWwjV00JURmoha41xvK\nj/ajG1CxqSSU5mHHtjlqbZh/zPpeiIOjHVYrL2Pb6KPqNvQdJq4fImc9Lv7n74vj\nye2z+AyTFsVrsoaDmPrWTTaZegjSOf5uP5pJZigIvGLEuF6d5px3YXi02ke25oiN\nzDB8gmKb7VYSqlYGX7LPi4sIhjrRvUhpI/Ngyx7AGUK9aNXJnbr2HIpspmwOoiHD\nRRAsNLtouBXSp8ZDXHm+VkZ9v+TKmIV0weOZC0omOPU9hsDLpmSQmr3O24q8dbWY\nlAdLJt8Z5A9fF+mJBqC5MWMOf1wsJTGdhuCBiZEA7TvjuZ+4+RGQ7a/BWNlZ9V8=\n=eD0E\n-----END PGP SIGNATURE-----",
        "payload": "tree 59e8a373117475af08f0ccb38df8b2d19f9c19af\nparent ef4fac0ea5b4891f4529e4b59dfd1f7aeb3009b5\nauthor Ben Woosley <ben.woosley@gmail.com> 1532759195 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1532759696 -0400\n\nPrefer gArgs.m_network over the redundant globalChainBaseParams\n\nThese two were being set together in all cases. Using just one removes the\ninternal reliance of chainparamsbase on gArgs in this case.\n\nInstead expose GetRPCPort and GetDataDir methods, which can be called with\nthe m_network name stored by gArgs.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef4fac0ea5b4891f4529e4b59dfd1f7aeb3009b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef4fac0ea5b4891f4529e4b59dfd1f7aeb3009b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef4fac0ea5b4891f4529e4b59dfd1f7aeb3009b5"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 41,
      "deletions": 24
    },
    "files": [
      {
        "sha": "d3ed8a8d692f9848114c098f9bb2e92512fe611f",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -130,9 +130,9 @@ static int AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error reading configuration file: %s\\n\", error.c_str());\n         return EXIT_FAILURE;\n     }\n-    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    // Check for -testnet or -regtest parameter (gArgs.ConfigNetwork() calls are only valid after this clause)\n     try {\n-        SelectBaseParams(gArgs.GetChainName());\n+        gArgs.SelectConfigNetwork(gArgs.GetChainName());\n     } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return EXIT_FAILURE;\n@@ -311,7 +311,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     //     1. -rpcport\n     //     2. port in -rpcconnect (ie following : in ipv4 or ]: in ipv6)\n     //     3. default port for chain\n-    int port = BaseParams().RPCPort();\n+    int port = GetRPCPort(gArgs.ConfigNetwork());\n     SplitHostPort(gArgs.GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT), port, host);\n     port = gArgs.GetArg(\"-rpcport\", port);\n "
      },
      {
        "sha": "4c149720db327fa19c540aa9b4c31d3d2998030a",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -375,7 +375,7 @@ std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n \n void SelectParams(const std::string& network)\n {\n-    SelectBaseParams(network);\n+    gArgs.SelectConfigNetwork(network);\n     globalChainParams = CreateChainParams(network);\n }\n "
      },
      {
        "sha": "c57cee68ea1fd8ecb8895812a82331dce75241f5",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 10,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -22,12 +22,30 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-testnet\", \"Use the test chain\", false, OptionsCategory::CHAINPARAMS);\n }\n \n-static std::unique_ptr<CBaseChainParams> globalChainBaseParams;\n+std::string GetDataDir(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return \"\";\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return \"testnet3\";\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return \"regtest\";\n+    } else {\n+        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    }\n+}\n \n-const CBaseChainParams& BaseParams()\n+int GetRPCPort(const std::string& chain)\n {\n-    assert(globalChainBaseParams);\n-    return *globalChainBaseParams;\n+    if (chain == CBaseChainParams::MAIN) {\n+        return 8332;\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return 18332;\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return 18443;\n+    } else {\n+        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    }\n }\n \n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n@@ -41,9 +59,3 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n     else\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n-\n-void SelectBaseParams(const std::string& chain)\n-{\n-    globalChainBaseParams = CreateBaseChainParams(chain);\n-    gArgs.SelectConfigNetwork(chain);\n-}"
      },
      {
        "sha": "8f7074b97cf32f604dec2c405ca9e8846896415a",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -44,13 +44,10 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n  */\n void SetupChainParamsBaseOptions();\n \n-/**\n- * Return the currently selected parameters. This won't change after app\n- * startup, except for unit tests.\n- */\n-const CBaseChainParams& BaseParams();\n+/** @return the data dir for the named chain */\n+std::string GetDataDir(const std::string& chain);\n \n-/** Sets the params returned by Params() to those for the given network. */\n-void SelectBaseParams(const std::string& chain);\n+/** @return the rpc port for the named chain */\n+int GetRPCPort(const std::string& chain);\n \n #endif // BITCOIN_CHAINPARAMSBASE_H"
      },
      {
        "sha": "f20034e7b4b254d5ecd0c2366a2c149f4e9ee1ff",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -292,7 +292,7 @@ static bool ThreadHTTP(struct event_base* base, struct evhttp* http)\n /** Bind HTTP server to specified addresses */\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n-    int defaultPort = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int defaultPort = gArgs.GetArg(\"-rpcport\", GetRPCPort(gArgs.ConfigNetwork()));\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to"
      },
      {
        "sha": "cdb8dc508a5a2f9a6ecb84eb40205294512f9d1b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -411,6 +411,11 @@ void ArgsManager::SelectConfigNetwork(const std::string& network)\n     m_network = network;\n }\n \n+const std::string& ArgsManager::ConfigNetwork() const\n+{\n+    return m_network;\n+}\n+\n bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::string& error)\n {\n     LOCK(cs_args);\n@@ -756,7 +761,7 @@ const fs::path &GetBlocksDir(bool fNetSpecific)\n         path = GetDataDir(false);\n     }\n     if (fNetSpecific)\n-        path /= BaseParams().DataDir();\n+        path /= ::GetDataDir(gArgs.ConfigNetwork());\n \n     path /= \"blocks\";\n     fs::create_directories(path);\n@@ -785,7 +790,7 @@ const fs::path &GetDataDir(bool fNetSpecific)\n         path = GetDefaultDataDir();\n     }\n     if (fNetSpecific)\n-        path /= BaseParams().DataDir();\n+        path /= ::GetDataDir(gArgs.ConfigNetwork());\n \n     if (fs::create_directories(path)) {\n         // This is the first run, create wallets subdirectory too"
      },
      {
        "sha": "be684b07db33ea3b2c7ac383effca570eca8f302",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "patch": "@@ -167,6 +167,9 @@ class ArgsManager\n      */\n     void SelectConfigNetwork(const std::string& network);\n \n+    /** @return the network in use */\n+    const std::string& ConfigNetwork() const;\n+\n     bool ParseParameters(int argc, const char* const argv[], std::string& error);\n     bool ReadConfigFiles(std::string& error, bool ignore_invalid_keys = false);\n "
      }
    ]
  },
  {
    "sha": "36e5e692a8f4fb76d9425837ccecf6cce342389b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmU1ZTY5MmE4ZjRmYjc2ZDk0MjU4MzdjY2VjZjZjY2UzNDIzODli",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-28T06:44:52Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-28T08:01:50Z"
      },
      "message": "Remove remaining uses of CreateBaseChainParams\n\nWhat remains of CBaseChainParams is just a namespace for the network name\nstrings.",
      "tree": {
        "sha": "81a730413a8439230cb212b0b1d316c5831e0526",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81a730413a8439230cb212b0b1d316c5831e0526"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36e5e692a8f4fb76d9425837ccecf6cce342389b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbXCLvAAoJEG7l83hfeLNFrBMIAJr4eCCw7exDHyZkQhDeckAv\ncqi8qdm3vEMSBHXhvjl+0qJpxd8uZKtfAWHKE84bnz8JFCz3oNRIKkdjbxROYwMy\n5foHdn+7Xm0E7I55FKF1hACR1C0MkO3T22eif+sgiNgsUYi80Q4Brcr14ZO5PVk1\ntlNo/8N9LS3oXPjvnq1kkBIcynOTo1wiK704RDMpnCtUO5zlbH6Bioj9BrYoFySo\nLaJuH87BMcXYO0RHRNIdsawny0Go2CpiGTd5hPB8N43h0SFpMx+HDHhGWL54843M\nCUD+G+uY8zM2i+EMBqD1SmOKqSxHWc2FRItJ3u+gOiuEKYqz0EenMujLxGo2KpY=\n=L1NJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 81a730413a8439230cb212b0b1d316c5831e0526\nparent 2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a\nauthor Ben Woosley <ben.woosley@gmail.com> 1532760292 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1532764910 -0400\n\nRemove remaining uses of CreateBaseChainParams\n\nWhat remains of CBaseChainParams is just a namespace for the network name\nstrings.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36e5e692a8f4fb76d9425837ccecf6cce342389b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36e5e692a8f4fb76d9425837ccecf6cce342389b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36e5e692a8f4fb76d9425837ccecf6cce342389b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bcc38e0d9c201b3a5b68ecb6589ce465b74fa7a"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 2,
      "deletions": 41
    },
    "files": [
      {
        "sha": "2ddbb3cf1db745d3b86cc3b4c58a0fa6825d9f33",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=36e5e692a8f4fb76d9425837ccecf6cce342389b",
        "patch": "@@ -31,9 +31,6 @@ static const int CONTINUE_EXECUTION=-1;\n \n static void SetupCliArgs()\n {\n-    const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n-    const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n-\n     gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-version\", \"Print version and exit\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), false, OptionsCategory::OPTIONS);\n@@ -45,7 +42,7 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-rpcconnect=<ip>\", strprintf(\"Send commands to node running on <ip> (default: %s)\", DEFAULT_RPCCONNECT), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\"), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()), false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\", GetRPCPort(CBaseChainParams::MAIN), GetRPCPort(CBaseChainParams::TESTNET)), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\", false, OptionsCategory::OPTIONS);"
      },
      {
        "sha": "2552a68cb2b6da4711f543481a14c845873c584a",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=36e5e692a8f4fb76d9425837ccecf6cce342389b",
        "patch": "@@ -7,9 +7,6 @@\n \n #include <tinyformat.h>\n #include <util.h>\n-#include <utilmemory.h>\n-\n-#include <assert.h>\n \n const std::string CBaseChainParams::MAIN = \"main\";\n const std::string CBaseChainParams::TESTNET = \"test\";\n@@ -47,15 +44,3 @@ int GetRPCPort(const std::string& chain)\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n     }\n }\n-\n-std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n-{\n-    if (chain == CBaseChainParams::MAIN)\n-        return MakeUnique<CBaseChainParams>(\"\", 8332);\n-    else if (chain == CBaseChainParams::TESTNET)\n-        return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n-    else if (chain == CBaseChainParams::REGTEST)\n-        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n-}"
      },
      {
        "sha": "8f799f4a0bd346ba08dbb161107bdc78d7966670",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=36e5e692a8f4fb76d9425837ccecf6cce342389b",
        "patch": "@@ -5,9 +5,7 @@\n #ifndef BITCOIN_CHAINPARAMSBASE_H\n #define BITCOIN_CHAINPARAMSBASE_H\n \n-#include <memory>\n #include <string>\n-#include <vector>\n \n /**\n  * CBaseChainParams defines the base parameters (shared between bitcoin-cli and bitcoind)\n@@ -20,25 +18,8 @@ class CBaseChainParams\n     static const std::string MAIN;\n     static const std::string TESTNET;\n     static const std::string REGTEST;\n-\n-    const std::string& DataDir() const { return strDataDir; }\n-    int RPCPort() const { return nRPCPort; }\n-\n-    CBaseChainParams() = delete;\n-    CBaseChainParams(const std::string& data_dir, int rpc_port) : nRPCPort(rpc_port), strDataDir(data_dir) {}\n-\n-private:\n-    int nRPCPort;\n-    std::string strDataDir;\n };\n \n-/**\n- * Creates and returns a std::unique_ptr<CBaseChainParams> of the chosen chain.\n- * @returns a CBaseChainParams* of the chosen chain.\n- * @throws a std::runtime_error if the chain is not supported.\n- */\n-std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain);\n-\n /**\n  *Set the arguments for chainparams\n  */"
      },
      {
        "sha": "b27e01ce8c42a7bc2a63e56f8f700a150b588eb5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36e5e692a8f4fb76d9425837ccecf6cce342389b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=36e5e692a8f4fb76d9425837ccecf6cce342389b",
        "patch": "@@ -339,8 +339,6 @@ static void OnRPCStopped()\n \n void SetupServerArgs()\n {\n-    const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n-    const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n     const auto defaultChainParams = CreateChainParams(CBaseChainParams::MAIN);\n     const auto testnetChainParams = CreateChainParams(CBaseChainParams::TESTNET);\n \n@@ -505,7 +503,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost, or if -rpcallowip has been specified, 0.0.0.0 and :: i.e., all addresses)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()), false, OptionsCategory::RPC);\n+    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\", GetRPCPort(CBaseChainParams::MAIN), GetRPCPort(CBaseChainParams::TESTNET)), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcserialversion\", strprintf(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\", DEFAULT_RPC_SERIALIZE_VERSION), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT), true, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcthreads=<n>\", strprintf(\"Set the number of threads to service RPC calls (default: %d)\", DEFAULT_HTTP_THREADS), false, OptionsCategory::RPC);"
      }
    ]
  },
  {
    "sha": "9847689005a6e629414bee7f1e003f2bf59d1cf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODQ3Njg5MDA1YTZlNjI5NDE0YmVlN2YxZTAwM2YyYmY1OWQxY2Yx",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-28T06:54:56Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-24T00:15:59Z"
      },
      "message": "Move SetupChainParamsBaseOptions to util\n\nThese options are intimately tied to ArgsManager::GetChainName, so their\npresence here makes sense, and moving them removes the final cause for a\ncircular dependency between util and chainparamsbase.",
      "tree": {
        "sha": "5a51e957c5bb2d30528768bcc09f154df5f584e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a51e957c5bb2d30528768bcc09f154df5f584e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9847689005a6e629414bee7f1e003f2bf59d1cf1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAlt/Tl8ACgkQTYykuhgE\nCQbBcw/9HzfEpRYW0l4wX9kcS5IZg7RUoBpl2lgva9DpoX/sBf3LNQQUAKwjjNiX\npmVFzuotjI/rObegA3jMbACBRBkKWXRmZx3CmXjKKTmBoePYoLHgXimY8qKxSKc9\nxXKR8zEVqPgg7ohDjkL5fgyQb9hbDLxvYuGbMTjPgVcN92GnaoCGeBIhTyCblb7g\nX2sqX0MpGmixO2fQ2ubyqsacNUvvAzyFSp9KCj8zV/jMo14/I1UIj9e7OwcHv9LV\n8zLi5suk/Nt4Fr1u8hGyo7MxgzBCNbzRnXhL5zk9HInKNp2dzLjZU5sOSZqg4D7M\nPZyz0M3ksgi4bQ1dmCvEV8ITjYtU/F7K4TXQKV3ieeas8Ae3QIHlaPgMxrgmB3Sf\nFowPKE76wisiPFQrNMHDbcw0laUyfMYwiBvlYgXaFBcwGQGfFfhmzmmt8grUv+Q3\nugtDC4l+A8E5FgrHfoeUX21AwTGn6gvXBwqhGFif4CAMZ3+36pyTr38EF8U2BInK\nnS6kSZIgX/AqdzQ+aTg8yENvMooIZZbI/4WhGQtKQ2agt4G1z6Iuj+KB9L/ZjWjK\nk9qknp/DPuV3IwVFWfcbCcP4XdnQAKAx2rLDYHGU6lxbFiH6t/kOxyJBPdf/4men\n79Lx51gLXovPwC7xfjMSqLOwnQi+vlpCoMflcdB5pvPHsM31gnk=\n=4Agt\n-----END PGP SIGNATURE-----",
        "payload": "tree 5a51e957c5bb2d30528768bcc09f154df5f584e5\nparent 36e5e692a8f4fb76d9425837ccecf6cce342389b\nauthor Ben Woosley <ben.woosley@gmail.com> 1532760896 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1535069759 -0700\n\nMove SetupChainParamsBaseOptions to util\n\nThese options are intimately tied to ArgsManager::GetChainName, so their\npresence here makes sense, and moving them removes the final cause for a\ncircular dependency between util and chainparamsbase.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9847689005a6e629414bee7f1e003f2bf59d1cf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9847689005a6e629414bee7f1e003f2bf59d1cf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9847689005a6e629414bee7f1e003f2bf59d1cf1/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36e5e692a8f4fb76d9425837ccecf6cce342389b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36e5e692a8f4fb76d9425837ccecf6cce342389b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36e5e692a8f4fb76d9425837ccecf6cce342389b"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 13,
      "deletions": 14
    },
    "files": [
      {
        "sha": "349e2b23898d2e8d1da8f4ef92bb4d8d89f65753",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=9847689005a6e629414bee7f1e003f2bf59d1cf1",
        "patch": "@@ -6,19 +6,11 @@\n #include <chainparamsbase.h>\n \n #include <tinyformat.h>\n-#include <util.h>\n \n const std::string CBaseChainParams::MAIN = \"main\";\n const std::string CBaseChainParams::TESTNET = \"test\";\n const std::string CBaseChainParams::REGTEST = \"regtest\";\n \n-void SetupChainParamsBaseOptions()\n-{\n-    gArgs.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n-                                   \"This is intended for regression testing tools and app development.\", true, OptionsCategory::CHAINPARAMS);\n-    gArgs.AddArg(\"-testnet\", \"Use the test chain\", false, OptionsCategory::CHAINPARAMS);\n-}\n-\n std::string GetDataDir(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN) {"
      },
      {
        "sha": "8d908d3ae090a8c7ecfc7398098366b3d0514827",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=9847689005a6e629414bee7f1e003f2bf59d1cf1",
        "patch": "@@ -20,11 +20,6 @@ class CBaseChainParams\n     static const std::string REGTEST;\n };\n \n-/**\n- *Set the arguments for chainparams\n- */\n-void SetupChainParamsBaseOptions();\n-\n /** @return the data dir for the named chain */\n std::string GetDataDir(const std::string& chain);\n "
      },
      {
        "sha": "ac9be0f32fb9128dc4160114ee12e131d5dacf82",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=9847689005a6e629414bee7f1e003f2bf59d1cf1",
        "patch": "@@ -961,6 +961,14 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+void SetupChainParamsBaseOptions()\n+{\n+    gArgs.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n+                            \"This is intended for regression testing tools and app development.\",\n+        true, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-testnet\", \"Use the test chain\", false, OptionsCategory::CHAINPARAMS);\n+}\n+\n #ifndef WIN32\n fs::path GetPidFile()\n {"
      },
      {
        "sha": "04eea064ef51c61f7015b7b05af6a7c37fa0a4da",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9847689005a6e629414bee7f1e003f2bf59d1cf1/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=9847689005a6e629414bee7f1e003f2bf59d1cf1",
        "patch": "@@ -289,6 +289,11 @@ class ArgsManager\n \n extern ArgsManager gArgs;\n \n+/**\n+ * Set the chain name arguments for ArgsManager::GetChainName\n+ */\n+void SetupChainParamsBaseOptions();\n+\n /**\n  * @return true if help has been requested via a command-line arg\n  */"
      },
      {
        "sha": "533b483c5731224cb0373c7f1482b55d9c84d7b7",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9847689005a6e629414bee7f1e003f2bf59d1cf1/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9847689005a6e629414bee7f1e003f2bf59d1cf1/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=9847689005a6e629414bee7f1e003f2bf59d1cf1",
        "patch": "@@ -9,7 +9,6 @@\n export LC_ALL=C\n \n EXPECTED_CIRCULAR_DEPENDENCIES=(\n-    \"chainparamsbase -> util -> chainparamsbase\"\n     \"checkpoints -> validation -> checkpoints\"\n     \"index/txindex -> validation -> index/txindex\"\n     \"policy/fees -> txmempool -> policy/fees\""
      }
    ]
  }
]