joemphilips,2017-11-27T18:35:44Z,"Thanks for reviewing.\nI will update according to the review soon.\n> Maybe too much for REST?\n\nRationale for this PR is that some light client(or other services) wants to use information about block or mempool for estimating fee. This is pretty close to the motivation of `getutxo` in terms of it places some trust on the full node. core's fee estimation logic is likely to update to a more so",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-347280308,347280308,
promag,2017-11-27T19:03:52Z,"My vote goes to `GET /rest/fee?target=<TARGET>&mode=<MODE>`, with query parameters and without extension. IMO all endpoints should return JSON, unless `Accept: ` headers requests other format.",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-347289770,347289770,
jonasschnelli,2017-11-27T20:05:16Z,"Concept ACK.\nPlease no query string.\nThe in this PR proposed URL scheme seems correct and in align with other calls: https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md#query-utxo-set",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-347310311,347310311,
laanwj,2017-11-28T11:28:03Z,"> Please no query string.\n> The in this PR proposed URL scheme seems correct and in align with other calls: \n\nYep, agree.\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-347494900,347494900,
promag,2018-02-03T15:03:45Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-362819057,362819057,
joemphilips,2018-02-05T14:30:39Z,rebased.,https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-363100683,363100683,
joemphilips,2018-02-15T08:55:54Z,"umm... sorry, does ""Needs rebase"" imply needs for squashing? or just rebasing onto master?\nI only did rebasing onto master but it needs squashing before merge.\n(Sorry for silly question. Forgive me, this is my first PR.) @promag ",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-365862476,365862476,
fanquake,2018-02-15T10:40:13Z,"@joemphilips You'll need to rebase onto master, as this currently has merge conflicts in `test/functional/feature_fee_estimation.py`.\n\nAt the same time, you can also squash your changes into a single commit. See [Squashing Commits](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits). Use a descriptive commit message i.e ""rest: add an endpoint for estimatesmartfee""",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-365888871,365888871,
joemphilips,2018-02-18T17:09:47Z,rebased (and squashed),https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-366530641,366530641,
MarcoFalke,2018-11-09T16:54:56Z,"Still needs rebase.\n\nCould do something like this:\n\n```sh\ngit checkout rest_fee\ngit fetch bitcoin\ngit merge bitcoin/master\ngit reset --soft bitcoin/master\ngit commit -m '[REST] add a rest endpoint for estimatesmartfee, docs, and test'\ngit push origin rest_fee -f",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-437422726,437422726,
joemphilips,2018-11-09T18:53:55Z,rebased,https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-437459040,437459040,
DrahtBot,2018-11-09T19:42:49Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-437473251,437473251,
practicalswift,2019-05-07T16:06:33Z,This PR does not compile when rebased on `master`. Is it still active or should it be closed? :-),https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-490144513,490144513,
joemphilips,2019-05-07T16:11:03Z,"> This PR does not compile when rebased on `master`. Is it still active or should it be closed? :-)\n\nI will close. sorry for leaving it here for so long.",https://github.com/bitcoin/bitcoin/pull/11770#issuecomment-490146304,490146304,
MarcoFalke,2017-11-27T15:17:33Z,"nit: Instead of moving them to a separate file, you could add convenience wrappers to the `test_node` class? Thus, it would not be required to pass in host and port all the time.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153224963,153224963,test/functional/test_framework/rest.py
promag,2017-11-27T15:38:44Z,"Unrelated change, please revert.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153231641,153231641,src/rest.cpp
promag,2017-11-27T15:38:55Z,"Unrelated change, please revert.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153231700,153231700,src/rest.cpp
promag,2017-11-27T15:41:56Z,Remove empty line.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153232663,153232663,src/rest.cpp
promag,2017-11-27T15:42:20Z,Remove empty line.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153232814,153232814,src/rest.cpp
promag,2017-11-27T15:49:37Z,"Sounds weird to ""redirect"" to RPC handler (redo the mode parse etc). Maybe factor out what is needed from there?\n\nMaybe just call `::feeEstimator.estimateSmartFee()` here? ",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153235268,153235268,src/rest.cpp
promag,2017-11-27T15:50:10Z,Remove 2nd empty line.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153235453,153235453,doc/REST-interface.md
promag,2017-11-27T15:50:44Z,Missing `{}`.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153235662,153235662,src/rest.cpp
promag,2017-11-27T15:50:52Z,Missing `{}`.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153235703,153235703,src/rest.cpp
promag,2017-11-27T15:54:55Z,"`Returns proper fee estimated by bitcoind`, this is `bitcoind`. ðŸ˜„ ",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153237112,153237112,doc/REST-interface.md
jonasschnelli,2017-11-27T20:02:33Z,"I think it's not worth passing through the RPC call `estimatesmartfee`.\nBetter directly use `feeEstimator.estimateFee(nBlocks);`.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153306858,153306858,src/rest.cpp
jb55,2017-11-28T00:54:44Z,"nit. why not:\n```python\n""/rest/fee/unset/{}.json"".format((i+1)//2)\n```\n",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153368012,153368012,test/functional/smartfees.py
joemphilips,2017-11-28T07:38:58Z,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413046,153413046,doc/REST-interface.md
joemphilips,2017-11-28T07:39:06Z,done.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413065,153413065,doc/REST-interface.md
joemphilips,2017-11-28T07:40:12Z,"Thanks, done. I will make sure will not to include these kinds of changes from next time.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413212,153413212,src/rest.cpp
joemphilips,2017-11-28T07:40:18Z,done. ,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413221,153413221,src/rest.cpp
joemphilips,2017-11-28T07:41:43Z,done.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413426,153413426,src/rest.cpp
joemphilips,2017-11-28T07:42:05Z,done.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413488,153413488,src/rest.cpp
joemphilips,2017-11-28T07:42:47Z,:+1: ,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153413590,153413590,test/functional/smartfees.py
joemphilips,2017-11-28T08:28:51Z,done,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153421505,153421505,src/rest.cpp
joemphilips,2017-11-28T08:29:09Z,done,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153421567,153421567,src/rest.cpp
joemphilips,2017-11-29T19:02:29Z,:+1: ,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153883753,153883753,src/rest.cpp
joemphilips,2017-11-29T19:03:29Z,you mean `feeEstimator::estimateSmartFee` ?,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153884015,153884015,src/rest.cpp
joemphilips,2017-11-29T19:29:35Z,:+1: ,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r153891112,153891112,test/functional/test_framework/rest.py
fanquake,2018-02-19T00:55:20Z,http.client is already imported above.,https://github.com/bitcoin/bitcoin/pull/11770#discussion_r168973653,168973653,test/functional/test_framework/test_node.py
joemphilips,2018-02-19T03:08:06Z,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r168981353,168981353,test/functional/test_framework/test_node.py
practicalswift,2018-11-10T10:27:58Z,Remove `e` since unused :-),https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448537,232448537,src/rest.cpp
practicalswift,2018-11-10T10:29:15Z,Nit: `bool conservative = mode != FeeEstimateMode::ECONOMICAL;` instead? :-),https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448555,232448555,src/rest.cpp
practicalswift,2018-11-10T10:29:56Z,Drop `;` :-),https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448567,232448567,src/rest.cpp
practicalswift,2018-11-10T10:30:10Z,Drop `;` :-),https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448574,232448574,src/rest.cpp
practicalswift,2018-11-10T10:30:23Z,Drop `;` :-),https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448583,232448583,src/rest.cpp
practicalswift,2018-11-10T10:31:13Z,"""Prepare"" :-)",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448602,232448602,test/functional/interface_rest.py
practicalswift,2018-11-10T10:31:29Z,"""Unable"" :-)",https://github.com/bitcoin/bitcoin/pull/11770#discussion_r232448607,232448607,src/rest.cpp
