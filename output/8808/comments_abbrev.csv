paveljanik,2016-09-25T19:08:20Z,"Hmm, two failures in `p2p-segwit.py`. Is there some issue with this test script?\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-249440018,249440018,
MarcoFalke,2016-09-26T07:27:41Z,Travis fails reliably. Is the commit producing identical binaries?\n,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-249498064,249498064,
paveljanik,2016-09-26T15:25:15Z,"This commit should produce same binaries, yes.\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-249603320,249603320,
laanwj,2016-09-28T08:16:13Z,"This introduces binary changes in these serialization functions:\n\n```\nvoid CDiskBlockIndex::SerializationOp<CDataStream, CSerActionSerialize>(CDataStream&, CSerActionSerialize, int, int)\nvoid CDiskBlockIndex::SerializationOp<CDataStream, CSerActionUnserialize>(CDataStream&, CSerActionUnserialize, int, int)\nvoid CDiskBlockIndex::SerializationOp<CSizeComputer, CSerActionSerialize>(CSizeComputer",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-250101696,250101696,
paveljanik,2016-10-02T17:44:53Z,"OK, rebased and removed problematic parts (all serialization related, `nVersion`)...\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-250984182,250984182,
paveljanik,2016-10-07T14:17:41Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-252264247,252264247,
paveljanik,2016-11-07T12:06:10Z,"@MarcoFalke Marco, can you please test for the same binaries here?\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-258819041,258819041,
MarcoFalke,2016-11-07T13:03:53Z,"There seems to be a small diff:\n\n``` diff\n319294c319294\n<   17d0f1: lea    0x2dd1b2(%rip),%rdi        # 45a2aa <leveldb::Status::Status(leveldb::Status::Code, leveldb::Slice const&, leveldb::Slice const&)::__PRETTY_FUNCTION__+0xaa>\n---\n>   17d0f1: lea    0x2dd1b1(%rip),%rdi        # 45a2a9 <leveldb::Status::Status(leveldb::Status::Code, leveldb::Slice const&, leveldb::Slice const&)::__PRETTY",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-258830024,258830024,
paveljanik,2016-11-07T13:28:46Z,This seems unrelated.\n,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-258835125,258835125,
fanquake,2016-11-09T14:12:19Z,"I haven't done the identical binary checking yet, but it looks like the difference could be [here](https://github.com/bitcoin/bitcoin/blob/master/src/leveldb/db/repair.cc#L169) ? 170 (0xaa) vs 169 (0xa9)\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259423358,259423358,
paveljanik,2016-11-09T14:17:58Z,@fanquake surely not...\n,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259424543,259424543,
paveljanik,2016-11-09T14:26:25Z,JFYI: I'm now building with other gcc version and there are a few other warnings 8)\n,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259426467,259426467,
MarcoFalke,2016-11-09T21:47:08Z,Concept ACK when this is the last patch/pull with regard to Wshadow.\n,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259535802,259535802,
gmaxwell,2016-11-09T22:10:12Z,"I checked each of the changes so far, they appear correct to me (+/- the suggestion I made about changing the name of the member vMasterKey that I asked for others input on).  I didn't check that they resulted in the same code.\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259541207,259541207,
paveljanik,2016-11-10T07:02:54Z,"Rebased, updated.\n\nIt is now `-Wshadow` clean for both old gcc (tested on gcc version 4.8.3 20140627 [gcc-4_8-branch revision 212064](SUSE Linux)) and also on the ultimate gcc (gcc version 6.2.1 20160830 [gcc-6-branch revision 239856](SUSE Linux)). And of course stays clean on other systems I regularly test on.\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259616508,259616508,
MarcoFalke,2016-11-10T10:35:59Z,"@paveljanik Mind to  cherry-pick fd5654c, so we don't have to open another pull?\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259656828,259656828,
MarcoFalke,2016-11-10T10:37:04Z,I get same binaries for bedf9a7 besides this diff:\n\n``` sh\ncommit=bedf9a7 && git checkout bitcoin/master && git reset --hard HEAD && curl https://raw.githubusercontent.com/laanwj/bitcoin-maintainer-tools/6e4425587736144b067f67ad792d9ee904e74fd7/patches/stripbuildinfo.patch | patch -p 1 && make -j 2 && objdump -d -r -C --no-show-raw-insn src/bitcoind > /tmp/d_old && curl https://github.com/bitco,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259657066,259657066,
paveljanik,2016-11-10T10:37:13Z,"@MarcoFalke I can, but Wladimir doesn't want it to be enabled by default...\n",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259657101,259657101,
MarcoFalke,2016-11-11T11:17:48Z,"utACK f14745d\n\nEither the warning is enabled and people can fix the warnings when they write new code or there is no warning and we stop caring about it. There is no such thing as ""disable the warnign by default and create refactoring pulls every other week to fix new occurences"".\n\nTo conclude, I think this is ready for merge. If it turns out to cause problems in the near future, we disable it",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-259936655,259936655,
paveljanik,2016-11-26T08:59:21Z,@MarcoFalke Agreed. We should merge this and then fix the remaining issues found by users who use other build environments/configurations.,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-263052444,263052444,
jtimon,2016-11-27T19:12:59Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-263140667,263140667,
paveljanik,2016-12-05T10:38:57Z,Working on needed rebase...,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-264820828,264820828,
MarcoFalke,2017-01-26T20:41:31Z,"utACK ad1ae7ae2e90a29fcfaaddee2d5acd025de72cbe, 9de90bb gives same binaries for me besides some boost_pretty_functions.",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-275507316,275507316,
jtimon,2017-01-27T01:11:06Z,utACK ad1ae7a,https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-275563559,275563559,
laanwj,2017-03-03T14:48:42Z,"Checked that this, rebased on master, results in identical bitcoind executables. ACK ad1ae7a",https://github.com/bitcoin/bitcoin/pull/8808#issuecomment-283972459,283972459,
paveljanik,2016-09-26T19:54:25Z,"Hmm, this particular change is causing my clang on OS X build to fail `-rescan` with:\n\n```\n2016-09-26 19:53:08 ERROR: ReadBlockFromDisk: Deserialize or I/O error - ReadCompactSize(): size too large: unspecified iostream_category error at CBlockDiskPos(nFile=49, nPos=4208853)\n```\n\nSo reverting it.\n\nBut do not ask me, why it is the cause... I do not know yet.\n",https://github.com/bitcoin/bitcoin/pull/8808#discussion_r80558089,80558089,src/primitives/block.h
laanwj,2016-09-28T08:04:34Z,"I think I figured this out, see https://github.com/bitcoin/bitcoin/pull/8658#issuecomment-250096029 and the comment below that.\n",https://github.com/bitcoin/bitcoin/pull/8808#discussion_r80861848,80861848,src/primitives/block.h
gmaxwell,2016-11-09T21:45:55Z,change _bits to nbits.\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87283840,87283840,src/arith_uint256.cpp
gmaxwell,2016-11-09T21:46:14Z,change _read to nBytes\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87283900,87283900,src/streams.h
gmaxwell,2016-11-09T21:48:08Z,vecsize\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87284240,87284240,src/timedata.h
gmaxwell,2016-11-09T21:51:18Z,"sflags  (this was less obvious to me, but my suggestion and @sipa thought it was okay)\n",https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87284845,87284845,src/primitives/transaction.h
gmaxwell,2016-11-09T21:57:27Z,"So I believe changing the name of CCryptoKeyStore  master key will, I think change only four lines. Might be good to get an opinion from someone who's worked more on this code?  @TheBlueMatt @pstratem \n",https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87286028,87286028,src/wallet/wallet.cpp
dcousens,2016-11-10T01:41:35Z,`vSortedSize` ?\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87315261,87315261,src/timedata.h
dcousens,2016-11-10T01:41:59Z,`serializeFlags`?\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87315298,87315298,src/primitives/transaction.h
paveljanik,2016-11-10T06:36:23Z,Will do.\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87335862,87335862,src/arith_uint256.cpp
paveljanik,2016-11-10T06:36:36Z,Will do.\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87335874,87335874,src/streams.h
paveljanik,2016-11-10T06:36:50Z,"I like vSortedSize, will do.\n",https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87335899,87335899,src/timedata.h
paveljanik,2016-11-10T06:55:42Z,I like both.\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87337525,87337525,src/primitives/transaction.h
paveljanik,2016-11-10T06:56:24Z,"That would be great and even better solution, yes. Will wait.\n",https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87337574,87337574,src/wallet/wallet.cpp
paveljanik,2016-11-10T10:59:58Z,Done\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87372033,87372033,src/arith_uint256.cpp
paveljanik,2016-11-10T11:00:17Z,Done\n,https://github.com/bitcoin/bitcoin/pull/8808#discussion_r87372092,87372092,src/streams.h
