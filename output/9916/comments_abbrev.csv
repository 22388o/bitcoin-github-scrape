gmaxwell,2017-03-04T19:35:44Z,"ugh. MSVC produces the most absurd errors for perfectly valid, strictly conforming code. I don't have a problem with silencing it in this way that this PR currently does it (though IMO it makes it less clear).\n\nThe prior fix of casting to a signed type can actually result in undefined behavior (at least generally if not actually in our case due to the sizes we use). a=INT_MIN; a = -a; is undef",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284175443,284175443,
laanwj,2017-03-04T21:39:59Z,"Agreed, that this is necessary at all is silly. There's no ambiguity here. Unary minus -x equivalent to 0-x which is well-defined also for unsigned values which are defined to wrap around.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284184698,284184698,
kobake,2017-03-05T03:07:16Z,"Yes, we should take care not to meet undefined behavior.\nNow in this case, even if nGeneration has INT_MIN value, it's no problem because the target values to be applied two's complement formula are ""(nGeneration & 1)"" and ""(nGeneration >> 1)""; they are 32bit values and their most significant bit is always zero, of course it's true even after the cast.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284201675,284201675,
gmaxwell,2017-03-05T19:19:52Z,"https://docs.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-2-c4146\n\nSeems to indicate that 0-(uint64_t)(nGeneration & 1); will silence it-- if so I think that would be preferable.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284252919,284252919,
kobake,2017-03-06T03:07:18Z,"OK, I just understood. I'll adopt ```0 - x``` style.\nFYI, msvc14 (vs2015) treats C4146 not as warning but as error by default because of ```/sdl``` option.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284292199,284292199,
laanwj,2017-03-06T06:59:33Z,"utACK https://github.com/bitcoin/bitcoin/pull/9916/commits/40aca33add8f108caa517a952f6c8555a63f6f17\n",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284317442,284317442,
laanwj,2017-03-06T17:39:23Z,"Amended the commit message to put a newline between the title and body, otherwise `git log` in short formats doesn't work as expected.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284472173,284472173,
kobake,2017-03-06T17:46:59Z,"Oh, I see. I've inserted a new line as you say. Thanks for helpful tips.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284474428,284474428,
kobake,2017-03-07T22:15:41Z,"I also fixed another C4146 error in the commit below that is about unit test.\nhttps://github.com/kobake/bitcoin-msvc/commit/3c73d820e2355b36ea6bd6c4b78e4afa82637b8f\n\nShould I contain the commit in this PR #9916, or create an another PR for the commit?",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284877822,284877822,
laanwj,2017-03-08T06:29:02Z,"It's another minor thing, I'd say add it here.\n",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284959030,284959030,
kobake,2017-03-08T06:44:55Z,"Thanks, I added.",https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-284961365,284961365,
laanwj,2017-03-08T14:54:18Z,re-UTack https://github.com/bitcoin/bitcoin/pull/9916/commits/8e0720bdb9141b00b4c00893b8139904c67ddacf,https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-285062135,285062135,
paveljanik,2017-03-08T15:08:04Z,utACK https://github.com/bitcoin/bitcoin/pull/9916/commits/8e0720bdb9141b00b4c00893b8139904c67ddacf,https://github.com/bitcoin/bitcoin/pull/9916#issuecomment-285066183,285066183,
laanwj,2017-03-04T08:54:01Z,"This works around the error, but I don't think it's very elegant. What about just formulating it explicitly:\n```\n        uint64_t nGenerationMask1 = ~(uint64_t)(nGeneration & 1) + 1;\n        uint64_t nGenerationMask2 = ~(uint64_t)(nGeneration >> 1) + 1;\n```",https://github.com/bitcoin/bitcoin/pull/9916#discussion_r104283669,104283669,src/bloom.cpp
laanwj,2017-03-04T08:56:42Z,"Or even just:\n```\n        uint64_t nGenerationMask1 = 0 - (uint64_t)(nGeneration & 1);\n        uint64_t nGenerationMask2 = 0 - (uint64_t)(nGeneration >> 1);\n```\nNot sure this is any more readable than the above though :)\n",https://github.com/bitcoin/bitcoin/pull/9916#discussion_r104283702,104283702,src/bloom.cpp
kobake,2017-03-04T09:57:05Z,"Thanks. I confirmed three ways work well as same in my local msvc14.\nThe latter you show is simple but not feel as explicit bit calculation.\nI like the former that is readable clearly as two's complement formula, then I'll adopt it.",https://github.com/bitcoin/bitcoin/pull/9916#discussion_r104284840,104284840,src/bloom.cpp
kobake,2017-03-04T10:07:09Z,Applied. (commit --amend && push -f),https://github.com/bitcoin/bitcoin/pull/9916#discussion_r104284985,104284985,src/bloom.cpp
