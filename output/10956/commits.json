[
  {
    "sha": "9d5e98ff80479628492329b3b6bdce56d255baa0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDVlOThmZjgwNDc5NjI4NDkyMzI5YjNiNmJkY2U1NmQyNTViYWEw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-30T19:42:17Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-08T15:12:57Z"
      },
      "message": "Fix typos.",
      "tree": {
        "sha": "14a3c69da4329598561316541c6e8d770810b9e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14a3c69da4329598561316541c6e8d770810b9e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d5e98ff80479628492329b3b6bdce56d255baa0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d5e98ff80479628492329b3b6bdce56d255baa0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d5e98ff80479628492329b3b6bdce56d255baa0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d5e98ff80479628492329b3b6bdce56d255baa0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2507fd55568b361080e9127f40584af2df64f76e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2507fd55568b361080e9127f40584af2df64f76e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2507fd55568b361080e9127f40584af2df64f76e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "2985106982788c8bfa31ee077b05e8e77ba19e72",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d5e98ff80479628492329b3b6bdce56d255baa0/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d5e98ff80479628492329b3b6bdce56d255baa0/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=9d5e98ff80479628492329b3b6bdce56d255baa0",
        "patch": "@@ -46,7 +46,7 @@ linearize-hashes.py.\n (Default: `1000*1000*1000 bytes`)\n * `netmagic`: Network magic number.\n * `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be seeked again.\n+be written to a cache so that the blockchain doesn't have to be sought again.\n This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n * `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n will be byte-reversed when read by linearize-data.py. See the linearize-hashes"
      },
      {
        "sha": "593de19170a702f85686955c789261358a1cb88e",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d5e98ff80479628492329b3b6bdce56d255baa0/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d5e98ff80479628492329b3b6bdce56d255baa0/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=9d5e98ff80479628492329b3b6bdce56d255baa0",
        "patch": "@@ -216,7 +216,7 @@ class CBlockIndex\n     //! (memory only) Sequential id assigned to distinguish order in which blocks are received.\n     int32_t nSequenceId;\n \n-    //! (memory only) Maximum nTime in the chain upto and including this block.\n+    //! (memory only) Maximum nTime in the chain up to and including this block.\n     unsigned int nTimeMax;\n \n     void SetNull()"
      },
      {
        "sha": "aecf0d3a71389e1f115341fa25207ba5a2cea394",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d5e98ff80479628492329b3b6bdce56d255baa0/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d5e98ff80479628492329b3b6bdce56d255baa0/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=9d5e98ff80479628492329b3b6bdce56d255baa0",
        "patch": "@@ -75,7 +75,7 @@ void RPCNestedTests::rpcNestedTests()\n     (RPCConsole::RPCExecuteCommandLine(result, \"createrawtransaction [] {} 0\")); //parameter not in brackets are allowed\n     (RPCConsole::RPCExecuteCommandLine(result2, \"createrawtransaction([],{},0)\")); //parameter in brackets are allowed\n     QVERIFY(result == result2);\n-    (RPCConsole::RPCExecuteCommandLine(result2, \"createrawtransaction( [],  {} , 0   )\")); //whitespace between parametres is allowed\n+    (RPCConsole::RPCExecuteCommandLine(result2, \"createrawtransaction( [],  {} , 0   )\")); //whitespace between parameters is allowed\n     QVERIFY(result == result2);\n \n     RPCConsole::RPCExecuteCommandLine(result, \"getblock(getbestblockhash())[tx][0]\", &filtered);"
      },
      {
        "sha": "803db19e1971e69470b354fd84b0ba2215f537a6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d5e98ff80479628492329b3b6bdce56d255baa0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d5e98ff80479628492329b3b6bdce56d255baa0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9d5e98ff80479628492329b3b6bdce56d255baa0",
        "patch": "@@ -1134,7 +1134,7 @@ class Witnessifier : public boost::static_visitor<bool>\n             SignatureData sigs;\n             // This check is to make sure that the script we created can actually be solved for and signed by us\n             // if we were to have the private keys. This is just to make sure that the script is valid and that,\n-            // if found in a transaction, we would still accept and relay that transcation.\n+            // if found in a transaction, we would still accept and relay that transaction.\n             if (!ProduceSignature(DummySignatureCreator(pwallet), witscript, sigs) ||\n                 !VerifyScript(sigs.scriptSig, witscript, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, DummySignatureCreator(pwallet).Checker())) {\n                 return false;\n@@ -1159,7 +1159,7 @@ class Witnessifier : public boost::static_visitor<bool>\n             SignatureData sigs;\n             // This check is to make sure that the script we created can actually be solved for and signed by us\n             // if we were to have the private keys. This is just to make sure that the script is valid and that,\n-            // if found in a transaction, we would still accept and relay that transcation.\n+            // if found in a transaction, we would still accept and relay that transaction.\n             if (!ProduceSignature(DummySignatureCreator(pwallet), witscript, sigs) ||\n                 !VerifyScript(sigs.scriptSig, witscript, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, DummySignatureCreator(pwallet).Checker())) {\n                 return false;"
      },
      {
        "sha": "05d138d2d49eca8f7ea2cd5b7572d5fb063c7d16",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d5e98ff80479628492329b3b6bdce56d255baa0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d5e98ff80479628492329b3b6bdce56d255baa0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9d5e98ff80479628492329b3b6bdce56d255baa0",
        "patch": "@@ -2514,7 +2514,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n \n     if (nChangePosInOut != -1) {\n         tx.vout.insert(tx.vout.begin() + nChangePosInOut, wtx.tx->vout[nChangePosInOut]);\n-        // we dont have the normal Create/Commit cycle, and dont want to risk reusing change,\n+        // we don't have the normal Create/Commit cycle, and don't want to risk reusing change,\n         // so just remove the key from the keypool here.\n         reservekey.KeepKey();\n     }"
      },
      {
        "sha": "b6b90d6781d6f236a07fd1428864569a53303c8c",
        "filename": "test/functional/rawtransactions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d5e98ff80479628492329b3b6bdce56d255baa0/test/functional/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d5e98ff80479628492329b3b6bdce56d255baa0/test/functional/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rawtransactions.py?ref=9d5e98ff80479628492329b3b6bdce56d255baa0",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test the rawtranscation RPCs.\n+\"\"\"Test the rawtransaction RPCs.\n \n Test the following RPCs:\n    - createrawtransaction"
      }
    ]
  }
]