[
  {
    "sha": "7e908c7b826cedbf29560ce7a668af809ee71524",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTkwOGM3YjgyNmNlZGJmMjk1NjBjZTdhNjY4YWY4MDllZTcxNTI0",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-05-20T16:19:26Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-05-25T18:05:58Z"
      },
      "message": "Do not use mempool for GETDATA for tx accepted after the last mempool req.\n\nThe ability to GETDATA a transaction which has not (yet) been relayed\n is a privacy loss vector.\n\nThe use of the mempool for this was added as part of the mempool p2p\n message and is only needed to fetch transactions returned by it.",
      "tree": {
        "sha": "b28d1f37652e06bde2db6127cbb3378ee35c7617",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b28d1f37652e06bde2db6127cbb3378ee35c7617"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e908c7b826cedbf29560ce7a668af809ee71524",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e908c7b826cedbf29560ce7a668af809ee71524",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e908c7b826cedbf29560ce7a668af809ee71524",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e908c7b826cedbf29560ce7a668af809ee71524/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8844ef15ded02d5ed86fb95aaf251235fcef2396",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8844ef15ded02d5ed86fb95aaf251235fcef2396",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8844ef15ded02d5ed86fb95aaf251235fcef2396"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2ee6bc531098a8fd99b7b92dfd66b30df9628d40",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e908c7b826cedbf29560ce7a668af809ee71524/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e908c7b826cedbf29560ce7a668af809ee71524/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7e908c7b826cedbf29560ce7a668af809ee71524",
        "patch": "@@ -4503,7 +4503,10 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                 }\n                 if (!pushed && inv.type == MSG_TX) {\n                     CTransaction tx;\n-                    if (mempool.lookup(inv.hash, tx)) {\n+                    int64_t txtime;\n+                    // To protect privacy, do not answer getdata using the mempool when\n+                    // that TX couldn't have been INVed in reply to a MEMPOOL request.\n+                    if (mempool.lookup(inv.hash, tx, txtime) && txtime <= pfrom->timeLastMempoolReq) {\n                         pfrom->PushMessage(NetMsgType::TX, tx);\n                         pushed = true;\n                     }\n@@ -5902,6 +5905,7 @@ bool SendMessages(CNode* pto)\n                         vInv.clear();\n                     }\n                 }\n+                pto->timeLastMempoolReq = GetTime();\n             }\n \n             // Determine transactions to relay"
      },
      {
        "sha": "df3221e8415601974f5c19c2321e77238137d78c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e908c7b826cedbf29560ce7a668af809ee71524/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e908c7b826cedbf29560ce7a668af809ee71524/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7e908c7b826cedbf29560ce7a668af809ee71524",
        "patch": "@@ -2396,6 +2396,7 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n     fRelayTxes = false;\n     fSentAddr = false;\n     pfilter = new CBloomFilter();\n+    timeLastMempoolReq = 0;\n     nPingNonceSent = 0;\n     nPingUsecStart = 0;\n     nPingUsecTime = 0;"
      },
      {
        "sha": "66cc912a525370da53be8be1c726a5b726fef817",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e908c7b826cedbf29560ce7a668af809ee71524/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e908c7b826cedbf29560ce7a668af809ee71524/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=7e908c7b826cedbf29560ce7a668af809ee71524",
        "patch": "@@ -17,6 +17,7 @@\n #include \"sync.h\"\n #include \"uint256.h\"\n \n+#include <atomic>\n #include <deque>\n #include <stdint.h>\n \n@@ -413,6 +414,8 @@ class CNode\n     // Used for BIP35 mempool sending, also protected by cs_inventory\n     bool fSendMempool;\n \n+    // Last time a \"MEMPOOL\" request was serviced.\n+    std::atomic<int64_t> timeLastMempoolReq;\n     // Ping time measurement:\n     // The pong reply we're expecting, or 0 if no pong expected.\n     uint64_t nPingNonceSent;"
      },
      {
        "sha": "4f17e7f8cac199e9e2c0777a5e141928110a8754",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e908c7b826cedbf29560ce7a668af809ee71524/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e908c7b826cedbf29560ce7a668af809ee71524/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=7e908c7b826cedbf29560ce7a668af809ee71524",
        "patch": "@@ -789,15 +789,23 @@ void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n     std::sort(vtxid.begin(), vtxid.end(), DepthAndScoreComparator(this));\n }\n \n-bool CTxMemPool::lookup(uint256 hash, CTransaction& result) const\n+\n+bool CTxMemPool::lookup(uint256 hash, CTransaction& result, int64_t& time) const\n {\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = mapTx.find(hash);\n     if (i == mapTx.end()) return false;\n     result = i->GetTx();\n+    time = i->GetTime();\n     return true;\n }\n \n+bool CTxMemPool::lookup(uint256 hash, CTransaction& result) const\n+{\n+    int64_t time;\n+    return CTxMemPool::lookup(hash, result, time);\n+}\n+\n bool CTxMemPool::lookupFeeRate(const uint256& hash, CFeeRate& feeRate) const\n {\n     LOCK(cs);"
      },
      {
        "sha": "75cf0f4c124de965052aec534d7d76895dcb1c40",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e908c7b826cedbf29560ce7a668af809ee71524/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e908c7b826cedbf29560ce7a668af809ee71524/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=7e908c7b826cedbf29560ce7a668af809ee71524",
        "patch": "@@ -602,6 +602,7 @@ class CTxMemPool\n     }\n \n     bool lookup(uint256 hash, CTransaction& result) const;\n+    bool lookup(uint256 hash, CTransaction& result, int64_t& time) const;\n     bool lookupFeeRate(const uint256& hash, CFeeRate& feeRate) const;\n \n     /** Estimate fee rate needed to get into the next nBlocks"
      }
    ]
  }
]