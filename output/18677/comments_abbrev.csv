MarcoFalke,2020-04-16 20:56:59,"re-ACK c8672dfeb7443d83fbae02c1b1cd867f83b972b1, only change since my last review is dropping boost and small doc fixup. This review does not cover libmultiprocess 🚕\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK c8672dfeb7443d83fbae02c1b1cd867f83b972b1, only change since my last review is dropp",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-614891219,614891219,
DrahtBot,2020-04-16 22:41:25,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19014 (test: Replace TEST_PREVIOUS_RELEASES env var with test_framework option by MarcoFalke)\n* #18980 (build: Decouple ",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-614933448,614933448,
luke-jr,2020-04-24 18:45:33,I thought we were going to pivot this to just add a `-process=node/wallet/gui` option to the same `bitcoin-qt` binary?,https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-619182425,619182425,
ryanofsky,2020-04-27 19:02:12,"Updated f80a689013710a695370e207db0048373d252043 -> fba09de775f1eff68d2f72650bccc418cbe87cf8 ([`pr/ipc-build2.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.2) -> [`pr/ipc-build2.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-build2.2..pr/ipc-build2.3)) to try to fix travis error https://travis-ci.org",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-620173014,620173014,
hebasto,2020-05-02 06:51:13,"7c99f2c45e23ae1ce8c5b539d14109497ac4322c:\nMaybe add fallback to default value for the `TEST_RUNNER_ENV` variable in the `00_setup_env.sh` script for consistency?",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-622745712,622745712,
ryanofsky,2020-05-07 13:25:51,"Rebased abf920e460b72f43daef1b006cb13c1f1ee2e256 -> e1a8c361c26ae3251b21f505f9538336fdb14155 ([`pr/ipc-build2.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.5) -> [`pr/ipc-build2.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-build2.5-rebase..pr/ipc-build2.6)) due to conflict with #18899",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-625254285,625254285,
hebasto,2020-05-08 07:15:14,"Testing e1a8c361c26ae3251b21f505f9538336fdb14155 on Linux Mint 19.3 (x86_64):\n```\n$ make -C depends NO_QT=1 MULTIPROCESS=1\n...\nExtracting libmultiprocess...\n/home/hebasto/GitHub/bitcoin/depends/sources/5741d750a04e644a03336090d8979c6d033e32c0.tar.gz: OK\nPreprocessing libmultiprocess...\nConfiguring libmultiprocess...\n-- The CXX compiler identification is GNU 7.5.0\n-- Check for wor",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-625674673,625674673,
Sjors,2020-05-08 19:48:36,"Concept ACK\n\nChanges are simpler than the last time I reviewed #16367, but I didn't study the current build code in much detail.\n\nI was unable to build depends for e1a8c361c26ae3251b21f505f9538336fdb14155 on macOS 10.15.4,:\n\n```\nmake -C depends MULTIPROCESS=1\nBuilding libmultiprocess...\n[ 14%] Linking CXX static library libmultiprocess.a\nError running link command: No such file",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-625988135,625988135,
ryanofsky,2020-05-08 20:08:45,"> I was unable to build depends for [e1a8c36](https://github.com/bitcoin/bitcoin/commit/e1a8c361c26ae3251b21f505f9538336fdb14155) on macOS 10.15.4,:\n\nBoy, everything is broken after the changes to support linux->mac cross compile. Googling I think I might need to manually pass the host_AR variable, or just entirely give up on passing cross-compile options when the builder platform is the same ",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-625996555,625996555,
hebasto,2020-05-09 06:49:19,"> re: [#18677 (comment)](https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-625674673)\n> \n> > Testing [e1a8c36](https://github.com/bitcoin/bitcoin/commit/e1a8c361c26ae3251b21f505f9538336fdb14155) on Linux Mint 19.3 (x86_64):\n> \n> Thank you for reporting this. I fixed the a similar problem on travis by installing the [libc6-dev-amd64-cross](https://packages.ubuntu.com/bionic/libc6-d",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-626117284,626117284,
hebasto,2020-05-09 06:59:53,"Testing e1a8c361c26ae3251b21f505f9538336fdb14155 on Linux Mint 19.3 (x86_64):\n```\n$ make -C depends NO_QT=1 MULTIPROCESS=1\n$ CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure\n$ make check\n$ BITCOIND=bitcoin-node test/functional/wallet_multiwallet.py\n2020-05-09T06:57:09.915000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_p9ahj4dt\n2",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-626118471,626118471,
ryanofsky,2020-05-11 23:40:36,"Updated e1a8c361c26ae3251b21f505f9538336fdb14155 -> 952ac003aba664204979579e6f0363033a07cff2 ([`pr/ipc-build2.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.6) -> [`pr/ipc-build2.7`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-build2.6..pr/ipc-build2.7)) building natively without sysroot when possible ",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-627022845,627022845,
DrahtBot,2020-05-12 13:34:27,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-627349010,627349010,
ryanofsky,2020-05-13 00:31:52,"Rebased 952ac003aba664204979579e6f0363033a07cff2 -> c4378e6bafcf1d749293519ab9dde10d8b6d2230 ([`pr/ipc-build2.7`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.7) -> [`pr/ipc-build2.8`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-build2.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-build2.7-rebase..pr/ipc-build2.8)) due to conflict with #18929. Also added c",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-627672009,627672009,
ryanofsky,2020-05-19 13:52:49,"I think it might be a good time to merge this PR. It seems to be at a point where it is working for the people who've tested it on different platforms. There are definitely improvements to be made going forward, but we know build changes are fragile and a fix for one bug tends to lead to other bugs, so it would be great to be done with this big PR when it's in a pretty good state, and start to tra",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-630833549,630833549,
Sjors,2020-05-19 15:24:17,"Maybe a Gitian build to top it off?\n\n```\n1d9040e1d0e33a0aeebc2ee3a3be56b20df9fe985acc90be8d7d4aa7e3909356  bitcoin-3aec27edc9d4-aarch64-linux-gnu.tar.gz\n3cb8c621421daf7de5cf02004a88eb462d0dcc855f0235cc40f01e65ea9dd115  bitcoin-3aec27edc9d4-win64-setup-unsigned.exe\nbaed7424d10644a1ff7443801a1aaaa7326ad37fdf587a098950e05c0fbc7ad1  bitcoin-3aec27edc9d4-osx-unsigned.dmg\n````\n\n",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-630895113,630895113,
fanquake,2020-05-20 11:12:47,"> I think it might be a good time to merge this PR.\n\nThanks. I'm planning on merging this shortly.",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-631409357,631409357,
practicalswift,2020-05-20 15:21:28,"ACK e2bab2aa162ae38b2bf8195b577c982402fbee9d\n\nThanks for doing this excellent architectural work: a dream come true (even if optional)!\n\nWith this dream off the table I think I only have [Sandboxed API integration](https://developers.google.com/sandboxed-api), [control-flow integrity](https://clang.llvm.org/docs/ControlFlowIntegrity.html) and killing the UUM bug class for good using [`-ftr",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-631543711,631543711,
DrahtBot,2020-05-21 04:55:59,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 0aa2ff0f660ec7fec532b5f33850219bad5104dd<br>(master) | commit b8eebc5ebd395bde044b609c67ef59e002ac8505<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`f4e97320d67e9f9d...`](https://drahtbot.space/gitian/bitcoin/bitcoin/0aa2ff0f660ec7fec532b5f33850219bad5104dd/bitcoin-0aa2ff0f660e-aarch64-l,https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-631879682,631879682,
MarcoFalke,2020-05-21 13:23:20,"Checked that the ci config file is indeed native and runs on aarch64:\n\n```\nOptions used to compile and link:\n  multiprocess  = yes\n  with wallet   = yes\n  with gui / qt = yes\n    with qr     = yes\n  with zmq      = yes\n  with test     = yes\n    with fuzz   = no\n  with bench    = yes\n  with upnp     = yes\n  use asm       = yes\n  sanitizers    = \n  debug enabled = no\n",https://github.com/bitcoin/bitcoin/pull/18677#issuecomment-632083425,632083425,
fanquake,2020-04-16 23:55:04,This seems leftover from the boost changes. I'd suggest dropping as it would likely just be changed back. i.e: #17928,https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409914564,409914564,depends/packages/boost.mk
fanquake,2020-04-17 00:26:22,"`-debug=ipc` doesn't currently do anything right now, as it needs the changes in [#10102](https://github.com/bitcoin/bitcoin/pull/10102/files#diff-13860ad7a053eec45742708dab06198aR166)?",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409923738,409923738,doc/multiprocess.md
fanquake,2020-04-17 00:27:14,Why is this reordering needed?,https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409924004,409924004,src/Makefile.am
fanquake,2020-04-17 01:05:27,"Can you clarify why this is needed? I did look at the commit comments about passing `--sysroot` and missing includes, however from what I can tell, there should be no change in behaviour with this diff. I did run a few compilation tests and didn't see any obvious difference in compile flags/includes etc. \n\nMy assumption is that the problems seen (https://github.com/chaincodelabs/libmultiproces",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409934309,409934309,depends/builders/darwin.mk
MarcoFalke,2020-04-17 11:48:15,"Sorry to be bikeshedding this again, but what about naming this `node_sources` or `daemon_sources`? As of now it sounds confusingly similar to libbitcoin_common, which is an utility library for all Bitcoin Core util binaries",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r410170797,410170797,src/Makefile.am
ryanofsky,2020-04-17 20:23:12,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409934309\n\n> Can you clarify why this is needed? I did look at the commit comments about passing `--sysroot` and missing includes, however from what I can tell, there should be no change in behaviour with this diff. I did run a few compilation tests and didn't see any obvious difference in compile flags/includes etc.\n\nThe commen",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r410451676,410451676,depends/builders/darwin.mk
ryanofsky,2020-04-17 20:23:22,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409914564\n\n> This seems leftover from the boost changes. I'd suggest dropping as it would likely just be changed back. i.e: #17928\n\nSubstituting $(package) in variable names seems pretty clearly correct and helps with package inheritance while substituting $(package) in external URLs seems pretty clearly incorrect and breaks pac",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r410451753,410451753,depends/packages/boost.mk
ryanofsky,2020-04-17 20:23:42,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409923738\n\n> `-debug=ipc` doesn't currently do anything right now, as it needs the changes in [#10102](https://github.com/bitcoin/bitcoin/pull/10102/files#diff-13860ad7a053eec45742708dab06198aR166)?\n\nYes, the comments above refer to 10102, explain the debug option and mention this",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r410451955,410451955,doc/multiprocess.md
ryanofsky,2020-04-17 20:24:04,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r409924004\n\n> Why is this reordering needed?\n\nUtil library depends on univalue, and dependencies need to be listed after libraries that depend on them, so this is more correct. Without this change the error (on plain linux build) is:\n\n```\n  CXXLD    bitcoin-wallet\nlibbitcoin_util.a(libbitcoin_util_a-request.o): In functio",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r410452130,410452130,src/Makefile.am
ryanofsky,2020-04-20 17:08:22,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r410170797\n\n> Sorry to be bikeshedding this again, but what about naming this `node_sources` or `daemon_sources`? As of now it sounds confusingly similar to libbitcoin_common, which is an utility library for all Bitcoin Core util binaries\n\nSwitched to daemon_sources as suggested. Possible this is just bikeshedding with past-Marco",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r411545942,411545942,src/Makefile.am
hebasto,2020-05-02 05:20:16,The `BUILD_MULTIPROCESS` conditional seems not used in `Makefile`s.,https://github.com/bitcoin/bitcoin/pull/18677#discussion_r418905901,418905901,configure.ac
hebasto,2020-05-02 06:05:19,"With this PR `bitcoin_wallet_LDADD` contains `$(LIBBITCOIN_SERVER)` comparing to the master.\nIs this needed?",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r418918506,418918506,src/Makefile.am
ryanofsky,2020-05-06 15:16:32,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r418905901\n\n> The `BUILD_MULTIPROCESS` conditional seems not used in `Makefile`s.\n\nIt's used in #10102 to conditionally build a new libbitcoin_ipc.a library. This could be moved to #10102, but #10102 does not otherwise touch the configure script, and I'm trying to keep as much as possible of build changes in this PR so they can b",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r420874176,420874176,configure.ac
ryanofsky,2020-05-06 15:17:09,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r418918506\n\n> With this PR `bitcoin_wallet_LDADD` contains `$(LIBBITCOIN_SERVER)` comparing to the master.\n> Is this needed?\n\nGood catch, removed. It shouldn't effect build output, but this way there are still link errors if wallet tries to access a node symbol",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r420874663,420874663,src/Makefile.am
hebasto,2020-05-08 07:12:55,"In this PR these variables are not used in `Makefile`s.\n\nBut in #10102 one can see:\nhttps://github.com/bitcoin/bitcoin/blob/aa38570fa5f1ceee5883a8170da60206051e05fd/src/Makefile.am#L597\nhttps://github.com/bitcoin/bitcoin/blob/aa38570fa5f1ceee5883a8170da60206051e05fd/src/Makefile.am#L649\n\nIs it intended?",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r421982860,421982860,configure.ac
ryanofsky,2020-05-08 14:47:41,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r421982860\n\n> In this PR these variables are not used in `Makefile`s.\n> \n> But in #10102 one can see:\n> \n> Is it intended?\n\nWhat's unexpected here? LIBMULTIPROCESS_CFLAGS and LIBMULTIPROCESS_LIBS are set by the configure script and used in the makefile.\n\nIf the question is why are the variables set in this PR when the",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r422186243,422186243,configure.ac
hebasto,2020-05-08 18:29:38,"> If it's a concern about clarity, is there something beyond these two lines of code that is confusing?\n\nYes, it is about clarity. Thank you for your patient clarification regarding future changes.",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r422301198,422301198,configure.ac
ryanofsky,2020-05-08 18:43:29,"> Yes, it is about clarity. Thank you for your patient clarification regarding future changes.\n\nThank you for reviewing and testing and finding things to fix! I'd very much like to add comments to the build files to document things which are surprising. But I can't do that without knowing which specific things are surprising, so the more context provided in review comments, the better!",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r422308042,422308042,configure.ac
MarcoFalke,2020-05-12 12:22:13,"not sure if this is useful to run on travis. This is an experimental feature (currently not even a feature). So the inconvenience in the unlikely case that it breaks is probably not worth having it run on every pull request. Please keep the ci config, though. If you want you can add it to `.cirrus.ci` here in the repo or people can run it manually on their machines.",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r423688995,423688995,.travis.yml
ryanofsky,2020-05-12 13:01:34,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r423688995\n\n> not sure if this is useful to run on travis\n\nWhat if I added an `if: commit_message !~ /depends:|multiprocess:/` [condition](https://docs.travis-ci.com/user/conditional-builds-stages-jobs)? This travis config has uncovered a few build and runtime bugs that weren't happening for me locally, so I think it's been prett",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r423713529,423713529,.travis.yml
MarcoFalke,2020-05-12 13:09:17,"Absolutely, if you can get the condition to work. Travis is running the build on a temporary merge commit, so the commit message might not might not be the one you pushed.",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r423718658,423718658,.travis.yml
Sjors,2020-05-19 11:21:44,If you need to change anything else: maybe bump to 9f5b8355649aca94b4b529d89ba439aa3b2f9642 for consistency with building from master (but the new commits shouldn't be relevant here),https://github.com/bitcoin/bitcoin/pull/18677#discussion_r427225309,427225309,depends/packages/native_libmultiprocess.mk
Sjors,2020-05-19 12:14:50,"As @fanquake suggested elsewhere, you could add this:\n\n```\ndefine $(package)_set_vars\n	$(package)_config_opts=--without-openssl\nendef\n```\n\nNote that at least on macOS it won't pick up my homebrew installed `openssl@1.1: stable 1.1.1g` even when I use `--with-openssl`, but I think it's worth explicitly opting out anyway.\n\nYou mentioned:\n> But maybe requesting to be built witho",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r427254248,427254248,depends/packages/native_capnp.mk
ryanofsky,2020-05-19 13:41:32,"re: https://github.com/bitcoin/bitcoin/pull/18677#discussion_r427254248\n\n> It's also consistent with the practice in other dependencies to actively opt out of stuff (see e.g. #17730, #16370)\n\nThanks, I will make that change in a followup, or here if another update is required (reluctant to make changes now it seems like all the build problems so far have been ironed out).\n\nAt the time ",https://github.com/bitcoin/bitcoin/pull/18677#discussion_r427311161,427311161,depends/packages/native_capnp.mk
