[
  {
    "sha": "b34171186b35bf13276ca000f00bc70a482ec65e",
    "node_id": "C_kwDOABII59oAKGIzNDE3MTE4NmIzNWJmMTMyNzZjYTAwMGYwMGJjNzBhNDgyZWM2NWU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-28T23:11:49Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:21:56Z"
      },
      "message": "refactor: merge ScriptPubKeyToUniv & ScriptToUniv into one function",
      "tree": {
        "sha": "d4b82907c76d292ec702a7575f4f4c73d09fb159",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4b82907c76d292ec702a7575f4f4c73d09fb159"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b34171186b35bf13276ca000f00bc70a482ec65e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9DQACgkQc3/VzfHR\nRrkU2g//QW7IwgBDkD2C7r2vhNeoHYlwZuPRvcZRVRmavbQcp5kb/IziaoJTa2Pd\nKmrAB5eBMZRXWR2fWfcvjfPNhx0+bwznlikbBKPN/m69+UBYBQ3PSRK3d1E+7U0Q\nKrGDuV2dbfE5aH7vLz/GFB7Q5zLRhQQXodqdGFbo02micOGlLJz9Or1tpZzJLubW\nC8L/4u9Bl0Rvepixkyrx34hz+UgnMrDWM0Yi2sSYrGbLxz5vfo/hAy5fdFnITjdw\nR5I3aHdpUUDTPKCpPDCABo721GJmfKEP7UvAhRtMdhd84VAOfPqkP8EvQfbDR4U+\nVwmdeIafDVKI9tFl0IPe4luyG/0IHNmC7Zr0uEyAWnh940cSQ4NRa7cw7ZBJ6L8+\nuuwUw7g3L9vIRNpassAgtzMDzC1QSiaIvOklp4aaQA3l9xHmxGPC+Qic5EwyRKej\nsdclaeLKDEms/IOKDpOzziXSrW9MyEYTAxCLLKgstND/6+GG8CVjmu18hc1sOOla\n07qCbVquwrc31NsUcyVjjf6KQqSN0Hzc4cASDpW/a8K3CKsCLFhZ20No4oXXWE3z\nFfKrSo9VkXhjB03WlQ9wemcuQ4JzHAsc7FvM9183LD2dEdU3n7QtEMbCECnQwgv8\nxFWRklgth9KHFv8p1qAl7viXrRqSaOm17/INp+K1cv0eMEtppEY=\n=QrqI\n-----END PGP SIGNATURE-----",
        "payload": "tree d4b82907c76d292ec702a7575f4f4c73d09fb159\nparent 5cc083cd46ad71510f56af957e2e8733c388c6f1\nauthor Michael Dietz <michael.dietz@waya.ai> 1632870709 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824116 -0600\n\nrefactor: merge ScriptPubKeyToUniv & ScriptToUniv into one function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34171186b35bf13276ca000f00bc70a482ec65e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b34171186b35bf13276ca000f00bc70a482ec65e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34171186b35bf13276ca000f00bc70a482ec65e/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc083cd46ad71510f56af957e2e8733c388c6f1"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 17,
      "deletions": 23
    },
    "files": [
      {
        "sha": "70731c56b7dc2e69669c1d319de0c6c2914972b7",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -53,8 +53,7 @@ UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool include_hex, bool include_address = true);\n-void ScriptToUniv(const CScript& script, UniValue& out);\n+void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex = true, bool include_address = false);\n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "496e65ba2eab0b1552d6ff7d2251a0115d232fe2",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -142,22 +142,19 @@ std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags)\n     return HexStr(ssTx);\n }\n \n-void ScriptToUniv(const CScript& script, UniValue& out)\n-{\n-    ScriptPubKeyToUniv(script, out, /* include_hex */ true, /* include_address */ false);\n-}\n-\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool include_hex, bool include_address)\n+void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool include_address)\n {\n     CTxDestination address;\n \n-    out.pushKV(\"asm\", ScriptToAsmStr(scriptPubKey));\n-    if (include_hex) out.pushKV(\"hex\", HexStr(scriptPubKey));\n+    out.pushKV(\"asm\", ScriptToAsmStr(script));\n+    if (include_hex) {\n+        out.pushKV(\"hex\", HexStr(script));\n+    }\n \n     std::vector<std::vector<unsigned char>> solns;\n-    const TxoutType type{Solver(scriptPubKey, solns)};\n+    const TxoutType type{Solver(script, solns)};\n \n-    if (include_address && ExtractDestination(scriptPubKey, address) && type != TxoutType::PUBKEY) {\n+    if (include_address && ExtractDestination(script, address) && type != TxoutType::PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n     out.pushKV(\"type\", GetTxnOutputType(type));\n@@ -215,7 +212,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n \n                 case TxVerbosity::SHOW_DETAILS_AND_PREVOUT:\n                     UniValue o_script_pub_key(UniValue::VOBJ);\n-                    ScriptPubKeyToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true);\n+                    ScriptToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true, /* include_address= */ true);\n \n                     UniValue p(UniValue::VOBJ);\n                     p.pushKV(\"generated\", bool(prev_coin.fCoinBase));\n@@ -241,7 +238,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n-        ScriptPubKeyToUniv(txout.scriptPubKey, o, true);\n+        ScriptToUniv(txout.scriptPubKey, o, true, /* include_address= */ true);\n         out.pushKV(\"scriptPubKey\", o);\n         vout.push_back(out);\n "
      },
      {
        "sha": "151596c4d34d85a32e8b3488df47f0026fb5afc5",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -642,7 +642,7 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n \n             // include the script in a json output\n             UniValue o(UniValue::VOBJ);\n-            ScriptPubKeyToUniv(coin.out.scriptPubKey, o, true);\n+            ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n             utxo.pushKV(\"scriptPubKey\", o);\n             utxos.push_back(utxo);\n         }"
      },
      {
        "sha": "fc9c167603c173f1e2bc814096d318bbb1a3af64",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -1328,7 +1328,7 @@ static RPCHelpMan gettxout()\n     }\n     ret.pushKV(\"value\", ValueFromAmount(coin.out.nValue));\n     UniValue o(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(coin.out.scriptPubKey, o, true);\n+    ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n     ret.pushKV(\"scriptPubKey\", o);\n     ret.pushKV(\"coinbase\", (bool)coin.fCoinBase);\n "
      },
      {
        "sha": "abb9ce01c4ca8f4bb6108896db1a9e389d0c3d79",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -573,7 +573,7 @@ static RPCHelpMan decodescript()\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptPubKeyToUniv(script, r, /* include_hex */ false);\n+    ScriptToUniv(script, r, /* include_hex */ false, /* include_address= */ true);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -607,7 +607,7 @@ static RPCHelpMan decodescript()\n                 // Newer segwit program versions should be considered when then become available.\n                 segwitScr = GetScriptForDestination(WitnessV0ScriptHash(script));\n             }\n-            ScriptPubKeyToUniv(segwitScr, sr, /* include_hex */ true);\n+            ScriptToUniv(segwitScr, sr, /* include_hex */ true, /* include_address= */ true);\n             sr.pushKV(\"p2sh-segwit\", EncodeDestination(ScriptHash(segwitScr)));\n             r.pushKV(\"segwit\", sr);\n         }\n@@ -1163,7 +1163,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.witness_utxo;\n \n             UniValue o(UniValue::VOBJ);\n-            ScriptPubKeyToUniv(txout.scriptPubKey, o, /* include_hex */ true);\n+            ScriptToUniv(txout.scriptPubKey, o, /* include_hex */ true, /* include_address= */ true);\n \n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));"
      },
      {
        "sha": "1b8e0d2d3e506d40d62ef0b3108f44d2021203c7",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b34171186b35bf13276ca000f00bc70a482ec65e/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b34171186b35bf13276ca000f00bc70a482ec65e/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=b34171186b35bf13276ca000f00bc70a482ec65e",
        "patch": "@@ -109,11 +109,9 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(script, o1, true);\n+    ScriptToUniv(script, o1, true, /* include_address= */ false);\n     UniValue o2(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(script, o2, false);\n-    UniValue o3(UniValue::VOBJ);\n-    ScriptToUniv(script, o3);\n+    ScriptToUniv(script, o2, false, /* include_address= */ false);\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      }
    ]
  },
  {
    "sha": "6caf9812d17bff11455726865fb6f81bbcd909a8",
    "node_id": "C_kwDOABII59oAKDZjYWY5ODEyZDE3YmZmMTE0NTU3MjY4NjVmYjZmODFiYmNkOTA5YTg",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T14:58:36Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:07Z"
      },
      "message": "refactor: prefer snake case, TxToUniv arg hashBlock renamed block_hash",
      "tree": {
        "sha": "8baaee941986d68845331e527ada5b0574fca842",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8baaee941986d68845331e527ada5b0574fca842"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6caf9812d17bff11455726865fb6f81bbcd909a8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9D8ACgkQc3/VzfHR\nRrlwmg//W3bXkcAMYbi28qSXQ1i7amOXmVGw8CnrZXilx1VEoVeXSgfUroRaFdA7\nUgyCnXmuFj5d7rZv7FwubeRHM8gsnRs+qMbbebClmN/2x1bPWzjnUpVLiyxjITz8\nsYPzkyflsrr5Mxkr1ZHBfWIJkHQVbXfuHh/Y+ZNLcYajPtSlfNyx/S32i7kScgy8\nu50AsPwgcs0aIbe6b/02FEDhFY5w5PvaX+r8rOgD0FNwADtbtXGPMhClK7LWZfTU\nfnTND+IRFoQIeAqoBWb7959AuNmuEsGBmvIEnWjl6qbVkN5OKWUtnDSuriGitRX+\nHQlo9CMrE9RKVv3Cf2Z8+t0Y6IWiBb43mTksQjBSK3P8eiZMsN1RjJouW9NWpAh6\nhUxsISa90P4mMwrXrE5C0xv8P6A4SKJuS/8Dn0fZJk3+hLeBrccfQR/CBC6OegIo\nUDG+AINa4Hdhg+Ngn+QsLOWc9VsgVszoDi0eSY+jUo3K/mEMqHMAMFY3UFeA00p4\nzqv0WwVD+jo7b8Dg0CM9GWdL/bKOAHuVw4WIcAh4eOdQep0voXQjiaSrHglm/q1H\n4Ot61+J6hzPjE1DX5PRk10zIaBVZYrtNKGuOVB/aDn/u1qlyCkhe3g8QSwmK+JzL\nzKW0tB028SFoYdMdec7Dca+HShulTH0v8m6VKzo/VEA3WrGutmk=\n=kaZi\n-----END PGP SIGNATURE-----",
        "payload": "tree 8baaee941986d68845331e527ada5b0574fca842\nparent b34171186b35bf13276ca000f00bc70a482ec65e\nauthor Michael Dietz <michael.dietz@waya.ai> 1632927516 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824127 -0600\n\nrefactor: prefer snake case, TxToUniv arg hashBlock renamed block_hash\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6caf9812d17bff11455726865fb6f81bbcd909a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6caf9812d17bff11455726865fb6f81bbcd909a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6caf9812d17bff11455726865fb6f81bbcd909a8/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b34171186b35bf13276ca000f00bc70a482ec65e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34171186b35bf13276ca000f00bc70a482ec65e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b34171186b35bf13276ca000f00bc70a482ec65e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "58885b69710b98895bf32bd5971b6f8d445b830d",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=6caf9812d17bff11455726865fb6f81bbcd909a8",
        "patch": "@@ -54,6 +54,6 @@ std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex = true, bool include_address = false);\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n+void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "f843a10f95cb3bbfba44aca1aaacd99a4ca67aef",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6caf9812d17bff11455726865fb6f81bbcd909a8/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=6caf9812d17bff11455726865fb6f81bbcd909a8",
        "patch": "@@ -160,7 +160,7 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool i\n     out.pushKV(\"type\", GetTxnOutputType(type));\n }\n \n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n+void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n {\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n@@ -254,8 +254,8 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n         entry.pushKV(\"fee\", ValueFromAmount(fee));\n     }\n \n-    if (!hashBlock.IsNull())\n-        entry.pushKV(\"blockhash\", hashBlock.GetHex());\n+    if (!block_hash.IsNull())\n+        entry.pushKV(\"blockhash\", block_hash.GetHex());\n \n     if (include_hex) {\n         entry.pushKV(\"hex\", EncodeHexTx(tx, serialize_flags)); // The hex-encoded transaction. Used the name \"hex\" to be consistent with the verbose output of \"getrawtransaction\"."
      }
    ]
  },
  {
    "sha": "9d61af23b4890f08e9d46a5a703177fa9a69c765",
    "node_id": "C_kwDOABII59oAKDlkNjFhZjIzYjQ4OTBmMDhlOWQ0NmE1YTcwMzE3N2ZhOWE2OWM3NjU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T00:04:07Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:07Z"
      },
      "message": "refactor: named args whenever ScriptToUniv or TxToUniv invoked",
      "tree": {
        "sha": "e1ce4af375220b528b8ac84a2ec9a499572be7ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1ce4af375220b528b8ac84a2ec9a499572be7ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9D8ACgkQc3/VzfHR\nRrkjtBAAgBmV+IjGx7qKUB+kCpDerDw3orPehT1d0zQ1/yDTvcHKOVoMXT0zGoH3\ntOpZ9zq2XdVFL0L2iUI8NSyl/OowdOz1lYcOU6DDsMXlGtpgmSAyWIM3M8j94Kwn\nxY8VBCuthU+2eSArOvAEQlQgpkwIE5N+QCaphioZhVwMCRodAXc6ghhQYQw/nMUD\npdCBC3AAid5bOCHxXLprj2A+36GJqJADr4z8iFWvY+sBIJ4S1NDrKhDI/2ReYrX1\nsjp5o/uoiNYa3ggDgA9D4EwMR03uADwp3Qy0ateZh3jtMOiIxjBEc6Cd5194aRYK\ne5OBuCn84RyXf/EXIZHwhCLxQXm1zql94NQYnEJGNKlhf608Ddgb2xMp7hu1T0rB\n1dfDYMLdE4j+tFQTM1eYoI6+h31lW47c5ClrG3AseqpepmeOG0QskokbPe8p0tWU\nnCoWBvwDThcBf3XJjDpa92txGppCTOFf2CNOBV64NvpvWY/6PfrIMbEx4/Id6Egn\nMFwBiXjSJXPVURZUrwBzRj1q+Y7RnBxLse4+aXg0l56HbzyrbHdxs28h2UBzpJ4M\nLA9p0zzUuVDn2cWg72klupc2vBy2pXKw/Tkw716Ii1w9MWbvl1dJlGKhL6gzzuMh\n3JeprTijpUDvxKm6O9SsVlfbzMYXV661M0oRHYBc4rv4V1jq3RU=\n=rc9w\n-----END PGP SIGNATURE-----",
        "payload": "tree e1ce4af375220b528b8ac84a2ec9a499572be7ce\nparent 6caf9812d17bff11455726865fb6f81bbcd909a8\nauthor Michael Dietz <michael.dietz@waya.ai> 1632873847 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824127 -0600\n\nrefactor: named args whenever ScriptToUniv or TxToUniv invoked\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d61af23b4890f08e9d46a5a703177fa9a69c765",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6caf9812d17bff11455726865fb6f81bbcd909a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6caf9812d17bff11455726865fb6f81bbcd909a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6caf9812d17bff11455726865fb6f81bbcd909a8"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "9ce2a19c7d3e00303164644dc4fa72c2ab707d45",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -739,7 +739,7 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n static void OutputTxJSON(const CTransaction& tx)\n {\n     UniValue entry(UniValue::VOBJ);\n-    TxToUniv(tx, uint256(), entry);\n+    TxToUniv(tx, /* block_hash= */ uint256(), entry);\n \n     std::string jsonOutput = entry.write(4);\n     tfm::format(std::cout, \"%s\\n\", jsonOutput);"
      },
      {
        "sha": "8bc50aafc23efbeff899fd5a7b1823f1fc240820",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -212,7 +212,7 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n \n                 case TxVerbosity::SHOW_DETAILS_AND_PREVOUT:\n                     UniValue o_script_pub_key(UniValue::VOBJ);\n-                    ScriptToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true, /* include_address= */ true);\n+                    ScriptToUniv(prev_txout.scriptPubKey, /* out= */ o_script_pub_key, /* include_hex= */ true, /* include_address= */ true);\n \n                     UniValue p(UniValue::VOBJ);\n                     p.pushKV(\"generated\", bool(prev_coin.fCoinBase));\n@@ -238,7 +238,7 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n-        ScriptToUniv(txout.scriptPubKey, o, true, /* include_address= */ true);\n+        ScriptToUniv(txout.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n         out.pushKV(\"scriptPubKey\", o);\n         vout.push_back(out);\n "
      },
      {
        "sha": "978a8b2c6ae93b8dd2c421263cee1c380e11b9f2",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -457,7 +457,7 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n \n     case RetFormat::JSON: {\n         UniValue objTx(UniValue::VOBJ);\n-        TxToUniv(*tx, hashBlock, objTx);\n+        TxToUniv(*tx, /* block_hash= */ hashBlock, /* entry= */ objTx);\n         std::string strJSON = objTx.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n         req->WriteReply(HTTP_OK, strJSON);\n@@ -642,7 +642,7 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n \n             // include the script in a json output\n             UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n+            ScriptToUniv(coin.out.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n             utxo.pushKV(\"scriptPubKey\", o);\n             utxos.push_back(utxo);\n         }"
      },
      {
        "sha": "df45b1e7022f50d2ee2936127910001eb9ea5d09",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -226,7 +226,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n                 // coinbase transaction (i.e. i == 0) doesn't have undo data\n                 const CTxUndo* txundo = (have_undo && i > 0) ? &blockUndo.vtxundo.at(i - 1) : nullptr;\n                 UniValue objTx(UniValue::VOBJ);\n-                TxToUniv(*tx, uint256(), objTx, true, RPCSerializationFlags(), txundo, verbosity);\n+                TxToUniv(*tx, /* block_hash= */ uint256(), /* entry= */ objTx, /* include_hex= */ true, RPCSerializationFlags(), txundo, verbosity);\n                 txs.push_back(objTx);\n             }\n     }\n@@ -1328,7 +1328,7 @@ static RPCHelpMan gettxout()\n     }\n     ret.pushKV(\"value\", ValueFromAmount(coin.out.nValue));\n     UniValue o(UniValue::VOBJ);\n-    ScriptToUniv(coin.out.scriptPubKey, o, true, /* include_address= */ true);\n+    ScriptToUniv(coin.out.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n     ret.pushKV(\"scriptPubKey\", o);\n     ret.pushKV(\"coinbase\", (bool)coin.fCoinBase);\n "
      },
      {
        "sha": "12d79ae33f09854d416770e1f8fc10832e7f104a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -50,7 +50,7 @@ static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue&\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n-    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags());\n+    TxToUniv(tx, /* block_hash= */ uint256(), entry, /* include_hex= */ true, RPCSerializationFlags());\n \n     if (!hashBlock.IsNull()) {\n         LOCK(cs_main);\n@@ -516,7 +516,7 @@ static RPCHelpMan decoderawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    TxToUniv(CTransaction(std::move(mtx)), uint256(), result, false);\n+    TxToUniv(CTransaction(std::move(mtx)), /* block_hash= */ uint256(), /* entry= */ result, /* include_hex= */ false);\n \n     return result;\n },\n@@ -573,7 +573,7 @@ static RPCHelpMan decodescript()\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptToUniv(script, r, /* include_hex */ false, /* include_address= */ true);\n+    ScriptToUniv(script, /* out= */ r, /* include_hex= */ false, /* include_address= */ true);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -607,7 +607,7 @@ static RPCHelpMan decodescript()\n                 // Newer segwit program versions should be considered when then become available.\n                 segwitScr = GetScriptForDestination(WitnessV0ScriptHash(script));\n             }\n-            ScriptToUniv(segwitScr, sr, /* include_hex */ true, /* include_address= */ true);\n+            ScriptToUniv(segwitScr, /* out= */ sr, /* include_hex= */ true, /* include_address= */ true);\n             sr.pushKV(\"p2sh-segwit\", EncodeDestination(ScriptHash(segwitScr)));\n             r.pushKV(\"segwit\", sr);\n         }\n@@ -1139,7 +1139,7 @@ static RPCHelpMan decodepsbt()\n \n     // Add the decoded tx\n     UniValue tx_univ(UniValue::VOBJ);\n-    TxToUniv(CTransaction(*psbtx.tx), uint256(), tx_univ, false);\n+    TxToUniv(CTransaction(*psbtx.tx), /* block_hash= */ uint256(), /* entry= */ tx_univ, /* include_hex= */ false);\n     result.pushKV(\"tx\", tx_univ);\n \n     // Unknown data\n@@ -1163,7 +1163,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.witness_utxo;\n \n             UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(txout.scriptPubKey, o, /* include_hex */ true, /* include_address= */ true);\n+            ScriptToUniv(txout.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n \n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));\n@@ -1177,7 +1177,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.non_witness_utxo->vout[psbtx.tx->vin[i].prevout.n];\n \n             UniValue non_wit(UniValue::VOBJ);\n-            TxToUniv(*input.non_witness_utxo, uint256(), non_wit, false);\n+            TxToUniv(*input.non_witness_utxo, /* block_hash= */ uint256(), /* entry= */ non_wit, /* include_hex= */ false);\n             in.pushKV(\"non_witness_utxo\", non_wit);\n \n             have_a_utxo = true;\n@@ -1210,12 +1210,12 @@ static RPCHelpMan decodepsbt()\n         // Redeem script and witness script\n         if (!input.redeem_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.redeem_script, r);\n+            ScriptToUniv(input.redeem_script, /* out= */ r);\n             in.pushKV(\"redeem_script\", r);\n         }\n         if (!input.witness_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.witness_script, r);\n+            ScriptToUniv(input.witness_script, /* out= */ r);\n             in.pushKV(\"witness_script\", r);\n         }\n \n@@ -1270,12 +1270,12 @@ static RPCHelpMan decodepsbt()\n         // Redeem script and witness script\n         if (!output.redeem_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.redeem_script, r);\n+            ScriptToUniv(output.redeem_script, /* out= */ r);\n             out.pushKV(\"redeem_script\", r);\n         }\n         if (!output.witness_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.witness_script, r);\n+            ScriptToUniv(output.witness_script, /* out= */ r);\n             out.pushKV(\"witness_script\", r);\n         }\n "
      },
      {
        "sha": "861eff11d34bad796db05d681a3f54f8f41711ae",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -109,9 +109,9 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptToUniv(script, o1, true, /* include_address= */ false);\n+    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ true, /* include_address= */ false);\n     UniValue o2(UniValue::VOBJ);\n-    ScriptToUniv(script, o2, false, /* include_address= */ false);\n+    ScriptToUniv(script, /* out= */ o2, /* include_hex= */ false, /* include_address= */ false);\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "cf1506e7e13bfe11431079594f9c59299a35122f",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -103,6 +103,6 @@ FUZZ_TARGET_INIT(transaction, initialize_transaction)\n     (void)IsWitnessStandard(tx, coins_view_cache);\n \n     UniValue u(UniValue::VOBJ);\n-    TxToUniv(tx, /* hashBlock */ uint256::ZERO, u);\n-    TxToUniv(tx, /* hashBlock */ uint256::ONE, u);\n+    TxToUniv(tx, /* block_hash= */ uint256::ZERO, /* entry= */ u);\n+    TxToUniv(tx, /* block_hash= */ uint256::ONE, /* entry= */ u);\n }"
      },
      {
        "sha": "3854f4c765dd9184f7119fb0928ad0c377a4a57a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d61af23b4890f08e9d46a5a703177fa9a69c765/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "patch": "@@ -1773,7 +1773,7 @@ static RPCHelpMan gettransaction()\n \n     if (verbose) {\n         UniValue decoded(UniValue::VOBJ);\n-        TxToUniv(*wtx.tx, uint256(), decoded, false);\n+        TxToUniv(*wtx.tx, /* block_hash= */ uint256(), /* entry= */ decoded, /* include_hex= */ false);\n         entry.pushKV(\"decoded\", decoded);\n     }\n "
      }
    ]
  },
  {
    "sha": "63a657ccff959f7d86f423607f69aa9f7507dbdb",
    "node_id": "C_kwDOABII59oAKDYzYTY1N2NjZmY5NTlmN2Q4NmY0MjM2MDdmNjlhYTlmNzUwN2RiZGI",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T00:44:13Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:08Z"
      },
      "message": "refactor: de-duplicate common help text for parsed destination address",
      "tree": {
        "sha": "759dba167faa8e57329846e59aa90861f18ee965",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/759dba167faa8e57329846e59aa90861f18ee965"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9EAACgkQc3/VzfHR\nRrlX7g/+Nr1UVx7h5nPiq35m/xgpBDulN03szIBKwXvlF/20b6xzQMnkCANSztKm\nGZX6Ry+dWTlts15IHB0Zw7rh2nKATMfzOQsTIqGQQ9OaoobqjF59r9zD/u4z6D0S\n+XIj8SA2AvFDip61qRGYcYwFv5KAbqXFUGiY4fQWPvy4CQOOGnXXED+x5f8fColQ\nv2mg6R1bAd81GuqRJn2DpRv426BgEbhbTOKz95SsZ8KtLpiIOL419clLOOsb9+Df\n+6/DfJpMEyrVxPKGxJmg4hnoscpE4jwn2Jbu1uJ+upxcf+n6n4gI9Z/ea81t/B2p\nKG/KXwb+Y9uFgggUqyiCP29E2hadPsIw7jD3Ihi6WF5xi1bfIqLENYjojJ6umqdU\n4jzmhrbBWw0qQPdoS0MKuBdZ1VKf8dmrs5KS+YrHqd+ZUpj/4Y3HIWZm06VDp/UK\nYyo2pMeFBFXnVMQtw1sD8S/MqiVJe6A+4uy+ZDHJ46kaQgHrvKGhT1s2Sqg49+kp\nMcd4piCWjLB4kagAxitKeChEK4KFmtV9MnNtnhAFL7tgQ9d+3bINfpJ6dSGSG67I\nVKC8AX2QEqNAilCn44Oyl5mgaIEu8K/28YLIFLAwsag8r0CVEGxvZMBwR3dNgOjR\nQgQwF6BL0gqCGeYE9e/ZwVMTuOGA5A/U0WHGzDh4zA0oQjhKZdI=\n=tJk3\n-----END PGP SIGNATURE-----",
        "payload": "tree 759dba167faa8e57329846e59aa90861f18ee965\nparent 9d61af23b4890f08e9d46a5a703177fa9a69c765\nauthor Michael Dietz <michael.dietz@waya.ai> 1632876253 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824128 -0600\n\nrefactor: de-duplicate common help text for parsed destination address\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63a657ccff959f7d86f423607f69aa9f7507dbdb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d61af23b4890f08e9d46a5a703177fa9a69c765",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d61af23b4890f08e9d46a5a703177fa9a69c765"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c2a750a31c36afacfd918d7f9560c3fd660bc1fa",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "patch": "@@ -1274,7 +1274,7 @@ static RPCHelpMan gettxout()\n                     {RPCResult::Type::STR, \"asm\", \"\"},\n                     {RPCResult::Type::STR_HEX, \"hex\", \"\"},\n                     {RPCResult::Type::STR, \"type\", \"The type, eg pubkeyhash\"},\n-                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                    {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                 }},\n                 {RPCResult::Type::BOOL, \"coinbase\", \"Coinbase or not\"},\n             }},"
      },
      {
        "sha": "5dcd3d397541a15f214197fb67033b320994d5cd",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "patch": "@@ -133,7 +133,7 @@ static RPCHelpMan getrawtransaction()\n                                          {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                          {RPCResult::Type::STR, \"hex\", \"the hex\"},\n                                          {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                         {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                                         {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                                      }},\n                                  }},\n                              }},\n@@ -492,7 +492,7 @@ static RPCHelpMan decoderawtransaction()\n                                     {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                     {RPCResult::Type::STR_HEX, \"hex\", \"the hex\"},\n                                     {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                                    {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                                 }},\n                             }},\n                         }},\n@@ -545,14 +545,14 @@ static RPCHelpMan decodescript()\n                     {\n                         {RPCResult::Type::STR, \"asm\", \"Script public key\"},\n                         {RPCResult::Type::STR, \"type\", \"The output type (e.g. \"+GetAllOutputTypes()+\")\"},\n-                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                        {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                         {RPCResult::Type::STR, \"p2sh\", /* optional */ true, \"address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH)\"},\n                         {RPCResult::Type::OBJ, \"segwit\", /* optional */ true, \"Result of a witness script public key wrapping this redeem script (not returned if the script is a P2SH or witness)\",\n                         {\n                             {RPCResult::Type::STR, \"asm\", \"String representation of the script public key\"},\n                             {RPCResult::Type::STR_HEX, \"hex\", \"Hex string of the script public key\"},\n                             {RPCResult::Type::STR, \"type\", \"The type of the script public key (e.g. witness_v0_keyhash or witness_v0_scripthash)\"},\n-                            {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                            {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                             {RPCResult::Type::STR, \"p2sh-segwit\", \"address of the P2SH script wrapping this witness redeem script\"},\n                         }},\n                     }\n@@ -1043,7 +1043,7 @@ static RPCHelpMan decodepsbt()\n                                         {RPCResult::Type::STR, \"asm\", \"The asm\"},\n                                         {RPCResult::Type::STR_HEX, \"hex\", \"The hex\"},\n                                         {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n+                                        {RPCResult::Type::STR, \"address\", /* optional */ true, DESTINATION_ADDRESS},\n                                     }},\n                                 }},\n                                 {RPCResult::Type::OBJ_DYN, \"partial_signatures\", /* optional */ true, \"\","
      },
      {
        "sha": "e697a74771ace586520af19aa622f6c4b31b80ab",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63a657ccff959f7d86f423607f69aa9f7507dbdb/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "patch": "@@ -28,6 +28,12 @@\n  */\n extern const std::string UNIX_EPOCH_TIME;\n \n+/**\n+ * String used to describe the destination address parsed from a standard script in documentation, factored out to a\n+ * constant for consistency.\n+ */\n+const std::string DESTINATION_ADDRESS{\"The Bitcoin address (only if a well-defined address exists)\"};\n+\n /**\n  * Example bech32 addresses for the RPCExamples help documentation. They are intentionally\n  * invalid to prevent accidental transactions by users."
      }
    ]
  },
  {
    "sha": "d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
    "node_id": "C_kwDOABII59oAKGQ0Njc1ZjQxMGZkZmVhMzdlMTg2MWZlZmJiYjZlMGY5ZjZkOGJmYWQ",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-29T15:20:01Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T17:22:08Z"
      },
      "message": "fuzz: speedup ScriptToUniv and TxToUniv tests by dropping redundant call",
      "tree": {
        "sha": "8a30ab935b4c1f1826b91d8ba5ab2bf9841746d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a30ab935b4c1f1826b91d8ba5ab2bf9841746d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGP9EAACgkQc3/VzfHR\nRrlQpxAAn8BFP6spGy2gOzwsE5bfrI3ssEAKkZjqsx0/2r+m4LqIx3Q3gmxY3EhE\nvOo+jgb6lAUvWBaMfOfoleOhr3ce8B9ldIgddjngAGUEGA0I5RMF27RLbyUopcK9\n8vjYWKuHDNaeldRLkqMUX4P8cxVfK0cPJPSg90ROjvmQ0TpUCM8CZHZM5Lo2tR1z\n4IyIyPwn//O2ZCZqNN8f5bR/brtxTB+Fb54hd//NHWuOqMkHGdmPfpw/466+LEld\nO/hoA8BDyQt/l+L2YlNnFS66/Ww6Qbsb2lTTdSCeoH5dK5IiBL2HABdXIErch37K\nL1r3zCaAwoxqkfNY2lJukf+dYZc9ldPSk8WAgrD3/Zes/CGTObn3bH2QBZILPJ8X\nkLq4bD5j7e1SIX+byBMETzJOsWnmFEZeoxODNsJBexYXHaxyEcRTJUPzc5Bu42Gj\n9UxqCQLZZhS9UJbSrqZ6ysSMyagxioAfPKy76oeMKIGLfW+K7TujeoZRKBmFUxtg\n7msDLPVbdMj5XAruPR9wZpR2csUM04TG8g8hz3F6D5dBRN3v0pBl6kyePtfGbBGG\ncHJ4UTMyXJJ5ICfhdc+cNzCl9GulFSj7DyfYreg3vNVWAScT6Flx7Ou+61XE1qYt\nk0g+pUAINDPhO8O//n2iZCtCOv8nOlSlHFg8L35rptn/CUBWegE=\n=w3+W\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a30ab935b4c1f1826b91d8ba5ab2bf9841746d6\nparent 63a657ccff959f7d86f423607f69aa9f7507dbdb\nauthor Michael Dietz <michael.dietz@waya.ai> 1632928801 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636824128 -0600\n\nfuzz: speedup ScriptToUniv and TxToUniv tests by dropping redundant call\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a657ccff959f7d86f423607f69aa9f7507dbdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63a657ccff959f7d86f423607f69aa9f7507dbdb"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "daf4e69c221809338ac7ec160c202f2559f7e125",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
        "patch": "@@ -109,9 +109,7 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ true, /* include_address= */ false);\n-    UniValue o2(UniValue::VOBJ);\n-    ScriptToUniv(script, /* out= */ o2, /* include_hex= */ false, /* include_address= */ false);\n+    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ fuzzed_data_provider.ConsumeBool(), /* include_address= */ fuzzed_data_provider.ConsumeBool());\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "091858b14df1937508bfddc757f7a5afe2990da0",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
        "patch": "@@ -102,7 +102,12 @@ FUZZ_TARGET_INIT(transaction, initialize_transaction)\n     (void)AreInputsStandard(tx, coins_view_cache, true);\n     (void)IsWitnessStandard(tx, coins_view_cache);\n \n+    bool block_hash{false};\n+    bool include_hex{false};\n+    try {\n+        ds >> block_hash;\n+        ds >> include_hex;\n+    } catch (const std::ios_base::failure&) {}\n     UniValue u(UniValue::VOBJ);\n-    TxToUniv(tx, /* block_hash= */ uint256::ZERO, /* entry= */ u);\n-    TxToUniv(tx, /* block_hash= */ uint256::ONE, /* entry= */ u);\n+    TxToUniv(tx, /* block_hash= */ uint256{block_hash}, /* entry= */ u, include_hex);\n }"
      }
    ]
  },
  {
    "sha": "e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
    "node_id": "C_kwDOABII59oAKGUxZWU3MTA4NjNhOGM3ZTI1MGNhYjRlZTAxNGExY2RmMWZmZTVlNTQ",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T20:32:40Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:19:46Z"
      },
      "message": "refactor: `ScriptToUniv` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "e7f64c94558c7fcd808071e187b8f3f85bc148ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7f64c94558c7fcd808071e187b8f3f85bc148ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRYVkACgkQc3/VzfHR\nRrnrSw/9Eg3JfSXLCRKtOqGwEucLZ1F6oZ1EGrws1VEPZYudeMQp9+F6cnEEEq80\nXZEb4EEIMPE08befARcUzjx/RRcCGXqnmCSMmFSOo58/2w63YYZp/fR9qJA7/RGn\nIlDTx/eBCvULK4RJ0USTeF1O0HUXzoxgC05j63u1ybIxxXkvyiS2X+dxwU7LeyNh\nAOqqk1JibaUR0bjzCoPPM5GPtDqUs0xphkY9CyHt+ajICFnTeA2j7NoIPg2QIVHy\n1v1M69iPrymA8iKCI6TAUM8yNgJ1UtTmZsJ+3iBJWg2VAnsjvKyV6ukgsKUHI6tf\n7NHrGfbtl7A11UQRxzsFFecSn+hcJ2m3iAKLxuXX51wLDbxpAk4Ca/VjTrV33sg8\nTQAcdPVAzCFDmgdVUTUAXJ7SJBxvNrazRhxykmZlz+Fryr/tJfc7P5p4C6XNn42J\nEKbARBqg1b5L2Vzs40FUX65gm/F8v2Yd2dOrjkdyFuyziPAk+cclK1EAsR03XLvK\nPbWOdM0hkR6s4M/buaeEClqtKh+z50QW6cVAYh4ck8PwY6PX1kmAPZ8DEX7dl9u2\n+IblaS1T0qE3CrJCO/T/ZJmAhg3G8Y7LrhNWwM6xf5j2CO/pjUVNWEQ1VVNTn+R7\n4g7OT/OApjtOGuc+qcWDjIco6jCrtkpRRB+cS1eAsUIg4mmZNN0=\n=3Zby\n-----END PGP SIGNATURE-----",
        "payload": "tree e7f64c94558c7fcd808071e187b8f3f85bc148ca\nparent d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad\nauthor Michael Dietz <michael.dietz@waya.ai> 1636835560 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636917586 -0600\n\nrefactor: `ScriptToUniv` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4675f410fdfea37e1861fefbbb6e0f9f6d8bfad"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 16,
      "deletions": 41
    },
    "files": [
      {
        "sha": "9d2d51d2edf43eb14900fb4fbc5fa9a29b725aaa",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "patch": "@@ -53,7 +53,7 @@ UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex = true, bool include_address = false);\n+UniValue ScriptToUniv(const CScript& script, bool include_hex = true, bool include_address = false);\n void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "2f40dc318d397d89a02f86457226a5caefb5d5d7",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 9,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "patch": "@@ -142,9 +142,10 @@ std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags)\n     return HexStr(ssTx);\n }\n \n-void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool include_address)\n+UniValue ScriptToUniv(const CScript& script, bool include_hex, bool include_address)\n {\n     CTxDestination address;\n+    UniValue out(UniValue::VOBJ);\n \n     out.pushKV(\"asm\", ScriptToAsmStr(script));\n     if (include_hex) {\n@@ -158,6 +159,7 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool i\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n     out.pushKV(\"type\", GetTxnOutputType(type));\n+    return out;\n }\n \n void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n@@ -211,14 +213,11 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n                     break;\n \n                 case TxVerbosity::SHOW_DETAILS_AND_PREVOUT:\n-                    UniValue o_script_pub_key(UniValue::VOBJ);\n-                    ScriptToUniv(prev_txout.scriptPubKey, /* out= */ o_script_pub_key, /* include_hex= */ true, /* include_address= */ true);\n-\n                     UniValue p(UniValue::VOBJ);\n                     p.pushKV(\"generated\", bool(prev_coin.fCoinBase));\n                     p.pushKV(\"height\", uint64_t(prev_coin.nHeight));\n                     p.pushKV(\"value\", ValueFromAmount(prev_txout.nValue));\n-                    p.pushKV(\"scriptPubKey\", o_script_pub_key);\n+                    p.pushKV(\"scriptPubKey\", ScriptToUniv(prev_txout.scriptPubKey, /* include_hex= */ true, /* include_address= */ true));\n                     in.pushKV(\"prevout\", p);\n                     break;\n             }\n@@ -236,10 +235,7 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n \n         out.pushKV(\"value\", ValueFromAmount(txout.nValue));\n         out.pushKV(\"n\", (int64_t)i);\n-\n-        UniValue o(UniValue::VOBJ);\n-        ScriptToUniv(txout.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n-        out.pushKV(\"scriptPubKey\", o);\n+        out.pushKV(\"scriptPubKey\", ScriptToUniv(txout.scriptPubKey, /* include_hex= */ true, /* include_address= */ true));\n         vout.push_back(out);\n \n         if (have_undo) {"
      },
      {
        "sha": "9642315124f9dd4213b83e635e9475a7020e9c48",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "patch": "@@ -639,11 +639,7 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n             UniValue utxo(UniValue::VOBJ);\n             utxo.pushKV(\"height\", (int32_t)coin.nHeight);\n             utxo.pushKV(\"value\", ValueFromAmount(coin.out.nValue));\n-\n-            // include the script in a json output\n-            UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(coin.out.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n-            utxo.pushKV(\"scriptPubKey\", o);\n+            utxo.pushKV(\"scriptPubKey\", ScriptToUniv(coin.out.scriptPubKey, /* include_hex= */ true, /* include_address= */ true));\n             utxos.push_back(utxo);\n         }\n         objGetUTXOResponse.pushKV(\"utxos\", utxos);"
      },
      {
        "sha": "f4288e61050b41f404a7ab6b3988b4a819e3a78c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "patch": "@@ -1327,9 +1327,7 @@ static RPCHelpMan gettxout()\n         ret.pushKV(\"confirmations\", (int64_t)(pindex->nHeight - coin.nHeight + 1));\n     }\n     ret.pushKV(\"value\", ValueFromAmount(coin.out.nValue));\n-    UniValue o(UniValue::VOBJ);\n-    ScriptToUniv(coin.out.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n-    ret.pushKV(\"scriptPubKey\", o);\n+    ret.pushKV(\"scriptPubKey\", ScriptToUniv(coin.out.scriptPubKey, /* include_hex= */ true, /* include_address= */ true));\n     ret.pushKV(\"coinbase\", (bool)coin.fCoinBase);\n \n     return ret;"
      },
      {
        "sha": "10882e4a6e06bd3a9e5a9d3c7f3e9664a9fa5732",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 21,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "patch": "@@ -565,15 +565,14 @@ static RPCHelpMan decodescript()\n {\n     RPCTypeCheck(request.params, {UniValue::VSTR});\n \n-    UniValue r(UniValue::VOBJ);\n     CScript script;\n     if (request.params[0].get_str().size() > 0){\n         std::vector<unsigned char> scriptData(ParseHexV(request.params[0], \"argument\"));\n         script = CScript(scriptData.begin(), scriptData.end());\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptToUniv(script, /* out= */ r, /* include_hex= */ false, /* include_address= */ true);\n+    UniValue r = ScriptToUniv(script, /* include_hex= */ false, /* include_address= */ true);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -596,7 +595,6 @@ static RPCHelpMan decodescript()\n                     }\n                 }\n             }\n-            UniValue sr(UniValue::VOBJ);\n             CScript segwitScr;\n             if (which_type == TxoutType::PUBKEY) {\n                 segwitScr = GetScriptForDestination(WitnessV0KeyHash(Hash160(solutions_data[0])));\n@@ -607,7 +605,7 @@ static RPCHelpMan decodescript()\n                 // Newer segwit program versions should be considered when then become available.\n                 segwitScr = GetScriptForDestination(WitnessV0ScriptHash(script));\n             }\n-            ScriptToUniv(segwitScr, /* out= */ sr, /* include_hex= */ true, /* include_address= */ true);\n+            UniValue sr = ScriptToUniv(segwitScr, /* include_hex= */ true, /* include_address= */ true);\n             sr.pushKV(\"p2sh-segwit\", EncodeDestination(ScriptHash(segwitScr)));\n             r.pushKV(\"segwit\", sr);\n         }\n@@ -1162,13 +1160,9 @@ static RPCHelpMan decodepsbt()\n         if (!input.witness_utxo.IsNull()) {\n             txout = input.witness_utxo;\n \n-            UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(txout.scriptPubKey, /* out= */ o, /* include_hex= */ true, /* include_address= */ true);\n-\n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));\n-            out.pushKV(\"scriptPubKey\", o);\n-\n+            out.pushKV(\"scriptPubKey\", ScriptToUniv(txout.scriptPubKey, /* include_hex= */ true, /* include_address= */ true));\n             in.pushKV(\"witness_utxo\", out);\n \n             have_a_utxo = true;\n@@ -1209,14 +1203,10 @@ static RPCHelpMan decodepsbt()\n \n         // Redeem script and witness script\n         if (!input.redeem_script.empty()) {\n-            UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.redeem_script, /* out= */ r);\n-            in.pushKV(\"redeem_script\", r);\n+            in.pushKV(\"redeem_script\", ScriptToUniv(input.redeem_script));\n         }\n         if (!input.witness_script.empty()) {\n-            UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.witness_script, /* out= */ r);\n-            in.pushKV(\"witness_script\", r);\n+            in.pushKV(\"witness_script\", ScriptToUniv(input.witness_script));\n         }\n \n         // keypaths\n@@ -1269,14 +1259,10 @@ static RPCHelpMan decodepsbt()\n         UniValue out(UniValue::VOBJ);\n         // Redeem script and witness script\n         if (!output.redeem_script.empty()) {\n-            UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.redeem_script, /* out= */ r);\n-            out.pushKV(\"redeem_script\", r);\n+            out.pushKV(\"redeem_script\", ScriptToUniv(output.redeem_script));\n         }\n         if (!output.witness_script.empty()) {\n-            UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.witness_script, /* out= */ r);\n-            out.pushKV(\"witness_script\", r);\n+            out.pushKV(\"witness_script\", ScriptToUniv(output.witness_script));\n         }\n \n         // keypaths"
      },
      {
        "sha": "c1cf54799e12fe450bf489bed5cbee253c592c0e",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "patch": "@@ -108,8 +108,7 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, false);\n     (void)ScriptToAsmStr(script, true);\n \n-    UniValue o1(UniValue::VOBJ);\n-    ScriptToUniv(script, /* out= */ o1, /* include_hex= */ fuzzed_data_provider.ConsumeBool(), /* include_address= */ fuzzed_data_provider.ConsumeBool());\n+    (void)ScriptToUniv(script, /* include_hex= */ fuzzed_data_provider.ConsumeBool(), /* include_address= */ fuzzed_data_provider.ConsumeBool());\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      }
    ]
  },
  {
    "sha": "09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
    "node_id": "C_kwDOABII59oAKDA5NTU0NjQ5ZmFjMmQ3YzAyY2Q2MDAzYmQ5ZDdiM2U0YjQxMWJjYjI",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T22:14:40Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:19:56Z"
      },
      "message": "refactor: `TxToJSON` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "256cc7c72cfb1ea46082ae596a0af6ca8962f34d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/256cc7c72cfb1ea46082ae596a0af6ca8962f34d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRYVwACgkQc3/VzfHR\nRrm55g/+MyuureMUY/nV5IaL5gFfy2D6K/TLdnILiKPf1+CRnw6e2BZ8++DnTJYk\nbVySWsBiFDSbxr+EdFuleu6ErSVNnV3kju3VLY11SVBV4ZhIF6oJgCGhwaqy5IeC\ncyAdRVXpg6BuslPNqNvo6/9WUj1fxAgoYmBXO5N6OzT1IP/3fwm4ub8/YxjhB3E0\n06DLqYC0yzdy5+2IPL/BJBRtvWdQ4KsYhw2X9yWNrkw1kuDytgZbROC9y7ghgy7+\nJ7ohOmj0MQAKmO0TtBGtJlsROfHd3EXEIa0wfn87q4ahNlMT4oXY5A1dBr1yuX9P\nrgm2mILlZX5xApUb1yDvvAH/+I61N6cmDKTEO7xiBzLm3ZmBON9gjsStJ9g9IBMU\n4e8WvJHmnan6rgdiuS59LQyB7cmkHYNTNgacrJwtm1YVIEyGVX8HpST9WaE0oe9l\nhGyyLkQkdd8SVhSRRAtXhN0+sXMYf8iiw95YEegJJAaJhvmjqM4wpcP+SMV9V8CS\nTjwLySdAaRKsZTezl71bT9waSQwsiEhugPtGx6Q94rkTtNWb1JTVdieDqAuYxpUG\n3b3Dfm7Lwt2PI4PDyE4YX7TY6WQLmGVsWcSMxyec7ETElBintkovl+D7mA4spoz5\n2IfEjimESP4ZVWK3F/Z9XGTIlutKYbiuNG7oTCn9DaVa3xTPL/Q=\n=Acnl\n-----END PGP SIGNATURE-----",
        "payload": "tree 256cc7c72cfb1ea46082ae596a0af6ca8962f34d\nparent e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54\nauthor Michael Dietz <michael.dietz@waya.ai> 1636841680 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636917596 -0600\n\nrefactor: `TxToJSON` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1ee710863a8c7e250cab4ee014a1cdf1ffe5e54"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8ccd36da3f9d019b0f6de2260590804fbefade79",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
        "patch": "@@ -43,13 +43,14 @@\n \n #include <univalue.h>\n \n-static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate)\n+static UniValue TxToJSON(const CTransaction& tx, const uint256 hashBlock, CChainState& active_chainstate)\n {\n     // Call into TxToUniv() in bitcoin-common to decode the transaction hex.\n     //\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n+    UniValue entry(UniValue::VOBJ);\n     TxToUniv(tx, /* block_hash= */ uint256(), entry, /* include_hex= */ true, RPCSerializationFlags());\n \n     if (!hashBlock.IsNull()) {\n@@ -67,6 +68,7 @@ static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue&\n                 entry.pushKV(\"confirmations\", 0);\n         }\n     }\n+    return entry;\n }\n \n static RPCHelpMan getrawtransaction()\n@@ -210,9 +212,8 @@ static RPCHelpMan getrawtransaction()\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n-    UniValue result(UniValue::VOBJ);\n+    UniValue result = TxToJSON(*tx, hash_block, chainman.ActiveChainstate());\n     if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n     return result;\n },\n     };"
      }
    ]
  },
  {
    "sha": "2be3248c48910813f5df86a968b5485b3d1d424b",
    "node_id": "C_kwDOABII59oAKDJiZTMyNDhjNDg5MTA4MTNmNWRmODZhOTY4YjU0ODViM2QxZDQyNGI",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T20:46:09Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:28:08Z"
      },
      "message": "refactor: `TxToUniv` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "b03ff708e985e7cd92461ed3afd9eb0f7bcab8c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b03ff708e985e7cd92461ed3afd9eb0f7bcab8c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2be3248c48910813f5df86a968b5485b3d1d424b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY0sACgkQc3/VzfHR\nRrntIA//bvG96AlqVEphncb5NBI6OCRwfclQJeoP1N6ZoraDDYtqXigguwxguNXM\nw88llT7VqQQ9XsXRNRmV+dHDt8p1Bk7qiq+mocSMe3EO036/lqXubXKV6VHQsJza\naLChdDNW2e/jpOOKlFxb4nZCAxm4v0mPhYHv4VvjSo44XQmRJsgBSXDdDtRdYPps\nxc7b2BKpXeuRXko8SMamkFhAhtAelVHxKNZBZj1C320nAKX92s+UP0PqbW7UHngA\nBVf/pUbVv9ZXp0jx/8XZCDqODp+Idk86zM8GYewECngeNzlJYqpR0vKwpin3Iv7K\nXJtElz8YRBM+ZX1FLq9ae41v6t6DopqglZ0yL0clZ9sOmqVnL8NFLcmEtOi+H8i2\nqDUVo7H2PDL1t5btPzLtGmO4BkJP1dL5MVMusBZRslXKqyWMbqej1cFX8cjN4hFQ\nbQdPaxJ+AfqCn9vXkT1fdLs/SWTjkm7RxUE7cU6YaxtVa2ybQvI83cBMIpSrM9O3\nyjad0SVgU/L+zYVFt3l4mJ2yyib4faJUB3aDoXehU4eiMv6H7YX5WSBu/q2nbslN\n5SHu+bPHxb2glHG0ew2FMYGcUWPzca70geNE8aotSFebilxiwnvbC8Lf5k+Ko4xY\nRybmkHN6wqz13/7hIR/IJu/OL9gUXhbqFTCTzithpueWyuE+WXc=\n=42Ib\n-----END PGP SIGNATURE-----",
        "payload": "tree b03ff708e985e7cd92461ed3afd9eb0f7bcab8c6\nparent 09554649fac2d7c02cd6003bd9d7b3e4b411bcb2\nauthor Michael Dietz <michael.dietz@waya.ai> 1636836369 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918088 -0600\n\nrefactor: `TxToUniv` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2be3248c48910813f5df86a968b5485b3d1d424b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2be3248c48910813f5df86a968b5485b3d1d424b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2be3248c48910813f5df86a968b5485b3d1d424b/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09554649fac2d7c02cd6003bd9d7b3e4b411bcb2"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 13,
      "deletions": 22
    },
    "files": [
      {
        "sha": "4c1619d0b2d9c601a0a0079344de98d8eb5a7bdc",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -738,8 +738,7 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n \n static void OutputTxJSON(const CTransaction& tx)\n {\n-    UniValue entry(UniValue::VOBJ);\n-    TxToUniv(tx, /* block_hash= */ uint256(), entry);\n+    UniValue entry = TxToUniv(tx, /* block_hash= */ uint256());\n \n     std::string jsonOutput = entry.write(4);\n     tfm::format(std::cout, \"%s\\n\", jsonOutput);"
      },
      {
        "sha": "a607ba7e135eff808ec3d448259ecb2efd9c057a",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -54,6 +54,6 @@ std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n UniValue ScriptToUniv(const CScript& script, bool include_hex = true, bool include_address = false);\n-void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n+UniValue TxToUniv(const CTransaction& tx, const uint256& block_hash, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "316a2f48e01dc0c13c4bdf1775003ac69bd28c82",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -162,8 +162,9 @@ UniValue ScriptToUniv(const CScript& script, bool include_hex, bool include_addr\n     return out;\n }\n \n-void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n+UniValue TxToUniv(const CTransaction& tx, const uint256& block_hash, bool include_hex, int serialize_flags, const CTxUndo* txundo, TxVerbosity verbosity)\n {\n+    UniValue entry(UniValue::VOBJ);\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n     // Transaction version is actually unsigned in consensus checks, just signed in memory,\n@@ -256,4 +257,5 @@ void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry\n     if (include_hex) {\n         entry.pushKV(\"hex\", EncodeHexTx(tx, serialize_flags)); // The hex-encoded transaction. Used the name \"hex\" to be consistent with the verbose output of \"getrawtransaction\".\n     }\n+    return entry;\n }"
      },
      {
        "sha": "a911afc7642c479cc71d698609b340db5c6d3054",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -456,8 +456,7 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n     }\n \n     case RetFormat::JSON: {\n-        UniValue objTx(UniValue::VOBJ);\n-        TxToUniv(*tx, /* block_hash= */ hashBlock, /* entry= */ objTx);\n+        UniValue objTx = TxToUniv(*tx, /* block_hash= */ hashBlock);\n         std::string strJSON = objTx.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n         req->WriteReply(HTTP_OK, strJSON);"
      },
      {
        "sha": "887a38add9f6c9ff08e37d1f38df0dc9b7f5bfce",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -225,8 +225,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n                 const CTransactionRef& tx = block.vtx.at(i);\n                 // coinbase transaction (i.e. i == 0) doesn't have undo data\n                 const CTxUndo* txundo = (have_undo && i > 0) ? &blockUndo.vtxundo.at(i - 1) : nullptr;\n-                UniValue objTx(UniValue::VOBJ);\n-                TxToUniv(*tx, /* block_hash= */ uint256(), /* entry= */ objTx, /* include_hex= */ true, RPCSerializationFlags(), txundo, verbosity);\n+                UniValue objTx = TxToUniv(*tx, /* block_hash= */ uint256(), /* include_hex= */ true, RPCSerializationFlags(), txundo, verbosity);\n                 txs.push_back(objTx);\n             }\n     }"
      },
      {
        "sha": "3a3a01d6d983858f8fd9bb7e0a43476ba8bc4cf4",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -50,8 +50,7 @@ static UniValue TxToJSON(const CTransaction& tx, const uint256 hashBlock, CChain\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n-    UniValue entry(UniValue::VOBJ);\n-    TxToUniv(tx, /* block_hash= */ uint256(), entry, /* include_hex= */ true, RPCSerializationFlags());\n+    UniValue entry = TxToUniv(tx, /* block_hash= */ uint256(), /* include_hex= */ true, RPCSerializationFlags());\n \n     if (!hashBlock.IsNull()) {\n         LOCK(cs_main);\n@@ -516,10 +515,7 @@ static RPCHelpMan decoderawtransaction()\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     }\n \n-    UniValue result(UniValue::VOBJ);\n-    TxToUniv(CTransaction(std::move(mtx)), /* block_hash= */ uint256(), /* entry= */ result, /* include_hex= */ false);\n-\n-    return result;\n+    return TxToUniv(CTransaction(std::move(mtx)), /* block_hash= */ uint256(), /* include_hex= */ false);\n },\n     };\n }\n@@ -1137,8 +1133,7 @@ static RPCHelpMan decodepsbt()\n     UniValue result(UniValue::VOBJ);\n \n     // Add the decoded tx\n-    UniValue tx_univ(UniValue::VOBJ);\n-    TxToUniv(CTransaction(*psbtx.tx), /* block_hash= */ uint256(), /* entry= */ tx_univ, /* include_hex= */ false);\n+    UniValue tx_univ = TxToUniv(CTransaction(*psbtx.tx), /* block_hash= */ uint256(), /* include_hex= */ false);\n     result.pushKV(\"tx\", tx_univ);\n \n     // Unknown data\n@@ -1171,8 +1166,7 @@ static RPCHelpMan decodepsbt()\n         if (input.non_witness_utxo) {\n             txout = input.non_witness_utxo->vout[psbtx.tx->vin[i].prevout.n];\n \n-            UniValue non_wit(UniValue::VOBJ);\n-            TxToUniv(*input.non_witness_utxo, /* block_hash= */ uint256(), /* entry= */ non_wit, /* include_hex= */ false);\n+            UniValue non_wit = TxToUniv(*input.non_witness_utxo, /* block_hash= */ uint256(), /* include_hex= */ false);\n             in.pushKV(\"non_witness_utxo\", non_wit);\n \n             have_a_utxo = true;"
      },
      {
        "sha": "0fc5f7ed756abc2c56199fc4c61b161b01e24b31",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -108,6 +108,5 @@ FUZZ_TARGET_INIT(transaction, initialize_transaction)\n         ds >> block_hash;\n         ds >> include_hex;\n     } catch (const std::ios_base::failure&) {}\n-    UniValue u(UniValue::VOBJ);\n-    TxToUniv(tx, /* block_hash= */ uint256{block_hash}, /* entry= */ u, include_hex);\n+    (void)TxToUniv(tx, /* block_hash= */ uint256{block_hash}, include_hex);\n }"
      },
      {
        "sha": "dfdbc94e461874fccb3152078ce96f77934ff680",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2be3248c48910813f5df86a968b5485b3d1d424b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2be3248c48910813f5df86a968b5485b3d1d424b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2be3248c48910813f5df86a968b5485b3d1d424b",
        "patch": "@@ -1772,8 +1772,7 @@ static RPCHelpMan gettransaction()\n     entry.pushKV(\"hex\", strHex);\n \n     if (verbose) {\n-        UniValue decoded(UniValue::VOBJ);\n-        TxToUniv(*wtx.tx, /* block_hash= */ uint256(), /* entry= */ decoded, /* include_hex= */ false);\n+        UniValue decoded = TxToUniv(*wtx.tx, /* block_hash= */ uint256(), /* include_hex= */ false);\n         entry.pushKV(\"decoded\", decoded);\n     }\n "
      }
    ]
  },
  {
    "sha": "d69aec5a9d85dea28fa283002334960e85d15d94",
    "node_id": "C_kwDOABII59oAKGQ2OWFlYzVhOWQ4NWRlYTI4ZmEyODMwMDIzMzQ5NjBlODVkMTVkOTQ",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T22:18:00Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:28:12Z"
      },
      "message": "refactor: prefer snake case, hashBlock renamed block_hash in rpc/rawtransaction.cpp",
      "tree": {
        "sha": "2f77ff424cc06c5d6c6fdd7c679e469ade5b0249",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f77ff424cc06c5d6c6fdd7c679e469ade5b0249"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d69aec5a9d85dea28fa283002334960e85d15d94",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY0wACgkQc3/VzfHR\nRrkFow//aviaSesVdD/bdMfS9oDycXDEq+wPAAsT6L+2WIPJaVQrleiKTfhSrm8B\nihT1Od27b6bzaLicHvHJNmFQoV/v9/BJqzRrHS/nOAlLRL+ITX7a/m2cjp/NbpZ7\nkA+JBy797EFM/daD1XE2PasvblLpouohSQY0JhkaSzBWwJxcpMI5m60ZNUK7R72q\nN0oGOJUZ3XoYxVrwfLSDmkDCJmFwYjsIoUCoRfWcPx19wl3jdxQ1qsUcM6tKTmfm\nlWYtf5JDkXk+dr8FANaRTGRfjBMq9EzbqbeycqdCEwEmM3LCagTAws+IgwhXoQfj\nWZP/ibefE7LyRDnPPyRUhH229BNWrBJBrAF/GtS5xPUdS+iQBJ61H4q+SnPr8j/F\nGBuk8KnegkwJevJRRPR56m45IuqYE4MAqZpbeND08JtwNYJlRhVqDQ5diwb3+n9x\nWX8eZc6GmuHJrPiKsXIIMNAXXeldFToMB9BTF9S1bQUE1z68t5jx4jqIK8+5l7ly\nU+sRxwdsZLhKFAl/1JfkbGB93nuEAh4J6Wz7KksTfRUPFi8xdklY26LI3GDXpNUF\nBMnYYIO0mxLCnmnaTCpOepiwuEv/8BHtX4x0RqNKvqiqRGf7nQDiomz5eG6891YE\nFJlFIJc8jnBaVjUWwETaqCxYnkCdhEd1CMIh+6ylwTZsVNHubGw=\n=pfeQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 2f77ff424cc06c5d6c6fdd7c679e469ade5b0249\nparent 2be3248c48910813f5df86a968b5485b3d1d424b\nauthor Michael Dietz <michael.dietz@waya.ai> 1636841880 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918092 -0600\n\nrefactor: prefer snake case, hashBlock renamed block_hash in rpc/rawtransaction.cpp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d69aec5a9d85dea28fa283002334960e85d15d94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d69aec5a9d85dea28fa283002334960e85d15d94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d69aec5a9d85dea28fa283002334960e85d15d94/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2be3248c48910813f5df86a968b5485b3d1d424b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2be3248c48910813f5df86a968b5485b3d1d424b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2be3248c48910813f5df86a968b5485b3d1d424b"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "8e85de344808f59a63db1a7fdbd09e4c0bf2595e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d69aec5a9d85dea28fa283002334960e85d15d94/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d69aec5a9d85dea28fa283002334960e85d15d94/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=d69aec5a9d85dea28fa283002334960e85d15d94",
        "patch": "@@ -43,7 +43,7 @@\n \n #include <univalue.h>\n \n-static UniValue TxToJSON(const CTransaction& tx, const uint256 hashBlock, CChainState& active_chainstate)\n+static UniValue TxToJSON(const CTransaction& tx, const uint256 block_hash, CChainState& active_chainstate)\n {\n     // Call into TxToUniv() in bitcoin-common to decode the transaction hex.\n     //\n@@ -52,11 +52,11 @@ static UniValue TxToJSON(const CTransaction& tx, const uint256 hashBlock, CChain\n     // data into the returned UniValue.\n     UniValue entry = TxToUniv(tx, /* block_hash= */ uint256(), /* include_hex= */ true, RPCSerializationFlags());\n \n-    if (!hashBlock.IsNull()) {\n+    if (!block_hash.IsNull()) {\n         LOCK(cs_main);\n \n-        entry.pushKV(\"blockhash\", hashBlock.GetHex());\n-        CBlockIndex* pindex = active_chainstate.m_blockman.LookupBlockIndex(hashBlock);\n+        entry.pushKV(\"blockhash\", block_hash.GetHex());\n+        CBlockIndex* pindex = active_chainstate.m_blockman.LookupBlockIndex(block_hash);\n         if (pindex) {\n             if (active_chainstate.m_chain.Contains(pindex)) {\n                 entry.pushKV(\"confirmations\", 1 + active_chainstate.m_chain.Height() - pindex->nHeight);\n@@ -253,12 +253,12 @@ static RPCHelpMan gettxoutproof()\n     }\n \n     CBlockIndex* pblockindex = nullptr;\n-    uint256 hashBlock;\n+    uint256 block_hash;\n     ChainstateManager& chainman = EnsureAnyChainman(request.context);\n     if (!request.params[1].isNull()) {\n         LOCK(cs_main);\n-        hashBlock = ParseHashV(request.params[1], \"blockhash\");\n-        pblockindex = chainman.m_blockman.LookupBlockIndex(hashBlock);\n+        block_hash = ParseHashV(request.params[1], \"blockhash\");\n+        pblockindex = chainman.m_blockman.LookupBlockIndex(block_hash);\n         if (!pblockindex) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         }\n@@ -285,11 +285,11 @@ static RPCHelpMan gettxoutproof()\n     LOCK(cs_main);\n \n     if (pblockindex == nullptr) {\n-        const CTransactionRef tx = GetTransaction(/* block_index */ nullptr, /* mempool */ nullptr, *setTxids.begin(), Params().GetConsensus(), hashBlock);\n-        if (!tx || hashBlock.IsNull()) {\n+        const CTransactionRef tx = GetTransaction(/* block_index */ nullptr, /* mempool */ nullptr, *setTxids.begin(), Params().GetConsensus(), block_hash);\n+        if (!tx || block_hash.IsNull()) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not yet in block\");\n         }\n-        pblockindex = chainman.m_blockman.LookupBlockIndex(hashBlock);\n+        pblockindex = chainman.m_blockman.LookupBlockIndex(block_hash);\n         if (!pblockindex) {\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Transaction index corrupt\");\n         }"
      }
    ]
  },
  {
    "sha": "b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
    "node_id": "C_kwDOABII59oAKGIxOTRkMWU3YjIwMWRjNWIwMGNkOTQxNDNhYzNhY2UzZGMzZTE4YTk",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T22:22:10Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:28:12Z"
      },
      "message": "refactor: remove code duplication b/w `TxToJSON` and `TxToUniv`",
      "tree": {
        "sha": "2ba3871c2c9de4a26da2b110fc0119700d88dcb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ba3871c2c9de4a26da2b110fc0119700d88dcb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY0wACgkQc3/VzfHR\nRrmE3A/+LdpBK/e39MrxUlj4vTe7DO17eIFptCyY57dijTqE+tfCELqEJN7oLoo7\n0Tgd7NYk0i4OUsvyv0a7cMMC0Ya4BAkz/z/RIynTpjdSQ0F77mGWH5Rtun7phxPx\nI+DoXdkYcreg+jSMD+mOlcoEJ7KXFwhvzWcFoPBAQMsEPHbOKB6GpRf4Gp4enOBZ\nt8bP+FtLLM/8T7K8/HOKv6fSszZpjIhw/Nih3SlbVzOK7yqALiTdC+wLNLl6wGGD\nq/yLBONfL7ab7Bbv1RIJhZT97mx8zjBcR24/P05Jqk9zzGA6RQ+4xod4Slvpd0J1\nQSpB5jxI/j9txh59+935bzY2BpxmOWqjRTuJq1r+nWwiBdeAayTqqVeL0N+Qm2lM\nLxzsxalVved1ZYkpaVeRKCcRJk1xiUnnE9KtMOdR+DjSyJE5du6/J6sf585nMHmV\n8OYewUyCcy+VfVeGJin6M7OP0ITClJX13lLkB3Aywrd1XlGIIQv0ipC8nUKnPByb\nBxYyApnq05CrgPQvwoZoYWMPxFkRCWlAx8xePV/xwqQW9NG3r8Kfrta53KjyETg3\nmZcCUosyQ2tkRVBGoiShJhpR396q76CepA+VveNqfqt+1iaHwRDreic/n97W1rMV\naMzLjT1NiDs1CmM4HVFRPSyIPXpSSxb3nn42IpASHmi2Li3hzPI=\n=2PbM\n-----END PGP SIGNATURE-----",
        "payload": "tree 2ba3871c2c9de4a26da2b110fc0119700d88dcb4\nparent d69aec5a9d85dea28fa283002334960e85d15d94\nauthor Michael Dietz <michael.dietz@waya.ai> 1636842130 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918092 -0600\n\nrefactor: remove code duplication b/w `TxToJSON` and `TxToUniv`\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d69aec5a9d85dea28fa283002334960e85d15d94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d69aec5a9d85dea28fa283002334960e85d15d94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d69aec5a9d85dea28fa283002334960e85d15d94"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a2a3587377c2d3eff5287a1484d80a6fb1a1bed4",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
        "patch": "@@ -55,7 +55,6 @@ static UniValue TxToJSON(const CTransaction& tx, const uint256 block_hash, CChai\n     if (!block_hash.IsNull()) {\n         LOCK(cs_main);\n \n-        entry.pushKV(\"blockhash\", block_hash.GetHex());\n         CBlockIndex* pindex = active_chainstate.m_blockman.LookupBlockIndex(block_hash);\n         if (pindex) {\n             if (active_chainstate.m_chain.Contains(pindex)) {"
      }
    ]
  },
  {
    "sha": "b893a37226480f4665fb64a11605657579f90f76",
    "node_id": "C_kwDOABII59oAKGI4OTNhMzcyMjY0ODBmNDY2NWZiNjRhMTE2MDU2NTc1NzlmOTBmNzY",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-13T22:27:27Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:29:35Z"
      },
      "message": "refactor: `entryToJSON` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "d97e5f26bfbcb809e16fd0ff9bbc29a09604a10c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d97e5f26bfbcb809e16fd0ff9bbc29a09604a10c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b893a37226480f4665fb64a11605657579f90f76",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY6IACgkQc3/VzfHR\nRrkEHA/8Cak7gmxwFBKiO0UR3Ezlb/AAo9R9yrH3ekHjt9uW4DcprRldnsLrO9et\nxUZcRvFqeIvO9J79C6sKtJNEuSGGVf+bkkQzgQXBJg1akvweSfuBn4OdB/sd7+Jc\nQ3w0kcpNP3ZOwfwnX9xA87B1rA3asSYTcub0o+EgYk8FLs7pTf7TiQHa9xPbk57O\nf0HAXp/e0pOiFVCnfA4EOpIJeDTmO2eWNBGSlgTBk5dXm/yXHg2vYAbuMWltjTi0\n9hzJfrmXpZus7huLrrMMpKWpqLmWzZ5ehbsdXCevvOzvhhaa98LQb1+7zHJe6KUA\nHwVZPLgtFBkj47u80mVJLJ32RcZwpef6sHA/Ff+5VhYG2K2Vqi4rPnfI/Dx9y8L+\nqpDbUp8iTiILWYhmbpdnWLBVbykZQcIBZiEK9C1egBLi9nM6POU6DJG6tBwGZkHY\nykDJDUp8TCMY+C5U90n/DgCmEEb8fn3f3dtwx/aCfAIbyPxBt+dJUn0PErn1SJgs\nDdZuWHAbka8Hg02saJ/uyrjsXqs7ZzgLMRwXaY/dzCGdTxF/sGn/0tkzTMSANFft\nzkJQdHshZ0540kGnTJUnYpMek+l7DI5N5U/sULMGfZ8H/C5EOonTwEcSpJLsH+lG\nnMSzM9GBO7Qp6vRUFEwNhLt0LHZdlsUydF3QQQeZZL6ccFBQQIw=\n=7BFe\n-----END PGP SIGNATURE-----",
        "payload": "tree d97e5f26bfbcb809e16fd0ff9bbc29a09604a10c\nparent b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9\nauthor Michael Dietz <michael.dietz@waya.ai> 1636842447 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918175 -0600\n\nrefactor: `entryToJSON` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b893a37226480f4665fb64a11605657579f90f76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b893a37226480f4665fb64a11605657579f90f76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b893a37226480f4665fb64a11605657579f90f76/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b194d1e7b201dc5b00cd94143ac3ace3dc3e18a9"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 7,
      "deletions": 13
    },
    "files": [
      {
        "sha": "13bf55e88b2e0df4f4d0128ec27cf8903f7c4e44",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 13,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b893a37226480f4665fb64a11605657579f90f76/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b893a37226480f4665fb64a11605657579f90f76/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b893a37226480f4665fb64a11605657579f90f76",
        "patch": "@@ -487,10 +487,11 @@ static std::vector<RPCResult> MempoolEntryDescription() { return {\n     RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n };}\n \n-static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPoolEntry& e) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n+static UniValue entryToJSON(const CTxMemPool& pool, const CTxMemPoolEntry& e) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n {\n     AssertLockHeld(pool.cs);\n \n+    UniValue info(UniValue::VOBJ);\n     UniValue fees(UniValue::VOBJ);\n     fees.pushKV(\"base\", ValueFromAmount(e.GetFee()));\n     fees.pushKV(\"modified\", ValueFromAmount(e.GetModifiedFee()));\n@@ -547,6 +548,7 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n \n     info.pushKV(\"bip125-replaceable\", rbfStatus);\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n+    return info;\n }\n \n UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n@@ -559,12 +561,10 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n         UniValue o(UniValue::VOBJ);\n         for (const CTxMemPoolEntry& e : pool.mapTx) {\n             const uint256& hash = e.GetTx().GetHash();\n-            UniValue info(UniValue::VOBJ);\n-            entryToJSON(pool, info, e);\n             // Mempool has unique entries so there is no advantage in using\n             // UniValue::pushKV, which checks if the key already exists in O(N).\n             // UniValue::__pushKV is used instead which currently is O(1).\n-            o.__pushKV(hash.ToString(), info);\n+            o.__pushKV(hash.ToString(), entryToJSON(pool, e));\n         }\n         return o;\n     } else {\n@@ -694,9 +694,7 @@ static RPCHelpMan getmempoolancestors()\n         for (CTxMemPool::txiter ancestorIt : setAncestors) {\n             const CTxMemPoolEntry &e = *ancestorIt;\n             const uint256& _hash = e.GetTx().GetHash();\n-            UniValue info(UniValue::VOBJ);\n-            entryToJSON(mempool, info, e);\n-            o.pushKV(_hash.ToString(), info);\n+            o.pushKV(_hash.ToString(), entryToJSON(mempool, e));\n         }\n         return o;\n     }\n@@ -759,9 +757,7 @@ static RPCHelpMan getmempooldescendants()\n         for (CTxMemPool::txiter descendantIt : setDescendants) {\n             const CTxMemPoolEntry &e = *descendantIt;\n             const uint256& _hash = e.GetTx().GetHash();\n-            UniValue info(UniValue::VOBJ);\n-            entryToJSON(mempool, info, e);\n-            o.pushKV(_hash.ToString(), info);\n+            o.pushKV(_hash.ToString(), entryToJSON(mempool, e));\n         }\n         return o;\n     }\n@@ -795,9 +791,7 @@ static RPCHelpMan getmempoolentry()\n     }\n \n     const CTxMemPoolEntry &e = *it;\n-    UniValue info(UniValue::VOBJ);\n-    entryToJSON(mempool, info, e);\n-    return info;\n+    return entryToJSON(mempool, e);\n },\n     };\n }"
      }
    ]
  },
  {
    "sha": "85bd03c13c0486993addb124827e43f0e5a4523e",
    "node_id": "C_kwDOABII59oAKDg1YmQwM2MxM2MwNDg2OTkzYWRkYjEyNDgyN2U0M2YwZTVhNDUyM2U",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T15:26:13Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:29:38Z"
      },
      "message": "refactor: `SignTransaction` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "5de8ca9efb84846e4e70756dcff40e36f1058f6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5de8ca9efb84846e4e70756dcff40e36f1058f6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85bd03c13c0486993addb124827e43f0e5a4523e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY6IACgkQc3/VzfHR\nRrmswBAAiqPCd4wPmnFzWZiFwcL99ZTSHsnFBdR5BDL/l7JKUFeIvl803jgAm3Fl\nkPKoQ+Z964O4cudxx+xaBpn5M7V1alv4Ll/xxYwIut03KIxJl+ZvMEAoO8U0PnIb\nF8j34LdUaC+v7uziwRagJGSTGp1nXCg6UQBS2gHww6cVRVLIxGK1tjhVyiCOGDGI\nQ6cPvI3pIB9KQIspJ4JK9Gf3QcDPfnI14hwj5J/vLhv/v7VPlTzItkXL+4LZB0zQ\nAhO3cT99UJD3imKPVknY+Lf5QdOxrJpLjAWdh6R1IF6POqDIZyO38ZQHS4GZP0Du\nJ1yg34L6t4Awb39MSYA7w6hz7seGw/0mALk5+M9g3ZhrsrSwsbgTFN5FTL8OHVOe\neCYDZ9tG0W703dNRizkW1hCjr6vvfXNATxqR2v7kIu/2OcvKpi1azLvpum7JZGQp\nohRg85geDQ4zUG3AHakXdnzKlojE//WxMGkwWBlvs+s6DUzKFFU1WNCbCq9O/IxU\nC49Lt7yzePn8v2uO8eXy1o2vQK1rtgEOWIIuUXT+T25x7y0RYP8tTLA0F2NAJsDv\nCGthyoeYiBgycjdGZF0qOHbDrQFEBqYU9CGlXYJfuyn4N18AyFbsgrLsEEWAjeS5\ncrDK/Pxza/mSy2r4rvK3deNPtEWU8cc/h5ZtsXszZb+7O5x1SWU=\n=S3p0\n-----END PGP SIGNATURE-----",
        "payload": "tree 5de8ca9efb84846e4e70756dcff40e36f1058f6e\nparent b893a37226480f4665fb64a11605657579f90f76\nauthor Michael Dietz <michael.dietz@waya.ai> 1636903573 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918178 -0600\n\nrefactor: `SignTransaction` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85bd03c13c0486993addb124827e43f0e5a4523e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85bd03c13c0486993addb124827e43f0e5a4523e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85bd03c13c0486993addb124827e43f0e5a4523e/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b893a37226480f4665fb64a11605657579f90f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b893a37226480f4665fb64a11605657579f90f76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b893a37226480f4665fb64a11605657579f90f76"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e964059620be1ed95a672ea4dfa0c6a4bb66b16a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85bd03c13c0486993addb124827e43f0e5a4523e/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85bd03c13c0486993addb124827e43f0e5a4523e/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=85bd03c13c0486993addb124827e43f0e5a4523e",
        "patch": "@@ -793,10 +793,7 @@ static RPCHelpMan signrawtransactionwithkey()\n \n     // Parse the prevtxs array\n     ParsePrevouts(request.params[2], &keystore, coins);\n-\n-    UniValue result(UniValue::VOBJ);\n-    SignTransaction(mtx, &keystore, coins, request.params[3], result);\n-    return result;\n+    return SignTransaction(mtx, &keystore, coins, request.params[3]);\n },\n     };\n }"
      },
      {
        "sha": "5661779df02b208e586d356c1844eccb88866f05",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85bd03c13c0486993addb124827e43f0e5a4523e/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85bd03c13c0486993addb124827e43f0e5a4523e/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=85bd03c13c0486993addb124827e43f0e5a4523e",
        "patch": "@@ -277,15 +277,17 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n     }\n }\n \n-void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result)\n+UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType)\n {\n+    UniValue result(UniValue::VOBJ);\n     int nHashType = ParseSighashString(hashType);\n \n     // Script verification errors\n     std::map<int, bilingual_str> input_errors;\n \n     bool complete = SignTransaction(mtx, keystore, coins, nHashType, input_errors);\n     SignTransactionResultToJSON(mtx, complete, coins, input_errors, result);\n+    return result;\n }\n \n void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, const std::map<int, bilingual_str>& input_errors, UniValue& result)"
      },
      {
        "sha": "a74af5d63cabf556e875c444ad2482a2b74f8a8c",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85bd03c13c0486993addb124827e43f0e5a4523e/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85bd03c13c0486993addb124827e43f0e5a4523e/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=85bd03c13c0486993addb124827e43f0e5a4523e",
        "patch": "@@ -23,9 +23,9 @@ class SigningProvider;\n  * @param  keystore      Temporary keystore containing signing keys\n  * @param  coins         Map of unspent outputs\n  * @param  hashType      The signature hash type\n- * @param result         JSON object where signed transaction results accumulate\n+ * @return               UniValue object containing JSON where signed transaction results accumulate\n  */\n-void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result);\n+UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType);\n void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, const std::map<int, bilingual_str>& input_errors, UniValue& result);\n \n /**"
      }
    ]
  },
  {
    "sha": "64dc7d4af935d41ed969b9404c5037abd1c2261d",
    "node_id": "C_kwDOABII59oAKDY0ZGM3ZDRhZjkzNWQ0MWVkOTY5Yjk0MDRjNTAzN2FiZDFjMjI2MWQ",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T15:33:00Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:29:38Z"
      },
      "message": "refactor: `SignTransactionResultToJSON` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "e9ca38dd43f920e7956fdac8ac3014e4b35149ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9ca38dd43f920e7956fdac8ac3014e4b35149ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64dc7d4af935d41ed969b9404c5037abd1c2261d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY6IACgkQc3/VzfHR\nRrkbCA//XClDnxr6nvBQYxCOgjpJYNsRpqYt4iD/3dBTnKiHvIxZomtPuCsr7qo/\nelNNfeE9a6pPU5yLWiIEnfkEI09AZZ1UywkK06GFARrZHK42B+voAPriB8bQJnBi\noJHNKVB8GgGquKYRK7SH7m6pnbR4nAqg4ecV9B4cX2LZMabdIjoRsxrbjZ7m26ib\nDWggPBLRzrhawlNF0sBAlllW5+LMO9eSb+Hzc2O8PSN4MjT6UxshZzpPiZtMlcQg\nlCzA05Qzt9nWi/YVa8qYXF3JrdluQKwvAFFwCd2cXidaylMbLpfj/Z2X8eoUr4OR\n1J9WfuaUwsyHwEJw2VvbImF8wxBwrw598KyaKoGj6ZUsnnhnqgK2syz3YQSw6UfF\ny1Zu8qt0B/iGROUz3YH4B/wXtg3yLQsuzgQu76/HfHZ6LpxOfva8fBspx4joO1EJ\nbEQwsDiYK0O0PzJSnR5zWuWOVuqGCgvCvWpItNQ3TPAZtQMQXpnsbA/FeCBkSnrC\ngr47XDkkX9sLiivbYywPx3KRZAvG5MdNG6cIbJ7MjzN8IddhaNf0cCy2/zwbGHy+\nUqOoVj98sgBkx3xMnIKSFAfqnA2nfDArpQz75dUnK3poPhZ9lqs+yYGbCWgDv3iG\nM2856JPq8rGSOHzphjAV4A4P05HwyvdvTnwnCzDXHyijfZo5MQg=\n=IBAE\n-----END PGP SIGNATURE-----",
        "payload": "tree e9ca38dd43f920e7956fdac8ac3014e4b35149ed\nparent 85bd03c13c0486993addb124827e43f0e5a4523e\nauthor Michael Dietz <michael.dietz@waya.ai> 1636903980 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918178 -0600\n\nrefactor: `SignTransactionResultToJSON` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64dc7d4af935d41ed969b9404c5037abd1c2261d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64dc7d4af935d41ed969b9404c5037abd1c2261d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64dc7d4af935d41ed969b9404c5037abd1c2261d/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85bd03c13c0486993addb124827e43f0e5a4523e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85bd03c13c0486993addb124827e43f0e5a4523e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85bd03c13c0486993addb124827e43f0e5a4523e"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 6,
      "deletions": 9
    },
    "files": [
      {
        "sha": "09613795d2ad8397df069ecea8236d699af50e1b",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64dc7d4af935d41ed969b9404c5037abd1c2261d/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64dc7d4af935d41ed969b9404c5037abd1c2261d/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=64dc7d4af935d41ed969b9404c5037abd1c2261d",
        "patch": "@@ -279,20 +279,18 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n \n UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType)\n {\n-    UniValue result(UniValue::VOBJ);\n     int nHashType = ParseSighashString(hashType);\n \n     // Script verification errors\n     std::map<int, bilingual_str> input_errors;\n \n     bool complete = SignTransaction(mtx, keystore, coins, nHashType, input_errors);\n-    SignTransactionResultToJSON(mtx, complete, coins, input_errors, result);\n-    return result;\n+    return SignTransactionResultToJSON(mtx, complete, coins, input_errors);\n }\n \n-void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, const std::map<int, bilingual_str>& input_errors, UniValue& result)\n+UniValue SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, const std::map<int, bilingual_str>& input_errors)\n {\n-    // Make errors UniValue\n+    UniValue result(UniValue::VOBJ);\n     UniValue vErrors(UniValue::VARR);\n     for (const auto& err_pair : input_errors) {\n         if (err_pair.second.original == \"Missing amount\") {\n@@ -310,4 +308,5 @@ void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const\n         }\n         result.pushKV(\"errors\", vErrors);\n     }\n+    return result;\n }"
      },
      {
        "sha": "c1029143efa6dbe857628b12befe642f8d7a3ad3",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64dc7d4af935d41ed969b9404c5037abd1c2261d/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64dc7d4af935d41ed969b9404c5037abd1c2261d/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=64dc7d4af935d41ed969b9404c5037abd1c2261d",
        "patch": "@@ -26,7 +26,7 @@ class SigningProvider;\n  * @return               UniValue object containing JSON where signed transaction results accumulate\n  */\n UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType);\n-void SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, const std::map<int, bilingual_str>& input_errors, UniValue& result);\n+UniValue SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, const std::map<COutPoint, Coin>& coins, const std::map<int, bilingual_str>& input_errors);\n \n /**\n   * Parse a prevtxs UniValue array and get the map of coins from it"
      },
      {
        "sha": "4d7752ffff7c222d936d8464405657281bb193b7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64dc7d4af935d41ed969b9404c5037abd1c2261d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64dc7d4af935d41ed969b9404c5037abd1c2261d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=64dc7d4af935d41ed969b9404c5037abd1c2261d",
        "patch": "@@ -3631,9 +3631,7 @@ RPCHelpMan signrawtransactionwithwallet()\n     std::map<int, bilingual_str> input_errors;\n \n     bool complete = pwallet->SignTransaction(mtx, coins, nHashType, input_errors);\n-    UniValue result(UniValue::VOBJ);\n-    SignTransactionResultToJSON(mtx, complete, coins, input_errors, result);\n-    return result;\n+    return SignTransactionResultToJSON(mtx, complete, coins, input_errors);\n },\n     };\n }"
      }
    ]
  },
  {
    "sha": "a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
    "node_id": "C_kwDOABII59oAKGEwMWM4YTRiYzFiNjMxYTA0YzlhY2E3YWFlN2NhOTgwNzIyZGFjOTU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T15:50:41Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:29:39Z"
      },
      "message": "refactor: `TxInErrorToJSON` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "10356730ae4452aefacf1e3501badaacffd1c9b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10356730ae4452aefacf1e3501badaacffd1c9b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY6MACgkQc3/VzfHR\nRrm4Fg/+OWv80kPjPc1h036GvKXtcTNmGKyW5ttFSnbz8SmANqdSAyDakg6j9UM1\nx9r9r8e14cN0cCOwKSILipPBJT0EY+ZxWthxpFryXbxOrA/ukAEfkp3zkeRT5qgD\nFcHOpHxdJ4sv0Hlo2H56sJrTynmaTK0Fh2hm9wHbTkFlqXX7us8vbdGmldt9erK2\nvyPUect/Nyo8lH29TaM+rzXA/tliRAzbzuIyFO7ItoCug9t7AixqF3+zcptjmdS8\nUOFbXlpFPbrCG6iQ1Tl9+eSMWUgcl0oVaimYTnmeyEEQfIUNbQSzqYUzeeF9mmVJ\nk7LkfVjCRDndgcsODJ+LtP3E4SnyHikWdTXopf43OhKhE3DqRozMkxJydc22W4r7\nefdXNKp1ld9QOB/M4cNh471HdtJEbczIJRazBMyjI+RknRAZx4wkC/iNr+AJFa3b\ntPAnYr2F7ioEHXYdbTtrKbmUG7/2Affe88NhtV4hP18VOezZRE0jvc4OugylIVL+\netCP91NOfjCSpl+Y52KhdT1LXoOhcUxlF0SKIUv1TKVab1zkooktQDNhOsd4UV4z\nFxhzWNMQA6zcfOXqxI25ubL5kfA6B/Enie4RCfJU27M7pAa+uCzBDbQM6TIeivKK\nDa00M/oiYfURzTvOQZ4HKdnn5XIA2y56D9aByT06oLDWy6MzZLc=\n=Lbph\n-----END PGP SIGNATURE-----",
        "payload": "tree 10356730ae4452aefacf1e3501badaacffd1c9b3\nparent 64dc7d4af935d41ed969b9404c5037abd1c2261d\nauthor Michael Dietz <michael.dietz@waya.ai> 1636905041 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918179 -0600\n\nrefactor: `TxInErrorToJSON` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a01c8a4bc1b631a04c9aca7aae7ca980722dac95/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64dc7d4af935d41ed969b9404c5037abd1c2261d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64dc7d4af935d41ed969b9404c5037abd1c2261d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64dc7d4af935d41ed969b9404c5037abd1c2261d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "93a60757d3df6a3b8aa069a51bda3ed841987ea0",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a01c8a4bc1b631a04c9aca7aae7ca980722dac95/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a01c8a4bc1b631a04c9aca7aae7ca980722dac95/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
        "patch": "@@ -139,8 +139,8 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n     return rawTx;\n }\n \n-/** Pushes a JSON object for script verification or signing errors to vErrorsRet. */\n-static void TxInErrorToJSON(const CTxIn& txin, UniValue& vErrorsRet, const std::string& strMessage)\n+/** Returns a JSON object for script verification or signing errors. */\n+static UniValue TxInErrorToJSON(const CTxIn& txin, const std::string& strMessage)\n {\n     UniValue entry(UniValue::VOBJ);\n     entry.pushKV(\"txid\", txin.prevout.hash.ToString());\n@@ -153,7 +153,7 @@ static void TxInErrorToJSON(const CTxIn& txin, UniValue& vErrorsRet, const std::\n     entry.pushKV(\"scriptSig\", HexStr(txin.scriptSig));\n     entry.pushKV(\"sequence\", (uint64_t)txin.nSequence);\n     entry.pushKV(\"error\", strMessage);\n-    vErrorsRet.push_back(entry);\n+    return entry;\n }\n \n void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins)\n@@ -297,7 +297,7 @@ UniValue SignTransactionResultToJSON(CMutableTransaction& mtx, bool complete, co\n             // This particular error needs to be an exception for some reason\n             throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Missing amount for %s\", coins.at(mtx.vin.at(err_pair.first).prevout).out.ToString()));\n         }\n-        TxInErrorToJSON(mtx.vin.at(err_pair.first), vErrors, err_pair.second.original);\n+        vErrors.push_back(TxInErrorToJSON(mtx.vin.at(err_pair.first), err_pair.second.original));\n     }\n \n     result.pushKV(\"hex\", EncodeHexTx(CTransaction(mtx)));"
      }
    ]
  },
  {
    "sha": "d328d21b8684573719ddc4de37077c49ca372437",
    "node_id": "C_kwDOABII59oAKGQzMjhkMjFiODY4NDU3MzcxOWRkYzRkZTM3MDc3YzQ5Y2EzNzI0Mzc",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T16:08:50Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:29:39Z"
      },
      "message": "refactor: `WalletTxToJSON` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "930fe6c433263a5c3b02a48a557df98cf9dbe4d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/930fe6c433263a5c3b02a48a557df98cf9dbe4d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d328d21b8684573719ddc4de37077c49ca372437",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY6MACgkQc3/VzfHR\nRrna2xAAhjTzmAuiNR0A7VCO7BCAgM9XMbM9p60uYoFOm1F6/bqsbVxDZGK5Ye7z\nsXqs/4jpiQVYmtRZ3YvjLU4ZU3aMclz0Z0x5Vz8Z6ChWV3eH4zpgKsNZ1Te8qn8P\npenH3hkTXNdl53ftMvZO3+U/FAupI25DlkOQxYZDCF+M8n0dLKydNr+xZvcE5eYJ\nzszOcvDxVvL037llShSbfAWfXDQPQmLR0jh0R1HnUqs1+Ucw/JsDAtM6bCook7AM\nb8GzelR8L45M+oPVbkgOurl+2XrHPz6p1Cj7Bpbwt03sw77xVy7SfH2obaP9sw0c\nTgSGTnOC8tBabtzPeRMXONG/VWfIMYojlaMcuALMD5FPVEO09I6p83QF1IM6Jmt5\npUDGQdgBjLqLqEmIrOmpxbA75DDcXSZ8ID/YaVX+1Jj6vTzaVktp9G7fOSuQ9Myf\nwd3OcLy8d9tUYe4BKvd/uMhYXNBCT59UzL0s4bVT5B/Bz3lMLVQ5qMpnyV8pg4sC\ntemE5V6FTB5LLZZMacUyxo3u5LYUKnepY4H0zcbHxOioSf5dNi/sv8FX7xndYZUZ\na0H7CUWjA19lB7V74RU5G/YEQe7cXllHKpHE2/W/Szmaf2AQLBcXwk78lMaFezDG\nUabsnBw/OfaWAnMtyMkkrWLBQEKNySpAJfdJzWuaWEHsN+U9Zfs=\n=unrB\n-----END PGP SIGNATURE-----",
        "payload": "tree 930fe6c433263a5c3b02a48a557df98cf9dbe4d4\nparent a01c8a4bc1b631a04c9aca7aae7ca980722dac95\nauthor Michael Dietz <michael.dietz@waya.ai> 1636906130 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918179 -0600\n\nrefactor: `WalletTxToJSON` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d328d21b8684573719ddc4de37077c49ca372437",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d328d21b8684573719ddc4de37077c49ca372437",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d328d21b8684573719ddc4de37077c49ca372437/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a01c8a4bc1b631a04c9aca7aae7ca980722dac95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a01c8a4bc1b631a04c9aca7aae7ca980722dac95"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 6,
      "deletions": 10
    },
    "files": [
      {
        "sha": "ea9ad4b32c73c5cad29bb5a3434309e26e81e9d0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d328d21b8684573719ddc4de37077c49ca372437/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d328d21b8684573719ddc4de37077c49ca372437/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d328d21b8684573719ddc4de37077c49ca372437",
        "patch": "@@ -159,8 +159,9 @@ const LegacyScriptPubKeyMan& EnsureConstLegacyScriptPubKeyMan(const CWallet& wal\n     return *spk_man;\n }\n \n-static void WalletTxToJSON(const CWallet& wallet, const CWalletTx& wtx, UniValue& entry)\n+static UniValue WalletTxToJSON(const CWallet& wallet, const CWalletTx& wtx)\n {\n+    UniValue entry(UniValue::VOBJ);\n     interfaces::Chain& chain = wallet.chain();\n     int confirms = wallet.GetTxDepthInMainChain(wtx);\n     entry.pushKV(\"confirmations\", confirms);\n@@ -199,6 +200,7 @@ static void WalletTxToJSON(const CWallet& wallet, const CWalletTx& wtx, UniValue\n \n     for (const std::pair<const std::string, std::string>& item : wtx.mapValue)\n         entry.pushKV(item.first, item.second);\n+    return entry;\n }\n \n static std::string LabelFromValue(const UniValue& value)\n@@ -1332,7 +1334,7 @@ static void ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nM\n     {\n         for (const COutputEntry& s : listSent)\n         {\n-            UniValue entry(UniValue::VOBJ);\n+            UniValue entry = fLong ? WalletTxToJSON(wallet, wtx) : UniValue(UniValue::VOBJ);\n             if (involvesWatchonly || (wallet.IsMine(s.destination) & ISMINE_WATCH_ONLY)) {\n                 entry.pushKV(\"involvesWatchonly\", true);\n             }\n@@ -1345,8 +1347,6 @@ static void ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nM\n             }\n             entry.pushKV(\"vout\", s.vout);\n             entry.pushKV(\"fee\", ValueFromAmount(-nFee));\n-            if (fLong)\n-                WalletTxToJSON(wallet, wtx, entry);\n             entry.pushKV(\"abandoned\", wtx.isAbandoned());\n             ret.push_back(entry);\n         }\n@@ -1364,7 +1364,7 @@ static void ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nM\n             if (filter_label && label != *filter_label) {\n                 continue;\n             }\n-            UniValue entry(UniValue::VOBJ);\n+            UniValue entry = fLong ? WalletTxToJSON(wallet, wtx) : UniValue(UniValue::VOBJ);\n             if (involvesWatchonly || (wallet.IsMine(r.destination) & ISMINE_WATCH_ONLY)) {\n                 entry.pushKV(\"involvesWatchonly\", true);\n             }\n@@ -1387,8 +1387,6 @@ static void ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nM\n                 entry.pushKV(\"label\", label);\n             }\n             entry.pushKV(\"vout\", r.vout);\n-            if (fLong)\n-                WalletTxToJSON(wallet, wtx, entry);\n             ret.push_back(entry);\n         }\n     }\n@@ -1746,7 +1744,6 @@ static RPCHelpMan gettransaction()\n \n     bool verbose = request.params[2].isNull() ? false : request.params[2].get_bool();\n \n-    UniValue entry(UniValue::VOBJ);\n     auto it = pwallet->mapWallet.find(hash);\n     if (it == pwallet->mapWallet.end()) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid or non-wallet transaction id\");\n@@ -1758,12 +1755,11 @@ static RPCHelpMan gettransaction()\n     CAmount nNet = nCredit - nDebit;\n     CAmount nFee = (CachedTxIsFromMe(*pwallet, wtx, filter) ? wtx.tx->GetValueOut() - nDebit : 0);\n \n+    UniValue entry = WalletTxToJSON(*pwallet, wtx);\n     entry.pushKV(\"amount\", ValueFromAmount(nNet - nFee));\n     if (CachedTxIsFromMe(*pwallet, wtx, filter))\n         entry.pushKV(\"fee\", ValueFromAmount(nFee));\n \n-    WalletTxToJSON(*pwallet, wtx, entry);\n-\n     UniValue details(UniValue::VARR);\n     ListTransactions(*pwallet, wtx, 0, false, details, filter, nullptr /* filter_label */);\n     entry.pushKV(\"details\", details);"
      }
    ]
  },
  {
    "sha": "c0bfea1f9ea64c62b43b45f70225774e8c544907",
    "node_id": "C_kwDOABII59oAKGMwYmZlYTFmOWVhNjRjNjJiNDNiNDVmNzAyMjU3NzRlOGM1NDQ5MDc",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T16:15:37Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T19:29:40Z"
      },
      "message": "refactor: `ProcessSubScript` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "8af051ad8853b85ce32b064aa8235039db3c2f28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8af051ad8853b85ce32b064aa8235039db3c2f28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0bfea1f9ea64c62b43b45f70225774e8c544907",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGRY6QACgkQc3/VzfHR\nRrnkYw/+JerXLeN7P1sjo2hOBhtl1/X/kPOKIb1lbqgD+D4XklmiUGbs/6fpMwnx\nTi9AvC5A4J7RKKW3DSBIHacv1YScK5ysKlFSqcJmDPpNPwQ/19XRY5wA0aS3zUo9\nlhUwjhPXBYEnCaXFmSf5eBFniPOZsX+r7oijFgnXuwWaRc+Rx77tAhAEYusftJEY\nDo3sqJp9K1h8TMKtFJzupQln+0w0xUdRIAp46tpvRoyLDIPxdxK1m33aOBamC0MV\nKAI7dNQbJYZxiYx/lOjveN+Knu4uWBtZXzfEYpAPuKpb44i0qblCoC/KIyITSL7k\nBbpz3A2VaEMRZXCPmhdWd0nQKUVO1P9Dh4pPC8UU+8blibk2a0Tr+vSG/CKEfFd4\nd7OW4MTTITnBj3k91te199L8uKkrvOWk8mX9UelFS4zce3ialUu0CFNlBJxJWBZi\njz+jKHrrhchWlP+jvhNyPN7MiLnvhlwrUFkM4Qq04zj/g7Om982MAcigY+IgsYxL\n6JQeXaN5kc3c4WmKPvRuR1kq6NS0BCDtW6Y2LtrSQm9zlR8hkGMRgbd29sV+1Rjd\nqXdE8yJM1kLReT1xRlVxmcHMck51fb3ULkKHMUyfDWdp/+yn1gdny/lJP5JCiLvf\nYktRidG7wdUPGBNQyn1PzWrwm+8M86KGlpmyC/5BPDL0kocGXKY=\n=uuXn\n-----END PGP SIGNATURE-----",
        "payload": "tree 8af051ad8853b85ce32b064aa8235039db3c2f28\nparent d328d21b8684573719ddc4de37077c49ca372437\nauthor Michael Dietz <michael.dietz@waya.ai> 1636906537 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636918180 -0600\n\nrefactor: `ProcessSubScript` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0bfea1f9ea64c62b43b45f70225774e8c544907",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c0bfea1f9ea64c62b43b45f70225774e8c544907",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0bfea1f9ea64c62b43b45f70225774e8c544907/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d328d21b8684573719ddc4de37077c49ca372437",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d328d21b8684573719ddc4de37077c49ca372437",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d328d21b8684573719ddc4de37077c49ca372437"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 5,
      "deletions": 11
    },
    "files": [
      {
        "sha": "7d7a3b35ac61ee3bc8da21ac508cf95f70eb65c5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0bfea1f9ea64c62b43b45f70225774e8c544907/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0bfea1f9ea64c62b43b45f70225774e8c544907/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c0bfea1f9ea64c62b43b45f70225774e8c544907",
        "patch": "@@ -3894,8 +3894,9 @@ class DescribeWalletAddressVisitor\n public:\n     const SigningProvider * const provider;\n \n-    void ProcessSubScript(const CScript& subscript, UniValue& obj) const\n+    UniValue ProcessSubScript(const CScript& subscript) const\n     {\n+        UniValue obj(UniValue::VOBJ);\n         // Always present: script type and redeemscript\n         std::vector<std::vector<unsigned char>> solutions_data;\n         TxoutType which_type = Solver(subscript, solutions_data);\n@@ -3925,6 +3926,7 @@ class DescribeWalletAddressVisitor\n             }\n             obj.pushKV(\"pubkeys\", std::move(pubkeys));\n         }\n+        return obj;\n     }\n \n     explicit DescribeWalletAddressVisitor(const SigningProvider* _provider) : provider(_provider) {}\n@@ -3946,12 +3948,8 @@ class DescribeWalletAddressVisitor\n     UniValue operator()(const ScriptHash& scripthash) const\n     {\n         CScriptID scriptID(scripthash);\n-        UniValue obj(UniValue::VOBJ);\n         CScript subscript;\n-        if (provider && provider->GetCScript(scriptID, subscript)) {\n-            ProcessSubScript(subscript, obj);\n-        }\n-        return obj;\n+        return (provider && provider->GetCScript(scriptID, subscript)) ? ProcessSubScript(subscript) : UniValue(UniValue::VOBJ);\n     }\n \n     UniValue operator()(const WitnessV0KeyHash& id) const\n@@ -3966,15 +3964,11 @@ class DescribeWalletAddressVisitor\n \n     UniValue operator()(const WitnessV0ScriptHash& id) const\n     {\n-        UniValue obj(UniValue::VOBJ);\n         CScript subscript;\n         CRIPEMD160 hasher;\n         uint160 hash;\n         hasher.Write(id.begin(), 32).Finalize(hash.begin());\n-        if (provider && provider->GetCScript(CScriptID(hash), subscript)) {\n-            ProcessSubScript(subscript, obj);\n-        }\n-        return obj;\n+        return (provider && provider->GetCScript(CScriptID(hash), subscript)) ? ProcessSubScript(subscript) : UniValue(UniValue::VOBJ);\n     }\n \n     UniValue operator()(const WitnessV1Taproot& id) const { return UniValue(UniValue::VOBJ); }"
      }
    ]
  },
  {
    "sha": "bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
    "node_id": "C_kwDOABII59oAKGJiY2JiNDliYjgwNDc1YzdjNjQ2OGY4OTk4ZTQ5NTJjNmFjN2Y0N2M",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T17:01:51Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-15T18:00:47Z"
      },
      "message": "refactor: `GetWalletBalances` return `UniValue` instead of mutating reference",
      "tree": {
        "sha": "2ae68a3e84b1500e263e65a9d1407349bec1289d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ae68a3e84b1500e263e65a9d1407349bec1289d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGSoFEACgkQc3/VzfHR\nRrlN8g/5AVgJn1uG81bLHUXgjCrmKuC3A8P9o+e6t07SCUFN3Uzx9mPZWxtqT31z\n/4+xQm73sWUwysHvSGIJIYMG89PkKhoVlpTkS0TzRSxIKsCBDeHRmctxJjjR5rPl\nDaHqQ9K0MyYNJQZTI3xvZOP8bMdGLMERpuwe0Pdvy7izDqJfEfpJtZ1bolrip2U0\nxTOnkK3mm5EAyYmfcci4qYSAfhfQKxbZ8pAaCRN3pvMf/EJgYu+abu2a69lpPT0w\njuJY9F0rwMnr/qnQT+aP7UkOm1inqhn9YD1LGT+nqQ9XOR85mRCmYOJnVD+vtixS\nkzS62DrTSWTtUmaqUgx9uUAp4idcZUMMV4bZiWAjRgDusgi1+GaS4h2eccifLfhQ\nfufpjSJturnnoIkpnAcELQ40cLzwbKUiRZA18XKGNtPcjg2yAcnewWD6Z2FGU/SJ\nu1BGIhrC3aFi3OThO9qGLHQLtT/64WxITeqWNKfClzVR4YGdVgJ4Uvn21onU2/Q5\nuqED4f9i0kU3KgV9WG0biwnnHpy6DQV1qt3+m8tEMilr4emXLz0ADmQXPJyxBe+w\nOP5ct/tVDZTcfO9NswA4LYAXPoHzpm3mM1GmJMmhyBBmX+gdPKnS/U6Sn9l3qbZb\nllEUZee5TWjAbarVpxWLjK1SXQnxrO8I1mQoA800e8+0/X+xebo=\n=PR/w\n-----END PGP SIGNATURE-----",
        "payload": "tree 2ae68a3e84b1500e263e65a9d1407349bec1289d\nparent c0bfea1f9ea64c62b43b45f70225774e8c544907\nauthor Michael Dietz <michael.dietz@waya.ai> 1636909311 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636999247 -0600\n\nrefactor: `GetWalletBalances` return `UniValue` instead of mutating reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0bfea1f9ea64c62b43b45f70225774e8c544907",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0bfea1f9ea64c62b43b45f70225774e8c544907",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0bfea1f9ea64c62b43b45f70225774e8c544907"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "58c90db1201881874fe8402b59f5e56837ecbd6a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
        "patch": "@@ -888,26 +888,25 @@ static void ParseError(const UniValue& error, std::string& strPrint, int& nRet)\n \n /**\n  * GetWalletBalances calls listwallets; if more than one wallet is loaded, it then\n- * fetches mine.trusted balances for each loaded wallet and pushes them to `result`.\n+ * fetches mine.trusted balances for each loaded wallet and returns them.\n  *\n- * @param result  Reference to UniValue object the wallet names and balances are pushed to.\n+ * @return std::optional<UniValue> Optional object containing wallet names and balances.\n  */\n-static void GetWalletBalances(UniValue& result)\n+static std::optional<UniValue> GetWalletBalances()\n {\n     DefaultRequestHandler rh;\n     const UniValue listwallets = ConnectAndCallRPC(&rh, \"listwallets\", /* args=*/{});\n-    if (!find_value(listwallets, \"error\").isNull()) return;\n+    if (!find_value(listwallets, \"error\").isNull()) return std::nullopt;\n     const UniValue& wallets = find_value(listwallets, \"result\");\n-    if (wallets.size() <= 1) return;\n-\n+    if (wallets.size() <= 1) return std::nullopt;\n     UniValue balances(UniValue::VOBJ);\n     for (const UniValue& wallet : wallets.getValues()) {\n         const std::string wallet_name = wallet.get_str();\n         const UniValue getbalances = ConnectAndCallRPC(&rh, \"getbalances\", /* args=*/{}, wallet_name);\n         const UniValue& balance = find_value(getbalances, \"result\")[\"mine\"][\"trusted\"];\n         balances.pushKV(wallet_name, balance);\n     }\n-    result.pushKV(\"balances\", balances);\n+    return balances;\n }\n \n /**\n@@ -1178,7 +1177,9 @@ static int CommandLineRPC(int argc, char *argv[])\n             if (error.isNull()) {\n                 if (gArgs.GetBoolArg(\"-getinfo\", false)) {\n                     if (!gArgs.IsArgSet(\"-rpcwallet\")) {\n-                        GetWalletBalances(result); // fetch multiwallet balances and append to result\n+                        if (const std::optional<UniValue> balances = GetWalletBalances()) {\n+                            result.pushKV(\"balances\", balances.value());\n+                        }\n                     }\n                     ParseGetInfoResult(result);\n                 }"
      }
    ]
  },
  {
    "sha": "e530a9c920a157fcffe0eb758590f274b34e6205",
    "node_id": "C_kwDOABII59oAKGU1MzBhOWM5MjBhMTU3ZmNmZmUwZWI3NTg1OTBmMjc0YjM0ZTYyMDU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T17:18:09Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-15T18:00:53Z"
      },
      "message": "refactor: `ParseGetInfoResult` return a value instead of mutating `UniValue` reference",
      "tree": {
        "sha": "3b4543439258b4661da443d007e0eb19967d6644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b4543439258b4661da443d007e0eb19967d6644"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e530a9c920a157fcffe0eb758590f274b34e6205",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGSoFUACgkQc3/VzfHR\nRrnyRA//XB5IaKgFnGxJqTAwWFEOYlDCIljILbBH3yI0bdbyoJ9qlkdzE+DAi/v1\nxqOSBdbyyZWJAwnSQhVttozEvapfBRRJoYAPnazG+ow7r3gPqRhVMpX+XdAYwYOG\nHCvA3Gs+L/AFLVdcNkb8FaE8z0HPoNGTMx7o5u2/0p3q8nKq16kymIU0olc6wfuo\nCXmAKM+I59VqxbOY4rrheNfLyJWjpZR3OOU2jhzwFRnqhi0P4I94NyO8OAkxYjmP\nLsH6KyhUCUGruyR6AUAsntvwzQzOwD9IngOcuPDx6VvHlvR/I8LQUVD+oo8uKr90\npaytl/YZtNJmnykiSGBYyGZO5DXWKAosTWyg3G+Ps/e3FkOjcq/yMDQZdlfm8Uq8\nIHrjDz/ORkB2ysilmVloAjY3TJU7BSeM6lO9XiytmJx8OPNkAuXVNLdFZH2KIZsC\nbjRY2DLuqlA1kGPtlCh5kxy+k/LD68Xlf0wKgOdH4hT3PC3SaRfkWoLMm4KpyGiM\ntb1k5Q6kftxq54JywzsEVE4uib2Sib9oBCghDj7Uz2fGBDZEucf2Auav6BiOzY5R\nJX4HO/XgmCYAQG5W13eCjSXDCB2PjPamZmTW9ddIuLQRgA2g/71Qag7MqiaH6AgW\n7APSKolRR98TmgcLhn9DpXqYq1DebcisKVKKRNBqNHSR1QjMw6I=\n=W/qx\n-----END PGP SIGNATURE-----",
        "payload": "tree 3b4543439258b4661da443d007e0eb19967d6644\nparent bbcbb49bb80475c7c6468f8998e4952c6ac7f47c\nauthor Michael Dietz <michael.dietz@waya.ai> 1636910289 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636999253 -0600\n\nrefactor: `ParseGetInfoResult` return a value instead of mutating `UniValue` reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e530a9c920a157fcffe0eb758590f274b34e6205",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e530a9c920a157fcffe0eb758590f274b34e6205",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e530a9c920a157fcffe0eb758590f274b34e6205/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbcbb49bb80475c7c6468f8998e4952c6ac7f47c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "cabcde1fea2e82ceb587d97c8664ba246726c821",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e530a9c920a157fcffe0eb758590f274b34e6205/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e530a9c920a157fcffe0eb758590f274b34e6205/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=e530a9c920a157fcffe0eb758590f274b34e6205",
        "patch": "@@ -934,13 +934,13 @@ static void GetProgressBar(double progress, std::string& progress_bar)\n \n /**\n  * ParseGetInfoResult takes in -getinfo result in UniValue object and parses it\n- * into a user friendly UniValue string to be printed on the console.\n- * @param[out] result  Reference to UniValue result containing the -getinfo output.\n+ * into a string.\n+ * @param[in] result  Reference to UniValue result containing the -getinfo output.\n+ *\n+ * @return A user friendly string to be printed on the console.\n  */\n-static void ParseGetInfoResult(UniValue& result)\n+static std::string ParseGetInfoResult(const UniValue& result)\n {\n-    if (!find_value(result, \"error\").isNull()) return;\n-\n     std::string RESET, GREEN, BLUE, YELLOW, MAGENTA, CYAN;\n     bool should_colorize = false;\n \n@@ -1051,7 +1051,7 @@ static void ParseGetInfoResult(UniValue& result)\n     }\n \n     result_string += strprintf(\"%sWarnings:%s %s\", YELLOW, RESET, result[\"warnings\"].getValStr());\n-    result.setStr(result_string);\n+    return result_string;\n }\n \n /**\n@@ -1181,7 +1181,9 @@ static int CommandLineRPC(int argc, char *argv[])\n                             result.pushKV(\"balances\", balances.value());\n                         }\n                     }\n-                    ParseGetInfoResult(result);\n+                    if (find_value(result, \"error\").isNull()) {\n+                        result.setStr(ParseGetInfoResult(result));\n+                    }\n                 }\n \n                 ParseResult(result, strPrint);"
      }
    ]
  },
  {
    "sha": "1e18ae264d90a1b55068f249544556a27d32d1b6",
    "node_id": "C_kwDOABII59oAKDFlMThhZTI2NGQ5MGExYjU1MDY4ZjI0OTU0NDU1NmEyN2QzMmQxYjY",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T17:31:51Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-15T18:00:53Z"
      },
      "message": "refactor: `ListTransactions` return a value instead of mutating `UniValue` reference",
      "tree": {
        "sha": "f696295ae790a8d0422e89270f27c1944036c030",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f696295ae790a8d0422e89270f27c1944036c030"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e18ae264d90a1b55068f249544556a27d32d1b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGSoFUACgkQc3/VzfHR\nRrn3bhAAsKF6fHKt3Gl9Lw1xE9H74olkl5Ck0hwDPlgwzM1OTNokBpdg8aopTQ31\nXPCvsNkXjJJ01C/1dpSHiNvcWkqeLGe4IR+3h/tBAMkRhXNdNk644CDO/xsVhC0n\nNejo7xcItzgnBy0+oJNoi5lp4zRl8l72QzJzmWKTPEl3mRpqzwcS4H0ok6amtiqK\nJ0i9b7JdgbttzB1bRI7iYm1mSDud/FIOhi7QURGTeiEUtTGe5Rd9BmbTM3dAQkRG\n+3B0/L1WK+/Y3sgJKezBJ2ZXuVX1oN+LxJ/OYIbX4FUYaov9CT8ziR3MpuTbvsf7\nPk7gJa6rmXQq9gly+tcKn8Rkyoi+TwHqKekdqKAk3BFx3RA5ayK9SUrTUiI7/TFo\n/0+3KZP4iDEfzg36JAZt6lsxGJeQIyiE2MoL4oNNGTCO6wl2yXonkPfVzy7bOG6R\njwyGfQKb1adRIHKxBa/TA8mMybdDd2jWM/isGYHsGc//db0Cm2Yy/RgW/Nx5rhk6\nSVMDngI1mC3HZpLh6/aHFZLjFQNKJqd6BSS9TS2GmRfCJFyskludtkLhuIIjqohO\nOxZnDbkBDznWPq/vLfYQsNYC5hihh1PkbdyiJgOs8F7jniWAgCeZeQ1TuqhkDSbW\n+RkOVIXQa1cac/zpdsM1km1eKQLRzHjVnNP64RGxR4Gli8HsBlw=\n=UG/y\n-----END PGP SIGNATURE-----",
        "payload": "tree f696295ae790a8d0422e89270f27c1944036c030\nparent e530a9c920a157fcffe0eb758590f274b34e6205\nauthor Michael Dietz <michael.dietz@waya.ai> 1636911111 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636999253 -0600\n\nrefactor: `ListTransactions` return a value instead of mutating `UniValue` reference\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e18ae264d90a1b55068f249544556a27d32d1b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e18ae264d90a1b55068f249544556a27d32d1b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e18ae264d90a1b55068f249544556a27d32d1b6/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e530a9c920a157fcffe0eb758590f274b34e6205",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e530a9c920a157fcffe0eb758590f274b34e6205",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e530a9c920a157fcffe0eb758590f274b34e6205"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "37197756a81a1c4936f0b03fbc304bb7a11237d8",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e18ae264d90a1b55068f249544556a27d32d1b6/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e18ae264d90a1b55068f249544556a27d32d1b6/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1e18ae264d90a1b55068f249544556a27d32d1b6",
        "patch": "@@ -1315,15 +1315,16 @@ static void MaybePushAddress(UniValue & entry, const CTxDestination &dest)\n  * @param  wtx            The wallet transaction.\n  * @param  nMinDepth      The minimum confirmation depth.\n  * @param  fLong          Whether to include the JSON version of the transaction.\n- * @param  ret            The UniValue into which the result is stored.\n  * @param  filter_ismine  The \"is mine\" filter flags.\n  * @param  filter_label   Optional label string to filter incoming transactions.\n+ * @return                Vector of UniValues into which the result is stored.\n  */\n-static void ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter_ismine, const std::string* filter_label) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n+static std::vector<UniValue> ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nMinDepth, bool fLong, const isminefilter& filter_ismine, const std::string* filter_label) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n {\n     CAmount nFee;\n     std::list<COutputEntry> listReceived;\n     std::list<COutputEntry> listSent;\n+    std::vector<UniValue> ret;\n \n     CachedTxGetAmounts(wallet, wtx, listReceived, listSent, nFee, filter_ismine);\n \n@@ -1390,6 +1391,7 @@ static void ListTransactions(const CWallet& wallet, const CWalletTx& wtx, int nM\n             ret.push_back(entry);\n         }\n     }\n+    return ret;\n }\n \n static const std::vector<RPCResult> TransactionDescriptionString()\n@@ -1510,7 +1512,7 @@ static RPCHelpMan listtransactions()\n         for (CWallet::TxItems::const_reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)\n         {\n             CWalletTx *const pwtx = (*it).second;\n-            ListTransactions(*pwallet, *pwtx, 0, true, ret, filter, filter_label);\n+            ret.push_backV(ListTransactions(*pwallet, *pwtx, 0, true, filter, filter_label));\n             if ((int)ret.size() >= (nCount+nFrom)) break;\n         }\n     }\n@@ -1626,12 +1628,11 @@ static RPCHelpMan listsinceblock()\n     int depth = height ? wallet.GetLastBlockHeight() + 1 - *height : -1;\n \n     UniValue transactions(UniValue::VARR);\n-\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : wallet.mapWallet) {\n         const CWalletTx& tx = pairWtx.second;\n \n         if (depth == -1 || abs(wallet.GetTxDepthInMainChain(tx)) < depth) {\n-            ListTransactions(wallet, tx, 0, true, transactions, filter, nullptr /* filter_label */);\n+            transactions.push_backV(ListTransactions(wallet, tx, 0, true, filter, nullptr /* filter_label */));\n         }\n     }\n \n@@ -1648,7 +1649,7 @@ static RPCHelpMan listsinceblock()\n             if (it != wallet.mapWallet.end()) {\n                 // We want all transactions regardless of confirmation count to appear here,\n                 // even negative confirmation ones, hence the big negative.\n-                ListTransactions(wallet, it->second, -100000000, true, removed, filter, nullptr /* filter_label */);\n+                removed.push_backV(ListTransactions(wallet, it->second, -100000000, true, filter, nullptr /* filter_label */));\n             }\n         }\n         blockId = block.hashPrevBlock;\n@@ -1761,7 +1762,7 @@ static RPCHelpMan gettransaction()\n         entry.pushKV(\"fee\", ValueFromAmount(nFee));\n \n     UniValue details(UniValue::VARR);\n-    ListTransactions(*pwallet, wtx, 0, false, details, filter, nullptr /* filter_label */);\n+    details.push_backV(ListTransactions(*pwallet, wtx, 0, false, filter, nullptr /* filter_label */));\n     entry.pushKV(\"details\", details);\n \n     std::string strHex = EncodeHexTx(*wtx.tx, pwallet->chain().rpcSerializationFlags());"
      }
    ]
  },
  {
    "sha": "092ad6a03090172e61ac95a328b9d429e043e8ff",
    "node_id": "C_kwDOABII59oAKDA5MmFkNmEwMzA5MDE3MmU2MWFjOTVhMzI4YjlkNDI5ZTA0M2U4ZmY",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-14T17:34:00Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-11-15T18:00:53Z"
      },
      "message": "refactor: `RPCExecutor::request` catch by reference can be const",
      "tree": {
        "sha": "c12332c140313a7739a1a53ef5a5d5b17b405383",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c12332c140313a7739a1a53ef5a5d5b17b405383"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/092ad6a03090172e61ac95a328b9d429e043e8ff",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmGSoFUACgkQc3/VzfHR\nRrm8Qw/7BORc3bJPcu+YL3y6ft9hqvENvSg5+FI2VA45yhdv84W9IKFaAxvcjUIG\nh/tkzwTLQ9OO0UZp81Fk2eOdfi24WkoUOTxCAhRk8d+rnig6LZT09FK4PSOXADxg\nP/8HnMnY+sQHAM1IQXHTQF3kCbWEFBANfxgEH+x8CXJb/h0yvTdoJiKwh2AaM3S/\nG/8FofdHnthQhrRV5UjGIjCz8JNyJkjCt6lY/Y9z4lFAALSxvaBuMpF5IY72RatD\nzXpJRFak9VxEc5/i+mjoUx7ZeWUTZ6J2IdrRlPoJpK8wJ/wcE82THnsG3YLqqYmc\nNrpUciti8FEjBi3f2iCA0hGc8bHdlH/dr/d+2xKOK7RADuwLou10wo/5dTYVV1fD\ncBIRp/y5vpSu/6iiaZLaX+hdDr+AXlti6itDAkb3ugVSjRZGO43U1s4RDLo3A2Ou\nyL1jLEyoqT3g//o7+ocOVBkzWRHF0/ImkzoEKYr3tC2bE9AcZPHKjdSfCrCEalF6\ndM/rIO+COodn2JkTuAX6Q1Bq7Bva9Hwf+2eC2siBeHeUq2ZLnA+6gGT0v5wwLBbu\nz6NRAYNOC5Teawf414WWAKAhaMfWwEQSTfXCMJdPG5qR4X++PmOdlR73BxPqmONT\n6dtVp2gL4OgTJIis9jZBm/g0NGlmzN4jea3Cc0J1h1yNCvqdVbM=\n=IcDm\n-----END PGP SIGNATURE-----",
        "payload": "tree c12332c140313a7739a1a53ef5a5d5b17b405383\nparent 1e18ae264d90a1b55068f249544556a27d32d1b6\nauthor Michael Dietz <michael.dietz@waya.ai> 1636911240 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1636999253 -0600\n\nrefactor: `RPCExecutor::request` catch by reference can be const\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/092ad6a03090172e61ac95a328b9d429e043e8ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/092ad6a03090172e61ac95a328b9d429e043e8ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/092ad6a03090172e61ac95a328b9d429e043e8ff/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e18ae264d90a1b55068f249544556a27d32d1b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e18ae264d90a1b55068f249544556a27d32d1b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e18ae264d90a1b55068f249544556a27d32d1b6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9ad6aa3ebf4b2fa29e44625b78b9914dc3933fb2",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/092ad6a03090172e61ac95a328b9d429e043e8ff/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/092ad6a03090172e61ac95a328b9d429e043e8ff/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=092ad6a03090172e61ac95a328b9d429e043e8ff",
        "patch": "@@ -449,7 +449,7 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n \n         Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(result));\n     }\n-    catch (UniValue& objError)\n+    catch (const UniValue& objError)\n     {\n         try // Nice formatting for standard-format error\n         {"
      }
    ]
  }
]