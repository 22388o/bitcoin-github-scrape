ryanofsky,2020-05-18 22:15:16,"Concept ACK and approach half-ACK. This seems like a good change to make with the caveat that it shouldn't be necessary to add new global `NodeContext` variables and add new node initialization and caching code to fix a GUI problem.\n\nInstead of having `AppInitMain` set global variables in `NodeContext` that get returned by a new `Node::getInitialChainState` method, and having the node cache in",https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-630464246,630464246,
DrahtBot,2020-05-18 23:55:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19413 (refactor: Remove confusing BlockIndex global by MarcoFalke)\n* #19101 (refactor: remove ::vpwallets and related gl",https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-630494779,630494779,
jonasschnelli,2020-05-19 07:23:09,"> This would mean instead of having a new Node::getInitialChainState method returning cached information, there would be a new Node::getBlockTip method [1] returning live information. The GUI could call this right after it calls Node::appInitMain, and pass the returned values along to setClientModel. It might also be good to define a BlockTip struct to avoid repeating the same function arguments m",https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-630635994,630635994,
ryanofsky,2020-05-19 11:38:05,"> The approach you described should work,.. the main difference is that the networking is running then already which might lead to additional cs_main locking (within this PR, we fetch the information before we start the networking). Your approach would also require at least another locking of cs_main (right?).\n\nOh, I thought I might have been missing something. Now I understand why this is sav",https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-630762720,630762720,
jonasschnelli,2020-05-19 13:21:37,"Thanks for the feedback @ryanofsky.\nI tried to implement your approach without the global struct.",https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-630813746,630813746,
jonasschnelli,2020-05-19 17:57:07,"Force pushed a fix for the qt test apptests (missed the new `qRegisterMetaType<interfaces::BlockAndHeaderTipInfo>(""interfaces::BlockAndHeaderTipInfo"")`.",https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-630983578,630983578,
jonasschnelli,2020-05-22 07:58:16,Rebased (due to #18740).,https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-632554804,632554804,
jonasschnelli,2020-06-05 06:55:10,Rebased and removed the extra `;`,https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-639295198,639295198,
jonasschnelli,2020-08-12 14:45:23,Rebased.,https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-672915797,672915797,
promag,2020-08-13 08:30:31,Code review ACK 386ec192a57b76492125d691ceda1b4aa832312e.,https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-673341061,673341061,
jonatack,2020-08-13 08:32:56,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19011#issuecomment-673342262,673342262,
ryanofsky,2020-05-19 18:22:48,"In commit ""Reduce cs_main lock accumulation during GUI startup"" (ded3edd66c376eed6c9b6a703153d323e47aa4d7)\n\nI guess it'd be nice to register types in a common location in the future to avoid the need to do this twice",https://github.com/bitcoin/bitcoin/pull/19011#discussion_r427509340,427509340,src/qt/test/apptests.cpp
promag,2020-05-22 09:31:51,nit double `;`,https://github.com/bitcoin/bitcoin/pull/19011#discussion_r429143513,429143513,src/init.cpp
promag,2020-05-22 09:34:49,"Agree, suggestion `GUIUtils::registerMetaTypes` or something like that.",https://github.com/bitcoin/bitcoin/pull/19011#discussion_r429144851,429144851,src/qt/test/apptests.cpp
promag,2020-05-22 09:40:27,Why not pass tip_info too?,https://github.com/bitcoin/bitcoin/pull/19011#discussion_r429147451,429147451,src/qt/bitcoingui.cpp
jonasschnelli,2020-08-13 08:28:09,I think it's fine to pass primitives at this level to be more flexible with structure changes.,https://github.com/bitcoin/bitcoin/pull/19011#discussion_r469783797,469783797,src/qt/bitcoingui.cpp
jonasschnelli,2020-08-13 08:29:06,Yes. Lets do this later when more registration are required/appear.,https://github.com/bitcoin/bitcoin/pull/19011#discussion_r469784349,469784349,src/qt/test/apptests.cpp
