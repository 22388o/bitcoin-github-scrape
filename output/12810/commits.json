[
  {
    "sha": "8394300859e69141fc62a5c120448f3311e5cc6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Mzk0MzAwODU5ZTY5MTQxZmM2MmE1YzEyMDQ0OGYzMzExZTVjYzZh",
    "commit": {
      "author": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2018-03-28T06:44:30Z"
      },
      "committer": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2018-03-28T15:16:45Z"
      },
      "message": "[Tests] fix a typo in TestNode.assert_start_raises_init_error()\n\nAlso, use specific exception for testing TestNode initialization failure.",
      "tree": {
        "sha": "d11ec0714b481f5f79b07952f3dbf93b5c56323b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d11ec0714b481f5f79b07952f3dbf93b5c56323b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8394300859e69141fc62a5c120448f3311e5cc6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niG4EABMKABYFAlq7sd8PHG1lQHJvbWFuemV5LmRlAAoJEIfK5fpGkXy7BSsBANh6\nEdHBfFefmqjwaGcdG0y+aIlwUqEvs19VNJxZDHZHAP9juh6mLCJYJlLc2hD6zfiP\nzXxBbx0FBeRUifIz5TJ5nA==\n=Vaab\n-----END PGP SIGNATURE-----",
        "payload": "tree d11ec0714b481f5f79b07952f3dbf93b5c56323b\nparent 624bee96597c1d59018e58131b8285c0b332700d\nauthor Roman Zeyde <me@romanzey.de> 1522219470 +0300\ncommitter Roman Zeyde <me@romanzey.de> 1522250205 +0300\n\n[Tests] fix a typo in TestNode.assert_start_raises_init_error()\n\nAlso, use specific exception for testing TestNode initialization failure.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8394300859e69141fc62a5c120448f3311e5cc6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8394300859e69141fc62a5c120448f3311e5cc6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8394300859e69141fc62a5c120448f3311e5cc6a/comments",
    "author": {
      "login": "romanz",
      "id": 9900,
      "node_id": "MDQ6VXNlcjk5MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanz",
      "html_url": "https://github.com/romanz",
      "followers_url": "https://api.github.com/users/romanz/followers",
      "following_url": "https://api.github.com/users/romanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
      "organizations_url": "https://api.github.com/users/romanz/orgs",
      "repos_url": "https://api.github.com/users/romanz/repos",
      "events_url": "https://api.github.com/users/romanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "romanz",
      "id": 9900,
      "node_id": "MDQ6VXNlcjk5MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanz",
      "html_url": "https://github.com/romanz",
      "followers_url": "https://api.github.com/users/romanz/followers",
      "following_url": "https://api.github.com/users/romanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
      "organizations_url": "https://api.github.com/users/romanz/orgs",
      "repos_url": "https://api.github.com/users/romanz/repos",
      "events_url": "https://api.github.com/users/romanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "624bee96597c1d59018e58131b8285c0b332700d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/624bee96597c1d59018e58131b8285c0b332700d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/624bee96597c1d59018e58131b8285c0b332700d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "291ac3ee46ca89409d1f6809767859ad661ef107",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8394300859e69141fc62a5c120448f3311e5cc6a/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8394300859e69141fc62a5c120448f3311e5cc6a/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=8394300859e69141fc62a5c120448f3311e5cc6a",
        "patch": "@@ -30,6 +30,11 @@\n \n BITCOIND_PROC_WAIT_TIMEOUT = 60\n \n+\n+class FailedToStartError(Exception):\n+    \"\"\"Raised when a node fails to start correctly.\"\"\"\n+\n+\n class TestNode():\n     \"\"\"A class for representing a bitcoind node under test.\n \n@@ -102,7 +107,8 @@ def wait_for_rpc_connection(self):\n         # Poll at a rate of four times per second\n         poll_per_s = 4\n         for _ in range(poll_per_s * self.rpc_timeout):\n-            assert self.process.poll() is None, \"bitcoind exited with status %i during initialization\" % self.process.returncode\n+            if self.process.poll() is not None:\n+                raise FailedToStartError('bitcoind exited with status {} during initialization'.format(self.process.returncode))\n             try:\n                 self.rpc = get_rpc_proxy(rpc_url(self.datadir, self.index, self.rpchost), self.index, timeout=self.rpc_timeout, coveragedir=self.coverage_dir)\n                 self.rpc.getblockcount()\n@@ -179,9 +185,9 @@ def assert_start_raises_init_error(self, extra_args=None, expected_msg=None, par\n                 self.start(extra_args, stderr=log_stderr, *args, **kwargs)\n                 self.wait_for_rpc_connection()\n                 self.stop_node()\n-                self.wait_util_stopped()\n-            except Exception as e:\n-                assert 'bitcoind exited' in str(e)  # node must have shutdown\n+                self.wait_until_stopped()\n+            except FailedToStartError as e:\n+                self.log.debug('bitcoind failed to start: %s', e)\n                 self.running = False\n                 self.process = None\n                 # Check stderr for expected message"
      }
    ]
  }
]