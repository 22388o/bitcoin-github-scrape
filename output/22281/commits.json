[
  {
    "sha": "9922cda0823ac0b5651094f08eb46998c1415d64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTIyY2RhMDgyM2FjMGI1NjUxMDk0ZjA4ZWI0Njk5OGMxNDE1ZDY0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-06-18T23:27:17Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-06-19T03:06:52Z"
      },
      "message": "build: Avoid @GLIBC_2.29 libm symbols when --enable-glibc-back-compat",
      "tree": {
        "sha": "c7be884a04a1f71585d891ebe9bdaaf983515347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7be884a04a1f71585d891ebe9bdaaf983515347"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9922cda0823ac0b5651094f08eb46998c1415d64",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmDNX0wACgkQQQEIES5+\nqB9GBw//d/wINpN0F0NJIc0VvWM0mxDu4c1tzvir9Hcbl/YEfqvys8Bfc3dCdyVA\njHs0+3KY805q9bhQXxxmj2TFS4FqKbaMiM1kHSRnpK/Z3qk4aVi0PpGK6xjFEb7d\nYjhc680GQNYao7Xe+15cWybb8zU3ni8xBElxkY0NLGGu8UPHy8t4HBJAkW/EPtPW\n25FyTxFjfmad54Mc0z3OibQ+HHxJWumdfT33oNlYXJkjcEa7BMcnIK3u0Qtl097j\nmdPVIVuD8A8BxGKw3Pjlpsny1/HRfqWj/ogxPY1SEBCc1c8ARVuPP8xDDlx/xjWa\nXVZHkNXRU+1UT96pi3o1ywC1MCIolqfa1HL//WDPDPfmOFNbEDDwe5qov2esxqp+\niA9eqZDQJgXX7/Oimp01MTdVah1p+VrG4QT+ChTVp4YexMKE3+1MTzWqjYm+kSVu\nPnpJwM0h8WvK31ZSLEUSTqdcgn2rIUIW7/3d3HbtG0p5vo5/A2MttXo+wUbqiewg\nDXg1WcwDHFGyQehOJzt211l0tHUiSQ3CUMB81tgEjEDd0jRMnBafJh7A5ze0WOYH\nn0zQ4k8wHJyS06EpVnolmYABBESRi43hxy7SHJkFBurrEhcZdHwi1pwTnzwLtkpP\nEdPt9vjivnCRkY87Gsj7A7lrog0uGR1NZQMBaANFX6e8j5HfC7Q=\n=FyM8\n-----END PGP SIGNATURE-----",
        "payload": "tree c7be884a04a1f71585d891ebe9bdaaf983515347\nparent 0f47e01d7d491fd240f4b14302bf9edf4f05142c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1624058837 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1624072012 +0300\n\nbuild: Avoid @GLIBC_2.29 libm symbols when --enable-glibc-back-compat\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9922cda0823ac0b5651094f08eb46998c1415d64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9922cda0823ac0b5651094f08eb46998c1415d64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9922cda0823ac0b5651094f08eb46998c1415d64/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f47e01d7d491fd240f4b14302bf9edf4f05142c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f47e01d7d491fd240f4b14302bf9edf4f05142c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f47e01d7d491fd240f4b14302bf9edf4f05142c"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 39,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f64130474e55c53dcc4f29c33ed1dd28a6439d67",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9922cda0823ac0b5651094f08eb46998c1415d64/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9922cda0823ac0b5651094f08eb46998c1415d64/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9922cda0823ac0b5651094f08eb46998c1415d64",
        "patch": "@@ -838,7 +838,10 @@ fi\n \n if test x$use_glibc_compat != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n+  AX_CHECK_LINK_FLAG([-Wl,--wrap=exp], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=exp\"])\n+  AX_CHECK_LINK_FLAG([-Wl,--wrap=log], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n+  AX_CHECK_LINK_FLAG([-Wl,--wrap=pow], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=pow\"])\n   case $host in\n     powerpc64* | ppc64*)\n       AX_CHECK_LINK_FLAG([[-Wl,--no-tls-get-addr-optimize]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--no-tls-get-addr-optimize\"])"
      },
      {
        "sha": "3d833a736530392e190dcf8a370212efb74d2cda",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9922cda0823ac0b5651094f08eb46998c1415d64/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9922cda0823ac0b5651094f08eb46998c1415d64/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=9922cda0823ac0b5651094f08eb46998c1415d64",
        "patch": "@@ -38,25 +38,61 @@ extern \"C\" int64_t __wrap___divmoddi4(int64_t u, int64_t v, int64_t* rp)\n }\n #endif\n \n+extern \"C\" double exp_old(double x);\n+extern \"C\" double log_old(double x);\n extern \"C\" float log2f_old(float x);\n+extern \"C\" double pow_old(double base, double power);\n #ifdef __i386__\n+__asm(\".symver exp_old,exp@GLIBC_2.1\");\n+__asm(\".symver log_old,log@GLIBC_2.1\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.1\");\n+__asm(\".symver pow_old,pow@GLIBC_2.1\");\n #elif defined(__amd64__)\n+__asm(\".symver exp_old,exp@GLIBC_2.2.5\");\n+__asm(\".symver log_old,log@GLIBC_2.2.5\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.2.5\");\n+__asm(\".symver pow_old,pow@GLIBC_2.2.5\");\n #elif defined(__arm__)\n+__asm(\".symver exp_old,exp@GLIBC_2.4\");\n+__asm(\".symver log_old,log@GLIBC_2.4\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.4\");\n+__asm(\".symver pow_old,pow@GLIBC_2.4\");\n #elif defined(__aarch64__)\n+__asm(\".symver exp_old,exp@GLIBC_2.17\");\n+__asm(\".symver log_old,log@GLIBC_2.17\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.17\");\n+__asm(\".symver pow_old,pow@GLIBC_2.17\");\n #elif defined(__powerpc64__)\n #  ifdef WORDS_BIGENDIAN\n+__asm(\".symver exp_old,exp@GLIBC_2.3\");\n+__asm(\".symver log_old,log@GLIBC_2.3\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.3\");\n+__asm(\".symver pow_old,pow@GLIBC_2.3\");\n #  else\n+__asm(\".symver exp_old,exp@GLIBC_2.17\");\n+__asm(\".symver log_old,log@GLIBC_2.17\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.17\");\n+__asm(\".symver pow_old,pow@GLIBC_2.17\");\n #  endif\n #elif defined(__riscv)\n+__asm(\".symver exp_old,exp@GLIBC_2.27\");\n+__asm(\".symver log_old,log@GLIBC_2.27\");\n __asm(\".symver log2f_old,log2f@GLIBC_2.27\");\n+__asm(\".symver pow_old,pow@GLIBC_2.27\");\n #endif\n+extern \"C\" double __wrap_exp(double x)\n+{\n+    return exp_old(x);\n+}\n+extern \"C\" double __wrap_log(double x)\n+{\n+    return log_old(x);\n+}\n extern \"C\" float __wrap_log2f(float x)\n {\n     return log2f_old(x);\n }\n+extern \"C\" double __wrap_pow(double base, double power)\n+{\n+    return pow_old(base, power);\n+}"
      }
    ]
  }
]