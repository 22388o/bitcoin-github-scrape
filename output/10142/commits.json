[
  {
    "sha": "bf1026412da73b13ada3b4543e88938057362eb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjEwMjY0MTJkYTczYjEzYWRhM2I0NTQzZTg4OTM4MDU3MzYyZWI3",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-04-03T15:07:40Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-04-03T15:07:40Z"
      },
      "message": "Run bitcoin_test-qt under minimal QPA platform\n\nFixes broken \"make check\" reported by Matt Corallo <git@bluematt.me> in\nhttps://github.com/bitcoin/bitcoin/issues/10110\n\nFix was suggested and initially implemented by\nCory Fields <cory-nospam-@coryfields.com> in\nhttps://github.com/bitcoin/bitcoin/pull/10117#issuecomment-290275236",
      "tree": {
        "sha": "d142e319ea05da2493f1c245d5011838f4b0dc12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d142e319ea05da2493f1c245d5011838f4b0dc12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf1026412da73b13ada3b4543e88938057362eb7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1026412da73b13ada3b4543e88938057362eb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf1026412da73b13ada3b4543e88938057362eb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1026412da73b13ada3b4543e88938057362eb7/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb598cfba1cbd23b153584e2454aa49d055ba10a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb598cfba1cbd23b153584e2454aa49d055ba10a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb598cfba1cbd23b153584e2454aa49d055ba10a"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1b339559fc1a46ace208c24245ab95aad46d5347",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf1026412da73b13ada3b4543e88938057362eb7/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf1026412da73b13ada3b4543e88938057362eb7/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=bf1026412da73b13ada3b4543e88938057362eb7",
        "patch": "@@ -130,6 +130,8 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n       if test x$TARGET_OS = xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])"
      },
      {
        "sha": "cae18f41a5c50bc67ad988ed0a33744a360d8cbe",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf1026412da73b13ada3b4543e88938057362eb7/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf1026412da73b13ada3b4543e88938057362eb7/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=bf1026412da73b13ada3b4543e88938057362eb7",
        "patch": "@@ -31,6 +31,9 @@ Q_IMPORT_PLUGIN(qjpcodecs)\n Q_IMPORT_PLUGIN(qtwcodecs)\n Q_IMPORT_PLUGIN(qkrcodecs)\n #else\n+#if defined(QT_QPA_PLATFORM_MINIMAL)\n+Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin);\n+#endif\n #if defined(QT_QPA_PLATFORM_XCB)\n Q_IMPORT_PLUGIN(QXcbIntegrationPlugin);\n #elif defined(QT_QPA_PLATFORM_WINDOWS)\n@@ -53,6 +56,11 @@ int main(int argc, char *argv[])\n \n     bool fInvalid = false;\n \n+    // Prefer the \"minimal\" platform for the test instead of the normal default\n+    // platform (\"xcb\", \"windows\", or \"cocoa\") so tests can't unintentially\n+    // interfere with any background GUIs and don't require extra resources.\n+    setenv(\"QT_QPA_PLATFORM\", \"minimal\", 0);\n+\n     // Don't remove this, it's needed to access\n     // QApplication:: and QCoreApplication:: in the tests\n     QApplication app(argc, argv);"
      },
      {
        "sha": "f794b6b3826402498f0d84b741cac96b2c84b08c",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf1026412da73b13ada3b4543e88938057362eb7/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf1026412da73b13ada3b4543e88938057362eb7/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=bf1026412da73b13ada3b4543e88938057362eb7",
        "patch": "@@ -68,6 +68,18 @@ QModelIndex FindTx(const QAbstractItemModel& model, const uint256& txid)\n }\n \n //! Simple qt wallet tests.\n+//\n+// Test widgets can be debugged interactively calling show() on them and\n+// manually running the event loop, e.g.:\n+//\n+//     sendCoinsDialog.show();\n+//     QEventLoop().exec();\n+//\n+// This also requires overriding the default minimal Qt platform:\n+//\n+//     src/qt/test/test_bitcoin-qt -platform xcb      # Linux\n+//     src/qt/test/test_bitcoin-qt -platform windows  # Windows\n+//     src/qt/test/test_bitcoin-qt -platform cocoa    # macOS\n void WalletTests::walletTests()\n {\n     // Set up wallet and chain with 101 blocks (1 mature block for spending)."
      }
    ]
  }
]