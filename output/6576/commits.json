[
  {
    "sha": "e938122b7ba8723c8cab6de78e8a9b39ad188589",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTM4MTIyYjdiYTg3MjNjOGNhYjZkZTc4ZThhOWIzOWFkMTg4NTg5",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-08-20T10:48:43Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-08-20T10:48:43Z"
      },
      "message": "Stop parsing JSON after first finished construct.\n\nFix https://github.com/bitcoin/bitcoin/issues/6558.  In particular, stop\nparsing JSON after the first object or array is finished.  Check that no\nother garbage follows, and fail the parser if it does.",
      "tree": {
        "sha": "8dc918238e08377ef3ccac660f8fd935e562e31e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dc918238e08377ef3ccac660f8fd935e562e31e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e938122b7ba8723c8cab6de78e8a9b39ad188589",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e938122b7ba8723c8cab6de78e8a9b39ad188589",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e938122b7ba8723c8cab6de78e8a9b39ad188589",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e938122b7ba8723c8cab6de78e8a9b39ad188589/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef30389e2a4a83c2845a2cbdf3a7c2f062404077",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef30389e2a4a83c2845a2cbdf3a7c2f062404077",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef30389e2a4a83c2845a2cbdf3a7c2f062404077"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 23,
      "deletions": 6
    },
    "files": [
      {
        "sha": "ee31c0955b0636387c44082f02350a916d832821",
        "filename": "src/test/univalue_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e938122b7ba8723c8cab6de78e8a9b39ad188589/src/test/univalue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e938122b7ba8723c8cab6de78e8a9b39ad188589/src/test/univalue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/univalue_tests.cpp?ref=e938122b7ba8723c8cab6de78e8a9b39ad188589",
        "patch": "@@ -314,6 +314,21 @@ BOOST_AUTO_TEST_CASE(univalue_readwrite)\n     BOOST_CHECK(obj[\"key3\"].isObject());\n \n     BOOST_CHECK_EQUAL(strJson1, v.write());\n+\n+    /* Check for (correctly reporting) a parsing error if the initial\n+       JSON construct is followed by more stuff.  Note that whitespace\n+       is, of course, exempt.  */\n+\n+    BOOST_CHECK(v.read(\"  {}\\n  \"));\n+    BOOST_CHECK(v.isObject());\n+    BOOST_CHECK(v.read(\"  []\\n  \"));\n+    BOOST_CHECK(v.isArray());\n+\n+    BOOST_CHECK(!v.read(\"@{}\"));\n+    BOOST_CHECK(!v.read(\"{} garbage\"));\n+    BOOST_CHECK(!v.read(\"[]{}\"));\n+    BOOST_CHECK(!v.read(\"{}[]\"));\n+    BOOST_CHECK(!v.read(\"{} 42\"));\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "64591234cb12da4ba8dac3ca9853e8a77b66247f",
        "filename": "src/univalue/univalue_read.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e938122b7ba8723c8cab6de78e8a9b39ad188589/src/univalue/univalue_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e938122b7ba8723c8cab6de78e8a9b39ad188589/src/univalue/univalue_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/univalue_read.cpp?ref=e938122b7ba8723c8cab6de78e8a9b39ad188589",
        "patch": "@@ -244,16 +244,16 @@ bool UniValue::read(const char *raw)\n     bool expectColon = false;\n     vector<UniValue*> stack;\n \n+    string tokenVal;\n+    unsigned int consumed;\n     enum jtokentype tok = JTOK_NONE;\n     enum jtokentype last_tok = JTOK_NONE;\n-    while (1) {\n+    do {\n         last_tok = tok;\n \n-        string tokenVal;\n-        unsigned int consumed;\n         tok = getJsonToken(tokenVal, consumed, raw);\n         if (tok == JTOK_NONE || tok == JTOK_ERR)\n-            break;\n+            return false;\n         raw += consumed;\n \n         switch (tok) {\n@@ -377,9 +377,11 @@ bool UniValue::read(const char *raw)\n         default:\n             return false;\n         }\n-    }\n+    } while (!stack.empty ());\n \n-    if (stack.size() != 0)\n+    /* Check that nothing follows the initial construct (parsed above).  */\n+    tok = getJsonToken(tokenVal, consumed, raw);\n+    if (tok != JTOK_NONE)\n         return false;\n \n     return true;"
      }
    ]
  }
]