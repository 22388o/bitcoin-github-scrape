jonasschnelli,2015-08-20T11:26:04Z,Thanks!\n\nTested ACK.\n,https://github.com/bitcoin/bitcoin/pull/6576#issuecomment-132980743,132980743,
laanwj,2015-08-20T13:31:43Z,utACK. Looks good to me. I remember solving a similar problem in json::spirit shortly ago.\n,https://github.com/bitcoin/bitcoin/pull/6576#issuecomment-133008654,133008654,
domob1812,2015-08-20T15:01:51Z,"Yeah, I actually noticed this due to an inconsistent behaviour between json_spirit and UniValue.  (Note, though, that a different inconsistency remains.  While the new behaviour of UniValue is to error out with anything after the first construct, json_spirit just stops parsing and _ignores_ everything that follows.)\n",https://github.com/bitcoin/bitcoin/pull/6576#issuecomment-133042016,133042016,
laanwj,2015-08-21T08:50:32Z,"> json_spirit just stops parsing and ignores everything that follows\n\nYes, that's what I fixed. I also changed it to error out with trailing garbage. But I didn't notice that UniValue brought back that behavior because the bug (#6226) didn't return: `ParseNonRFCJSONValue` wraps the value in an array to be able to have top-level numbers and booleans, so it was already non-tolerant of trailing gar",https://github.com/bitcoin/bitcoin/pull/6576#issuecomment-133335343,133335343,
laanwj,2015-08-21T08:52:26Z,"Nit: I'd move the definitions of tokenval and consumed here, as they're only used here.\n",https://github.com/bitcoin/bitcoin/pull/6576#discussion_r37616798,37616798,src/univalue/univalue_read.cpp
domob1812,2015-08-21T08:55:09Z,"Well, they are also used in the loop.  That's why I moved them above it.  Of course, we could also define them _both_ locally in the loop _and_ then here.  Would you prefer that?\n",https://github.com/bitcoin/bitcoin/pull/6576#discussion_r37616974,37616974,src/univalue/univalue_read.cpp
laanwj,2015-08-21T08:56:37Z,"Not necessary. I missed that, then, sorry.\n",https://github.com/bitcoin/bitcoin/pull/6576#discussion_r37617066,37617066,src/univalue/univalue_read.cpp
