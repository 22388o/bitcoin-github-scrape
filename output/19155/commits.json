[
  {
    "sha": "eb9c67a4227b78b78d0c697202df147877a84ac2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjljNjdhNDIyN2I3OGI3OGQwYzY5NzIwMmRmMTQ3ODc3YTg0YWMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-06-03T10:54:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-06-03T10:54:59Z"
      },
      "message": "doc: Add historical release notes for 0.20.0",
      "tree": {
        "sha": "57a1016170a8fe266c9eb1be64714c2c8e000848",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57a1016170a8fe266c9eb1be64714c2c8e000848"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb9c67a4227b78b78d0c697202df147877a84ac2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb9c67a4227b78b78d0c697202df147877a84ac2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb9c67a4227b78b78d0c697202df147877a84ac2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb9c67a4227b78b78d0c697202df147877a84ac2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "657b82cef0e8e8695fc189d013a4353bdbebb041",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/657b82cef0e8e8695fc189d013a4353bdbebb041",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/657b82cef0e8e8695fc189d013a4353bdbebb041"
      }
    ],
    "stats": {
      "total": 987,
      "additions": 987,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6fc1606b37d51b6a64e686b438b3917b2fc2eebf",
        "filename": "doc/release-notes/release-notes-0.20.0.md",
        "status": "added",
        "additions": 987,
        "deletions": 0,
        "changes": 987,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb9c67a4227b78b78d0c697202df147877a84ac2/doc/release-notes/release-notes-0.20.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb9c67a4227b78b78d0c697202df147877a84ac2/doc/release-notes/release-notes-0.20.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.20.0.md?ref=eb9c67a4227b78b78d0c697202df147877a84ac2",
        "patch": "@@ -0,0 +1,987 @@\n+0.20.0 Release Notes\n+====================\n+\n+Bitcoin Core version 0.20.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.20.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n+longer supported. Additionally, Bitcoin Core does not yet change appearance\n+when macOS \"dark mode\" is activated.\n+\n+Known Bugs\n+==========\n+\n+The process for generating the source code release (\"tarball\") has changed in an\n+effort to make it more complete, however, there are a few regressions in\n+this release:\n+\n+- The generated `configure` script is currently missing, and you will need to\n+  install autotools and run `./autogen.sh` before you can run\n+  `./configure`. This is the same as when checking out from git.\n+\n+- Instead of running `make` simply, you should instead run\n+  `BITCOIN_GENBUILD_NO_GIT=1 make`.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+#### Removal of BIP61 reject network messages from Bitcoin Core\n+\n+The `-enablebip61` command line option to enable BIP61 has been removed.\n+(#17004)\n+\n+This feature has been disabled by default since Bitcoin Core version 0.18.0.\n+Nodes on the network can not generally be trusted to send valid messages\n+(including reject messages), so this should only ever be used when\n+connected to a trusted node.  Please use the alternatives recommended\n+below if you rely on this removed feature:\n+\n+- Testing or debugging of implementations of the Bitcoin P2P network protocol\n+  should be done by inspecting the log messages that are produced by a recent\n+  version of Bitcoin Core. Bitcoin Core logs debug messages\n+  (`-debug=<category>`) to a stream (`-printtoconsole`) or to a file\n+  (`-debuglogfile=<debug.log>`).\n+\n+- Testing the validity of a block can be achieved by specific RPCs:\n+\n+  - `submitblock`\n+\n+  - `getblocktemplate` with `'mode'` set to `'proposal'` for blocks with\n+    potentially invalid POW\n+\n+- Testing the validity of a transaction can be achieved by specific RPCs:\n+\n+  - `sendrawtransaction`\n+\n+  - `testmempoolaccept`\n+\n+- Wallets should not assume a transaction has propagated to the network\n+  just because there are no reject messages.  Instead, listen for the\n+  transaction to be announced by other peers on the network.  Wallets\n+  should not assume a lack of reject messages means a transaction pays\n+  an appropriate fee.  Instead, set fees using fee estimation and use\n+  replace-by-fee to increase a transaction's fee if it hasn't confirmed\n+  within the desired amount of time.\n+\n+The removal of BIP61 reject message support also has the following minor RPC\n+and logging implications:\n+\n+- `testmempoolaccept` and `sendrawtransaction` no longer return the P2P reject\n+  code when a transaction is not accepted to the mempool. They still return the\n+  verbal reject reason.\n+\n+- Log messages that previously reported the reject code when a transaction was\n+  not accepted to the mempool now no longer report the reject code. The reason\n+  for rejection is still reported.\n+\n+Updated RPCs\n+------------\n+\n+- The RPCs which accept descriptors now accept the new `sortedmulti(...)` descriptor\n+  type which supports multisig scripts where the public keys are sorted\n+  lexicographically in the resulting script.  (#17056)\n+\n+- The `walletprocesspsbt` and `walletcreatefundedpsbt` RPCs now include\n+  BIP32 derivation paths by default for public keys if we know them.\n+  This can be disabled by setting the `bip32derivs` parameter to\n+  `false`.  (#17264)\n+\n+- The `bumpfee` RPC's parameter `totalFee`, which was deprecated in\n+  0.19, has been removed.  (#18312)\n+\n+- The `bumpfee` RPC will return a PSBT when used with wallets that have\n+  private keys disabled.  (#16373)\n+\n+- The `getpeerinfo` RPC now includes a `mapped_as` field to indicate the\n+  mapped Autonomous System used for diversifying peer selection. See the\n+  `-asmap` configuration option described below in _New Settings_.  (#16702)\n+\n+- The `createmultisig` and `addmultisigaddress` RPCs now return an\n+  output script descriptor for the newly created address.  (#18032)\n+\n+Build System\n+------------\n+\n+- OpenSSL is no longer used by Bitcoin Core.  (#17265)\n+\n+- BIP70 support has been fully removed from Bitcoin Core. The\n+  `--enable-bip70` option remains, but it will throw an error during configure.\n+  (#17165)\n+\n+- glibc 2.17 or greater is now required to run the release binaries. This\n+  retains compatibility with RHEL 7, CentOS 7, Debian 8 and Ubuntu 14.04 LTS. (#17538)\n+\n+- The source code archives that are provided with gitian builds no longer contain\n+  any autotools artifacts. Therefore, to build from such source, a user\n+  should run the `./autogen.sh` script from the root of the unpacked archive.\n+  This implies that `autotools` and other required packages are installed on the\n+  user's system. (#18331)\n+\n+New settings\n+------------\n+\n+- New `rpcwhitelist` and `rpcwhitelistdefault` configuration parameters\n+  allow giving certain RPC users permissions to only some RPC calls.\n+  (#12763)\n+\n+- A new `-asmap` configuration option has been added to diversify the\n+  node's network connections by mapping IP addresses Autonomous System\n+  Numbers (ASNs) and then limiting the number of connections made to any\n+  single ASN.  See [issue #16599](https://github.com/bitcoin/bitcoin/issues/16599),\n+  [PR #16702](https://github.com/bitcoin/bitcoin/pull/16702), and the\n+  `bitcoind help` for more information.  This option is experimental and\n+  subject to removal or breaking changes in future releases, so the\n+  legacy /16 prefix mapping of IP addresses remains the default.  (#16702)\n+\n+Updated settings\n+----------------\n+\n+- All custom settings configured when Bitcoin Core starts are now\n+  written to the `debug.log` file to assist troubleshooting.  (#16115)\n+\n+- Importing blocks upon startup via the `bootstrap.dat` file no longer\n+  occurs by default. The file must now be specified with\n+  `-loadblock=<file>`.  (#17044)\n+\n+- The `-debug=db` logging category has been renamed to\n+  `-debug=walletdb` to distinguish it from `coindb`.  The `-debug=db`\n+  option has been deprecated and will be removed in the next major\n+  release.  (#17410)\n+\n+- The `-walletnotify` configuration parameter will now replace any `%w`\n+  in its argument with the name of the wallet generating the\n+  notification.  This is not supported on Windows. (#13339)\n+\n+Removed settings\n+----------------\n+\n+- The `-whitelistforcerelay` configuration parameter has been removed after\n+  it was discovered that it was rendered ineffective in version 0.13 and\n+  hasn't actually been supported for almost four years.  (#17985)\n+\n+GUI changes\n+-----------\n+\n+- The \"Start Bitcoin Core on system login\" option has been removed on macOS.\n+  (#17567)\n+\n+- In the Peers window, the details for a peer now displays a `Mapped AS`\n+  field to indicate the mapped Autonomous System used for diversifying\n+  peer selection. See the `-asmap` configuration option in _New\n+  Settings_, above.  (#18402)\n+\n+- A \"known bug\" [announced](https://bitcoincore.org/en/releases/0.18.0/#wallet-gui)\n+  in the release notes of version 0.18 has been fixed.  The issue\n+  affected anyone who simultaneously used multiple Bitcoin Core wallets\n+  and the GUI coin control feature. (#18894)\n+\n+- For watch-only wallets, creating a new transaction in the Send screen\n+  or fee bumping an existing transaction in the Transactions screen will\n+  automatically copy a Partially-Signed Bitcoin Transaction (PSBT) to\n+  the system clipboard.  This can then be pasted into an external\n+  program such as [HWI](https://github.com/bitcoin-core/HWI) for\n+  signing.  Future versions of Bitcoin Core should support a GUI option\n+  for finalizing and broadcasting PSBTs, but for now the debug console\n+  may be used with the `finalizepsbt` and `sendrawtransaction` RPCs.\n+  (#16944, #17492)\n+\n+Wallet\n+------\n+\n+- The wallet now by default uses bech32 addresses when using RPC, and\n+  creates native segwit change outputs.  (#16884)\n+\n+- The way that output trust was computed has been fixed, which affects\n+  confirmed/unconfirmed balance status and coin selection.  (#16766)\n+\n+- The `gettransaction`, `listtransactions` and `listsinceblock` RPC\n+  responses now also include the height of the block that contains the\n+  wallet transaction, if any.  (#17437)\n+\n+- The `getaddressinfo` RPC has had its `label` field deprecated\n+  (re-enable for this release using the configuration parameter\n+  `-deprecatedrpc=label`).  The `labels` field is altered from returning\n+  JSON objects to returning a JSON array of label names (re-enable\n+  previous behavior for this release using the configuration parameter\n+  `-deprecatedrpc=labelspurpose`).  Backwards compatibility using the\n+  deprecated configuration parameters is expected to be dropped in the\n+  0.21 release.  (#17585, #17578)\n+\n+Documentation changes\n+---------------------\n+\n+- Bitcoin Core's automatically-generated source code documentation is\n+  now available at https://doxygen.bitcoincore.org.  (#17596)\n+\n+Low-level changes\n+=================\n+\n+Utilities\n+---------\n+\n+- The `bitcoin-cli` utility used with the `-getinfo` parameter now\n+  returns a `headers` field with the number of downloaded block headers\n+  on the best headers chain (similar to the `blocks` field that is also\n+  returned) and a `verificationprogress` field that estimates how much\n+  of the best block chain has been synced by the local node.  The\n+  information returned no longer includes the `protocolversion`,\n+  `walletversion`, and `keypoololdest` fields.  (#17302, #17650)\n+\n+- The `bitcoin-cli` utility now accepts a `-stdinwalletpassphrase`\n+  parameter that can be used when calling the `walletpassphrase` and\n+  `walletpassphrasechange` RPCs to read the passphrase from standard\n+  input without echoing it to the terminal, improving security against\n+  anyone who can look at your screen.  The existing `-stdinrpcpass`\n+  parameter is also updated to not echo the passphrase. (#13716)\n+\n+Command line\n+------------\n+\n+- Command line options prefixed with main/test/regtest network names like\n+  `-main.port=8333` `-test.server=1` previously were allowed but ignored. Now\n+  they trigger \"Invalid parameter\" errors on startup. (#17482)\n+\n+New RPCs\n+--------\n+\n+- The `dumptxoutset` RPC outputs a serialized snapshot of the current\n+  UTXO set.  A script is provided in the `contrib/devtools` directory\n+  for generating a snapshot of the UTXO set at a particular block\n+  height.  (#16899)\n+\n+- The `generatetodescriptor` RPC allows testers using regtest mode to\n+  generate blocks that pay an arbitrary output script descriptor.\n+  (#16943)\n+\n+Updated RPCs\n+------------\n+\n+- The `verifychain` RPC default values are now static instead of\n+  depending on the command line options or configuration file\n+  (`-checklevel`, and `-checkblocks`). Users can pass in the RPC\n+  arguments explicitly when they don't want to rely on the default\n+  values. (#18541)\n+\n+- The `getblockchaininfo` RPC's `verificationprogress` field will no\n+  longer report values higher than 1.  Previously it would occasionally\n+  report the chain was more than 100% verified.  (#17328)\n+\n+Tests\n+-----\n+\n+- It is now an error to use an unqualified `walletdir=path` setting in\n+  the config file if running on testnet or regtest networks. The setting\n+  now needs to be qualified as `chain.walletdir=path` or placed in the\n+  appropriate `[chain]` section. (#17447)\n+\n+- `-fallbackfee` was 0 (disabled) by default for the main chain, but\n+  0.0002 by default for the test chains. Now it is 0 by default for all\n+  chains. Testnet and regtest users will have to add\n+  `fallbackfee=0.0002` to their configuration if they weren't setting it\n+  and they want it to keep working like before. (#16524)\n+\n+Build system\n+------------\n+\n+- Support is provided for building with the Android Native Development\n+  Kit (NDK).  (#16110)\n+\n+0.20.0 change log\n+=================\n+\n+### Mining\n+- #18742 miner: Avoid stack-use-after-return in validationinterface (MarcoFalke)\n+\n+### Block and transaction handling\n+- #15283 log: Fix UB with bench on genesis block (instagibbs)\n+- #16507 feefilter: Compute the absolute fee rather than stored rate (instagibbs)\n+- #16688 log: Add validation interface logging (jkczyz)\n+- #16805 log: Add timing information to FlushStateToDisk() (jamesob)\n+- #16902 O(1) `OP_IF/NOTIF/ELSE/ENDIF` script implementation (sipa)\n+- #16945 introduce CChainState::GetCoinsCacheSizeState (jamesob)\n+- #16974 Walk pindexBestHeader back to ChainActive().Tip() if it is invalid (TheBlueMatt)\n+- #17004 Remove REJECT code from CValidationState (jnewbery)\n+- #17080 Explain why `fCheckDuplicateInputs` can not be skipped and remove it (MarcoFalke)\n+- #17328 GuessVerificationProgress: cap the ratio to 1 (darosior)\n+- #17399 Templatize ValidationState instead of subclassing (jkczyz)\n+- #17407 node: Add reference to mempool in NodeContext (MarcoFalke)\n+- #17708 prevector: Avoid misaligned member accesses (ajtowns)\n+- #17850,#17896,#17957,#18021,#18021,#18112 Serialization improvements (sipa)\n+- #17925 Improve UpdateTransactionsFromBlock with Epochs (JeremyRubin)\n+- #18002 Abstract out script execution out of `VerifyWitnessProgram()` (sipa)\n+- #18388 Make VerifyWitnessProgram use a Span stack (sipa)\n+- #18433 serialization: prevent int overflow for big Coin::nHeight (pierreN)\n+- #18500 chainparams: Bump assumed valid hash (MarcoFalke)\n+- #18551 Do not clear validationinterface entries being executed (sipa)\n+\n+### P2P protocol and network code\n+- #15437 Remove BIP61 reject messages (MarcoFalke)\n+- #16702 Supply and use asmap to improve IP bucketing in addrman (naumenkogs)\n+- #16851 Continue relaying transactions after they expire from mapRelay (ajtowns)\n+- #17164 Avoid allocating memory for addrKnown where we don't need it (naumenkogs)\n+- #17243 tools: add PoissonNextSend method that returns mockable time (amitiuttarwar)\n+- #17251 SocketHandler logs peer id for close and disconnect (Sjors)\n+- #17573 Seed RNG with precision timestamps on receipt of net messages (TheBlueMatt)\n+- #17624 Fix an uninitialized read in ProcessMessage(\u2026, \"tx\", \u2026) when receiving a transaction we already have (practicalswift)\n+- #17754 Don't allow resolving of std::string with embedded NUL characters. Add tests (practicalswift)\n+- #17758 Fix CNetAddr::IsRFC2544 comment + tests (tynes)\n+- #17812 config, net, test: Asmap feature refinements and functional tests (jonatack)\n+- #17951 Use rolling bloom filter of recent block txs for AlreadyHave() check (sdaftuar)\n+- #17985 Remove forcerelay of rejected txs (MarcoFalke)\n+- #18023 Fix some asmap issues (sipa)\n+- #18054 Reference instead of copy in BlockConnected range loop (jonatack)\n+- #18376 Fix use-after-free in tests (vasild)\n+- #18454 Make addr relay mockable, add test (MarcoFalke)\n+- #18458 Add missing `cs_vNodes` lock (MarcoFalke)\n+- #18506 Hardcoded seeds update for 0.20 (laanwj)\n+- #18808 Drop unknown types in getdata (jnewbery)\n+- #18962 Only send a getheaders for one block in an INV (jnewbery)\n+\n+### Wallet\n+- #13339 Replace %w by wallet name in -walletnotify script (promag)\n+- #15931 Remove GetDepthInMainChain dependency on locked chain interface (ariard)\n+- #16373 bumpfee: Return PSBT when wallet has privkeys disabled (instagibbs)\n+- #16524 Disable -fallbackfee by default (jtimon)\n+- #16766 Make IsTrusted scan parents recursively (JeremyRubin)\n+- #16884 Change default address type to bech32 (instagibbs)\n+- #16911 Only check the hash of transactions loaded from disk (achow101)\n+- #16923 Handle duplicate fileid exception (promag)\n+- #17056 descriptors: Introduce sortedmulti descriptor (achow101)\n+- #17070 Avoid showing GUI popups on RPC errors (MarcoFalke)\n+- #17138 Remove wallet access to some node arguments (jnewbery)\n+- #17237 LearnRelatedScripts only if KeepDestination (promag)\n+- #17260 Split some CWallet functions into new LegacyScriptPubKeyMan (achow101)\n+- #17261 Make ScriptPubKeyMan an actual interface and the wallet to have multiple (achow101)\n+- #17290 Enable BnB coin selection for preset inputs and subtract fee from outputs (achow101)\n+- #17373 Various fixes and cleanup to keypool handling in LegacyScriptPubKeyMan and CWallet (achow101)\n+- #17410 Rename `db` log category to `walletdb` (like `coindb`) (laanwj)\n+- #17444 Avoid showing GUI popups on RPC errors (take 2) (MarcoFalke)\n+- #17447 Make -walletdir network only (promag)\n+- #17537 Cleanup and move opportunistic and superfluous TopUp()s (achow101)\n+- #17553 Remove out of date comments for CalculateMaximumSignedTxSize (instagibbs)\n+- #17568 Fix when sufficient preset inputs and subtractFeeFromOutputs (achow101)\n+- #17677 Activate watchonly wallet behavior for LegacySPKM only (instagibbs)\n+- #17719 Document better -keypool as a look-ahead safety mechanism (ariard)\n+- #17843 Reset reused transactions cache (fjahr)\n+- #17889 Improve CWallet:MarkDestinationsDirty (promag)\n+- #18034 Get the OutputType for a descriptor (achow101)\n+- #18067 Improve LegacyScriptPubKeyMan::CanProvide script recognition (ryanofsky)\n+- #18115 Pass in transactions and messages for signing instead of exporting the private keys (achow101)\n+- #18192,#18546 Bugfix: Wallet: Safely deal with change in the address book (luke-jr)\n+- #18204 descriptors: Improve descriptor cache and cache xpubs (achow101)\n+- #18274 rpc/wallet: Initialize nFeeRequired to avoid using garbage value on failure (kallewoof)\n+- #18312 Remove deprecated fee bumping by totalFee (jonatack)\n+- #18338 Fix wallet unload race condition (promag)\n+\n+### RPC and other APIs\n+- #12763 Add RPC Whitelist Feature from #12248 (JeremyRubin)\n+- #13716 cli: `-stdinwalletpassphrase` and non-echo stdin passwords (kallewoof)\n+- #16689 Add missing fields to wallet rpc help output (ariard)\n+- #16821 Fix bug where duplicate PSBT keys are accepted (erasmospunk)\n+- #16899 UTXO snapshot creation (dumptxoutset)\n+- #17156 psbt: Check that various indexes and amounts are within bounds (achow101)\n+- #17264 Set default bip32derivs to true for psbt methods (Sjors)\n+- #17283 improve getaddressinfo test coverage, help, code docs (jonatack)\n+- #17302 cli: Add \"headers\" and \"verificationprogress\" to -getinfo (laanwj)\n+- #17318 replace asserts in RPC code with `CHECK_NONFATAL` and add linter (adamjonas)\n+- #17437 Expose block height of wallet transactions (promag)\n+- #17519 Remove unused `COINBASE_FLAGS` (narula)\n+- #17578 Simplify getaddressinfo labels, deprecate previous behavior (jonatack)\n+- #17585 deprecate getaddressinfo label (jonatack)\n+- #17746 Remove vector copy from listtransactions (promag)\n+- #17809 Auto-format RPCResult (MarcoFalke)\n+- #18032 Output a descriptor in createmultisig and addmultisigaddress (achow101)\n+- #18122 Update validateaddress RPCExamples to bech32 (theStack)\n+- #18208 Change RPCExamples to bech32 (yusufsahinhamza)\n+- #18268 Remove redundant types from descriptions (docallag)\n+- #18346 Document an RPCResult for all calls; Enforce at compile time (MarcoFalke)\n+- #18396 Add missing HelpExampleRpc for getblockfilter (theStack)\n+- #18398 Fix broken RPCExamples for waitforblock(height) (theStack)\n+- #18444 Remove final comma for last entry of fixed-size arrays/objects in RPCResult (luke-jr)\n+- #18459 Remove unused getbalances() code (jonatack)\n+- #18484 Correctly compute redeemScript from witnessScript for signrawtransaction (achow101)\n+- #18487 Fix rpcRunLater race in walletpassphrase (promag)\n+- #18499 Make rpc documentation not depend on call-time rpc args (MarcoFalke)\n+- #18532 Avoid initialization-order-fiasco on static CRPCCommand tables (MarcoFalke)\n+- #18541 Make verifychain default values static, not depend on global args (MarcoFalke)\n+- #18809 Do not advertise dumptxoutset as a way to flush the chainstate (MarcoFalke)\n+- #18814 Relock wallet only if most recent callback (promag)\n+\n+### GUI\n+- #15023 Restore RPC Console to non-wallet tray icon menu (luke-jr)\n+- #15084 Don't disable the sync overlay when wallet is disabled (benthecarman)\n+- #15098 Show addresses for \"SendToSelf\" transactions (hebasto)\n+- #15756 Add shortcuts for tab tools (promag)\n+- #16944 create PSBT with watch-only wallet (Sjors)\n+- #16964 Change sendcoins dialogue Yes to Send (instagibbs)\n+- #17068 Always generate `bitcoinstrings.cpp` on `make translate` (D4nte)\n+- #17096 Rename debug window (Zero-1729)\n+- #17105 Make RPCConsole::TabTypes an enum class (promag)\n+- #17125 Add toolTip and placeholderText to sign message fields (dannmat)\n+- #17165 Remove BIP70 support (fanquake)\n+- #17180 Improved tooltip for send amount field (JeremyCrookshank)\n+- #17186 Add placeholder text to the sign message field (Danny-Scott)\n+- #17195 Send amount placeholder value (JeremyCrookshank)\n+- #17226 Fix payAmount tooltip in SendCoinsEntry (promag)\n+- #17360 Cleaning up hide button tool tip (Danny-Scott)\n+- #17446 Changed tooltip for 'Label' & 'Message' text fields to be more clear (dannmat)\n+- #17453 Fix intro dialog labels when the prune button is toggled (hebasto)\n+- #17474 Bugfix: GUI: Recognise `NETWORK_LIMITED` in formatServicesStr (luke-jr)\n+- #17492 Bump fee returns PSBT on clipboard for watchonly-only wallets (instagibbs)\n+- #17567 Remove macOS start on login code (fanquake)\n+- #17587 Show watch-only balance in send screen (Sjors)\n+- #17694 Disable 3rd-party tx-urls when wallet disabled (brakmic)\n+- #17696 Force set nPruneSize in QSettings after the intro dialog (hebasto)\n+- #17702 Move static placeholder texts to forms (laanwj)\n+- #17826 Log Qt related info (hebasto)\n+- #17886 Restore English translation option (achow101)\n+- #17906 Set CConnman byte counters earlier to avoid uninitialized reads (ryanofsky)\n+- #17935 Hide HD & encryption icons when no wallet loaded (brakmic)\n+- #17998 Shortcut to close ModalOverlay (emilengler)\n+- #18007 Bugfix: GUI: Hide the HD/encrypt icons earlier so they get re-shown if another wallet is open (luke-jr)\n+- #18060 Drop PeerTableModel dependency to ClientModel (promag)\n+- #18062 Fix unintialized WalletView::progressDialog (promag)\n+- #18091 Pass clientmodel changes from walletframe to walletviews (jonasschnelli)\n+- #18101 Fix deprecated QCharRef usage (hebasto)\n+- #18121 Throttle GUI update pace when -reindex (hebasto)\n+- #18123 Fix race in WalletModel::pollBalanceChanged (ryanofsky)\n+- #18160 Avoid Wallet::GetBalance in WalletModel::pollBalanceChanged (promag)\n+- #18360 Bump transifex slug and update English translations for 0.20 (laanwj)\n+- #18402 Display mapped AS in peers info window (jonatack)\n+- #18492 Translations update pre-branch (laanwj)\n+- #18549 Fix Window -> Minimize menu item (hebasto)\n+- #18578 Fix leak in CoinControlDialog::updateView (promag)\n+- #18894 Fix manual coin control with multiple wallets loaded (promag)\n+\n+### Build system\n+- #16667 Remove mingw linker workaround from win gitian descriptor (fanquake)\n+- #16669 Use new fork of osslsigncode for windows gitian signing (fanquake)\n+- #16949 Only pass --disable-dependency-tracking to packages that understand it (fanquake)\n+- #17008 Bump libevent to 2.1.11 in depends (stefanwouldgo)\n+- #17029 gitian: Various improvements for windows descriptor (dongcarl)\n+- #17033 Disable _FORTIFY_SOURCE when enable-debug (achow101)\n+- #17057 Switch to upstream libdmg-hfsplus (fanquake)\n+- #17066 Remove workaround for ancient libtool (hebasto)\n+- #17074 Added double quotes (mztriz)\n+- #17087 Add variable printing target to Makefiles (dongcarl)\n+- #17118 depends macOS: point --sysroot to SDK (Sjors)\n+- #17231 Fix boost mac cross build with clang 9+ (theuni)\n+- #17265 Remove OpenSSL (fanquake)\n+- #17284 Update retry to current version (RandyMcMillan)\n+- #17308 nsis: Write to correct filename in first place (dongcarl)\n+- #17324,#18099 Update univalue subtree (MarcoFalke)\n+- #17398 Update leveldb to 1.22+ (laanwj)\n+- #17409 Avoid hardcoded libfaketime dir in gitian (MarcoFalke)\n+- #17466 Fix C{,XX} pickup (dongcarl)\n+- #17483 Set gitian arch back to amd64 (MarcoFalke)\n+- #17486 Make Travis catch unused variables (Sjors)\n+- #17538 Bump minimum libc to 2.17 for release binaries (fanquake)\n+- #17542 Create test utility library from src/test/util/ (brakmic)\n+- #17545 Remove libanl.so.1 from ALLOWED_LIBRARIES (fanquake)\n+- #17547 Fix configure report about qr (hebasto)\n+- #17569 Allow export of environ symbols and work around rv64 toolchain issue (laanwj)\n+- #17647 lcov: filter depends from coverage reports (nijynot)\n+- #17658 Add ability to skip building qrencode (fanquake)\n+- #17678 Support for S390X and POWER targets (MarcoFalke)\n+- #17682 util: Update tinyformat to upstream (laanwj)\n+- #17698 Don't configure `xcb_proto` (fanquake)\n+- #17730 Remove Qt networking features (fanquake)\n+- #17738 Remove linking librt for backwards compatibility (fanquake)\n+- #17740 Remove configure checks for win libraries we don't link against (fanquake)\n+- #17741 Included `test_bitcoin-qt` in msvc build (sipsorcery)\n+- #17756 Remove `WINDOWS_BITS` from build system (fanquake)\n+- #17769 Set `AC_PREREQ` to 2.69 (fanquake)\n+- #17880 Add -Wdate-time to Werror flags (fanquake)\n+- #17910 Remove double `LIBBITCOIN_SERVER` linking (fanquake)\n+- #17928 Consistent use of package variable (Bushstar)\n+- #17933 guix: Pin Guix using `guix time-machine` (dongcarl)\n+- #17948 pass -fno-ident in Windows gitian descriptor (fanquake)\n+- #18003 Remove --large-address-aware linker flag (fanquake)\n+- #18004 Don't embed a build-id when building libdmg-hfsplus (fanquake)\n+- #18051 Fix behavior when `ALLOW_HOST_PACKAGES` unset (hebasto)\n+- #18059 Add missing attributes to Win installer (fanquake)\n+- #18104 Skip i686 build by default in guix and gitian (MarcoFalke)\n+- #18107 Add `cov_fuzz` target (MarcoFalke)\n+- #18135 Add --enable-determinism configure flag (fanquake)\n+- #18145 Add Wreturn-type to Werror flags, check on more Travis machines (Sjors)\n+- #18264 Remove Boost Chrono (fanquake)\n+- #18290 Set minimum Automake version to 1.13 (hebasto)\n+- #18320 guix: Remove now-unnecessary gcc make flag (dongcarl)\n+- #18331 Use git archive as source tarball (hebasto)\n+- #18397 Fix libevent linking for `bench_bitcoin` binary (hebasto)\n+- #18426 scripts: `Previous_release`: improve behaviour on failed download (theStack)\n+- #18429 Remove double `LIBBITCOIN_SERVER` from bench-Makefile (brakmic)\n+- #18528 Create `test_fuzz` library from src/test/fuzz/fuzz.cpp (brakmic)\n+- #18558 Fix boost detection for arch armv7l (hebasto)\n+- #18598 gitian: Add missing automake package to gitian-win-signer.yml (achow101)\n+- #18676 Check libevent minimum version in configure script (hebasto)\n+- #18945 Ensure source tarball has leading directory name (laanwj)\n+\n+### Platform support\n+- #16110 Add Android NDK support (icota)\n+- #16392 macOS toolchain update (fanquake)\n+- #16569 Increase init file stop timeout (setpill)\n+- #17151 Remove OpenSSL PRNG seeding (Windows, Qt only) (fanquake)\n+- #17365 Update README.md with working Android targets and API levels (icota)\n+- #17521 Only use D-Bus with Qt on linux (fanquake)\n+- #17550 Set minimum supported macOS to 10.12 (fanquake)\n+- #17592 Appveyor install libevent[thread] vcpkg (sipsorcery)\n+- #17660 Remove deprecated key from macOS Info.plist (fanquake)\n+- #17663 Pass `-dead_strip_dylibs` to ld on macOS (fanquake)\n+- #17676 Don't use OpenGL in Qt on macOS (fanquake)\n+- #17686 Add `-bind_at_load` to macOS hardened LDFLAGS (fanquake)\n+- #17787 scripts: Add macho pie check to security-check.py (fanquake)\n+- #17800 random: don't special case clock usage on macOS (fanquake)\n+- #17863 scripts: Add macho dylib checks to symbol-check.py (fanquake)\n+- #17899 msvc: Ignore msvc linker warning and update to msvc build instructions (sipsorcery)\n+- #17916 windows: Enable heap terminate-on-corruption (fanquake)\n+- #18082 logging: Enable `thread_local` usage on macos (fanquake)\n+- #18108 Fix `.gitignore` policy in `build_msvc` directory (hebasto)\n+- #18295 scripts: Add macho lazy bindings check to security-check.py (fanquake)\n+- #18358 util: Fix compilation with mingw-w64 7.0.0 (fanquake)\n+- #18359 Fix sysctl() detection on macOS (fanquake)\n+- #18364 random: remove getentropy() fallback for macOS < 10.12 (fanquake)\n+- #18395 scripts: Add pe dylib checking to symbol-check.py (fanquake)\n+- #18415 scripts: Add macho tests to test-security-check.py (fanquake)\n+- #18425 releases: Update with new Windows code signing certificate (achow101)\n+- #18702 Fix ASLR for bitcoin-cli on Windows (fanquake)\n+\n+### Tests and QA\n+- #12134 Build previous releases and run functional tests (Sjors)\n+- #13693 Add coverage to estimaterawfee and estimatesmartfee (Empact)\n+- #13728 lint: Run the ci lint stage on mac (Empact)\n+- #15443 Add getdescriptorinfo functional test (promag)\n+- #15888 Add `wallet_implicitsegwit` to test the ability to transform keys between address types (luke-jr)\n+- #16540 Add `ASSERT_DEBUG_LOG` to unit test framework (MarcoFalke)\n+- #16597 travis: Run full test suite on native macos (Sjors)\n+- #16681 Use self.chain instead of 'regtest' in all current tests (jtimon)\n+- #16786 add unit test for wallet watch-only methods involving PubKeys (theStack)\n+- #16943 Add generatetodescriptor RPC (MarcoFalke)\n+- #16973 Fix `combine_logs.py` for AppVeyor build (mzumsande)\n+- #16975 Show debug log on unit test failure (MarcoFalke)\n+- #16978 Seed test RNG context for each test case, print seed (MarcoFalke)\n+- #17009, #17018, #17050, #17051, #17071, #17076, #17083, #17093, #17109, #17113, #17136, #17229, #17291, #17357, #17771, #17777, #17917, #17926, #17972, #17989, #17996, #18009, #18029, #18047, #18126, #18176, #18206, #18353, #18363, #18407, #18417, #18423, #18445, #18455, #18565 Add fuzzing harnesses (practicalswift)\n+- #17011 ci: Use busybox utils for one build (MarcoFalke)\n+- #17030 Fix Python Docstring to include all Args (jbampton)\n+- #17041 ci: Run tests on arm (MarcoFalke)\n+- #17069 Pass fuzzing inputs as constant references (practicalswift)\n+- #17091 Add test for loadblock option and linearize scripts (fjahr)\n+- #17108 fix \"tx-size-small\" errors after default address change (theStack)\n+- #17121 Speed up `wallet_backup` by whitelisting peers (immediate tx relay) (theStack)\n+- #17124 Speed up `wallet_address_types` by whitelisting peers (immediate tx relay) (theStack)\n+- #17140 Fix bug in `blockfilter_index_tests` (jimpo)\n+- #17199 use default address type (bech32) for `wallet_bumpfee` tests (theStack)\n+- #17205 ci: Enable address sanitizer (asan) stack-use-after-return checking (practicalswift)\n+- #17206 Add testcase to simulate bitcoin schema in leveldb (adamjonas)\n+- #17209 Remove no longer needed UBSan suppressions (issues fixed). Add documentation (practicalswift)\n+- #17220 Add unit testing for the CompressScript function (adamjonas)\n+- #17225 Test serialisation as part of deserialisation fuzzing. Test round-trip equality where possible (practicalswift)\n+- #17228 Add RegTestingSetup to `setup_common` (MarcoFalke)\n+- #17233 travis: Run unit and functional tests on native arm (MarcoFalke)\n+- #17235 Skip unnecessary fuzzer initialisation. Hold ECCVerifyHandle only when needed (practicalswift)\n+- #17240 ci: Disable functional tests on mac host (MarcoFalke)\n+- #17254 Fix `script_p2sh_tests` `OP_PUSHBACK2/4` missing (adamjonas)\n+- #17267 bench: Fix negative values and zero for -evals flag (nijynot)\n+- #17275 pubkey: Assert CPubKey's ECCVerifyHandle precondition (practicalswift)\n+- #17288 Added TestWrapper class for interactive Python environments (jachiang)\n+- #17292 Add new mempool benchmarks for a complex pool (JeremyRubin)\n+- #17299 add reason checks for non-standard txs in `test_IsStandard` (theStack)\n+- #17322 Fix input size assertion in `wallet_bumpfee.py` (instagibbs)\n+- #17327 Add `rpc_fundrawtransaction` logging (jonatack)\n+- #17330 Add `shrinkdebugfile=0` to regtest bitcoin.conf (sdaftuar)\n+- #17340 Speed up fundrawtransaction test (jnewbery)\n+- #17345 Do not instantiate CAddrDB for static call CAddrDB::Read() (hebasto)\n+- #17362 Speed up `wallet_avoidreuse`, add logging (jonatack)\n+- #17363 add \"diamond\" unit test to MempoolAncestryTests (theStack)\n+- #17366 Reset global args between test suites (MarcoFalke)\n+- #17367 ci: Run non-cross-compile builds natively (MarcoFalke)\n+- #17378 TestShell: Fix typos & implement cleanups (jachiang)\n+- #17384 Create new test library (MarcoFalke)\n+- #17387 `wallet_importmulti`: use addresses of the same type as being imported (achow101)\n+- #17388 Add missing newline in `util_ChainMerge` test (ryanofsky)\n+- #17390 Add `util_ArgParsing` test (ryanofsky)\n+- #17420 travis: Rework `cache_err_msg` (MarcoFalke)\n+- #17423 ci: Make ci system read-only on the git work tree (MarcoFalke)\n+- #17435 check custom ancestor limit in `mempool_packages.py` (theStack)\n+- #17455 Update valgrind suppressions (practicalswift)\n+- #17461 Check custom descendant limit in `mempool_packages.py` (theStack)\n+- #17469 Remove fragile `assert_memory_usage_stable` (MarcoFalke)\n+- #17470 ci: Use clang-8 for fuzzing to run on aarch64 ci systems (MarcoFalke)\n+- #17480 Add unit test for non-standard txs with too large scriptSig (theStack)\n+- #17497 Skip tests when utils haven't been compiled (fanquake)\n+- #17502 Add unit test for non-standard bare multisig txs (theStack)\n+- #17511 Add bounds checks before base58 decoding (sipa)\n+- #17517 ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le (MarcoFalke)\n+- #17522 Wait until mempool is loaded in `wallet_abandonconflict` (MarcoFalke)\n+- #17532 Add functional test for non-standard txs with too large scriptSig (theStack)\n+- #17541 Add functional test for non-standard bare multisig txs (theStack)\n+- #17555 Add unit test for non-standard txs with wrong nVersion (dspicher)\n+- #17571 Add `libtest_util` library to msvc build configuration (sipsorcery)\n+- #17591 ci: Add big endian platform - s390x (elichai)\n+- #17593 Move more utility functions into test utility library (mzumsande)\n+- #17633 Add option --valgrind to run the functional tests under Valgrind (practicalswift)\n+- #17635 ci: Add centos 7 build (hebasto)\n+- #17641 Add unit test for leveldb creation with unicode path (sipsorcery)\n+- #17674 Add initialization order fiasco detection in Travis (practicalswift)\n+- #17675 Enable tests which are incorrectly skipped when running `test_runner.py --usecli` (practicalswift)\n+- #17685 Fix bug in the descriptor parsing fuzzing harness (`descriptor_parse`) (practicalswift)\n+- #17705 re-enable CLI test support by using EncodeDecimal in json.dumps() (fanquake)\n+- #17720 add unit test for non-standard \"scriptsig-not-pushonly\" txs (theStack)\n+- #17767 ci: Fix qemu issues (MarcoFalke)\n+- #17793 ci: Update github actions ci vcpkg cache on msbuild update (hebasto)\n+- #17806 Change filemode of `rpc_whitelist.py` (emilengler)\n+- #17849 ci: Fix brew python link (hebasto)\n+- #17851 Add `std::to_string` to list of locale dependent functions (practicalswift)\n+- #17893 Fix double-negative arg test (hebasto)\n+- #17900 ci: Combine 32-bit build with centos 7 build (theStack)\n+- #17921 Test `OP_CSV` empty stack fail in `feature_csv_activation.py` (theStack)\n+- #17931 Fix `p2p_invalid_messages` failing in Python 3.8 because of warning (elichai)\n+- #17947 add unit test for non-standard txs with too large tx size (theStack)\n+- #17959 Check specific reject reasons in `feature_csv_activation.py` (theStack)\n+- #17984 Add p2p test for forcerelay permission (MarcoFalke)\n+- #18001 Updated appveyor job to checkout a specific vcpkg commit ID (sipsorcery)\n+- #18008 fix fuzzing using libFuzzer on macOS (fanquake)\n+- #18013 bench: Fix benchmarks filters (elichai)\n+- #18018 reset fIsBareMultisigStd after bare-multisig tests (fanquake)\n+- #18022 Fix appveyor `test_bitcoin` build of `*.raw` (MarcoFalke)\n+- #18037 util: Allow scheduler to be mocked (amitiuttarwar)\n+- #18056 ci: Check for submodules (emilengler)\n+- #18069 Replace 'regtest' leftovers by self.chain (theStack)\n+- #18081 Set a name for CI Docker containers (fanquake)\n+- #18109 Avoid hitting some known minor tinyformat issues when fuzzing strprintf(\u2026) (practicalswift)\n+- #18155 Add harness which fuzzes EvalScript and VerifyScript using a fuzzed signature checker (practicalswift)\n+- #18159 Add --valgrind option to `test/fuzz/test_runner.py` for running fuzzing test cases under valgrind (practicalswift)\n+- #18166 ci: Run fuzz testing test cases (bitcoin-core/qa-assets) under valgrind to catch memory errors (practicalswift)\n+- #18172 Transaction expiry from mempool (0xB10C)\n+- #18181 Remove incorrect assumptions in `validation_flush_tests` (MarcoFalke)\n+- #18183 Set `catch_system_errors=no` on boost unit tests (MarcoFalke)\n+- #18195 Add `cost_of_change` parameter assertions to `bnb_search_test` (yancyribbens)\n+- #18209 Reduce unneeded whitelist permissions in tests (MarcoFalke)\n+- #18211 Disable mockforward scheduler unit test for now (MarcoFalke)\n+- #18213 Fix race in `p2p_segwit` (MarcoFalke)\n+- #18224 Make AnalyzePSBT next role calculation simple, correct (instagibbs)\n+- #18228 Add missing syncwithvalidationinterfacequeue (MarcoFalke)\n+- #18247 Wait for both veracks in `add_p2p_connection` (MarcoFalke)\n+- #18249 Bump timeouts to accomodate really slow disks (MarcoFalke)\n+- #18255 Add `bad-txns-*-toolarge` test cases to `invalid_txs` (MarcoFalke)\n+- #18263 rpc: change setmocktime check to use IsMockableChain (gzhao408)\n+- #18285 Check that `wait_until` returns if time point is in the past (MarcoFalke)\n+- #18286 Add locale fuzzer to `FUZZERS_MISSING_CORPORA` (practicalswift)\n+- #18292 fuzz: Add `assert(script == decompressed_script)` (MarcoFalke)\n+- #18299 Update `FUZZERS_MISSING_CORPORA` to enable regression fuzzing for all harnesses in master (practicalswift)\n+- #18300 fuzz: Add option to merge input dir to test runner (MarcoFalke)\n+- #18305 Explain why test logging should be used (MarcoFalke)\n+- #18306 Add logging to `wallet_listsinceblock.py` (jonatack)\n+- #18311 Bumpfee test fix (instagibbs)\n+- #18314 Add deserialization fuzzing of SnapshotMetadata (`utxo_snapshot`) (practicalswift)\n+- #18319 fuzz: Add missing `ECC_Start` to `key_io` test (MarcoFalke)\n+- #18334 Add basic test for BIP 37 (MarcoFalke)\n+- #18350 Fix mining to an invalid target + ensure that a new block has the correct hash internally (TheQuantumPhysicist)\n+- #18378 Bugfix & simplify bn2vch using `int.to_bytes` (sipa)\n+- #18393 Don't assume presence of `__builtin_mul_overflow(\u2026)` in `MultiplicationOverflow(\u2026)` fuzzing harness (practicalswift)\n+- #18406 add executable flag for `rpc_estimatefee.py` (theStack)\n+- #18420 listsinceblock block height checks (jonatack)\n+- #18430 ci: Only clone bitcoin-core/qa-assets when fuzzing (MarcoFalke)\n+- #18438 ci: Use homebrew addon on native macos (hebasto)\n+- #18447 Add coverage for script parse error in ParseScript (pierreN)\n+- #18472 Remove unsafe `BOOST_TEST_MESSAGE` (MarcoFalke)\n+- #18474 check that peer is connected when calling sync_* (MarcoFalke)\n+- #18477 ci: Use focal for fuzzers (MarcoFalke)\n+- #18481 add BIP37 'filterclear' test to p2p_filter.py (theStack)\n+- #18496 Remove redundant `sync_with_ping` after `add_p2p_connection` (jonatack)\n+- #18509 fuzz: Avoid running over all inputs after merging them (MarcoFalke)\n+- #18510 fuzz: Add CScriptNum::getint coverage (MarcoFalke)\n+- #18514 remove rapidcheck integration and tests (fanquake)\n+- #18515 Add BIP37 remote crash bug [CVE-2013-5700] test to `p2p_filter.py` (theStack)\n+- #18516 relax bumpfee `dust_to_fee` txsize an extra vbyte (jonatack)\n+- #18518 fuzz: Extend descriptor fuzz test (MarcoFalke)\n+- #18519 fuzz: Extend script fuzz test (MarcoFalke)\n+- #18521 fuzz: Add `process_messages` harness (MarcoFalke)\n+- #18529 Add fuzzer version of randomized prevector test (sipa)\n+- #18534 skip backwards compat tests if not compiled with wallet (fanquake)\n+- #18540 `wallet_bumpfee` assertion fixup (jonatack)\n+- #18543 Use one node to avoid a race due to missing sync in `rpc_signrawtransaction` (MarcoFalke)\n+- #18561 Properly raise FailedToStartError when rpc shutdown before warmup finished (MarcoFalke)\n+- #18562 ci: Run unit tests sequential once (MarcoFalke)\n+- #18563 Fix `unregister_all_during_call` cleanup (ryanofsky)\n+- #18566 Set `-use_value_profile=1` when merging fuzz inputs (MarcoFalke)\n+- #18757 Remove enumeration of expected deserialization exceptions in ProcessMessage(\u2026) fuzzer (practicalswift)\n+- #18878 Add test for conflicted wallet tx notifications (ryanofsky)\n+- #18975 Remove const to work around compiler error on xenial (laanwj)\n+\n+### Documentation\n+- #16947 Doxygen-friendly script/descriptor.h comments (ch4ot1c)\n+- #16983 Add detailed info about Bitcoin Core files (hebasto)\n+- #16986 Doxygen-friendly CuckooCache comments (ch4ot1c)\n+- #17022 move-only: Steps for \"before major release branch-off\" (MarcoFalke)\n+- #17026 Update bips.md for default bech32 addresses in 0.20.0 (MarcoFalke)\n+- #17081 Fix Makefile target in benchmarking.md (theStack)\n+- #17102 Add missing indexes/blockfilter/basic to doc/files.md (MarcoFalke)\n+- #17119 Fix broken bitcoin-cli examples (andrewtoth)\n+- #17134 Add switch on enum example to developer notes (hebasto)\n+- #17142 Update macdeploy README to include all files produced by `make deploy` (za-kk)\n+- #17146 github: Add warning for bug reports (laanwj)\n+- #17157 Added instructions for how to add an upsteam to forked repo (dannmat)\n+- #17159 Add a note about backporting (carnhofdaki)\n+- #17169 Correct function name in ReportHardwareRand() (fanquake)\n+- #17177 Describe log files + consistent paths in test READMEs (fjahr)\n+- #17239 Changed miniupnp links to https (sandakersmann)\n+- #17281 Add developer note on `c_str()` (laanwj)\n+- #17285 Bip70 removal follow-up (fjahr)\n+- #17286 Fix help-debug -checkpoints (ariard)\n+- #17309 update MSVC instructions to remove Qt OpenSSL linking (fanquake)\n+- #17339 Add template for good first issues (michaelfolkson)\n+- #17351 Fix some misspellings (RandyMcMillan)\n+- #17353 Add ShellCheck to lint tests dependencies (hebasto)\n+- #17370 Update doc/bips.md with recent changes in master (MarcoFalke)\n+- #17393 Added regtest config for linearize script (gr0kchain)\n+- #17411 Add some better examples for scripted diff (laanwj)\n+- #17503 Remove bitness from bitcoin-qt help message and manpage (laanwj)\n+- #17539 Update and improve Developer Notes (hebasto)\n+- #17561 Changed MiniUPnPc link to https in dependencies.md (sandakersmann)\n+- #17596 Change doxygen URL to doxygen.bitcoincore.org (laanwj)\n+- #17598 Update release process with latest changes (MarcoFalke)\n+- #17617 Unify unix epoch time descriptions (jonatack)\n+- #17637 script: Add keyserver to verify-commits readme (emilengler)\n+- #17648 Rename wallet-tool references to bitcoin-wallet (hel-o)\n+- #17688 Add \"ci\" prefix to CONTRIBUTING.md (hebasto)\n+- #17751 Use recommended shebang approach in documentation code block (hackerrdave)\n+- #17752 Fix directory path for secp256k1 subtree in developer-notes (hackerrdave)\n+- #17772 Mention PR Club in CONTRIBUTING.md (emilengler)\n+- #17804 Misc RPC help fixes (MarcoFalke)\n+- #17819 Developer notes guideline on RPCExamples addresses (jonatack)\n+- #17825 Update dependencies.md (hebasto)\n+- #17873 Add to Doxygen documentation guidelines (jonatack)\n+- #17907 Fix improper Doxygen inline comments (Empact)\n+- #17942 Improve fuzzing docs for macOS users (fjahr)\n+- #17945 Fix doxygen errors (Empact)\n+- #18025 Add missing supported rpcs to doc/descriptors.md (andrewtoth)\n+- #18070 Add note about `brew doctor` (givanse)\n+- #18125 Remove PPA note from release-process.md (fanquake)\n+- #18170 Minor grammatical changes and flow improvements (travinkeith)\n+- #18212 Add missing step in win deployment instructions (dangershony)\n+- #18219 Add warning against wallet.dat re-use (corollari)\n+- #18253 Correct spelling errors in comments (Empact)\n+- #18278 interfaces: Describe and follow some code conventions (ryanofsky)\n+- #18283 Explain rebase policy in CONTRIBUTING.md (MarcoFalke)\n+- #18340 Mention MAKE=gmake workaround when building on a BSD (fanquake)\n+- #18341 Replace remaining literal BTC with `CURRENCY_UNIT` (domob1812)\n+- #18342 Add fuzzing quickstart guides for libFuzzer and afl-fuzz (practicalswift)\n+- #18344 Fix nit in getblockchaininfo (stevenroose)\n+- #18379 Comment fix merkle.cpp (4d55397500)\n+- #18382 note the costs of fetching all pull requests (vasild)\n+- #18391 Update init and reduce-traffic docs for -blocksonly (glowang)\n+- #18464 Block-relay-only vs blocksonly (MarcoFalke)\n+- #18486 Explain new test logging (MarcoFalke)\n+- #18505 Update webchat URLs in README.md (SuriyaaKudoIsc)\n+- #18513 Fix git add argument (HashUnlimited)\n+- #18577 Correct scripted-diff example link (yahiheb)\n+- #18589 Fix naming of macOS SDK and clarify version (achow101)\n+\n+### Miscellaneous\n+- #15600 lockedpool: When possible, use madvise to avoid including sensitive information in core dumps (luke-jr)\n+- #15934 Merge settings one place instead of five places (ryanofsky)\n+- #16115 On bitcoind startup, write config args to debug.log (LarryRuane)\n+- #16117 util: Replace boost sleep with std sleep (MarcoFalke)\n+- #16161 util: Fix compilation errors in support/lockedpool.cpp (jkczyz)\n+- #16802 scripts: In linearize, search for next position of magic bytes rather than fail (takinbo)\n+- #16889 Add some general std::vector utility functions (sipa)\n+- #17049 contrib: Bump gitian descriptors for 0.20 (MarcoFalke)\n+- #17052 scripts: Update `copyright_header` script to include additional files (GChuf)\n+- #17059 util: Simplify path argument for cblocktreedb ctor (hebasto)\n+- #17191 random: Remove call to `RAND_screen()` (Windows only) (fanquake)\n+- #17192 util: Add `check_nonfatal` and use it in src/rpc (MarcoFalke)\n+- #17218 Replace the LogPrint function with a macro (jkczyz)\n+- #17266 util: Rename decodedumptime to parseiso8601datetime (elichai)\n+- #17270 Feed environment data into RNG initializers (sipa)\n+- #17282 contrib: Remove accounts from bash completion (fanquake)\n+- #17293 Add assertion to randrange that input is not 0 (JeremyRubin)\n+- #17325 log: Fix log message for -par=1 (hebasto)\n+- #17329 linter: Strip trailing / in path for git-subtree-check (jnewbery)\n+- #17336 scripts: Search for first block file for linearize-data with some block files pruned (Rjected)\n+- #17361 scripts: Lint gitian descriptors with shellcheck (hebasto)\n+- #17482 util: Disallow network-qualified command line options (ryanofsky)\n+- #17507 random: mark RandAddPeriodic and SeedPeriodic as noexcept (fanquake)\n+- #17527 Fix CPUID subleaf iteration (sipa)\n+- #17604 util: Make schedulebatchpriority advisory only (fanquake)\n+- #17650 util: Remove unwanted fields from bitcoin-cli -getinfo (malevolent)\n+- #17671 script: Fixed wget call in gitian-build.py (willyko)\n+- #17699 Make env data logging optional (sipa)\n+- #17721 util: Don't allow base58 decoding of non-base58 strings. add base58 tests (practicalswift)\n+- #17750 util: Change getwarnings parameter to bool (jnewbery)\n+- #17753 util: Don't allow base32/64-decoding or parsemoney(\u2026) on strings with embedded nul characters. add tests (practicalswift)\n+- #17823 scripts: Read suspicious hosts from a file instead of hardcoding (sanjaykdragon)\n+- #18162 util: Avoid potential uninitialized read in `formatiso8601datetime(int64_t)` by checking `gmtime_s`/`gmtime_r` return value (practicalswift)\n+- #18167 Fix a violation of C++ standard rules where unions are used for type-punning (TheQuantumPhysicist)\n+- #18225 util: Fail to parse empty string in parsemoney (MarcoFalke)\n+- #18270 util: Fail to parse whitespace-only strings in parsemoney(\u2026) (instead of parsing as zero) (practicalswift)\n+- #18316 util: Helpexamplerpc formatting (jonatack)\n+- #18357 Fix missing header in sync.h (promag)\n+- #18412 script: Fix `script_err_sig_pushonly` error string (theStack)\n+- #18416 util: Limit decimal range of numbers parsescript accepts (pierreN)\n+- #18503 init: Replace `URL_WEBSITE` with `PACKAGE_URL` (MarcoFalke)\n+- #18526 Remove PID file at the very end (hebasto)\n+- #18553 Avoid non-trivial global constants in SHA-NI code (sipa)\n+- #18665 Do not expose and consider `-logthreadnames` when it does not work (hebasto)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 0xb10c\n+- 251\n+- 4d55397500\n+- Aaron Clauson\n+- Adam Jonas\n+- Albert\n+- Amiti Uttarwar\n+- Andrew Chow\n+- Andrew Toth\n+- Anthony Towns\n+- Antoine Riard\n+- Ava Barron\n+- Ben Carman\n+- Ben Woosley\n+- Block Mechanic\n+- Brian Solon\n+- Bushstar\n+- Carl Dong\n+- Carnhof Daki\n+- Cory Fields\n+- Daki Carnhof\n+- Dan Gershony\n+- Daniel Kraft\n+- dannmat\n+- Danny-Scott\n+- darosior\n+- David O'Callaghan\n+- Dominik Spicher\n+- Elichai Turkel\n+- Emil Engler\n+- emu\n+- Fabian Jahr\n+- fanquake\n+- Filip Gospodinov\n+- Franck Royer\n+- Gast\u00f3n I. Silva\n+- gchuf\n+- Gleb Naumenko\n+- Gloria Zhao\n+- glowang\n+- Gr0kchain\n+- Gregory Sanders\n+- hackerrdave\n+- Harris\n+- hel0\n+- Hennadii Stepanov\n+- ianliu\n+- Igor Cota\n+- James Chiang\n+- James O'Beirne\n+- Jan Beich\n+- Jan Sarenik\n+- Jeffrey Czyz\n+- Jeremy Rubin\n+- JeremyCrookshank\n+- Jim Posen\n+- John Bampton\n+- John L. Jegutanis\n+- John Newbery\n+- Jon Atack\n+- Jon Layton\n+- Jonas Schnelli\n+- Jo\u00e3o Barbosa\n+- Jorge Tim\u00f3n\n+- Karl-Johan Alm\n+- kodslav\n+- Larry Ruane\n+- Luke Dashjr\n+- malevolent\n+- MapleLaker\n+- marcaiaf\n+- MarcoFalke\n+- Marius Kj\u00e6rstad\n+- Mark Erhardt\n+- Mark Tyneway\n+- Martin Erlandsson\n+- Martin Zumsande\n+- Matt Corallo\n+- Matt Ward\n+- Michael Folkson\n+- Michael Polzer\n+- Micky Yun Chan\n+- Neha Narula\n+- nijynot\n+- naumenkogs\n+- NullFunctor\n+- Peter Bushnell\n+- pierrenn\n+- Pieter Wuille\n+- practicalswift\n+- randymcmillan\n+- Rjected\n+- Russell Yanofsky\n+- Samer Afach\n+- Samuel Dobson\n+- Sanjay K\n+- Sebastian Falbesoner\n+- setpill\n+- Sjors Provoost\n+- Stefan Richter\n+- stefanwouldgo\n+- Steven Roose\n+- Suhas Daftuar\n+- Suriyaa Sundararuban\n+- TheCharlatan\n+- Tim Akinbo\n+- Travin Keith\n+- tryphe\n+- Vasil Dimov\n+- Willy Ko\n+- Wilson Ccasihue S\n+- Wladimir J. van der Laan\n+- Yahia Chiheb\n+- Yancy Ribbens\n+- Yusuf Sahin HAMZA\n+- Zakk\n+- Zero\n+\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      }
    ]
  }
]