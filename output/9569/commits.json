[
  {
    "sha": "2838d28f209e6944eceb3df66efb0df9ead6db37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODM4ZDI4ZjIwOWU2OTQ0ZWNlYjNkZjY2ZWZiMGRmOWVhZDZkYjM3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-01-17T18:39:48Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-01-17T20:07:49Z"
      },
      "message": "Setting -blocksonly sets -maxmempool to zero.\n\nNodes running in -blocksonly mode do not send and receive transactions\noutside blocks. They do not have a mempool, so -maxmempool should be set\nto 0.\n\nUnused mempool memory can be used for the UTXO coincache (PR #8610) so\nnot setting -maxmempool to 0 can cause to coincache to grow larger than\nexpected.\n\nIf -blocksonly is set and -maxmempool is set to anything other than 0,\nerror and exit. If -blocksonly is set and -maxmempool is not set,\nimplicitly set -maxmempool to 0.",
      "tree": {
        "sha": "e3aeaa0bda71420c2e35880a6a50d01665d460c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3aeaa0bda71420c2e35880a6a50d01665d460c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2838d28f209e6944eceb3df66efb0df9ead6db37",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2838d28f209e6944eceb3df66efb0df9ead6db37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2838d28f209e6944eceb3df66efb0df9ead6db37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2838d28f209e6944eceb3df66efb0df9ead6db37/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6696b4635ceb9b47aaa63244bff9032fa7b08354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6696b4635ceb9b47aaa63244bff9032fa7b08354",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6696b4635ceb9b47aaa63244bff9032fa7b08354"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 21,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2d98f5c1053234746cd92de5a11fb1028c148da8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 5,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2838d28f209e6944eceb3df66efb0df9ead6db37/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2838d28f209e6944eceb3df66efb0df9ead6db37/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2838d28f209e6944eceb3df66efb0df9ead6db37",
        "patch": "@@ -888,6 +888,15 @@ bool AppInitParameterInteraction()\n     if (nMaxConnections < nUserMaxConnections)\n         InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\"), nUserMaxConnections, nMaxConnections));\n \n+    // if running in blocksonly mode, mempool size should be zero.\n+    if (GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n+        if (SoftSetArg(\"-maxmempool\", std::string(\"0\"))) {\n+            LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -maxmempool=0\\n\", __func__);\n+        } else if (GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) > 0) {\n+            return InitError(_(\"-blocksonly nodes do not have a mempool. -maxmempool should not be set.\"));\n+        }\n+    }\n+\n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n     fDebug = mapMultiArgs.count(\"-debug\");\n@@ -931,11 +940,18 @@ bool AppInitParameterInteraction()\n     else\n         LogPrintf(\"Validating signatures for all blocks.\\n\");\n \n-    // mempool limits\n-    int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n-    int64_t nMempoolSizeMin = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n-    if (nMempoolSizeMax < 0 || nMempoolSizeMax < nMempoolSizeMin)\n-        return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), std::ceil(nMempoolSizeMin / 1000000.0)));\n+    if (!GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n+        // Verify that -maxmempool size is at least\n+        // 10*-limitdescendantsize, as it is easy for an attacker\n+        // to play games with the cheapest -limitdescendantsize\n+        // transactions. -blocksonly nodes do not have a mempool, so we\n+        // don't need to do this check.\n+        int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+        int64_t nMempoolSizeMin = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n+        if (nMempoolSizeMax < 0 || nMempoolSizeMax < nMempoolSizeMin) {\n+            return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), std::ceil(nMempoolSizeMin / 1000000.0)));\n+        }\n+    }\n     // incremental relay fee sets the minimimum feerate increase necessary for BIP 125 replacement in the mempool\n     // and the amount the mempool min fee increases above the feerate of txs evicted due to mempool limiting.\n     if (IsArgSet(\"-incrementalrelayfee\"))"
      }
    ]
  }
]