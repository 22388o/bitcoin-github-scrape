Sjors,2018-02-28T14:10:23Z,"> add a parameter to feebumper::CreateTransaction to return whether a non-change output was reduced\n\n@kallewoof can that be part of #12096, e.g. if `reduce_output==-2` it picks the biggest output?",https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-369250471,369250471,
luke-jr,2018-02-28T16:24:57Z,"I don't think this is the right route. While I think users should be able to reduce outputs if desired, we should by default offer to add inputs, not reduce outputs.",https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-369294887,369294887,
promag,2018-02-28T16:52:09Z,"@luke-jr I think that discussion is for #12096. Also see https://github.com/bitcoin/bitcoin/pull/12096#issuecomment-356089931.\n\nEdit: ok you were there already.\n\n☝️IIUC `feebumper::CreateTransaction` doesn't add inputs. I've suggested that in https://github.com/bitcoin/bitcoin/pull/12096#issuecomment-355578491",https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-369304250,369304250,
luke-jr,2018-02-28T17:07:12Z,"Indeed, to rephrase: users should be able to reduce outputs; it just should require explicitly asking to do so, and shouldn't be the default/recommended behaviour.",https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-369309361,369309361,
bedri,2018-02-28T20:07:19Z,"If a customer paying for a good for the vendor and vendor agrees to pay the\ntransaction fee, then the customer can make a transaction with nearly zero\nfee which will wait a long time for confirmations and then increase the fee\nto the agreed amount and accepting the reduction in the output. So that\nvendor will be able to pay the transaction fee.\nIf the vendor does not willing to pay the transa",https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-369366212,369366212,
Sjors,2018-03-01T08:52:37Z,"@luke-jr `Cancel` is the default option, but without an alternative I can see how users would just click OK even if it's not a good idea. Perhaps it's better to hold back this PR until `feebumper::CreateTransaction` supports adding inputs. By default the `OK` button would just add an input. We could show each of the destination addresses with a check box ""reduce amount"". That would seem like a saf",https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-369520094,369520094,
Sjors,2018-05-15T11:20:52Z,Closing until `feebumper::CreateTransaction` supports adding inputs. The UI should only reduce outputs if the user explicitly opts in to that (e.g. when they're sweeping all their funds to some other place).,https://github.com/bitcoin/bitcoin/pull/12565#issuecomment-389131957,389131957,
promag,2018-02-28T12:58:00Z,Missing lock?,https://github.com/bitcoin/bitcoin/pull/12565#discussion_r171235800,171235800,src/qt/walletmodel.cpp
promag,2018-02-28T13:04:54Z,"Nit, and the diff is smaller:\n```cpp\nQString questionString = tr(...);\nif (reduce_output != -1) {\n     questionString = tr(...);\n}",https://github.com/bitcoin/bitcoin/pull/12565#discussion_r171237505,171237505,src/qt/walletmodel.cpp
Sjors,2018-02-28T14:12:56Z,Is there good documentation about when locks are appropriate? Other than: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#lockingmutex-usage-notes,https://github.com/bitcoin/bitcoin/pull/12565#discussion_r171256207,171256207,src/qt/walletmodel.cpp
promag,2018-02-28T14:15:21Z,`mapWallet` is protected by `cs_wallet`. If this is moved to `feebumper::CreateTransaction` then the lock is already held there.,https://github.com/bitcoin/bitcoin/pull/12565#discussion_r171256896,171256896,src/qt/walletmodel.cpp
