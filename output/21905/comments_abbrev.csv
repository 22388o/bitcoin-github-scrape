MarcoFalke,2021-05-10 14:52:58,Please remove the suppression if the goal of this pull is to fix it,https://github.com/bitcoin/bitcoin/pull/21905#issuecomment-836797619,836797619,
practicalswift,2021-05-10 19:31:06,"Concept ACK\n\nLast time I checked (early April) this was the only remaining `-fsanitize=integer` warning in `protocol.cpp`. In other words you should be able to remove the suppression for `protocol.cpp` as part of this PR :) \n\nTo limit the scope of this PR and to guarantee preservation of current behaviour I would suggest keeping `std::numeric_limits<uint32_t>::max()` as the initial value. ",https://github.com/bitcoin/bitcoin/pull/21905#issuecomment-837202176,837202176,
laanwj,2021-05-12 12:34:15,"Code review ACK 9c891b64ffd14bc8216dbd5eb60816043af265b6\n\n> Here or follow up it could even drop the constructor and ditch memset calls and just intialize arrays like char pchCommand[COMMAND_SIZE]{};\n\nAgree, would be nice to do this, though I think this PR is good (and self-contained) as-is. ",https://github.com/bitcoin/bitcoin/pull/21905#issuecomment-839734158,839734158,
laanwj,2021-05-10 14:51:19,"Good catch. Haven't checked if changing from -1 to 0 has no impact (but I guess not), but if we're changing this anyway, maybe move initialization to the class definition\n```c++\nclass CMessageHeader\n{\n⋮ \n    uint32_t nMessageSize{0};\n⋮ \n}\n```\nNot sure if the same is possible for the arrays but that would be even better.",https://github.com/bitcoin/bitcoin/pull/21905#discussion_r629427504,629427504,src/protocol.cpp
Crypt-iQ,2021-05-12 14:27:05,"I think I can tackle this in another PR, thanks for the suggestion",https://github.com/bitcoin/bitcoin/pull/21905#discussion_r631092917,631092917,src/protocol.cpp
