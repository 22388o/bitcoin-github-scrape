[
  {
    "sha": "d37d95a9ea2cd45573aab1b588b9cee06434a30c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzdkOTVhOWVhMmNkNDU1NzNhYWIxYjU4OGI5Y2VlMDY0MzRhMzBj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-16T16:40:00Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-07-08T22:27:52Z"
      },
      "message": "torcontrol: Query Tor for correct -onion configuration",
      "tree": {
        "sha": "fa133dad193da3c5bf186d7b7f8ef75ca8923eb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa133dad193da3c5bf186d7b7f8ef75ca8923eb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d37d95a9ea2cd45573aab1b588b9cee06434a30c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d37d95a9ea2cd45573aab1b588b9cee06434a30c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d37d95a9ea2cd45573aab1b588b9cee06434a30c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d37d95a9ea2cd45573aab1b588b9cee06434a30c/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4129134e844f78a89f8515cf30dad4b6074703c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4129134e844f78a89f8515cf30dad4b6074703c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4129134e844f78a89f8515cf30dad4b6074703c7"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 50,
      "deletions": 4
    },
    "files": [
      {
        "sha": "878309f15a38ee9f32223dce47b789274ee0f330",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 4,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d95a9ea2cd45573aab1b588b9cee06434a30c/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d95a9ea2cd45573aab1b588b9cee06434a30c/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=d37d95a9ea2cd45573aab1b588b9cee06434a30c",
        "patch": "@@ -326,6 +326,53 @@ TorController::~TorController()\n     }\n }\n \n+void TorController::get_socks_cb(TorControlConnection& _conn, const TorControlReply& reply)\n+{\n+    // NOTE: We can only get here if -onion is unset\n+    std::string socks_location;\n+    if (reply.code == 250) {\n+        for (const auto& line : reply.lines) {\n+            if (0 == line.compare(0, 20, \"net/listeners/socks=\")) {\n+                const std::string port_list_str = line.substr(20);\n+                std::vector<std::string> port_list;\n+                boost::split(port_list, port_list_str, boost::is_any_of(\" \"));\n+                for (auto& portstr : port_list) {\n+                    if (portstr.empty()) continue;\n+                    if ((portstr[0] == '\"' || portstr[0] == '\\'') && (*portstr.rbegin() == portstr[0])) {\n+                        portstr = portstr.substr(1, portstr.size() - 2);\n+                        if (portstr.empty()) continue;\n+                    }\n+                    socks_location = portstr;\n+                    if (0 == portstr.compare(0, 10, \"127.0.0.1:\")) {\n+                        // Prefer localhost - ignore other ports\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+        if (!socks_location.empty()) {\n+            LogPrint(BCLog::TOR, \"tor: Get SOCKS port command yielded %s\\n\", socks_location);\n+        } else {\n+            LogPrintf(\"tor: Get SOCKS port command returned nothing\\n\");\n+        }\n+    } else if (reply.code == 510) {  // 510 Unrecognized command\n+        LogPrintf(\"tor: Get SOCKS port command failed with unrecognized command (You probably should upgrade Tor)\\n\");\n+    } else {\n+        LogPrintf(\"tor: Get SOCKS port command failed; error code %d\\n\", reply.code);\n+    }\n+\n+    if (socks_location.empty()) {\n+        // Fallback to old behaviour\n+        socks_location = \"127.0.0.1\";\n+    }\n+\n+    CService resolved(LookupNumeric(socks_location, 9050));\n+    LogPrint(BCLog::TOR, \"tor: Configuring onion proxy for %s\\n\", resolved.ToStringIPPort());\n+    proxyType addrOnion = proxyType(resolved, true);\n+    SetProxy(NET_ONION, addrOnion);\n+    SetReachable(NET_ONION, true);\n+}\n+\n void TorController::add_onion_cb(TorControlConnection& _conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n@@ -369,10 +416,7 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n         // Now that we know Tor is running setup the proxy for onion addresses\n         // if -onion isn't set to something else.\n         if (gArgs.GetArg(\"-onion\", \"\") == \"\") {\n-            CService resolved(LookupNumeric(\"127.0.0.1\", 9050));\n-            proxyType addrOnion = proxyType(resolved, true);\n-            SetProxy(NET_ONION, addrOnion);\n-            SetReachable(NET_ONION, true);\n+            _conn.Command(\"GETINFO net/listeners/socks\", std::bind(&TorController::get_socks_cb, this, std::placeholders::_1, std::placeholders::_2));\n         }\n \n         // Finally - now create the service"
      },
      {
        "sha": "75464b148e1f1cf1e9d56bc59c5d3de73d03e3c9",
        "filename": "src/torcontrol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d95a9ea2cd45573aab1b588b9cee06434a30c/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d95a9ea2cd45573aab1b588b9cee06434a30c/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=d37d95a9ea2cd45573aab1b588b9cee06434a30c",
        "patch": "@@ -140,6 +140,8 @@ class TorController\n     std::vector<uint8_t> clientNonce;\n \n public:\n+    /** Callback for GETINFO net/listeners/socks result */\n+    void get_socks_cb(TorControlConnection& conn, const TorControlReply& reply);\n     /** Callback for ADD_ONION result */\n     void add_onion_cb(TorControlConnection& conn, const TorControlReply& reply);\n     /** Callback for AUTHENTICATE result */"
      }
    ]
  }
]