sipa,2018-05-09T15:33:20Z,"@jtimon Hybrid public keys (the 0x06 and 0x07 ones) are stupid, but were supported by OpenSSL, and because of that they're supported in Bitcoin. Nothing we can do about that.",https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-387780085,387780085,
instagibbs,2018-05-09T15:46:23Z,light tACK,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-387784444,387784444,
Empact,2018-05-16T02:42:21Z,Concept ACK! Much simpler way to handle these 3 cases.,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-389377003,389377003,
jonasschnelli,2018-05-16T06:20:18Z,"Nice!\nutACK 2fc4fdd0945a3800af8213676182ebb2c63689d8",https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-389407717,389407717,
gmaxwell,2018-05-25T21:35:37Z,ACK.,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392193576,392193576,
Empact,2018-05-26T00:31:33Z,utACK fa1f642,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392220544,392220544,
Empact,2018-05-26T00:43:17Z,re-utACK 89736a9 just addresses comments above,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392221612,392221612,
promag,2018-05-26T08:47:55Z,utACK 89736a9.,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392247533,392247533,
jl2012,2018-05-30T09:07:51Z,utACK c814e2e,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-393087972,393087972,
laanwj,2018-05-30T14:50:34Z,utACK c814e2e7e81fd01fcb07f4a28435741bdc463801,https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-393192197,393192197,
jonasschnelli,2018-08-30T09:09:17Z,This change has the side effect that invalid pubkeys (with correct size of 33 or 65) in bare multisig are now non-standard (see #14104),https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-417247415,417247415,
laanwj,2018-05-09T11:18:42Z,Nice to get rid of these fake opcodes here.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187007787,187007787,src/script/script.h
jtimon,2018-05-09T14:22:46Z,Souldn't this return false if it's op_0 too? or are 0 required sigs multisigs valid?,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187057045,187057045,src/script/standard.cpp
jtimon,2018-05-09T14:26:06Z,"Same here, shouldn't OP_0 be invalid here too?\nIf 0 is allowed, why not just ```opcode < OP_0 || opcode > OP_16```?",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187058162,187058162,src/script/standard.cpp
instagibbs,2018-05-09T15:17:38Z,"key count can be 0, I think. The only checks in the interpreter I see are for negative numbers.",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076163,187076163,src/script/standard.cpp
instagibbs,2018-05-09T15:18:36Z,Redundant check here? We know the size.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076481,187076481,src/script/standard.cpp
instagibbs,2018-05-09T15:18:41Z,Redundant check here? We know the size.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076517,187076517,src/script/standard.cpp
instagibbs,2018-05-09T15:19:18Z,We could just use proper constants in the lines above for more belt and suspenders.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076751,187076751,src/script/standard.cpp
sipa,2018-05-09T15:31:48Z,"OP_0 is 0, OP_1 is 81. They aren't continuous.",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081361,187081361,src/script/standard.cpp
sipa,2018-05-09T15:32:15Z,`CpubKey::ValidSize` checks the data-dependent size (depending on what the first byte is).,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081525,187081525,src/script/standard.cpp
sipa,2018-05-09T15:36:30Z,I'm trying to stick to the original logic as close as possible; optimizations / other tweaks can happen later.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187082915,187082915,src/script/standard.cpp
laanwj,2018-05-10T11:25:22Z,Agree with @sipa here. One step at a time is easier to review.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187304823,187304823,src/script/standard.cpp
laanwj,2018-05-10T12:42:42Z,"Shouldn't it check the opcodes here?\nOh I guess not, all the push opcodes valid here will return non-empty data, and `CPubKey::ValidSize` rejects empty data.",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187318313,187318313,src/script/standard.cpp
laanwj,2018-05-10T12:48:38Z,An isOP_N(opcode) helper function would make this (and the expression above) slightly better readable.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187319600,187319600,src/script/standard.cpp
sipa,2018-05-12T20:31:47Z,Indeed (that's also what the old code does).,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782539,187782539,src/script/standard.cpp
sipa,2018-05-12T20:32:25Z,I added an `IsSmallInteger` function for this (which would be distinct from `IsOP_N` by not accepting `OP_1NEGATE`).,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782556,187782556,src/script/standard.cpp
Empact,2018-05-16T02:06:18Z,"CPubKey::PUBLIC_KEY_SIZE == 65, would add clarity",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485616,188485616,src/script/standard.cpp
Empact,2018-05-16T02:06:45Z,"CPubKey::COMPRESSED_PUBLIC_KEY_SIZE == 33, would add clarity",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485673,188485673,src/script/standard.cpp
Empact,2018-05-16T02:10:46Z,"Incidentally, I have #12461 to make these references more succinct.",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188486083,188486083,src/script/standard.cpp
Empact,2018-05-16T02:36:58Z,"See also `IsToKeyID` in compressor.cpp, which looks equivalent.\n\nCould split this up as `CScript::IsPayToPubkeyHash`, and do the unpacking in `Solver`, ala `IsPayToScriptHash`. Would make the case handling more consistent in Solver.",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489076,188489076,src/script/standard.cpp
Empact,2018-05-16T02:37:31Z,"See also `IsToPubKey` in compressor, which looks equivalent.",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489132,188489132,src/script/standard.cpp
sipa,2018-05-17T00:15:07Z,Done.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808027,188808027,src/script/standard.cpp
sipa,2018-05-17T00:15:28Z,Done.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808070,188808070,src/script/standard.cpp
sipa,2018-05-17T00:21:15Z,"I'd rather not merging with the versions in compressor - they may end up living separate lives as the standard templates change.\n\n",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808820,188808820,src/script/standard.cpp
Empact,2018-05-26T00:29:29Z,nit: this `required == 0` check could be an earlier return,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191033653,191033653,src/script/standard.cpp
Empact,2018-05-26T00:30:43Z,Maybe worth noting these casts are safe due to small integer limits?,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191033725,191033725,src/script/standard.cpp
sipa,2018-05-26T00:39:12Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191034228,191034228,src/script/standard.cpp
sipa,2018-05-26T00:39:18Z,Done.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191034237,191034237,src/script/standard.cpp
promag,2018-05-26T08:46:36Z,"nit\n```cpp\nreturn it + 1 == script.end();\n```",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191043595,191043595,src/script/standard.cpp
sipa,2018-05-26T18:24:31Z,Done.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191055774,191055774,src/script/standard.cpp
jl2012,2018-05-29T16:53:35Z,what about `script.back() == OP_CHECKSIG`?,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191497856,191497856,src/script/standard.cpp
jl2012,2018-05-29T17:02:47Z,"if you remove `opcode == OP_0` here, you can remove `if (required == 0) return false;` below",https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191500689,191500689,src/script/standard.cpp
sipa,2018-05-29T21:42:08Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191583502,191583502,src/script/standard.cpp
sipa,2018-05-29T21:42:15Z,Done.,https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191583530,191583530,src/script/standard.cpp
