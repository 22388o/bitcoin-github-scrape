promag,2018-03-05T21:13:43Z,utACK after squash.,https://github.com/bitcoin/bitcoin/pull/12604#issuecomment-370567811,370567811,
laanwj,2018-03-05T21:17:48Z,utACK ,https://github.com/bitcoin/bitcoin/pull/12604#issuecomment-370568989,370568989,
eklitzke,2018-03-06T05:27:24Z,Updated with 741f0177c53ae536801a67c8ec194d6be3505d2d to fix const correctness.,https://github.com/bitcoin/bitcoin/pull/12604#issuecomment-370667823,370667823,
jonasschnelli,2018-03-06T05:44:51Z,"Nice!\nutACK 741f0177c53ae536801a67c8ec194d6be3505d2d",https://github.com/bitcoin/bitcoin/pull/12604#issuecomment-370670631,370670631,
practicalswift,2018-03-06T06:13:28Z,utACK 741f0177c53ae536801a67c8ec194d6be3505d2d,https://github.com/bitcoin/bitcoin/pull/12604#issuecomment-370675374,370675374,
laanwj,2018-03-05T20:23:58Z,"We might want to skip this call (and the one after) if BCLog::LEVELDB is disabled, with the string parsing and floating point arithmetic it seems a lot of overhead for a log message that will be ignored anyway.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172317130,172317130,src/dbwrapper.cpp
eklitzke,2018-03-05T20:28:58Z,"Good observation, fixed.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172318417,172318417,src/dbwrapper.cpp
promag,2018-03-05T20:30:57Z,Use http://en.cppreference.com/w/cpp/string/basic_string/stoul instead.,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172318882,172318882,src/dbwrapper.cpp
promag,2018-03-05T20:32:05Z,Could be `const`?,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172319158,172319158,src/dbwrapper.h
promag,2018-03-05T20:32:19Z,"Nit, space after `:`.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172319216,172319216,src/dbwrapper.cpp
promag,2018-03-05T20:33:38Z,"Nit, initialize `= 0`.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172319558,172319558,src/dbwrapper.cpp
promag,2018-03-05T20:34:14Z,"Nit, same line.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172319697,172319697,src/dbwrapper.cpp
promag,2018-03-05T20:34:55Z,"Nit\n```cpp\nif (log_memory) {\n    double mem_after = ...;\n    LogPrint(BCLog::LEVELDB, ...);\n}",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172319860,172319860,src/dbwrapper.cpp
promag,2018-03-05T20:39:12Z,"Suggestion:\n```cpp\nif (!pdb->GetProperty(...)) {\n    LogPrint(BCLog::LEVELDB, ""Failed to get approximate-memory-usage property\n"");\n    return 0;\n}\n\nreturn stoul(memory);\n```",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172320929,172320929,src/dbwrapper.cpp
promag,2018-03-05T20:43:11Z,"BTW, could use `path` in the debug instead?\n - relevant considering #11687\n - CDBWrapper constructor also logs path. ",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172321892,172321892,src/dbwrapper.cpp
sipa,2018-03-05T20:55:04Z,Nit: braces whenever the then branch is not on the same line.,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172325031,172325031,src/dbwrapper.cpp
promag,2018-03-05T20:55:54Z,"Maybe it's not possible, since [`GetProperty` is not const](https://github.com/google/leveldb/blob/41172a24016bc29fc795ed504737392587f54e3d/include/leveldb/db.h#L121)",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172325286,172325286,src/dbwrapper.h
eklitzke,2018-03-05T20:58:49Z,done,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172326050,172326050,src/dbwrapper.cpp
eklitzke,2018-03-05T20:59:46Z,"Right, unless you want to give into the temptation of const cast.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172326328,172326328,src/dbwrapper.h
eklitzke,2018-03-05T21:01:14Z,done,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172326745,172326745,src/dbwrapper.cpp
eklitzke,2018-03-05T21:01:54Z,done,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172326945,172326945,src/dbwrapper.cpp
eklitzke,2018-03-05T21:02:29Z,done,https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172327094,172327094,src/dbwrapper.cpp
eklitzke,2018-03-05T21:02:48Z,"I added braces, which I think is what you mean here?",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172327169,172327169,src/dbwrapper.cpp
eklitzke,2018-03-05T21:03:11Z,done (although I think it's fine to keep unused variables uninitialized),https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172327292,172327292,src/dbwrapper.cpp
eklitzke,2018-03-05T21:06:16Z,"Added space. I kind of like the short path in the logs because it makes the lines more readable, what if I did the following:\n * Add new name parameter to constructor\n * Chainstate/blocks databases will pass in ""chainstate"" ""blocks"" etc. to explicitly name the object\n * If an explicit name is omitted the path will be logged, and this pattern could be used in #11687 since wallet files are not",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172328151,172328151,src/dbwrapper.cpp
promag,2018-03-05T21:11:44Z,"Nah, IMO it's fine as it is.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172329557,172329557,src/dbwrapper.h
ryanofsky,2018-03-05T22:22:59Z,"> Maybe it's not possible, since GetProperty is not const\n\nFWIW, it is possible to declare this const, because GetProperty is called on a pointer to a non-const object. Adding const here only makes the pointer address const, not the object located at that address.",https://github.com/bitcoin/bitcoin/pull/12604#discussion_r172349527,172349527,src/dbwrapper.h
