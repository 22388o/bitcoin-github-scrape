[
  {
    "sha": "92107d574d35d803399ee4dc9d3a1fb6a82a9229",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjEwN2Q1NzRkMzVkODAzMzk5ZWU0ZGM5ZDNhMWZiNmE4MmE5MjI5",
    "commit": {
      "author": {
        "name": "mruddy",
        "email": "mruddy@users.noreply.github.com",
        "date": "2016-04-04T22:21:00Z"
      },
      "committer": {
        "name": "mruddy",
        "email": "mruddy@users.noreply.github.com",
        "date": "2016-04-04T22:21:00Z"
      },
      "message": "RPC: add versionHex in getblock and getblockheader JSON results; expand data in getblockchaininfo bip9_softforks field.",
      "tree": {
        "sha": "bdab712acb34ab5b23257b30acac4e6b20736a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdab712acb34ab5b23257b30acac4e6b20736a32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92107d574d35d803399ee4dc9d3a1fb6a82a9229",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92107d574d35d803399ee4dc9d3a1fb6a82a9229",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92107d574d35d803399ee4dc9d3a1fb6a82a9229",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92107d574d35d803399ee4dc9d3a1fb6a82a9229/comments",
    "author": {
      "login": "mruddy",
      "id": 6440430,
      "node_id": "MDQ6VXNlcjY0NDA0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mruddy",
      "html_url": "https://github.com/mruddy",
      "followers_url": "https://api.github.com/users/mruddy/followers",
      "following_url": "https://api.github.com/users/mruddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mruddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
      "organizations_url": "https://api.github.com/users/mruddy/orgs",
      "repos_url": "https://api.github.com/users/mruddy/repos",
      "events_url": "https://api.github.com/users/mruddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mruddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mruddy",
      "id": 6440430,
      "node_id": "MDQ6VXNlcjY0NDA0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mruddy",
      "html_url": "https://github.com/mruddy",
      "followers_url": "https://api.github.com/users/mruddy/followers",
      "following_url": "https://api.github.com/users/mruddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mruddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
      "organizations_url": "https://api.github.com/users/mruddy/orgs",
      "repos_url": "https://api.github.com/users/mruddy/repos",
      "events_url": "https://api.github.com/users/mruddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mruddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9149688f87cb790a600400abd9af72c3ee0c312",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9149688f87cb790a600400abd9af72c3ee0c312",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9149688f87cb790a600400abd9af72c3ee0c312"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8f59ee741c366bad7de5a918f5adb69dbda48123",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92107d574d35d803399ee4dc9d3a1fb6a82a9229/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92107d574d35d803399ee4dc9d3a1fb6a82a9229/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=92107d574d35d803399ee4dc9d3a1fb6a82a9229",
        "patch": "@@ -82,6 +82,7 @@ def _test_getblockheader(self):\n         assert isinstance(header['mediantime'], int)\n         assert isinstance(header['nonce'], int)\n         assert isinstance(header['version'], int)\n+        assert isinstance(int(header['versionHex'], 16), int)\n         assert isinstance(header['difficulty'], Decimal)\n \n if __name__ == '__main__':"
      },
      {
        "sha": "34637b9f7e39851420e864f2b02dc4e4111272fe",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92107d574d35d803399ee4dc9d3a1fb6a82a9229/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92107d574d35d803399ee4dc9d3a1fb6a82a9229/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=92107d574d35d803399ee4dc9d3a1fb6a82a9229",
        "patch": "@@ -70,6 +70,7 @@ UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n     result.push_back(Pair(\"confirmations\", confirmations));\n     result.push_back(Pair(\"height\", blockindex->nHeight));\n     result.push_back(Pair(\"version\", blockindex->nVersion));\n+    result.push_back(Pair(\"versionHex\", strprintf(\"%08x\", blockindex->nVersion)));\n     result.push_back(Pair(\"merkleroot\", blockindex->hashMerkleRoot.GetHex()));\n     result.push_back(Pair(\"time\", (int64_t)blockindex->nTime));\n     result.push_back(Pair(\"mediantime\", (int64_t)blockindex->GetMedianTimePast()));\n@@ -98,6 +99,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n     result.push_back(Pair(\"size\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION)));\n     result.push_back(Pair(\"height\", blockindex->nHeight));\n     result.push_back(Pair(\"version\", block.nVersion));\n+    result.push_back(Pair(\"versionHex\", strprintf(\"%08x\", block.nVersion)));\n     result.push_back(Pair(\"merkleroot\", block.hashMerkleRoot.GetHex()));\n     UniValue txs(UniValue::VARR);\n     BOOST_FOREACH(const CTransaction&tx, block.vtx)\n@@ -316,6 +318,7 @@ UniValue getblockheader(const UniValue& params, bool fHelp)\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n             \"  \\\"height\\\" : n,          (numeric) The block height or index\\n\"\n             \"  \\\"version\\\" : n,         (numeric) The block version\\n\"\n+            \"  \\\"versionHex\\\" : \\\"00000000\\\", (string) The block version formatted in hexadecimal\\n\"\n             \"  \\\"merkleroot\\\" : \\\"xxxx\\\", (string) The merkle root\\n\"\n             \"  \\\"time\\\" : ttt,          (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"  \\\"mediantime\\\" : ttt,    (numeric) The median block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n@@ -375,6 +378,7 @@ UniValue getblock(const UniValue& params, bool fHelp)\n             \"  \\\"size\\\" : n,            (numeric) The block size\\n\"\n             \"  \\\"height\\\" : n,          (numeric) The block height or index\\n\"\n             \"  \\\"version\\\" : n,         (numeric) The block version\\n\"\n+            \"  \\\"versionHex\\\" : \\\"00000000\\\", (string) The block version formatted in hexadecimal\\n\"\n             \"  \\\"merkleroot\\\" : \\\"xxxx\\\", (string) The merkle root\\n\"\n             \"  \\\"tx\\\" : [               (array of string) The transaction ids\\n\"\n             \"     \\\"transactionid\\\"     (string) The transaction id\\n\"\n@@ -608,13 +612,20 @@ static UniValue BIP9SoftForkDesc(const std::string& name, const Consensus::Param\n {\n     UniValue rv(UniValue::VOBJ);\n     rv.push_back(Pair(\"id\", name));\n-    switch (VersionBitsTipState(consensusParams, id)) {\n+    const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n+    switch (thresholdState) {\n     case THRESHOLD_DEFINED: rv.push_back(Pair(\"status\", \"defined\")); break;\n     case THRESHOLD_STARTED: rv.push_back(Pair(\"status\", \"started\")); break;\n     case THRESHOLD_LOCKED_IN: rv.push_back(Pair(\"status\", \"locked_in\")); break;\n     case THRESHOLD_ACTIVE: rv.push_back(Pair(\"status\", \"active\")); break;\n     case THRESHOLD_FAILED: rv.push_back(Pair(\"status\", \"failed\")); break;\n     }\n+    if (THRESHOLD_STARTED == thresholdState)\n+    {\n+        rv.push_back(Pair(\"bit\", consensusParams.vDeployments[id].bit));\n+    }\n+    rv.push_back(Pair(\"startTime\", consensusParams.vDeployments[id].nStartTime));\n+    rv.push_back(Pair(\"timeout\", consensusParams.vDeployments[id].nTimeout));\n     return rv;\n }\n \n@@ -653,6 +664,9 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n             \"     {\\n\"\n             \"        \\\"id\\\": \\\"xxxx\\\",        (string) name of the softfork\\n\"\n             \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"lockedin\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n+            \"        \\\"bit\\\": xx,             (numeric) the bit, 0-28, in the block version field used to signal this soft fork\\n\"\n+            \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n+            \"        \\\"timeout\\\": xx          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n             \"     }\\n\"\n             \"  ]\\n\"\n             \"}\\n\""
      }
    ]
  }
]