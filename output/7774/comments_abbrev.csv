sipa,2016-03-30T23:49:52Z,"I'd like to see this, but I'm not sure it's worth breaking the RPC interface for (something we generally try hard to avoid).\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203688555,203688555,
dcousens,2016-03-31T00:56:56Z,Is the PRC designed for human (readable) consumption anyway?  Converting these numbers to hex is often a 1-liner.\nThis would also break a lot of code.\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203699967,203699967,
mruddy,2016-03-31T01:23:48Z,"Yes, these two RPCs have a verbose version (the default) that returns JSON. It's pretty useful to look something up quick via the debug window CLI in bitcoin-qt. The version makes more sense to me quickly when it's in hex, that's all.\nFor example:\n![image](https://cloud.githubusercontent.com/assets/6440430/14162821/87528604-f6bd-11e5-9d72-5dd967da0d3e.png)\n\nAnd yes, the type changes from numbe",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203706255,203706255,
dcousens,2016-03-31T01:41:11Z,"@mruddy did you change `bits` in the example above?\n\nIn any case,  I'm for it (without the `0x` though),  but it would break code.\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203711315,203711315,
mruddy,2016-03-31T01:58:23Z,"@dcousens no, but that was from a node running -regtest.\n\nYes, for that reason I'll probably put up a different commit that just has another field for the hex encoding. I think I'll stick with the `0x` because then it's visually obvious that it's not base 10. I'm thinking about only including this new field for versions other than 1-4, but I haven't decided yet.\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203714996,203714996,
dcousens,2016-03-31T02:03:55Z,Maybe `versionBits: 'ffff0000'` instead of replacing `version`\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203715673,203715673,
mruddy,2016-03-31T02:24:03Z,"That sounds pretty good although I'm hesitant to use the terminology that overlaps with BIP9. For example, there are two more possible future mechanisms where a hex encoding might also be helpful (and I think some BIP101 blocks used something very close or similar to BIP9 IIRC). So, how about versionHex: 'ffff0000'. That is obvious enough to drop the `0x` and still generic enough that I don't have",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203720706,203720706,
dcousens,2016-03-31T02:33:34Z,`versionHex: 'ffff0000'` :+1: \n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203722713,203722713,
mruddy,2016-03-31T03:16:15Z,"Cool, yeah that works for me. Thanks for the help!\n\n![image](https://cloud.githubusercontent.com/assets/6440430/14164394/4b9e57cc-f6cd-11e5-8b1d-ace0a7a14555.png)\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203732765,203732765,
luke-jr,2016-03-31T04:55:59Z,RPC isn't meant for human consumption. Do this in the client.\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203751972,203751972,
laanwj,2016-03-31T09:05:19Z,"I agree with @luke-jr.\nThis is a number, keep passing it as a number. Client software can format it to the user however they want.\n(we do this consistently in other places too; e.g. we even report timestamps as numbers, and don't bother formatting them as date-times)\n\nIt's certainly not worth breaking the interface for. Also realize that a client may need this value to process further, not to ",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203835114,203835114,
mruddy,2016-03-31T12:18:17Z,@laanwj Updated to use the VERSIONBITS_LAST_OLD_BLOCK_VERSION constant and added help text. I opted to not always add the new hex formatted field to avoid redundancy when the version is visually obvious.\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-203904376,203904376,
laanwj,2016-04-02T09:40:45Z,"BTW we should probably add the bit number to `bip9_softforks` in `getblockchaininfo`. It would provide some context to these bits.\n(doesn't necessarily have to be in this pull, but it's another idea to make BIP9 more visible and transparent, and allowing clients to interpret this)\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-204682774,204682774,
paveljanik,2016-04-02T09:50:45Z,"Or add some command to list the defined bip9 softforks with their starttime, timeout and bit.\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-204683941,204683941,
laanwj,2016-04-02T10:21:12Z,Well that can all be on getblockchaininfo IMO.\n\nMore on topic: another wild idea here would be to try to actually decode\nthe versionbits and return a list of deployment names. That is at least\nnon-trivial handholding as they are context dependent.\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-204689072,204689072,
btcdrak,2016-04-02T11:23:43Z,"@laanwj You could only decode the BIP9 deployments your version understands, so earlier versions are just going to return ""unknown"" and it's also conceivable that Bitcoin Core would not necessarily have the definitions for all softforks (because it doesnt support them). For a full ""decode"", we should better rely on a file BIPs which lists all known deployments, and it would also serve to help the ",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-204697545,204697545,
mruddy,2016-04-02T14:01:13Z,"I went ahead and added the extra data to `bip9_softforks` in `getblockchaininfo`.\n\nThe first thing to decide was if/when to show the bit information.\nSince the relevant bit information for a given block version changes over time, it would be confusing to always show the bit info for every soft fork that was ever defined with this mechanism.\nIt's actually not quite as straightforward as I guess",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-204721252,204721252,
laanwj,2016-04-03T12:05:43Z,"> it's also conceivable that Bitcoin Core would not necessarily have the definitions for all softforks (because it doesnt support them)\n\n@btcdrak I agree. It can't be complete, but it can show the known ones. Tons of options for the unknown ones, one would be to show them as 'unknownXX' where XX is the bit. E.g. in UpdateTip logging we issue a warning per block, see #7795.\n\nIMO where to coordi",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-204951609,204951609,
btcdrak,2016-04-03T17:09:45Z,@laanwj Yes. I like the patch as it is now.\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-205010975,205010975,
mruddy,2016-04-04T22:40:03Z,"ok, i pushed up a commit that simplifies and always shows the `versionHex` for `getblock` and `getblockheader` instead of only showing it when version > 4.\n",https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-205524700,205524700,
btcdrak,2016-04-05T14:10:25Z,post humus ACK\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-205827058,205827058,
laanwj,2016-04-05T14:10:42Z,Tested ACK 92107d5\n,https://github.com/bitcoin/bitcoin/pull/7774#issuecomment-205827207,205827207,
laanwj,2016-03-31T09:10:32Z,do we have these 1 and 4 available as constants somewhere?\n\nEdit: or maybe just always add it\n,https://github.com/bitcoin/bitcoin/pull/7774#discussion_r58021708,58021708,src/rpc/blockchain.cpp
laanwj,2016-04-04T07:24:33Z,"""when version is greater than %d"" looks kind of arbitrary, out of context.\nMaybe we should mention BIP9 explicitly in the help.\nThe reason for this threshold is that BIP9 version bits start to be relevant, right?\n",https://github.com/bitcoin/bitcoin/pull/7774#discussion_r58336758,58336758,src/rpc/blockchain.cpp
mruddy,2016-04-04T11:39:24Z,Kind of. It's a little more generic than that though. That threshold is the highest version number that I know for sure will be treated as a simple integer. I wanted to avoid redundancy for the easy to ascertain version numbers that are definitely treated as integers.\n\nI was trying to avoid being too specific to BIP9 because it allows for two future mechanisms (top bits 010 and 011). I thought o,https://github.com/bitcoin/bitcoin/pull/7774#discussion_r58362911,58362911,src/rpc/blockchain.cpp
MarcoFalke,2016-04-09T13:13:26Z,"Nit: Prob good to mention this only shows up when status==""started""\n",https://github.com/bitcoin/bitcoin/pull/7774#discussion_r59115066,59115066,src/rpc/blockchain.cpp
MarcoFalke,2016-04-09T13:15:03Z,Nit: `assert_is_hex_string` is enough because an int is always instance of int.\n,https://github.com/bitcoin/bitcoin/pull/7774#discussion_r59115078,59115078,qa/rpc-tests/blockchain.py
mruddy,2016-04-09T16:06:12Z,"yep, that'd be a little cleaner\n",https://github.com/bitcoin/bitcoin/pull/7774#discussion_r59117245,59117245,qa/rpc-tests/blockchain.py
mruddy,2016-04-09T16:07:27Z,that had crossed my mind before. either way works for me.\n,https://github.com/bitcoin/bitcoin/pull/7774#discussion_r59117264,59117264,src/rpc/blockchain.cpp
