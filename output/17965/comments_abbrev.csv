Sjors,2020-01-19 10:36:38,"ACK 70e4706093fd7b08a32f9638dace178852a9d249\n\nFrom #16348:\n\n>Once we bump Qt to at least 5.10 these can be refactored to use the invokeMethod overload that allows connecting to lambdas or member pointers, which are compile checked.\n\nFrom #13478:\n\n> #### [Qt Versions](https://download.qt.io/official_releases/qt):\n> [5.12 (LTS)](https://doc.qt.io/qt-5.12/supported-platforms.html) S",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575990732,575990732,
promag,2020-01-19 10:55:46,"I think we should fix `ThreadSafeMessageBox` instead. Note that if `modal == false` `Qt::QueuedConnection` is used and a pointer to the local `ret` is passed, which goes out of scope. So by the time slot `message` is called it dereferences an invalid pointer. Please correct me if I'm wrong.",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575992406,575992406,
hebasto,2020-01-19 10:59:42,"> I think we should fix `ThreadSafeMessageBox` instead. Note that if `modal == false` `Qt::QueuedConnection` is used and a pointer to the local `ret` is passed, which goes out of scope. So by the time slot `message` is called it dereferences an invalid pointer. Please correct me if I'm wrong.\n\n`QMetaObject::invokeMethod()` passes 4 arguments to `BitcoinGUI::message()` with 3 parameters signatu",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575992733,575992733,
promag,2020-01-19 11:01:53,@hebasto I mean that if we merge this then the problem above exists.,https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575992927,575992927,
hebasto,2020-01-19 11:06:14,"@promag \n\n> Note that if `modal == false` `Qt::QueuedConnection` is used and a pointer to the local `ret` is passed, which goes out of scope. So by the time slot `message` is called it dereferences an invalid pointer.\n\nIndeed.",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575993301,575993301,
hebasto,2020-01-19 11:41:49,"> I think we should fix `ThreadSafeMessageBox` instead.\n\nI found the only place where return value is used:\nhttps://github.com/bitcoin/bitcoin/blob/a654626f076a72416a3d354218d7107571d6caaf/src/init.cpp#L1614-L1617\n\n~Could we replace our custom `ThreadSafeMessageBox` with standard `QMessageBox` here?~",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575996195,575996195,
DrahtBot,2020-01-19 12:13:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17966](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17966.html) (qt, refactor: Optimize signal-slot connecti",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-575998556,575998556,
laanwj,2020-01-19 14:13:52,I'm happy this was discovered before a release! Please do be careful with cleanup changes like this.,https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-576008959,576008959,
hebasto,2020-01-19 20:51:12,"@promag how about this patch to master:\n```diff\ndiff --git a/src/qt/bitcoingui.cpp b/src/qt/bitcoingui.cpp\nindex 6043e93f9..ea13b60c2 100644\n--- a/src/qt/bitcoingui.cpp\n+++ b/src/qt/bitcoingui.cpp\n@@ -1025,7 +1025,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n     progressBar->setToolTip(tooltip);\n }\n \n-void BitcoinGUI::message(const QStr",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-576045548,576045548,
hebasto,2020-01-19 21:19:07,Also I did not find any `ThreadSafeMessageBox()` invocation without `CClientUIInterface::MODAL` set.,https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-576048477,576048477,
jonasschnelli,2020-01-20 04:38:59,"Thanks for fixing.\nSorry for not testing #17943.\nI think GUI refactoring should not be taken too easy since there are little tests that would detect possible new issues.",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-576102967,576102967,
laanwj,2020-01-20 15:45:00,"> I think GUI refactoring should not be taken too easy since there are little tests that would detect possible new issues.\n\nAgree.",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-576329530,576329530,
laanwj,2020-01-22 15:12:05,"I reverted the commits from this PR and got exactly the same.\nACK 70e4706093fd7b08a32f9638dace178852a9d249",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-577232394,577232394,
Empact,2020-01-22 19:02:20,"Post-hoc ACK https://github.com/bitcoin/bitcoin/pull/17965/commits/70e4706093fd7b08a32f9638dace178852a9d249\n\nAnd partial mea culpa: if I had looked more closely at https://github.com/bitcoin/bitcoin/commit/35ecf854c084c248ad640c6af030a9d1ed726c47 which I cited [here](https://github.com/bitcoin/bitcoin/pull/17943#issuecomment-575369112) I would have seen that it had been moved and retained and ",https://github.com/bitcoin/bitcoin/pull/17965#issuecomment-577335720,577335720,
