[
  {
    "sha": "3450c18a125f125aec76bfef79c69317eaad935d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDUwYzE4YTEyNWYxMjVhZWM3NmJmZWY3OWM2OTMxN2VhYWQ5MzVk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-09-28T08:10:15Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-10-01T06:12:19Z"
      },
      "message": "Globals: Decouple GetConfigFile and ReadConfigFile from global mapArgs",
      "tree": {
        "sha": "d41fdcefaab3cc63947a22d3960b22107cbb35f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d41fdcefaab3cc63947a22d3960b22107cbb35f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3450c18a125f125aec76bfef79c69317eaad935d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJX71PDAAoJEIhmwY6hyUSitcsP/3f3SoiH7HPhJKCnZeYr2ZWA\nGAFzSnAMfneK3V68cMpiVaf6uNmYa4lxFaYsHz2TqB1w+MitCDsYDcsam0VpooQy\nptqvmMjitbK1skHjNHnsIbE7ozBmnrQtr+vGgYtRdNZKSs81hmmHEDzdxNMw0+dI\ntehTed2hYAv1iq1LTlKVffQep1UvP3wpSlVaG/eWDOxgtiZTiCrLIh01hdjPKeN6\n1NFu087EcbwW0Zzh/Um/325ODWBF05duFUZ31F4siKlqrezfFEnbv/9RywZdwZyU\n3IV7SC1NUi62ZqBE7TKUojTIs4vHbOjK2NPQ8LvL7KzvDOYjaTTkCa0GL7Cv/382\n6SLSPerqy7A5z9SjM6D9jb5gt3cd63DnE4UWTtsqoA/QKoDybIbr7gdLEnrqUxcc\nVWxk8vkCPB6h+Av2XeZ9woOdTphsHk9P+JwEDwzHBEfwuU/JPFrrd/LT51g16C/I\nUT/WvA2+u0BnF7J3VVQLCzZ/eyBVd/bASPvTZJxaKgQcVM9lkjc2MxIFmbTsZ2u0\nfNHO8fiztQsTt1jfKAMmH4UGmWBhITA5yrVEU4GadIYPDxKilpOPykXM9ZWkK53k\npW9l1fravTdQeQOhl6dUQxHXoYi1YK3P8jRC7YpgPE0E2793Vl5vWiIFtGAWdTbw\nyR/spmlf2XjX2c09QSwA\n=1Add\n-----END PGP SIGNATURE-----",
        "payload": "tree d41fdcefaab3cc63947a22d3960b22107cbb35f8\nparent 7b784cc2bbcdc90361add2adb657c58162aca4ef\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1475050215 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1475302339 +0200\n\nGlobals: Decouple GetConfigFile and ReadConfigFile from global mapArgs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3450c18a125f125aec76bfef79c69317eaad935d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3450c18a125f125aec76bfef79c69317eaad935d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3450c18a125f125aec76bfef79c69317eaad935d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b784cc2bbcdc90361add2adb657c58162aca4ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b784cc2bbcdc90361add2adb657c58162aca4ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b784cc2bbcdc90361add2adb657c58162aca4ef"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "9d4c4e53bd26b544b89f4cb644cf13e7afc67d09",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450c18a125f125aec76bfef79c69317eaad935d/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450c18a125f125aec76bfef79c69317eaad935d/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=3450c18a125f125aec76bfef79c69317eaad935d",
        "patch": "@@ -92,7 +92,7 @@ static bool AppInitRPC(int argc, char* argv[])\n         return false;\n     }\n     try {\n-        ReadConfigFile(mapArgs, mapMultiArgs);\n+        ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME), mapArgs, mapMultiArgs);\n     } catch (const std::exception& e) {\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return false;\n@@ -209,7 +209,7 @@ UniValue CallRPC(const string& strMethod, const UniValue& params)\n         if (!GetAuthCookie(&strRPCUserColonPass)) {\n             throw runtime_error(strprintf(\n                 _(\"Could not locate RPC credentials. No authentication cookie could be found, and no rpcpassword is set in the configuration file (%s)\"),\n-                    GetConfigFile().string().c_str()));\n+                    GetConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n \n         }\n     } else {"
      },
      {
        "sha": "351463c256e39bc6f29bef0a4a587d645b3ec0e4",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450c18a125f125aec76bfef79c69317eaad935d/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450c18a125f125aec76bfef79c69317eaad935d/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=3450c18a125f125aec76bfef79c69317eaad935d",
        "patch": "@@ -104,7 +104,7 @@ bool AppInit(int argc, char* argv[])\n         }\n         try\n         {\n-            ReadConfigFile(mapArgs, mapMultiArgs);\n+            ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME), mapArgs, mapMultiArgs);\n         } catch (const std::exception& e) {\n             fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n             return false;"
      },
      {
        "sha": "eefef7ba0b2537dbddc23f8aa055f3bb067c56a3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450c18a125f125aec76bfef79c69317eaad935d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450c18a125f125aec76bfef79c69317eaad935d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3450c18a125f125aec76bfef79c69317eaad935d",
        "patch": "@@ -1064,7 +1064,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", strDataDir);\n-    LogPrintf(\"Using config file %s\\n\", GetConfigFile().string());\n+    LogPrintf(\"Using config file %s\\n\", GetConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string());\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n \n     LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);"
      },
      {
        "sha": "9986af49576439cdf5813726c3e68b523a109ea6",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450c18a125f125aec76bfef79c69317eaad935d/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450c18a125f125aec76bfef79c69317eaad935d/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=3450c18a125f125aec76bfef79c69317eaad935d",
        "patch": "@@ -590,7 +590,7 @@ int main(int argc, char *argv[])\n         return 1;\n     }\n     try {\n-        ReadConfigFile(mapArgs, mapMultiArgs);\n+        ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME), mapArgs, mapMultiArgs);\n     } catch (const std::exception& e) {\n         QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n                               QObject::tr(\"Error: Cannot parse configuration file: %1. Only use key=value syntax.\").arg(e.what()));"
      },
      {
        "sha": "c20ede62210b165f951933bbecb8b751ca06add8",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450c18a125f125aec76bfef79c69317eaad935d/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450c18a125f125aec76bfef79c69317eaad935d/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3450c18a125f125aec76bfef79c69317eaad935d",
        "patch": "@@ -518,19 +518,20 @@ void ClearDatadirCache()\n     pathCachedNetSpecific = boost::filesystem::path();\n }\n \n-boost::filesystem::path GetConfigFile()\n+boost::filesystem::path GetConfigFile(const std::string& confPath)\n {\n-    boost::filesystem::path pathConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+    boost::filesystem::path pathConfigFile(confPath);\n     if (!pathConfigFile.is_complete())\n         pathConfigFile = GetDataDir(false) / pathConfigFile;\n \n     return pathConfigFile;\n }\n \n-void ReadConfigFile(map<string, string>& mapSettingsRet,\n+void ReadConfigFile(const std::string& confPath,\n+                    map<string, string>& mapSettingsRet,\n                     map<string, vector<string> >& mapMultiSettingsRet)\n {\n-    boost::filesystem::ifstream streamConfig(GetConfigFile());\n+    boost::filesystem::ifstream streamConfig(GetConfigFile(confPath));\n     if (!streamConfig.good())\n         return; // No bitcoin.conf file is OK\n "
      },
      {
        "sha": "bbb9b5db825deb27833948d4b75e8465b2c21934",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450c18a125f125aec76bfef79c69317eaad935d/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450c18a125f125aec76bfef79c69317eaad935d/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=3450c18a125f125aec76bfef79c69317eaad935d",
        "patch": "@@ -102,12 +102,12 @@ bool TryCreateDirectory(const boost::filesystem::path& p);\n boost::filesystem::path GetDefaultDataDir();\n const boost::filesystem::path &GetDataDir(bool fNetSpecific = true);\n void ClearDatadirCache();\n-boost::filesystem::path GetConfigFile();\n+boost::filesystem::path GetConfigFile(const std::string& confPath);\n #ifndef WIN32\n boost::filesystem::path GetPidFile();\n void CreatePidFile(const boost::filesystem::path &path, pid_t pid);\n #endif\n-void ReadConfigFile(std::map<std::string, std::string>& mapSettingsRet, std::map<std::string, std::vector<std::string> >& mapMultiSettingsRet);\n+void ReadConfigFile(const std::string& confPath, std::map<std::string, std::string>& mapSettingsRet, std::map<std::string, std::vector<std::string> >& mapMultiSettingsRet);\n #ifdef WIN32\n boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate = true);\n #endif"
      }
    ]
  }
]