jtimon,2014-10-12T19:24:40Z,"Idea ACK. @petertodd should also like this since he was positive about it when I proposed in #4298\nOn the class name, why not just CPolicy? Maybe better CStandardPolicy if we're going to later add an abstract CPolicy that CStandardPolicy (and maybe CReplaceByFeePolicy) derive from.\nMore things out of main.o, yes!\n",https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-58818109,58818109,
jtimon,2014-10-12T19:27:14Z,It would be easier to review if you first just moved code as functions with a move-only commit (without indentations) and then created the class and cleaned up. Like @jgarzik did in #4646\n,https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-58818265,58818265,
luke-jr,2014-10-26T09:28:04Z,Rebased with requested changes.\n,https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-60511547,60511547,
jtimon,2014-12-21T13:01:36Z,"Needs rebase. On top of #5521 ?\nAs said I would avoid the boolean attribute, it doesn't accomplish its goal of decoupling chainparams from policy.\n",https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-67769744,67769744,
jtimon,2014-12-29T22:00:09Z,Here's a rebased version (not on top of #5521): https://github.com/jtimon/bitcoin/commits/nodepolicy_old\n,https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-68307974,68307974,
jtimon,2014-12-30T01:30:23Z,"Here's a version rebased on top of #5114: https://github.com/jtimon/bitcoin/tree/nodepolicy_dust\nHere's a version rebased on top of #5114 and #5521: https://github.com/jtimon/bitcoin/tree/nodepolicy_5521_dust\nAnd, finally, here's a version on top of the updated #5180: https://github.com/jtimon/bitcoin/tree/nodepolicy_5180\n",https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-68322099,68322099,
jgarzik,2015-07-23T18:23:19Z,"Closing.  No ACKs after a while, and it is intertwined with otherwise fast-moving policy code changes getting merged into the tree.\n\nIf this is in error, it can always be re-opened.\n",https://github.com/bitcoin/bitcoin/pull/5071#issuecomment-124195918,124195918,
Diapolo,2014-10-10T08:17:43Z,Nit: Just MIT\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18692878,18692878,src/policy.cpp
Diapolo,2014-10-10T08:18:09Z,Nit: These need to go below our own headers.\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18692897,18692897,src/policy.cpp
Diapolo,2014-10-10T08:18:46Z,"The function name is now wrong, perhaps use `__func__`!?\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18692921,18692921,src/policy.cpp
Diapolo,2014-10-10T08:19:40Z,Same here ;).\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18692963,18692963,src/policy.cpp
Diapolo,2014-10-10T08:20:34Z,Also just MIT\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18692990,18692990,src/policy.h
Diapolo,2014-10-10T08:21:51Z,Why are all of these not using paramater names?\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18693034,18693034,src/policy.h
luke-jr,2014-10-10T10:25:10Z,"Just copying it from main.cpp, where the code came from. If you want it changed here, make a convincing argument to change it there first.\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18698211,18698211,src/policy.cpp
luke-jr,2014-10-11T03:36:41Z,There's nothing meaningful to expand on beyond the type...\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739071,18739071,src/policy.h
dcousens,2014-10-11T04:33:12Z,"Why bother with `fRateLimit/fLimitFree` at all here, since the logic boils down to:\n\n`fRateLimit = !fLimitFree ? false : false`\n\nYou could just write:\n\n``` c++\nif (!policy.AcceptMemPoolEntry(pool, state, entry, view, false))\n    return false;\n\nif (!policy.RateLimitTx(pool, state, entry, view))\n    return false;\n```\n\nIs it the idea that more behaviour will be added here or?\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739293,18739293,src/main.cpp
luke-jr,2014-10-11T04:33:47Z,"Not all transactions should be rate limited, for different reasons, some of which are policy (contracts with retailers?), some of which are not (local user manually wants to broadcast a transaction).\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739295,18739295,src/main.cpp
luke-jr,2014-10-11T04:34:57Z,"Notice fRateLimit is passed to AcceptMemPoolEntry by reference, and it may (and does in some cases by default) change it.\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739300,18739300,src/main.cpp
dcousens,2014-10-11T04:37:03Z,~~Is this meant to be `true`?~~\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739311,18739311,src/main.cpp
luke-jr,2014-10-11T04:38:11Z,"No, it's only potentially set to true inside AcceptMemPoolEntry\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739319,18739319,src/main.cpp
dcousens,2014-10-11T04:39:45Z,"Right, the pass by reference was what I was missing.  LGTM then.\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739327,18739327,src/main.cpp
luke-jr,2014-10-11T04:53:20Z,I agree this feels confusing. I wonder if it ought to be moved onto CValidationState so any step of the process can set it?\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18739392,18739392,src/main.cpp
TheBlueMatt,2014-10-12T18:02:42Z,Why do we even need an object for policy? isnt it all static?\nMaybe best to just do a Params()-style Policy()?\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18748941,18748941,src/main.cpp
TheBlueMatt,2014-10-12T18:04:36Z,"All files need changing, but instead of doing it all at once, we're just changing it as files are updated. Please use just MIT.\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18748953,18748953,src/policy.cpp
jtimon,2014-10-12T19:15:25Z,This has been discussed already. I though we had merged a PR changing everything to just MIT already.\nThat would be simpler than warning people every time they copy the license from an outdated place.\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18749411,18749411,src/policy.cpp
jtimon,2014-10-12T19:18:09Z,~~A params-style global hidden behind a function you mean?\nI prefer a class.~~\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18749436,18749436,src/main.cpp
jtimon,2014-10-12T19:25:48Z,I don't think this should be called here. This should be in policy.cpp and the field in Policy is not really required.\n,https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18749486,18749486,src/init.cpp
luke-jr,2014-10-12T22:32:44Z,"@TheBlueMatt It isn't inherently static. It might be nice to one day have nodes with multiple policies, using different ones based on transaction sources and mempools...\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r18750745,18750745,src/main.cpp
luke-jr,2014-10-26T09:14:02Z,"This has to be called here. When CNodePolicy is initialised, Policy() might not have been yet.\n",https://github.com/bitcoin/bitcoin/pull/5071#discussion_r19380035,19380035,src/init.cpp
