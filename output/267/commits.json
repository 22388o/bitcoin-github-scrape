[
  {
    "sha": "2bfda1be11a079f7b468c79d79a91ddb30369557",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmZkYTFiZTExYTA3OWY3YjQ2OGM3OWQ3OWE5MWRkYjMwMzY5NTU3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-05-25T22:38:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-05-25T22:54:58Z"
      },
      "message": "Separate required fee for relaying and creation\n\nTransactions created with the new minimal fee policy would not be\nrelayed by the network. Therefore, we separate the minimal fee that\nis necessary to relay and to create, leaving the creation one at\nthe old amount, for now.",
      "tree": {
        "sha": "989373a1154f39dc222b234a8acaf32684462bb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/989373a1154f39dc222b234a8acaf32684462bb8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bfda1be11a079f7b468c79d79a91ddb30369557",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bfda1be11a079f7b468c79d79a91ddb30369557",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bfda1be11a079f7b468c79d79a91ddb30369557",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bfda1be11a079f7b468c79d79a91ddb30369557/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e42677659800e1570ab5cd933ea923ec3dd63ff6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e42677659800e1570ab5cd933ea923ec3dd63ff6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e42677659800e1570ab5cd933ea923ec3dd63ff6"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "f5f1ffd4ac6c5e07c09766c00f3e7cc0148e45b6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bfda1be11a079f7b468c79d79a91ddb30369557/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bfda1be11a079f7b468c79d79a91ddb30369557/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2bfda1be11a079f7b468c79d79a91ddb30369557",
        "patch": "@@ -731,13 +731,13 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n         }\n \n         // Don't accept it if it can't get into a block\n-        if (nFees < GetMinFee(1000))\n+        if (nFees < GetMinFee(1000, false, true))\n             return error(\"AcceptToMemoryPool() : not enough fees\");\n \n         // Continuously rate-limit free transactions\n         // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n         // be annoying or make other's transactions take longer to confirm.\n-        if (nFees < MIN_TX_FEE)\n+        if (nFees < MIN_RELAY_TX_FEE)\n         {\n             static CCriticalSection cs;\n             static double dFreeCount;\n@@ -3329,7 +3329,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n \n             // Transaction fee required depends on block size\n             bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n-            int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n+            int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree, true);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n             // because we're already processing them in order of dependency"
      },
      {
        "sha": "117a08475696b1ebf6af5ef134ae5762b3570aff",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bfda1be11a079f7b468c79d79a91ddb30369557/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bfda1be11a079f7b468c79d79a91ddb30369557/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=2bfda1be11a079f7b468c79d79a91ddb30369557",
        "patch": "@@ -29,7 +29,8 @@ static const unsigned int MAX_BLOCK_SIZE_GEN = MAX_BLOCK_SIZE/2;\n static const int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n static const int64 COIN = 100000000;\n static const int64 CENT = 1000000;\n-static const int64 MIN_TX_FEE = 50000;\n+static const int64 MIN_TX_FEE = CENT;\n+static const int64 MIN_RELAY_TX_FEE = 50000;\n static const int64 MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(int64 nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n static const int COINBASE_MATURITY = 100;\n@@ -599,12 +600,14 @@ class CTransaction\n         return dPriority > COIN * 144 / 250;\n     }\n \n-    int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true) const\n+    int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true, bool fForRelay=false) const\n     {\n-        // Base fee is 1 cent per kilobyte\n+        // Base fee is either MIN_TX_FEE or MIN_RELAY_TX_FEE\n+        int64 nBaseFee = fForRelay ? MIN_RELAY_TX_FEE : MIN_TX_FEE;\n+\n         unsigned int nBytes = ::GetSerializeSize(*this, SER_NETWORK);\n         unsigned int nNewBlockSize = nBlockSize + nBytes;\n-        int64 nMinFee = (1 + (int64)nBytes / 1000) * MIN_TX_FEE;\n+        int64 nMinFee = (1 + (int64)nBytes / 1000) * nBaseFee;\n \n         if (fAllowFree)\n         {\n@@ -623,11 +626,11 @@ class CTransaction\n             }\n         }\n \n-        // To limit dust spam, require MIN_TX_FEE if any output is less than 0.01\n-        if (nMinFee < MIN_TX_FEE)\n+        // To limit dust spam, require MIN_TX_FEE/MIN_RELAY_TX_FEE if any output is less than 0.01\n+        if (nMinFee < nBaseFee)\n             BOOST_FOREACH(const CTxOut& txout, vout)\n                 if (txout.nValue < CENT)\n-                    nMinFee = MIN_TX_FEE;\n+                    nMinFee = nBaseFee;\n \n         // Raise the price as the block approaches full\n         if (nBlockSize != 1 && nNewBlockSize >= MAX_BLOCK_SIZE_GEN/2)"
      }
    ]
  }
]