[
  {
    "sha": "a9bc5638031a29abaa40284273a3507b345c31e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWJjNTYzODAzMWEyOWFiYWE0MDI4NDI3M2EzNTA3YjM0NWMzMWU5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-06-01T17:53:03Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-09T01:28:00Z"
      },
      "message": "Swap relay pool and mempool lookup\n\nThis is in preparation to using the mempool entering time as part of\nthe decision for relay, but does not change behavior on itself.",
      "tree": {
        "sha": "a4ab9d0f6b3a5d17d6b104954ae212f65170e1d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4ab9d0f6b3a5d17d6b104954ae212f65170e1d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9bc5638031a29abaa40284273a3507b345c31e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9bc5638031a29abaa40284273a3507b345c31e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9bc5638031a29abaa40284273a3507b345c31e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9bc5638031a29abaa40284273a3507b345c31e9/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f4c0a9694d399388d0514c13feae7d2303fac3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f4c0a9694d399388d0514c13feae7d2303fac3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f4c0a9694d399388d0514c13feae7d2303fac3d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "07c12938c825abf5ea3b79ba8732cc73964fa6c6",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9bc5638031a29abaa40284273a3507b345c31e9/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9bc5638031a29abaa40284273a3507b345c31e9/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a9bc5638031a29abaa40284273a3507b345c31e9",
        "patch": "@@ -1627,13 +1627,6 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\n         if (peer.m_tx_relay->setInventoryTxToSend.count(txid)) return {};\n     }\n \n-    {\n-        LOCK(cs_main);\n-        // Look up transaction in relay pool\n-        auto mi = mapRelay.find(txid);\n-        if (mi != mapRelay.end()) return mi->second;\n-    }\n-\n     auto txinfo = mempool.info(txid);\n     if (txinfo.tx) {\n         // To protect privacy, do not answer getdata using the mempool when\n@@ -1644,6 +1637,13 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\n         }\n     }\n \n+    {\n+        LOCK(cs_main);\n+        // Look up transaction in relay pool\n+        auto mi = mapRelay.find(txid);\n+        if (mi != mapRelay.end()) return mi->second;\n+    }\n+\n     return {};\n }\n "
      }
    ]
  },
  {
    "sha": "b24a17f03982c9cd8fd6ec665b16e022374c96f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjRhMTdmMDM5ODJjOWNkOGZkNmVjNjY1YjE2ZTAyMjM3NGM5NmYw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-06-02T02:38:16Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-09T01:29:51Z"
      },
      "message": "Introduce constant for mempool-based relay separate from mapRelay caching\n\nThis constant is set to 2 minutes, rather than 15. This is still many times\nlarger than the transaction broadcast interval (2s for outbound, 5s for\ninbound), so it should be acceptable for peers to know what our contents of\nthe mempool was that long ago.",
      "tree": {
        "sha": "4417d2a4ebf3e0c6d7f6cbbcba61b54be1c60bf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4417d2a4ebf3e0c6d7f6cbbcba61b54be1c60bf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b24a17f03982c9cd8fd6ec665b16e022374c96f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b24a17f03982c9cd8fd6ec665b16e022374c96f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b24a17f03982c9cd8fd6ec665b16e022374c96f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b24a17f03982c9cd8fd6ec665b16e022374c96f0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9bc5638031a29abaa40284273a3507b345c31e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9bc5638031a29abaa40284273a3507b345c31e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9bc5638031a29abaa40284273a3507b345c31e9"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "922177476146a943201bde1ea7d3790c1c14064d",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b24a17f03982c9cd8fd6ec665b16e022374c96f0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b24a17f03982c9cd8fd6ec665b16e022374c96f0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b24a17f03982c9cd8fd6ec665b16e022374c96f0",
        "patch": "@@ -38,7 +38,9 @@ static constexpr int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */\n static constexpr int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n /** How long to cache transactions in mapRelay for normal relay */\n-static constexpr std::chrono::seconds RELAY_TX_CACHE_TIME{15 * 60};\n+static constexpr std::chrono::seconds RELAY_TX_CACHE_TIME = std::chrono::minutes{15};\n+/** How long a transaction has to be in the mempool before it can unconditionally be relayed (even when not in mapRelay). */\n+static constexpr std::chrono::seconds UNCONDITIONAL_RELAY_DELAY = std::chrono::minutes{2};\n /** Headers download timeout expressed in microseconds\n  *  Timeout = base + per_header * (expected number of headers) */\n static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_BASE = 15 * 60 * 1000000; // 15 minutes\n@@ -1617,7 +1619,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(const CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n {\n     // Check if the requested transaction is so recent that we're just\n     // about to announce it to the peer; if so, they certainly shouldn't\n@@ -1631,8 +1633,8 @@ CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const\n     if (txinfo.tx) {\n         // To protect privacy, do not answer getdata using the mempool when\n         // that TX couldn't have been INVed in reply to a MEMPOOL request,\n-        // or when it's too recent to have expired from mapRelay.\n-        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= longlived_mempool_time) {\n+        // and it's more recent than UNCONDITIONAL_RELAY_DELAY.\n+        if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n             return txinfo.tx;\n         }\n     }\n@@ -1655,8 +1657,7 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n     std::vector<CInv> vNotFound;\n     const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n \n-    // mempool entries added before this time have likely expired from mapRelay\n-    const std::chrono::seconds longlived_mempool_time = GetTime<std::chrono::seconds>() - RELAY_TX_CACHE_TIME;\n+    const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n     // Get last mempool request time\n     const std::chrono::seconds mempool_req = pfrom.m_tx_relay != nullptr ? pfrom.m_tx_relay->m_last_mempool_req.load()\n                                                                           : std::chrono::seconds::min();\n@@ -1677,7 +1678,7 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, now);\n         if (tx) {\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));"
      }
    ]
  },
  {
    "sha": "43f02ccbff9b137d59458da7a8afdb0bf80e127f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2YwMmNjYmZmOWIxMzdkNTk0NThkYTdhOGFmZGIwYmY4MGUxMjdm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-05-29T18:33:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-09T01:29:56Z"
      },
      "message": "Only respond to requests for recently announced transactions\n\n... unless they're UNCONDITIONAL_RELAY_DELAY old, or there has been\na response to a MEMPOOL request in the mean time.\n\nThis is accomplished using a rolling Bloom filter for the last\n3500 announced transactions. The probability of seeing more than 100\nbroadcast events (which can be up to 35 txids each) in 2 minutes for\nan outbound peer (where the average frequency is one per minute), is\nless than 1 in a million.",
      "tree": {
        "sha": "336adbc240caad2a74572aee912f11d92e9da820",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/336adbc240caad2a74572aee912f11d92e9da820"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43f02ccbff9b137d59458da7a8afdb0bf80e127f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43f02ccbff9b137d59458da7a8afdb0bf80e127f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43f02ccbff9b137d59458da7a8afdb0bf80e127f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43f02ccbff9b137d59458da7a8afdb0bf80e127f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b24a17f03982c9cd8fd6ec665b16e022374c96f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b24a17f03982c9cd8fd6ec665b16e022374c96f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b24a17f03982c9cd8fd6ec665b16e022374c96f0"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 30,
      "deletions": 9
    },
    "files": [
      {
        "sha": "dc28d8cca5ff9d9e0d868dd9380dacad53fb2a4e",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 9,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43f02ccbff9b137d59458da7a8afdb0bf80e127f/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43f02ccbff9b137d59458da7a8afdb0bf80e127f/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=43f02ccbff9b137d59458da7a8afdb0bf80e127f",
        "patch": "@@ -121,9 +121,18 @@ static constexpr std::chrono::seconds AVG_ADDRESS_BROADCAST_INTERVAL{30};\n /** Average delay between trickled inventory transmissions in seconds.\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n-/** Maximum number of inventory items to send per transmission.\n+/** Maximum rate of inventory items to send per second.\n  *  Limits the impact of low-fee transaction floods. */\n-static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\n+static constexpr unsigned int INVENTORY_BROADCAST_PER_SECOND = 7;\n+/** Maximum number of inventory items to send per transmission. */\n+static constexpr unsigned int INVENTORY_BROADCAST_MAX = INVENTORY_BROADCAST_PER_SECOND * INVENTORY_BROADCAST_INTERVAL;\n+/** The number of most recently announced transactions a peer can request. */\n+static constexpr unsigned int INVENTORY_MAX_RECENT_RELAY = 3500;\n+/** Verify that INVENTORY_MAX_RECENT_RELAY is enough to cache everything typically\n+ *  relayed before unconditional relay from the mempool kicks in. This is only a\n+ *  lower bound, and it should be larger to account for higher inv rate to outbound\n+ *  peers, and random variations in the broadcast mechanism. */\n+static_assert(INVENTORY_MAX_RECENT_RELAY >= INVENTORY_BROADCAST_PER_SECOND * UNCONDITIONAL_RELAY_DELAY / std::chrono::seconds{1}, \"INVENTORY_RELAY_MAX too low\");\n /** Average delay between feefilter broadcasts in seconds. */\n static constexpr unsigned int AVG_FEEFILTER_BROADCAST_INTERVAL = 10 * 60;\n /** Maximum feefilter broadcast delay after significant change. */\n@@ -397,6 +406,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! A rolling bloom filter of all announced tx CInvs to this peer.\n+    CRollingBloomFilter m_recently_announced_invs = CRollingBloomFilter{INVENTORY_MAX_RECENT_RELAY, 0.000001};\n+\n     CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n         address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),\n         m_is_manual_connection (is_manual)\n@@ -424,6 +436,7 @@ struct CNodeState {\n         fSupportsDesiredCmpctVersion = false;\n         m_chain_sync = { 0, nullptr, false, false };\n         m_last_block_announcement = 0;\n+        m_recently_announced_invs.reset();\n     }\n };\n \n@@ -1631,19 +1644,25 @@ CTransactionRef static FindTxForGetData(const CNode& peer, const uint256& txid,\n \n     auto txinfo = mempool.info(txid);\n     if (txinfo.tx) {\n-        // To protect privacy, do not answer getdata using the mempool when\n-        // that TX couldn't have been INVed in reply to a MEMPOOL request,\n-        // and it's more recent than UNCONDITIONAL_RELAY_DELAY.\n+        // If a TX could have been INVed in reply to a MEMPOOL request,\n+        // or is older than UNCONDITIONAL_RELAY_DELAY, permit the request\n+        // unconditionally.\n         if ((mempool_req.count() && txinfo.m_time <= mempool_req) || txinfo.m_time <= now - UNCONDITIONAL_RELAY_DELAY) {\n-            return txinfo.tx;\n+            return std::move(txinfo.tx);\n         }\n     }\n \n     {\n         LOCK(cs_main);\n-        // Look up transaction in relay pool\n-        auto mi = mapRelay.find(txid);\n-        if (mi != mapRelay.end()) return mi->second;\n+\n+        // Otherwise, the transaction must have been announced recently.\n+        if (State(peer.GetId())->m_recently_announced_invs.contains(txid)) {\n+            // If it was, it can be relayed from either the mempool...\n+            if (txinfo.tx) return std::move(txinfo.tx);\n+            // ... or the relay pool.\n+            auto mi = mapRelay.find(txid);\n+            if (mi != mapRelay.end()) return mi->second;\n+        }\n     }\n \n     return {};\n@@ -4155,6 +4174,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (!pto->m_tx_relay->pfilter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n                         pto->m_tx_relay->filterInventoryKnown.insert(hash);\n+                        // Responses to MEMPOOL requests bypass the m_recently_announced_invs filter.\n                         vInv.push_back(inv);\n                         if (vInv.size() == MAX_INV_SZ) {\n                             connman->PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n@@ -4208,6 +4228,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                         }\n                         if (pto->m_tx_relay->pfilter && !pto->m_tx_relay->pfilter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         // Send\n+                        State(pto->GetId())->m_recently_announced_invs.insert(hash);\n                         vInv.push_back(CInv(MSG_TX, hash));\n                         nRelayedTransactions++;\n                         {"
      }
    ]
  },
  {
    "sha": "c4626bcd211af08c85b6567ef07eeae333edba47",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDYyNmJjZDIxMWFmMDhjODViNjU2N2VmMDdlZWFlMzMzZWRiYTQ3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-06-02T03:06:27Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-09T01:29:56Z"
      },
      "message": "Drop setInventoryTxToSend based filtering",
      "tree": {
        "sha": "140119b7bd141f2f5e34d2479b3063dfc004d188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/140119b7bd141f2f5e34d2479b3063dfc004d188"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4626bcd211af08c85b6567ef07eeae333edba47",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4626bcd211af08c85b6567ef07eeae333edba47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4626bcd211af08c85b6567ef07eeae333edba47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4626bcd211af08c85b6567ef07eeae333edba47/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43f02ccbff9b137d59458da7a8afdb0bf80e127f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43f02ccbff9b137d59458da7a8afdb0bf80e127f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43f02ccbff9b137d59458da7a8afdb0bf80e127f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "c8d03da659742065a6efcf2178f3ac21427df721",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4626bcd211af08c85b6567ef07eeae333edba47/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4626bcd211af08c85b6567ef07eeae333edba47/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c4626bcd211af08c85b6567ef07eeae333edba47",
        "patch": "@@ -1634,14 +1634,6 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n CTransactionRef static FindTxForGetData(const CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n {\n-    // Check if the requested transaction is so recent that we're just\n-    // about to announce it to the peer; if so, they certainly shouldn't\n-    // know we already have it.\n-    {\n-        LOCK(peer.m_tx_relay->cs_tx_inventory);\n-        if (peer.m_tx_relay->setInventoryTxToSend.count(txid)) return {};\n-    }\n-\n     auto txinfo = mempool.info(txid);\n     if (txinfo.tx) {\n         // If a TX could have been INVed in reply to a MEMPOOL request,"
      }
    ]
  },
  {
    "sha": "f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzJjNDA4ZjNhMGI3ZTU5Nzk3N2RmMmJjMmNkYzRhZTI5ODU4NmU1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-06-06T17:25:21Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-09T01:33:51Z"
      },
      "message": "Make sure unconfirmed parents are requestable",
      "tree": {
        "sha": "b0e10e4ca19e244cc4e7794843b4f3c583cf551d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0e10e4ca19e244cc4e7794843b4f3c583cf551d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32c408f3a0b7e597977df2bc2cdc4ae298586e5/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4626bcd211af08c85b6567ef07eeae333edba47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4626bcd211af08c85b6567ef07eeae333edba47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4626bcd211af08c85b6567ef07eeae333edba47"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9a4cd7d0d5f5b7a7af9b74f758fd102b148eb200",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f32c408f3a0b7e597977df2bc2cdc4ae298586e5/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f32c408f3a0b7e597977df2bc2cdc4ae298586e5/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=f32c408f3a0b7e597977df2bc2cdc4ae298586e5",
        "patch": "@@ -1694,6 +1694,17 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);\n+            // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n+            for (const auto& txin : tx->vin) {\n+                auto txinfo = mempool.info(txin.prevout.hash);\n+                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n+                    // Relaying a transaction with a recent but unconfirmed parent.\n+                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n+                        LOCK(cs_main);\n+                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+                    }\n+                }\n+            }\n         } else {\n             vNotFound.push_back(inv);\n         }"
      }
    ]
  }
]