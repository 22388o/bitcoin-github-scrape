TheBlueMatt,2016-02-11T02:29:46Z,ACK 8d1de43f0cbc79940d870d0ba09c7d28dd812ef8\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182676249,182676249,
sipa,2016-02-11T02:32:18Z,Why? Having a builtin miner was tremendously useful when experimenting with segnet.\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182676902,182676902,
dcousens,2016-02-11T02:32:32Z,ACK.   But this was useful when testing Segnet.\n\nI guess this marks the official end of an era?  Haha.\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182676927,182676927,
TheBlueMatt,2016-02-11T02:38:46Z,"@sipa Meh. Its really trivial to go git clone some CPU miner and point it to bitcoind...we dont need an entirely-unmaintained CPU miner in the codebase when we have a separate (?!) codepath for mining on regtest. If someone feels like merging this codepath and regtest, I'd be more happy, but having two separate built-in miners seems like overkill.\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182677485,182677485,
sipa,2016-02-11T02:46:19Z,"Feel free to go merge the codepaths then, or add a simple python based RPC miner instead. But I disagree with not being able to actually create valid blocks at all.\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182678285,182678285,
wtogami,2016-02-11T02:48:47Z,https://github.com/pooler/cpuminer\nMuch faster than the internal miner.  Supports GBT.\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182678531,182678531,
luke-jr,2016-02-11T02:50:37Z,BFGMiner also has CPU mining support FWIW.\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182678690,182678690,
sipa,2016-02-11T02:53:20Z,"Well at the very least, remove the restriction that `generate` can't be called on anything but regtest, and make it not stick in an infinite loop if no match is found after 2^32 attempts.\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182678959,182678959,
sipa,2016-02-11T02:55:57Z,"I agree with removing the duplicated code path, by the way. We wanted to do that when the regtest-specific behaviour of `setgenerate` was factored out into its own RPC, but we didn't want to make large changes at the time.\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182679173,182679173,
pstratem,2016-02-11T03:03:09Z,Tested ACK\n\n8d1de43f0cbc79940d870d0ba09c7d28dd812ef8\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182679849,182679849,
paveljanik,2016-02-11T06:47:27Z,"ACK https://github.com/Leviathn/bitcoin/commit/8d1de43f0cbc79940d870d0ba09c7d28dd812ef8\nGreat diffstat statistics, BTW ;-)\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182738816,182738816,
paveljanik,2016-02-11T06:51:52Z,NITS: please remove some `git grep BitcoinMiner` occurrences:\n\n```\ndoc/developer-notes.md:- BitcoinMiner : Generates bitcoins (if wallet is enabled).\nsrc/miner.cpp:// BitcoinMiner\n```\n\nFew more lines to be deleted...\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182739171,182739171,
laanwj,2016-02-11T07:50:54Z,"I tend to agree with this on the longer term.\n\nHowever, before this can be merged, there needs to be an _easy to compile and set up_ CPU miner (let's say a ""reference miner""). As well as instructions in `doc/` for setting this up instead (as migration path for people using the internal miner). \n\nLast time this was proposed, that was far from the case. I tried various project that were proposed",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182753546,182753546,
gmaxwell,2016-02-11T08:02:38Z,"I argued pretty vigorously against this before in that I feel that Bitcoin Core should be ""complete""-- that sending people off to weave together many programs to build a functioning system was not in the sincere spirit of decentralization.  Today testnet is not really cpu minable and we have the regtest miner. So I'm increasingly feeling this is a principled distinction with no practical impact.\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182756887,182756887,
luke-jr,2016-02-11T08:11:58Z,```\n./configure --enable-cpumining\nmake\n./bfgminer\n```\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182758269,182758269,
laanwj,2016-02-11T09:06:17Z,"@luke-jr As a reference miner, that's like swatting a fly with a thermonuclear missile. Checking it out is like downloading an operating system. I'd prefer something minimal and self-contained that people can more easily study.\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182774215,182774215,
sipa,2016-02-11T14:42:46Z,"So if you would:\n- Keep deleting all code that this PR currently deletes\n- Remove the restriction that the `generate` RPC only works for regtest\n- Fix the bug that `generate` will go into an infinite loop when it needs to check more than 2^32 hashes, or even better add a timeout and allow it to fail.\n\nThat means that instead of `bitcoin-cli setgenerate true`, you could use `while true; do bit",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-182892661,182892661,
pstratem,2016-02-11T23:25:17Z,"@sipa that seems reasonable, but changing the behavior of the generate rpc probably belongs in a new pr\n",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-183099472,183099472,
laanwj,2016-02-12T12:14:43Z,"~~I'm not sure about @sipa's solution. It is elegant because it removes duplicated code, but on the other hand I dislike a RPC call that can hang for a long time. This holds up a (precious) RPC thread instead of a dedicated mining thread. With a timeout (or ""max iter count"") it would certainly be acceptable to me though.~~\n\n~~But as you would effectively still need an external script to mine tes",https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-183299158,183299158,
laanwj,2016-03-06T20:11:21Z,@Leviathn are you going to move this forward according to sipa's comment?\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-192979418,192979418,
sipa,2016-03-09T21:32:49Z,See #7663.\n,https://github.com/bitcoin/bitcoin/pull/7507#issuecomment-194515139,194515139,
