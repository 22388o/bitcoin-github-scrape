fingera,2018-09-11T01:38:00Z,"Is it changing ec_privkey_export_der? Delete another branch that will never be reached\n\n",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420116745,420116745,
Empact,2018-09-11T03:28:08Z,Looks like a bug to me...,https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420134417,420134417,
DrahtBot,2018-09-11T03:39:45Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #12461 (scripted-diff: Rename key size consts to be relative to their class by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420136091,420136091,
achow101,2018-09-11T04:20:47Z,Please make your description and title more descriptive.,https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420141772,420141772,
practicalswift,2018-09-11T07:48:55Z,"@fingera Nice first-time contribution! Out of curiosity, how did you find this? :-)\n\nRelated: #10041 and #10043",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420180689,420180689,
fingera,2018-09-11T08:14:32Z,"You found out before, why not fix it?",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420187546,420187546,
fingera,2018-09-11T08:22:11Z,@practicalswift  https://github.com/fingera/fingera_libc/blob/master/tests/btc/key.cpp,https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420189701,420189701,
practicalswift,2018-09-11T08:26:44Z,@fingera Please re-open the PR: this is still confusing and hence unresolved :-),https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420190983,420190983,
laanwj,2018-09-12T08:33:50Z,"utACK (after squash), this clearly fixes a bug, `ec_privkey_export_der` does not take a bit field (`secp256k1_ec_pubkey_serialize` is what takes `SECP256K1_EC_COMPRESSED=258` and `SECP256K1_EC_UNCOMPRESSED=2`). I'm surprised none of the tests catches this.",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420560932,420560932,
practicalswift,2018-09-12T08:51:30Z,utACK 67e17da34de278c0b0bab0caad0ad877a053b0d6 modulo squash and a more informative commit message :-),https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420566390,420566390,
laanwj,2018-09-12T08:57:30Z,"suggested on IRC was, to prevent the bug as well as the conversion warning without using really contorted C++:\n```patch\ndiff --git a/src/key.cpp b/src/key.cpp\nindex df452cd3302ee6aff363b8fc8ea328b69d8bfb55..80d6589a3c36b823402b81d759ff43520037c43a 100644\n--- a/src/key.cpp\n+++ b/src/key.cpp\n@@ -89,7 +89,7 @@ static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *o",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420568210,420568210,
laanwj,2018-09-13T08:03:32Z,"merged via 9a565a8282236f29334a6ec2de6a03358f5ce86e\n",https://github.com/bitcoin/bitcoin/pull/14195#issuecomment-420919750,420919750,
practicalswift,2018-09-11T12:08:30Z,"```\nsrc/key.cpp:173:95: warning: implicit conversion bool -> 'int' [readability-implicit-bool-conversion]\n```",https://github.com/bitcoin/bitcoin/pull/14195#discussion_r216644302,216644302,src/key.cpp
laanwj,2018-09-12T08:30:22Z,"fCompressed is a C++ bool, this gets coerced to `1` or `0` automatically; so you can leave out the `? 1 : 0`.\n\n> the type bool can be converted to int with the value false becoming ​0​ and true becoming 1. \nhttps://en.cppreference.com/w/cpp/language/implicit_conversion",https://github.com/bitcoin/bitcoin/pull/14195#discussion_r216940572,216940572,src/key.cpp
laanwj,2018-09-12T08:31:12Z,"Huh, apparently @practicalswift told you to do this.\nCan you explain @practicalswift ?",https://github.com/bitcoin/bitcoin/pull/14195#discussion_r216940833,216940833,src/key.cpp
practicalswift,2018-09-12T08:46:38Z,@laanwj Explicit is better than implicit :-) See https://clang.llvm.org/extra/clang-tidy/checks/readability-implicit-bool-conversion.html for a more technical rationale :-),https://github.com/bitcoin/bitcoin/pull/14195#discussion_r216945605,216945605,src/key.cpp
