laanwj,2018-03-06T19:03:39Z,Is loadblk thread the only thread this is relevant for? what about the script verification threads?,https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-370891217,370891217,
promag,2018-03-06T19:48:18Z,"Is this the windows equivalent?\n```cpp\nSetThreadPriority(GetCurrentThread(), THREAD_MODE_BACKGROUND_BEGIN)\n```",https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-370905121,370905121,
eklitzke,2018-03-06T20:34:47Z,"On Linux `SCHED_BATCH` just prevents batch tasks from pre-empting normal tasks (i.e. normal tasks will run until their timeslice expires, or another normal tasks pre-empts them). When picking the next task to run the scheduler considers `SCHED_OTHER` (i.e. normal) and `SCHED_BATCH` tasks equally. This is why setting `SCHED_BATCH` tasks are only ""mildly disfavored"", because they'll still be conside",https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-370918802,370918802,
JeremyRubin,2018-03-06T23:00:16Z,"Concept ACK for this: \n\none note: you would want something realtime for scriptcheck threads while they are validating a block incoming from network -- we want these to take priority over other threads aggressively.\n",https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-370960158,370960158,
eklitzke,2018-03-09T18:42:53Z,"Re: Jeremy's comment, there are a few ways to increase the priority of the script verification thread to ensure low-latency block relay. On Linux there exists `SCHED_FIFO` and `SCHED_RR` threads which give threads semi-realtime scheduling guarantees, and can ensure that such threads are always prioritized above other threads. Linux also supports per-thread nice values (this is a Linux extension, P",https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-371908136,371908136,
MarcoFalke,2018-03-18T23:14:56Z,I think the commits can be squashed?,https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-374064663,374064663,
eklitzke,2018-03-19T06:58:08Z,"Thanks @MarcoFalke , squashed to one commit. I'm interested into looking at the RT change Jeremy suggested as well, but that's more impactful so I'd rather do that separately unless people want to see that change done here.",https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-374117709,374117709,
eklitzke,2018-03-26T22:58:53Z,"Updated to use `pthread_setschedparam()`. It seems that `<sched.h>` is standard on Posix systems but `SCHED_BATCH` is not, so I updated the `#ifdef` logic a little to reflect that. I also put the error logging in `SchedBatchPriority()` itself as this return 1 on Windows but errno won't be set. Could also do it the other way (return 0 on non-Linux hosts and then move the log statement to the call s",https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-376338730,376338730,
laanwj,2018-04-07T17:24:26Z,utACK https://github.com/bitcoin/bitcoin/pull/12618/commits/d54874d795a523d7cad5f4a9f4270145e56238f8,https://github.com/bitcoin/bitcoin/pull/12618#issuecomment-379485567,379485567,
laanwj,2018-03-06T19:03:19Z,"pid_t is not available on windows, I think it would be better to remove the parameter as it's always passed as 0.",https://github.com/bitcoin/bitcoin/pull/12618#discussion_r172624948,172624948,src/util.cpp
eklitzke,2018-03-06T19:09:39Z,I think you're right.,https://github.com/bitcoin/bitcoin/pull/12618#discussion_r172626755,172626755,src/util.cpp
ryanofsky,2018-03-22T14:20:45Z,Would be nice to log the error message if sched_batch returns -1. EINVAL / EPERM cases would be good to know about.,https://github.com/bitcoin/bitcoin/pull/12618#discussion_r176436766,176436766,src/init.cpp
ryanofsky,2018-03-22T14:26:41Z,Would calling `pthread_setschedparam` instead of `sched_setscheduler` be a little more portable? It seems like you might not need the configure check using this.,https://github.com/bitcoin/bitcoin/pull/12618#discussion_r176439149,176439149,src/util.cpp
