[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678411475",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19775#issuecomment-678411475",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19775",
    "id": 678411475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODQxMTQ3NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-21T17:47:30Z",
    "updated_at": "2020-08-21T17:47:30Z",
    "author_association": "MEMBER",
    "body": "utACK fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678411475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680409555",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19775#issuecomment-680409555",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19775",
    "id": 680409555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDQwOTU1NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-26T01:40:12Z",
    "updated_at": "2020-08-26T01:40:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19806 (validation: UTXO snapshot activation by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680409555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474801762",
    "pull_request_review_id": 472628032,
    "id": 474801762,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMTc2Mg==",
    "diff_hunk": "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;\n \n-    // Replace mempool-selected txns with just coinbase plus passed-in txns:\n-    block.vtx.resize(1);\n+    Assert(block.vtx.size() == 1);\n     for (const CMutableTransaction& tx : txns)",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
    "original_commit_id": "fad336e02b516790b030bc8c474d9995e57fbdc2",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "since you're touching lines above and below this, you may as well change it to current style in the first commit.",
    "created_at": "2020-08-21T16:27:17Z",
    "updated_at": "2020-08-21T16:45:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474801762",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474801762"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474801762"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474801762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 217,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474803985",
    "pull_request_review_id": 472628032,
    "id": 474803985,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMzk4NQ==",
    "diff_hunk": "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
    "original_commit_id": "fad336e02b516790b030bc8c474d9995e57fbdc2",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think there's any point in this local reference, since the function returns a `CBlock` value. You could just have:\r\n\r\n```\r\nCBlock block = pblocktemplate->block;\r\n```\r\n\r\nor maybe even better:\r\n\r\n```\r\n    CBlock block = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey)->block;\r\n```",
    "created_at": "2020-08-21T16:31:38Z",
    "updated_at": "2020-08-21T16:45:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474803985",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474803985"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474803985"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474803985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 214,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811251",
    "pull_request_review_id": 472640141,
    "id": 474811251,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxMTI1MQ==",
    "diff_hunk": "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;\n \n-    // Replace mempool-selected txns with just coinbase plus passed-in txns:\n-    block.vtx.resize(1);\n+    Assert(block.vtx.size() == 1);\n     for (const CMutableTransaction& tx : txns)",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
    "original_commit_id": "fad336e02b516790b030bc8c474d9995e57fbdc2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "thx, fixed",
    "created_at": "2020-08-21T16:46:36Z",
    "updated_at": "2020-08-21T16:46:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811251",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811251"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811251"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 217,
    "side": "RIGHT",
    "in_reply_to_id": 474801762
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811346",
    "pull_request_review_id": 472640229,
    "id": 474811346,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxMTM0Ng==",
    "diff_hunk": "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
    "original_commit_id": "fad336e02b516790b030bc8c474d9995e57fbdc2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "thx, fixed",
    "created_at": "2020-08-21T16:46:45Z",
    "updated_at": "2020-08-21T16:46:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811346",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811346"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811346"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 214,
    "side": "RIGHT",
    "in_reply_to_id": 474803985
  }
]