[
  {
    "sha": "bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWRiOGQ4OGJjZmJmY2FkY2QyM2U4ZjNmZjQ5NTYzNDBmY2IwMjhj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-18T19:34:10Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-18T19:34:10Z"
      },
      "message": "Avoid comparision of integers with different signs",
      "tree": {
        "sha": "f726fae074e5c46dd5d1d38f8fb2f810c3450a59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f726fae074e5c46dd5d1d38f8fb2f810c3450a59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b805dbb0b9c90dadef0424e5b3bf86ac308e103e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b805dbb0b9c90dadef0424e5b3bf86ac308e103e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b805dbb0b9c90dadef0424e5b3bf86ac308e103e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6318eb2e2f24cf06680c9e361027042eaec90eea",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=bedb8d88bcfbfcadcd23e8f3ff4956340fcb028c",
        "patch": "@@ -123,7 +123,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     m_node.mempool->addUnchecked(entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n \n     std::unique_ptr<CBlockTemplate> pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n-    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 4);\n+    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 4U);\n     BOOST_CHECK(pblocktemplate->block.vtx[1]->GetHash() == hashParentTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[2]->GetHash() == hashHighFeeTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[3]->GetHash() == hashMediumFeeTx);\n@@ -158,7 +158,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     hashLowFeeTx = tx.GetHash();\n     m_node.mempool->addUnchecked(entry.Fee(feeToUse+2).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n-    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 6);\n+    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 6U);\n     BOOST_CHECK(pblocktemplate->block.vtx[4]->GetHash() == hashFreeTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[5]->GetHash() == hashLowFeeTx);\n \n@@ -193,7 +193,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     tx.vout[0].nValue = 100000000 - 10000; // 10k satoshi fee\n     m_node.mempool->addUnchecked(entry.Fee(10000).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n-    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 9);\n+    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 9U);\n     BOOST_CHECK(pblocktemplate->block.vtx[8]->GetHash() == hashLowFeeTx2);\n }\n "
      }
    ]
  }
]