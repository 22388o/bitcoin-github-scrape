[
  {
    "sha": "f52f539c9898fa795d58ab5d09187d71a257640a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTJmNTM5Yzk4OThmYTc5NWQ1OGFiNWQwOTE4N2Q3MWEyNTc2NDBh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-17T02:28:43Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-03-15T20:30:32Z"
      },
      "message": "depends: use ac_cv_* rather than the vars themselves for config.site\n\nAlso don't set the value if it's already set.\n\nThis allows the value to be updated then passed to a subconfigure, which\nwould otherwise be reinitialized by the config.site",
      "tree": {
        "sha": "04fdc7c7592a2e00ac89d98cec02bd7497d13e28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04fdc7c7592a2e00ac89d98cec02bd7497d13e28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f52f539c9898fa795d58ab5d09187d71a257640a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f52f539c9898fa795d58ab5d09187d71a257640a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f52f539c9898fa795d58ab5d09187d71a257640a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f52f539c9898fa795d58ab5d09187d71a257640a/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "947c25ead21a00f3f9a46bb462ae8bc6fb7a0bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/947c25ead21a00f3f9a46bb462ae8bc6fb7a0bb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/947c25ead21a00f3f9a46bb462ae8bc6fb7a0bb6"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "99df892d55e3351a3b564450f80f042ee62905cf",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f52f539c9898fa795d58ab5d09187d71a257640a/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f52f539c9898fa795d58ab5d09187d71a257640a/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=f52f539c9898fa795d58ab5d09187d71a257640a",
        "patch": "@@ -61,9 +61,17 @@ fi\n CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n \n-CC=\"@CC@\"\n-CXX=\"@CXX@\"\n-OBJC=\"${CC}\"\n+# Only set these if they're not already set. This allows them to be passed to\n+# subconfigures without being reset to the config.site value\n+if test -z \"$ac_cv_prog_CC\"; then\n+  ac_cv_prog_CC=\"@CC@\"\n+fi\n+if test -z \"$ac_cv_prog_CXX\"; then\n+  ac_cv_prog_CXX=\"@CXX@\"\n+fi\n+if test -z \"$ac_cv_prog_OBJC\"; then\n+  ac_cv_prog_OBJC=\"${ac_cv_prog_CC}\"\n+fi\n PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n \n if test -n \"@AR@\"; then"
      }
    ]
  },
  {
    "sha": "09f06304215bc447953e5f990f17be77967062a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWYwNjMwNDIxNWJjNDQ3OTUzZTVmOTkwZjE3YmU3Nzk2NzA2MmEy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-17T01:04:52Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-03-15T20:30:32Z"
      },
      "message": "build: replace AC_CONFIG_SUBDIRS with AX_SUBDIRS_CONFIGURE\n\nAX_SUBDIRS_CONFIGURE allows us to cleanly add/remove/filter what gets passed to\nsubconfigures.\n\nThis should be a no op.",
      "tree": {
        "sha": "b3b5d21a26647b5ed1f2c4f0869a813041c779f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3b5d21a26647b5ed1f2c4f0869a813041c779f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09f06304215bc447953e5f990f17be77967062a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09f06304215bc447953e5f990f17be77967062a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09f06304215bc447953e5f990f17be77967062a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09f06304215bc447953e5f990f17be77967062a2/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f52f539c9898fa795d58ab5d09187d71a257640a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f52f539c9898fa795d58ab5d09187d71a257640a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f52f539c9898fa795d58ab5d09187d71a257640a"
      }
    ],
    "stats": {
      "total": 350,
      "additions": 346,
      "deletions": 4
    },
    "files": [
      {
        "sha": "84df56404e1baf5330211524a0276535320f0145",
        "filename": "build-aux/m4/ax_subdirs_configure.m4",
        "status": "added",
        "additions": 337,
        "deletions": 0,
        "changes": 337,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09f06304215bc447953e5f990f17be77967062a2/build-aux/m4/ax_subdirs_configure.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09f06304215bc447953e5f990f17be77967062a2/build-aux/m4/ax_subdirs_configure.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_subdirs_configure.m4?ref=09f06304215bc447953e5f990f17be77967062a2",
        "patch": "@@ -0,0 +1,337 @@\n+# ===========================================================================\n+#   https://www.gnu.org/software/autoconf-archive/ax_subdirs_configure.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_SUBDIRS_CONFIGURE( [subdirs], [mandatory arguments], [possibly merged arguments], [replacement arguments], [forbidden arguments])\n+#\n+# DESCRIPTION\n+#\n+#   AX_SUBDIRS_CONFIGURE attempts to be the equivalent of AC_CONFIG_SUBDIRS\n+#   with customizable options for configure scripts.\n+#\n+#   Run the configure script for each directory from the comma-separated m4\n+#   list 'subdirs'. This macro can be used multiple times. All arguments of\n+#   this macro must be comma-separated lists.\n+#\n+#   All command line arguments from the parent configure script will be\n+#   given to the subdirectory configure script after the following\n+#   modifications (in that order):\n+#\n+#   1. The arguments from the 'mandatory arguments' list shall always be\n+#   appended to the argument list.\n+#\n+#   2. The arguments from the 'possibly merged arguments' list shall be\n+#   added if not present in the arguments of the parent configure script or\n+#   merged with the existing argument otherwise.\n+#\n+#   3. The arguments from the 'replacement arguments' list shall be added if\n+#   not present in the arguments of the parent configure script or replace\n+#   the existing argument otherwise.\n+#\n+#   4. The arguments from the 'forbidden arguments' list shall always be\n+#   removed from the argument list.\n+#\n+#   The lists 'mandatory arguments' and 'forbidden arguments' can hold any\n+#   kind of argument. The 'possibly merged arguments' and 'replacement\n+#   arguments' expect their arguments to be of the form --option-name=value.\n+#\n+#   This macro aims to remain as close as possible to the AC_CONFIG_SUBDIRS\n+#   macro. It corrects the paths for '--cache-file' and '--srcdir' and adds\n+#   '--disable-option-checking' and '--silent' if necessary.\n+#\n+#   This macro also sets the output variable subdirs_extra to the list of\n+#   directories recorded with AX_SUBDIRS_CONFIGURE. This variable can be\n+#   used in Makefile rules or substituted in configured files.\n+#\n+#   This macro shall do nothing more than managing the arguments of the\n+#   configure script. Just like when using AC_CONFIG_SUBDIRS, it is up to\n+#   the user to check any requirements or define and substitute any required\n+#   variable for the remainder of the project.\n+#\n+#   Configure scripts recorded with AX_SUBDIRS_CONFIGURE may be executed\n+#   before configure scripts recorded with AC_CONFIG_SUBDIRS.\n+#\n+#   Without additional arguments, the behaviour of AX_SUBDIRS_CONFIGURE\n+#   should be identical to the behaviour of AC_CONFIG_SUBDIRS, apart from\n+#   the contents of the variables subdirs and subdirs_extra (except that\n+#   AX_SUBDIRS_CONFIGURE expects a comma-separated m4 list):\n+#\n+#     AC_CONFIG_SUBDIRS([something])\n+#     AX_SUBDIRS_CONFIGURE([something])\n+#\n+#   This macro may be called multiple times.\n+#\n+#   Usage example:\n+#\n+#   Let us assume our project has 4 dependencies, namely A, B, C and D. Here\n+#   are some characteristics of our project and its dependencies:\n+#\n+#   - A does not require any special option.\n+#\n+#   - we want to build B with an optional feature which can be enabled with\n+#   its configure script's option '--enable-special-feature'.\n+#\n+#   - B's configure script is strange and has an option '--with-B=build'.\n+#   After close inspection of its documentation, we don't want B to receive\n+#   this option.\n+#\n+#   - C and D both need B.\n+#\n+#   - Just like our project, C and D can build B themselves with the option\n+#   '--with-B=build'.\n+#\n+#   - We want C and D to use the B we build instead of building it\n+#   themselves.\n+#\n+#   Our top-level configure script will be called as follows:\n+#\n+#     $ <path/to/configure> --with-A=build --with-B=build --with-C=build \\\n+#       --with-D=build --some-option\n+#\n+#   Thus we have to make sure that:\n+#\n+#   - neither B, C or D receive the option '--with-B=build'\n+#\n+#   - C and D know where to find the headers and libraries of B.\n+#\n+#   Under those conditions, we can use the AC_CONFIG_SUBDIRS macro for A,\n+#   but need to use AX_SUBDIRS_CONFIGURE for B, C and D:\n+#\n+#   - B must receive '--enable-special-feature' but cannot receive\n+#   '--with-B=build'\n+#\n+#   - C and D cannot receive '--with-B=build' (or else it would be built\n+#   thrice) and need to be told where to find B (since we are building it,\n+#   it would probably not be available in standard paths).\n+#\n+#   Here is a configure.ac snippet that solves our problem:\n+#\n+#     AC_CONFIG_SUBDIRS([dependencies/A])\n+#     AX_SUBDIRS_CONFIGURE(\n+#         [dependencies/B], [--enable-special-feature], [], [],\n+#         [--with-B=build])\n+#     AX_SUBDIRS_CONFIGURE(\n+#         [[dependencies/C],[dependencies/D]],\n+#         [],\n+#         [[CPPFLAGS=-I${ac_top_srcdir}/dependencies/B -I${ac_top_builddir}/dependencies/B],\n+#          [LDFLAGS=-L${ac_abs_top_builddir}/dependencies/B/.libs]],\n+#         [--with-B=system],\n+#         [])\n+#\n+#   If using automake, the following can be added to the Makefile.am (we use\n+#   both $(subdirs) and $(subdirs_extra) since our example above used both\n+#   AC_CONFIG_SUBDIRS and AX_SUBDIRS_CONFIGURE):\n+#\n+#     SUBDIRS = $(subdirs) $(subdirs_extra)\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2017 Harenome Ranaivoarivony-Razanajato <ranaivoarivony-razanajato@hareno.me>\n+#\n+#   This program is free software; you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation; either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   Under Section 7 of GPL version 3, you are granted additional permissions\n+#   described in the Autoconf Configure Script Exception, version 3.0, as\n+#   published by the Free Software Foundation.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <https://www.gnu.org/licenses/>.\n+\n+#serial 4\n+\n+AC_DEFUN([AX_SUBDIRS_CONFIGURE],\n+[\n+  dnl Calls to AC_CONFIG_SUBDIRS perform preliminary steps and build a list\n+  dnl '$subdirs' which is used later by _AC_OUTPUT_SUBDIRS (used by AC_OUTPUT)\n+  dnl to actually run the configure scripts.\n+  dnl This macro performs similiar preliminary steps but uses\n+  dnl AC_CONFIG_COMMANDS_PRE to delay the final tasks instead of building an\n+  dnl intermediary list and relying on another macro.\n+  dnl\n+  dnl Since each configure script can get different options, a special variable\n+  dnl named 'ax_sub_configure_args_<subdir>' is constructed for each\n+  dnl subdirectory.\n+\n+  # Various preliminary checks.\n+  AC_REQUIRE([AC_DISABLE_OPTION_CHECKING])\n+  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])\n+  AS_LITERAL_IF([$1], [],\n+      [AC_DIAGNOSE([syntax], [$0: you should use literals])])\n+\n+  m4_foreach(subdir_path, [$1],\n+  [\n+    ax_dir=\"subdir_path\"\n+\n+    dnl Build the argument list in a similiar fashion to AC_CONFIG_SUBDIRS.\n+    dnl A few arguments found in the final call to the configure script are not\n+    dnl added here because they rely on variables that may not yet be available\n+    dnl (see below the part that is similiar to _AC_OUTPUT_SUBDIRS).\n+    # Do not complain, so a configure script can configure whichever parts of a\n+    # large source tree are present.\n+    if test -d \"$srcdir/$ax_dir\"; then\n+      _AC_SRCDIRS([\"$ax_dir\"])\n+      # Remove --cache-file, --srcdir, and --disable-option-checking arguments\n+      # so they do not pile up.\n+      ax_args=\n+      ax_prev=\n+      eval \"set x $ac_configure_args\"\n+      shift\n+      for ax_arg; do\n+        if test -n \"$ax_prev\"; then\n+          ax_prev=\n+          continue\n+        fi\n+        case $ax_arg in\n+          -cache-file | --cache-file | --cache-fil | --cache-fi | --cache-f \\\n+          | --cache- | --cache | --cach | --cac | --ca | --c)\n+            ax_prev=cache_file ;;\n+          -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n+          | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* \\\n+          | --c=*)\n+            ;;\n+          --config-cache | -C)\n+            ;;\n+          -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n+            ax_prev=srcdir ;;\n+          -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n+            ;;\n+          -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n+            ax_prev=prefix ;;\n+          -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* \\\n+          | --p=*)\n+            ;;\n+          --disable-option-checking)\n+            ;;\n+          *) case $ax_arg in\n+              *\\'*) ax_arg=$(AS_ECHO([\"$ax_arg\"]) | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\");;\n+            esac\n+            AS_VAR_APPEND([ax_args], [\" '$ax_arg'\"]) ;;\n+        esac\n+      done\n+      # Always prepend --disable-option-checking to silence warnings, since\n+      # different subdirs can have different --enable and --with options.\n+      ax_args=\"--disable-option-checking $ax_args\"\n+      # Options that must be added as they are provided.\n+      m4_ifnblank([$2], [m4_foreach(opt, [$2], [AS_VAR_APPEND(ax_args, \" 'opt'\")\n+      ])])\n+      # New options that may need to be merged with existing options.\n+      m4_ifnblank([$3], [m4_foreach(opt, [$3],\n+          [ax_candidate=\"opt\"\n+           ax_candidate_flag=\"${ax_candidate%%=*}\"\n+           ax_candidate_content=\"${ax_candidate#*=}\"\n+           if test \"x$ax_candidate\" != \"x\" -a \"x$ax_candidate_flag\" != \"x\"; then\n+             if echo \"$ax_args\" | grep -- \"${ax_candidate_flag}=\" >/dev/null 2>&1; then\n+               [ax_args=$(echo $ax_args | sed \"s,\\(${ax_candidate_flag}=[^']*\\),\\1 ${ax_candidate_content},\")]\n+             else\n+               AS_VAR_APPEND(ax_args, \" 'opt'\")\n+             fi\n+           fi\n+      ])])\n+      # New options that must replace existing options.\n+      m4_ifnblank([$4], [m4_foreach(opt, [$4],\n+          [ax_candidate=\"opt\"\n+           ax_candidate_flag=\"${ax_candidate%%=*}\"\n+           ax_candidate_content=\"${ax_candidate#*=}\"\n+           if test \"x$ax_candidate\" != \"x\" -a \"x$ax_candidate_flag\" != \"x\"; then\n+             if echo \"$ax_args\" | grep -- \"${ax_candidate_flag}=\" >/dev/null 2>&1; then\n+               [ax_args=$(echo $ax_args | sed \"s,${ax_candidate_flag}=[^']*,${ax_candidate},\")]\n+             else\n+               AS_VAR_APPEND(ax_args, \" 'opt'\")\n+             fi\n+           fi\n+      ])])\n+      # Options that must be removed.\n+      m4_ifnblank([$5], [m4_foreach(opt, [$5], [ax_args=$(echo $ax_args | sed \"s,'opt',,\")\n+      ])])\n+      AS_VAR_APPEND([ax_args], [\" '--srcdir=$ac_srcdir'\"])\n+\n+      # Add the subdirectory to the list of target subdirectories.\n+      ax_subconfigures=\"$ax_subconfigures $ax_dir\"\n+      # Save the argument list for this subdirectory.\n+      dnl $1 is a path to some subdirectory: m4_bpatsubsts() is used to convert\n+      dnl $1 into a valid shell variable name.\n+      dnl For instance, \"ax_sub_configure_args_path/to/subdir\" becomes\n+      dnl \"ax_sub_configure_args_path_to_subdir\".\n+      ax_var=$(printf \"$ax_dir\" | tr -c \"0-9a-zA-Z_\" \"_\")\n+      eval \"ax_sub_configure_args_$ax_var=\\\"$ax_args\\\"\"\n+      eval \"ax_sub_configure_$ax_var=\\\"yes\\\"\"\n+    else\n+      AC_MSG_WARN([could not find source tree for $ax_dir])\n+    fi\n+\n+    dnl Add some more arguments to the argument list and then actually run the\n+    dnl configure script. This is mostly what happens in _AC_OUTPUT_SUBDIRS\n+    dnl except it does not iterate over an intermediary list.\n+    AC_CONFIG_COMMANDS_PRE(\n+      dnl This very line cannot be quoted! m4_foreach has some work here.\n+      ax_dir=\"subdir_path\"\n+    [\n+      # Convert the path to the subdirectory into a shell variable name.\n+      ax_var=$(printf \"$ax_dir\" | tr -c \"0-9a-zA-Z_\" \"_\")\n+      ax_configure_ax_var=$(eval \"echo \\\"\\$ax_sub_configure_$ax_var\\\"\")\n+      if test \"$no_recursion\" != \"yes\" -a \"x$ax_configure_ax_var\" = \"xyes\"; then\n+        AC_SUBST([subdirs_extra], [\"$subdirs_extra $ax_dir\"])\n+        ax_msg=\"=== configuring in $ax_dir ($(pwd)/$ax_dir)\"\n+        _AS_ECHO_LOG([$ax_msg])\n+        _AS_ECHO([$ax_msg])\n+        AS_MKDIR_P([\"$ax_dir\"])\n+        _AC_SRCDIRS([\"$ax_dir\"])\n+\n+        ax_popdir=$(pwd)\n+        cd \"$ax_dir\"\n+\n+        # Check for guested configure; otherwise get Cygnus style configure.\n+        if test -f \"$ac_srcdir/configure.gnu\"; then\n+          ax_sub_configure=$ac_srcdir/configure.gnu\n+        elif test -f \"$ac_srcdir/configure\"; then\n+          ax_sub_configure=$ac_srcdir/configure\n+        elif test -f \"$ac_srcdir/configure.in\"; then\n+          # This should be Cygnus configure.\n+          ax_sub_configure=$ac_aux_dir/configure\n+        else\n+          AC_MSG_WARN([no configuration information is in $ax_dir])\n+          ax_sub_configure=\n+        fi\n+\n+        if test -n \"$ax_sub_configure\"; then\n+          # Get the configure arguments for the current configure.\n+          eval \"ax_sub_configure_args=\\\"\\$ax_sub_configure_args_${ax_var}\\\"\"\n+\n+          # Always prepend --prefix to ensure using the same prefix\n+          # in subdir configurations.\n+          ax_arg=\"--prefix=$prefix\"\n+          case $ax_arg in\n+            *\\'*) ax_arg=$(AS_ECHO([\"$ax_arg\"]) | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\");;\n+          esac\n+          ax_sub_configure_args=\"'$ax_arg' $ax_sub_configure_args\"\n+          if test \"$silent\" = yes; then\n+            ax_sub_configure_args=\"--silent $ax_sub_configure_args\"\n+          fi\n+          # Make the cache file name correct relative to the subdirectory.\n+          case $cache_file in\n+            [[\\\\/]]* | ?:[[\\\\/]]* )\n+              ax_sub_cache_file=$cache_file ;;\n+            *) # Relative name.\n+              ax_sub_cache_file=$ac_top_build_prefix$cache_file ;;\n+          esac\n+\n+          AC_MSG_NOTICE([running $SHELL $ax_sub_configure $ax_sub_configure_args --cache-file=$ac_sub_cache_file])\n+          eval \"\\$SHELL \\\"$ax_sub_configure\\\" $ax_sub_configure_args --cache-file=\\\"$ax_sub_cache_file\\\"\" \\\n+              || AC_MSG_ERROR([$ax_sub_configure failed for $ax_dir])\n+        fi\n+\n+        cd \"$ax_popdir\"\n+      fi\n+    ])\n+  ])\n+])"
      },
      {
        "sha": "a70dade8e8eaca0433911da8e5535d8f3e7f0c91",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09f06304215bc447953e5f990f17be77967062a2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09f06304215bc447953e5f990f17be77967062a2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=09f06304215bc447953e5f990f17be77967062a2",
        "patch": "@@ -1321,14 +1321,19 @@ unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n if test x$need_bundled_univalue = xyes; then\n-  AC_CONFIG_SUBDIRS([src/univalue])\n+  AX_SUBDIRS_CONFIGURE([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n+AX_SUBDIRS_CONFIGURE([src/secp256k1],[[--disable-shared],[--with-pic],[--with-bignum=no],[--enable-module-recovery],[--disable-jni]])\n \n-AC_OUTPUT\n+dnl autoreconf has special handling for AC_CONFIGURE_SUBDIRS in order to run autoconf in subdirs.\n+dnl When using AX_SUBDIRS_CONFIGURE instead though, autoreconf's scan does not find the subdirs, so\n+dnl add a quick hack here that will turn up during parsing but not execution.\n+if false; then\n+  AC_CONFIG_SUBDIRS([src/univalue src/secp256k1])\n+fi\n \n+AC_OUTPUT\n dnl Taken from https://wiki.debian.org/RpathIssue\n case $host in\n    *-*-linux-gnu)"
      }
    ]
  },
  {
    "sha": "8816f3dcae0362e2dea2f92aefaff220b5e76a0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODE2ZjNkY2FlMDM2MmUyZGVhMmY5MmFlZmFmZjIyMGI1ZTc2YTBk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-17T01:06:30Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-03-15T20:30:32Z"
      },
      "message": "build: pass c++ std version to univalue\n\nOnce we're certain that our CXX is compiling as c++11, pass it to univalue for\nuse there as well.\n\nThis avoids having a binary trying to conform to 2 abi's simultaneously.",
      "tree": {
        "sha": "cbcd653ad61a71013047f7f84c2594cb1e3b34cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbcd653ad61a71013047f7f84c2594cb1e3b34cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8816f3dcae0362e2dea2f92aefaff220b5e76a0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8816f3dcae0362e2dea2f92aefaff220b5e76a0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8816f3dcae0362e2dea2f92aefaff220b5e76a0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8816f3dcae0362e2dea2f92aefaff220b5e76a0d/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09f06304215bc447953e5f990f17be77967062a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09f06304215bc447953e5f990f17be77967062a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09f06304215bc447953e5f990f17be77967062a2"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e9f8daa072311040887ade54116da9adc46c5795",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8816f3dcae0362e2dea2f92aefaff220b5e76a0d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8816f3dcae0362e2dea2f92aefaff220b5e76a0d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=8816f3dcae0362e2dea2f92aefaff220b5e76a0d",
        "patch": "@@ -1321,7 +1321,11 @@ unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n if test x$need_bundled_univalue = xyes; then\n-  AX_SUBDIRS_CONFIGURE([src/univalue])\n+  dnl CXX might've been modified above to force a c++ std version, one that may\n+  dnl not match the version that univalue would use. Pass ours down, overriding\n+  dnl any manually set value, since this one can only be an improvement.\n+  dnl ac_cv_prog_CXX is used rather than CXX to avoid breaking the config cache.\n+  AX_SUBDIRS_CONFIGURE([src/univalue],[],[],[[ac_cv_prog_CXX=${CXX}]])\n fi\n \n AX_SUBDIRS_CONFIGURE([src/secp256k1],[[--disable-shared],[--with-pic],[--with-bignum=no],[--enable-module-recovery],[--disable-jni]])"
      }
    ]
  }
]