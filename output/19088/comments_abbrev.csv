practicalswift,2020-05-28 10:15:19,Concept ACK: suggestion version is more readable,https://github.com/bitcoin/bitcoin/pull/19088#issuecomment-635250878,635250878,
laanwj,2020-05-28 10:34:46,"Concept ACK, I think this makes code dealing with time more readable and type-safe.",https://github.com/bitcoin/bitcoin/pull/19088#issuecomment-635259697,635259697,
MarcoFalke,2020-05-28 14:13:57,ACK 789e9dd3aa727176797529c35b2848f994630a82,https://github.com/bitcoin/bitcoin/pull/19088#issuecomment-635376216,635376216,
DrahtBot,2020-05-30 22:10:27,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19005 (doc: Add documentation for 'checklevel' argument in 'verifychain' RPCâ€¦ by kcalvinalvin)\n\nIf you consider this pu",https://github.com/bitcoin/bitcoin/pull/19088#issuecomment-636391537,636391537,
MarcoFalke,2020-05-28 10:21:10,"```suggestion\n    if (::ChainActive().Tip()->GetBlockTime() < count_seconds(GetTime<std::chrono::seconds>() - MAX_FEE_ESTIMATION_TIP_AGE))\n```\nOtherwise `.count` will return the wrong value in a future refactor where the second operand of the `-` changes its type to something with greater precision than seconds.",https://github.com/bitcoin/bitcoin/pull/19088#discussion_r431732582,431732582,src/validation.cpp
MarcoFalke,2020-05-28 10:23:09,"style-nit only: I think the comment should stay as is before, otherwise it will be a pain to change it again should the value change from 1 day to let's say 23 hours.",https://github.com/bitcoin/bitcoin/pull/19088#discussion_r431733616,431733616,src/validation.cpp
fanquake,2020-05-28 13:54:47,Reverted.,https://github.com/bitcoin/bitcoin/pull/19088#discussion_r431853315,431853315,src/validation.cpp
fanquake,2020-05-28 13:54:56,"Done. It'd be great if you could open an issue documenting what these future, higher-precision time refactor changes are going to be, so it's clearer why we are writing code to accommodate them now.",https://github.com/bitcoin/bitcoin/pull/19088#discussion_r431853426,431853426,src/validation.cpp
MarcoFalke,2020-05-28 14:11:16,There are no specific refactors planned. The mentioned refactor was imaginary to illustrate why writing code as robust as possible is important.,https://github.com/bitcoin/bitcoin/pull/19088#discussion_r431865388,431865388,src/validation.cpp
