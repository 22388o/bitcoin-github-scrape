jonatack,2021-08-20 13:36:53,Concept ACK. Ready for rebase now that #22697 is merged.,https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-902698418,902698418,
MarcoFalke,2021-08-20 13:45:17,Is there a reason to not move every implementation to the cpp file?,https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-902703657,902703657,
amitiuttarwar,2021-08-20 19:48:24,"@MarcoFalke \n\n>Is there a reason to not move every implementation to the cpp file?\n\nhmm, are you referring to the definitions of the wrapper functions? Most of what's left in the header are the simple public functions that acquire lock, call check & invoke the private functions.",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-902918737,902918737,
DrahtBot,2021-08-21 02:15:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22734](https://github.com/bitcoin/bitcoin/pull/22734) (addrman: Avoid crash on corrupt data, Force Check after deseriali",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-903038667,903038667,
MarcoFalke,2021-08-25 16:27:22,"> I haven't checked format specifiers in other places\n\nWe use tinyformat, so when in doubt you can (at no risk) just always use `%s`.",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-905687911,905687911,
amitiuttarwar,2021-08-26 03:41:32,"thanks for the review @jnewbery. took all your suggestions & updated the commit messages with reviewer hints. @MarcoFalke thanks for the tip about tinyformat! I had not realized the specifier interchangeability that provides. I did update the inconsistency that John pointed out, but seems like getting these specifiers right is generally unnecessary in our codebase!? ðŸ¤¯ ",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-906068505,906068505,
amitiuttarwar,2021-08-26 18:58:41,"thanks for the review @jnewbery, I fixed those small issues.",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-906663444,906663444,
jnewbery,2021-08-27 10:05:12,Code review ACK 85b15ddc8ff499fe21d8ab35ece3994f8878b3de,https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-907086043,907086043,
0xB10C,2021-08-30 12:12:08,"Code review ACK 85b15ddc8\n\nThanks for the reviewer hints. I found https://stackoverflow.com/questions/42388077/constexpr-vs-macros/42388687 useful to learn about `#define` vs `constexpr`.",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-908290550,908290550,
amitiuttarwar,2021-08-30 16:46:42,"thanks @0xB10C, for the review and the useful link :) ",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-908503585,908503585,
MarcoFalke,2021-09-02 09:40:32,"When moving code from the h to the cpp, it could make sense to also move the includes:\n\n```diff\ndiff --git a/src/addrman.cpp b/src/addrman.cpp\nindex 5d9aeec1b1..9e8534e70e 100644\n--- a/src/addrman.cpp\n+++ b/src/addrman.cpp\n@@ -5,10 +5,12 @@\n \n #include <addrman.h>\n \n+#include <clientversion.h>\n #include <hash.h>\n #include <logging.h>\n #include <netaddress.h>\n #include",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-911461646,911461646,
amitiuttarwar,2021-09-02 14:31:01,"@MarcoFalke good point. I'm planning to open a pull along these lines in the next few days, so will include this patch there. thanks :)",https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-911750070,911750070,
jonatack,2021-09-02 15:31:31,Post-merge ACK,https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-911811480,911811480,
jnewbery,2021-08-25 15:58:08,"I don't think these need to change any more, now that you're defining `ADDRMAN_NEW_BUCKET_COUNT` and `ADDRMAN_BUCKET_SIZE` as ints.",https://github.com/bitcoin/bitcoin/pull/22740#discussion_r695893737,695893737,src/test/addrman_tests.cpp
amitiuttarwar,2021-08-26 03:30:49,"fixed, thanks!",https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696261860,696261860,src/test/addrman_tests.cpp
jnewbery,2021-08-26 13:15:46,Please remove extra newline,https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696618049,696618049,src/addrman.cpp
jnewbery,2021-08-26 13:17:25,These changes to the format specifiers should be in _[addrman] Change addrman #define constants to be constexprs_ (where you declare the types of the constants) rather than _[move-only] Extract constants from addrman .h to .cpp_ (which should be move-only),https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696619577,696619577,src/addrman.cpp
amitiuttarwar,2021-08-26 18:56:54,fixed,https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696899350,696899350,src/addrman.cpp
amitiuttarwar,2021-08-26 18:57:31,"blergh, my bad. fixed now.",https://github.com/bitcoin/bitcoin/pull/22740#discussion_r696899732,696899732,src/addrman.cpp
mzumsande,2021-08-31 21:02:00,"nit: I think the old comment was more precise in referring to state rather than process (""added"") - an address could be added more often over time, in the not untypical case where earlier instances were replaced due to new table collisions.",https://github.com/bitcoin/bitcoin/pull/22740#discussion_r699671005,699671005,src/addrman.cpp
amitiuttarwar,2021-08-31 21:42:55,"ah, I see what you're saying. maybe this would be better?\n\n```suggestion\n/** Maximum number of times an address can occur in the new table */\n```\n\nI'm not planning to address right now, but will keep it in mind for future changes :) ",https://github.com/bitcoin/bitcoin/pull/22740#discussion_r699693949,699693949,src/addrman.cpp
