promag,2018-06-03T16:30:46Z,"There is no need for a new parameter, check if label is null instead - this means that the default is to preserve if it exists otherwise """".",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394174008,394174008,
promag,2018-06-03T17:29:07Z,"Concept ACK, a test would be nice.",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394177666,394177666,
marcoagner,2018-06-03T21:16:35Z,"Thank you, @promag.\nI added some functional tests for this specific behavior between importaddress and importprivkey.\nIf everything is alright, I'll squash and rebase as necessary.",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394192050,394192050,
marcoagner,2018-06-03T23:57:46Z,"Updated with the right behavior.\nI will squash and rebase it as necessary in the morning, thanks.",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394202360,394202360,
harding,2018-06-04T17:58:01Z,"Tested ACK 74877f3b10072e1975c931bb296212e008cd8c58 .  This is exactly the behavior I desired, thanks @marcoagner!",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394443740,394443740,
marcoagner,2018-06-10T11:16:38Z,I'm back to this. The new commit keeps the already tested behaviour (passing tests added on this PR et al) and passes new test for the multiple destinations bug spotted by @Empact.,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396040933,396040933,
luke-jr,2018-06-12T21:44:50Z,"This still changes behaviour: the default is now `null` (ie, current label) instead of `""""`.\n\nI don't particularly care what the default is (`null` makes more sense), but the change should be documented and noted in release notes.",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396744773,396744773,
promag,2018-06-13T00:01:06Z,Agree with @luke-jr regarding the behaviour change.,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396771581,396771581,
marcoagner,2018-06-13T12:03:37Z,"I added a `release-notes-pr13381.md` file documenting the change.\nLet me know if I missed something or should document this somewhere else.\nThanks!",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396913526,396913526,
harding,2018-06-13T13:31:40Z,@marcoagner Thanks for adding the release notes!  I thought maybe the behavior change could be described more simply with the addition of a few examples; see below from some proposed text.  I also changed the heading so that it's clear that only a small part of the importprivkey API is being changed (I also removed the `code style` from the heading as those don't display well in headings on parts ,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396938118,396938118,
marcoagner,2018-06-13T13:57:18Z,"@harding That's much better, thanks.\nI'm changing to that on the next commit with some small (nit) differences.\nHere's the diff so it's easier to spot my edits:\n```diff\n4,5c4,5\n< Previously, `importprivkey`automatically added the default empty label\n< ("""") to all addresses associated with imported private keys.  Now it\n---\n> Previously, `importprivkey` automatically added the defau",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396946645,396946645,
harding,2018-06-13T14:30:46Z,"@marcoagner LGTM, although the two uses of 'default' in this clause is a tiny bit awkward IMO (but, it's clear, which is all that really matters):\n\n> they will still receive the default empty label ("""") as default.\n\nMaybe that second-to-last sentence could have its adverbial phrase ""using the default settings"" moved next to the verb it modifies, ""import"", e.g.:\n\n> You use the default s",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396958556,396958556,
marcoagner,2018-06-13T15:22:34Z,@harding I changed both parts pointed in your last comment. Thanks for the attention and help with this; I think we've now nailed this part. :),https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396977679,396977679,
marcoagner,2018-07-19T22:12:06Z,"Could anybody review 6115b5231954a38c400fa4808627dbb8e239ea68, please? One month in the freezer and is (hopefully) simple. :) @promag @Empact ",https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-406430341,406430341,
marcoagner,2018-07-20T10:20:48Z,Thank you all for reviewing again. Updated with 1d4fdb33349a60cac1926f83586826ba62b1a451.,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-406558551,406558551,
promag,2018-07-20T10:27:23Z,Maybe @harding could re-test?,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-406560125,406560125,
MarcoFalke,2018-09-13T22:16:24Z,Lets see what travis says,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-421170422,421170422,
DrahtBot,2018-09-15T14:21:59Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-421577929,421577929,
marcoagner,2018-10-05T13:39:36Z,`wallet_basic.py` passed locally but seems to have failed on appveyor :thinking: ,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-427369326,427369326,
meshcollider,2018-11-10T12:58:54Z,utACK https://github.com/bitcoin/bitcoin/pull/13381/commits/a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-437582169,437582169,
sipa,2018-11-11T03:10:22Z,utACK a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-437640023,437640023,
Empact,2018-11-13T06:25:28Z,utACK a6b5ec1,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-438152147,438152147,
jonasschnelli,2018-11-13T07:51:06Z,utACK a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938,https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-438169294,438169294,
promag,2018-06-03T21:42:00Z,"I was thinking in something like\n```cpp\nif (request.params[1].isNull()) {\n    const auto& it = pwallet->mapAddressBook.find(dest);\n    if (it != pwallet->mapAddressBook.end()) strLabel = it->second;\n}\npwallet->SetAddressBook(dest, strLabel, ""receive"");\n```",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192603399,192603399,src/wallet/rpcdump.cpp
marcoagner,2018-06-03T23:52:55Z,"Hm, I see. Yeah.. this behavior seems better. Thanks!\nUpdating this and the test.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192606863,192606863,src/wallet/rpcdump.cpp
promag,2018-06-04T00:12:03Z,2018,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192607435,192607435,test/functional/wallet_import_with_label.py
promag,2018-06-04T00:17:48Z,Comment is inacurate.,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192607614,192607614,src/wallet/rpcdump.cpp
Empact,2018-06-08T07:24:13Z,"Is it problematic that this will apply the label for a given destination over all following destinations, provided they aren't found on lookup? I suspect you'll want another destination-specific local to prevent that.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r193972817,193972817,src/wallet/rpcdump.cpp
promag,2018-06-08T12:18:56Z,"Good catch! Suggestion:\n```cpp\nif (it == pwallet->mapAddressBook.end() || !request.params[1].isNull()) {\n    pwallet->SetAddressBook(dest, strLabel, ""receive"")\n}\n```",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194039082,194039082,src/wallet/rpcdump.cpp
promag,2018-06-08T12:19:46Z,There should be a test ensuring the correct behaviour.,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194039235,194039235,src/wallet/rpcdump.cpp
marcoagner,2018-06-08T12:48:55Z,"Yes, makes sense. I will update it and add a test for the correct behaviour as soon as I can.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194046271,194046271,src/wallet/rpcdump.cpp
sipa,2018-07-19T22:59:21Z,Nit: It's slightly confusing to use a reference type here; `find` returns an iterator by value. ,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203897426,203897426,src/wallet/rpcdump.cpp
promag,2018-07-20T00:37:47Z,Should be `... imported private key.` (singular)?,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203912379,203912379,doc/release-notes-pr13381.md
promag,2018-07-20T00:43:00Z,"Could drop `watch-only` since the code below does't validate that, it only checks if the label exists for each associated address. So `default=current label if exists, otherwise \""\""`.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203912935,203912935,src/wallet/rpcdump.cpp
promag,2018-07-20T00:59:41Z,"Nit, maybe make it clear that `params[1]` has precedence â€” prevents a lookup if it does? Also, updating with the same label could be avoided, or am I missing something? Suggestion:\n```cpp\nfor (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n    if (!request.params[1].isNull()) {\n        pwallet->SetAddressBook(dest, strLabel, ""receive"")\n    } else if (pwallet->mapAddressBook.count",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203914840,203914840,src/wallet/rpcdump.cpp
promag,2018-07-20T01:00:33Z,Drop `watch-only`?,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203914933,203914933,test/functional/wallet_import_with_label.py
promag,2018-07-20T01:02:10Z,Can be removed.,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203915132,203915132,test/functional/wallet_import_with_label.py
marcoagner,2018-07-20T10:19:41Z,"Yes. Just leaving `address` between `if` and `exists`: `default=current label if address exists, otherwise \""\""`. (I know it was probably just a typo; I'm commenting to make sure)",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204000314,204000314,src/wallet/rpcdump.cpp
marcoagner,2018-07-20T10:19:43Z,"Yes, it seems right to me. Thank you again!\nI thought I had to somehow guarantee purpose was now ""receive"" for all dests, but it doesn't seem to be the case now I looked.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204000323,204000323,src/wallet/rpcdump.cpp
sipa,2018-07-21T06:46:35Z,"Given that the branches for the two `if` statements are identical, why not write it as a single `if (!request.params[1].isNull() || pwallet->mapAddressBook.count(dest)) {` ?",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204204143,204204143,src/wallet/rpcdump.cpp
marcoagner,2018-07-21T08:30:26Z,Just to try to make it obvious in the code that the `request.params[1]` has precedence. Bad idea? Both work.,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204205920,204205920,src/wallet/rpcdump.cpp
marcoagner,2018-07-21T08:32:38Z,No reason besides it since AFAIK putting the look up as second condition in the `||` statement (like your suggestion) will not call it if there is a `params[1]` in the first condition.,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204205953,204205953,src/wallet/rpcdump.cpp
MarcoFalke,2018-09-13T22:16:14Z,The skip-if-no-wallet might have to be added to this test?,https://github.com/bitcoin/bitcoin/pull/13381#discussion_r217550941,217550941,test/functional/wallet_import_with_label.py
marcoagner,2018-09-28T00:31:59Z,"You're right. I was not aware, thanks.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r221115038,221115038,test/functional/wallet_import_with_label.py
practicalswift,2018-10-05T07:25:25Z,Since this is a new file - please run it through `black` to get it auto-formatted in accordance with PEP-8 :-),https://github.com/bitcoin/bitcoin/pull/13381#discussion_r222913572,222913572,test/functional/wallet_import_with_label.py
marcoagner,2018-10-05T12:40:29Z,"Hm, nice. Didn't know this `black`, thanks. \nI was using Flake8. Besides the double-quotes for strings, it seems that `black` has a longer default line length, but I'm okay with (actually prefer) that. :)\nI will just rebase, re-run tests, and provide a new commit.",https://github.com/bitcoin/bitcoin/pull/13381#discussion_r222991321,222991321,test/functional/wallet_import_with_label.py
