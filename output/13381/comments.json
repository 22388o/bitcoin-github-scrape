[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394174008",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394174008",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 394174008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDE3NDAwOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-03T16:30:46Z",
    "updated_at": "2018-06-03T16:32:35Z",
    "author_association": "MEMBER",
    "body": "There is no need for a new parameter, check if label is null instead - this means that the default is to preserve if it exists otherwise \"\".",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394174008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394177666",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394177666",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 394177666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDE3NzY2Ng==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-03T17:29:07Z",
    "updated_at": "2018-06-03T17:29:07Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, a test would be nice.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394177666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394192050",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394192050",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 394192050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDE5MjA1MA==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-03T21:16:35Z",
    "updated_at": "2018-06-03T21:16:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you, @promag.\r\nI added some functional tests for this specific behavior between importaddress and importprivkey.\r\nIf everything is alright, I'll squash and rebase as necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394192050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394202360",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394202360",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 394202360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDIwMjM2MA==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-03T23:57:46Z",
    "updated_at": "2018-06-03T23:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated with the right behavior.\r\nI will squash and rebase it as necessary in the morning, thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394202360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394443740",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-394443740",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 394443740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ0Mzc0MA==",
    "user": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T17:58:01Z",
    "updated_at": "2018-06-04T17:58:01Z",
    "author_association": "MEMBER",
    "body": "Tested ACK 74877f3b10072e1975c931bb296212e008cd8c58 .  This is exactly the behavior I desired, thanks @marcoagner!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394443740/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396040933",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396040933",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396040933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA0MDkzMw==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T11:16:38Z",
    "updated_at": "2018-06-10T11:18:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm back to this. The new commit keeps the already tested behaviour (passing tests added on this PR et al) and passes new test for the multiple destinations bug spotted by @Empact.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396040933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396744773",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396744773",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396744773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc0NDc3Mw==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T21:44:50Z",
    "updated_at": "2018-06-12T21:44:50Z",
    "author_association": "MEMBER",
    "body": "This still changes behaviour: the default is now `null` (ie, current label) instead of `\"\"`.\r\n\r\nI don't particularly care what the default is (`null` makes more sense), but the change should be documented and noted in release notes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396744773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396771581",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396771581",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396771581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc3MTU4MQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T00:01:06Z",
    "updated_at": "2018-06-13T00:01:06Z",
    "author_association": "MEMBER",
    "body": "Agree with @luke-jr regarding the behaviour change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396771581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396913526",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396913526",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396913526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjkxMzUyNg==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T12:03:37Z",
    "updated_at": "2018-06-13T12:03:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a `release-notes-pr13381.md` file documenting the change.\r\nLet me know if I missed something or should document this somewhere else.\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396913526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396938118",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396938118",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396938118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjkzODExOA==",
    "user": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T13:31:40Z",
    "updated_at": "2018-06-13T13:31:40Z",
    "author_association": "MEMBER",
    "body": "@marcoagner Thanks for adding the release notes!  I thought maybe the behavior change could be described more simply with the addition of a few examples; see below from some proposed text.  I also changed the heading so that it's clear that only a small part of the importprivkey API is being changed (I also removed the `code style` from the heading as those don't display well in headings on parts of BitcoinCore.org, but that's a local problem so feel free to add back the backtics if you like them).\r\n\r\n```markdown\r\nRPC importprivkey: new label behavior\r\n-------------------------------------\r\n\r\nPreviously, `importprivkey`automatically added the default empty label\r\n(\"\") to all addresses associated with imported private keys.  Now it\r\ndefaults to using any existing label for those addresses.  For example:\r\n\r\n- Old behavior: you import a watch-only address with the label \"cold\r\n  wallet\".  Later, you import the corresponding private key using the\r\n  default settings.  The address's label is changed from \"cold wallet\"\r\n  to \"\".\r\n\r\n- New behavior: you import a watch-only address with the label \"cold\r\n  wallet\".  Later, you import the corresponding private key using the\r\n  default settings.  The address's label remains \"cold wallet\".\r\n\r\nIn both the previous and current case, if you directly specify a label\r\nduring the import, that label will override whatever previous label the\r\naddresses may have had.  Also in both cases, if none of the addresses\r\npreviously had a label, they will still receive the default empty label\r\n(\"\").  Examples:\r\n\r\n- You import a watch-only address with the label \"temporary\".  Later you\r\n  import the corresponding private key with the label \"final\".  The\r\n  address's label will be changed to \"final\".\r\n\r\n- You import a private key for an address that was not previously in the\r\n  wallet.  It's addresses will receive the default empty label (\"\").\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396938118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396946645",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396946645",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396946645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk0NjY0NQ==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T13:57:18Z",
    "updated_at": "2018-06-13T13:59:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@harding That's much better, thanks.\r\nI'm changing to that on the next commit with some small (nit) differences.\r\nHere's the diff so it's easier to spot my edits:\r\n```diff\r\n4,5c4,5\r\n< Previously, `importprivkey`automatically added the default empty label\r\n< (\"\") to all addresses associated with imported private keys.  Now it\r\n---\r\n> Previously, `importprivkey` automatically added the default empty label\r\n> (\"\") to all addresses associated with the imported private keys.  Now it\r\n21c21\r\n< (\"\").  Examples:\r\n---\r\n> (\"\") as default.  Examples:\r\n28c28,29\r\n<   wallet.  It's addresses will receive the default empty label (\"\").\r\n---\r\n>   wallet using the default settings.  Its addresses will receive the\r\n>   default empty label (\"\").\r\n```\r\nSeems good?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396946645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396958556",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396958556",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396958556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk1ODU1Ng==",
    "user": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T14:30:46Z",
    "updated_at": "2018-06-13T14:30:46Z",
    "author_association": "MEMBER",
    "body": "@marcoagner LGTM, although the two uses of 'default' in this clause is a tiny bit awkward IMO (but, it's clear, which is all that really matters):\r\n\r\n> they will still receive the default empty label (\"\") as default.\r\n\r\nMaybe that second-to-last sentence could have its adverbial phrase \"using the default settings\" moved next to the verb it modifies, \"import\", e.g.:\r\n\r\n> You use the default settings to import a private key for an address that was not previously in the wallet.\r\n\r\nThanks for updating, and thanks especially for catching my misuse of the apostrophe in the possessive its.  :man_facepalming: ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396958556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396977679",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-396977679",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 396977679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk3NzY3OQ==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T15:22:34Z",
    "updated_at": "2018-06-13T15:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@harding I changed both parts pointed in your last comment. Thanks for the attention and help with this; I think we've now nailed this part. :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396977679/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406430341",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-406430341",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 406430341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQzMDM0MQ==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T22:12:06Z",
    "updated_at": "2018-07-19T22:15:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could anybody review 6115b5231954a38c400fa4808627dbb8e239ea68, please? One month in the freezer and is (hopefully) simple. :) @promag @Empact ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406430341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406558551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-406558551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 406558551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjU1ODU1MQ==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T10:20:48Z",
    "updated_at": "2018-07-20T10:20:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you all for reviewing again. Updated with 1d4fdb33349a60cac1926f83586826ba62b1a451.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406558551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406560125",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-406560125",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 406560125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjU2MDEyNQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T10:27:23Z",
    "updated_at": "2018-07-20T10:27:23Z",
    "author_association": "MEMBER",
    "body": "Maybe @harding could re-test?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406560125/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421170422",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-421170422",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 421170422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE3MDQyMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T22:16:24Z",
    "updated_at": "2018-09-13T22:16:24Z",
    "author_association": "MEMBER",
    "body": "Lets see what travis says",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421170422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421577929",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-421577929",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 421577929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTU3NzkyOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-15T14:21:59Z",
    "updated_at": "2018-11-02T15:43:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421577929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/427369326",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-427369326",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 427369326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzM2OTMyNg==",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?u=6f8ddfd7be52ca610d5de0c5863f8eb4fa43cf9d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T13:39:36Z",
    "updated_at": "2018-10-05T13:39:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "`wallet_basic.py` passed locally but seems to have failed on appveyor :thinking: ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/427369326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437582169",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-437582169",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 437582169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzU4MjE2OQ==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-10T12:58:54Z",
    "updated_at": "2018-11-10T12:58:54Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/13381/commits/a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437582169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437640023",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-437640023",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 437640023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzY0MDAyMw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-11T03:10:22Z",
    "updated_at": "2018-11-11T03:10:22Z",
    "author_association": "MEMBER",
    "body": "utACK a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437640023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438152147",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-438152147",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 438152147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODE1MjE0Nw==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T06:25:28Z",
    "updated_at": "2018-11-13T06:25:28Z",
    "author_association": "MEMBER",
    "body": "utACK a6b5ec1",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438152147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438169294",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#issuecomment-438169294",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13381",
    "id": 438169294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODE2OTI5NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T07:51:06Z",
    "updated_at": "2018-11-13T07:51:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438169294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192603399",
    "pull_request_review_id": 125409144,
    "id": 192603399,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjYwMzM5OQ==",
    "diff_hunk": "@@ -151,9 +151,12 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used; label all new addresses and preserve the rest\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                bool has_label = pwallet->mapAddressBook.find(dest) != pwallet->mapAddressBook.end() && !pwallet->mapAddressBook[dest].name.empty();",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "c74740701d5b3d99380b9bf4fe329cdb4f6c235b",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was thinking in something like\r\n```cpp\r\nif (request.params[1].isNull()) {\r\n    const auto& it = pwallet->mapAddressBook.find(dest);\r\n    if (it != pwallet->mapAddressBook.end()) strLabel = it->second;\r\n}\r\npwallet->SetAddressBook(dest, strLabel, \"receive\");\r\n```",
    "created_at": "2018-06-03T21:42:00Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192603399",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192603399"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192603399"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192603399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 157,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192606863",
    "pull_request_review_id": 125412914,
    "id": 192606863,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjYwNjg2Mw==",
    "diff_hunk": "@@ -151,9 +151,12 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used; label all new addresses and preserve the rest\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                bool has_label = pwallet->mapAddressBook.find(dest) != pwallet->mapAddressBook.end() && !pwallet->mapAddressBook[dest].name.empty();",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "c74740701d5b3d99380b9bf4fe329cdb4f6c235b",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hm, I see. Yeah.. this behavior seems better. Thanks!\r\nUpdating this and the test.",
    "created_at": "2018-06-03T23:52:55Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192606863",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192606863"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192606863"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192606863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 157,
    "side": "RIGHT",
    "in_reply_to_id": 192603399
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192607435",
    "pull_request_review_id": 125413567,
    "id": 192607435,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjYwNzQzNQ==",
    "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers",
    "path": "test/functional/wallet_import_with_label.py",
    "position": null,
    "original_position": 2,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "75e46d2c2dbefce328e775c4e75d506503ffc585",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2018",
    "created_at": "2018-06-04T00:12:03Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192607435",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192607435"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192607435"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192607435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192607614",
    "pull_request_review_id": 125413567,
    "id": 192607614,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjYwNzYxNA==",
    "diff_hunk": "@@ -151,8 +151,13 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used; label all new addresses and preserve the rest",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "75e46d2c2dbefce328e775c4e75d506503ffc585",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Comment is inacurate.",
    "created_at": "2018-06-04T00:17:48Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192607614",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192607614"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r192607614"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192607614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193972817",
    "pull_request_review_id": 127055872,
    "id": 193972817,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mzk3MjgxNw==",
    "diff_hunk": "@@ -151,8 +151,15 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n+                if (request.params[1].isNull()) {\n+                    const auto& it = pwallet->mapAddressBook.find(dest);\n+                    if (it != pwallet->mapAddressBook.end()) strLabel = it->second.name;",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "74877f3b10072e1975c931bb296212e008cd8c58",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it problematic that this will apply the label for a given destination over all following destinations, provided they aren't found on lookup? I suspect you'll want another destination-specific local to prevent that.",
    "created_at": "2018-06-08T07:24:13Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r193972817",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193972817"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r193972817"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193972817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194039082",
    "pull_request_review_id": 127138590,
    "id": 194039082,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDAzOTA4Mg==",
    "diff_hunk": "@@ -151,8 +151,15 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n+                if (request.params[1].isNull()) {\n+                    const auto& it = pwallet->mapAddressBook.find(dest);\n+                    if (it != pwallet->mapAddressBook.end()) strLabel = it->second.name;",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "74877f3b10072e1975c931bb296212e008cd8c58",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch! Suggestion:\r\n```cpp\r\nif (it == pwallet->mapAddressBook.end() || !request.params[1].isNull()) {\r\n    pwallet->SetAddressBook(dest, strLabel, \"receive\")\r\n}\r\n```",
    "created_at": "2018-06-08T12:18:56Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194039082",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194039082"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194039082"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194039082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 193972817
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194039235",
    "pull_request_review_id": 127138801,
    "id": 194039235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDAzOTIzNQ==",
    "diff_hunk": "@@ -151,8 +151,15 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n+                if (request.params[1].isNull()) {\n+                    const auto& it = pwallet->mapAddressBook.find(dest);\n+                    if (it != pwallet->mapAddressBook.end()) strLabel = it->second.name;",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "74877f3b10072e1975c931bb296212e008cd8c58",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There should be a test ensuring the correct behaviour.",
    "created_at": "2018-06-08T12:19:46Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194039235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194039235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194039235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194039235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 193972817
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194046271",
    "pull_request_review_id": 127147334,
    "id": 194046271,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDA0NjI3MQ==",
    "diff_hunk": "@@ -151,8 +151,15 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n+                if (request.params[1].isNull()) {\n+                    const auto& it = pwallet->mapAddressBook.find(dest);\n+                    if (it != pwallet->mapAddressBook.end()) strLabel = it->second.name;",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "74877f3b10072e1975c931bb296212e008cd8c58",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, makes sense. I will update it and add a test for the correct behaviour as soon as I can.",
    "created_at": "2018-06-08T12:48:55Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194046271",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194046271"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r194046271"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194046271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 193972817
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203897426",
    "pull_request_review_id": 138881425,
    "id": 203897426,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg5NzQyNg==",
    "diff_hunk": "@@ -151,9 +151,17 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                const auto& it = pwallet->mapAddressBook.find(dest);",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: It's slightly confusing to use a reference type here; `find` returns an iterator by value. ",
    "created_at": "2018-07-19T22:59:21Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203897426",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203897426"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203897426"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203897426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 159,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203912379",
    "pull_request_review_id": 138898300,
    "id": 203912379,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkxMjM3OQ==",
    "diff_hunk": "@@ -0,0 +1,29 @@\n+RPC importprivkey: new label behavior\n+-------------------------------------\n+\n+Previously, `importprivkey` automatically added the default empty label\n+(\"\") to all addresses associated with the imported private keys.  Now it",
    "path": "doc/release-notes-pr13381.md",
    "position": null,
    "original_position": 5,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be `... imported private key.` (singular)?",
    "created_at": "2018-07-20T00:37:47Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203912379",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203912379"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203912379"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203912379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203912935",
    "pull_request_review_id": 138898300,
    "id": 203912935,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkxMjkzNQ==",
    "diff_hunk": "@@ -102,7 +102,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             \"Hint: use importmulti to import more than one private key.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n-            \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n+            \"2. \\\"label\\\"            (string, optional, default=current label if watch-only address exists, otherwise \\\"\\\") An optional label\\n\"",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could drop `watch-only` since the code below does't validate that, it only checks if the label exists for each associated address. So `default=current label if exists, otherwise \\\"\\\"`.",
    "created_at": "2018-07-20T00:43:00Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203912935",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203912935"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203912935"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203912935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203914840",
    "pull_request_review_id": 138898300,
    "id": 203914840,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkxNDg0MA==",
    "diff_hunk": "@@ -151,9 +151,17 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                const auto& it = pwallet->mapAddressBook.find(dest);\n+                if (it == pwallet->mapAddressBook.end() || !request.params[1].isNull()) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, maybe make it clear that `params[1]` has precedence \u2014 prevents a lookup if it does? Also, updating with the same label could be avoided, or am I missing something? Suggestion:\r\n```cpp\r\nfor (const auto& dest : GetAllDestinationsForKey(pubkey)) {\r\n    if (!request.params[1].isNull()) {\r\n        pwallet->SetAddressBook(dest, strLabel, \"receive\")\r\n    } else if (pwallet->mapAddressBook.count(dest) == 0) {\r\n        pwallet->SetAddressBook(dest, strLabel, \"receive\");\r\n    }\r\n}\r\n```",
    "created_at": "2018-07-20T00:59:41Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203914840",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203914840"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203914840"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203914840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 160,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203914933",
    "pull_request_review_id": 138898300,
    "id": 203914933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkxNDkzMw==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the behavior of RPC importprivkey on set and unset labels of\n+watch-only addresses.",
    "path": "test/functional/wallet_import_with_label.py",
    "position": null,
    "original_position": 6,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Drop `watch-only`?",
    "created_at": "2018-07-20T01:00:33Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203914933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203914933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203914933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203914933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 6,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203915132",
    "pull_request_review_id": 138898300,
    "id": 203915132,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkxNTEzMg==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the behavior of RPC importprivkey on set and unset labels of\n+watch-only addresses.\n+\n+It tests different cases in which an address is imported with importaddress\n+with or without a label and then its private key is imported with importprivkey\n+with and without a label.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class ImportWithLabel(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def setup_network(self):",
    "path": "test/functional/wallet_import_with_label.py",
    "position": null,
    "original_position": 24,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can be removed.",
    "created_at": "2018-07-20T01:02:10Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203915132",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203915132"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r203915132"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203915132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204000314",
    "pull_request_review_id": 139002882,
    "id": 204000314,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMDMxNA==",
    "diff_hunk": "@@ -102,7 +102,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             \"Hint: use importmulti to import more than one private key.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n-            \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n+            \"2. \\\"label\\\"            (string, optional, default=current label if watch-only address exists, otherwise \\\"\\\") An optional label\\n\"",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. Just leaving `address` between `if` and `exists`: `default=current label if address exists, otherwise \\\"\\\"`. (I know it was probably just a typo; I'm commenting to make sure)",
    "created_at": "2018-07-20T10:19:41Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204000314",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204000314"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204000314"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204000314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 203912935
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204000323",
    "pull_request_review_id": 139002889,
    "id": 204000323,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMDMyMw==",
    "diff_hunk": "@@ -151,9 +151,17 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                const auto& it = pwallet->mapAddressBook.find(dest);\n+                if (it == pwallet->mapAddressBook.end() || !request.params[1].isNull()) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "6115b5231954a38c400fa4808627dbb8e239ea68",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, it seems right to me. Thank you again!\r\nI thought I had to somehow guarantee purpose was now \"receive\" for all dests, but it doesn't seem to be the case now I looked.",
    "created_at": "2018-07-20T10:19:43Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204000323",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204000323"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204000323"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204000323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 160,
    "side": "RIGHT",
    "in_reply_to_id": 203914840
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204204143",
    "pull_request_review_id": 139250881,
    "id": 204204143,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIwNDE0Mw==",
    "diff_hunk": "@@ -151,9 +151,16 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                if (!request.params[1].isNull()) {\n+                    pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                } else if (pwallet->mapAddressBook.count(dest) == 0) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "1d4fdb33349a60cac1926f83586826ba62b1a451",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Given that the branches for the two `if` statements are identical, why not write it as a single `if (!request.params[1].isNull() || pwallet->mapAddressBook.count(dest)) {` ?",
    "created_at": "2018-07-21T06:46:35Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204204143",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204204143"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204204143"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204204143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204205920",
    "pull_request_review_id": 139252787,
    "id": 204205920,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIwNTkyMA==",
    "diff_hunk": "@@ -151,9 +151,16 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                if (!request.params[1].isNull()) {\n+                    pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                } else if (pwallet->mapAddressBook.count(dest) == 0) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "1d4fdb33349a60cac1926f83586826ba62b1a451",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just to try to make it obvious in the code that the `request.params[1]` has precedence. Bad idea? Both work.",
    "created_at": "2018-07-21T08:30:26Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204205920",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204205920"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204205920"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204205920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 204204143
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204205953",
    "pull_request_review_id": 139252841,
    "id": 204205953,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIwNTk1Mw==",
    "diff_hunk": "@@ -151,9 +151,16 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         CKeyID vchAddress = pubkey.GetID();\n         {\n             pwallet->MarkDirty();\n-            // We don't know which corresponding address will be used; label them all\n+\n+            // We don't know which corresponding address will be used;\n+            // label all new addresses, and label existing addresses if a\n+            // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-                pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                if (!request.params[1].isNull()) {\n+                    pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                } else if (pwallet->mapAddressBook.count(dest) == 0) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "1d4fdb33349a60cac1926f83586826ba62b1a451",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No reason besides it since AFAIK putting the look up as second condition in the `||` statement (like your suggestion) will not call it if there is a `params[1]` in the first condition.",
    "created_at": "2018-07-21T08:32:38Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204205953",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204205953"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r204205953"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204205953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 204204143
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217550941",
    "pull_request_review_id": 155293134,
    "id": 217550941,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzU1MDk0MQ==",
    "diff_hunk": "@@ -0,0 +1,122 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the behavior of RPC importprivkey on set and unset labels of\n+addresses.\n+\n+It tests different cases in which an address is imported with importaddress\n+with or without a label and then its private key is imported with importprivkey\n+with and without a label.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class ImportWithLabel(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):",
    "path": "test/functional/wallet_import_with_label.py",
    "position": 25,
    "original_position": 24,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "a84fb66ba446b9170071f1a65cc5942a893a63cf",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The skip-if-no-wallet might have to be added to this test?",
    "created_at": "2018-09-13T22:16:14Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r217550941",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217550941"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r217550941"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217550941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221115038",
    "pull_request_review_id": 159687616,
    "id": 221115038,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTExNTAzOA==",
    "diff_hunk": "@@ -0,0 +1,122 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the behavior of RPC importprivkey on set and unset labels of\n+addresses.\n+\n+It tests different cases in which an address is imported with importaddress\n+with or without a label and then its private key is imported with importprivkey\n+with and without a label.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class ImportWithLabel(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):",
    "path": "test/functional/wallet_import_with_label.py",
    "position": 25,
    "original_position": 24,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "a84fb66ba446b9170071f1a65cc5942a893a63cf",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You're right. I was not aware, thanks.",
    "created_at": "2018-09-28T00:31:59Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r221115038",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221115038"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r221115038"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221115038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 217550941
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222913572",
    "pull_request_review_id": 161916540,
    "id": 222913572,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjkxMzU3Mg==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the behavior of RPC importprivkey on set and unset labels of\n+addresses.\n+\n+It tests different cases in which an address is imported with importaddress\n+with or without a label and then its private key is imported with importprivkey\n+with and without a label.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class ImportWithLabel(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        \"\"\"Main test logic\"\"\"\n+\n+        self.log.info(\"Test importaddress with label and importprivkey\"\n+                      \"without label.\")\n+        self.log.info(\"Import a watch-only address with a label.\")\n+        address = self.nodes[0].getnewaddress()\n+        label = \"Test Label\"\n+        self.nodes[1].importaddress(address, label)\n+        address_assert = self.nodes[1].getaddressinfo(address)\n+\n+        assert_equal(address_assert['iswatchonly'], True)\n+        assert_equal(address_assert['ismine'], False)\n+        assert_equal(address_assert['label'], label)\n+\n+        self.log.info(\"Import the watch-only address's private key without a \"\n+                      \"label and the address should keep its label.\")\n+        priv_key = self.nodes[0].dumpprivkey(address)\n+        self.nodes[1].importprivkey(priv_key)\n+\n+        assert_equal(label, self.nodes[1].getaddressinfo(address)['label'])\n+\n+        self.log.info(\"Test importaddress without label and importprivkey \"\n+                      \"with label.\")\n+        self.log.info(\"Import a watch-only address without a label.\")\n+        address2 = self.nodes[0].getnewaddress()\n+        self.nodes[1].importaddress(address2)\n+        address_assert2 = self.nodes[1].getaddressinfo(address2)\n+\n+        assert_equal(address_assert2['iswatchonly'], True)\n+        assert_equal(address_assert2['ismine'], False)\n+        assert_equal(address_assert2['label'], '')\n+\n+        self.log.info(\"Import the watch-only address's private key with a \"\n+                      \"label and the address should have its label updated.\")\n+        priv_key2 = self.nodes[0].dumpprivkey(address2)\n+        label2 = \"Test Label 2\"\n+        self.nodes[1].importprivkey(priv_key2, label2)\n+\n+        assert_equal(label2, self.nodes[1].getaddressinfo(address2)['label'])\n+\n+        self.log.info(\"Test importaddress with label and importprivkey \"\n+                      \"with label.\")\n+        self.log.info(\"Import a watch-only address with a label.\")\n+        address3 = self.nodes[0].getnewaddress()\n+        label3_addr = \"Test Label 3 for importaddress\"\n+        self.nodes[1].importaddress(address3, label3_addr)\n+        address_assert3 = self.nodes[1].getaddressinfo(address3)\n+\n+        assert_equal(address_assert3['iswatchonly'], True)\n+        assert_equal(address_assert3['ismine'], False)\n+        assert_equal(address_assert3['label'], label3_addr)\n+\n+        self.log.info(\"Import the watch-only address's private key with a \"\n+                      \"label and the address should have its label updated.\")\n+        priv_key3 = self.nodes[0].dumpprivkey(address3)\n+        label3_priv = \"Test Label 3 for importprivkey\"\n+        self.nodes[1].importprivkey(priv_key3, label3_priv)\n+\n+        assert_equal(label3_priv,\n+                     self.nodes[1].getaddressinfo(address3)['label'])\n+\n+        self.log.info(\"Test importprivkey won't label new dests with the same \"\n+                      \"label as others labeled dests for the same key.\")\n+        self.log.info(\"Import a watch-only legacy address with a label.\")\n+        address4 = self.nodes[0].getnewaddress()\n+        label4_addr = \"Test Label 4 for importaddress\"\n+        self.nodes[1].importaddress(address4, label4_addr)\n+        address_assert4 = self.nodes[1].getaddressinfo(address4)\n+\n+        assert_equal(address_assert4['iswatchonly'], True)\n+        assert_equal(address_assert4['ismine'], False)\n+        assert_equal(address_assert4['label'], label4_addr)\n+\n+        self.log.info(\"Asserts address has no embedded field with dests.\")\n+\n+        assert_equal(address_assert4.get('embedded'), None)\n+\n+        self.log.info(\"Import the watch-only address's private key without a \"\n+                      \"label and new destinations for the key should have an \"\n+                      \"empty label while the 'old' destination should keep \"\n+                      \"its label.\")\n+        priv_key4 = self.nodes[0].dumpprivkey(address4)\n+        self.nodes[1].importprivkey(priv_key4)\n+        address_assert4 = self.nodes[1].getaddressinfo(address4)\n+\n+        assert(address_assert4.get('embedded'))\n+\n+        bcaddress_assert = self.nodes[1].getaddressinfo(\n+                address_assert4['embedded']['address']\n+                )",
    "path": "test/functional/wallet_import_with_label.py",
    "position": null,
    "original_position": 117,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "8972e273aa6ca870223720ade325a7ab26dfb688",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since this is a new file - please run it through `black` to get it auto-formatted in accordance with PEP-8 :-)",
    "created_at": "2018-10-05T07:25:25Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r222913572",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222913572"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r222913572"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222913572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222991321",
    "pull_request_review_id": 162015587,
    "id": 222991321,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjk5MTMyMQ==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the behavior of RPC importprivkey on set and unset labels of\n+addresses.\n+\n+It tests different cases in which an address is imported with importaddress\n+with or without a label and then its private key is imported with importprivkey\n+with and without a label.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class ImportWithLabel(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        \"\"\"Main test logic\"\"\"\n+\n+        self.log.info(\"Test importaddress with label and importprivkey\"\n+                      \"without label.\")\n+        self.log.info(\"Import a watch-only address with a label.\")\n+        address = self.nodes[0].getnewaddress()\n+        label = \"Test Label\"\n+        self.nodes[1].importaddress(address, label)\n+        address_assert = self.nodes[1].getaddressinfo(address)\n+\n+        assert_equal(address_assert['iswatchonly'], True)\n+        assert_equal(address_assert['ismine'], False)\n+        assert_equal(address_assert['label'], label)\n+\n+        self.log.info(\"Import the watch-only address's private key without a \"\n+                      \"label and the address should keep its label.\")\n+        priv_key = self.nodes[0].dumpprivkey(address)\n+        self.nodes[1].importprivkey(priv_key)\n+\n+        assert_equal(label, self.nodes[1].getaddressinfo(address)['label'])\n+\n+        self.log.info(\"Test importaddress without label and importprivkey \"\n+                      \"with label.\")\n+        self.log.info(\"Import a watch-only address without a label.\")\n+        address2 = self.nodes[0].getnewaddress()\n+        self.nodes[1].importaddress(address2)\n+        address_assert2 = self.nodes[1].getaddressinfo(address2)\n+\n+        assert_equal(address_assert2['iswatchonly'], True)\n+        assert_equal(address_assert2['ismine'], False)\n+        assert_equal(address_assert2['label'], '')\n+\n+        self.log.info(\"Import the watch-only address's private key with a \"\n+                      \"label and the address should have its label updated.\")\n+        priv_key2 = self.nodes[0].dumpprivkey(address2)\n+        label2 = \"Test Label 2\"\n+        self.nodes[1].importprivkey(priv_key2, label2)\n+\n+        assert_equal(label2, self.nodes[1].getaddressinfo(address2)['label'])\n+\n+        self.log.info(\"Test importaddress with label and importprivkey \"\n+                      \"with label.\")\n+        self.log.info(\"Import a watch-only address with a label.\")\n+        address3 = self.nodes[0].getnewaddress()\n+        label3_addr = \"Test Label 3 for importaddress\"\n+        self.nodes[1].importaddress(address3, label3_addr)\n+        address_assert3 = self.nodes[1].getaddressinfo(address3)\n+\n+        assert_equal(address_assert3['iswatchonly'], True)\n+        assert_equal(address_assert3['ismine'], False)\n+        assert_equal(address_assert3['label'], label3_addr)\n+\n+        self.log.info(\"Import the watch-only address's private key with a \"\n+                      \"label and the address should have its label updated.\")\n+        priv_key3 = self.nodes[0].dumpprivkey(address3)\n+        label3_priv = \"Test Label 3 for importprivkey\"\n+        self.nodes[1].importprivkey(priv_key3, label3_priv)\n+\n+        assert_equal(label3_priv,\n+                     self.nodes[1].getaddressinfo(address3)['label'])\n+\n+        self.log.info(\"Test importprivkey won't label new dests with the same \"\n+                      \"label as others labeled dests for the same key.\")\n+        self.log.info(\"Import a watch-only legacy address with a label.\")\n+        address4 = self.nodes[0].getnewaddress()\n+        label4_addr = \"Test Label 4 for importaddress\"\n+        self.nodes[1].importaddress(address4, label4_addr)\n+        address_assert4 = self.nodes[1].getaddressinfo(address4)\n+\n+        assert_equal(address_assert4['iswatchonly'], True)\n+        assert_equal(address_assert4['ismine'], False)\n+        assert_equal(address_assert4['label'], label4_addr)\n+\n+        self.log.info(\"Asserts address has no embedded field with dests.\")\n+\n+        assert_equal(address_assert4.get('embedded'), None)\n+\n+        self.log.info(\"Import the watch-only address's private key without a \"\n+                      \"label and new destinations for the key should have an \"\n+                      \"empty label while the 'old' destination should keep \"\n+                      \"its label.\")\n+        priv_key4 = self.nodes[0].dumpprivkey(address4)\n+        self.nodes[1].importprivkey(priv_key4)\n+        address_assert4 = self.nodes[1].getaddressinfo(address4)\n+\n+        assert(address_assert4.get('embedded'))\n+\n+        bcaddress_assert = self.nodes[1].getaddressinfo(\n+                address_assert4['embedded']['address']\n+                )",
    "path": "test/functional/wallet_import_with_label.py",
    "position": null,
    "original_position": 117,
    "commit_id": "a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938",
    "original_commit_id": "8972e273aa6ca870223720ade325a7ab26dfb688",
    "user": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hm, nice. Didn't know this `black`, thanks. \r\nI was using Flake8. Besides the double-quotes for strings, it seems that `black` has a longer default line length, but I'm okay with (actually prefer) that. :)\r\nI will just rebase, re-run tests, and provide a new commit.",
    "created_at": "2018-10-05T12:40:29Z",
    "updated_at": "2018-10-05T12:58:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r222991321",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222991321"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13381#discussion_r222991321"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222991321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 222913572
  }
]