[
  {
    "sha": "7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODUxZjE0Y2NmMmJjZDFlOWIyYWQ0OGU1ZTA4ODgxYmUwNmQ5ZDIx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-26T16:11:52Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-12-28T18:33:05Z"
      },
      "message": "rpc: incorporate review feedback from PR 17283\n\n- (reverted after follow-on review by maintainers: provide a valid address in getaddressinfo RPCExample)\n- remove unneeded code comments",
      "tree": {
        "sha": "175623b25298f35ea707803afa6d80a17d73c6d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/175623b25298f35ea707803afa6d80a17d73c6d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl4HoBcACgkQT1chs9Dj\nkh0j8Q/+Mv3liyJ5OnyofW5nYI9rZn1NH1IkKtQWJOEnV7BiQ4S4PHSVUt2sYg0o\nOwwsLQMrtC7FILhYMdyiifviCRCdc1IvmsxQXhqhHN+0BC90tuf4ele3qe/FPuJV\nvdgClHAYX08Brz+1XNV4gx9mf29dH0P1XXSZ9MCoX/ffy2G8hXwhsdELnr3G/Jua\n4fI5qw4iwntnJThmpX9ktR5ivmtNboSeRFvLr2GZsZWO7f0Fd8pEDm9s3dfApszP\nKPzvNExeS9k3/vpB3lKmCcJTAP9w99aWJIR92HRH9rAynYIiyDmcVmaO9sE2KfcL\nVQuy/TexK5zKk3gRQk1/KqZq8usMV6EX4eBZHqBNLbXAbFiBlOgg4f3/AE4Exmv3\nXID8WCKlPOwoenNMkLe1FQN+kF29LtxBjhggHuLXftxL+F5lkHLim3q6TlMDo6yN\n9MCQ3SoIe8cKQ+8E+SEp5lNMkr7/9O20/vRSH5AwTAyhM7kBYEEZfJeTPqzPxW3d\nYJ3phM0civa/iEVtq+3qc2NCsF9BoxqAS/cAtWLNuGXn6T+T+6b1eYbGVTXWcSgj\nc+7Hzs5Ks4ObsDyyteDa6/jBeaQ1xmSSws7sggH92lPpTGD+p7OI4u0S5HZbj/3B\nFuZzU0zFXOraiiFVi4dyNqr4brCWEJxkCZY57wAs/T5G9jsozrQ=\n=/1F9\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFZVaBzxI13/Lmh1rXIplYMiwH3OGLgc62/TkPmh9qF4CP/wEICuhyVHV6Uc\ndy5MzOtD7gEI8QReB6AZ8AjCU+TmcU41mwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEJcnOC3zTrBLchN1S5O3jesI8SANeS5N\ncJlSHVWm0qMemeLE3wbc2HKFovC+BLQeja4j9wjxBF4HoBnwCPaOWQxmtBTiAIPf\n4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMu\nb3Jn//AQq8cLXh7ZyG6Vv7Hx0hcltwjxIAhjVUJ4uTH/MlVDlEM7pOK7EqOGvEsQ\nDpJ3sFsWgfoWCPEEXgegGfAIobsj3b1M1SMAg9/jDS75DI4pKGh0dHBzOi8vZmlu\nbmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23wENy26mdmvNz8qtKXU0xBdLAI\n8SCttgKL9SszuRVvR1Gse5AdLs3D/mzftfnUrS+v948yKQjxBF4HoBnwCMvpc9Lp\nQvp8AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 175623b25298f35ea707803afa6d80a17d73c6d3\nparent 6cb80a068dc198832febe456139bed3ae7a1145c\nauthor Jon Atack <jon@atack.com> 1574784712 +0100\ncommitter Jon Atack <jon@atack.com> 1577557985 +0100\n\nrpc: incorporate review feedback from PR 17283\n\n- (reverted after follow-on review by maintainers: provide a valid address in getaddressinfo RPCExample)\n- remove unneeded code comments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cb80a068dc198832febe456139bed3ae7a1145c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cb80a068dc198832febe456139bed3ae7a1145c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cb80a068dc198832febe456139bed3ae7a1145c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a9475a0ce460c45c0283e820aaa0365748ef0c45",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
        "patch": "@@ -3708,6 +3708,8 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n+    const std::string example_address = \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\";\n+\n             RPCHelpMan{\"getaddressinfo\",\n                 \"\\nReturn information about the given bitcoin address.\\n\"\n                 \"Some of the information will only be present if the address is in the active wallet.\\n\",\n@@ -3758,8 +3760,8 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n             \"}\\n\"\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"getaddressinfo\", \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\") +\n-                    HelpExampleRpc(\"getaddressinfo\", \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\")\n+                    HelpExampleCli(\"getaddressinfo\", example_address) +\n+                    HelpExampleRpc(\"getaddressinfo\", example_address)\n                 },\n             }.Check(request);\n \n@@ -3793,10 +3795,6 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     ret.pushKV(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY));\n \n-    // Return DescribeWalletAddress fields.\n-    // Always returned: isscript, ischange, iswitness.\n-    // Optional: witness_version, witness_program, script, hex, pubkeys (array),\n-    // sigsrequired, pubkey, embedded, iscompressed.\n     UniValue detail = DescribeWalletAddress(pwallet, dest);\n     ret.pushKVs(detail);\n \n@@ -3809,8 +3807,6 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n \n-    // Fetch KeyMetadata, if present, for the timestamp, hdkeypath, hdseedid,\n-    // and hdmasterfingerprint fields.\n     ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan(scriptPubKey);\n     if (spk_man) {\n         if (const CKeyMetadata* meta = spk_man->GetMetadata(dest)) {"
      }
    ]
  },
  {
    "sha": "60aba1f2f11529add115d963d05599130288ae28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGFiYTFmMmYxMTUyOWFkZDExNWQ5NjNkMDU1OTkxMzAyODhhZTI4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T11:05:38Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-01-03T18:46:20Z"
      },
      "message": "rpc: simplify getaddressinfo labels, deprecate previous behavior\n\n- change the value returned in the RPC getaddressinfo `labels` field to an array\n  of label name strings\n\n- deprecate the previous behavior of returning a JSON hash structure containing\n  label `name` and address `purpose` key/value pairs\n\n- update the relevant tests",
      "tree": {
        "sha": "4f6f6122b979fd900a09d6262d3117591f64ad99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f6f6122b979fd900a09d6262d3117591f64ad99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60aba1f2f11529add115d963d05599130288ae28",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl4Pi/wACgkQT1chs9Dj\nkh0ZehAAlrcmZ2Wn09fYSryEcH6RoXo/qj0iYSdePbhWkJnGpkE+oFL44H14A4RK\nDZqlxOtKV3dUgUS9GS8KWwkBWaiqfOsAuVn0stKvsjok+cGYq6udSLvtXdNx0J6b\nsFp05jvKW/c818fmtwe8IQ57eqnb0bTIcQCdvRYbqzOXD8DGoqfEHayFu5mNXB6c\nWlnbBNEXdOVcSU0fHCGAOzD56F65BvUTDP861NaBWqpWCSzGV/izsf5+xDqGwpYj\n+cvaP+saqxrlR6nGrPha5GAJwTG6sbpvNMLHKxVcCSpAQSAHLj1xiQGnuFrc8C4o\nEDi3+6cB5+PdUKFWUj6kNDOazlG2cV2a5RcAvOlJvWjSosycCdTFrwT34oELDJjz\nSmseUdgi3k1WBvZBG7QSxeR/WSc9C1B0lQt03G1j0rxj22sKD3sPolY3VkdFShVS\nPG0wxAKNoAhjh9C1ZURKgHAD8bn9j6JNVHeS3gTFfSBGbRMTV497YYTsRqbUz7I4\n661bwU8Zc5bp5a4LRIEL1ZPPlHp7Ui8SMXqiswElM0E9jtI/hsEEKmpFtfUUigvT\nr8wTb4E8ruD5B8Sinfpj1q7RUCHtywy/NY4R+KCybC6pEvOGNHTVFu3ecH/wet+K\nTUjPsEoFip/RayTQmkbUzXlZBg8EbLt4HAZUKghk3tToSi8tM3E=\n=TrNe\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILFKxl2vdHwj6qeAguh7Y5S+/C2w8Qt4oD1shIqSAUpQCP/wEGN1kcAxrzvS\nrKbUz/+ZLf0I8QReD4v+8AiiBBHyiOHNwQCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQuGQBOcAnHEeW2bhbyqxZLQjx\nBF4Pi/7wCLyBzN19cW5LAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5k\nYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4f6f6122b979fd900a09d6262d3117591f64ad99\nparent 7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21\nauthor Jon Atack <jon@atack.com> 1574593538 +0100\ncommitter Jon Atack <jon@atack.com> 1578077180 +0100\n\nrpc: simplify getaddressinfo labels, deprecate previous behavior\n\n- change the value returned in the RPC getaddressinfo `labels` field to an array\n  of label name strings\n\n- deprecate the previous behavior of returning a JSON hash structure containing\n  label `name` and address `purpose` key/value pairs\n\n- update the relevant tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60aba1f2f11529add115d963d05599130288ae28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60aba1f2f11529add115d963d05599130288ae28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60aba1f2f11529add115d963d05599130288ae28/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7851f14ccf2bcd1e9b2ad48e5e08881be06d9d21"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 40,
      "deletions": 70
    },
    "files": [
      {
        "sha": "5deb7817bd89f966d70409fcee18fd1e0f6d7424",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 13,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -3744,18 +3744,20 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n             \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (timestamp, hdkeypath,\\n\"\n             \"                                                         hdseedid) and relation to the wallet (ismine, iswatchonly).\\n\"\n             \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed.\\n\"\n-            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\". Equivalent to the name field in the labels array.\\n\"\n+            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\". Equivalent to the label name in the labels array below.\\n\"\n             \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key, if available, expressed in \" + UNIX_EPOCH_TIME + \".\\n\"\n             \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath, if the key is HD and available.\\n\"\n             \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed.\\n\"\n             \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingerprint of the master key.\\n\"\n-            \"  \\\"labels\\\"                            (object) An array of labels associated with the address. Currently limited to one label but returned\\n\"\n+            \"  \\\"labels\\\"                            (json object) An array of labels associated with the address. Currently limited to one label but returned\\n\"\n             \"                                               as an array to keep the API stable if multiple labels are enabled in the future.\\n\"\n             \"    [\\n\"\n+            \"      \\\"label name\\\" (string) The label name. Defaults to \\\"\\\". Equivalent to the label field above.\\n\\n\"\n+            \"      DEPRECATED, will be removed in 0.21. To re-enable, launch bitcoind with `-deprecatedrpc=labelspurpose`:\\n\"\n             \"      { (json object of label data)\\n\"\n-            \"        \\\"name\\\": \\\"label name\\\" (string) The label name. Defaults to \\\"\\\". Equivalent to the label field above.\\n\"\n-            \"        \\\"purpose\\\": \\\"purpose\\\" (string) The purpose of the associated address (send or receive).\\n\"\n-            \"      },...\\n\"\n+            \"        \\\"name\\\" : \\\"label name\\\" (string) The label name. Defaults to \\\"\\\". Equivalent to the label field above.\\n\"\n+            \"        \\\"purpose\\\" : \\\"purpose\\\" (string) The purpose of the associated address (send or receive).\\n\"\n+            \"      }\\n\"\n             \"    ]\\n\"\n             \"}\\n\"\n                 },\n@@ -3769,7 +3771,6 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     UniValue ret(UniValue::VOBJ);\n     CTxDestination dest = DecodeDestination(request.params[0].get_str());\n-\n     // Make sure the destination is valid\n     if (!IsValidDestination(dest)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n@@ -3800,7 +3801,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     // Return label field if existing. Currently only one label can be\n     // associated with an address, so the label should be equivalent to the\n-    // value of the name key/value pair in the labels hash array below.\n+    // value of the name key/value pair in the labels array below.\n     if (pwallet->mapAddressBook.count(dest)) {\n         ret.pushKV(\"label\", pwallet->mapAddressBook[dest].name);\n     }\n@@ -3819,15 +3820,22 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         }\n     }\n \n-    // Return a labels array containing a hash of key/value pairs for the label\n-    // name and address purpose. The name value is equivalent to the label field\n-    // above. Currently only one label can be associated with an address, but we\n-    // return an array so the API remains stable if we allow multiple labels to\n-    // be associated with an address in the future.\n+    // Return a `labels` array containing the label associated with the address,\n+    // equivalent to the `label` field above. Currently only one label can be\n+    // associated with an address, but we return an array so the API remains\n+    // stable if we allow multiple labels to be associated with an address in\n+    // the future.\n+    //\n+    // DEPRECATED: The previous behavior of returning an array containing a JSON\n+    // object of `name` and `purpose` key/value pairs has been deprecated.\n     UniValue labels(UniValue::VARR);\n     std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n     if (mi != pwallet->mapAddressBook.end()) {\n-        labels.push_back(AddressBookDataToJSON(mi->second, true));\n+        if (pwallet->chain().rpcEnableDeprecated(\"labelspurpose\")) {\n+            labels.push_back(AddressBookDataToJSON(mi->second, true));\n+        } else {\n+            labels.push_back(mi->second.name);\n+        }\n     }\n     ret.pushKV(\"labels\", std::move(labels));\n "
      },
      {
        "sha": "c0dfa4c3f00c35a8ba401818de79a7b21589321e",
        "filename": "test/functional/test_framework/wallet_util.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/test/functional/test_framework/wallet_util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/test/functional/test_framework/wallet_util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet_util.py?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -88,11 +88,6 @@ def get_multisig(node):\n                     p2sh_p2wsh_script=CScript([OP_HASH160, witness_script, OP_EQUAL]).hex(),\n                     p2sh_p2wsh_addr=script_to_p2sh_p2wsh(script_code))\n \n-def labels_value(name=\"\", purpose=\"receive\"):\n-    \"\"\"Generate a getaddressinfo labels array from a name and purpose.\n-    Often used as the value of a labels kwarg for calling test_address below.\"\"\"\n-    return [{\"name\": name, \"purpose\": purpose}]\n-\n def test_address(node, address, **kwargs):\n     \"\"\"Get address info for `address` and test whether the returned values are as expected.\"\"\"\n     addr_info = node.getaddressinfo(address)"
      },
      {
        "sha": "4780e9263eab498198f907fa75df481cdb689c0c",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -15,10 +15,7 @@\n     connect_nodes,\n     wait_until,\n )\n-from test_framework.wallet_util import (\n-    labels_value,\n-    test_address,\n-)\n+from test_framework.wallet_util import test_address\n \n \n class WalletTest(BitcoinTestFramework):\n@@ -395,7 +392,7 @@ def run_test(self):\n             for label in [u'\u0440\u044b\u0431\u0430', u'\ud834\udd61']:\n                 addr = self.nodes[0].getnewaddress()\n                 self.nodes[0].setlabel(addr, label)\n-                test_address(self.nodes[0], addr, label=label, labels=labels_value(name=label))\n+                test_address(self.nodes[0], addr, label=label, labels=[label])\n                 assert label in self.nodes[0].listlabels()\n         self.nodes[0].rpc.ensure_ascii = True  # restore to default\n "
      },
      {
        "sha": "c311e8a4d6eb47f3b20432da7d47efaf648ff843",
        "filename": "test/functional/wallet_import_with_label.py",
        "status": "modified",
        "additions": 10,
        "deletions": 29,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_import_with_label.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_import_with_label.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_with_label.py?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -11,10 +11,7 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.wallet_util import (\n-    labels_value,\n-    test_address,\n-)\n+from test_framework.wallet_util import test_address\n \n \n class ImportWithLabel(BitcoinTestFramework):\n@@ -40,19 +37,15 @@ def run_test(self):\n                      iswatchonly=True,\n                      ismine=False,\n                      label=label,\n-                     labels=labels_value(name=label))\n+                     labels=[label])\n \n         self.log.info(\n             \"Import the watch-only address's private key without a \"\n             \"label and the address should keep its label.\"\n         )\n         priv_key = self.nodes[0].dumpprivkey(address)\n         self.nodes[1].importprivkey(priv_key)\n-\n-        test_address(self.nodes[1],\n-                     address,\n-                     label=label,\n-                     labels=labels_value(name=label))\n+        test_address(self.nodes[1], address, label=label, labels=[label])\n \n         self.log.info(\n             \"Test importaddress without label and importprivkey with label.\"\n@@ -65,7 +58,7 @@ def run_test(self):\n                      iswatchonly=True,\n                      ismine=False,\n                      label=\"\",\n-                     labels=labels_value())\n+                     labels=[\"\"])\n \n         self.log.info(\n             \"Import the watch-only address's private key with a \"\n@@ -75,10 +68,7 @@ def run_test(self):\n         label2 = \"Test Label 2\"\n         self.nodes[1].importprivkey(priv_key2, label2)\n \n-        test_address(self.nodes[1],\n-                     address2,\n-                     label=label2,\n-                     labels=labels_value(name=label2))\n+        test_address(self.nodes[1], address2, label=label2, labels=[label2])\n \n         self.log.info(\"Test importaddress with label and importprivkey with label.\")\n         self.log.info(\"Import a watch-only address with a label.\")\n@@ -90,7 +80,7 @@ def run_test(self):\n                      iswatchonly=True,\n                      ismine=False,\n                      label=label3_addr,\n-                     labels=labels_value(name=label3_addr))\n+                     labels=[label3_addr])\n \n         self.log.info(\n             \"Import the watch-only address's private key with a \"\n@@ -100,10 +90,7 @@ def run_test(self):\n         label3_priv = \"Test Label 3 for importprivkey\"\n         self.nodes[1].importprivkey(priv_key3, label3_priv)\n \n-        test_address(self.nodes[1],\n-                     address3,\n-                     label=label3_priv,\n-                     labels=labels_value(name=label3_priv))\n+        test_address(self.nodes[1], address3, label=label3_priv, labels=[label3_priv])\n \n         self.log.info(\n             \"Test importprivkey won't label new dests with the same \"\n@@ -118,7 +105,7 @@ def run_test(self):\n                      iswatchonly=True,\n                      ismine=False,\n                      label=label4_addr,\n-                     labels=labels_value(name=label4_addr),\n+                     labels=[label4_addr],\n                      embedded=None)\n \n         self.log.info(\n@@ -131,15 +118,9 @@ def run_test(self):\n         self.nodes[1].importprivkey(priv_key4)\n         embedded_addr = self.nodes[1].getaddressinfo(address4)['embedded']['address']\n \n-        test_address(self.nodes[1],\n-                     embedded_addr,\n-                     label=\"\",\n-                     labels=labels_value())\n+        test_address(self.nodes[1], embedded_addr, label=\"\", labels=[\"\"])\n \n-        test_address(self.nodes[1],\n-                     address4,\n-                     label=label4_addr,\n-                     labels=labels_value(name=label4_addr))\n+        test_address(self.nodes[1], address4, label=label4_addr, labels=[label4_addr])\n \n         self.stop_nodes()\n "
      },
      {
        "sha": "eb55578bfdc564882b54cea29e5b97f244ae1f2f",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -29,7 +29,6 @@\n from test_framework.wallet_util import (\n     get_key,\n     get_multisig,\n-    labels_value,\n     test_address,\n )\n \n@@ -571,7 +570,7 @@ def run_test(self):\n                      solvable=True,\n                      ismine=True,\n                      label=p2sh_p2wpkh_label,\n-                     labels=labels_value(name=p2sh_p2wpkh_label))\n+                     labels=[p2sh_p2wpkh_label])\n \n         # Test ranged descriptor fails if range is not specified\n         xpriv = \"tprv8ZgxMBicQKsPeuVhWwi6wuMQGfPKi9Li5GtX35jVNknACgqe3CY4g5xgkfDDJcmtF7o1QnxWDRYw4H5P26PXq7sbcUkEqeR4fg3Kxp2tigg\"\n@@ -643,7 +642,7 @@ def run_test(self):\n                      solvable=True,\n                      ismine=False,\n                      label=p2pkh_label,\n-                     labels=labels_value(name=p2pkh_label))\n+                     labels=[p2pkh_label])\n \n         # Test import fails if both desc and scriptPubKey are provided\n         key = get_key(self.nodes[0])"
      },
      {
        "sha": "1bdf42407029f08215f5bee0da2c0339b074c1e2",
        "filename": "test/functional/wallet_labels.py",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_labels.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_labels.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_labels.py?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -13,10 +13,8 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n-from test_framework.wallet_util import (\n-    labels_value,\n-    test_address,\n-)\n+from test_framework.wallet_util import test_address\n+\n \n class WalletLabelsTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -157,12 +155,7 @@ def verify(self, node):\n         if self.receive_address is not None:\n             assert self.receive_address in self.addresses\n         for address in self.addresses:\n-            test_address(\n-                node,\n-                address,\n-                label=self.name,\n-                labels=labels_value(name=self.name, purpose=self.purpose[address])\n-             )\n+            test_address(node, address, label=self.name, labels=[self.name])\n         assert self.name in node.listlabels()\n         assert_equal(\n             node.getaddressesbylabel(self.name),"
      },
      {
        "sha": "4b83e1613f1cdbce0c9023a239eeaddffd385575",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60aba1f2f11529add115d963d05599130288ae28/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=60aba1f2f11529add115d963d05599130288ae28",
        "patch": "@@ -11,10 +11,7 @@\n     assert_equal,\n     assert_raises_rpc_error,\n )\n-from test_framework.wallet_util import (\n-    labels_value,\n-    test_address,\n-)\n+from test_framework.wallet_util import test_address\n \n \n class ReceivedByTest(BitcoinTestFramework):\n@@ -131,7 +128,7 @@ def run_test(self):\n         # set pre-state\n         label = ''\n         address = self.nodes[1].getnewaddress()\n-        test_address(self.nodes[1], address, label=label, labels=labels_value(name=label))\n+        test_address(self.nodes[1], address, label=label, labels=[label])\n         received_by_label_json = [r for r in self.nodes[1].listreceivedbylabel() if r[\"label\"] == label][0]\n         balance_by_label = self.nodes[1].getreceivedbylabel(label)\n "
      }
    ]
  },
  {
    "sha": "8bb405bbadf11391ccba7b334b4cfe66dc85b390",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YmI0MDViYmFkZjExMzkxY2NiYTdiMzM0YjRjZmU2NmRjODViMzkw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T11:55:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-01-03T18:51:08Z"
      },
      "message": "test: getaddressinfo labels purpose deprecation test",
      "tree": {
        "sha": "702330973fb73fe4e662bd9b26ee498a1be42ee7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/702330973fb73fe4e662bd9b26ee498a1be42ee7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bb405bbadf11391ccba7b334b4cfe66dc85b390",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl4PjR0ACgkQT1chs9Dj\nkh0ggw/+JnHzVpIp7VwWzj0Urvc5grw/FUU02QrqEVgr7X5B2s4XUQ08o5YyR3Bd\nXi+0VKvof1Eg4O+ZSrMyWaYBjXDaVBB6jULI38Bc8j7/ZrttT8Fr4GUgHWQD3ir0\nIi2QA/5M4M7WXvSjV/9w6GqXYPXiiSMt2w4HoQAwy54Azdd7VyLE/u9rbO8LyPJI\nLc+D3sdyNkz68IJsPGGcQFPRj98toDv74ODiNVEn2gNNCUKbSjzqn7eWm8MJoOSQ\nwFC5pc1Vp6Vg5KuibAfX3O51TsMQTvFXvKCU5ZK7BlrI1EELbJtHZPdQlaaodvR+\nvdzgfbqZFkv8jFEfHjfI321ZrBvN77TWEN+VyHqXelqealIch6+4JF10UeJEldtU\n7ZRfcNGPOw40HfX0e2qBh2OJ05Lfi4P1V5bE+2DP8aH5HX8RZFaWD6mubWxosCH7\nwmxGcU0Q4pXXBlUqsRQuRdJnBVV0HkCvw3MdBJBQ0wOJLi4Xg4yrRpVp/7Wb4k2B\nucSl+GUQc2mGUrxlFVeaYvl9uaFWX6lNPE5s2Lj8Y/sjtG2CEamq3KoYpK77nPML\nhH9ncKgaifvUwz0mTTQ8EXm3J/j6DGhKhNKtUu+GgtJseCC6hhC+pSRxd8DNLbpw\nd7hcInfIaX5/ORFHscEmzqg8pKe2fZLtNOlvjA+PilbTeqfJsmo=\n=T81x\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAFMgRr6FciH6YnrPb3xN5HtU6Qz/CJ+Wxm7BFqqLF91CP/wEGFUys9pnzKE\nDINbL9eoNLII8CAaVZDCysP8jHazVskmVbqRcUkupqaROQ6NFriugTW/GgjxBF4P\njR7wCLr5i8rUSgOiAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t8BBu4u4I5aPv3/612Cv4en9LCPEEXg+NH/AIjfY09TNl\nKX8Ag9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0\nYW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 702330973fb73fe4e662bd9b26ee498a1be42ee7\nparent 60aba1f2f11529add115d963d05599130288ae28\nauthor Jon Atack <jon@atack.com> 1574596500 +0100\ncommitter Jon Atack <jon@atack.com> 1578077468 +0100\n\ntest: getaddressinfo labels purpose deprecation test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bb405bbadf11391ccba7b334b4cfe66dc85b390",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8bb405bbadf11391ccba7b334b4cfe66dc85b390",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bb405bbadf11391ccba7b334b4cfe66dc85b390/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60aba1f2f11529add115d963d05599130288ae28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60aba1f2f11529add115d963d05599130288ae28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60aba1f2f11529add115d963d05599130288ae28"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 49,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1049440d490133aea60e0de197e4cb68c2cdcc31",
        "filename": "test/functional/rpc_getaddressinfo_labels_purpose_deprecation.py",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bb405bbadf11391ccba7b334b4cfe66dc85b390/test/functional/rpc_getaddressinfo_labels_purpose_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bb405bbadf11391ccba7b334b4cfe66dc85b390/test/functional/rpc_getaddressinfo_labels_purpose_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getaddressinfo_labels_purpose_deprecation.py?ref=8bb405bbadf11391ccba7b334b4cfe66dc85b390",
        "patch": "@@ -0,0 +1,48 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test deprecation of RPC getaddressinfo `labels` returning an array\n+containing a JSON hash of `name` and purpose` key-value pairs. It now\n+returns an array of label names.\n+\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+LABELS_TO_TEST = frozenset({\"\" , \"New \ud834\udd61 $<#>&!\u0440\u044b\u0431\u0430 Label\"})\n+\n+class GetAddressInfoLabelsPurposeDeprecationTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n+        # Start node[0] with -deprecatedrpc=labelspurpose and node[1] without.\n+        self.extra_args = [[\"-deprecatedrpc=labelspurpose\"], []]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_labels(self, node_num, label_name, expected_value):\n+        node = self.nodes[node_num]\n+        address = node.getnewaddress()\n+        if label_name != \"\":\n+            node.setlabel(address, label_name)\n+            self.log.info(\"  set label to {}\".format(label_name))\n+        labels = node.getaddressinfo(address)[\"labels\"]\n+        self.log.info(\"  labels = {}\".format(labels))\n+        assert_equal(labels, expected_value)\n+\n+    def run_test(self):\n+        \"\"\"Test getaddressinfo labels with and without -deprecatedrpc flag.\"\"\"\n+        self.log.info(\"Test getaddressinfo labels with -deprecatedrpc flag\")\n+        for label in LABELS_TO_TEST:\n+            self.test_labels(node_num=0, label_name=label, expected_value=[{\"name\": label, \"purpose\": \"receive\"}])\n+\n+        self.log.info(\"Test getaddressinfo labels without -deprecatedrpc flag\")\n+        for label in LABELS_TO_TEST:\n+            self.test_labels(node_num=1, label_name=label, expected_value=[label])\n+\n+\n+if __name__ == '__main__':\n+    GetAddressInfoLabelsPurposeDeprecationTest().main()"
      },
      {
        "sha": "acb559911b4ae95941333c262bd0c2e795dd91ad",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bb405bbadf11391ccba7b334b4cfe66dc85b390/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bb405bbadf11391ccba7b334b4cfe66dc85b390/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=8bb405bbadf11391ccba7b334b4cfe66dc85b390",
        "patch": "@@ -212,6 +212,7 @@\n     'p2p_permissions.py',\n     'feature_blocksdir.py',\n     'feature_config_args.py',\n+    'rpc_getaddressinfo_labels_purpose_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      }
    ]
  },
  {
    "sha": "8925df86c4df16b1070343fef8e4d238f3cc3bd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTI1ZGY4NmM0ZGYxNmIxMDcwMzQzZmVmOGU0ZDIzOGYzY2MzYmQx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T16:03:03Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-01-03T18:51:11Z"
      },
      "message": "doc: update release notes\n\nUpdate the release notes regarding the change in rpc getaddressinfo `labels`.",
      "tree": {
        "sha": "9a0edc7850cff5ce505481d56f3054f55e8260f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a0edc7850cff5ce505481d56f3054f55e8260f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8925df86c4df16b1070343fef8e4d238f3cc3bd1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl4PjR8ACgkQT1chs9Dj\nkh17UA/9EWJJOG0HyEiDJyNJwqsvL+tdqmSVrXynlHWpBEvQPi/nmV58GtYJGb5q\nIkZYgNKFGGbJ6z52j9fNJjTi08DRWb7Gfu7Q11pgufeeXcUslJw2khLS+i8olJUc\nv1DP1z0aV9wYlJRFMf1ZDwRIQBfFLu+4lKg3Xi7IsOBfFx6MbR70Hg/RwQUb2sRU\nJGR/cS083jj2lE1l4Kyn+EAlZ6hbUrJhoLVkBSSD0LLv97yjziYwU7HT58+vYfjk\ntGrpuaBGYJFwjSwL7K/58Pw7LE5ek/Hb2ByyvVOkb+d7YOlrFBlc/D7MrW2/L5Uu\nZzrIJzbv4DglXFb0JMOfNdLIHSntk+z3jM+MmNqzw/Nh0sK82mdgy40uGkkfut7U\nClHQo2gGRiH2YJ78X3sSLRSDtrGZvtJrNo7QZZP5OHm2I9ZVkmJkjc1DRlaw5292\naimbkS1YKH7/9xPIDuat7tChlYLaSeAs3jsbOLTHGD4MC/LjM3WsZhbpLP5CwpQc\nLBSBZ+wfEzvF35HJ8QS6dZvcYzILYAyU9oMZEGLg3OiSLgoa4AEUMsBP7sEVt493\nZAWVuimBDMYnhcanPDvbj0qTANEU6ZiC6j/c14KCQG21O/BJLGhxcdyo/yGBpMQX\nN1gDQeJVoYUn0RprporxISMKEFryUYEniY3HCUlM0ZESEnx6Xdg=\n=wUMM\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHNhOuNSHUvdnzDXkQd/UUln5CD2evw3s0RcoM19wsYxCP/wECxPfB36X/1R\ngpfjvcWildMI8QReD40g8AioW3dr7OAQ9ACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQqX/mfBmHoFBnkKEKdEyIMAjx\nBF4PjSHwCAzrudtgxofmAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5k\nYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 9a0edc7850cff5ce505481d56f3054f55e8260f9\nparent 8bb405bbadf11391ccba7b334b4cfe66dc85b390\nauthor Jon Atack <jon@atack.com> 1574611383 +0100\ncommitter Jon Atack <jon@atack.com> 1578077471 +0100\n\ndoc: update release notes\n\nUpdate the release notes regarding the change in rpc getaddressinfo `labels`.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8925df86c4df16b1070343fef8e4d238f3cc3bd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8925df86c4df16b1070343fef8e4d238f3cc3bd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8925df86c4df16b1070343fef8e4d238f3cc3bd1/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bb405bbadf11391ccba7b334b4cfe66dc85b390",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bb405bbadf11391ccba7b334b4cfe66dc85b390",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bb405bbadf11391ccba7b334b4cfe66dc85b390"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1b07436bb14f1a4c03124698c9f66e8583e97596",
        "filename": "doc/release-notes-17578.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8925df86c4df16b1070343fef8e4d238f3cc3bd1/doc/release-notes-17578.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8925df86c4df16b1070343fef8e4d238f3cc3bd1/doc/release-notes-17578.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-17578.md?ref=8925df86c4df16b1070343fef8e4d238f3cc3bd1",
        "patch": "@@ -0,0 +1,8 @@\n+Deprecated or removed RPCs\n+--------------------------\n+\n+- The `getaddressinfo` RPC `labels` field now returns an array of label name\n+  strings. Previously, it returned an array of JSON objects containing `name` and\n+  `purpose` key/value pairs, which is now deprecated and will be removed in\n+  0.21. To re-enable the previous behavior, launch bitcoind with\n+  `-deprecatedrpc=labelspurpose`."
      }
    ]
  }
]