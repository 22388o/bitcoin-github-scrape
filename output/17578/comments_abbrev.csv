DrahtBot,2019-11-24 23:54:11,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17809](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17809.html) (rpc: Auto-format RPCResult by MarcoFalke)\n",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-557942690,557942690,
jnewbery,2019-11-26 15:04:08,"I also think you need to squash _pc: simplify getaddressinfo labels, deprecate previous behavior_ and _test: update getaddressinfo labels tests_ commits. I think the intermediate commit with the RPC changes but not the test changes breaks git bisect.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-558670521,558670521,
jnewbery,2019-11-26 16:34:04,rebase please!,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-558711809,558711809,
jonatack,2019-12-02 09:23:03,"> I also think you need to squash _pc: simplify getaddressinfo labels, deprecate previous behavior_ and _test: update getaddressinfo labels tests_ commits. I think the intermediate commit with the RPC changes but not the test changes breaks git bisect.\n\nDone.\n\nThanks @jnewbery for reviewing!  I took all your all suggestions except merging the deprecation test into rpc_deprecated.py (per my",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-560308112,560308112,
jonatack,2019-12-06 12:33:56,Thanks for reviewing @jnewbery. Addressed the style nit and rebased.,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-562554549,562554549,
jnewbery,2019-12-11 20:16:58,ACK 2e06da5d62e5b3563001d73b62e90a5a61b47993,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-564714471,564714471,
jonatack,2019-12-13 13:25:05,Rebased.,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-565440025,565440025,
jnewbery,2019-12-13 14:08:43,"ACK 55dfbc80c37296d6cab736ab267d887840b22367\n\nOnly change is rebasing on master.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-565453695,565453695,
instagibbs,2019-12-13 15:38:36,"What's the best argument in favor of the ""purpose"" field? Aside from it being ""strange"" I didn't see any discussion really on the links? I'd like to know why it was there before removing it.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-565487193,565487193,
jnewbery,2019-12-13 16:06:02,"""purpose"" was only exposed in this RPC in a recent release, merged in https://github.com/bitcoin/bitcoin/pull/12892 (originally from the commit here: https://github.com/bitcoin/bitcoin/pull/7729/files#diff-df7d84ff2f53fcb2a0dc15a3a51e55ceR3828).\n\nI expect no-one is using it.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-565499060,565499060,
instagibbs,2019-12-13 16:07:17,"@jnewbery Yes I read that particular fact in the OP. Maybe just saying ""why it's weird"" is enough, I just have no preconception here.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-565499554,565499554,
fjahr,2019-12-17 01:26:44,"ACK 55dfbc80c37296d6cab736ab267d887840b22367\n\nReviewed code, ran tests and tested behavior manually.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-566337426,566337426,
jonatack,2019-12-28 20:04:08,Changed back to using an invalid address for the RPCExamples and rebased.,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-569447109,569447109,
jnewbery,2020-01-02 17:58:04,Code review ACK 4752a2a37f63063656e5e0ef02bb861c605c2931,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-570287825,570287825,
jonatack,2020-01-03 18:58:39,"Doc-only changes after @luke-jr's review:\n```diff\ndoc/release-notes-17578.md\n-  strings. Previously, it returned an array of JSON hashes containing `name` and\n+  strings. Previously, it returned an array of JSON objects containing `name` and\n```\n```diff\nsrc/wallet/rpcwallet.cpp\n-    // value of the name key/value pair in the labels hash array below.\n+    // value of the name key/",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-570665115,570665115,
jnewbery,2020-01-03 19:03:40,reACK 8925df8,https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-570666602,570666602,
jonatack,2020-01-03 19:21:13,"@promag The `labelspurpose` deprecation itself is tested in 8bb405bbadf11391ccba7b334b4cfe66dc85b390. That test can be deleted after the 0.21 release. I think it's good to test both sides of the change in this PR, but particularly the new default state.",https://github.com/bitcoin/bitcoin/pull/17578#issuecomment-570671538,570671538,
jnewbery,2019-11-26 14:58:09,"Since you've named v0.21 explicitly in the release notes, you could also do so here, and also advise users how to re-enabled the deprecated behaviour (by using `-deprecatedrpc=labelspurpose`)",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350790994,350790994,src/wallet/rpcwallet.cpp
jnewbery,2019-11-26 14:58:55,Moving this inside the if block is a behaviour change (previously an empty array would be added to the return object if the address had no labels),https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350791540,350791540,src/wallet/rpcwallet.cpp
jnewbery,2019-11-26 15:00:07,I think it's better to just add the test to the `rpc_deprecated.py` test file.,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r350792332,350792332,test/functional/test_runner.py
jonatack,2019-12-02 09:09:19,Done.,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r352481726,352481726,src/wallet/rpcwallet.cpp
jonatack,2019-12-02 09:11:11,"I didn't see an actual change in behavior by putting this line inside the conditional, but I'll go with being prudent as you suggest. Done.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r352482458,352482458,src/wallet/rpcwallet.cpp
jonatack,2019-12-02 09:16:03,"> I think it's better to just add the test to the `rpc_deprecated.py` test file.\n\nI started to, then quickly saw that this would completely change that file (here we are not testing a removed RPC but a change in a returned value), and restoring this test file after 0.20 is released would be more complicated than deleting a test file.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r352484452,352484452,test/functional/test_runner.py
jnewbery,2019-12-02 17:46:28,"Nit: I think this would be clearer as just a single `run_test()` function, since these helper functions are only used in one place and they're going to be deleted in v0.21 anyway.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r352737120,352737120,test/functional/rpc_getaddressinfo_labels_purpose_deprecation.py
jonatack,2019-12-06 12:32:43,Done.,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r354811269,354811269,test/functional/rpc_getaddressinfo_labels_purpose_deprecation.py
MarcoFalke,2019-12-27 21:59:08,"I liked that the address was invalid, so it is harder to accidentally send funds to it",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r361752570,361752570,src/wallet/rpcwallet.cpp
jonatack,2019-12-27 22:28:04,I'll change it back *and* add a mention in the developer notes rpc section then :smile: ,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r361755945,361755945,src/wallet/rpcwallet.cpp
jonatack,2019-12-27 22:33:50,"Though I agree with @jnewbery that it's nicer when the rpc examples actually work when copy-pasted. It's a trade-off, to be sure.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r361756599,361756599,src/wallet/rpcwallet.cpp
MarcoFalke,2019-12-28 00:36:26,It *does* work. It is an example for an invalid address ;),https://github.com/bitcoin/bitcoin/pull/17578#discussion_r361766105,361766105,src/wallet/rpcwallet.cpp
jonatack,2019-12-28 20:02:19,Done!,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r361811340,361811340,src/wallet/rpcwallet.cpp
jnewbery,2020-01-02 17:48:22,"> so it is harder to accidentally send funds to it\n\nHuh? This is the help text for `getaddressinfo()`. It doesn't send funds.\n\nThis help text originally showed a valid address, then was changed to invalid in 17283 (https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350784833), and has now been changed to valid again and invalid again. I don't think it matters that much, but can we j",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r362564492,362564492,src/wallet/rpcwallet.cpp
luke-jr,2020-01-03 04:25:40,"JSON has Objects, not hashes.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r362703553,362703553,doc/release-notes-17578.md
jonatack,2020-01-03 18:52:21,done,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r362919950,362919950,doc/release-notes-17578.md
promag,2020-01-03 19:49:38,"nit, just `launch with -deprecatedrpc...`.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r362938617,362938617,doc/release-notes-17578.md
jonatack,2020-01-05 07:37:20,"Thanks; will remove ""bitcoind"" here if need to retouch this PR, otherwise will change it in one of the follow-on PRs like #17585 or in the wiki.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r363074915,363074915,doc/release-notes-17578.md
promag,2020-01-07 18:59:39,"Sure, just to clarify, I'd drop `bitcoind` because the argument also applies to `bitcoin-qt`.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r363899845,363899845,doc/release-notes-17578.md
meshcollider,2020-01-07 21:54:07,minor nit: I would move this comment down to the line below with the actual deprecation check,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r363969721,363969721,src/wallet/rpcwallet.cpp
jonatack,2020-01-07 22:08:18,"Yes, agreed.",https://github.com/bitcoin/bitcoin/pull/17578#discussion_r363975411,363975411,doc/release-notes-17578.md
jonatack,2020-01-09 17:17:00,thanks; done in #17585,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r364862928,364862928,src/wallet/rpcwallet.cpp
jonatack,2020-01-09 17:17:17,Done in #17585,https://github.com/bitcoin/bitcoin/pull/17578#discussion_r364863026,364863026,doc/release-notes-17578.md
