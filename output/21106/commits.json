[
  {
    "sha": "a3e713ace8b6dd97b6048b267e51e74f5a386f5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2U3MTNhY2U4YjZkZDk3YjYwNDhiMjY3ZTUxZTc0ZjVhMzg2ZjVm",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2021-02-10T20:15:55Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2021-02-11T01:20:03Z"
      },
      "message": "net: latch IBD across restarts\n\nthis prevents a network wide failure in the event that all or most listening\nnodes are restarted at approximately the same time",
      "tree": {
        "sha": "47d885afc46a4dc9898301d080d68b132c760215",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47d885afc46a4dc9898301d080d68b132c760215"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3e713ace8b6dd97b6048b267e51e74f5a386f5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3e713ace8b6dd97b6048b267e51e74f5a386f5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3e713ace8b6dd97b6048b267e51e74f5a386f5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3e713ace8b6dd97b6048b267e51e74f5a386f5f/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "deb185d2fdcd1327d40791ebf6621aed0ebd443d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/deb185d2fdcd1327d40791ebf6621aed0ebd443d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/deb185d2fdcd1327d40791ebf6621aed0ebd443d"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24083bd98d0ca1f0da1664deef517da09f3821a7",
        "filename": "src/test/util/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3e713ace8b6dd97b6048b267e51e74f5a386f5f/src/test/util/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3e713ace8b6dd97b6048b267e51e74f5a386f5f/src/test/util/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/validation.cpp?ref=a3e713ace8b6dd97b6048b267e51e74f5a386f5f",
        "patch": "@@ -11,6 +11,7 @@\n void TestChainState::ResetIbd()\n {\n     m_cached_finished_ibd = false;\n+    fs::remove(GetDataDir() / \".ibd_complete\");\n     assert(IsInitialBlockDownload());\n }\n "
      },
      {
        "sha": "5a5899a7ee2a3f979ea9b6081eea5c4f4b6b749b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3e713ace8b6dd97b6048b267e51e74f5a386f5f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3e713ace8b6dd97b6048b267e51e74f5a386f5f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a3e713ace8b6dd97b6048b267e51e74f5a386f5f",
        "patch": "@@ -16,6 +16,7 @@\n #include <consensus/validation.h>\n #include <cuckoocache.h>\n #include <flatfile.h>\n+#include <fs.h>\n #include <hash.h>\n #include <index/txindex.h>\n #include <logging.h>\n@@ -1294,15 +1295,23 @@ void CChainState::InitCoinsCache(size_t cache_size_bytes)\n // `const` so that `CValidationInterface` clients (which are given a `const CChainState*`)\n // can call it.\n //\n+// The file .ibd_complete is used to latch the datadir to IBD false across restarts\n+//\n bool CChainState::IsInitialBlockDownload() const\n {\n+    static const fs::path latch_filename = GetDataDir() / \".ibd_complete\";\n     // Optimization: pre-test latch before taking the lock.\n     if (m_cached_finished_ibd.load(std::memory_order_relaxed))\n         return false;\n \n     LOCK(cs_main);\n     if (m_cached_finished_ibd.load(std::memory_order_relaxed))\n         return false;\n+    if (fs::exists(latch_filename)) {\n+        LogPrintf(\"Leaving InitialBlockDownload (latching to false)\\n\");\n+        m_cached_finished_ibd.store(true, std::memory_order_relaxed);\n+        return false;\n+    }\n     if (fImporting || fReindex)\n         return true;\n     if (m_chain.Tip() == nullptr)\n@@ -1312,6 +1321,12 @@ bool CChainState::IsInitialBlockDownload() const\n     if (m_chain.Tip()->GetBlockTime() < (GetTime() - nMaxTipAge))\n         return true;\n     LogPrintf(\"Leaving InitialBlockDownload (latching to false)\\n\");\n+    FILE* f = fsbridge::fopen(latch_filename, \"wb\");\n+    if (f) {\n+        fclose(f);\n+    } else {\n+        LogPrintf(\"Failed to write %s\\n\", latch_filename.string().c_str());\n+    }\n     m_cached_finished_ibd.store(true, std::memory_order_relaxed);\n     return false;\n }"
      }
    ]
  }
]