MarcoFalke,2021-02-08 11:58:56,"> all or most of the listening nodes are restarted into Initial Block Download mode \n\nWouldn't that mean that there hasn't been a block in 24 hours? Then, waiting another two days for the next block doesn't seem like a fallback that will be needed.",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-775094408,775094408,
pstratem,2021-02-09 00:45:00,"@MarcoFalke no it doesn't, just that the listening nodes haven't seen the block yet.",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-775567992,775567992,
MarcoFalke,2021-02-09 07:08:45,"If the listening nodes haven't seen a block from 24h ago, something is going wrong and needs human attention to manually fixup. Having an automated fallback that hits after two days doesn't seem needed when having to manually interfere anyway.",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-775723337,775723337,
MarcoFalke,2021-02-10 07:04:42,"I fully agree that the node should try to recover (to avoid manual intervention as much as possible) when its both reasonable and safe to do. Though in this particular case, the users that are eager enough to corrupt their datadir, won't be patient enough to wait three full days for this workaround to take effect. And similarly, the patient users won't see the benefits either because some eager us",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-776494393,776494393,
jonatack,2021-02-10 10:08:33,">  the tricky part is being equally confident that the various attacks that the IBD specific behaviour is intended to protect against are still protected against-- esp because no one reviewing this work may remember all of them\n\nYes.",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-776597233,776597233,
MarcoFalke,2021-02-10 10:46:11,"If this was a boolean option (default to false), it would be easier to review than this time-based threshold. Obviously, it would also lose the node-fixes-itself-after-three-days feature. Though, I am still sceptical of it's use. It assumes that *all* of your connections (inbound, as well as block-feeler, outbound block-relay, ...) are out of IBD for three days without a single one of them setting",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-776619931,776619931,
pstratem,2021-02-10 18:51:30,"@MarcoFalke In IBD we do not request headers from inbound peers.  Literally only from a single outbound peer with a timeout.\n\nA setting to disable IBD for your own node might fix your node if your node is listening and receiving inbound connections from nodes which are sync'd with miners.  Relying on that would be extremely fragile.\n\nEven if you were able to fix your own node, you can't th",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-776932029,776932029,
pstratem,2021-02-10 19:23:46,@gmaxwell Yes just writing the latch to disk is probably the best solution.,https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-776956299,776956299,
jonatack,2021-02-10 19:26:03,"Yes, if we can avoid using time that would be a real win. Easier to test too.",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-776957620,776957620,
pstratem,2021-02-11 03:16:20,The CI failures are all random zmq issues.,https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-777179339,777179339,
decryp2kanon,2021-02-11 18:27:51,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-777697260,777697260,
pstratem,2021-02-22 05:10:49,Is there anything I need to do here?,https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-783085787,783085787,
jnewbery,2021-02-22 09:37:00,"> Is there anything I need to do here?\n\nConvince other contributors that this is a good idea. Currently, if a node is switched off and then switched back on some time later, it'll start up in IBD until it catches up to the tip. This seems like good behaviour - we don't want to download transactions, relay our address, respond to getheaders, etc until we've caught back up. If you want other con",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-783237486,783237486,
sipa,2021-02-22 21:10:59,"TL;DR: I think we should just drop the ""don't respond to GETHEADERS while in IBD"" behavior, rather than keeping the IsInitialBlockDownload() latch across restarts. Possibly we can also improve the find-another-peer-to-sync-headers-from logic (and, if that's the real problem, this PR doesn't currently address it).\n\nThese are the things that IsInitialBlockDownload() affects (there are more, but ",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-783676898,783676898,
sipa,2021-02-27 02:00:54,"@pstratem So I suspect that what happened in $ALTCOIN is the headers fetching logic is approximately doing this:\n- until the tip header is less than a day old, we pick a single peer to fetch headers from. If we have at least one outbound peer, only outbounds are considered.\n- headers fetching times out after 15 minutes, and after that a new peer is picked (but, in a normal situation, again an ",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-786984053,786984053,
sdaftuar,2021-03-04 17:45:26,"@sipa Originally the logic was added to not respond to GETHEADERS while in IBD because we relaxed the checkpoint logic, so that we could accept a non-checkpointed chain during initial sync.  If a node was in IBD and fed a bogus initial headers chain, then a peer that is on the checkpointed chain would ban us if we gave them a checkpoint-violating header.\n\nSince then, our logic has changed a lo",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-790802591,790802591,
sdaftuar,2021-03-04 18:33:10,"> That will (6) trigger block relay to all those peers via a getdata, which in turn will cause those nodes to (7) leave IBD and then (8) announce the block to their peers. Things should progress fine from there, in the same way, I think -- what do you think is breaking down exactly?\n\nAha, on further investigation, I think (6) is where things break down: when a node is in IBD because its curren",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-790834342,790834342,
JeremyRubin,2021-05-24 04:51:37,"Noting that I was operating a signet for a while which crashed, and by the time I rebooted it (life happens) it was a few months later. Now after restarting, I think the IBD latch is keeping my seed/mining node in IBD since it's in the past, even though I'm producing new blocks. This also prevents this node from relaying the new blocks to peers.\n\nThis patch might fix this (pathological) case.",https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-846730993,846730993,
jnewbery,2021-02-08 10:46:22,"This assumes that `GetTime()` is monotonic, which I don't think is true. `GetTime()` is mockable so may move backwards in tests.\n\nIt looks like `GetTime()` is also deprecated.",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r571946307,571946307,src/validation.cpp
pstratem,2021-02-09 00:43:37,"Nodes in IBD will not respond to GETHEADERS. Nodes in IBD do not request headers from inbound peers only outbound.\n\nIf all or most of the listening nodes are in IBD (emergency hot fix or something) then nobody will be able to get headers.\n\nTo get out of this the listening nodes need to request headers from inbound connections, either by exiting IBD or special casing that limit while in IBD",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r572483459,572483459,src/validation.cpp
jonatack,2021-02-10 09:25:14,"The `ibdtimeout` and `uptime` localvars can be `const`.\n\nAs @jnewbery mentions, we probably don't want to use `GetTime()` here, see `src/util/time.h`.\n\nAlso maybe consider how this interacts with `setmocktime`\n```\n    // For now, don't change mocktime if we're in the middle of validation, as\n    // this could have an effect on mempool time-based eviction, as well as\n    // IsCurren",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r573569162,573569162,src/validation.cpp
jonatack,2021-02-10 09:25:37,Can use `constexpr` and mention that the constant refers to a time duration in seconds.,https://github.com/bitcoin/bitcoin/pull/21106#discussion_r573569430,573569430,src/validation.h
jonatack,2021-02-10 21:19:53,"I think we now use bracket syntax for the conditional (after a famous Apple bug iirc)\n```diff\n-    if (!f) LogPrintf(""Failed to write %s \n"", latch_filename.c_str());\n-    else fclose(f);\n+    if (f) {\n+        fclose(f);\n+    } else {\n+        LogPrintf(""Failed to write %s\n"", latch_filename.c_str());\n+    }\n```\n",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r574085139,574085139,src/validation.cpp
pstratem,2021-02-10 21:32:44,"Coding style guidelines doesn't agree, but I will expand it to new lines to make it easier to read.\n\n(Indeed ironically I argued for using braces everywhere, but we don't).\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r574092299,574092299,src/validation.cpp
jonatack,2021-02-10 21:43:51,"The developer notes state:\n```\n  - If an `if` only has a single-statement `then`-clause, it can appear\n    on the same line as the `if`, without braces. In every other case,\n    braces are required, and the `then` and `else` clauses must appear\n    correctly indented on a new line.\n```\n",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r574098661,574098661,src/validation.cpp
jonatack,2021-02-10 21:45:19,"So if I read it correctly, without the `else` it would be fine, but with the `else` then braces are required (at any rate, that is what I've been doing).",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r574099441,574099441,src/validation.cpp
jonatack,2021-02-13 16:53:26,"If this moves forward, noting that a file description should be added to `doc/files.md` (alternatively, perhaps persist the latch in `settings.json`, which is also chain-specific).",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r575687579,575687579,src/validation.cpp
pstratem,2021-02-13 19:35:56,"I did this as a separate file so that users can easily add the file to override, with GetDataDir() it should be chain specific, no?",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r575704729,575704729,src/validation.cpp
jonatack,2021-02-13 19:50:35,"Yes, I think they should both be.",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r575706285,575706285,src/validation.cpp
MarcoFalke,2021-02-22 09:40:15,"This will set ibd to false, when `-reindex`? If yes, that seems wrong",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r580105756,580105756,src/validation.cpp
luke-jr,2021-02-24 01:45:59,"Users can easily override settings.json as well - they're just interpreted as command-line options.\n\nSo something like `--ibd_complete=0/1` would work",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r581543035,581543035,src/validation.cpp
pstratem,2021-02-28 00:04:38,"yes, it is wrong",https://github.com/bitcoin/bitcoin/pull/21106#discussion_r584207780,584207780,src/validation.cpp
schuie2528,2021-02-28 01:01:12,bc1que90l5dy4yzn79x8xmem8t7dgn0c2zcqvxnr6x,https://github.com/bitcoin/bitcoin/pull/21106#discussion_r584212675,584212675,src/validation.cpp
