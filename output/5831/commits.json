[
  {
    "sha": "90a43c1e93318584d5443b513c2c0e937acb966a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MGE0M2MxZTkzMzE4NTg0ZDU0NDNiNTEzYzJjMGU5MzdhY2I5NjZh",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-06-10T01:14:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-05T12:25:12Z"
      },
      "message": "[Qt] Code-movement-only: Format confirmation message in sendcoinsdialog",
      "tree": {
        "sha": "4ac3b6cac10908da18961d6423dc5bb6aad6a517",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ac3b6cac10908da18961d6423dc5bb6aad6a517"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90a43c1e93318584d5443b513c2c0e937acb966a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90a43c1e93318584d5443b513c2c0e937acb966a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90a43c1e93318584d5443b513c2c0e937acb966a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90a43c1e93318584d5443b513c2c0e937acb966a/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3dfcdf46c2c1a322b6649f04e8c9ca7636c5baf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3dfcdf46c2c1a322b6649f04e8c9ca7636c5baf3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3dfcdf46c2c1a322b6649f04e8c9ca7636c5baf3"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 30,
      "deletions": 29
    },
    "files": [
      {
        "sha": "4338e58e260c283b010315e1afc162dfc24a55c9",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 29,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90a43c1e93318584d5443b513c2c0e937acb966a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90a43c1e93318584d5443b513c2c0e937acb966a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=90a43c1e93318584d5443b513c2c0e937acb966a",
        "patch": "@@ -220,6 +220,36 @@ void SendCoinsDialog::on_sendButton_clicked()\n         return;\n     }\n \n+    fNewRecipientAllowed = false;\n+\n+\n+    WalletModel::UnlockContext ctx(model->requestUnlock());\n+    if(!ctx.isValid())\n+    {\n+        // Unlock wallet was cancelled\n+        fNewRecipientAllowed = true;\n+        return;\n+    }\n+\n+    // prepare transaction for getting txFee earlier\n+    WalletModelTransaction currentTransaction(recipients);\n+    WalletModel::SendCoinsReturn prepareStatus;\n+    if (model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n+        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl);\n+    else\n+        prepareStatus = model->prepareTransaction(currentTransaction);\n+\n+    // process prepareStatus and on error generate message shown to user\n+    processSendCoinsReturn(prepareStatus,\n+        BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), currentTransaction.getTransactionFee()));\n+\n+    if(prepareStatus.status != WalletModel::OK) {\n+        fNewRecipientAllowed = true;\n+        return;\n+    }\n+\n+    CAmount txFee = currentTransaction.getTransactionFee();\n+\n     // Format confirmation message\n     QStringList formatted;\n     foreach(const SendCoinsRecipient &rcp, recipients)\n@@ -257,35 +287,6 @@ void SendCoinsDialog::on_sendButton_clicked()\n         formatted.append(recipientElement);\n     }\n \n-    fNewRecipientAllowed = false;\n-\n-\n-    WalletModel::UnlockContext ctx(model->requestUnlock());\n-    if(!ctx.isValid())\n-    {\n-        // Unlock wallet was cancelled\n-        fNewRecipientAllowed = true;\n-        return;\n-    }\n-\n-    // prepare transaction for getting txFee earlier\n-    WalletModelTransaction currentTransaction(recipients);\n-    WalletModel::SendCoinsReturn prepareStatus;\n-    if (model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n-        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl);\n-    else\n-        prepareStatus = model->prepareTransaction(currentTransaction);\n-\n-    // process prepareStatus and on error generate message shown to user\n-    processSendCoinsReturn(prepareStatus,\n-        BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), currentTransaction.getTransactionFee()));\n-\n-    if(prepareStatus.status != WalletModel::OK) {\n-        fNewRecipientAllowed = true;\n-        return;\n-    }\n-\n-    CAmount txFee = currentTransaction.getTransactionFee();\n     QString questionString = tr(\"Are you sure you want to send?\");\n     questionString.append(\"<br /><br />%1\");\n "
      }
    ]
  },
  {
    "sha": "292623adf59edea52b2927b3d67fd2ff7f997882",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTI2MjNhZGY1OWVkZWE1MmIyOTI3YjNkNjdmZDJmZjdmOTk3ODgy",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-07-23T12:34:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-13T10:04:18Z"
      },
      "message": "Subtract fee from amount\n\nFixes #2724 and #1570.\n\nAdds the\nautomatically-subtract-the-fee-from-the-amount-and-send-whats-left\nfeature to the GUI and RPC (sendtoaddress,sendmany).",
      "tree": {
        "sha": "afec21b4e7ff1c2b551b060f5f435895d43d15d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afec21b4e7ff1c2b551b060f5f435895d43d15d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/292623adf59edea52b2927b3d67fd2ff7f997882",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/292623adf59edea52b2927b3d67fd2ff7f997882",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/292623adf59edea52b2927b3d67fd2ff7f997882",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/292623adf59edea52b2927b3d67fd2ff7f997882/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90a43c1e93318584d5443b513c2c0e937acb966a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90a43c1e93318584d5443b513c2c0e937acb966a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90a43c1e93318584d5443b513c2c0e937acb966a"
      }
    ],
    "stats": {
      "total": 310,
      "additions": 248,
      "deletions": 62
    },
    "files": [
      {
        "sha": "84d30239969c3afbdb84cea1442bafc8711ebb60",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -102,6 +102,21 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 100)\n         assert_equal(self.nodes[2].getbalance(\"from1\"), 100-21)\n \n+        # Send 10 XBT normal\n+        address = self.nodes[0].getnewaddress(\"test\")\n+        self.nodes[2].settxfee(Decimal('0.001'))\n+        txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", False)\n+        self.nodes[2].setgenerate(True, 1)\n+        self.sync_all()\n+        assert_equal(self.nodes[2].getbalance(), Decimal('89.99900000'))\n+        assert_equal(self.nodes[0].getbalance(), Decimal('10.00000000'))\n+\n+        # Send 10 XBT with subtract fee from amount\n+        txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", True)\n+        self.nodes[2].setgenerate(True, 1)\n+        self.sync_all()\n+        assert_equal(self.nodes[2].getbalance(), Decimal('79.99900000'))\n+        assert_equal(self.nodes[0].getbalance(), Decimal('19.99900000'))\n \n if __name__ == '__main__':\n     WalletTest ().main ()"
      },
      {
        "sha": "fdb8c50a46eac17acd75ce5778c8a0169aa46f69",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -134,7 +134,7 @@ class CTxOut\n \n     uint256 GetHash() const;\n \n-    bool IsDust(CFeeRate minRelayTxFee) const\n+    CAmount GetDustThreshold(const CFeeRate &minRelayTxFee) const\n     {\n         // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n         // which has units satoshis-per-kilobyte.\n@@ -145,7 +145,12 @@ class CTxOut\n         // so dust is a txout less than 546 satoshis \n         // with default minRelayTxFee.\n         size_t nSize = GetSerializeSize(SER_DISK,0)+148u;\n-        return (nValue < 3*minRelayTxFee.GetFee(nSize));\n+        return 3*minRelayTxFee.GetFee(nSize);\n+    }\n+\n+    bool IsDust(const CFeeRate &minRelayTxFee) const\n+    {\n+        return (nValue < GetDustThreshold(minRelayTxFee));\n     }\n \n     friend bool operator==(const CTxOut& a, const CTxOut& b)"
      },
      {
        "sha": "5042ff06a26f64fac76aede09909aca3ec1c1c1e",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -33,6 +33,7 @@\n using namespace std;\n QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n+bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n CoinControlDialog::CoinControlDialog(QWidget *parent) :\n     QDialog(parent),\n@@ -541,6 +542,11 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n         sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority, mempoolEstimatePriority);\n \n+        // in the subtract fee from amount case, we can tell if zero change already and subtract the bytes, so that fee calculation afterwards is accurate\n+        if (CoinControlDialog::fSubtractFeeFromAmount)\n+            if (nAmount - nPayAmount == 0)\n+                nBytes -= 34;\n+\n         // Fee\n         nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n \n@@ -556,20 +562,27 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         if (nPayAmount > 0)\n         {\n-            nChange = nAmount - nPayFee - nPayAmount;\n+            nChange = nAmount - nPayAmount;\n+            if (!CoinControlDialog::fSubtractFeeFromAmount)\n+                nChange -= nPayFee;\n \n             // Never create dust outputs; if we would, just add the dust to the fee.\n             if (nChange > 0 && nChange < CENT)\n             {\n                 CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n                 if (txout.IsDust(::minRelayTxFee))\n                 {\n-                    nPayFee += nChange;\n-                    nChange = 0;\n+                    if (CoinControlDialog::fSubtractFeeFromAmount) // dust-change will be raised until no dust\n+                        nChange = txout.GetDustThreshold(::minRelayTxFee);\n+                    else\n+                    {\n+                        nPayFee += nChange;\n+                        nChange = 0;\n+                    }\n                 }\n             }\n \n-            if (nChange == 0)\n+            if (nChange == 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n                 nBytes -= 34;\n         }\n \n@@ -612,7 +625,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     {\n         l3->setText(ASYMP_UTF8 + l3->text());\n         l4->setText(ASYMP_UTF8 + l4->text());\n-        if (nChange > 0)\n+        if (nChange > 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n             l8->setText(ASYMP_UTF8 + l8->text());\n     }\n "
      },
      {
        "sha": "5ec382838f9069442773ec09a9d5571adf495214",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -43,6 +43,7 @@ class CoinControlDialog : public QDialog\n \n     static QList<CAmount> payAmounts;\n     static CCoinControl *coinControl;\n+    static bool fSubtractFeeFromAmount;\n \n private:\n     Ui::CoinControlDialog *ui;"
      },
      {
        "sha": "b362928438cee988fad5a10657916611a58fb870",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -157,7 +157,21 @@\n      </widget>\n     </item>\n     <item row=\"2\" column=\"1\">\n-     <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n+     <layout class=\"QHBoxLayout\" name=\"horizontalLayoutAmount\" stretch=\"0,1\">\n+      <item>\n+       <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n+      </item>\n+      <item>\n+       <widget class=\"QCheckBox\" name=\"checkboxSubtractFeeFromAmount\">\n+        <property name=\"toolTip\">\n+         <string>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>\n+        </property>\n+        <property name=\"text\">\n+         <string>S&amp;ubtract fee from amount</string>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n     </item>\n     <item row=\"3\" column=\"0\">\n      <widget class=\"QLabel\" name=\"messageLabel\">"
      },
      {
        "sha": "55ca65c8e6b5b5602fd9549f91f6f058defecd21",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -221,8 +221,6 @@ void SendCoinsDialog::on_sendButton_clicked()\n     }\n \n     fNewRecipientAllowed = false;\n-\n-\n     WalletModel::UnlockContext ctx(model->requestUnlock());\n     if(!ctx.isValid())\n     {\n@@ -252,7 +250,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     // Format confirmation message\n     QStringList formatted;\n-    foreach(const SendCoinsRecipient &rcp, recipients)\n+    foreach(const SendCoinsRecipient &rcp, currentTransaction.getRecipients())\n     {\n         // generate bold amount string\n         QString amount = \"<b>\" + BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n@@ -369,6 +367,7 @@ SendCoinsEntry *SendCoinsDialog::addEntry()\n     ui->entries->addWidget(entry);\n     connect(entry, SIGNAL(removeEntry(SendCoinsEntry*)), this, SLOT(removeEntry(SendCoinsEntry*)));\n     connect(entry, SIGNAL(payAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n+    connect(entry, SIGNAL(subtractFeeFromAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n \n     updateTabsAndLabels();\n \n@@ -784,11 +783,17 @@ void SendCoinsDialog::coinControlUpdateLabels()\n \n     // set pay amounts\n     CoinControlDialog::payAmounts.clear();\n+    CoinControlDialog::fSubtractFeeFromAmount = false;\n     for(int i = 0; i < ui->entries->count(); ++i)\n     {\n         SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n         if(entry)\n-            CoinControlDialog::payAmounts.append(entry->getValue().amount);\n+        {\n+            SendCoinsRecipient rcp = entry->getValue();\n+            CoinControlDialog::payAmounts.append(rcp.amount);\n+            if (rcp.fSubtractFeeFromAmount)\n+                CoinControlDialog::fSubtractFeeFromAmount = true;\n+        }\n     }\n \n     if (CoinControlDialog::coinControl->HasSelected())"
      },
      {
        "sha": "6ac650e74fc383b3d0a21f815b174cfc309074bd",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -44,6 +44,7 @@ SendCoinsEntry::SendCoinsEntry(QWidget *parent) :\n \n     // Connect signals\n     connect(ui->payAmount, SIGNAL(valueChanged()), this, SIGNAL(payAmountChanged()));\n+    connect(ui->checkboxSubtractFeeFromAmount, SIGNAL(toggled(bool)), this, SIGNAL(subtractFeeFromAmountChanged()));\n     connect(ui->deleteButton, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n     connect(ui->deleteButton_is, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n     connect(ui->deleteButton_s, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n@@ -94,6 +95,7 @@ void SendCoinsEntry::clear()\n     ui->payTo->clear();\n     ui->addAsLabel->clear();\n     ui->payAmount->clear();\n+    ui->checkboxSubtractFeeFromAmount->setCheckState(Qt::Unchecked);\n     ui->messageTextLabel->clear();\n     ui->messageTextLabel->hide();\n     ui->messageLabel->hide();\n@@ -165,6 +167,7 @@ SendCoinsRecipient SendCoinsEntry::getValue()\n     recipient.label = ui->addAsLabel->text();\n     recipient.amount = ui->payAmount->value();\n     recipient.message = ui->messageTextLabel->text();\n+    recipient.fSubtractFeeFromAmount = (ui->checkboxSubtractFeeFromAmount->checkState() == Qt::Checked);\n \n     return recipient;\n }\n@@ -174,7 +177,8 @@ QWidget *SendCoinsEntry::setupTabChain(QWidget *prev)\n     QWidget::setTabOrder(prev, ui->payTo);\n     QWidget::setTabOrder(ui->payTo, ui->addAsLabel);\n     QWidget *w = ui->payAmount->setupTabChain(ui->addAsLabel);\n-    QWidget::setTabOrder(w, ui->addressBookButton);\n+    QWidget::setTabOrder(w, ui->checkboxSubtractFeeFromAmount);\n+    QWidget::setTabOrder(ui->checkboxSubtractFeeFromAmount, ui->addressBookButton);\n     QWidget::setTabOrder(ui->addressBookButton, ui->pasteButton);\n     QWidget::setTabOrder(ui->pasteButton, ui->deleteButton);\n     return ui->deleteButton;"
      },
      {
        "sha": "c2d1185bddb8e29ebfda6925001e2943934bd935",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -51,6 +51,7 @@ public slots:\n signals:\n     void removeEntry(SendCoinsEntry *entry);\n     void payAmountChanged();\n+    void subtractFeeFromAmountChanged();\n \n private slots:\n     void deleteClicked();"
      },
      {
        "sha": "1baa5eb9322e77972bcccca0c7a2ac9f0c4331cf",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -6,6 +6,7 @@\n \n #include \"addresstablemodel.h\"\n #include \"guiconstants.h\"\n+#include \"guiutil.h\"\n #include \"paymentserver.h\"\n #include \"recentrequeststablemodel.h\"\n #include \"transactiontablemodel.h\"\n@@ -192,8 +193,9 @@ bool WalletModel::validateAddress(const QString &address)\n WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl)\n {\n     CAmount total = 0;\n+    bool fSubtractFeeFromAmount = false;\n     QList<SendCoinsRecipient> recipients = transaction.getRecipients();\n-    std::vector<std::pair<CScript, CAmount> > vecSend;\n+    std::vector<CRecipient> vecSend;\n \n     if(recipients.empty())\n     {\n@@ -206,6 +208,9 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n     // Pre-check input data for validity\n     foreach(const SendCoinsRecipient &rcp, recipients)\n     {\n+        if (rcp.fSubtractFeeFromAmount)\n+            fSubtractFeeFromAmount = true;\n+\n         if (rcp.paymentRequest.IsInitialized())\n         {   // PaymentRequest...\n             CAmount subtotal = 0;\n@@ -217,7 +222,9 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n                 subtotal += out.amount();\n                 const unsigned char* scriptStr = (const unsigned char*)out.script().data();\n                 CScript scriptPubKey(scriptStr, scriptStr+out.script().size());\n-                vecSend.push_back(std::pair<CScript, CAmount>(scriptPubKey, out.amount()));\n+                CAmount nAmount = out.amount();\n+                CRecipient recipient = {scriptPubKey, nAmount, rcp.fSubtractFeeFromAmount};\n+                vecSend.push_back(recipient);\n             }\n             if (subtotal <= 0)\n             {\n@@ -239,7 +246,8 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             ++nAddresses;\n \n             CScript scriptPubKey = GetScriptForDestination(CBitcoinAddress(rcp.address.toStdString()).Get());\n-            vecSend.push_back(std::pair<CScript, CAmount>(scriptPubKey, rcp.amount));\n+            CRecipient recipient = {scriptPubKey, rcp.amount, rcp.fSubtractFeeFromAmount};\n+            vecSend.push_back(recipient);\n \n             total += rcp.amount;\n         }\n@@ -260,17 +268,21 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         LOCK2(cs_main, wallet->cs_wallet);\n \n         transaction.newPossibleKeyChange(wallet);\n+\n         CAmount nFeeRequired = 0;\n+        int nChangePosRet = -1;\n         std::string strFailReason;\n \n         CWalletTx *newTx = transaction.getTransaction();\n         CReserveKey *keyChange = transaction.getPossibleKeyChange();\n-        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, strFailReason, coinControl);\n+        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, nChangePosRet, strFailReason, coinControl);\n         transaction.setTransactionFee(nFeeRequired);\n+        if (fSubtractFeeFromAmount && fCreated)\n+            transaction.reassignAmounts(nChangePosRet);\n \n         if(!fCreated)\n         {\n-            if((total + nFeeRequired) > nBalance)\n+            if(!fSubtractFeeFromAmount && (total + nFeeRequired) > nBalance)\n             {\n                 return SendCoinsReturn(AmountWithFeeExceedsBalance);\n             }"
      },
      {
        "sha": "de915165f941d9ec2b96ccb6c9ab32f87780961f",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -36,9 +36,9 @@ QT_END_NAMESPACE\n class SendCoinsRecipient\n {\n public:\n-    explicit SendCoinsRecipient() : amount(0), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n+    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n     explicit SendCoinsRecipient(const QString &addr, const QString &label, const CAmount& amount, const QString &message):\n-        address(addr), label(label), amount(amount), message(message), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n+        address(addr), label(label), amount(amount), message(message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n \n     // If from an unauthenticated payment request, this is used for storing\n     // the addresses, e.g. address-A<br />address-B<br />address-C.\n@@ -56,6 +56,8 @@ class SendCoinsRecipient\n     // Empty if no authentication or invalid signature/cert/etc.\n     QString authenticatedMerchant;\n \n+    bool fSubtractFeeFromAmount; // memory only\n+\n     static const int CURRENT_VERSION = 1;\n     int nVersion;\n "
      },
      {
        "sha": "c97add6befbf6081efb2f4b02841cd5e987ee1ec",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -46,6 +46,38 @@ void WalletModelTransaction::setTransactionFee(const CAmount& newFee)\n     fee = newFee;\n }\n \n+void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n+{\n+    int i = 0;\n+    for (QList<SendCoinsRecipient>::iterator it = recipients.begin(); it != recipients.end(); ++it)\n+    {\n+        SendCoinsRecipient& rcp = (*it);\n+\n+        if (rcp.paymentRequest.IsInitialized())\n+        {\n+            CAmount subtotal = 0;\n+            const payments::PaymentDetails& details = rcp.paymentRequest.getDetails();\n+            for (int j = 0; j < details.outputs_size(); j++)\n+            {\n+                const payments::Output& out = details.outputs(j);\n+                if (out.amount() <= 0) continue;\n+                if (i == nChangePosRet)\n+                    i++;\n+                subtotal += walletTransaction->vout[i].nValue;\n+                i++;\n+            }\n+            rcp.amount = subtotal;\n+        }\n+        else // normal recipient (no payment request)\n+        {\n+            if (i == nChangePosRet)\n+                i++;\n+            rcp.amount = walletTransaction->vout[i].nValue;\n+            i++;\n+        }\n+    }\n+}\n+\n CAmount WalletModelTransaction::getTotalTransactionAmount()\n {\n     CAmount totalTransactionAmount = 0;"
      },
      {
        "sha": "7765fea4afe0f719fe33a0ca184904a4d6b32d6c",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -35,8 +35,10 @@ class WalletModelTransaction\n     void newPossibleKeyChange(CWallet *wallet);\n     CReserveKey *getPossibleKeyChange();\n \n+    void reassignAmounts(int nChangePosRet); // needed for the subtract-fee-from-amount feature\n+\n private:\n-    const QList<SendCoinsRecipient> recipients;\n+    QList<SendCoinsRecipient> recipients;\n     CWalletTx *walletTransaction;\n     CReserveKey *keyChange;\n     CAmount fee;"
      },
      {
        "sha": "a45ea9839beab179e862d382f35fcfbc751168cb",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -32,6 +32,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getnetworkhashps\", 0 },\n     { \"getnetworkhashps\", 1 },\n     { \"sendtoaddress\", 1 },\n+    { \"sendtoaddress\", 4 },\n     { \"settxfee\", 0 },\n     { \"getreceivedbyaddress\", 1 },\n     { \"getreceivedbyaccount\", 1 },\n@@ -59,6 +60,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listsinceblock\", 2 },\n     { \"sendmany\", 1 },\n     { \"sendmany\", 2 },\n+    { \"sendmany\", 4 },\n     { \"addmultisigaddress\", 0 },\n     { \"addmultisigaddress\", 1 },\n     { \"createmultisig\", 0 },"
      },
      {
        "sha": "142487bc8ccf522398a924ce8c97cbda30222db2",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 15,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -317,7 +317,7 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     return ret;\n }\n \n-static void SendMoney(const CTxDestination &address, CAmount nValue, CWalletTx& wtxNew)\n+static void SendMoney(const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, CWalletTx& wtxNew)\n {\n     CAmount curBalance = pwalletMain->GetBalance();\n \n@@ -335,21 +335,24 @@ static void SendMoney(const CTxDestination &address, CAmount nValue, CWalletTx&\n     CReserveKey reservekey(pwalletMain);\n     CAmount nFeeRequired;\n     std::string strError;\n-    if (!pwalletMain->CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired, strError)) {\n-        if (nValue + nFeeRequired > curBalance)\n-            throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!\", FormatMoney(nFeeRequired)));\n-        else\n-            throw JSONRPCError(RPC_WALLET_ERROR, strError);\n+    vector<CRecipient> vecSend;\n+    int nChangePosRet = -1;\n+    CRecipient recipient = {scriptPubKey, nValue, fSubtractFeeFromAmount};\n+    vecSend.push_back(recipient);\n+    if (!pwalletMain->CreateTransaction(vecSend, wtxNew, reservekey, nFeeRequired, nChangePosRet, strError)) {\n+        if (!fSubtractFeeFromAmount && nValue + nFeeRequired > pwalletMain->GetBalance())\n+            strError = strprintf(\"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!\", FormatMoney(nFeeRequired));\n+        throw JSONRPCError(RPC_WALLET_ERROR, strError);\n     }\n     if (!pwalletMain->CommitTransaction(wtxNew, reservekey))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n }\n \n Value sendtoaddress(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 4)\n+    if (fHelp || params.size() < 2 || params.size() > 5)\n         throw runtime_error(\n-            \"sendtoaddress \\\"bitcoinaddress\\\" amount ( \\\"comment\\\" \\\"comment-to\\\" )\\n\"\n+            \"sendtoaddress \\\"bitcoinaddress\\\" amount ( \\\"comment\\\" \\\"comment-to\\\" subtractfeefromamount )\\n\"\n             \"\\nSend an amount to a given address. The amount is a real and is rounded to the nearest 0.00000001\\n\"\n             + HelpRequiringPassphrase() +\n             \"\\nArguments:\\n\"\n@@ -360,11 +363,14 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"4. \\\"comment-to\\\"  (string, optional) A comment to store the name of the person or organization \\n\"\n             \"                             to which you're sending the transaction. This is not part of the \\n\"\n             \"                             transaction, just kept in your wallet.\\n\"\n+            \"5. subtractfeefromamount  (boolean, optional, default=false) The fee will be deducted from the amount being sent.\\n\"\n+            \"                             The recipient will receive less bitcoins than you enter in the amount field.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n@@ -384,9 +390,13 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"to\"]      = params[3].get_str();\n \n+    bool fSubtractFeeFromAmount = false;\n+    if (params.size() > 4)\n+        fSubtractFeeFromAmount = params[4].get_bool();\n+\n     EnsureWalletIsUnlocked();\n \n-    SendMoney(address.Get(), nAmount, wtx);\n+    SendMoney(address.Get(), nAmount, fSubtractFeeFromAmount, wtx);\n \n     return wtx.GetHash().GetHex();\n }\n@@ -840,17 +850,17 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (nAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n-    SendMoney(address.Get(), nAmount, wtx);\n+    SendMoney(address.Get(), nAmount, false, wtx);\n \n     return wtx.GetHash().GetHex();\n }\n \n \n Value sendmany(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 4)\n+    if (fHelp || params.size() < 2 || params.size() > 5)\n         throw runtime_error(\n-            \"sendmany \\\"fromaccount\\\" {\\\"address\\\":amount,...} ( minconf \\\"comment\\\" )\\n\"\n+            \"sendmany \\\"fromaccount\\\" {\\\"address\\\":amount,...} ( minconf \\\"comment\\\" {\\\"address\\\":true,...} )\\n\"\n             \"\\nSend multiple times. Amounts are double-precision floating point numbers.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n@@ -862,6 +872,14 @@ Value sendmany(const Array& params, bool fHelp)\n             \"    }\\n\"\n             \"3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\\n\"\n             \"4. \\\"comment\\\"             (string, optional) A comment\\n\"\n+            \"5. subtractfeefromamount   (string, optional) A json object with addresses and booleans.\\n\"\n+            \"                           The fee will be equally deducted from the amount of each selected address.\\n\"\n+            \"                           Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+            \"                           Default for each address is false. If no addresses are specified here, the sender pays the fee.\\n\"\n+            \"    {\\n\"\n+            \"      \\\"address\\\":true     (boolean) Subtract fee from this address\\n\"\n+            \"      ,...\\n\"\n+            \"    }\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"          (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n             \"                                    the number of addresses.\\n\"\n@@ -870,6 +888,8 @@ Value sendmany(const Array& params, bool fHelp)\n             + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n             + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n+            \"\\nSend two amounts to two different addresses, subtract fee from amount:\\n\"\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":true,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":true}\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n             + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n@@ -887,8 +907,12 @@ Value sendmany(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"comment\"] = params[3].get_str();\n \n+    Object subtractFeeFromAmount;\n+    if (params.size() > 4)\n+        subtractFeeFromAmount = params[4].get_obj();\n+\n     set<CBitcoinAddress> setAddress;\n-    vector<pair<CScript, CAmount> > vecSend;\n+    vector<CRecipient> vecSend;\n \n     CAmount totalAmount = 0;\n     BOOST_FOREACH(const Pair& s, sendTo)\n@@ -905,7 +929,13 @@ Value sendmany(const Array& params, bool fHelp)\n         CAmount nAmount = AmountFromValue(s.value_);\n         totalAmount += nAmount;\n \n-        vecSend.push_back(make_pair(scriptPubKey, nAmount));\n+        bool fSubtractFeeFromAmount = false;\n+        BOOST_FOREACH(const Pair& s2, subtractFeeFromAmount)\n+            if (s2.name_ == s.name_ && s2.value_.get_bool() == true)\n+                fSubtractFeeFromAmount = true;\n+\n+        CRecipient recipient = {scriptPubKey, nAmount, fSubtractFeeFromAmount};\n+        vecSend.push_back(recipient);\n     }\n \n     EnsureWalletIsUnlocked();\n@@ -918,8 +948,9 @@ Value sendmany(const Array& params, bool fHelp)\n     // Send\n     CReserveKey keyChange(pwalletMain);\n     CAmount nFeeRequired = 0;\n+    int nChangePosRet = -1;\n     string strFailReason;\n-    bool fCreated = pwalletMain->CreateTransaction(vecSend, wtx, keyChange, nFeeRequired, strFailReason);\n+    bool fCreated = pwalletMain->CreateTransaction(vecSend, wtx, keyChange, nFeeRequired, nChangePosRet, strFailReason);\n     if (!fCreated)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, strFailReason);\n     if (!pwalletMain->CommitTransaction(wtx, keyChange))"
      },
      {
        "sha": "9dfd34de9f4310adc78a75361317fafa7778f6d3",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 65,
        "deletions": 22,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -1549,21 +1549,22 @@ bool CWallet::SelectCoins(const CAmount& nTargetValue, set<pair<const CWalletTx*\n             (bSpendZeroConfChange && SelectCoinsMinConf(nTargetValue, 0, 1, vCoins, setCoinsRet, nValueRet)));\n }\n \n-\n-\n-\n-bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl* coinControl)\n+bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend,\n+                                CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, const CCoinControl* coinControl)\n {\n     CAmount nValue = 0;\n-    BOOST_FOREACH (const PAIRTYPE(CScript, CAmount)& s, vecSend)\n+    unsigned int nSubtractFeeFromAmount = 0;\n+    BOOST_FOREACH (const CRecipient& recipient, vecSend)\n     {\n-        if (nValue < 0)\n+        if (nValue < 0 || recipient.nAmount < 0)\n         {\n             strFailReason = _(\"Transaction amounts must be positive\");\n             return false;\n         }\n-        nValue += s.second;\n+        nValue += recipient.nAmount;\n+\n+        if (recipient.fSubtractFeeFromAmount)\n+            nSubtractFeeFromAmount++;\n     }\n     if (vecSend.empty() || nValue < 0)\n     {\n@@ -1606,16 +1607,40 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                 txNew.vin.clear();\n                 txNew.vout.clear();\n                 wtxNew.fFromMe = true;\n+                nChangePosRet = -1;\n+                bool fFirst = true;\n \n-                CAmount nTotalValue = nValue + nFeeRet;\n+                CAmount nTotalValue = nValue;\n+                if (nSubtractFeeFromAmount == 0)\n+                    nTotalValue += nFeeRet;\n                 double dPriority = 0;\n                 // vouts to the payees\n-                BOOST_FOREACH (const PAIRTYPE(CScript, CAmount)& s, vecSend)\n+                BOOST_FOREACH (const CRecipient& recipient, vecSend)\n                 {\n-                    CTxOut txout(s.second, s.first);\n+                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                    if (recipient.fSubtractFeeFromAmount)\n+                    {\n+                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n+\n+                        if (fFirst) // first receiver pays the remainder not divisible by output count\n+                        {\n+                            fFirst = false;\n+                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n+                        }\n+                    }\n+\n                     if (txout.IsDust(::minRelayTxFee))\n                     {\n-                        strFailReason = _(\"Transaction amount too small\");\n+                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n+                        {\n+                            if (txout.nValue < 0)\n+                                strFailReason = _(\"The transaction amount is too small to pay the fee\");\n+                            else\n+                                strFailReason = _(\"The transaction amount is too small to send after the fee has been deducted\");\n+                        }\n+                        else\n+                            strFailReason = _(\"Transaction amount too small\");\n                         return false;\n                     }\n                     txNew.vout.push_back(txout);\n@@ -1642,7 +1667,9 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                     dPriority += (double)nCredit * age;\n                 }\n \n-                CAmount nChange = nValueIn - nValue - nFeeRet;\n+                CAmount nChange = nValueIn - nValue;\n+                if (nSubtractFeeFromAmount == 0)\n+                    nChange -= nFeeRet;\n \n                 if (nChange > 0)\n                 {\n@@ -1676,6 +1703,28 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n \n                     CTxOut newTxOut(nChange, scriptChange);\n \n+                    // We do not move dust-change to fees, because the sender would end up paying more than requested.\n+                    // This would be against the purpose of the all-inclusive feature.\n+                    // So instead we raise the change and deduct from the recipient.\n+                    if (nSubtractFeeFromAmount > 0 && newTxOut.IsDust(::minRelayTxFee))\n+                    {\n+                        CAmount nDust = newTxOut.GetDustThreshold(::minRelayTxFee) - newTxOut.nValue;\n+                        newTxOut.nValue += nDust; // raise change until no more dust\n+                        for (unsigned int i = 0; i < vecSend.size(); i++) // subtract from first recipient\n+                        {\n+                            if (vecSend[i].fSubtractFeeFromAmount)\n+                            {\n+                                txNew.vout[i].nValue -= nDust;\n+                                if (txNew.vout[i].IsDust(::minRelayTxFee))\n+                                {\n+                                    strFailReason = _(\"The transaction amount is too small to send after the fee has been deducted\");\n+                                    return false;\n+                                }\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n                     if (newTxOut.IsDust(::minRelayTxFee))\n@@ -1686,7 +1735,8 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                     else\n                     {\n                         // Insert change txn at random position:\n-                        vector<CTxOut>::iterator position = txNew.vout.begin()+GetRandInt(txNew.vout.size()+1);\n+                        nChangePosRet = GetRandInt(txNew.vout.size()+1);\n+                        vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosRet;\n                         txNew.vout.insert(position, newTxOut);\n                     }\n                 }\n@@ -1755,15 +1805,8 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n             }\n         }\n     }\n-    return true;\n-}\n \n-bool CWallet::CreateTransaction(CScript scriptPubKey, const CAmount& nValue,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl* coinControl)\n-{\n-    vector< pair<CScript, CAmount> > vecSend;\n-    vecSend.push_back(make_pair(scriptPubKey, nValue));\n-    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, strFailReason, coinControl);\n+    return true;\n }\n \n /**"
      },
      {
        "sha": "a5a2558f94bb5f2b61b287b44fd98cca6f8f8897",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/292623adf59edea52b2927b3d67fd2ff7f997882/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/292623adf59edea52b2927b3d67fd2ff7f997882/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=292623adf59edea52b2927b3d67fd2ff7f997882",
        "patch": "@@ -103,6 +103,12 @@ class CAddressBookData\n     StringMap destdata;\n };\n \n+struct CRecipient\n+{\n+    CScript scriptPubKey;\n+    CAmount nAmount;\n+    bool fSubtractFeeFromAmount;\n+};\n \n typedef std::map<std::string, std::string> mapValue_t;\n \n@@ -611,10 +617,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetWatchOnlyBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n-    bool CreateTransaction(const std::vector<std::pair<CScript, CAmount> >& vecSend,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n-    bool CreateTransaction(CScript scriptPubKey, const CAmount& nValue,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n+    bool CreateTransaction(const std::vector<CRecipient>& vecSend,\n+                           CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     static CFeeRate minTxFee;"
      }
    ]
  },
  {
    "sha": "40a757331af84135e9c451ebe490b5a87c780944",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGE3NTczMzFhZjg0MTM1ZTljNDUxZWJlNDkwYjVhODdjNzgwOTQ0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-03-05T13:30:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-13T10:04:25Z"
      },
      "message": "rpcwallet/sendmany: Just take an array of addresses to subtract fees from, rather than an Object with all values being identical",
      "tree": {
        "sha": "87d25eae244996f4eb69f5f521d6c2cd2d80908c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87d25eae244996f4eb69f5f521d6c2cd2d80908c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40a757331af84135e9c451ebe490b5a87c780944",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40a757331af84135e9c451ebe490b5a87c780944",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40a757331af84135e9c451ebe490b5a87c780944",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40a757331af84135e9c451ebe490b5a87c780944/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "292623adf59edea52b2927b3d67fd2ff7f997882",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/292623adf59edea52b2927b3d67fd2ff7f997882",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/292623adf59edea52b2927b3d67fd2ff7f997882"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "5502b0b261dfd5e115e04ff740c4898bb3a59420",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40a757331af84135e9c451ebe490b5a87c780944/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40a757331af84135e9c451ebe490b5a87c780944/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=40a757331af84135e9c451ebe490b5a87c780944",
        "patch": "@@ -860,7 +860,7 @@ Value sendmany(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 5)\n         throw runtime_error(\n-            \"sendmany \\\"fromaccount\\\" {\\\"address\\\":amount,...} ( minconf \\\"comment\\\" {\\\"address\\\":true,...} )\\n\"\n+            \"sendmany \\\"fromaccount\\\" {\\\"address\\\":amount,...} ( minconf \\\"comment\\\" [\\\"address\\\",...] )\\n\"\n             \"\\nSend multiple times. Amounts are double-precision floating point numbers.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n@@ -872,14 +872,14 @@ Value sendmany(const Array& params, bool fHelp)\n             \"    }\\n\"\n             \"3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\\n\"\n             \"4. \\\"comment\\\"             (string, optional) A comment\\n\"\n-            \"5. subtractfeefromamount   (string, optional) A json object with addresses and booleans.\\n\"\n+            \"5. subtractfeefromamount   (string, optional) A json array with addresses.\\n\"\n             \"                           The fee will be equally deducted from the amount of each selected address.\\n\"\n             \"                           Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n-            \"                           Default for each address is false. If no addresses are specified here, the sender pays the fee.\\n\"\n-            \"    {\\n\"\n-            \"      \\\"address\\\":true     (boolean) Subtract fee from this address\\n\"\n+            \"                           If no addresses are specified here, the sender pays the fee.\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"            (string) Subtract fee from this address\\n\"\n             \"      ,...\\n\"\n-            \"    }\\n\"\n+            \"    ]\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"          (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n             \"                                    the number of addresses.\\n\"\n@@ -889,7 +889,7 @@ Value sendmany(const Array& params, bool fHelp)\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n             + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n             \"\\nSend two amounts to two different addresses, subtract fee from amount:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":true,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":true}\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"[\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\",\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\"]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n             + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n@@ -907,9 +907,9 @@ Value sendmany(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"comment\"] = params[3].get_str();\n \n-    Object subtractFeeFromAmount;\n+    Array subtractFeeFromAmount;\n     if (params.size() > 4)\n-        subtractFeeFromAmount = params[4].get_obj();\n+        subtractFeeFromAmount = params[4].get_array();\n \n     set<CBitcoinAddress> setAddress;\n     vector<CRecipient> vecSend;\n@@ -930,8 +930,8 @@ Value sendmany(const Array& params, bool fHelp)\n         totalAmount += nAmount;\n \n         bool fSubtractFeeFromAmount = false;\n-        BOOST_FOREACH(const Pair& s2, subtractFeeFromAmount)\n-            if (s2.name_ == s.name_ && s2.value_.get_bool() == true)\n+        BOOST_FOREACH(const Value& addr, subtractFeeFromAmount)\n+            if (addr.get_str() == s.name_)\n                 fSubtractFeeFromAmount = true;\n \n         CRecipient recipient = {scriptPubKey, nAmount, fSubtractFeeFromAmount};"
      }
    ]
  },
  {
    "sha": "1d9b378c3071293a31a3b4d1845d9626f10da432",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDliMzc4YzMwNzEyOTNhMzFhM2I0ZDE4NDVkOTYyNmYxMGRhNDMy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-03-05T13:59:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-03-13T10:04:25Z"
      },
      "message": "qa/rpc-tests/wallet: Tests for sendmany",
      "tree": {
        "sha": "dac559bc306b67adf8358e498532e157de255019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dac559bc306b67adf8358e498532e157de255019"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d9b378c3071293a31a3b4d1845d9626f10da432",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9b378c3071293a31a3b4d1845d9626f10da432",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d9b378c3071293a31a3b4d1845d9626f10da432",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9b378c3071293a31a3b4d1845d9626f10da432/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40a757331af84135e9c451ebe490b5a87c780944",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40a757331af84135e9c451ebe490b5a87c780944",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40a757331af84135e9c451ebe490b5a87c780944"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 16,
      "deletions": 2
    },
    "files": [
      {
        "sha": "dc4e0f77bd4b0b6b323a1d52df87169537130f32",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d9b378c3071293a31a3b4d1845d9626f10da432/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d9b378c3071293a31a3b4d1845d9626f10da432/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=1d9b378c3071293a31a3b4d1845d9626f10da432",
        "patch": "@@ -102,7 +102,7 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 100)\n         assert_equal(self.nodes[2].getbalance(\"from1\"), 100-21)\n \n-        # Send 10 XBT normal\n+        # Send 10 BTC normal\n         address = self.nodes[0].getnewaddress(\"test\")\n         self.nodes[2].settxfee(Decimal('0.001'))\n         txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", False)\n@@ -111,12 +111,26 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), Decimal('89.99900000'))\n         assert_equal(self.nodes[0].getbalance(), Decimal('10.00000000'))\n \n-        # Send 10 XBT with subtract fee from amount\n+        # Send 10 BTC with subtract fee from amount\n         txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", True)\n         self.nodes[2].setgenerate(True, 1)\n         self.sync_all()\n         assert_equal(self.nodes[2].getbalance(), Decimal('79.99900000'))\n         assert_equal(self.nodes[0].getbalance(), Decimal('19.99900000'))\n \n+        # Sendmany 10 BTC\n+        txid = self.nodes[2].sendmany('from1', {address: 10}, 0, \"\", [])\n+        self.nodes[2].setgenerate(True, 1)\n+        self.sync_all()\n+        assert_equal(self.nodes[2].getbalance(), Decimal('69.99800000'))\n+        assert_equal(self.nodes[0].getbalance(), Decimal('29.99900000'))\n+\n+        # Sendmany 10 BTC with subtract fee from amount\n+        txid = self.nodes[2].sendmany('from1', {address: 10}, 0, \"\", [address])\n+        self.nodes[2].setgenerate(True, 1)\n+        self.sync_all()\n+        assert_equal(self.nodes[2].getbalance(), Decimal('59.99800000'))\n+        assert_equal(self.nodes[0].getbalance(), Decimal('39.99800000'))\n+\n if __name__ == '__main__':\n     WalletTest ().main ()"
      }
    ]
  }
]