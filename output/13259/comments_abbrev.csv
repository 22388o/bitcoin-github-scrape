Empact,2018-05-17T07:47:32Z,"This is a different change but for simplification IMO there's room for a `HasData()` or similar method on `CBlockIndex`, in place of `->nStatus & BLOCK_HAVE_DATA`. There'd be some ~30 callers.",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389776424,389776424,
kallewoof,2018-05-17T07:53:46Z,"Not sure `pindex->nStatus & BLOCK_HAVE_DATA` is obscure enough to warrant a new method, but if it's inline it might be okay, yeah..",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389778084,389778084,
jonasschnelli,2018-05-17T07:55:39Z,Unsure. I'm worries about the readability of the code as well as undetected `nullptr` accesses in future implementations.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389778543,389778543,
kallewoof,2018-05-17T08:21:18Z,"@jonasschnelli The code that is replaced has to do that check already (null block index), so not sure what the concern is.\n\nAlso, I think this *helps* with readability. I think the ""is this block pruned? Oh let's just throw in a `(fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)` and check"" is a lot more error prone that ""oh let's just throw in a `BLOCK_PRUNED(",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389785295,389785295,
laanwj,2018-05-17T10:18:08Z,"If you insist on factoring this out, I'd prefer an inline function instead of a macro. Macros are mostly an ugly C legacy (and have some well-known issues, such as that `pblockindex` is evaluated multiple times).",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389818574,389818574,
kallewoof,2018-05-17T10:55:10Z,"I'm not insisting anything, but I think it would help readability since the copy-pasted if case is rather hairy.\n\nReplaced macro with an inline method in `CBlockIndex`.",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389827073,389827073,
practicalswift,2018-05-17T11:03:52Z,Concept ACK: `IsPruned()` is better,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389829038,389829038,
Empact,2018-05-17T16:12:20Z,"Concept ACK. I would leave the fHavePruned check at the call sites though for separation of concerns.\nLooks like he fHavePruned check is a feature flipper / optimization, `IsPruned` should always be false if it is: https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L4500 ",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-389922670,389922670,
kallewoof,2018-05-18T03:38:11Z,@Empact I think it's okay to leave it in. It has very small impact and I think it's fine even if people check `fHavePruned` externally as well.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-390084764,390084764,
GreatSock,2018-05-19T12:51:22Z,utACK https://github.com/bitcoin/bitcoin/pull/13259/commits/a0e2648534baa338989a628ff29d2937098f5be1,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-390402937,390402937,
promag,2018-05-19T14:19:49Z,utACK a0e2648.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-390408142,390408142,
Empact,2018-05-21T23:55:48Z,utACK dff0cf5,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-390820120,390820120,
laanwj,2018-05-29T18:29:24Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-392886626,392886626,
kallewoof,2018-05-30T03:24:14Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-393018299,393018299,
Empact,2018-06-08T07:57:21Z,nit: `GetBlockChecked` and `IsBlockPruned` should probably both assert on the index not being null.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-395681023,395681023,
Empact,2018-06-08T08:17:21Z,Also occurs to me that `GetBlockChecked` and the functionality in `rest_block` are identical except for the error handling. You could make `GetBlockChecked` suitable for both by returning the error in the form of ~~`std::optional<std::string>`~~`boost::optional<std::string>` (because C++11). That would remove the need for this function because there would be no reuse.,https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-395686347,395686347,
kallewoof,2018-06-08T10:42:11Z,"That sounds like a good idea, but it means having to make `GetBlockChecked` public, and requires changing it around. There's also no unified way of saying what the error is, in case there are non-`NOT_FOUND` type errors in the future.",https://github.com/bitcoin/bitcoin/pull/13259#issuecomment-395723188,395723188,
Empact,2018-05-17T07:33:11Z,Missing paren.,https://github.com/bitcoin/bitcoin/pull/13259#discussion_r188862448,188862448,src/rest.cpp
kallewoof,2018-05-17T07:34:19Z,Heh. Fixed.,https://github.com/bitcoin/bitcoin/pull/13259#discussion_r188862715,188862715,src/rest.cpp
sipa,2018-05-19T18:56:03Z,"Adding this to the `chain` module introduces a cyclic dependency between `chain` and `validation` (as fHavePruned is defined there). There's no need for this to be a `CBlockIndex` member as it only uses public fields, so I would suggest making it a function in `validation` instead.",https://github.com/bitcoin/bitcoin/pull/13259#discussion_r189442183,189442183,src/chain.h
kallewoof,2018-05-20T03:48:55Z,Good point. I moved it (back) to `validation.h`.,https://github.com/bitcoin/bitcoin/pull/13259#discussion_r189450463,189450463,src/chain.h
promag,2018-05-21T15:40:11Z,"nit, `{` on newline.",https://github.com/bitcoin/bitcoin/pull/13259#discussion_r189627946,189627946,src/validation.h
kallewoof,2018-05-21T23:32:20Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/13259#discussion_r189741702,189741702,src/validation.h
