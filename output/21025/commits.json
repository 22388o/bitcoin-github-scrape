[
  {
    "sha": "20677ffa22e93e7408daadbd15d433f1e42faa86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDY3N2ZmYTIyZTkzZTc0MDhkYWFkYmQxNWQ0MzNmMWU0MmZhYTg2",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-01-27T21:20:59Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-02T03:09:03Z"
      },
      "message": "validation: Guard all chainstates with cs_main\n\nSince these chainstates are:\n\n1. Also vulnerable to the race condition described in the previous\n   commit\n2. Documented as having similar semantics as m_active_chainstate\n\nwe should also protect them with ::cs_main.",
      "tree": {
        "sha": "90024cf871094423c026119029a76e545dcdb06b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90024cf871094423c026119029a76e545dcdb06b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20677ffa22e93e7408daadbd15d433f1e42faa86",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20677ffa22e93e7408daadbd15d433f1e42faa86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20677ffa22e93e7408daadbd15d433f1e42faa86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20677ffa22e93e7408daadbd15d433f1e42faa86/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f72d80b07af8ecbb2f9df1e87344eb465186f19d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f72d80b07af8ecbb2f9df1e87344eb465186f19d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f72d80b07af8ecbb2f9df1e87344eb465186f19d"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8f7d36bfd3ffb4072365d15d407371fac6a4060f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20677ffa22e93e7408daadbd15d433f1e42faa86/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20677ffa22e93e7408daadbd15d433f1e42faa86/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=20677ffa22e93e7408daadbd15d433f1e42faa86",
        "patch": "@@ -5159,7 +5159,7 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n }\n \n Optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n-    LOCK(::cs_main);  // for m_active_chainstate access\n+    LOCK(::cs_main);\n     if (m_active_chainstate != nullptr) {\n         // If a snapshot chainstate exists, it will always be our active.\n         return m_active_chainstate->m_from_snapshot_blockhash;\n@@ -5169,6 +5169,7 @@ Optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n \n std::vector<CChainState*> ChainstateManager::GetAll()\n {\n+    LOCK(::cs_main);\n     std::vector<CChainState*> out;\n \n     if (!IsSnapshotValidated() && m_ibd_chainstate) {\n@@ -5213,11 +5214,13 @@ CChainState& ChainstateManager::ActiveChainstate() const\n \n bool ChainstateManager::IsSnapshotActive() const\n {\n-    return m_snapshot_chainstate && WITH_LOCK(::cs_main, return m_active_chainstate) == m_snapshot_chainstate.get();\n+    LOCK(::cs_main);\n+    return m_snapshot_chainstate && m_active_chainstate == m_snapshot_chainstate.get();\n }\n \n CChainState& ChainstateManager::ValidatedChainstate() const\n {\n+    LOCK(::cs_main);\n     if (m_snapshot_chainstate && IsSnapshotValidated()) {\n         return *m_snapshot_chainstate.get();\n     }\n@@ -5227,6 +5230,7 @@ CChainState& ChainstateManager::ValidatedChainstate() const\n \n bool ChainstateManager::IsBackgroundIBD(CChainState* chainstate) const\n {\n+    LOCK(::cs_main);\n     return (m_snapshot_chainstate && chainstate == m_ibd_chainstate.get());\n }\n \n@@ -5242,12 +5246,10 @@ void ChainstateManager::Unload()\n \n void ChainstateManager::Reset()\n {\n+    LOCK(::cs_main);\n     m_ibd_chainstate.reset();\n     m_snapshot_chainstate.reset();\n-    {\n-        LOCK(::cs_main);\n-        m_active_chainstate = nullptr;\n-    }\n+    m_active_chainstate = nullptr;\n     m_snapshot_validated = false;\n }\n "
      },
      {
        "sha": "e85c7bbf1ad3d00ae4af9626cf87675ee51f9ce7",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20677ffa22e93e7408daadbd15d433f1e42faa86/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20677ffa22e93e7408daadbd15d433f1e42faa86/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=20677ffa22e93e7408daadbd15d433f1e42faa86",
        "patch": "@@ -802,7 +802,7 @@ class ChainstateManager\n     //! This is especially important when, e.g., calling ActivateBestChain()\n     //! on all chainstates because we are not able to hold ::cs_main going into\n     //! that call.\n-    std::unique_ptr<CChainState> m_ibd_chainstate;\n+    std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(::cs_main);\n \n     //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n     //! non-null, it is always our active chainstate.\n@@ -815,7 +815,7 @@ class ChainstateManager\n     //! This is especially important when, e.g., calling ActivateBestChain()\n     //! on all chainstates because we are not able to hold ::cs_main going into\n     //! that call.\n-    std::unique_ptr<CChainState> m_snapshot_chainstate;\n+    std::unique_ptr<CChainState> m_snapshot_chainstate GUARDED_BY(::cs_main);\n \n     //! Points to either the ibd or snapshot chainstate; indicates our\n     //! most-work chain."
      }
    ]
  }
]