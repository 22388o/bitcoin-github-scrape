[
  {
    "sha": "92d3dd973c849adbce80136d91a4f4bc05eb1e40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MmQzZGQ5NzNjODQ5YWRiY2U4MDEzNmQ5MWE0ZjRiYzA1ZWIxZTQw",
    "commit": {
      "author": {
        "name": "nkostoulas",
        "email": "nkostoulas@gmail.com",
        "date": "2019-07-08T21:57:32Z"
      },
      "committer": {
        "name": "nkostoulas",
        "email": "nkostoulas@gmail.com",
        "date": "2019-07-08T21:57:32Z"
      },
      "message": "Implement modulo for arith_uint256",
      "tree": {
        "sha": "db84a5be4785352a7be2066557f561bd037f515c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db84a5be4785352a7be2066557f561bd037f515c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92d3dd973c849adbce80136d91a4f4bc05eb1e40",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3IuBR3rydcfK3KmKiVyjjvxURg8FAl0jvEwACgkQiVyjjvxU\nRg+9yxAAr2vXqJ0R+KhQZvDa9KEQ1mocIyEiOhrO+8bZLdTroeYQeTr1ONfoIk1m\nrPyjB0bLTUJXz0H2wRLUS0QwQpnFYtw6sKPVJD7Tn9wqGIEgbFwoDCcHdF6Iq7pO\nNNBI4A0JvJC+79sgN4SYn30ZiXyZwX0b5fBmyHqZgIaPthSi2U/m4jIGnSRfPcS4\nlkRa33wBQD1Xkm+qt/FbMwyQYXbuEahNj4JHC6HzgeY/n1tkbHWAEHCYt9A74Vfc\nonAoQxFOJLrCo2ub88glHvvj7ypiUgoIqexbzDWirrDM8CINeK9hgpanU47o/UtI\nD+JFn2nA24TIJiqBRfGRCgGiywg8Yzr145zYJIRBWr2KWWDuxN5JwiA3AQDOZYeM\nsPM2YhmeSI1l8coxEKEuwnlAAckSwq68A2Dslek+45iiOkvDSQLx22Lh8O177gGk\nZk919FgGeUgfekY6XuYfzsAK6D+kk6V0xKTUIVahPVzTQHz47CZqV475hkRLFIHZ\naecuyU00TQhEt/9UPu0S9lGgK2yE2i7170b6u5Tdkhfh74lL4Go5DMvwUlUg/cWx\nKSnOhh+np6aRl2VrVeK/N/fOJQ3GgcGM0RSRT0loXsyGWZABKAepTeu7n0r3W+vb\nxZbquTNKn+7L5Djyxba0CE/sNTLFuVHHCjEZA3uuvaDCJcowEBM=\n=VZ7m\n-----END PGP SIGNATURE-----",
        "payload": "tree db84a5be4785352a7be2066557f561bd037f515c\nparent c799976c86e2d65f129d106724fbefbf665d63d4\nauthor nkostoulas <nkostoulas@gmail.com> 1562623052 +0100\ncommitter nkostoulas <nkostoulas@gmail.com> 1562623052 +0100\n\nImplement modulo for arith_uint256\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92d3dd973c849adbce80136d91a4f4bc05eb1e40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92d3dd973c849adbce80136d91a4f4bc05eb1e40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92d3dd973c849adbce80136d91a4f4bc05eb1e40/comments",
    "author": {
      "login": "nkostoulas",
      "id": 14759579,
      "node_id": "MDQ6VXNlcjE0NzU5NTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14759579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nkostoulas",
      "html_url": "https://github.com/nkostoulas",
      "followers_url": "https://api.github.com/users/nkostoulas/followers",
      "following_url": "https://api.github.com/users/nkostoulas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nkostoulas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nkostoulas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nkostoulas/subscriptions",
      "organizations_url": "https://api.github.com/users/nkostoulas/orgs",
      "repos_url": "https://api.github.com/users/nkostoulas/repos",
      "events_url": "https://api.github.com/users/nkostoulas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nkostoulas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "nkostoulas",
      "id": 14759579,
      "node_id": "MDQ6VXNlcjE0NzU5NTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14759579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nkostoulas",
      "html_url": "https://github.com/nkostoulas",
      "followers_url": "https://api.github.com/users/nkostoulas/followers",
      "following_url": "https://api.github.com/users/nkostoulas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nkostoulas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nkostoulas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nkostoulas/subscriptions",
      "organizations_url": "https://api.github.com/users/nkostoulas/orgs",
      "repos_url": "https://api.github.com/users/nkostoulas/repos",
      "events_url": "https://api.github.com/users/nkostoulas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nkostoulas/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c799976c86e2d65f129d106724fbefbf665d63d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c799976c86e2d65f129d106724fbefbf665d63d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c799976c86e2d65f129d106724fbefbf665d63d4"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 39,
      "deletions": 0
    },
    "files": [
      {
        "sha": "93580e282d2f61550e1164c215d8dba20e1a2d36",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92d3dd973c849adbce80136d91a4f4bc05eb1e40/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92d3dd973c849adbce80136d91a4f4bc05eb1e40/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=92d3dd973c849adbce80136d91a4f4bc05eb1e40",
        "patch": "@@ -107,6 +107,31 @@ base_uint<BITS>& base_uint<BITS>::operator/=(const base_uint& b)\n     return *this;\n }\n \n+template <unsigned int BITS>\n+base_uint<BITS>& base_uint<BITS>::operator%=(const base_uint& b)\n+{\n+    base_uint<BITS> div = b;     // make a copy, so we can shift.\n+    base_uint<BITS> num = *this; // make a copy, so we can subtract.\n+    int num_bits = num.bits();\n+    int div_bits = div.bits();\n+    if (div_bits == 0)\n+        throw uint_error(\"Division by zero\");\n+    if (div_bits > num_bits) // remainder is the same number\n+        return *this;\n+    int shift = num_bits - div_bits;\n+    div <<= shift; // shift so that div and num align.\n+    while (shift >= 0) {\n+        if (num >= div) {\n+            num -= div;\n+        }\n+        div >>= 1; // shift back.\n+        shift--;\n+    }\n+    // num now contains the remainder of the division.\n+    *this = num;\n+    return *this;\n+}\n+\n template <unsigned int BITS>\n int base_uint<BITS>::CompareTo(const base_uint<BITS>& b) const\n {\n@@ -191,6 +216,7 @@ template base_uint<256>& base_uint<256>::operator>>=(unsigned int);\n template base_uint<256>& base_uint<256>::operator*=(uint32_t b32);\n template base_uint<256>& base_uint<256>::operator*=(const base_uint<256>& b);\n template base_uint<256>& base_uint<256>::operator/=(const base_uint<256>& b);\n+template base_uint<256>& base_uint<256>::operator%=(const base_uint<256>& b);\n template int base_uint<256>::CompareTo(const base_uint<256>&) const;\n template bool base_uint<256>::EqualTo(uint64_t) const;\n template double base_uint<256>::getdouble() const;"
      },
      {
        "sha": "9e0d5ad2b649dd4eb73fc541a8b8ab5a933d0766",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92d3dd973c849adbce80136d91a4f4bc05eb1e40/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92d3dd973c849adbce80136d91a4f4bc05eb1e40/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=92d3dd973c849adbce80136d91a4f4bc05eb1e40",
        "patch": "@@ -168,6 +168,7 @@ class base_uint\n     base_uint& operator*=(uint32_t b32);\n     base_uint& operator*=(const base_uint& b);\n     base_uint& operator/=(const base_uint& b);\n+    base_uint& operator%=(const base_uint& b);\n \n     base_uint& operator++()\n     {\n@@ -210,6 +211,7 @@ class base_uint\n     friend inline const base_uint operator-(const base_uint& a, const base_uint& b) { return base_uint(a) -= b; }\n     friend inline const base_uint operator*(const base_uint& a, const base_uint& b) { return base_uint(a) *= b; }\n     friend inline const base_uint operator/(const base_uint& a, const base_uint& b) { return base_uint(a) /= b; }\n+    friend inline const base_uint operator%(const base_uint& a, const base_uint& b) { return base_uint(a) %= b; }\n     friend inline const base_uint operator|(const base_uint& a, const base_uint& b) { return base_uint(a) |= b; }\n     friend inline const base_uint operator&(const base_uint& a, const base_uint& b) { return base_uint(a) &= b; }\n     friend inline const base_uint operator^(const base_uint& a, const base_uint& b) { return base_uint(a) ^= b; }"
      },
      {
        "sha": "e5930fd899419d68129149960450a285fb24bb18",
        "filename": "src/test/arith_uint256_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92d3dd973c849adbce80136d91a4f4bc05eb1e40/src/test/arith_uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92d3dd973c849adbce80136d91a4f4bc05eb1e40/src/test/arith_uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/arith_uint256_tests.cpp?ref=92d3dd973c849adbce80136d91a4f4bc05eb1e40",
        "patch": "@@ -360,6 +360,17 @@ BOOST_AUTO_TEST_CASE( divide )\n     BOOST_CHECK_THROW(R2L / ZeroL, uint_error);\n }\n \n+BOOST_AUTO_TEST_CASE ( modulo )\n+{\n+    arith_uint256 M1L(\"2540BE400\"); // 10^10\n+    BOOST_CHECK_EQUAL((R1L % M1L).ToString(), \"00000000000000000000000000000000000000000000000000000002527ad69c\");\n+    arith_uint256 X1L(\"517DA02C00\");\n+    BOOST_CHECK_EQUAL((X1L % M1L).ToString(), \"0000000000000000000000000000000000000000000000000000000000000000\");\n+    arith_uint256 X2L(\"517DA02C01\");\n+    BOOST_CHECK_EQUAL((X2L % M1L).ToString(), \"0000000000000000000000000000000000000000000000000000000000000001\");\n+    arith_uint256 X3L(\"13A529192F9\");\n+    BOOST_CHECK_EQUAL((X3L % M1L).ToString(), \"00000000000000000000000000000000000000000000000000000000004c56f9\");\n+}\n \n static bool almostEqual(double d1, double d2)\n {"
      }
    ]
  }
]