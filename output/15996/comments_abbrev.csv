instagibbs,2019-05-09 20:52:19,just noting that actual removal of the RPC call will likely call for some additional test-rewriting since most tests are using the totalFee argument for high-precision transaction malleation. ,https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491061893,491061893,
DrahtBot,2019-05-09 21:04:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15911](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15911.html) (Use wallet RBF default for walletcreatefund",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491065914,491065914,
jonatack,2019-05-13 09:08:11,Wrote a test for the deprecation itself. Feel free to steal/use/adapt.,https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491740946,491740946,
instagibbs,2019-05-13 13:38:56,"@jonatack I took the deprecation test itself, comment changes seem somewhat unrelated so left those out of this PR in favor of your follow-up PR. Thanks!",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491826134,491826134,
jonatack,2019-05-13 13:51:00,@instagibbs All good. Might update the follow-up to removing totalFee from the bumpfee tests if this gets in.,https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491830589,491830589,
instagibbs,2019-05-13 13:55:35,SGTM! Would appreciate the assist.,https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491832540,491832540,
jonatack,2019-05-13 16:13:38,"> Instead of adding a new test why not update test/functional/wallet_bumpfee.py?\n\nI began by doing that and found that this is cleaner, because for now the bumpfee tests need to use totalFee. Testing the deprecation separately makes sense. I also considered doing it in rpc_deprecated.py but this change only concerns an argument, not the rpc itself. When this is removed entirely it also seems e",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-491888247,491888247,
jnewbery,2019-06-12 15:09:15,">> Instead of adding a new test why not update test/functional/wallet_bumpfee.py?\n\n> When this is removed entirely it also seems easier to just have a separate test file to remove.\n\nI agree. Adding a separate test for this deprecated option makes it very easy to remove when the deprecated option is removed.\n\nACK 59bc35c10386a4a58d7835d0a983fdde10eb2400\n(reviewed code and run function",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501317673,501317673,
etscrivner,2019-06-12 18:48:52,"ACK reviewed code and ran functional tests locally. No manual tests.\n\nOne thing I do worry about with deprecating this is closing off the possibility of clients using alternative fee-rate estimation algorithms or techniques. Are there more details on why we think the value of this argument is questionable?",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501407240,501407240,
instagibbs,2019-06-12 19:11:35,"@etscrivner I think it'd be more worthwhile to allow feerate as an argument instead, since only `confTarget` is allowed right now.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501416487,501416487,
etscrivner,2019-06-12 20:11:23,"@instagibbs Agree, that sounds better than `totalFee` to me.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501436941,501436941,
instagibbs,2019-06-13 13:31:24,"@etscrivner https://github.com/bitcoin/bitcoin/issues/16203 made an issue, if you feel like tackling this as a feature",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501703947,501703947,
jnewbery,2019-06-13 13:37:37,"@instagibbs I think a valid concern could be that a user might want to bump the fee on a descendant transaction of unconfirmed transactions. The aim would be to bring the feerate of the package up to some desired value. Without being able to specify the totalfee on the child, it would be very difficult to target a feerate for the entire package.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501706266,501706266,
instagibbs,2019-06-13 13:50:14,"@jnewbery something to think about sure, but that's an incredibly advances use-case that someone could manually RBF anyways.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501711178,501711178,
jnewbery,2019-06-13 15:55:04,"> that's an incredibly advances use-case\n\nYeah, you're right. For a consumer-facing wallet (which is what Bitcoin Core wallet primarily is), fee-bumping child transactions is quite advanced.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-501763783,501763783,
fridokus,2019-06-18 08:35:06,"ACK 59bc35c10386a4a58d7835d0a983fdde10eb2400\nRan functional tests locally and reviewed code.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-503005466,503005466,
instagibbs,2019-07-11 18:12:30,rebased,https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-510595395,510595395,
MarcoFalke,2019-07-29 13:45:06,"> totalFee argument is of questionable use, and should be removed in favor of feerate-based features.\n\nWhat are those feerate-based features? I couldn't find any in bumpfee. It seems weird to remove a feature that is likely used, without replacement and without mention in the release notes.",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-515997520,515997520,
ezegom,2019-07-30 19:27:57,"> > totalFee argument is of questionable use, and should be removed in favor of feerate-based features.\n> \n> What are those feerate-based features? I couldn't find any in bumpfee. It seems weird to remove a feature that is likely used, without replacement and without mention in the release notes.\n\nCurrently working on this, see : #16492",https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-516559660,516559660,
fanquake,2019-07-31 00:34:19,Release notes being added in #16504,https://github.com/bitcoin/bitcoin/pull/15996#issuecomment-516646748,516646748,
jonatack,2019-05-11 20:33:37,Perhaps separate `totalFee` and `(DEPRECATED)` with a space?,https://github.com/bitcoin/bitcoin/pull/15996#discussion_r283110645,283110645,src/wallet/rpcwallet.cpp
jonatack,2019-05-11 20:33:56,Idem.,https://github.com/bitcoin/bitcoin/pull/15996#discussion_r283110653,283110653,src/wallet/rpcwallet.cpp
jonatack,2019-05-11 20:41:39,"Perhaps display the deprecation similarly to EntryDescriptionString in src/rpc/blockchain.cpp:L387, e.g.:\n\n```cpp\n {""totalFee"", RPCArg::Type::NUM, /* default */ ""fallback to 'confTarget'"", ""Total fee (NOT feerate) to pay, in satoshis (DEPRECATED).\n""\n```",https://github.com/bitcoin/bitcoin/pull/15996#discussion_r283110867,283110867,src/wallet/rpcwallet.cpp
ryanofsky,2019-07-23 19:08:19,"This should not actually be moved from server to util, since it's accessing global state of the RPC server. I'm assuming there were link errors trying to build without this change, but these would be fixed by calling Chain::rpcEnableDeprecated (see below).",https://github.com/bitcoin/bitcoin/pull/15996#discussion_r306485550,306485550,src/rpc/server.cpp
ryanofsky,2019-07-23 19:14:48,"This should call `rpcEnableDeprecated` instead of `IsDeprecatedRPCEnabled` to support wallets running in different processes from the RPC server. The aren't current examples of `rpcEnableDeprecated` in use, but you can see the last one that was removed in b4338c151d4788c33f4b7c54daaf7f94b193a624",https://github.com/bitcoin/bitcoin/pull/15996#discussion_r306488019,306488019,src/wallet/rpcwallet.cpp
instagibbs,2019-07-26 18:10:53,fixed,https://github.com/bitcoin/bitcoin/pull/15996#discussion_r307854405,307854405,src/wallet/rpcwallet.cpp
instagibbs,2019-07-26 18:11:03,reverted,https://github.com/bitcoin/bitcoin/pull/15996#discussion_r307854478,307854478,src/rpc/server.cpp
