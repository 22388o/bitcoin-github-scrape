MarcoFalke,2019-07-25 21:46:03,Fixed linter by adding the false-positive to a whitelist ðŸ˜¬,https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-515226738,515226738,
DrahtBot,2019-07-26 00:13:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16597](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16597.html) ([WIP] Travis: run full test suite on native",https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-515259585,515259585,
Sjors,2019-07-26 18:20:49,"More dead code hits? https://gist.github.com/Sjors/e2704ff54fdc85b2b5833242a1d1e3e3\n\nTests pass on top of #16301.",https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-515552406,515552406,
MarcoFalke,2019-07-26 19:17:04,"> Tests pass on top of #16301 \n\nThanks, was about to test this.",https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-515569157,515569157,
Sjors,2019-08-06 19:09:34,ACK fa2a2bab0ffef281940c5383f2f4528145707ee6,https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-518803721,518803721,
practicalswift,2019-08-07 12:16:01,"@Sjors Regarding your posted gist: according to `lint-python-dead-code.sh` `vulture` should only look at files returned by `git ls-files`. Really weird that it checks `.git/logs/` and `depends/`. Files under these directories should never be returned by `git ls-files`, right?",https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-519070671,519070671,
MarcoFalke,2019-08-14 20:24:54,"> A few nits inline. Also, in commit test: Generate one block for each send in wallet_import_rescan, can you add a motivation to the commit log. I can see what it's doing, but I don't understand why.\n\nAdded a few bullet points why generating a block each makes sense.\n\nThanks for the review @jnewbery. I think I addressed all feedback",https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-521404646,521404646,
MarcoFalke,2019-08-15 12:08:30,"Reworked the whitelist, as requested by @jnewbery ",https://github.com/bitcoin/bitcoin/pull/16465#issuecomment-521619007,521619007,
jnewbery,2019-08-14 16:07:44,Typo introduced: 'Genrate' -> 'Generate',https://github.com/bitcoin/bitcoin/pull/16465#discussion_r313958885,313958885,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 18:36:31,No need to reset the seed here. It should be left as set by the test_framework (where it can be set deterministically).,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314023919,314023919,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 18:38:59,"nit: prefer `round(random.random(), 8)` over string slicing.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314024996,314024996,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 18:46:02,nit: I think `[[]] * self.num_nodes` is slightly clearer (and also matches L154 below),https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314027993,314027993,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 18:52:58,"This will fail if the value to send is too low. Because you set the seed, the 'randomly' picked number will not actually fail here, but if this test is changed (eg to support more address types) it could start failing here. I suggest you but a lower bound on the random amount.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314030923,314030923,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 18:54:36,nit: add a comment here that this refers to P2PKH (P2SH is also a legacy address type),https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314031685,314031685,test/functional/test_framework/address.py
jnewbery,2019-08-14 19:04:48,"Please remove comments with line numbers (which are not stable and will not be updated when those files are changed), and deduplicate this list.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314036079,314036079,test/lint/lint-python-dead-code-whitelist
jnewbery,2019-08-14 19:21:36,":+1: for moving these to one per line. I think you can keep the original `vulture` invocation by making this a list and then running:\n\n`vulture --ignore-names=$(cat lint-python-dead-code-whitelist | tr '\n' ',')` or similar.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314042475,314042475,test/lint/lint-python-dead-code-whitelist
MarcoFalke,2019-08-14 19:55:39,"Can you explain how this is supposed to work? Be reminded that floating point has no fixed number of decimal places.\n\n```\nDecimal(round(random.random(), 8))\nDecimal('0.5843940499999999982350118443719111382961273193359375')\n",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314055014,314055014,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 19:57:22,"sorry, `Decimal(str(round(random.random(), 8)))`",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314055682,314055682,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 19:58:36,"this import is added in the wrong commit. It needs to be added in _test: Replace fragile ""rng"" with call to random()_",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314056180,314056180,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 20:25:12,Fixed,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314066642,314066642,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 20:25:19,I think it wastes less time if we just keep the autogenerated file as is,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314066684,314066684,test/lint/lint-python-dead-code-whitelist
MarcoFalke,2019-08-14 20:25:24,I think it wastes less time if we just keep the autogenerated file as is,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314066721,314066721,test/lint/lint-python-dead-code-whitelist
MarcoFalke,2019-08-14 20:26:03,Added a comment,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314066957,314066957,test/functional/test_framework/address.py
MarcoFalke,2019-08-14 20:26:28,"With ""too low"" you mean ""dust""? Good catch! Fixed.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314067113,314067113,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 20:26:34,Done,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314067157,314067157,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 20:26:51,Changed,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314067263,314067263,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 20:27:12,Good point. I didn't recall this. ,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314067427,314067427,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 20:27:19,fixed typo,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314067480,314067480,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 20:59:23,I don't understand. Why add comments here that will be wrong almost instantly?,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314080459,314080459,test/lint/lint-python-dead-code-whitelist
jnewbery,2019-08-14 21:08:51,"This returns `None` if the random value returned is less than `AMOUNT_DUST`.\n\nWhy not use `random.uniform(AMOUNT_DUST,1)` rather than define this function?",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314084089,314084089,test/functional/wallet_import_rescan.py
jnewbery,2019-08-14 21:09:54,"is changing this to `self.extra_args` necessary? Does that member get used again? (I think not, since the nodes are not restarted)",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314084493,314084493,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 21:13:48,"No, not necessary, but will make the code robust in case a restart is necessary.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314085950,314085950,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 21:23:26,"\n\nSwitched to uniform\n",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314089557,314089557,test/functional/wallet_import_rescan.py
MarcoFalke,2019-08-14 21:25:18,"Only the line number will be wrong. The rest should still be valid and might even be useful. I don't see a reason to manually fix the line number every time this file is autogenerated.\n\nEdit: To obtain such a whitelist automatically, pass --make-whitelist to Vulture.",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314090301,314090301,test/lint/lint-python-dead-code-whitelist
jnewbery,2019-08-14 22:25:57,"I don't get it. Every time a new function that triggers a false positive in vulture is added, this should be regenerated? That'll create a huge diff. How is that supposed to be reviewed?\n\nIn general, I don't think it's good practice to use the output of a tool to generate its own whitelist. The whitelist should be generated (and reviewed) by someone outside the tool declaring that these functi",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314110215,314110215,test/lint/lint-python-dead-code-whitelist
practicalswift,2019-08-15 07:36:08,Won't this run `vulture` on the `lint-python-dead-code-whitelist` file? The intention was to use `lint-python-dead-code-whitelist` to build `--exclude`? :-),https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314202525,314202525,test/lint/lint-python-dead-code.sh
MarcoFalke,2019-08-15 12:08:03,"Ok, reviewed and manually fixed up the output of the tool",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314279697,314279697,test/lint/lint-python-dead-code-whitelist
MarcoFalke,2019-08-15 12:09:25,according to the vulture documentation this is the correct invocation ,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314280041,314280041,test/lint/lint-python-dead-code.sh
practicalswift,2019-08-15 12:30:03,TIL! Thanks!,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314286139,314286139,test/lint/lint-python-dead-code.sh
jnewbery,2019-08-15 14:21:33,nit: sort,https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314329967,314329967,test/lint/lint-python-dead-code-whitelist
MarcoFalke,2019-08-15 14:28:33,"It is sorted, according to `cat ./*whitelist|sort` on my system",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314333331,314333331,test/lint/lint-python-dead-code-whitelist
jnewbery,2019-08-15 14:43:00,"Fascinating:\n\n```\nâ†’ cat test/lint/lint-python-dead-code-whitelist | LC_ALL=en_US.UTF-8 sort\nBadInputOutpointIndex  # unused class (test/functional/data/invalid_txs.py)\n_.carbon_path  # unused attribute (contrib/macdeploy/custom_dsstore.py)\nconnection_lost  # unused function (test/functional/test_framework/mininode.py)\nconnection_made  # unused function (test/functional/test_framework",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314340387,314340387,test/lint/lint-python-dead-code-whitelist
ryanofsky,2019-08-15 17:55:00,"No big deal, but reason it was written the other way is so you could say args[1].append(""something"") without unintentionally adding ""something"" to args[0], [2], [3], and so on. Weirdness of list expressions in python.\n\n",https://github.com/bitcoin/bitcoin/pull/16465#discussion_r314426196,314426196,test/functional/wallet_import_rescan.py
