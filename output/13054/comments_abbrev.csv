jnewbery,2018-04-22T22:23:27Z,"This is the fourth attempt at this (see #9876, #10366 and #11274).\n\nI'm a big concept ACK. Wildcard imports are bad for the reasons you've listed. However, this has been NACKed by other contributors and none of us have yet been successful in getting it merged.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-383417079,383417079,
practicalswift,2018-04-23T06:57:49Z,@jnewbery Thanks for the big concept ACK! One difference with this PR compared to the previous ones is that this makes sure no wildcard imports are re-introduced in the future thanks to the Travis check. So this should hopefully be the last time we have to think about wildcard imports :-),https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-383473591,383473591,
MarcoFalke,2018-04-24T15:45:06Z,"Just as a note: As a work around when writing tests, I replace the import list with a wildcard-star and then run some de-wildcard python script before submitting the pull request.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-383981207,383981207,
practicalswift,2018-04-24T16:27:15Z,@MarcoFalke That's a convenient workflow! What tool do you use? [`dewildcard`](https://github.com/quentinsf/dewildcard)?,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-383995700,383995700,
practicalswift,2018-04-26T07:20:08Z,@ryanofsky @JeremyRubin @jtimon @kallewoof Would you mind reviewing? :-),https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-384539532,384539532,
JeremyRubin,2018-04-27T01:55:44Z,"@practicalswift  I think my comment https://github.com/bitcoin/bitcoin/pull/9876#issuecomment-283165452 still stands, but I have no strong opinion on this.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-384840312,384840312,
practicalswift,2018-05-04T14:12:51Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-386614267,386614267,
kallewoof,2018-05-07T10:28:43Z,"Concept ACK, obviously.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-387024677,387024677,
practicalswift,2018-05-11T06:55:30Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-388277900,388277900,
sipa,2018-05-11T19:18:00Z,"This seems like a sensible policy, though I leave the decision up to people who more often work on the Python code.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-388460543,388460543,
practicalswift,2018-05-12T19:20:10Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-388577018,388577018,
laanwj,2018-05-14T12:41:07Z,"I don't care enough to NACK this, though it annoys me slightly if things that are rejected come up again and again.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-388802592,388802592,
practicalswift,2018-05-14T12:45:17Z,"@laanwj One significant difference with this PR compared to the previous ones is that this makes sure no wildcard imports are ever re-introduced in the future thanks to the Travis check.\n\nSo this should hopefully be the last time any of us has to think about wildcard imports again :-)",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-388803725,388803725,
sdaftuar,2018-05-18T21:58:30Z,"> though it annoys me slightly if things that are rejected come up again and again.\n\nI feel the same way, and I'm still opposed to this idea -- I don't think we should be increasing the effort required for getting tests written and merged.  \n\nMy impression lately (which is admittedly completely unscientific so maybe others have a different impression) is that PRs that include tests seem to",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-390343648,390343648,
kallewoof,2018-05-19T01:14:48Z,"> I feel the same way, and I'm still opposed to this idea -- I don't think we should be increasing the effort required for getting tests written and merged.\n\nIt is not an increase in effort to throw an error.\nThat's like saying our compilers should throw less errors cause the programmers get grumpy. Do you want more programmers who need a more gentle compiler?\n\nTo reiterate the compariso",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-390367862,390367862,
practicalswift,2018-05-19T07:38:42Z,"I see two possible states of the world:\n\n* **State 1 â€“ Travis does not check wildcard imports:** A Python PR introducing wildcard imports is opened. During the review process human reviewers (such as perhaps me, @kallewoof, @jnewbery, @JeremyRubin and @jtimon - who have historically voiced their concern about wildcard imports) will point out that wildcard imports are problematic and discourage",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-390386800,390386800,
ken2812221,2018-05-19T08:57:53Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-390390896,390390896,
sdaftuar,2018-05-19T13:15:57Z,"> During the review process human reviewers (such as perhaps me, @kallewoof, @jnewbery, @JeremyRubin and @jtimon - who have historically voiced their concern about wildcard imports) will point out that wildcard imports are problematic and discouraged.\n\nI will refrain from debating particular style points (so whatever you guys want to do, go nuts).  But as a matter of process, I don't think sty",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-390404254,390404254,
jamesob,2018-05-19T15:15:39Z,"Concept ACK. \n\nAgree with @sdaftuar's point that it isn't fair to make style comments on PRs where the cited rule isn't present in a linter or styleguide. IMO ""no wildcard imports"" is inherent in ""follow PEP8."" \n\nAllowing wildcard imports degrades development experience in Python significantly because it reduces the effectiveness of in-editor linters like flake8. Once you allow wildcard im",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-390411694,390411694,
practicalswift,2018-05-29T22:05:35Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-392961711,392961711,
Empact,2018-06-08T07:54:58Z,utACK 6185a96 this seems like a good improvement and low-risk to me,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-395680425,395680425,
ken2812221,2018-06-12T12:22:53Z,utACK 6185a96,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-396569912,396569912,
practicalswift,2018-06-30T08:39:10Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-401527189,401527189,
Empact,2018-07-01T20:35:03Z,Could avoid touching three of these files to keep the history clean.,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-401631476,401631476,
practicalswift,2018-07-06T16:40:00Z,@Empact Thanks for reviewing. Feedback addressed! Please re-review.,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-403086058,403086058,
practicalswift,2018-07-06T22:11:04Z,@Empact Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-403159233,403159233,
practicalswift,2018-07-11T20:35:58Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-404301295,404301295,
practicalswift,2018-07-15T23:07:10Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-405125216,405125216,
ken2812221,2018-07-16T12:49:42Z,utACK ea71fac1f228ec5525084b82c9c2c08a3517c692,https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-405236565,405236565,
practicalswift,2018-08-13T11:56:02Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-412493804,412493804,
MarcoFalke,2018-08-13T12:24:25Z,"This has been brought up too many times and already cost too much discussion. There seems to be some disagreement, but also a lot of Concept ACKs from contributors to tests. I am just going to bite the bullet and merge this now. (Doing before the 0.17.0 branch off to avoid any backport conflicts of future test backports)",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-412500317,412500317,
laanwj,2018-08-13T12:31:41Z,"On one hand I'm annoyed that apparently, insisting on doing something often enough gets it merged because the people that disagree will stop bothering to complain.\n\nOne the other hand, fine, this specific case is not a big deal.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-412502007,412502007,
MarcoFalke,2018-08-13T12:43:20Z,"It wasn't that only a small group of people insisted on doing it, but really a different person each time (see #9876 by @jnewbery, #10366 @kallewoof and #11274 @mess110). Also this one had many Concept ACKs from different contributors (not going to list them, just scroll up a bit).\n\nSo I feel like there is a threshold where something controversial can be merged if it has enough support. Anothe",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-412504983,412504983,
kallewoof,2018-08-13T13:04:56Z,"@laanwj \n\n> On one hand I'm annoyed that apparently, insisting on doing something often enough gets it merged because the people that disagree will stop bothering to complain.\n\nNote that the previous PRs related to this were\n* #11274 - closed as a duplicate of #10366 \n* #10366 - closed (unexpectedly) by someone other than the author\n* #9876 - closed for.. some reason. It looks like t",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-412510738,412510738,
laanwj,2018-08-13T13:08:27Z,"Yes, I agree in this case.\nIt was probably best to merge this.",https://github.com/bitcoin/bitcoin/pull/13054#issuecomment-412511673,412511673,
Empact,2018-07-01T20:30:56Z,nit: unrelated whitespace change,https://github.com/bitcoin/bitcoin/pull/13054#discussion_r199360651,199360651,test/functional/wallet_txn_doublespend.py
Empact,2018-07-01T20:32:17Z,nit: unrelated whitespace change,https://github.com/bitcoin/bitcoin/pull/13054#discussion_r199360685,199360685,test/functional/wallet_basic.py
Empact,2018-07-01T20:32:45Z,nit: unrelated whitespace change,https://github.com/bitcoin/bitcoin/pull/13054#discussion_r199360695,199360695,test/functional/rpc_fundrawtransaction.py
Empact,2018-07-06T19:03:21Z,One more,https://github.com/bitcoin/bitcoin/pull/13054#discussion_r200743615,200743615,test/functional/p2p_segwit.py
