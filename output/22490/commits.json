[
  {
    "sha": "8ca51af1ece371b6f1bdb88b96f16020cc787d13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2E1MWFmMWVjZTM3MWI2ZjFiZGI4OGI5NmYxNjAyMGNjNzg3ZDEz",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-07-26T15:36:01Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-07-26T17:11:13Z"
      },
      "message": "test: Disable automatic connections by default\n\nThis prevents the node from trying to connect to random IPs on the internet\nwhile running the functional tests. Exceptions are added when required for\nthe test to pass.",
      "tree": {
        "sha": "b52db0ed28869760191d6b2a25026295951137d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b52db0ed28869760191d6b2a25026295951137d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ca51af1ece371b6f1bdb88b96f16020cc787d13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ca51af1ece371b6f1bdb88b96f16020cc787d13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ca51af1ece371b6f1bdb88b96f16020cc787d13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ca51af1ece371b6f1bdb88b96f16020cc787d13/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54e31742d208eb98ce706aaa6bbd4b023f42c3a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e31742d208eb98ce706aaa6bbd4b023f42c3a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54e31742d208eb98ce706aaa6bbd4b023f42c3a5"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c39f6e6d4b7090335506a5afee938c47194dfe08",
        "filename": "test/functional/feature_anchors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/feature_anchors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/feature_anchors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_anchors.py?ref=8ca51af1ece371b6f1bdb88b96f16020cc787d13",
        "patch": "@@ -23,6 +23,7 @@ def check_node_connections(*, node, num_in, num_out):\n class AnchorsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.disable_autoconnect = False\n \n     def setup_network(self):\n         self.setup_nodes()"
      },
      {
        "sha": "5a23df8a1351933fe939b0a8e90b69c6feb54608",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=8ca51af1ece371b6f1bdb88b96f16020cc787d13",
        "patch": "@@ -17,6 +17,7 @@ def set_test_params(self):\n         self.num_nodes = 1\n         self.supports_cli = False\n         self.wallet_names = []\n+        self.disable_autoconnect = False\n \n     def test_config_file_parser(self):\n         self.stop_node(0)"
      },
      {
        "sha": "6d8e6ef45c1196db3889a94cb953937e4695f394",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=8ca51af1ece371b6f1bdb88b96f16020cc787d13",
        "patch": "@@ -112,6 +112,9 @@ def __init__(self):\n         # By default the wallet is not required. Set to true by skip_if_no_wallet().\n         # When False, we ignore wallet_names regardless of what it is.\n         self.requires_wallet = False\n+        # Disable ThreadOpenConnections by default, so that adding entries to\n+        # addrman will not result in automatic connections to them.\n+        self.disable_autoconnect = True\n         self.set_test_params()\n         assert self.wallet_names is None or len(self.wallet_names) <= self.num_nodes\n         if self.options.timeout_factor == 0 :\n@@ -711,7 +714,7 @@ def _initialize_chain(self):\n         if not os.path.isdir(cache_node_dir):\n             self.log.debug(\"Creating cache directory {}\".format(cache_node_dir))\n \n-            initialize_datadir(self.options.cachedir, CACHE_NODE_ID, self.chain)\n+            initialize_datadir(self.options.cachedir, CACHE_NODE_ID, self.chain, self.disable_autoconnect)\n             self.nodes.append(\n                 TestNode(\n                     CACHE_NODE_ID,\n@@ -769,15 +772,15 @@ def cache_path(*paths):\n             self.log.debug(\"Copy cache directory {} to node {}\".format(cache_node_dir, i))\n             to_dir = get_datadir_path(self.options.tmpdir, i)\n             shutil.copytree(cache_node_dir, to_dir)\n-            initialize_datadir(self.options.tmpdir, i, self.chain)  # Overwrite port/rpcport in bitcoin.conf\n+            initialize_datadir(self.options.tmpdir, i, self.chain, self.disable_autoconnect)  # Overwrite port/rpcport in bitcoin.conf\n \n     def _initialize_chain_clean(self):\n         \"\"\"Initialize empty blockchain for use by the test.\n \n         Create an empty blockchain and num_nodes wallets.\n         Useful if a test case wants complete control over initialization.\"\"\"\n         for i in range(self.num_nodes):\n-            initialize_datadir(self.options.tmpdir, i, self.chain)\n+            initialize_datadir(self.options.tmpdir, i, self.chain, self.disable_autoconnect)\n \n     def skip_if_no_py3_zmq(self):\n         \"\"\"Attempt to import the zmq package and skip the test if the import fails.\"\"\""
      },
      {
        "sha": "96839abb0e5ab2faf28ff5d499cfad9104784297",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ca51af1ece371b6f1bdb88b96f16020cc787d13/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=8ca51af1ece371b6f1bdb88b96f16020cc787d13",
        "patch": "@@ -338,17 +338,17 @@ def rpc_url(datadir, i, chain, rpchost):\n ################\n \n \n-def initialize_datadir(dirname, n, chain):\n+def initialize_datadir(dirname, n, chain, disable_autoconnect=True):\n     datadir = get_datadir_path(dirname, n)\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n-    write_config(os.path.join(datadir, \"bitcoin.conf\"), n=n, chain=chain)\n+    write_config(os.path.join(datadir, \"bitcoin.conf\"), n=n, chain=chain, disable_autoconnect=disable_autoconnect)\n     os.makedirs(os.path.join(datadir, 'stderr'), exist_ok=True)\n     os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n \n-def write_config(config_path, *, n, chain, extra_config=\"\"):\n+def write_config(config_path, *, n, chain, extra_config=\"\", disable_autoconnect=True):\n     # Translate chain subdirectory name to config name\n     if chain == 'testnet3':\n         chain_name_conf_arg = 'testnet'\n@@ -376,6 +376,8 @@ def write_config(config_path, *, n, chain, extra_config=\"\"):\n         f.write(\"shrinkdebugfile=0\\n\")\n         # To improve SQLite wallet performance so that the tests don't timeout, use -unsafesqlitesync\n         f.write(\"unsafesqlitesync=1\\n\")\n+        if disable_autoconnect:\n+            f.write(\"connect=0\\n\")\n         f.write(extra_config)\n \n "
      }
    ]
  }
]