sipa,2020-05-09 18:02:58,The big question is what - if any - impact these options have on performance?,https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-626213975,626213975,
practicalswift,2020-05-09 18:28:05,"Strongest possible concept ACK for additional hardening: thanks a lot for taking lead on this important work!\n\nPerformance impact would be nice to have quantified as @sipa requested to be able to reason about trade-offs :)",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-626217166,626217166,
fanquake,2020-05-10 11:43:27,"> The big question is what - if any - impact these options have on performance?\n\nI was hoping I could tag in @jamesob for a couple benchmarks if possible?",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-626315167,626315167,
DrahtBot,2020-05-10 14:18:54,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 88d8b4e182bfc75e8496f7046af7aab93307b9d0<br>(master) | commit 161c933195699f283f6800b0dbefe09d16a155cd<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`369f45f49680bb03...`](https://drahtbot.space/gitian/bitcoin/bitcoin/88d8b4e182bfc75e8496f7046af7aab93307b9d0/bitcoin-88d8b4e182bf-aarch64-l,https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-626335350,626335350,
MarcoFalke,2020-06-18 11:06:37,"<details><summary>For reference, the guix build fails for win64</summary>\n\n```\nMaking all in src\nmake[1]: Entering directory '/bitcoin/distsrc-x86_64-w64-mingw32/src'\nmake[2]: Entering directory '/bitcoin/distsrc-x86_64-w64-mingw32/src'\nx86_64-w64-mingw32-g++ -std=c++11 -DHAVE_CONFIG_H -I. -I../src/config   -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I.  -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-645947142,645947142,
fanquake,2020-06-19 10:14:36,"I've modified this to include the test case from https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458, for `-stack-clash-protection`, rather than my test case from #19318.",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-646556152,646556152,
theuni,2020-06-19 17:28:07,"Setting aside for a moment whether we _should_ enable these, the code changes look good to me.\n\nI agree with @fanquake's point here:\n> So we should decide whether we want to explicitly turn these options on as part of our hardening options (although not just for this reason), or, we should be opting-out.\n\nRather than letting distro's make the call, we should make a decision and explicitl",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-646774223,646774223,
laanwj,2020-08-13 11:09:22,"I think that we should ideally opt in to these options. If they're deemed suitable for general distribution use, I don't think the performance impact can be that substantial. It's still better to measure, of course.\nWould be nice to get this in 0.21.0.",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-673414498,673414498,
hebasto,2020-08-27 12:26:54,Concept ACK on more code hardening and explicit compiler flag settings.,https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-681916973,681916973,
jamesob,2020-08-27 12:41:16,"> I was hoping I could tag in @jamesob for a couple benchmarks if possible?\n\nSorry for the delay here, missed the notification. Will run a few benchmarks.",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-681923817,681923817,
jamesob,2020-08-28 15:31:34,"Changes look good to me.\n\n![ibd local range 500000 505000](https://user-images.githubusercontent.com/73197/91585009-7e470e80-e921-11ea-987c-0e34af76fb72.png)\n\n```\n11:27:57 james@slug /home/james % g++-8 --version\ng++-8 (Debian 8.3.0-6) 8.3.0\nCopyright (C) 2018 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not e",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-682717340,682717340,
jamesob,2020-08-28 15:54:35,"ACK b536813cefc13f5c54a28a7c2fce8c69e89d6624 ([`jamesob/ackr/18921.1.fanquake.build_add_stack_clash_an`](https://github.com/jamesob/bitcoin/tree/ackr/18921.1.fanquake.build_add_stack_clash_an))\n\nTested locally via bench results above.",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-682762333,682762333,
laanwj,2020-08-29 11:39:33,"Thanks for doing benchmarks @jamesob !\nCode review ACK b536813cefc13f5c54a28a7c2fce8c69e89d6624",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-683278804,683278804,
vasild,2020-08-31 09:47:03,"This seems to be causing\n```\nclang++: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\n```",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-683679524,683679524,
fanquake,2020-08-31 10:08:02,"> This seems to be causing\n\nYou need to provide more information. Which version of Clang? What is the output of the test in `config.log`? If your Clang is claiming to support an argument that it doesn't actually understand, something is wrong. As mentioned in the OP:\n\n> GCC has supported both options since 8.0.0. Clang has supported -fcf-protection from 7.0.0 and will support -fstack-clash",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-683688980,683688980,
vasild,2020-08-31 11:55:15,"Clang 12 (or I guess would also happen with any version of clang which supports `-fstack-clash-protection`, ie clang >= 11).\n\nRelevant snippet from `config.log`:\n```\nconfigure:25508: checking whether C++ compiler accepts -fstack-clash-protection\nconfigure:25520: clang++-devel -std=c++11 -c  -O0 -fstack-clash-protection ... conftest.cpp >&5\nclang++: warning: argument unused during compi",https://github.com/bitcoin/bitcoin/pull/18921#issuecomment-683733341,683733341,
practicalswift,2020-05-09 14:24:56,Is the mismatch between `-fcf-protection` (left) and `-fcf-protection=full` (right) intentional? :),https://github.com/bitcoin/bitcoin/pull/18921#discussion_r422501833,422501833,configure.ac
