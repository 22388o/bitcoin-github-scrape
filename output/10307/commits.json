[
  {
    "sha": "b8251f63373ed58a05d104f9c1637d2c07b3569e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODI1MWY2MzM3M2VkNThhMDVkMTA0ZjljMTYzN2QyYzA3YjM1Njll",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-01T19:12:49Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-01T19:12:49Z"
      },
      "message": "[tests] allow zmq test to be run in out-of-tree builds",
      "tree": {
        "sha": "018248012b0999c9e86c23c6b34cad3c2da94531",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/018248012b0999c9e86c23c6b34cad3c2da94531"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8251f63373ed58a05d104f9c1637d2c07b3569e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8251f63373ed58a05d104f9c1637d2c07b3569e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8251f63373ed58a05d104f9c1637d2c07b3569e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8251f63373ed58a05d104f9c1637d2c07b3569e/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2b99b13131b5d0fd6fae6d55892c2ebb327d438",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b99b13131b5d0fd6fae6d55892c2ebb327d438",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b99b13131b5d0fd6fae6d55892c2ebb327d438"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "896b3aafcd67fdab71fd4abcbc9c32c35878286c",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8251f63373ed58a05d104f9c1637d2c07b3569e/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8251f63373ed58a05d104f9c1637d2c07b3569e/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=b8251f63373ed58a05d104f9c1637d2c07b3569e",
        "patch": "@@ -124,6 +124,8 @@ def main(self):\n                           help=\"The seed to use for assigning port numbers (default: current process id)\")\n         parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n                           help=\"Write tested RPC commands into this directory\")\n+        parser.add_option(\"--configfile\", dest=\"configfile\",\n+                          help=\"Location of the test framework config file\")\n         self.add_options(parser)\n         (self.options, self.args) = parser.parse_args()\n "
      },
      {
        "sha": "965fe9ad7f53c9959dd26911076f606a80af0272",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8251f63373ed58a05d104f9c1637d2c07b3569e/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8251f63373ed58a05d104f9c1637d2c07b3569e/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=b8251f63373ed58a05d104f9c1637d2c07b3569e",
        "patch": "@@ -178,7 +178,10 @@ def main():\n \n     # Read config generated by configure.\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/config.ini\"))\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/config.ini\"\n+    config.read_file(open(configfile))\n+\n+    passon_args.append(\"--configfile=%s\" % configfile)\n \n     # Set up logging\n     logging_level = logging.INFO if args.quiet else logging.DEBUG"
      },
      {
        "sha": "70a8e0180e4eb6e46c71d29b9061bb658f767efb",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8251f63373ed58a05d104f9c1637d2c07b3569e/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8251f63373ed58a05d104f9c1637d2c07b3569e/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=b8251f63373ed58a05d104f9c1637d2c07b3569e",
        "patch": "@@ -29,7 +29,9 @@ def setup_nodes(self):\n \n         # Check that bitcoin has been built with ZMQ enabled\n         config = configparser.ConfigParser()\n-        config.read_file(open(os.path.dirname(__file__) + \"/config.ini\"))\n+        if not self.options.configfile:\n+            self.options.configfile = os.path.dirname(__file__) + \"/config.ini\"\n+        config.read_file(open(self.options.configfile))\n \n         if not config[\"components\"].getboolean(\"ENABLE_ZMQ\"):\n             self.log.warning(\"bitcoind has not been built with zmq enabled. Skipping zmq tests!\")"
      }
    ]
  }
]