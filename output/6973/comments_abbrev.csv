paveljanik,2015-11-09T13:47:33Z,Do we want this as a default protocol feature? Isn't it better to make it optional and use it only if available/announced?\n,https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155067011,155067011,
paveljanik,2015-11-09T13:48:28Z,https://www.cvedetails.com/vulnerability-list/vendor_id-72/product_id-1820/GNU-Zlib.html\n,https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155067168,155067168,
ptschip,2015-11-09T13:54:44Z,"You can turn it off by setting -compressionlevel=0  , and it is\nbackwardly compatible with nodes that do not support compression\n\nOn 09/11/2015 5:48 AM, paveljanik wrote:\n\n> Do we want this as a default protocol feature? Isn't it better to make\n> it optional and use it only if available/announced?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bit",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155068390,155068390,
jonasschnelli,2015-11-09T14:09:45Z,"Compression/decompression before/after transmitting data through the internet in general is a good idea. Very likely the CPU costs is tiny,.. but it would be nice to see a benchmark of a node serving compressed blocks for IBD to another node.\n\nTwo things which moves this PR towards NACK territory for me:\n- adding transmission compression should happen in a different, deeper layer and should be ",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155072451,155072451,
jmcorgan,2015-11-09T14:46:31Z,"Agree this capability should be advertised so it only comes into effect between mutually supporting nodes; also, even as-is it should default to compression level 0 to allow the node operator to turn on if desired.  Concept ACK, implementation NACK.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155083388,155083388,
ptschip,2015-11-09T15:42:24Z,"On 09/11/2015 6:10 AM, Jonas Schnelli wrote:\n\n> Compression/decompression before/after transmitting data through the\n> internet I general is a good idea. Very likely the CPU costs is\n> tiny,.. but it would be nice to see a benchmark of a node serving\n> compressed blocks for IBD to another node.\n> \n> I'll work on this.  Currenlty my only benchmark is with a 600MB\n> blockchain.  Takes 3:47 t",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155099797,155099797,
sipa,2015-11-09T16:20:18Z,"I don't think a 90ms delay before a block can be transmitted is acceptable.\nIs there a way to cache the compressed result and relay that, if the peer\naccepts compressed blocks? There may be other compression algorithms which\ncompress much faster (miniLZO?) that are more appropriate.\n\nCompression may not be useful for all messages, if done on a per-message\nbasis, as most compression algorithm",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155112400,155112400,
ptschip,2015-11-09T18:55:21Z,"On 09/11/2015 8:21 AM, Pieter Wuille wrote:\n\n> I don't think a 90ms delay before a block can be transmitted is\n> acceptable.\n> Is there a way to cache the compressed result and relay that, if the peer\n> accepts compressed blocks? There may be other compression algorithms which\n> compress much faster (miniLZO?) that are more appropriate.\n> \n> The 90ms delay is just for compression of large ",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155154771,155154771,
gmaxwell,2015-11-09T20:57:57Z,"Interesting to see someone trying this.\n\nMatt's relay network protocol can achieve _much_ better compaction (e.g. sending a 1MB block in a couple kilobytes); and considering zlib's security non-track record... this doesn't excite me greatly. Then one must consider the potential adverse effect on the system from punishing people for failing to reuse addresses, which is another impact matt's proto",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155190955,155190955,
sipa,2015-11-09T22:27:57Z,"@gmaxwell My vague recollection is that gzip gave 20% years ago, actually.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155218995,155218995,
gmaxwell,2015-11-10T00:31:43Z,"@sipa I thought it gave gains when compressing many blocks, and almost nothing on single blocks? (gained from reuse, but reuse in a block was rare.) I could be in space. (incidentally, catting up those 101 blocks above and xzing as a single file gets 31% compression).\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-155244829,155244829,
ptschip,2015-11-14T17:03:30Z,"@gmaxwell After running several tests the data is showing there is about a 20% compression benefit and surprisingly a slight improvement in performance particularly when latency is present.  It seems that in the past this was looked into but dropped but I'm wondering if in the past gzip was used as a comparison rather than the zlib library directly.  Gzip while based on zlib, can add additional me",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156719856,156719856,
jgarzik,2015-11-14T17:06:27Z,"Protocol changes for behavior that appears on the network, even optional ones, need a BIP.\n\nYou're absolutely right, it is something that is easily made configurable, and there will probably be additional thought and discussion given to default setting(s) related to such a protocol feature, and an implementation's use of it.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156719993,156719993,
ptschip,2015-11-14T20:52:44Z,@jgarzik Thanks for the clarification.   Just have one more question.  Do I write up a formal BIP proposal first and then get a BIP number assigned or get a BIP number and then write the formal proposal?  \n,https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156745356,156745356,
gmaxwell,2015-11-14T21:08:10Z,"First figure out what you want to propose in detail while discussing with others, then write the document, post it as a draft (so people can comment),  then make a pull req to the bips repository adding it and request a number and one will be assigned there.\n\nI suggest trying to drop the standard compressor and try using a simple custom one.  For example, that keeps a little 256 entry LFU cache ",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156746059,156746059,
jgarzik,2015-11-14T21:23:05Z,"""meat before number assignment"" - you want demo implementation and `BIP-draft-ptschip-compression` written before requesting number, ideally.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156746935,156746935,
ptschip,2015-11-14T21:26:27Z,"sounds good...thanks.\n\nOn 14/11/2015 1:23 PM, Jeff Garzik wrote:\n\n> ""meat before number assignment"" - you want demo implementation and\n> |BIP-draft-ptschip-compression| written before requesting number, ideally.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156746935.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-156747077,156747077,
paveljanik,2016-01-20T20:17:00Z,Needs rebase.\n\nAny progress on this?\n,https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-173347382,173347382,
bgorlick,2016-01-26T21:23:07Z,"I would like to suggest Brotli as an compression technique. I've done some brief analysis, possibly it could provide 20% improvement in compression and a speed bump.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-175235965,175235965,
rebroad,2016-02-01T16:43:54Z,Can compression get significantly better if many blocks are compressed together?\n,https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-178062019,178062019,
laanwj,2016-02-02T15:17:34Z,"@rebroad This was always the case. E.g. compressing a `blkXXXX.dat` gets a better compression ratio than compressing a separate block. This was mainly due to repeating outputs, for example due to gambling games. I'm don't have statistics by how much though.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-178628009,178628009,
laanwj,2016-03-24T11:28:31Z,"Closing this for now: progress seems to be stuck, both at the BIP discussion and implementation side.\n",https://github.com/bitcoin/bitcoin/pull/6973#issuecomment-200796668,200796668,
paveljanik,2015-11-09T14:00:13Z,This hunk can be removed.\n,https://github.com/bitcoin/bitcoin/pull/6973#discussion_r44276793,44276793,src/main.cpp
paveljanik,2015-11-09T14:00:35Z,This hunk can be removed.\n,https://github.com/bitcoin/bitcoin/pull/6973#discussion_r44276822,44276822,src/main.cpp
paveljanik,2015-11-09T14:00:54Z,Please remove space before comma.\n,https://github.com/bitcoin/bitcoin/pull/6973#discussion_r44276852,44276852,src/main.h
