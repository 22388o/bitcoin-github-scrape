[
  {
    "sha": "85ee55b5c37bedca98ec472439e1710277e8e4b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWVlNTViNWMzN2JlZGNhOThlYzQ3MjQzOWUxNzEwMjc3ZThlNGIy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-08T12:47:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-10T13:01:55Z"
      },
      "message": "rpc: Remove chain-specific RequireRPCPassword\n\nI've never liked the chain-specific exception to having to set a\npassword. It gives issues with #6388 which makes it valid to\nset no password in every case (as it enables random cookie authentication).\n\nThis pull removes the flag, so that all chains are regarded the same.\n\nIt also removes the username==password test, which doesn't provide any\nsubstantial extra security.",
      "tree": {
        "sha": "23b253176a0570875c274982ec1172545e40d699",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23b253176a0570875c274982ec1172545e40d699"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85ee55b5c37bedca98ec472439e1710277e8e4b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85ee55b5c37bedca98ec472439e1710277e8e4b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85ee55b5c37bedca98ec472439e1710277e8e4b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85ee55b5c37bedca98ec472439e1710277e8e4b2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11576a57d2ee37aa421e0fce69e70751b5af9a61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11576a57d2ee37aa421e0fce69e70751b5af9a61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11576a57d2ee37aa421e0fce69e70751b5af9a61"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 1,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3d172765cb20464d5b3aa296c7d7f578f08ea11d",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85ee55b5c37bedca98ec472439e1710277e8e4b2/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85ee55b5c37bedca98ec472439e1710277e8e4b2/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=85ee55b5c37bedca98ec472439e1710277e8e4b2",
        "patch": "@@ -99,7 +99,6 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        fRequireRPCPassword = true;\n         fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n@@ -171,7 +170,6 @@ class CTestNetParams : public CMainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n \n-        fRequireRPCPassword = true;\n         fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n@@ -218,7 +216,6 @@ class CRegTestParams : public CTestNetParams {\n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();  //! Regtest mode doesn't have any DNS seeds.\n \n-        fRequireRPCPassword = false;\n         fMiningRequiresPeers = false;\n         fDefaultConsistencyChecks = true;\n         fRequireStandard = false;"
      },
      {
        "sha": "8f13c2814eac7543e9cdf322fe1f799b106cc5cf",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85ee55b5c37bedca98ec472439e1710277e8e4b2/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85ee55b5c37bedca98ec472439e1710277e8e4b2/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=85ee55b5c37bedca98ec472439e1710277e8e4b2",
        "patch": "@@ -53,7 +53,6 @@ class CChainParams\n     /** Used if GenerateBitcoins is called with a negative number of threads */\n     int DefaultMinerThreads() const { return nMinerThreads; }\n     const CBlock& GenesisBlock() const { return genesis; }\n-    bool RequireRPCPassword() const { return fRequireRPCPassword; }\n     /** Make miner wait to have peers to avoid wasting work */\n     bool MiningRequiresPeers() const { return fMiningRequiresPeers; }\n     /** Default value for -checkmempool and -checkblockindex argument */\n@@ -86,7 +85,6 @@ class CChainParams\n     std::string strNetworkID;\n     CBlock genesis;\n     std::vector<SeedSpec6> vFixedSeeds;\n-    bool fRequireRPCPassword;\n     bool fMiningRequiresPeers;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;"
      },
      {
        "sha": "daf10736bfb688c4dcdd5104b83469fc674e397a",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85ee55b5c37bedca98ec472439e1710277e8e4b2/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85ee55b5c37bedca98ec472439e1710277e8e4b2/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=85ee55b5c37bedca98ec472439e1710277e8e4b2",
        "patch": "@@ -598,8 +598,7 @@ void StartRPCThreads()\n     LogPrint(\"rpc\", \"Allowing RPC connections from: %s\\n\", strAllowed);\n \n     strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    if (((mapArgs[\"-rpcpassword\"] == \"\") ||\n-         (mapArgs[\"-rpcuser\"] == mapArgs[\"-rpcpassword\"])) && Params().RequireRPCPassword())\n+    if (mapArgs[\"-rpcpassword\"] == \"\")\n     {\n         unsigned char rand_pwd[32];\n         GetRandBytes(rand_pwd, 32);"
      }
    ]
  }
]