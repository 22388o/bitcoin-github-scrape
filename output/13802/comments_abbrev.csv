promag,2018-07-30T11:05:06Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408827199,408827199,
DrahtBot,2018-07-30T11:59:11Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13216 ([Qt] implements concept for different disk sizes on intro by marcoagner)\n* #12288 ([WIP][NET] Add NATPMP support. by annanay25)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should b",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408839056,408839056,
fanquake,2018-07-30T13:03:01Z,"If this is going to be done, shouldn't `-Wzero-as-null-pointer-constant` or a similar sort of lint script be added to the build system to try and stop it's usage re-occurring? Otherwise this seems like it could end up similar to `-Wshadow`.",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408855431,408855431,
practicalswift,2018-07-30T13:11:17Z,@fanquake Yes that would be the best way to make sure we don't regress! Unfortunately `-Wzero-as-null-pointer-constant` generates some false positives in our code and some true positives in our dependencies.,https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408857782,408857782,
MarcoFalke,2018-07-30T13:12:56Z,"> Unfortunately -Wzero-as-null-pointer-constant generates some false positives in our code and some true positives in our dependencies.\n\nIn which case I suggest to do the same as with `-Wshadow`: Don't enforce it and don't change existing code. So I tend to Concept NACK here.",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408858266,408858266,
practicalswift,2018-07-30T13:32:20Z,"@MarcoFalke Oh, I'd love enabling that warning but in contrast to shadowing I think the probably of regressions is much lower â€“ hopefully making this a one time ""switch to C++11"" change. New code is unlikely to use `0` instead of the proper pointer literal `nullptr`, no?\n\nI'd assume the instances changed here are from the pre-C++11 era.",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408864093,408864093,
MarcoFalke,2018-07-30T15:57:15Z,"Fine, `nullptr` is type safe, so at least it is an improvement and also doesn't hurt. There shouldn't be any issues given that this compiles, right?",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408914854,408914854,
practicalswift,2018-07-30T16:22:00Z,"@MarcoFalke Correct! Type safety is our friend.\n\nThis change is safe:\n* Changing from `0` (or `NULL`) to `nullptr` where the zero is used as a null pointer constant is always safe.\n* Changing from `0` (or `NULL`) to `nullptr` where the zero is **NOT** used as a null pointer constant will result in a compiler error.\n\nSo yes, if it compiles it is safe :-)",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408923341,408923341,
kallewoof,2018-07-30T18:39:17Z,"Weak concept NAK, but I'm okay with it if others are (I understand it's safe if it compiles).\n\nToo many files changed (100 lines over 58 files) for a change that isn't really a fix (the reason stated in C++ guidelines is 'readability', which is rather weak for a 58 file change IMO). I feel this is one of those things that can be fixed gradually over time as people update the transgressing code",https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408967188,408967188,
practicalswift,2018-07-30T19:55:22Z,Closing this PR due to lack of consensus ACK :-),https://github.com/bitcoin/bitcoin/pull/13802#issuecomment-408989461,408989461,
