[
  {
    "sha": "52d3a48128b66e731afd54cec7cab0a687d303cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmQzYTQ4MTI4YjY2ZTczMWFmZDU0Y2VjN2NhYjBhNjg3ZDMwM2Nm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-03-18T22:14:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-03T18:22:41Z"
      },
      "message": "VC2010 compile fixes",
      "tree": {
        "sha": "ade3bfd91c7e92ed83ea79219ed773fbc009ee0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ade3bfd91c7e92ed83ea79219ed773fbc009ee0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52d3a48128b66e731afd54cec7cab0a687d303cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52d3a48128b66e731afd54cec7cab0a687d303cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52d3a48128b66e731afd54cec7cab0a687d303cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52d3a48128b66e731afd54cec7cab0a687d303cf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "703d64469eb2b607adcd864555b5fe1d981bf51f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/703d64469eb2b607adcd864555b5fe1d981bf51f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/703d64469eb2b607adcd864555b5fe1d981bf51f"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 53,
      "deletions": 19
    },
    "files": [
      {
        "sha": "868419eaa4af44b6cd424672a631953fd055b0db",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -2371,13 +2371,13 @@ void ThreadRPCServer2(void* parg)\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-server\\\"\");\n         else if (mapArgs.count(\"-daemon\"))\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-daemon\\\"\");\n-        ::error(\n-            _(\"%s, you must set a rpcpassword in the configuration file:\\n %s\\n\"\n-              \"It is recommended you use the following random password:\\n\"\n-              \"rpcuser=bitcoinrpc\\n\"\n-              \"rpcpassword=%s\\n\"\n-              \"(you do not need to remember this password)\\n\"\n-              \"If the file does not exist, create it with owner-readable-only file permissions.\\n\"),\n+        std::string strMessage = _(\"%s, you must set a rpcpassword in the configuration file:\\n %s\\n\"\n+                                          \"It is recommended you use the following random password:\\n\"\n+                                          \"rpcuser=bitcoinrpc\\n\"\n+                                          \"rpcpassword=%s\\n\"\n+                                          \"(you do not need to remember this password)\\n\"\n+                                          \"If the file does not exist, create it with owner-readable-only file permissions.\\n\");\n+        fprintf(stderr, strMessage.c_str(),\n                 strWhatAmI.c_str(),\n                 GetConfigFile().c_str(),\n                 EncodeBase58(&rand_pwd[0],&rand_pwd[0]+32).c_str());"
      },
      {
        "sha": "3596fd08dae3a031125661e79703c12d95fafcde",
        "filename": "src/headers.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/headers.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/headers.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/headers.h?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -18,7 +18,9 @@\n #endif\n #define _WIN32_IE 0x0400\n #define WIN32_LEAN_AND_MEAN 1\n-\n+#ifndef NOMINMAX\n+#define NOMINMAX\n+#endif\n // Include boost/foreach here as it defines __STDC_LIMIT_MACROS on some systems.\n #include <boost/foreach.hpp>\n "
      },
      {
        "sha": "8531b2071aa51b76fa253677033d1a2372c10912",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -24,6 +24,10 @@ Q_IMPORT_PLUGIN(qkrcodecs)\n Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n #endif\n \n+#ifdef WIN32\n+#define strncasecmp strnicmp\n+#endif\n+\n using namespace std;\n using namespace boost;\n "
      },
      {
        "sha": "6c81abad566a16056ccc6751df7579c0e3b0bdbd",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -11,6 +11,10 @@\n #include \"script.h\"\n #include \"db.h\"\n \n+#ifdef WIN32\n+#include <io.h> /* for _commit */\n+#endif\n+\n #include <list>\n \n class CBlock;\n@@ -161,7 +165,7 @@ class CDiskTxPos\n     std::string ToString() const\n     {\n         if (IsNull())\n-            return strprintf(\"null\");\n+            return \"null\";\n         else\n             return strprintf(\"(nFile=%d, nBlockPos=%d, nTxPos=%d)\", nFile, nBlockPos, nTxPos);\n     }\n@@ -288,7 +292,7 @@ class CTxIn\n     std::string ToString() const\n     {\n         std::string str;\n-        str += strprintf(\"CTxIn(\");\n+        str += \"CTxIn(\";\n         str += prevout.ToString();\n         if (prevout.IsNull())\n             str += strprintf(\", coinbase %s\", HexStr(scriptSig).c_str());"
      },
      {
        "sha": "9e79de425372448bfb6649dae6481399d7a5c6a4",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -9,6 +9,10 @@\n \n #ifdef WIN32\n #define _WIN32_WINNT 0x0501\n+#define WIN32_LEAN_AND_MEAN 1\n+#ifndef NOMINMAX\n+#define NOMINMAX\n+#endif\n #include <winsock2.h>\n #include <mswsock.h>\n #include <ws2tcpip.h>\n@@ -29,6 +33,10 @@\n \n extern int nConnectTimeout;\n \n+#ifdef WIN32\n+// In MSVC, this is defined as a macro, undefine it to prevent a compile and link error\n+#undef SetPort\n+#endif\n \n /** IP address (IPv6, or IPv4 using mapped IPv6 range (::FFFF:0:0/96)) */\n class CNetAddr"
      },
      {
        "sha": "6ee7fed5c96d1046ed7c9236b27ca4cb322137dd",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -123,6 +123,9 @@ std::string _(const char* psz)\n     return QCoreApplication::translate(\"bitcoin-core\", psz).toStdString();\n }\n \n+#ifdef WIN32\n+#define strncasecmp strnicmp\n+#endif\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {"
      },
      {
        "sha": "4cb2e68d0fae3f120dc0815eda4d2a28311d0950",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -1,4 +1,4 @@\n-#include <transactiondesc.h>\n+#include \"transactiondesc.h\"\n \n #include \"guiutil.h\"\n #include \"bitcoinunits.h\""
      },
      {
        "sha": "e894842499e257aee6b4e4c2720f4ec12a7e0aa1",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -10,8 +10,9 @@ class AddressTableModel;\n class TransactionTableModel;\n class CWallet;\n \n-struct SendCoinsRecipient\n+class SendCoinsRecipient\n {\n+public:\n     QString address;\n     QString label;\n     qint64 amount;"
      },
      {
        "sha": "227bfb9270ebe971126a7bfba99a92cbb3252045",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -24,12 +24,15 @@ typedef unsigned long long  uint64;\n \n #ifdef WIN32\n #define _WIN32_WINNT 0x0501\n+#define WIN32_LEAN_AND_MEAN 1\n+#ifndef NOMINMAX\n+#define NOMINMAX\n+#endif\n #include <windows.h>\n // This is used to attempt to keep keying material out of swap\n // Note that VirtualLock does not provide this as a guarantee on Windows,\n // but, in practice, memory that has been VirtualLock'd almost never gets written to\n // the pagefile except in rare circumstances where memory is extremely low.\n-#include <windows.h>\n #define mlock(p, n) VirtualLock((p), (n));\n #define munlock(p, n) VirtualUnlock((p), (n));\n #else"
      },
      {
        "sha": "cf73ecf5a503aa88ec3be6d8b096d4b65aa87c6f",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -265,7 +265,7 @@ int my_snprintf(char* buffer, size_t limit, const char* format, ...)\n     return ret;\n }\n \n-string strprintf(const std::string &format, ...)\n+string real_strprintf(const std::string &format, int dummy, ...)\n {\n     char buffer[50000];\n     char* p = buffer;\n@@ -274,7 +274,7 @@ string strprintf(const std::string &format, ...)\n     loop\n     {\n         va_list arg_ptr;\n-        va_start(arg_ptr, format);\n+        va_start(arg_ptr, dummy);\n         ret = _vsnprintf(p, limit, format.c_str(), arg_ptr);\n         va_end(arg_ptr);\n         if (ret >= 0 && ret < limit)\n@@ -292,13 +292,13 @@ string strprintf(const std::string &format, ...)\n     return str;\n }\n \n-bool error(const std::string &format, ...)\n+bool error(const char *format, ...)\n {\n     char buffer[50000];\n     int limit = sizeof(buffer);\n     va_list arg_ptr;\n     va_start(arg_ptr, format);\n-    int ret = _vsnprintf(buffer, limit, format.c_str(), arg_ptr);\n+    int ret = _vsnprintf(buffer, limit, format, arg_ptr);\n     va_end(arg_ptr);\n     if (ret < 0 || ret >= limit)\n     {"
      },
      {
        "sha": "0af5b0a2c5d18f8224a4c8ae69e9d88314e4eb84",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52d3a48128b66e731afd54cec7cab0a687d303cf/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52d3a48128b66e731afd54cec7cab0a687d303cf/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=52d3a48128b66e731afd54cec7cab0a687d303cf",
        "patch": "@@ -11,6 +11,8 @@\n #include <sys/types.h>\n #include <sys/time.h>\n #include <sys/resource.h>\n+#else\n+typedef int pid_t; /* define for windows compatiblity */\n #endif\n #include <map>\n #include <vector>\n@@ -128,8 +130,15 @@ void RandAddSeed();\n void RandAddSeedPerfmon();\n int OutputDebugStringF(const char* pszFormat, ...);\n int my_snprintf(char* buffer, size_t limit, const char* format, ...);\n-std::string strprintf(const std::string &format, ...);\n-bool error(const std::string &format, ...);\n+\n+/* It is not allowed to use va_start with a pass-by-reference argument.\n+   (C++ standard, 18.7, paragraph 3). Use a dummy argument to work around this, and use a\n+   macro to keep similar semantics.\n+*/\n+std::string real_strprintf(const std::string &format, int dummy, ...);\n+#define strprintf(format, ...) real_strprintf(format, 0, __VA_ARGS__)\n+\n+bool error(const char *format, ...);\n void LogException(std::exception* pex, const char* pszThread);\n void PrintException(std::exception* pex, const char* pszThread);\n void PrintExceptionContinue(std::exception* pex, const char* pszThread);"
      }
    ]
  }
]