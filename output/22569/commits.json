[
  {
    "sha": "83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4M2RmZTZjNjVlZjZjMzBjYTAxMzQ4ZWU1MDU5YzNkNzZlMDNkMWQz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-05T16:15:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-05T16:40:00Z"
      },
      "message": "Rate limit the processing of incoming addr messages\n\nWhile limitations on the influence of attackers on addrman already\nexist (affected buckets are restricted to a subset based on incoming\nIP / network group), there is no reason to permit them to let them\nfeed us addresses at more than a multiple of the normal network\nrate.\n\nThis commit introduces a \"token bucket\" rate limiter for the\nprocessing of addresses in incoming ADDR and ADDRV2 messages.\nEvery connection gets an associated token bucket. Processing an\naddress in an ADDR or ADDRV2 message from non-whitelisted peers\nconsumes a token from the bucket. If the bucket is empty, the\naddress is ignored (it is not forwarded or processed). The token\ncounter increases at a rate of 0.1 tokens per second, and will\naccrue up to a maximum of 1000 tokens (the maximum we accept in a\nsingle ADDR or ADDRV2). When a GETADDR is sent to a peer, it\nimmediately gets 1000 additional tokens, as we actively desire many\naddresses from such peers (this may temporarily cause the token\ncount to exceed 1000).\n\nThe rate limit of 0.1 addr/s was chosen based on observation of\nhonest nodes on the network. Activity in general from most nodes\nis either 0, or up to a maximum around 0.025 addr/s for recent\nBitcoin Core nodes. A few (self-identified, through subver) crawler\nnodes occasionally exceed 0.1 addr/s.\n\nGithub-Pull: #22387\nRebased-From: 0d64b8f709b4655d8702f810d4876cd8d96ded82",
      "tree": {
        "sha": "b0e1cf4aa790609354fc6cfd0ae541b324016164",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0e1cf4aa790609354fc6cfd0ae541b324016164"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "068ac69b56d649d97dae2036d2e7f5d215888dea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/068ac69b56d649d97dae2036d2e7f5d215888dea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/068ac69b56d649d97dae2036d2e7f5d215888dea"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 38,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3b841ab138ed8619d4e836575f406628803c7eb6",
        "filename": "src/net_permissions.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/src/net_permissions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/src/net_permissions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.h?ref=83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "patch": "@@ -30,7 +30,8 @@ enum NetPermissionFlags {\n     PF_NOBAN = (1U << 4) | PF_DOWNLOAD,\n     // Can query the mempool\n     PF_MEMPOOL = (1U << 5),\n-    // Can request addrs without hitting a privacy-preserving cache\n+    // Can request addrs without hitting a privacy-preserving cache, and send us\n+    // unlimited amounts of addrs.\n     PF_ADDR = (1U << 7),\n \n     // True if the user did not specifically set fine grained permissions"
      },
      {
        "sha": "019d00e7d6fdd0359f6c2b63066b0ba8dd5a1b95",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "patch": "@@ -146,6 +146,13 @@ static constexpr uint32_t MAX_GETCFILTERS_SIZE = 1000;\n static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n /** the maximum percentage of addresses from our addrman to return in response to a getaddr message. */\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n+/** The maximum rate of address records we're willing to process on average. Can be bypassed using\n+ *  the NetPermissionFlags::Addr permission. */\n+static constexpr double MAX_ADDR_RATE_PER_SECOND{0.1};\n+/** The soft limit of the address processing token bucket (the regular MAX_ADDR_RATE_PER_SECOND\n+ *  based increments won't go above this, but the MAX_ADDR_TO_SEND increment following GETADDR\n+ *  is exempt from this limit. */\n+static constexpr size_t MAX_ADDR_PROCESSING_TOKEN_BUCKET{MAX_ADDR_TO_SEND};\n \n struct COrphanTx {\n     // When modifying, adapt the copy of this definition in tests/DoS_tests.\n@@ -454,6 +461,12 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};\n+    /** When m_addr_token_bucket was last updated */\n+    std::chrono::microseconds m_addr_token_timestamp{GetTime<std::chrono::microseconds>()};\n+\n     Peer(NodeId id) : m_id(id) {}\n };\n \n@@ -2438,6 +2451,9 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+            // When requesting a getaddr, accept an additional MAX_ADDR_TO_SEND addresses in response\n+            // (bypassing the MAX_ADDR_PROCESSING_TOKEN_BUCKET limit).\n+            peer->m_addr_token_bucket += MAX_ADDR_TO_SEND;\n         }\n \n         if (!pfrom.IsInboundConn()) {\n@@ -2591,11 +2607,28 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, std::chrono::microseconds{0});\n+            const double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::PF_ADDR);\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) break;\n+                peer->m_addr_token_bucket -= 1.0;\n+            }\n             // We only bother storing full nodes, though this may include\n             // things which we would not make an outbound connection to, in\n             // part because we may make feeler connections to them."
      },
      {
        "sha": "e95a5faa8967e4bac4126046c26922a5543e763c",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "patch": "@@ -41,6 +41,7 @@ class AddrTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = False\n         self.num_nodes = 1\n+        self.extra_args = [[\"-whitelist=addr@127.0.0.1\"]]\n \n     def run_test(self):\n         self.log.info('Create connection that sends addr messages')"
      },
      {
        "sha": "5abeabb5fe105ccb430b4fa1b253faf564f19602",
        "filename": "test/functional/p2p_addrv2_relay.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/test/functional/p2p_addrv2_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/test/functional/p2p_addrv2_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addrv2_relay.py?ref=83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "patch": "@@ -49,6 +49,7 @@ class AddrTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n+        self.extra_args = [[\"-whitelist=addr@127.0.0.1\"]]\n \n     def run_test(self):\n         self.log.info('Create connection that sends addrv2 messages')"
      },
      {
        "sha": "3934e7611e79c3791f83b30ae9604f7a92e6097d",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "patch": "@@ -57,6 +57,7 @@ class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=addr@127.0.0.1\"]]\n \n     def run_test(self):\n         self.test_buffer()"
      }
    ]
  },
  {
    "sha": "8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGYzZTViZDg0ZjJiMmI2MDczMDAzNGNiZDcxZmU4ZjMyNzZkNDM0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-07-15T19:59:23Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-05T16:40:04Z"
      },
      "message": "Randomize the order of addr processing\n\nGithub-Pull: #22387\nRebased-From: 5648138f5949013331c017c740646e2f4013bc24",
      "tree": {
        "sha": "e2901928c6dc6cb050400455c843710297c75fa8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2901928c6dc6cb050400455c843710297c75fa8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8df3e5bd84f2b2b60730034cbd71fe8f3276d434/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83dfe6c65ef6c30ca01348ee5059c3d76e03d1d3"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7ca8c10d8562adc0f7f9e60d6713c0ffcda730d7",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8df3e5bd84f2b2b60730034cbd71fe8f3276d434/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8df3e5bd84f2b2b60730034cbd71fe8f3276d434/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
        "patch": "@@ -2619,6 +2619,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         peer->m_addr_token_timestamp = current_time;\n \n         const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::PF_ADDR);\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)"
      }
    ]
  },
  {
    "sha": "aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWE0ODMzZmM5YzNkNDQzNzhlMjMyMDAyZjRiOWI0NDdhMmQxOGNi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-07-01T23:02:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-05T16:40:04Z"
      },
      "message": "Functional tests for addr rate limiting\n\nGithub-Pull: #22387\nRebased-From: b4ece8a1cda69cc268d39d21bba59c51fa2fb9ed",
      "tree": {
        "sha": "f5652b2a6ab449133e6f64d93e8de9c98915a0fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5652b2a6ab449133e6f64d93e8de9c98915a0fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa4833fc9c3d44378e232002f4b9b447a2d18cb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8df3e5bd84f2b2b60730034cbd71fe8f3276d434",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8df3e5bd84f2b2b60730034cbd71fe8f3276d434"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 77,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1b5c9533f7231026853019c350627c635a122782",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaa4833fc9c3d44378e232002f4b9b447a2d18cb/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaa4833fc9c3d44378e232002f4b9b447a2d18cb/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
        "patch": "@@ -16,7 +16,10 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_greater_than_or_equal,\n )\n+import os\n+import random\n import time\n \n ADDRS = []\n@@ -43,6 +46,19 @@ def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [[\"-whitelist=addr@127.0.0.1\"]]\n \n+    def setup_rand_addr_msg(self, num):\n+        addrs = []\n+        for i in range(num):\n+            addr = CAddress()\n+            addr.time = self.mocktime + i\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = \"%i.%i.%i.%i\" % (random.randrange(128,169), random.randrange(1,255), random.randrange(1,255), random.randrange(1,255))\n+            addr.port = 8333\n+            addrs.append(addr)\n+        msg = msg_addr()\n+        msg.addrs = addrs\n+        return msg\n+\n     def run_test(self):\n         self.log.info('Create connection that sends addr messages')\n         addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n@@ -65,6 +81,67 @@ def run_test(self):\n             self.nodes[0].setmocktime(int(time.time()) + 30 * 60)\n             addr_receiver.sync_with_ping()\n \n+        # The following test is backported. The original test also verified behavior for\n+        # outbound peers, but lacking add_outbound_p2p_connection, those tests have been\n+        # removed here.\n+        for contype, tokens, no_relay in [(\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which we send a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_2)\n+            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\n+            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_3)\n+            assert_equal(addr_count_2, addr_count_3)\n+\n+            # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\n+            # but verify that no more than 10 are processed.\n+            self.mocktime += 100\n+            self.nodes[0].setmocktime(self.mocktime)\n+            new_tokens = 0 if no_relay else 10\n+            tokens += new_tokens\n+            peer.send_and_ping(self.setup_rand_addr_msg(200))\n+            addr_count_4 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_4)\n+            assert_greater_than_or_equal(addr_count_3 + new_tokens, addr_count_4)\n+\n+            # Advance the time by 1000 seconds, permitting the processing of 100 more addresses. Send 200,\n+            # but verify that no more than 100 are processed (and at least some).\n+            self.mocktime += 1000\n+            self.nodes[0].setmocktime(self.mocktime)\n+            new_tokens = 0 if no_relay else 100\n+            tokens += new_tokens\n+            peer.send_and_ping(self.setup_rand_addr_msg(200))\n+            addr_count_5 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_5)\n+            assert_greater_than_or_equal(addr_count_4 + new_tokens, addr_count_5)\n+            assert_equal(addr_count_5 > addr_count_4, not no_relay)\n+\n+            self.nodes[0].disconnect_p2ps()\n \n if __name__ == '__main__':\n     AddrTest().main()"
      }
    ]
  },
  {
    "sha": "a653aacbd66a47edd6d14ddc62fec2d4038456b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjUzYWFjYmQ2NmE0N2VkZDZkMTRkZGM2MmZlYzJkNDAzODQ1NmI4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-07-07T18:44:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-05T16:40:04Z"
      },
      "message": "Add logging and addr rate limiting statistics\n\nIncludes logging improvements by Vasil Dimov and John Newbery.\n\nGithub-Pull: #22387\nRebased-From: f424d601e1b6870e20bc60f5ccba36d2e210377b",
      "tree": {
        "sha": "f39ef51da90a0c76cb7412a816d2831bb3da2cc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f39ef51da90a0c76cb7412a816d2831bb3da2cc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a653aacbd66a47edd6d14ddc62fec2d4038456b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a653aacbd66a47edd6d14ddc62fec2d4038456b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a653aacbd66a47edd6d14ddc62fec2d4038456b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a653aacbd66a47edd6d14ddc62fec2d4038456b8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa4833fc9c3d44378e232002f4b9b447a2d18cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaa4833fc9c3d44378e232002f4b9b447a2d18cb"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f926fd652f8c7c4d6d8556275687dbf873420c86",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a653aacbd66a47edd6d14ddc62fec2d4038456b8/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a653aacbd66a47edd6d14ddc62fec2d4038456b8/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a653aacbd66a47edd6d14ddc62fec2d4038456b8",
        "patch": "@@ -466,6 +466,10 @@ struct Peer {\n     double m_addr_token_bucket{1.0};\n     /** When m_addr_token_bucket was last updated */\n     std::chrono::microseconds m_addr_token_timestamp{GetTime<std::chrono::microseconds>()};\n+    /** Total number of addresses that were dropped due to rate limiting. */\n+    std::atomic<uint64_t> m_addr_rate_limited{0};\n+    /** Total number of addresses that were processed (excludes rate limited ones). */\n+    std::atomic<uint64_t> m_addr_processed{0};\n \n     Peer(NodeId id) : m_id(id) {}\n };\n@@ -919,6 +923,8 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n     PeerRef peer = GetPeerRef(nodeid);\n     if (peer == nullptr) return false;\n     stats.m_misbehavior_score = WITH_LOCK(peer->m_misbehavior_mutex, return peer->m_misbehavior_score);\n+    stats.m_addr_processed = peer->m_addr_processed.load();\n+    stats.m_addr_rate_limited = peer->m_addr_rate_limited.load();\n \n     return true;\n }\n@@ -2619,6 +2625,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         peer->m_addr_token_timestamp = current_time;\n \n         const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::PF_ADDR);\n+        uint64_t num_proc = 0;\n+        uint64_t num_rate_limit = 0;\n         Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n@@ -2627,7 +2635,10 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n             // Apply rate limiting.\n             if (rate_limited) {\n-                if (peer->m_addr_token_bucket < 1.0) break;\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    ++num_rate_limit;\n+                    continue;\n+                }\n                 peer->m_addr_token_bucket -= 1.0;\n             }\n             // We only bother storing full nodes, though this may include\n@@ -2643,6 +2654,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                 // Do not process banned/discouraged addresses beyond remembering we received them\n                 continue;\n             }\n+            ++num_proc;\n             bool fReachable = IsReachable(addr);\n             if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\n             {\n@@ -2653,6 +2665,15 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             if (fReachable)\n                 vAddrOk.push_back(addr);\n         }\n+        peer->m_addr_processed += num_proc;\n+        peer->m_addr_rate_limited += num_rate_limit;\n+        LogPrint(BCLog::NET, \"Received addr: %u addresses (%u processed, %u rate-limited) from peer=%d%s\\n\",\n+                 vAddr.size(),\n+                 num_proc,\n+                 num_rate_limit,\n+                 pfrom.GetId(),\n+                 fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\n+\n         m_connman.AddNewAddresses(vAddrOk, pfrom.addr, 2 * 60 * 60);\n         if (vAddr.size() < 1000)\n             pfrom.fGetAddr = false;"
      },
      {
        "sha": "1982551dd45fcb218bc53a3bb334dac4939b5d7a",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a653aacbd66a47edd6d14ddc62fec2d4038456b8/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a653aacbd66a47edd6d14ddc62fec2d4038456b8/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=a653aacbd66a47edd6d14ddc62fec2d4038456b8",
        "patch": "@@ -32,6 +32,7 @@ static const bool DEFAULT_PEERBLOCKFILTERS = false;\n /** Threshold for marking a node to be discouraged, e.g. disconnected and added to the discouragement filter. */\n static const int DISCOURAGEMENT_THRESHOLD{100};\n \n+\n class PeerManager final : public CValidationInterface, public NetEventsInterface {\n public:\n     PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n@@ -150,6 +151,8 @@ struct CNodeStateStats {\n     int nSyncHeight = -1;\n     int nCommonHeight = -1;\n     std::vector<int> vHeightInFlight;\n+    uint64_t m_addr_processed = 0;\n+    uint64_t m_addr_rate_limited = 0;\n };\n \n /** Get statistics from node state */"
      },
      {
        "sha": "49d480c5f51aa5513344262906f8830566ed08fb",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a653aacbd66a47edd6d14ddc62fec2d4038456b8/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a653aacbd66a47edd6d14ddc62fec2d4038456b8/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=a653aacbd66a47edd6d14ddc62fec2d4038456b8",
        "patch": "@@ -236,6 +236,8 @@ static RPCHelpMan getpeerinfo()\n                 heights.push_back(height);\n             }\n             obj.pushKV(\"inflight\", heights);\n+            obj.pushKV(\"addr_processed\", statestats.m_addr_processed);\n+            obj.pushKV(\"addr_rate_limited\", statestats.m_addr_rate_limited);\n         }\n         if (IsDeprecatedRPCEnabled(\"whitelisted\")) {\n             // whitelisted is deprecated in v0.21 for removal in v0.22"
      }
    ]
  },
  {
    "sha": "2a5710805195ca54a02aff3540ceaefb9cb3b3e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTU3MTA4MDUxOTVjYTU0YTAyYWZmMzU0MGNlYWVmYjljYjNiM2Uy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-07-29T23:57:26Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-08-05T16:48:25Z"
      },
      "message": "Avoid Appveyor compilation failure",
      "tree": {
        "sha": "f4ba00a5e7b19d8014c671c8930c77c7c8c1a52e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4ba00a5e7b19d8014c671c8930c77c7c8c1a52e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a5710805195ca54a02aff3540ceaefb9cb3b3e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a5710805195ca54a02aff3540ceaefb9cb3b3e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a5710805195ca54a02aff3540ceaefb9cb3b3e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a5710805195ca54a02aff3540ceaefb9cb3b3e2/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a653aacbd66a47edd6d14ddc62fec2d4038456b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a653aacbd66a47edd6d14ddc62fec2d4038456b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a653aacbd66a47edd6d14ddc62fec2d4038456b8"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cca4c6787f0d59c1a266ef4ef6ec0cc02fc8af5f",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a5710805195ca54a02aff3540ceaefb9cb3b3e2/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a5710805195ca54a02aff3540ceaefb9cb3b3e2/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=2a5710805195ca54a02aff3540ceaefb9cb3b3e2",
        "patch": "@@ -387,7 +387,8 @@ static RPCHelpMan setmocktime()\n     }\n     SetMockTime(time);\n     if (request.context.Has<NodeContext>()) {\n-        for (const auto& chain_client : request.context.Get<NodeContext>().chain_clients) {\n+        const auto& chain_clients = request.context.Get<NodeContext>().chain_clients;\n+        for (const auto& chain_client : chain_clients) {\n             chain_client->setMockTime(time);\n         }\n     }"
      }
    ]
  }
]