jonasschnelli,2016-01-14T08:29:06Z,Concept ACK.\n\nIMO the only use cases that makes sense:\n- Building bitcoin-qt without the -server option and therefore without the libevent dependency.\n\nNot sure if building bitcoind without a RPC server results in something people could use.\nBuilding bitcoin-tx without bitcoind is probably an edge case.\n,https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-171570847,171570847,
luke-jr,2016-01-14T15:34:28Z,"> Not sure if building bitcoind without a RPC server results in something people could use.\n\nRight now, this PR has the following behaviour:\n- --without-libevent --enable-daemon: error\n- --without-libevent: do not build bitcoind\n- --disable-daemon: use libevent if available\n- (neither flag): error if libevent is not available\n\n> Building bitcoin-tx without bitcoind is probably an edge case",https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-171675253,171675253,
laanwj,2016-01-18T11:00:09Z,Ping @theuni \n,https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-172497689,172497689,
laanwj,2016-01-27T10:29:22Z,I just realized:  don't forget that work is underway to use libevent for the P2P code. So this would only be a short-lived change.\n,https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-175538345,175538345,
luke-jr,2016-01-28T05:34:42Z,"Hmm, good point. I'd still appreciate review on this, even if it doesn't get merged, since I plan to include it in Bitcoin LJR 0.12.\n",https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-175989024,175989024,
laanwj,2016-02-01T13:53:33Z,The code changes look OK to me\n,https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-177980243,177980243,
laanwj,2016-02-03T12:30:53Z,"Closing this; sure, you could use it as a temporary measure, but it doesn't make sense for us given @theuni's work in progress.\n(eventually this will be a way of building just bitcoin-tx, which is a very much an edge case)\n",https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-179197235,179197235,
luke-jr,2016-03-01T15:59:57Z,Please reopen this. It occurs to me that libbitcoinconsensus and bitcoin-tx will never need libevent.\n,https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-190784053,190784053,
jtimon,2016-03-01T16:23:46Z,"Whether libconsensus needs to support concurrency internally or not (like libsecp256k1 doesn't ) is purely a design choice. My preferred choice is that concurrency is implemented by the caller (I highly doubt libbitcoin would use it otherwise, for example ). See #7566 compared to #7575 for what I mean by decoupling libconsensus from concurrency and storage.\n",https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-190793915,190793915,
luke-jr,2016-09-04T16:38:21Z,"In addition to libbitcoinconsensus/bitcoin-tx, we've now gone through two major releases where this would have been useful.\n\n@jtimon libevent isn't concurrency; it's networking.\n",https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-244613506,244613506,
jtimon,2016-09-07T20:07:29Z,Sorry for the previous comment. It was not relevant to this PR at all. Please ignore it for this PR.\n,https://github.com/bitcoin/bitcoin/pull/7339#issuecomment-245400566,245400566,
jonasschnelli,2016-01-14T08:24:52Z,would using a m4 marco make sense here. Something like https://github.com/digitalbitbox/dbb-app/blob/master/build-aux/m4/ax_libevent.m4?\n,https://github.com/bitcoin/bitcoin/pull/7339#discussion_r49697889,49697889,configure.ac
luke-jr,2016-01-14T15:31:22Z,"Probably, but IMO outside the scope of this PR.\n",https://github.com/bitcoin/bitcoin/pull/7339#discussion_r49739892,49739892,configure.ac
