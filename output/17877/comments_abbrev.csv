practicalswift,2020-01-05 23:02:51,Concept ACK: structured is better than unstructured :),https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-570957101,570957101,
DrahtBot,2020-01-06 03:03:49,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #15936 (Unify bitcoin-qt and bitcoind persistent settings by ryanofsky)\n\nIf you consider this pull request important, pl",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-570985786,570985786,
elichai,2020-01-06 16:02:34,Concept ACK. will review later this week ,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-571196620,571196620,
jonasschnelli,2020-01-09 05:25:31,"Concept ACK.\nFlew over the code (cf9507442fbec9252f557ed0de8237b631f89d39),... looks good. Needs testing.",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-572393752,572393752,
Empact,2020-01-13 19:37:34,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-573833896,573833896,
hebasto,2020-01-27 17:58:32,Rebased after #17453 has been merged.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-578873179,578873179,
hebasto,2020-03-24 16:35:32,Rebased 22be3d60cab774ffd2f8a287f522176b5a0abdfe -> 4ead3f47c35b40382007fd0eee2b01c29581d1e0 due to the conflict with #18278.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-603352350,603352350,
hebasto,2020-04-11 12:52:28,Rebased 4ead3f47c35b40382007fd0eee2b01c29581d1e0 -> cca2ebdaf7f9af26a3381273f79efd9fb95ed1a9  ([pr17877.03](https://github.com/hebasto/bitcoin/commits/pr17877.03) -> [pr17877.04](https://github.com/hebasto/bitcoin/commits/pr17877.04)) due to the conflict with #17905.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-612414636,612414636,
hebasto,2020-04-29 17:44:20,Rebased cca2ebdaf7f9af26a3381273f79efd9fb95ed1a9 -> a2edcd60a614053ec642f21cedf4858b650c726b ([pr17877.04](https://github.com/hebasto/bitcoin/commits/pr17877.04) -> [pr17877.05](https://github.com/hebasto/bitcoin/commits/pr17877.05)) due to the conflict with #16528.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-621362214,621362214,
hebasto,2020-05-29 10:35:55,Rebased a2edcd60a614053ec642f21cedf4858b650c726b -> 61c84eab0c5451b2a19b51047c493b45d4562eff ([pr17877.05](https://github.com/hebasto/bitcoin/commits/pr17877.05) -> [pr17877.06](https://github.com/hebasto/bitcoin/commits/pr17877.06)) due to the conflict with #16432.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-635902127,635902127,
MarcoFalke,2020-05-30 16:10:36,Can't this be done with a scripted diff like in fa5997bd6f?,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636351875,636351875,
hebasto,2020-05-31 06:19:48,"Updated 61c84eab0c5451b2a19b51047c493b45d4562eff -> 53bf585eb918f1674febcb0d2b7ece635d2cc767 ([pr17877.06](https://github.com/hebasto/bitcoin/commits/pr17877.06) -> [pr17877.07](https://github.com/hebasto/bitcoin/commits/pr17877.07), [diff](https://github.com/hebasto/bitcoin/compare/pr17877.06..pr17877.07)):\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/17877#issuec",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636428851,636428851,
MarcoFalke,2020-05-31 12:18:50,ACK f8cd12dfd39104d875a16ea0226b4be1450e77f4,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636463582,636463582,
hebasto,2020-05-31 19:08:28,"Updated 53bf585eb918f1674febcb0d2b7ece635d2cc767 -> 25df40fcadaf5b284e94765e25213eb224b33a25 ([pr17877.07](https://github.com/hebasto/bitcoin/commits/pr17877.07) -> [pr17877.08](https://github.com/hebasto/bitcoin/commits/pr17877.08), [diff](https://github.com/hebasto/bitcoin/compare/pr17877.07..pr17877.08)):\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/17877#discus",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636514466,636514466,
MarcoFalke,2020-05-31 21:36:32,"Still ACK on the first commit, but I don't feel comfortable about the rest. Previously a corrupt settings file (or a file from a previous version) would recover with a gui glitch. Now it crashes the node.",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636533636,636533636,
hebasto,2020-06-01 13:44:32,"Updated 25df40fcadaf5b284e94765e25213eb224b33a25 -> 949669431de3ecc41d16e58d323dad741588bf79 ([pr17877.08](https://github.com/hebasto/bitcoin/commits/pr17877.08) -> [pr17877.09](https://github.com/hebasto/bitcoin/commits/pr17877.09), [diff](https://github.com/hebasto/bitcoin/compare/pr17877.08..pr17877.09)):\n\n- added _""qt: Use QVariant instead of int for BitcoinUnit in QSettings""_ commit to ad",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636869198,636869198,
MarcoFalke,2020-06-01 14:04:41,"> Mind providing the Bitcoin-Qt.conf file and steps to reproduce a crash?\n\nSorry I suspected that this crashes the node based on reading the code, I haven't actually tested or verified that.",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636879385,636879385,
MarcoFalke,2020-06-01 14:07:19,"And with the new code, `FromQuint8` seems to deal with the issue.",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636881495,636881495,
hebasto,2020-06-01 14:09:54,"This variant is backward compatible as it uses a new key ""display_unit"" in `QSettings` file.",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636882899,636882899,
hebasto,2020-06-04 07:23:09,Rebased 949669431de3ecc41d16e58d323dad741588bf79 -> cbd498e593498d3b28c0c72032f1e62a2f9ef2df ([pr17877.09](https://github.com/hebasto/bitcoin/commits/pr17877.09) -> [pr17877.10](https://github.com/hebasto/bitcoin/commits/pr17877.10)) due to the conflict with #19104.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-638656743,638656743,
MarcoFalke,2020-06-16 13:07:18,"Maybe split out the scripted-diff into a separate pull request: https://github.com/bitcoin-core/gui/pulls\n\nIt seems that it can be reviewed by anyone familiar with C++. As opposed to the latter commits, which require specific gui knowledge.",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-644751515,644751515,
hebasto,2020-06-18 12:49:48,"@MarcoFalke \n> Maybe split out the scripted-diff into a separate pull request: https://github.com/bitcoin-core/gui/pulls\n> \n> It seems that it can be reviewed by anyone familiar with C++.\n\nDone: https://github.com/bitcoin-core/gui/pull/3\n\n> As opposed to the latter commits, which require specific gui knowledge.\n\nShould they be also moved to https://github.com/bitcoin-core/gui ?",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-645996106,645996106,
hebasto,2020-06-18 17:24:46,Rebased cbd498e593498d3b28c0c72032f1e62a2f9ef2df -> 1a348c8ceddcb38ba33caf3ceade419c7590c879 ([pr17877.10](https://github.com/hebasto/bitcoin/commits/pr17877.10) -> [pr17877.11](https://github.com/hebasto/bitcoin/commits/pr17877.11)) due to the merging of https://github.com/bitcoin-core/gui/pull/3.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-646197094,646197094,
hebasto,2020-07-10 08:00:28,Rebased 1a348c8ceddcb38ba33caf3ceade419c7590c879 -> 72819bd15cb8c77fc6e1162c046060522b3ce6e5 ([pr17877.11](https://github.com/hebasto/bitcoin/commits/pr17877.11) -> [pr17877.12](https://github.com/hebasto/bitcoin/commits/pr17877.12)) due to the conflict with #19314.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-656542596,656542596,
hebasto,2020-07-10 09:11:46,"Updated 72819bd15cb8c77fc6e1162c046060522b3ce6e5 -> 1575ffbbe42dd6c78b131dffe8cb00f636141cc1 ([pr17877.12](https://github.com/hebasto/bitcoin/commits/pr17877.12) -> [pr17877.13](https://github.com/hebasto/bitcoin/commits/pr17877.13), [diff](https://github.com/hebasto/bitcoin/compare/pr17877.12..pr17877.13)):\n\n- fixed the conflict with #18027",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-656573852,656573852,
hebasto,2020-08-13 13:51:52,Rebased 1575ffbbe42dd6c78b131dffe8cb00f636141cc1 -> 243205f85b8b10e4f43865557cdd8ea3aa71c380 ([pr17877.13](https://github.com/hebasto/bitcoin/commits/pr17877.13) -> [pr17877.14](https://github.com/hebasto/bitcoin/commits/pr17877.14)) due to the conflict with #19011.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-673491683,673491683,
fanquake,2020-08-14 06:47:13,"Lots of Concept ACKs, but not really any review in 6 months. Lets try and kick-start this over on the [GUI repo](https://github.com/bitcoin-core/gui).",https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-673917577,673917577,
hebasto,2020-08-14 10:57:34,Moved to https://github.com/bitcoin-core/gui/pull/60.,https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-674018652,674018652,
promag,2020-01-05 21:23:13,In Qt there's `Q_UNREACHABLE()`.,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r363117876,363117876,src/qt/bitcoinunits.cpp
hebasto,2020-01-05 22:12:11,"Correct. But I'd prefer to stick to our [Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures) ;)\nWhen C++ will provide the standard way to handle such cases, it will be easier to implement the appropriate change.\n\nOr did I miss something important why `Q_UNREACHABLE()` should be preferable in Qt code?",https://github.com/bitcoin/bitcoin/pull/17877#discussion_r363120597,363120597,src/qt/bitcoinunits.cpp
promag,2020-01-05 22:21:19,No preference!,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r363121095,363121095,src/qt/bitcoinunits.cpp
jb55,2020-04-02 18:35:36,was `const TransactionRecord *wtx` -> `const TransactionRecord* wtx` intentional? looks inconsistent wrt surrounding code,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r402528782,402528782,src/qt/transactiontablemodel.h
hebasto,2020-04-02 18:40:33,[`clang-format-diff.py`](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy) was applied.,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r402531588,402531588,src/qt/transactiontablemodel.h
MarcoFalke,2020-05-31 12:13:16,"Why is this safe to do in qt? Any integer can be converted to `BitcoinUnit`, at least in C++. ",https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432940791,432940791,src/qt/bitcoinamountfield.cpp
MarcoFalke,2020-05-31 12:16:27,Same here,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432941062,432941062,src/qt/optionsmodel.cpp
MarcoFalke,2020-05-31 12:17:47,Same,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432941185,432941185,src/qt/bitcoinunits.h
MarcoFalke,2020-05-31 12:18:26,Same,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432941237,432941237,src/qt/bitcoinunits.cpp
hebasto,2020-05-31 16:23:07,"I believe, no `int` to `BitcoinUnit` conversion here. [`QComboBox::itemData()`](https://doc.qt.io/qt-5/qcombobox.html#itemData) does a kind of mapping from `int` index to `QVariant`.\n\nAnyway, going to make this code more safer.",https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432962322,432962322,src/qt/bitcoinamountfield.cpp
hebasto,2020-05-31 19:14:34,[Updated](https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636514466).,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432975473,432975473,src/qt/bitcoinamountfield.cpp
hebasto,2020-05-31 19:15:22,See https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636514466,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432975543,432975543,src/qt/optionsmodel.cpp
hebasto,2020-05-31 19:15:45,See https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636514466,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432975584,432975584,src/qt/bitcoinunits.h
hebasto,2020-05-31 19:15:57,See https://github.com/bitcoin/bitcoin/pull/17877#issuecomment-636514466,https://github.com/bitcoin/bitcoin/pull/17877#discussion_r432975608,432975608,src/qt/bitcoinunits.cpp
