theuni,2018-06-15T17:58:56Z,"Most of these aren't really significant or are outside of critical paths, but [this one](https://github.com/bitcoin/bitcoin/pull/13480/commits/466e16e0e8523909f9968c5823691b1d4a3d8175#diff-24efdb00bfbe56b140fb006b562cc70bR654) is definitely worth fixing.",https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-397698312,397698312,
sipa,2018-06-15T18:18:02Z,"I'm confused about the removal of consts, and in general by why you're touching loops with a non-reference variable at all - whenever there is no reference type involved, a copy should always be created?",https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-397703132,397703132,
MarcoFalke,2018-06-15T18:28:37Z,utACK d92204c900d55ebaf2af5c900162b3c2c8c296e2,https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-397705899,397705899,
theuni,2018-06-15T18:29:34Z,"From the pull-request to llvm that added the feature, it warns about:\n\n>1. for (const Foo &x : Foos), where the range Foos does not return a copy. This warning will suggest using the non-reference type so the copy is obvious.\n\n>2. for (const Foo x : Foos), where the range Foos does return a reference, but is copied into x. This warning will suggest using the reference type to prevent a cop",https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-397706139,397706139,
practicalswift,2018-06-15T20:01:45Z,"utACK d92204c900d55ebaf2af5c900162b3c2c8c296e2\n\nThanks for making this fix persistent using `-Wrange-loop-analysis`. Automation is our friend :-)",https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-397727466,397727466,
Empact,2018-06-15T21:15:25Z,utACK d92204c I also like the const_txiter suggestion,https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-397744243,397744243,
promag,2018-06-23T20:48:52Z,utACK d92204c.,https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-399709799,399709799,
laanwj,2018-06-24T14:36:51Z,utACK d92204c900d55ebaf2af5c900162b3c2c8c296e2,https://github.com/bitcoin/bitcoin/pull/13480#issuecomment-399761237,399761237,
MarcoFalke,2018-06-15T18:28:22Z,"I'd slightly prefer if you added a\n\n```cpp\nusing const_txiter = indexed_transaction_set::nth_index<0>::type::const_iterator;\n```\n and used that instead, since that seemed to be the intention here.",https://github.com/bitcoin/bitcoin/pull/13480#discussion_r195827502,195827502,src/miner.cpp
theuni,2018-06-15T18:30:00Z,Agreed!,https://github.com/bitcoin/bitcoin/pull/13480#discussion_r195827978,195827978,src/miner.cpp
MarcoFalke,2018-06-17T23:33:51Z,"Actually, iterators are always const for multindex sets, so I'd slightly prefer if that was clarified in the header file:\n\n```diff\ndiff --git a/src/txmempool.h b/src/txmempool.h\nindex bda812b42f..ebfcf36e11 100644\n--- a/src/txmempool.h\n+++ b/src/txmempool.h\n@@ -486,7 +486,7 @@ public:\n     mutable CCriticalSection cs;\n     indexed_transaction_set mapTx GUARDED_BY(cs);\n \n-    ",https://github.com/bitcoin/bitcoin/pull/13480#discussion_r195945127,195945127,src/miner.cpp
MarcoFalke,2018-06-18T15:52:00Z,"That can be done in a separate pull, though. Has nothing to do with your changes.",https://github.com/bitcoin/bitcoin/pull/13480#discussion_r196130309,196130309,src/miner.cpp
