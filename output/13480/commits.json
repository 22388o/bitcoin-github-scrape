[
  {
    "sha": "466e16e0e8523909f9968c5823691b1d4a3d8175",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjZlMTZlMGU4NTIzOTA5Zjk5NjhjNTgyMzY5MWIxZDRhM2Q4MTc1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-06-15T17:38:54Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-06-15T17:40:00Z"
      },
      "message": "cleanup: avoid hidden copies in range-for loops",
      "tree": {
        "sha": "13b29dab45a96166b084144cacf86396db8638fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13b29dab45a96166b084144cacf86396db8638fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/466e16e0e8523909f9968c5823691b1d4a3d8175",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/466e16e0e8523909f9968c5823691b1d4a3d8175",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/466e16e0e8523909f9968c5823691b1d4a3d8175",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/466e16e0e8523909f9968c5823691b1d4a3d8175/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be27048a1842b76de5b230383c1466b72dfd8cc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be27048a1842b76de5b230383c1466b72dfd8cc5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be27048a1842b76de5b230383c1466b72dfd8cc5"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "738ccad1b9caf0a4f02dc01b5e6c9b61d2105bd1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/466e16e0e8523909f9968c5823691b1d4a3d8175/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/466e16e0e8523909f9968c5823691b1d4a3d8175/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=466e16e0e8523909f9968c5823691b1d4a3d8175",
        "patch": "@@ -209,7 +209,7 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n //   segwit activation)\n bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& package)\n {\n-    for (const CTxMemPool::txiter it : package) {\n+    for (CTxMemPool::txiter it : package) {\n         if (!IsFinalTx(it->GetTx(), nHeight, nLockTimeCutoff))\n             return false;\n         if (!fIncludeWitness && it->GetTx().HasWitness())\n@@ -241,7 +241,7 @@ int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& already\n         indexed_modified_transaction_set &mapModifiedTx)\n {\n     int nDescendantsUpdated = 0;\n-    for (const CTxMemPool::txiter it : alreadyAdded) {\n+    for (CTxMemPool::txiter it : alreadyAdded) {\n         CTxMemPool::setEntries descendants;\n         mempool.CalculateDescendants(it, descendants);\n         // Insert all descendants (not yet in block) into the modified set"
      },
      {
        "sha": "a3a10aac187eefad6bf143d2d9fb17ab86583118",
        "filename": "src/qt/platformstyle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/466e16e0e8523909f9968c5823691b1d4a3d8175/src/qt/platformstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/466e16e0e8523909f9968c5823691b1d4a3d8175/src/qt/platformstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/platformstyle.cpp?ref=466e16e0e8523909f9968c5823691b1d4a3d8175",
        "patch": "@@ -46,7 +46,7 @@ void MakeSingleColorImage(QImage& img, const QColor& colorbase)\n QIcon ColorizeIcon(const QIcon& ico, const QColor& colorbase)\n {\n     QIcon new_ico;\n-    for (const QSize sz : ico.availableSizes())\n+    for (const QSize& sz : ico.availableSizes())\n     {\n         QImage img(ico.pixmap(sz).toImage());\n         MakeSingleColorImage(img, colorbase);"
      },
      {
        "sha": "d9d803ac7dc9294a1f05e17d385e6f0553902ea8",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/466e16e0e8523909f9968c5823691b1d4a3d8175/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/466e16e0e8523909f9968c5823691b1d4a3d8175/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=466e16e0e8523909f9968c5823691b1d4a3d8175",
        "patch": "@@ -853,7 +853,7 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n     ss << hash;\n     ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase ? 1u : 0u);\n     stats.nTransactions++;\n-    for (const auto output : outputs) {\n+    for (const auto& output : outputs) {\n         ss << VARINT(output.first + 1);\n         ss << output.second.out.scriptPubKey;\n         ss << VARINT(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);"
      },
      {
        "sha": "8090172e3f2d9880952a2fbae78736936fe3946a",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/466e16e0e8523909f9968c5823691b1d4a3d8175/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/466e16e0e8523909f9968c5823691b1d4a3d8175/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=466e16e0e8523909f9968c5823691b1d4a3d8175",
        "patch": "@@ -69,12 +69,12 @@ void CTxMemPool::UpdateForDescendants(txiter updateIt, cacheMap &cachedDescendan\n         setAllDescendants.insert(cit);\n         stageEntries.erase(cit);\n         const setEntries &setChildren = GetMemPoolChildren(cit);\n-        for (const txiter childEntry : setChildren) {\n+        for (txiter childEntry : setChildren) {\n             cacheMap::iterator cacheIt = cachedDescendants.find(childEntry);\n             if (cacheIt != cachedDescendants.end()) {\n                 // We've already calculated this one, just add the entries for this set\n                 // but don't traverse again.\n-                for (const txiter cacheEntry : cacheIt->second) {\n+                for (txiter cacheEntry : cacheIt->second) {\n                     setAllDescendants.insert(cacheEntry);\n                 }\n             } else if (!setAllDescendants.count(childEntry)) {"
      },
      {
        "sha": "598b3dadd7bd99869f7414ffbf12a6c9b1752bde",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/466e16e0e8523909f9968c5823691b1d4a3d8175/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/466e16e0e8523909f9968c5823691b1d4a3d8175/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=466e16e0e8523909f9968c5823691b1d4a3d8175",
        "patch": "@@ -651,7 +651,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         view.SetBackend(viewMemPool);\n \n         // do all inputs exist?\n-        for (const CTxIn txin : tx.vin) {\n+        for (const CTxIn& txin : tx.vin) {\n             if (!pcoinsTip->HaveCoinInCache(txin.prevout)) {\n                 coins_to_uncache.push_back(txin.prevout);\n             }\n@@ -957,7 +957,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         }\n \n         // Remove conflicting transactions from the mempool\n-        for (const CTxMemPool::txiter it : allConflicting)\n+        for (CTxMemPool::txiter it : allConflicting)\n         {\n             LogPrint(BCLog::MEMPOOL, \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n                     it->GetTx().GetHash().ToString(),"
      },
      {
        "sha": "74312b7124e82e5154bec1df01dc5a112a443fc9",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/466e16e0e8523909f9968c5823691b1d4a3d8175/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/466e16e0e8523909f9968c5823691b1d4a3d8175/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=466e16e0e8523909f9968c5823691b1d4a3d8175",
        "patch": "@@ -200,7 +200,7 @@ bool WalletInit::Verify() const\n     // Keep track of each wallet absolute path to detect duplicates.\n     std::set<fs::path> wallet_paths;\n \n-    for (const auto wallet_file : wallet_files) {\n+    for (const auto& wallet_file : wallet_files) {\n         fs::path wallet_path = fs::absolute(wallet_file, GetWalletDir());\n \n         if (!wallet_paths.insert(wallet_path).second) {"
      }
    ]
  },
  {
    "sha": "d92204c900d55ebaf2af5c900162b3c2c8c296e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTIyMDRjOTAwZDU1ZWJhZjJhZjVjOTAwMTYyYjNjMmM4YzI5NmUy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-06-15T17:39:12Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-06-15T17:40:07Z"
      },
      "message": "build: add warning to detect hidden copies in range-for loops",
      "tree": {
        "sha": "d6c2ed3b29aaca8800540a8abee7a270a25e5d88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6c2ed3b29aaca8800540a8abee7a270a25e5d88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d92204c900d55ebaf2af5c900162b3c2c8c296e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d92204c900d55ebaf2af5c900162b3c2c8c296e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d92204c900d55ebaf2af5c900162b3c2c8c296e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d92204c900d55ebaf2af5c900162b3c2c8c296e2/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "466e16e0e8523909f9968c5823691b1d4a3d8175",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/466e16e0e8523909f9968c5823691b1d4a3d8175",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/466e16e0e8523909f9968c5823691b1d4a3d8175"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "71e4c97abaac288c55f8ee1309bd156d6acd29c3",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d92204c900d55ebaf2af5c900162b3c2c8c296e2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d92204c900d55ebaf2af5c900162b3c2c8c296e2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d92204c900d55ebaf2af5c900162b3c2c8c296e2",
        "patch": "@@ -301,6 +301,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n \n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and"
      }
    ]
  }
]