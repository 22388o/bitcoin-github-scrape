jonasschnelli,2020-02-19 17:34:47,"While this is an impressive piece of work, I don't think it makes sense to add layer 2 functionality to this project. Using the same repository, the same codebase, will automatically make reviews harder and will increase the risk of introducing critical bugs that impact all areas of the software.\n\nInstead of clutching everything together, we should try to achieve process separation (wallet / n",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588345702,588345702,
ariard,2020-02-19 20:03:17,"Thanks @icota for this cool PoC, that's really impressive but I do share Jonas opinion here. Better would be to spend time on process separation/interface cleaning/reusable library than pouring more stuff in one repository which would slow down development process of every component involved. It would be great for bitcoin ecosystem to reuse Core components like wallet utxo-management or fee-bumpin",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588421629,588421629,
luke-jr,2020-02-19 21:45:13,"> What are the benefits of this over a separated Bitcoin-Core & c-lightning (or any other ln daemon)?\n\nPresumably one hypothetical benefit is not having a separate wallet.",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588487315,588487315,
JeremyRubin,2020-02-19 22:46:54,"Assume you were to rebase this on top of @ryanofsky's process isolated wallet, could you keep all of the rust integrated stuff in the wallet process? Can the rust ln networking stuff be running a separate process from most of the wallet stuff?\n\nI think it would be a pretty decent design that you can offer a wallet module compiled with or without lightning, and then the ""core node"" software (wh",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588513055,588513055,
luke-jr,2020-02-20 00:09:08,"Can you split the rust-lightning code out of this, at least? Check for it in configure and dynamic link to its library...",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588540559,588540559,
laanwj,2020-02-20 08:29:26,"I'm very divided about this. I's impressive work, but also, I don't want this project to compete with c-lightning, lnd et al. It's their own specialty, they do what they do well, and maintaining the core validation layer is enough work for us. There shouldn't be more going through the bottleneck of bitcoin core review. \n(also there's the more abstract but not less important concern of layer 2 be",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588758644,588758644,
laanwj,2020-02-20 09:12:20,">  Presumably one hypothetical benefit is not having a separate wallet.\n\nPresumably, if people want to pursue advanced mobile wallet functionality (I heard about Bluetooth integrations, or device power management, NFC and now L2 integration)—this is all very cool, but I think we need to limit the scope of this project, these are so far from *block/transaction validation*, the critical mission ",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588817460,588817460,
icota,2020-02-20 09:32:18,"Thank you all for the feedback, I really appreciate it.\n\n> What are the benefits of this over a separated Bitcoin-Core & c-lightning (or any other ln daemon)?\n> If the user interface should be improved, one could developer a new type of a `bitcoin-cli` (a command-line client) that combines the calls to Bitcoin Core and a lightning daemon.\n\n@jonasschnelli To open a channel in your scenari",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588845218,588845218,
fanquake,2020-02-20 09:38:50,"I agree with @laanwj and most of the other commentors here. These comments:\n> Presumably, if people want to pursue advanced mobile wallet functionality (I heard about Bluetooth integrations, or device power management, NFC and now L2 integration)—this is all very cool, but I think we need to limit the scope of this project, these are so far from block/transaction validation, the critical mission",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588854122,588854122,
Sjors,2020-02-20 15:55:04,"Can you make this repository a submodule? If that works, then hopefully you only need some modest changes in this repo, e.g. a way to insert RPC methods, or helper classes like `BlockProviderState`. That way you get to have a monolithic app for mobile.",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-589151124,589151124,
luke-jr,2020-02-20 17:32:22,">@luke-jr It would have to look for much more than rust-lightning so I think the above approach is more appropriate.\n\nIt's not. Besides, what else would it need to look for? If rust-lightning itself has dependencies, consumers of rust-lightning shouldn't need to care...",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-589215101,589215101,
ariard,2020-02-20 18:55:33,"> I say crucially because, on mobile, monolithic is the only way to go. Multiple processes and IPC pose huge challenges on Android and this situation is not likely to improve (iOS is completely locked down). Take a look at this c-lightning issue and the following comments.\n\nIMO the way to go is first to make Core wallet running as a standalone process, then when it's well-done you can start to",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-589251602,589251602,
icota,2020-02-20 19:06:13,"> Besides, what else would it need to look for? If rust-lightning itself has dependencies, consumers of rust-lightning shouldn't need to care...\n\n`rust-lightning-invoice` is another dependency (of this PR). But okay, two dependencies are not a big deal.\n\n> Can you make this repository a submodule? If that works, then hopefully you only need some modest changes in this repo, e.g. a way to i",https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-589256280,589256280,
