[
  {
    "sha": "c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2UzNzAwNTQwZDhlMmY1YjI3MzhiNmQwYTRlODgyZGI5ZDQ1MGEy",
    "commit": {
      "author": {
        "name": "Aaron Hook",
        "email": "ahook@protonmail.com",
        "date": "2019-12-29T21:04:02Z"
      },
      "committer": {
        "name": "Aaron Hook",
        "email": "ahook@protonmail.com",
        "date": "2019-12-29T21:04:02Z"
      },
      "message": "refactor: Use uint16_t instead of unsigned short",
      "tree": {
        "sha": "51d068b317d58f362571a60f42c2f0886c54206a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51d068b317d58f362571a60f42c2f0886c54206a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b931f61b9ab098ea4ea8fbe4cbf0b03c566c3f63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b931f61b9ab098ea4ea8fbe4cbf0b03c566c3f63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b931f61b9ab098ea4ea8fbe4cbf0b03c566c3f63"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 28,
      "deletions": 22
    },
    "files": [
      {
        "sha": "2648186123f48d8e11ac5c44a512487122f33ba4",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -8,6 +8,7 @@\n #include <addrman.h>\n #include <chainparams.h>\n #include <clientversion.h>\n+#include <cstdint>\n #include <hash.h>\n #include <random.h>\n #include <streams.h>\n@@ -36,7 +37,7 @@ template <typename Data>\n bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data& data)\n {\n     // Generate random temporary filename\n-    unsigned short randv = 0;\n+    uint16_t randv = 0;\n     GetRandBytes((unsigned char*)&randv, sizeof(randv));\n     std::string tmpfn = strprintf(\"%s.%04x\", prefix, randv);\n "
      },
      {
        "sha": "9c13529975f5c7512ab8da480c89be085e7d637c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -41,6 +41,7 @@\n static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n #endif\n \n+#include <cstdint>\n #include <unordered_map>\n \n #include <math.h>\n@@ -96,9 +97,9 @@ void CConnman::AddOneShot(const std::string& strDest)\n     vOneShots.push_back(strDest);\n }\n \n-unsigned short GetListenPort()\n+uint16_t GetListenPort()\n {\n-    return (unsigned short)(gArgs.GetArg(\"-port\", Params().GetDefaultPort()));\n+    return (uint16_t)(gArgs.GetArg(\"-port\", Params().GetDefaultPort()));\n }\n \n // find 'best' local address for a particular peer"
      },
      {
        "sha": "d5521aadea063966710cab8cc1175d079ec89224",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -25,8 +25,8 @@\n #include <threadinterrupt.h>\n \n #include <atomic>\n+#include <cstdint>\n #include <deque>\n-#include <stdint.h>\n #include <thread>\n #include <memory>\n #include <condition_variable>\n@@ -484,7 +484,7 @@ void Discover();\n void StartMapPort();\n void InterruptMapPort();\n void StopMapPort();\n-unsigned short GetListenPort();\n+uint16_t GetListenPort();\n \n struct CombinerAll\n {"
      },
      {
        "sha": "dfc43f63677b26aabe45a2b73f1154c0a9e6a423",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -3,6 +3,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n@@ -570,15 +571,15 @@ CService::CService() : port(0)\n {\n }\n \n-CService::CService(const CNetAddr& cip, unsigned short portIn) : CNetAddr(cip), port(portIn)\n+CService::CService(const CNetAddr& cip, uint16_t portIn) : CNetAddr(cip), port(portIn)\n {\n }\n \n-CService::CService(const struct in_addr& ipv4Addr, unsigned short portIn) : CNetAddr(ipv4Addr), port(portIn)\n+CService::CService(const struct in_addr& ipv4Addr, uint16_t portIn) : CNetAddr(ipv4Addr), port(portIn)\n {\n }\n \n-CService::CService(const struct in6_addr& ipv6Addr, unsigned short portIn) : CNetAddr(ipv6Addr), port(portIn)\n+CService::CService(const struct in6_addr& ipv6Addr, uint16_t portIn) : CNetAddr(ipv6Addr), port(portIn)\n {\n }\n \n@@ -606,7 +607,7 @@ bool CService::SetSockAddr(const struct sockaddr *paddr)\n     }\n }\n \n-unsigned short CService::GetPort() const\n+uint16_t CService::GetPort() const\n {\n     return port;\n }"
      },
      {
        "sha": "81b39bccd38f3d6c1747acb0d4f260884d111483",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -12,7 +12,7 @@\n #include <compat.h>\n #include <serialize.h>\n \n-#include <stdint.h>\n+#include <cstdint>\n #include <string>\n #include <vector>\n \n@@ -143,10 +143,10 @@ class CService : public CNetAddr\n \n     public:\n         CService();\n-        CService(const CNetAddr& ip, unsigned short port);\n-        CService(const struct in_addr& ipv4Addr, unsigned short port);\n+        CService(const CNetAddr& ip, uint16_t port);\n+        CService(const struct in_addr& ipv4Addr, uint16_t port);\n         explicit CService(const struct sockaddr_in& addr);\n-        unsigned short GetPort() const;\n+        uint16_t GetPort() const;\n         bool GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const;\n         bool SetSockAddr(const struct sockaddr* paddr);\n         friend bool operator==(const CService& a, const CService& b);\n@@ -157,7 +157,7 @@ class CService : public CNetAddr\n         std::string ToStringPort() const;\n         std::string ToStringIPPort() const;\n \n-        CService(const struct in6_addr& ipv6Addr, unsigned short port);\n+        CService(const struct in6_addr& ipv6Addr, uint16_t port);\n         explicit CService(const struct sockaddr_in6& addr);\n \n         ADD_SERIALIZE_METHODS;"
      },
      {
        "sha": "997e448cc7ef8a8bbaf15bd161c390747d07ada3",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -11,6 +11,7 @@\n #include <util/strencodings.h>\n \n #include <atomic>\n+#include <cstdint>\n \n #ifndef WIN32\n #include <fcntl.h>\n@@ -781,11 +782,11 @@ bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int\n         ProxyCredentials random_auth;\n         static std::atomic_int counter(0);\n         random_auth.username = random_auth.password = strprintf(\"%i\", counter++);\n-        if (!Socks5(strDest, (unsigned short)port, &random_auth, hSocket)) {\n+        if (!Socks5(strDest, (uint16_t)port, &random_auth, hSocket)) {\n             return false;\n         }\n     } else {\n-        if (!Socks5(strDest, (unsigned short)port, 0, hSocket)) {\n+        if (!Socks5(strDest, (uint16_t)port, 0, hSocket)) {\n             return false;\n         }\n     }"
      },
      {
        "sha": "a6152f22bdc6b510a355b305ef01533acc0133f2",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_QT_OPTIONSMODEL_H\n \n #include <amount.h>\n+#include <cstdint>\n \n #include <QAbstractListModel>\n \n@@ -14,7 +15,7 @@ class Node;\n }\n \n extern const char *DEFAULT_GUI_PROXY_HOST;\n-static constexpr unsigned short DEFAULT_GUI_PROXY_PORT = 9050;\n+static constexpr uint16_t DEFAULT_GUI_PROXY_PORT = 9050;\n \n /** Interface from Qt to configuration data structure for Bitcoin client.\n    To Qt, the options are presented as a list with the different options"
      },
      {
        "sha": "df169a0194a1f2155ec8824c3d89e961efd306cb",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -9,12 +9,12 @@\n #include <compat/endian.h>\n \n #include <algorithm>\n+#include <cstdint>\n #include <ios>\n #include <limits>\n #include <map>\n #include <memory>\n #include <set>\n-#include <stdint.h>\n #include <string>\n #include <string.h>\n #include <utility>\n@@ -252,7 +252,7 @@ template<typename Stream> inline void Unserialize(Stream& s, bool& a) { char f=s\n inline unsigned int GetSizeOfCompactSize(uint64_t nSize)\n {\n     if (nSize < 253)             return sizeof(unsigned char);\n-    else if (nSize <= std::numeric_limits<unsigned short>::max()) return sizeof(unsigned char) + sizeof(unsigned short);\n+    else if (nSize <= std::numeric_limits<uint16_t>::max()) return sizeof(unsigned char) + sizeof(uint16_t);\n     else if (nSize <= std::numeric_limits<unsigned int>::max())  return sizeof(unsigned char) + sizeof(unsigned int);\n     else                         return sizeof(unsigned char) + sizeof(uint64_t);\n }\n@@ -266,7 +266,7 @@ void WriteCompactSize(Stream& os, uint64_t nSize)\n     {\n         ser_writedata8(os, nSize);\n     }\n-    else if (nSize <= std::numeric_limits<unsigned short>::max())\n+    else if (nSize <= std::numeric_limits<uint16_t>::max())\n     {\n         ser_writedata8(os, 253);\n         ser_writedata16(os, nSize);"
      },
      {
        "sha": "94621f20bcb02260518db16d5a714a92cd48df51",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e3700540d8e2f5b2738b6d0a4e882db9d450a2/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=c3e3700540d8e2f5b2738b6d0a4e882db9d450a2",
        "patch": "@@ -5,6 +5,7 @@\n #include <addrdb.h>\n #include <addrman.h>\n #include <clientversion.h>\n+#include <cstdint>\n #include <test/util/setup_common.h>\n #include <string>\n #include <boost/test/unit_test.hpp>\n@@ -81,10 +82,10 @@ BOOST_FIXTURE_TEST_SUITE(net_tests, BasicTestingSetup)\n BOOST_AUTO_TEST_CASE(cnode_listen_port)\n {\n     // test default\n-    unsigned short port = GetListenPort();\n+    uint16_t port = GetListenPort();\n     BOOST_CHECK(port == Params().GetDefaultPort());\n     // test set port\n-    unsigned short altPort = 12345;\n+    uint16_t altPort = 12345;\n     BOOST_CHECK(gArgs.SoftSetArg(\"-port\", std::to_string(altPort)));\n     port = GetListenPort();\n     BOOST_CHECK(port == altPort);"
      }
    ]
  }
]