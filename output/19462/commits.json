[
  {
    "sha": "e70512a83c69bc85e96b08ade725594eda3e230f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzA1MTJhODNjNjliYzg1ZTk2YjA4YWRlNzI1NTk0ZWRhM2UyMzBm",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T17:38:44Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:18:01Z"
      },
      "message": "Make ordering of zmq consumption irrelevant to functional test",
      "tree": {
        "sha": "56624fb8da2a2a299eb9127829747eceff8ce272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56624fb8da2a2a299eb9127829747eceff8ce272"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e70512a83c69bc85e96b08ade725594eda3e230f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70512a83c69bc85e96b08ade725594eda3e230f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e70512a83c69bc85e96b08ade725594eda3e230f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70512a83c69bc85e96b08ade725594eda3e230f/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37485baa275147470aa605e30654a8e42b3f9532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37485baa275147470aa605e30654a8e42b3f9532",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37485baa275147470aa605e30654a8e42b3f9532"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 18,
      "deletions": 14
    },
    "files": [
      {
        "sha": "863173b0a49644ca8c3023930a76341a204f16a8",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e70512a83c69bc85e96b08ade725594eda3e230f/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e70512a83c69bc85e96b08ade725594eda3e230f/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=e70512a83c69bc85e96b08ade725594eda3e230f",
        "patch": "@@ -54,28 +54,31 @@ def run_test(self):\n             self.ctx.destroy(linger=None)\n \n     def test_basic(self):\n-        # All messages are received in the same socket which means\n-        # that this test fails if the publishing order changes.\n-        # Note that the publishing order is not defined in the documentation and\n-        # is subject to change.\n         import zmq\n \n         # Invalid zmq arguments don't take down the node, see #17185.\n         self.restart_node(0, [\"-zmqpubrawtx=foo\", \"-zmqpubhashtx=bar\"])\n \n         address = 'tcp://127.0.0.1:28332'\n-        socket = self.ctx.socket(zmq.SUB)\n-        socket.set(zmq.RCVTIMEO, 60000)\n+        sockets = []\n+        subs = []\n+        services = [b\"hashblock\", b\"hashtx\", b\"rawblock\", b\"rawtx\"]\n+        for service in services:\n+            sockets.append(self.ctx.socket(zmq.SUB))\n+            sockets[-1].set(zmq.RCVTIMEO, 60000)\n+            subs.append(ZMQSubscriber(sockets[-1], service))\n \n         # Subscribe to all available topics.\n-        hashblock = ZMQSubscriber(socket, b\"hashblock\")\n-        hashtx = ZMQSubscriber(socket, b\"hashtx\")\n-        rawblock = ZMQSubscriber(socket, b\"rawblock\")\n-        rawtx = ZMQSubscriber(socket, b\"rawtx\")\n+        hashblock = subs[0]\n+        hashtx = subs[1]\n+        rawblock = subs[2]\n+        rawtx = subs[3]\n \n         self.restart_node(0, [\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [hashblock, hashtx, rawblock, rawtx]])\n         connect_nodes(self.nodes[0], 1)\n-        socket.connect(address)\n+        for socket in sockets:\n+            socket.connect(address)\n+\n         # Relax so that the subscriber is ready before publishing zmq messages\n         sleep(0.2)\n \n@@ -96,15 +99,16 @@ def test_basic(self):\n             tx.calc_sha256()\n             assert_equal(tx.hash, txid.hex())\n \n+            # Should receive the generated raw block.\n+            block = rawblock.receive()\n+            assert_equal(genhashes[x], hash256_reversed(block[:80]).hex())\n+\n             # Should receive the generated block hash.\n             hash = hashblock.receive().hex()\n             assert_equal(genhashes[x], hash)\n             # The block should only have the coinbase txid.\n             assert_equal([txid.hex()], self.nodes[1].getblock(hash)[\"tx\"])\n \n-            # Should receive the generated raw block.\n-            block = rawblock.receive()\n-            assert_equal(genhashes[x], hash256_reversed(block[:80]).hex())\n \n         if self.is_wallet_compiled():\n             self.log.info(\"Wait for tx from second node\")"
      }
    ]
  },
  {
    "sha": "2399a0600ca9c4b676fa2f97520b8ecc44642246",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzk5YTA2MDBjYTljNGI2NzZmYTJmOTc1MjBiOGVjYzQ0NjQyMjQ2",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T17:43:13Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:18:01Z"
      },
      "message": "Add test case for mempool->block zmq notification",
      "tree": {
        "sha": "e4f155e628c8acb9981541c3d4c92e869c46120f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4f155e628c8acb9981541c3d4c92e869c46120f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2399a0600ca9c4b676fa2f97520b8ecc44642246",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e70512a83c69bc85e96b08ade725594eda3e230f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70512a83c69bc85e96b08ade725594eda3e230f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e70512a83c69bc85e96b08ade725594eda3e230f"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "872a1bb718ba4dab10d862e438c682bba8deaae7",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2399a0600ca9c4b676fa2f97520b8ecc44642246/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2399a0600ca9c4b676fa2f97520b8ecc44642246/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=2399a0600ca9c4b676fa2f97520b8ecc44642246",
        "patch": "@@ -123,6 +123,13 @@ def test_basic(self):\n             hex = rawtx.receive()\n             assert_equal(payment_txid, hash256_reversed(hex).hex())\n \n+            # Mining the block with this tx should result in second notification\n+            # after coinbase tx notification\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            hashtx.receive()\n+            txid = hashtx.receive()\n+            assert_equal(payment_txid, txid.hex())\n+\n \n         self.log.info(\"Test the getzmqnotifications RPC\")\n         assert_equal(self.nodes[0].getzmqnotifications(), ["
      }
    ]
  },
  {
    "sha": "a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGY0ZjljOTgzZTU3Y2M5N2VjYmM1NmQwMTc3ZWFmMTg1NGM4NDJj",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T17:59:34Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:18:01Z"
      },
      "message": "Add zmq test for transaction pub during reorg",
      "tree": {
        "sha": "ae8ff1f6e774bd0108ec3111336b5098b4f3df1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae8ff1f6e774bd0108ec3111336b5098b4f3df1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2399a0600ca9c4b676fa2f97520b8ecc44642246",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2399a0600ca9c4b676fa2f97520b8ecc44642246"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 34,
      "deletions": 7
    },
    "files": [
      {
        "sha": "82ed1d731db859c86c682c8f6cb9fdfa1c085c87",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 34,
        "deletions": 7,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
        "patch": "@@ -144,28 +144,55 @@ def test_basic(self):\n     def test_reorg(self):\n         import zmq\n         address = 'tcp://127.0.0.1:28333'\n-        socket = self.ctx.socket(zmq.SUB)\n-        socket.set(zmq.RCVTIMEO, 60000)\n-        hashblock = ZMQSubscriber(socket, b'hashblock')\n+\n+        services = [b\"hashblock\", b\"hashtx\"]\n+        sockets = []\n+        subs = []\n+        for service in services:\n+            sockets.append(self.ctx.socket(zmq.SUB))\n+            # 2 second timeout to check end of notifications\n+            sockets[-1].set(zmq.RCVTIMEO, 2000)\n+            subs.append(ZMQSubscriber(sockets[-1], service))\n+\n+        # Subscribe to all available topics.\n+        hashblock = subs[0]\n+        hashtx = subs[1]\n \n         # Should only notify the tip if a reorg occurs\n-        self.restart_node(0, ['-zmqpub%s=%s' % (hashblock.topic.decode(), address)])\n-        socket.connect(address)\n+        self.restart_node(0, [\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [hashblock, hashtx]])\n+        for socket in sockets:\n+            socket.connect(address)\n         # Relax so that the subscriber is ready before publishing zmq messages\n         sleep(0.2)\n \n         # Generate 1 block in nodes[0] and receive all notifications\n-        self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        disconnect_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+        disconnect_cb = self.nodes[0].getblock(disconnect_block)[\"tx\"][0]\n         assert_equal(self.nodes[0].getbestblockhash(), hashblock.receive().hex())\n+        hashtx.receive() # consume, already tested\n \n         # Generate 2 blocks in nodes[1]\n-        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n+        connect_blocks = self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n \n         # nodes[0] will reorg chain after connecting back nodes[1]\n         connect_nodes(self.nodes[0], 1)\n+        self.sync_all()\n \n         # Should receive nodes[1] tip\n         assert_equal(self.nodes[1].getbestblockhash(), hashblock.receive().hex())\n \n+        # During reorg, should only receive the last coinbase tx from tip\n+        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n+\n+        # But if we do a simple invalidate we announce the disconnected coinbase\n+        self.nodes[0].invalidateblock(connect_blocks[1])\n+        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n+        # And not the current tip\n+        try:\n+            hashtx.receive()\n+            raise Exception(\"Should have failed\")\n+        except zmq.error.Again:\n+            pass\n+\n if __name__ == '__main__':\n     ZMQTest().main()"
      }
    ]
  },
  {
    "sha": "7356292e1d7a44da8a2bd31c02c58d550bf38009",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzU2MjkyZTFkN2E0NGRhOGEyYmQzMWMwMmM1OGQ1NTBiZjM4MDA5",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:43:54Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-14T14:14:11Z"
      },
      "message": "Have zmq reorg test cover mempool txns",
      "tree": {
        "sha": "0671de5964c2732a5a83dc1972fe01f06e42b250",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0671de5964c2732a5a83dc1972fe01f06e42b250"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7356292e1d7a44da8a2bd31c02c58d550bf38009",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 23,
      "deletions": 13
    },
    "files": [
      {
        "sha": "ef4780cacb40c2aeb0584fd224584a564be1db42",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 23,
        "deletions": 13,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7356292e1d7a44da8a2bd31c02c58d550bf38009/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7356292e1d7a44da8a2bd31c02c58d550bf38009/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=7356292e1d7a44da8a2bd31c02c58d550bf38009",
        "patch": "@@ -142,6 +142,10 @@ def test_basic(self):\n         assert_equal(self.nodes[1].getzmqnotifications(), [])\n \n     def test_reorg(self):\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping reorg test because wallet is disabled\")\n+            return\n+\n         import zmq\n         address = 'tcp://127.0.0.1:28333'\n \n@@ -165,34 +169,40 @@ def test_reorg(self):\n         # Relax so that the subscriber is ready before publishing zmq messages\n         sleep(0.2)\n \n-        # Generate 1 block in nodes[0] and receive all notifications\n+        # Generate 1 block in nodes[0] with 1 mempool tx and receive all notifications\n+        payment_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n         disconnect_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n         disconnect_cb = self.nodes[0].getblock(disconnect_block)[\"tx\"][0]\n         assert_equal(self.nodes[0].getbestblockhash(), hashblock.receive().hex())\n-        hashtx.receive() # consume, already tested\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        assert_equal(hashtx.receive().hex(), disconnect_cb)\n \n         # Generate 2 blocks in nodes[1]\n         connect_blocks = self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n \n         # nodes[0] will reorg chain after connecting back nodes[1]\n         connect_nodes(self.nodes[0], 1)\n-        self.sync_all()\n+        self.sync_blocks() # tx in mempool valid but not advertised\n \n         # Should receive nodes[1] tip\n         assert_equal(self.nodes[1].getbestblockhash(), hashblock.receive().hex())\n \n-        # During reorg, should only receive the last coinbase tx from tip\n-        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n-\n-        # But if we do a simple invalidate we announce the disconnected coinbase\n+        # During reorg:\n+        # Get old payment transaction notification from disconnect and disconnected cb\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        assert_equal(hashtx.receive().hex(), disconnect_cb)\n+        # And the payment transaction again due to mempool entry\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        # And the new connected coinbases\n+        for i in [0, 1]:\n+            assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[i])[\"tx\"][0])\n+\n+        # If we do a simple invalidate we announce the disconnected coinbase\n         self.nodes[0].invalidateblock(connect_blocks[1])\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n-        # And not the current tip\n-        try:\n-            hashtx.receive()\n-            raise Exception(\"Should have failed\")\n-        except zmq.error.Again:\n-            pass\n+        # And the current tip\n+        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n if __name__ == '__main__':\n     ZMQTest().main()"
      }
    ]
  },
  {
    "sha": "544441e94f3738cd9f0446857f14c5ea16a35478",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDQ0NDFlOTRmMzczOGNkOWYwNDQ2ODU3ZjE0YzVlYTE2YTM1NDc4",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-07T18:49:16Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-14T14:16:23Z"
      },
      "message": "Add zmq notifications for evicted transactions, tests",
      "tree": {
        "sha": "842a9f4c0d582882c8258c0a9d89e9a432dc50b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/842a9f4c0d582882c8258c0a9d89e9a432dc50b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/544441e94f3738cd9f0446857f14c5ea16a35478",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544441e94f3738cd9f0446857f14c5ea16a35478",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/544441e94f3738cd9f0446857f14c5ea16a35478",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544441e94f3738cd9f0446857f14c5ea16a35478/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7356292e1d7a44da8a2bd31c02c58d550bf38009",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7356292e1d7a44da8a2bd31c02c58d550bf38009"
      }
    ],
    "stats": {
      "total": 156,
      "additions": 154,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ce8b521fcb4021d88c19bf87cf4074012327d93a",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -59,9 +59,11 @@ the command line or in the configuration file.\n Currently, the following notifications are supported:\n \n     -zmqpubhashtx=address\n+    -zmqpubhashtxevict=address\n     -zmqpubhashblock=address\n     -zmqpubrawblock=address\n     -zmqpubrawtx=address\n+    -zmqpubrawtxevict=address\n \n The socket type is PUB and the address must be a valid ZeroMQ socket\n address. The same address can be used in more than one notification.\n@@ -70,9 +72,11 @@ The option to set the PUB socket's outbound message high water mark\n (SNDHWM) may be set individually for each notification:\n \n     -zmqpubhashtxhwm=n\n+    -zmqpubhashtxevicthwm=n\n     -zmqpubhashblockhwm=n\n     -zmqpubrawblockhwm=n\n     -zmqpubrawtxhwm=n\n+    -zmqpubrawtxevicthwm=n\n \n The high water mark value must be an integer greater than or equal to 0.\n "
      },
      {
        "sha": "1c4ef2db5dbdd72639d589810c85edae7505aa8e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -481,21 +481,29 @@ void SetupServerArgs(NodeContext& node)\n \n #if ENABLE_ZMQ\n     gArgs.AddArg(\"-zmqpubhashblock=<address>\", \"Enable publish hash block in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n-    gArgs.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address> on entry into mempool, and appearance in blocks\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashtxevict=<address>\", \"Enable publish hash transaction in <address> upon mempool eviction other than through block inclusion\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawblock=<address>\", \"Enable publish raw block in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n-    gArgs.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address> on entry into mempool, and appearance in blocks\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawtxevict=<address>\", \"Enable publish raw transaction in <address> upon mempool eviction other than through block inclusion\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubhashblockhwm=<n>\", strprintf(\"Set publish hash block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubhashtxhwm=<n>\", strprintf(\"Set publish hash transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashtxevicthwm=<n>\", strprintf(\"Set publish evicted hash transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawblockhwm=<n>\", strprintf(\"Set publish raw block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawtxhwm=<n>\", strprintf(\"Set publish raw transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawtxevicthwm=<n>\", strprintf(\"Set publish evicted raw transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n #else\n     hidden_args.emplace_back(\"-zmqpubhashblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubhashtx=<address>\");\n+    hidden_args.emplace_back(\"-zmqpubhashtxevict=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawtx=<address>\");\n+    hidden_args.emplace_back(\"-zmqpubrawtxevict=<address>\");\n     hidden_args.emplace_back(\"-zmqpubhashblockhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubhashtxevicthwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawblockhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubrawtxevicthwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawtxhwm=<n>\");\n #endif\n "
      },
      {
        "sha": "0fc1438c654f99553e069480e852440e9b20e5c0",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -20,3 +20,8 @@ bool CZMQAbstractNotifier::NotifyTransaction(const CTransaction &/*transaction*/\n {\n     return true;\n }\n+\n+bool CZMQAbstractNotifier::NotifyTransactionEviction(const CTransaction &/*transaction*/, MemPoolRemovalReason reason)\n+{\n+    return true;\n+}"
      },
      {
        "sha": "10b16271445e78c2cc6c393e2087426a714510ab",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H\n #define BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H\n \n+#include <txmempool.h>\n #include <zmq/zmqconfig.h>\n \n class CBlockIndex;\n@@ -42,6 +43,7 @@ class CZMQAbstractNotifier\n \n     virtual bool NotifyBlock(const CBlockIndex *pindex);\n     virtual bool NotifyTransaction(const CTransaction &transaction);\n+    virtual bool NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason);\n \n protected:\n     void *psocket;"
      },
      {
        "sha": "a71d0dea5e2764c245dc9b621a8c8bb29474327e",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -44,8 +44,10 @@ CZMQNotificationInterface* CZMQNotificationInterface::Create()\n \n     factories[\"pubhashblock\"] = CZMQAbstractNotifier::Create<CZMQPublishHashBlockNotifier>;\n     factories[\"pubhashtx\"] = CZMQAbstractNotifier::Create<CZMQPublishHashTransactionNotifier>;\n+    factories[\"pubhashtxevict\"] = CZMQAbstractNotifier::Create<CZMQPublishHashTransactionEvictionNotifier>;\n     factories[\"pubrawblock\"] = CZMQAbstractNotifier::Create<CZMQPublishRawBlockNotifier>;\n     factories[\"pubrawtx\"] = CZMQAbstractNotifier::Create<CZMQPublishRawTransactionNotifier>;\n+    factories[\"pubrawtxevict\"] = CZMQAbstractNotifier::Create<CZMQPublishRawTransactionEvictionNotifier>;\n \n     for (const auto& entry : factories)\n     {\n@@ -177,6 +179,25 @@ void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&\n     }\n }\n \n+void CZMQNotificationInterface::TransactionRemovedFromMempool(const CTransactionRef& ptx, MemPoolRemovalReason reason)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->NotifyTransactionEviction(tx, reason))\n+        {\n+            i++;\n+        }\n+        else\n+        {\n+            notifier->Shutdown();\n+            i = notifiers.erase(i);\n+        }\n+    }\n+}\n+\n void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n     for (const CTransactionRef& ptx : pblock->vtx) {"
      },
      {
        "sha": "3a0929e3f7437f21baefc10cd56a4ed464d64d08",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -26,6 +26,7 @@ class CZMQNotificationInterface final : public CValidationInterface\n \n     // CValidationInterface\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) override;\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexDisconnected) override;\n     void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;"
      },
      {
        "sha": "f5c6c0688915ab4fb43446737bd7c2944c72cdf9",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -14,8 +14,10 @@ static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifi\n \n static const char *MSG_HASHBLOCK = \"hashblock\";\n static const char *MSG_HASHTX    = \"hashtx\";\n+static const char *MSG_HASHTX_EVICT = \"hashtxevict\";\n static const char *MSG_RAWBLOCK  = \"rawblock\";\n static const char *MSG_RAWTX     = \"rawtx\";\n+static const char *MSG_RAWTX_EVICT     = \"rawtxevict\";\n \n // Internal function to send multipart message\n static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n@@ -178,6 +180,16 @@ bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &t\n     return SendMessage(MSG_HASHTX, data, 32);\n }\n \n+bool CZMQPublishHashTransactionEvictionNotifier::NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason)\n+{\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(BCLog::ZMQ, \"zmq: Publish %s %s\\n\", MSG_HASHTX_EVICT, hash.GetHex());\n+    char data[32];\n+    for (unsigned int i = 0; i < 32; i++)\n+        data[31 - i] = hash.begin()[i];\n+    return SendMessage(MSG_HASHTX_EVICT, data, 32);\n+}\n+\n bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n     LogPrint(BCLog::ZMQ, \"zmq: Publish rawblock %s\\n\", pindex->GetBlockHash().GetHex());\n@@ -207,3 +219,12 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n     ss << transaction;\n     return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }\n+\n+bool CZMQPublishRawTransactionEvictionNotifier::NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason)\n+{\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(BCLog::ZMQ, \"zmq: Publish %s %s\\n\", MSG_RAWTX_EVICT, hash.GetHex());\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+    ss << transaction;\n+    return SendMessage(MSG_RAWTX_EVICT, &(*ss.begin()), ss.size());\n+}"
      },
      {
        "sha": "5b285df6e1cbb85a0c8d8c36563d26be5405ce58",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -40,6 +40,13 @@ class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n     bool NotifyTransaction(const CTransaction &transaction) override;\n };\n \n+class CZMQPublishHashTransactionEvictionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason) override;\n+};\n+\n+\n class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n {\n public:\n@@ -52,4 +59,10 @@ class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier\n     bool NotifyTransaction(const CTransaction &transaction) override;\n };\n \n+class CZMQPublishRawTransactionEvictionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason) override;\n+};\n+\n #endif // BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H"
      },
      {
        "sha": "223b46c757d9abf9a750b746f984d79446d6665e",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544441e94f3738cd9f0446857f14c5ea16a35478/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544441e94f3738cd9f0446857f14c5ea16a35478/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=544441e94f3738cd9f0446857f14c5ea16a35478",
        "patch": "@@ -48,6 +48,7 @@ def run_test(self):\n         try:\n             self.test_basic()\n             self.test_reorg()\n+            self.test_evict()\n         finally:\n             # Destroy the ZMQ context.\n             self.log.debug(\"Destroying ZMQ context\")\n@@ -204,5 +205,81 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_evict(self):\n+\n+        if not self.is_wallet_compiled():\n+\n+            return\n+\n+        import zmq\n+        address = 'tcp://127.0.0.1:28332'\n+\n+        # Short timeout to test that no messages are waiting\n+\n+\n+        services = [b\"hashtxevict\", b\"rawtxevict\"]\n+        sockets = []\n+        subs = []\n+        for service in services:\n+            sockets.append(self.ctx.socket(zmq.SUB))\n+            # 2 second timeout to check end of notifications\n+            sockets[-1].set(zmq.RCVTIMEO, 2000)\n+            subs.append(ZMQSubscriber(sockets[-1], service))\n+\n+        hashtx_evict = subs[0]\n+        rawtx_evict = subs[1]\n+\n+        for socket in sockets:\n+            socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+\n+        # Subscribe to all available topics.\n+        hashblock = subs[0]\n+        hashtx = subs[1]\n+\n+\n+        def check_no_messages():\n+\n+            try:\n+                hashtx_evict.receive()\n+                raise Exception(\"There should be no evicted transactions in the service!\")\n+            except zmq.error.Again:\n+                pass\n+\n+            try:\n+                rawtx_evict.receive()\n+                raise Exception(\"There should be no evicted transactions in the service!\")\n+            except zmq.error.Again:\n+                pass\n+\n+        self.restart_node(0, [\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [hashtx_evict, rawtx_evict]])\n+\n+        assert_equal(self.nodes[0].getzmqnotifications(), [\n+            {'type': 'pubhashtxevict', 'address': 'tcp://127.0.0.1:28332', 'hwm': 1000},\n+            {'type': 'pubrawtxevict', 'address': 'tcp://127.0.0.1:28332', 'hwm': 1000}\n+        ])\n+\n+        # Make a transaction, then evict it from mempool via RBF\n+        txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1, replaceable=True)\n+\n+        # Nothing has been replaced yet\n+        check_no_messages()\n+\n+        rbf_data = self.nodes[0].bumpfee(txid)\n+        assert rbf_data[\"txid\"] in self.nodes[0].getrawmempool()\n+\n+        assert_equal(hashtx_evict.receive(), bytearray.fromhex(txid))\n+        assert_equal(rawtx_evict.receive(), bytearray.fromhex(self.nodes[0].gettransaction(txid)[\"hex\"]))\n+\n+        # No additional messages should occur even if txns are added in mempool\n+        check_no_messages()\n+\n+        self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+\n+        # Even if a transaction is mined, it won't be published in this channel\n+        check_no_messages()\n+\n if __name__ == '__main__':\n     ZMQTest().main()"
      }
    ]
  },
  {
    "sha": "78a958372e6a47e16d478d0ae6c1c9952d8af6e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGE5NTgzNzJlNmE0N2UxNmQ0NzhkMGFlNmMxYzk5NTJkOGFmNmUy",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T14:15:29Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-14T14:16:23Z"
      },
      "message": "Deduplicate zmq txn message code",
      "tree": {
        "sha": "e2f864e9bf56ad2d8c1af9054ff5f89325fb4c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2f864e9bf56ad2d8c1af9054ff5f89325fb4c7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78a958372e6a47e16d478d0ae6c1c9952d8af6e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78a958372e6a47e16d478d0ae6c1c9952d8af6e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78a958372e6a47e16d478d0ae6c1c9952d8af6e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78a958372e6a47e16d478d0ae6c1c9952d8af6e2/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "544441e94f3738cd9f0446857f14c5ea16a35478",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544441e94f3738cd9f0446857f14c5ea16a35478",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/544441e94f3738cd9f0446857f14c5ea16a35478"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 23,
      "deletions": 22
    },
    "files": [
      {
        "sha": "d1b663d6b3d54316a05812ef66a15b118f14f163",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 22,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78a958372e6a47e16d478d0ae6c1c9952d8af6e2/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78a958372e6a47e16d478d0ae6c1c9952d8af6e2/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=78a958372e6a47e16d478d0ae6c1c9952d8af6e2",
        "patch": "@@ -170,24 +170,31 @@ bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n     return SendMessage(MSG_HASHBLOCK, data, 32);\n }\n \n-bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+bool CZMQAbstractPublishNotifier::NotifyTransactionX(const CTransaction &transaction, const char *pub_type)\n {\n     uint256 hash = transaction.GetHash();\n-    LogPrint(BCLog::ZMQ, \"zmq: Publish hashtx %s\\n\", hash.GetHex());\n-    char data[32];\n-    for (unsigned int i = 0; i < 32; i++)\n-        data[31 - i] = hash.begin()[i];\n-    return SendMessage(MSG_HASHTX, data, 32);\n+    LogPrint(BCLog::ZMQ, \"zmq: Publish %s %s\\n\", pub_type, hash.GetHex());\n+    if (pub_type == MSG_HASHTX || pub_type == MSG_HASHTX_EVICT) {\n+        char data[sizeof(uint256)];\n+        for (unsigned int i = 0; i < sizeof(data); i++) {\n+            data[31 - i] = hash.begin()[i];\n+        }\n+        return SendMessage(pub_type, data, sizeof(data));\n+    } else {\n+        CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ss << transaction;\n+        return SendMessage(pub_type, &(*ss.begin()), ss.size());\n+    }\n+}\n+\n+bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+{\n+    return NotifyTransactionX(transaction, MSG_HASHTX);\n }\n \n bool CZMQPublishHashTransactionEvictionNotifier::NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason)\n {\n-    uint256 hash = transaction.GetHash();\n-    LogPrint(BCLog::ZMQ, \"zmq: Publish %s %s\\n\", MSG_HASHTX_EVICT, hash.GetHex());\n-    char data[32];\n-    for (unsigned int i = 0; i < 32; i++)\n-        data[31 - i] = hash.begin()[i];\n-    return SendMessage(MSG_HASHTX_EVICT, data, 32);\n+    return NotifyTransactionX(transaction, MSG_HASHTX_EVICT);\n }\n \n bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n@@ -213,18 +220,10 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n \n bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n {\n-    uint256 hash = transaction.GetHash();\n-    LogPrint(BCLog::ZMQ, \"zmq: Publish rawtx %s\\n\", hash.GetHex());\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-    ss << transaction;\n-    return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n+    return NotifyTransactionX(transaction, MSG_RAWTX);\n }\n \n bool CZMQPublishRawTransactionEvictionNotifier::NotifyTransactionEviction(const CTransaction &transaction, MemPoolRemovalReason reason)\n {\n-    uint256 hash = transaction.GetHash();\n-    LogPrint(BCLog::ZMQ, \"zmq: Publish %s %s\\n\", MSG_RAWTX_EVICT, hash.GetHex());\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-    ss << transaction;\n-    return SendMessage(MSG_RAWTX_EVICT, &(*ss.begin()), ss.size());\n+    return NotifyTransactionX(transaction, MSG_RAWTX_EVICT);\n }"
      },
      {
        "sha": "1565f0c9c075db7eee0423d4710dc97e930322c9",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78a958372e6a47e16d478d0ae6c1c9952d8af6e2/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78a958372e6a47e16d478d0ae6c1c9952d8af6e2/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=78a958372e6a47e16d478d0ae6c1c9952d8af6e2",
        "patch": "@@ -26,6 +26,8 @@ class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n \n     bool Initialize(void *pcontext) override;\n     void Shutdown() override;\n+\n+    bool NotifyTransactionX(const CTransaction&, const char*); // Common code between txn publishers\n };\n \n class CZMQPublishHashBlockNotifier : public CZMQAbstractPublishNotifier"
      }
    ]
  }
]