[
  {
    "sha": "76af4eb876814a916dd4f26cf71faa20bdc54f2d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmFmNGViODc2ODE0YTkxNmRkNGYyNmNmNzFmYWEyMGJkYzU0ZjJk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-11-18T09:26:38Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-11-18T10:09:29Z"
      },
      "message": "[Qt] fix coincontrol sort issue",
      "tree": {
        "sha": "e4af8512e43dea534e8311401b468e95e289ddb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4af8512e43dea534e8311401b468e95e289ddb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76af4eb876814a916dd4f26cf71faa20bdc54f2d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYLtNaAAoJECnUvLZBb1Pssf8QAITxZ4RS+59QUK7Qqj8yplGd\nQ41x1q7lpfdQ/1sNHFuVGk1NdtJi5HROiTMR0J1oz2Mjiiop9iqcU8AgL3NNcWlj\nT4xySiJH1CKEs3j4WrFsZNF+r3yOYED9bYBl6NGCRwSHNzG7Z2GZrjY3VsFvnIsQ\noCEAUKJGUy+aWZO4cNeTNcl9W/TNGRqrhVgQSS8g7Ss52GQBNMz2lh79TZ7i6mkg\niN2hfTQtO9koHl/YTmx8g+UeNT8ltobYIOEU9bK92F/2b4kPa9+IcYTxpiN2XwU6\nvrWMYMkstJ7sKf8vM4BT4DfnyfmhOSBFpaAGoyEtvaOMvyc4dMXmHlVvB/E0gWl4\nkJuobxA71ufxoVBXx0vKCWhnIUst53fg9H5YqYOQYP7nlehTQq3PQFgOxMQe2Ikp\nLsSM4i5e+cNpPn01pG5vL6Yp1ImmNHTtx98F37x+CGhC2yS8Tmgfe3wl3nfhTb8q\n8oJAoa6uGRAlicIQdDmE/Tgn3B6HZqm6dnWyBH4zxZKTF0+htKnx94BBE9L1XlKM\nwO7ZZur7XVI6tp1NgelO+sSaxo2MnESVZeXwiHFPFIV8QU7gtZhM83fJ0u+CaJfQ\nIt56nuyeo4TUuf+BgqNHjhq9IWrwa5YyoTdsKHTOaIWw5AwXLs81gdmWnpAbYHax\nl40SJWpqD5OUDBEa1HV4\n=tgVj\n-----END PGP SIGNATURE-----",
        "payload": "tree e4af8512e43dea534e8311401b468e95e289ddb4\nparent 9346f8429957e356d21c665bab59fe45bcf1f74e\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1479461198 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1479463769 +0100\n\n[Qt] fix coincontrol sort issue\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76af4eb876814a916dd4f26cf71faa20bdc54f2d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76af4eb876814a916dd4f26cf71faa20bdc54f2d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76af4eb876814a916dd4f26cf71faa20bdc54f2d/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9346f8429957e356d21c665bab59fe45bcf1f74e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9346f8429957e356d21c665bab59fe45bcf1f74e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9346f8429957e356d21c665bab59fe45bcf1f74e"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 27,
      "deletions": 6
    },
    "files": [
      {
        "sha": "42a32a1a228e20b724b9062ef4e80d78f1540fec",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76af4eb876814a916dd4f26cf71faa20bdc54f2d/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76af4eb876814a916dd4f26cf71faa20bdc54f2d/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=76af4eb876814a916dd4f26cf71faa20bdc54f2d",
        "patch": "@@ -35,6 +35,15 @@ QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n+bool CCoinControlWidgetItem::operator<(const QTreeWidgetItem &other) const {\n+    int column = treeWidget()->sortColumn();\n+    if (column == CoinControlDialog::COLUMN_AMOUNT_INT64 || column == CoinControlDialog::COLUMN_AMOUNT_INT64)\n+        return data(CoinControlDialog::COLUMN_AMOUNT_INT64, Qt::DisplayRole).toULongLong() < other.data(CoinControlDialog::COLUMN_AMOUNT_INT64, Qt::DisplayRole).toULongLong();\n+    if (column == CoinControlDialog::COLUMN_DATE || column == CoinControlDialog::COLUMN_DATE_INT64)\n+        return data(CoinControlDialog::COLUMN_DATE_INT64, Qt::DisplayRole).toULongLong() < other.data(CoinControlDialog::COLUMN_DATE_INT64, Qt::DisplayRole).toULongLong();\n+    return QTreeWidgetItem::operator<(other);\n+}\n+\n CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::CoinControlDialog),\n@@ -658,7 +667,7 @@ void CoinControlDialog::updateView()\n     model->listCoins(mapCoins);\n \n     BOOST_FOREACH(const PAIRTYPE(QString, std::vector<COutput>)& coins, mapCoins) {\n-        QTreeWidgetItem *itemWalletAddress = new QTreeWidgetItem();\n+        CCoinControlWidgetItem *itemWalletAddress = new CCoinControlWidgetItem();\n         itemWalletAddress->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n         QString sWalletAddress = coins.first;\n         QString sWalletLabel = model->getAddressTableModel()->labelForAddress(sWalletAddress);\n@@ -686,9 +695,9 @@ void CoinControlDialog::updateView()\n             nSum += out.tx->vout[out.i].nValue;\n             nChildren++;\n \n-            QTreeWidgetItem *itemOutput;\n-            if (treeMode)    itemOutput = new QTreeWidgetItem(itemWalletAddress);\n-            else             itemOutput = new QTreeWidgetItem(ui->treeWidget);\n+            CCoinControlWidgetItem *itemOutput;\n+            if (treeMode)    itemOutput = new CCoinControlWidgetItem(itemWalletAddress);\n+            else             itemOutput = new CCoinControlWidgetItem(ui->treeWidget);\n             itemOutput->setFlags(flgCheckbox);\n             itemOutput->setCheckState(COLUMN_CHECKBOX,Qt::Unchecked);\n \n@@ -721,11 +730,11 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setData(COLUMN_AMOUNT_INT64, Qt::DisplayRole, QVariant((qlonglong)out.tx->vout[out.i].nValue)); // padding so that sorting works correctly\n \n             // date\n             itemOutput->setText(COLUMN_DATE, GUIUtil::dateTimeStr(out.tx->GetTxTime()));\n-            itemOutput->setText(COLUMN_DATE_INT64, strPad(QString::number(out.tx->GetTxTime()), 20, \" \"));\n+            itemOutput->setData(COLUMN_DATE_INT64, Qt::DisplayRole, QVariant((qlonglong)out.tx->GetTxTime()));\n \n             // confirmations\n             itemOutput->setText(COLUMN_CONFIRMATIONS, strPad(QString::number(out.nDepth), 8, \" \"));"
      },
      {
        "sha": "960e92f79b26053b931428f1ec56e2a6f83aba5f",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76af4eb876814a916dd4f26cf71faa20bdc54f2d/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76af4eb876814a916dd4f26cf71faa20bdc54f2d/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=76af4eb876814a916dd4f26cf71faa20bdc54f2d",
        "patch": "@@ -28,6 +28,17 @@ namespace Ui {\n \n #define ASYMP_UTF8 \"\\xE2\\x89\\x88\"\n \n+class CCoinControlWidgetItem : public QTreeWidgetItem\n+{\n+public:\n+    CCoinControlWidgetItem(QTreeWidget *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n+    CCoinControlWidgetItem(int type = Type) : QTreeWidgetItem(type) {}\n+    CCoinControlWidgetItem(QTreeWidgetItem *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n+\n+    bool operator<(const QTreeWidgetItem &other) const;\n+};\n+\n+\n class CoinControlDialog : public QDialog\n {\n     Q_OBJECT\n@@ -76,6 +87,7 @@ class CoinControlDialog : public QDialog\n         COLUMN_AMOUNT_INT64,\n         COLUMN_DATE_INT64\n     };\n+    friend class CCoinControlWidgetItem;\n \n     // some columns have a hidden column containing the value used for sorting\n     int getMappedColumn(int column, bool fVisibleColumn = true)"
      }
    ]
  },
  {
    "sha": "4231032bfcb9728f0f629b3d67884ba9de63e4ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjMxMDMyYmZjYjk3MjhmMGY2MjliM2Q2Nzg4NGJhOWRlNjNlNGZm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-11-18T13:33:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-11-20T19:18:24Z"
      },
      "message": "[Qt] Clean up and fix coincontrol tree widget handling\n\n- Do sorting for date, amount and confirmations column as longlong, not\n  unsigned longlong.\n- Use `UserRole` to store our own data. This makes it treated as\n  ancillary data prevents it from being displayed.\n- Get rid of `getMappedColumn` `strPad` - these are no longer necessary.\n- Get rid of hidden `_INT64` columns.\n- Start enumeration from 0 (otherwise values are undefined).",
      "tree": {
        "sha": "b31c824de922400356556f602df62d9dd16fe717",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b31c824de922400356556f602df62d9dd16fe717"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4231032bfcb9728f0f629b3d67884ba9de63e4ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYMfcAAAoJECnUvLZBb1PsBfYQAIsUcioLZXv98BhLysGcqAQW\nLiFevCtbEavapTdN6fj+eiXm4vYS2vN7Opz+ZGSy+h1axezfC//PzRmzFhzYQga9\nVM+07/s7+sA0wq7K9t3SfLz2MzOj7k/IfkEU4Z8OOtpcdMKnLbK2zLUCpuqBCJ0K\nqg5Lp8H7rHI2kWRzVWobJeCKGJS3jHH66O0O3AqUXImqy+5FErrR7Y77Z7tCfmVj\n+/BPoYhripjldw3Y29jY78/kx9KRKe4BTH35NEqS+i3jfcaDSx7DsyNio82WkzZi\n3OGdDJ42H5zlfgOFBtKvVFy+0kAI/LwSJTpxkhj3knHJtr9znMjHaLyiOds6r6EQ\nDRO7iQdNA+OKa28Y1CMzern262yHu46gvNHgr/N3eHR8iwalo9hkUc1mv6/7sJXZ\n/8Omk5G+ekOKc3xUTz4uQWa+JcwnphtnHKAgg8I3UYfZNb9xXmZ+z3OfH2qu3nUu\n+CIt4JzhxuFYpEChNbhDc1l0oI9j5SA5BEkhpaguEQlvtsqCDIhri/khZBNoRQ8r\noVL9vwYuHRmmb0ZjFB2RXOiut5NFiUzhy2p70N2Q7x2uJRJJXe4lpr8SKKsXNFHG\nXtaCXbS9Z4qa4D2OwV0f8j0JeurnfR0VIR2bD3gyu5JDqbi4ailYCPj0fQU0+M6v\n4442+xcpuMlmaXBsGvbc\n=ZvqR\n-----END PGP SIGNATURE-----",
        "payload": "tree b31c824de922400356556f602df62d9dd16fe717\nparent 76af4eb876814a916dd4f26cf71faa20bdc54f2d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1479476014 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1479669504 +0100\n\n[Qt] Clean up and fix coincontrol tree widget handling\n\n- Do sorting for date, amount and confirmations column as longlong, not\n  unsigned longlong.\n- Use `UserRole` to store our own data. This makes it treated as\n  ancillary data prevents it from being displayed.\n- Get rid of `getMappedColumn` `strPad` - these are no longer necessary.\n- Get rid of hidden `_INT64` columns.\n- Start enumeration from 0 (otherwise values are undefined).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4231032bfcb9728f0f629b3d67884ba9de63e4ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4231032bfcb9728f0f629b3d67884ba9de63e4ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4231032bfcb9728f0f629b3d67884ba9de63e4ff/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76af4eb876814a916dd4f26cf71faa20bdc54f2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76af4eb876814a916dd4f26cf71faa20bdc54f2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76af4eb876814a916dd4f26cf71faa20bdc54f2d"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 11,
      "deletions": 49
    },
    "files": [
      {
        "sha": "1010a62fc468083b9cc5e9fb572475ed585e6913",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 24,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4231032bfcb9728f0f629b3d67884ba9de63e4ff/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4231032bfcb9728f0f629b3d67884ba9de63e4ff/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=4231032bfcb9728f0f629b3d67884ba9de63e4ff",
        "patch": "@@ -37,10 +37,8 @@ bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n bool CCoinControlWidgetItem::operator<(const QTreeWidgetItem &other) const {\n     int column = treeWidget()->sortColumn();\n-    if (column == CoinControlDialog::COLUMN_AMOUNT_INT64 || column == CoinControlDialog::COLUMN_AMOUNT_INT64)\n-        return data(CoinControlDialog::COLUMN_AMOUNT_INT64, Qt::DisplayRole).toULongLong() < other.data(CoinControlDialog::COLUMN_AMOUNT_INT64, Qt::DisplayRole).toULongLong();\n-    if (column == CoinControlDialog::COLUMN_DATE || column == CoinControlDialog::COLUMN_DATE_INT64)\n-        return data(CoinControlDialog::COLUMN_DATE_INT64, Qt::DisplayRole).toULongLong() < other.data(CoinControlDialog::COLUMN_DATE_INT64, Qt::DisplayRole).toULongLong();\n+    if (column == CoinControlDialog::COLUMN_AMOUNT || column == CoinControlDialog::COLUMN_DATE || column == CoinControlDialog::COLUMN_CONFIRMATIONS)\n+        return data(column, Qt::UserRole).toLongLong() < other.data(column, Qt::UserRole).toLongLong();\n     return QTreeWidgetItem::operator<(other);\n }\n \n@@ -137,11 +135,9 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidge\n     ui->treeWidget->setColumnWidth(COLUMN_CONFIRMATIONS, 110);\n     ui->treeWidget->setColumnHidden(COLUMN_TXHASH, true);         // store transaction hash in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_VOUT_INDEX, true);     // store vout index in this column, but don't show it\n-    ui->treeWidget->setColumnHidden(COLUMN_AMOUNT_INT64, true);   // store amount int64 in this column, but don't show it\n-    ui->treeWidget->setColumnHidden(COLUMN_DATE_INT64, true);     // store date int64 in this column, but don't show it\n \n     // default view is sorted by amount desc\n-    sortView(COLUMN_AMOUNT_INT64, Qt::DescendingOrder);\n+    sortView(COLUMN_AMOUNT, Qt::DescendingOrder);\n \n     // restore list mode and sortorder as a convenience feature\n     QSettings settings;\n@@ -173,15 +169,6 @@ void CoinControlDialog::setModel(WalletModel *_model)\n     }\n }\n \n-// helper function str_pad\n-QString CoinControlDialog::strPad(QString s, int nPadLength, QString sPadding)\n-{\n-    while (s.length() < nPadLength)\n-        s = sPadding + s;\n-\n-    return s;\n-}\n-\n // ok button\n void CoinControlDialog::buttonBoxClicked(QAbstractButton* button)\n {\n@@ -347,20 +334,18 @@ void CoinControlDialog::sortView(int column, Qt::SortOrder order)\n     sortColumn = column;\n     sortOrder = order;\n     ui->treeWidget->sortItems(column, order);\n-    ui->treeWidget->header()->setSortIndicator(getMappedColumn(sortColumn), sortOrder);\n+    ui->treeWidget->header()->setSortIndicator(sortColumn, sortOrder);\n }\n \n // treeview: clicked on header\n void CoinControlDialog::headerSectionClicked(int logicalIndex)\n {\n     if (logicalIndex == COLUMN_CHECKBOX) // click on most left column -> do nothing\n     {\n-        ui->treeWidget->header()->setSortIndicator(getMappedColumn(sortColumn), sortOrder);\n+        ui->treeWidget->header()->setSortIndicator(sortColumn, sortOrder);\n     }\n     else\n     {\n-        logicalIndex = getMappedColumn(logicalIndex, false);\n-\n         if (sortColumn == logicalIndex)\n             sortOrder = ((sortOrder == Qt::AscendingOrder) ? Qt::DescendingOrder : Qt::AscendingOrder);\n         else\n@@ -730,14 +715,15 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setData(COLUMN_AMOUNT_INT64, Qt::DisplayRole, QVariant((qlonglong)out.tx->vout[out.i].nValue)); // padding so that sorting works correctly\n+            itemOutput->setData(COLUMN_AMOUNT, Qt::UserRole, QVariant((qlonglong)out.tx->vout[out.i].nValue)); // padding so that sorting works correctly\n \n             // date\n             itemOutput->setText(COLUMN_DATE, GUIUtil::dateTimeStr(out.tx->GetTxTime()));\n-            itemOutput->setData(COLUMN_DATE_INT64, Qt::DisplayRole, QVariant((qlonglong)out.tx->GetTxTime()));\n+            itemOutput->setData(COLUMN_DATE, Qt::UserRole, QVariant((qlonglong)out.tx->GetTxTime()));\n \n             // confirmations\n-            itemOutput->setText(COLUMN_CONFIRMATIONS, strPad(QString::number(out.nDepth), 8, \" \"));\n+            itemOutput->setText(COLUMN_CONFIRMATIONS, QString::number(out.nDepth));\n+            itemOutput->setData(COLUMN_CONFIRMATIONS, Qt::UserRole, QVariant((qlonglong)out.nDepth));\n \n             // transaction hash\n             uint256 txhash = out.tx->GetHash();\n@@ -765,7 +751,7 @@ void CoinControlDialog::updateView()\n         {\n             itemWalletAddress->setText(COLUMN_CHECKBOX, \"(\" + QString::number(nChildren) + \")\");\n             itemWalletAddress->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, nSum));\n-            itemWalletAddress->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(nSum), 15, \" \"));\n+            itemWalletAddress->setData(COLUMN_AMOUNT, Qt::UserRole, QVariant((qlonglong)nSum));\n         }\n     }\n "
      },
      {
        "sha": "7c2269b1eb67356e35faa192349877de8f117dbd",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 25,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4231032bfcb9728f0f629b3d67884ba9de63e4ff/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4231032bfcb9728f0f629b3d67884ba9de63e4ff/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=4231032bfcb9728f0f629b3d67884ba9de63e4ff",
        "patch": "@@ -70,46 +70,22 @@ class CoinControlDialog : public QDialog\n \n     const PlatformStyle *platformStyle;\n \n-    QString strPad(QString, int, QString);\n     void sortView(int, Qt::SortOrder);\n     void updateView();\n \n     enum\n     {\n-        COLUMN_CHECKBOX,\n+        COLUMN_CHECKBOX = 0,\n         COLUMN_AMOUNT,\n         COLUMN_LABEL,\n         COLUMN_ADDRESS,\n         COLUMN_DATE,\n         COLUMN_CONFIRMATIONS,\n         COLUMN_TXHASH,\n         COLUMN_VOUT_INDEX,\n-        COLUMN_AMOUNT_INT64,\n-        COLUMN_DATE_INT64\n     };\n     friend class CCoinControlWidgetItem;\n \n-    // some columns have a hidden column containing the value used for sorting\n-    int getMappedColumn(int column, bool fVisibleColumn = true)\n-    {\n-        if (fVisibleColumn)\n-        {\n-            if (column == COLUMN_AMOUNT_INT64)\n-                return COLUMN_AMOUNT;\n-            else if (column == COLUMN_DATE_INT64)\n-                return COLUMN_DATE;\n-        }\n-        else\n-        {\n-            if (column == COLUMN_AMOUNT)\n-                return COLUMN_AMOUNT_INT64;\n-            else if (column == COLUMN_DATE)\n-                return COLUMN_DATE_INT64;\n-        }\n-\n-        return column;\n-    }\n-\n private Q_SLOTS:\n     void showMenu(const QPoint &);\n     void copyAmount();"
      }
    ]
  }
]