[
  {
    "sha": "35471cade3427626b077487207c880a8528c8ea3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTQ3MWNhZGUzNDI3NjI2YjA3NzQ4NzIwN2M4ODBhODUyOGM4ZWEz",
    "commit": {
      "author": {
        "name": "Jaromil",
        "email": "jaromil@dyne.org",
        "date": "2011-04-23T12:11:18Z"
      },
      "committer": {
        "name": "Jaromil",
        "email": "jaromil@dyne.org",
        "date": "2011-06-22T13:50:35Z"
      },
      "message": "Autotools build system\n\nAdding autotools for build checks, configure flags for compile time\nconfiguration and handling of #define directives inside code and\nthings that will possibily make it better for bitcoin to be packaged\ninside distributions, as well ported to different architectures.\n\nThe bitcoind code itself was never modified: files were moved around\nand the header auto-config.h generated by autoconf was added to\nheaders.h. Code modules have been separated in subdirectories and\ncompiled as static libraries.\n\nTo start first generate configure using 'autoreconf -i'\nthen the usual ./configure && make\n\nUse make V=1 for verbose compulation output.\n\nConfigure flags\n---------------\n\nBesides the usual flags provided by autotools, the following are\nnotable:\n\n --enable-upnp=0/1 has been added and configure.ac contains templates\n \t\t   for adding more compile time choices in future.\n\n --enable-gui has been added also to activate compilation of the\n \t      included WX GUI. other wx related flags are provided to\n \t      indicate prefix or static library build.\n\n --enable-debug compiles the binaries with debugging flags, giving all\n \t\twarnings - anyone willing to help should run it at\n \t\tleast once.\n\n --enable-profiling enables support for gprof the GNU profiler (will\n \t\t    dump gmon.out files after run) and gconv the GNU\n \t\t    coverage tool\n\n --with-wxdir=PATH Use uninstalled version of wxWidgets in PATH\n\n --with-wx-prefix=PREFIX Prefix where wxWidgets is installed\n\n --with-boost and more boost build configuration\n --with-boost-lib (use both boost flags to activate this option)\n\nBuild targets\n--------------------\n\nPlease note also 'make distcheck' is working to facilitate stable\nreleases distribution.\n\nBuild was tested on Debian, Ubuntu, Apple OSX 10.5, CYGWIN win32 and\nCross-compiled using MinGW32 on GNU/Linux",
      "tree": {
        "sha": "512f291b6e79ddb1f01e5f474ea02815ba28cd7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/512f291b6e79ddb1f01e5f474ea02815ba28cd7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35471cade3427626b077487207c880a8528c8ea3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35471cade3427626b077487207c880a8528c8ea3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35471cade3427626b077487207c880a8528c8ea3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35471cade3427626b077487207c880a8528c8ea3/comments",
    "author": {
      "login": "jaromil",
      "id": 148059,
      "node_id": "MDQ6VXNlcjE0ODA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/148059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaromil",
      "html_url": "https://github.com/jaromil",
      "followers_url": "https://api.github.com/users/jaromil/followers",
      "following_url": "https://api.github.com/users/jaromil/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaromil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaromil/subscriptions",
      "organizations_url": "https://api.github.com/users/jaromil/orgs",
      "repos_url": "https://api.github.com/users/jaromil/repos",
      "events_url": "https://api.github.com/users/jaromil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaromil/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jaromil",
      "id": 148059,
      "node_id": "MDQ6VXNlcjE0ODA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/148059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaromil",
      "html_url": "https://github.com/jaromil",
      "followers_url": "https://api.github.com/users/jaromil/followers",
      "following_url": "https://api.github.com/users/jaromil/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaromil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaromil/subscriptions",
      "organizations_url": "https://api.github.com/users/jaromil/orgs",
      "repos_url": "https://api.github.com/users/jaromil/repos",
      "events_url": "https://api.github.com/users/jaromil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaromil/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1179257bfd1d0f7742d57449b37c40c28464f152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1179257bfd1d0f7742d57449b37c40c28464f152",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1179257bfd1d0f7742d57449b37c40c28464f152"
      }
    ],
    "stats": {
      "total": 2737,
      "additions": 2716,
      "deletions": 21
    },
    "files": [
      {
        "sha": "d5e8707fb4125548cdba271082d42f9490c95ff0",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 36,
        "deletions": 1,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -1,5 +1,40 @@\n-src/*.exe\n+*.exe\n src/bitcoin\n src/bitcoind\n .*.swp\n *.*~*\n+*~\n+*.o\n+*.lo\n+*.a\n+*.gcda\n+*.gcdo\n+*.gcno\n+*.tar.gz\n+*.tar.bz2\n+.deps\n+.libs\n+Makefile\n+Makefile.in\n+aclocal.m4\n+autom4te.cache\n+config.guess\n+confdefs.h\n+auto-config.h\n+auto-config.h.in\n+config.log\n+config.status\n+config.sub\n+configure\n+depcomp\n+install-sh\n+missing\n+stamp-h1\n+libtool\n+ltmain.sh\n+m4/libtool.m4\n+m4/ltoptions.m4\n+m4/ltsugar.m4\n+m4/ltversion.m4\n+m4/lt~obsolete.m4\n+gmon.out"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "AUTHORS",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/AUTHORS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/AUTHORS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AUTHORS?ref=35471cade3427626b077487207c880a8528c8ea3"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "ChangeLog",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/ChangeLog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/ChangeLog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ChangeLog?ref=35471cade3427626b077487207c880a8528c8ea3"
      },
      {
        "sha": "7d1c323beae76333f523f6df31c47a87f5597edb",
        "filename": "INSTALL",
        "status": "added",
        "additions": 365,
        "deletions": 0,
        "changes": 365,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,365 @@\n+Installation Instructions\n+*************************\n+\n+Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005,\n+2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+\n+   Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.  This file is offered as-is,\n+without warranty of any kind.\n+\n+Basic Installation\n+==================\n+\n+   Briefly, the shell commands `./configure; make; make install' should\n+configure, build, and install this package.  The following\n+more-detailed instructions are generic; see the `README' file for\n+instructions specific to this package.  Some packages provide this\n+`INSTALL' file but do not implement all of the features documented\n+below.  The lack of an optional feature in a given package is not\n+necessarily a bug.  More recommendations for GNU packages can be found\n+in *note Makefile Conventions: (standards)Makefile Conventions.\n+\n+   The `configure' shell script attempts to guess correct values for\n+various system-dependent variables used during compilation.  It uses\n+those values to create a `Makefile' in each directory of the package.\n+It may also create one or more `.h' files containing system-dependent\n+definitions.  Finally, it creates a shell script `config.status' that\n+you can run in the future to recreate the current configuration, and a\n+file `config.log' containing compiler output (useful mainly for\n+debugging `configure').\n+\n+   It can also use an optional file (typically called `config.cache'\n+and enabled with `--cache-file=config.cache' or simply `-C') that saves\n+the results of its tests to speed up reconfiguring.  Caching is\n+disabled by default to prevent problems with accidental use of stale\n+cache files.\n+\n+   If you need to do unusual things to compile the package, please try\n+to figure out how `configure' could check whether to do them, and mail\n+diffs or instructions to the address given in the `README' so they can\n+be considered for the next release.  If you are using the cache, and at\n+some point `config.cache' contains results you don't want to keep, you\n+may remove or edit it.\n+\n+   The file `configure.ac' (or `configure.in') is used to create\n+`configure' by a program called `autoconf'.  You need `configure.ac' if\n+you want to change it or regenerate `configure' using a newer version\n+of `autoconf'.\n+\n+   The simplest way to compile this package is:\n+\n+  1. `cd' to the directory containing the package's source code and type\n+     `./configure' to configure the package for your system.\n+\n+     Running `configure' might take a while.  While running, it prints\n+     some messages telling which features it is checking for.\n+\n+  2. Type `make' to compile the package.\n+\n+  3. Optionally, type `make check' to run any self-tests that come with\n+     the package, generally using the just-built uninstalled binaries.\n+\n+  4. Type `make install' to install the programs and any data files and\n+     documentation.  When installing into a prefix owned by root, it is\n+     recommended that the package be configured and built as a regular\n+     user, and only the `make install' phase executed with root\n+     privileges.\n+\n+  5. Optionally, type `make installcheck' to repeat any self-tests, but\n+     this time using the binaries in their final installed location.\n+     This target does not install anything.  Running this target as a\n+     regular user, particularly if the prior `make install' required\n+     root privileges, verifies that the installation completed\n+     correctly.\n+\n+  6. You can remove the program binaries and object files from the\n+     source code directory by typing `make clean'.  To also remove the\n+     files that `configure' created (so you can compile the package for\n+     a different kind of computer), type `make distclean'.  There is\n+     also a `make maintainer-clean' target, but that is intended mainly\n+     for the package's developers.  If you use it, you may have to get\n+     all sorts of other programs in order to regenerate files that came\n+     with the distribution.\n+\n+  7. Often, you can also type `make uninstall' to remove the installed\n+     files again.  In practice, not all packages have tested that\n+     uninstallation works correctly, even though it is required by the\n+     GNU Coding Standards.\n+\n+  8. Some packages, particularly those that use Automake, provide `make\n+     distcheck', which can by used by developers to test that all other\n+     targets like `make install' and `make uninstall' work correctly.\n+     This target is generally not run by end users.\n+\n+Compilers and Options\n+=====================\n+\n+   Some systems require unusual options for compilation or linking that\n+the `configure' script does not know about.  Run `./configure --help'\n+for details on some of the pertinent environment variables.\n+\n+   You can give `configure' initial values for configuration parameters\n+by setting variables in the command line or in the environment.  Here\n+is an example:\n+\n+     ./configure CC=c99 CFLAGS=-g LIBS=-lposix\n+\n+   *Note Defining Variables::, for more details.\n+\n+Compiling For Multiple Architectures\n+====================================\n+\n+   You can compile the package for more than one kind of computer at the\n+same time, by placing the object files for each architecture in their\n+own directory.  To do this, you can use GNU `make'.  `cd' to the\n+directory where you want the object files and executables to go and run\n+the `configure' script.  `configure' automatically checks for the\n+source code in the directory that `configure' is in and in `..'.  This\n+is known as a \"VPATH\" build.\n+\n+   With a non-GNU `make', it is safer to compile the package for one\n+architecture at a time in the source code directory.  After you have\n+installed the package for one architecture, use `make distclean' before\n+reconfiguring for another architecture.\n+\n+   On MacOS X 10.5 and later systems, you can create libraries and\n+executables that work on multiple system types--known as \"fat\" or\n+\"universal\" binaries--by specifying multiple `-arch' options to the\n+compiler but only a single `-arch' option to the preprocessor.  Like\n+this:\n+\n+     ./configure CC=\"gcc -arch i386 -arch x86_64 -arch ppc -arch ppc64\" \\\n+                 CXX=\"g++ -arch i386 -arch x86_64 -arch ppc -arch ppc64\" \\\n+                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n+\n+   This is not guaranteed to produce working output in all cases, you\n+may have to build one architecture at a time and combine the results\n+using the `lipo' tool if you have problems.\n+\n+Installation Names\n+==================\n+\n+   By default, `make install' installs the package's commands under\n+`/usr/local/bin', include files under `/usr/local/include', etc.  You\n+can specify an installation prefix other than `/usr/local' by giving\n+`configure' the option `--prefix=PREFIX', where PREFIX must be an\n+absolute file name.\n+\n+   You can specify separate installation prefixes for\n+architecture-specific files and architecture-independent files.  If you\n+pass the option `--exec-prefix=PREFIX' to `configure', the package uses\n+PREFIX as the prefix for installing programs and libraries.\n+Documentation and other data files still use the regular prefix.\n+\n+   In addition, if you use an unusual directory layout you can give\n+options like `--bindir=DIR' to specify different values for particular\n+kinds of files.  Run `configure --help' for a list of the directories\n+you can set and what kinds of files go in them.  In general, the\n+default for these options is expressed in terms of `${prefix}', so that\n+specifying just `--prefix' will affect all of the other directory\n+specifications that were not explicitly provided.\n+\n+   The most portable way to affect installation locations is to pass the\n+correct locations to `configure'; however, many packages provide one or\n+both of the following shortcuts of passing variable assignments to the\n+`make install' command line to change installation locations without\n+having to reconfigure or recompile.\n+\n+   The first method involves providing an override variable for each\n+affected directory.  For example, `make install\n+prefix=/alternate/directory' will choose an alternate location for all\n+directory configuration variables that were expressed in terms of\n+`${prefix}'.  Any directories that were specified during `configure',\n+but not in terms of `${prefix}', must each be overridden at install\n+time for the entire installation to be relocated.  The approach of\n+makefile variable overrides for each directory variable is required by\n+the GNU Coding Standards, and ideally causes no recompilation.\n+However, some platforms have known limitations with the semantics of\n+shared libraries that end up requiring recompilation when using this\n+method, particularly noticeable in packages that use GNU Libtool.\n+\n+   The second method involves providing the `DESTDIR' variable.  For\n+example, `make install DESTDIR=/alternate/directory' will prepend\n+`/alternate/directory' before all installation names.  The approach of\n+`DESTDIR' overrides is not required by the GNU Coding Standards, and\n+does not work on platforms that have drive letters.  On the other hand,\n+it does better at avoiding recompilation issues, and works well even\n+when some directory options were not specified in terms of `${prefix}'\n+at `configure' time.\n+\n+Optional Features\n+=================\n+\n+   If the package supports it, you can cause programs to be installed\n+with an extra prefix or suffix on their names by giving `configure' the\n+option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.\n+\n+   Some packages pay attention to `--enable-FEATURE' options to\n+`configure', where FEATURE indicates an optional part of the package.\n+They may also pay attention to `--with-PACKAGE' options, where PACKAGE\n+is something like `gnu-as' or `x' (for the X Window System).  The\n+`README' should mention any `--enable-' and `--with-' options that the\n+package recognizes.\n+\n+   For packages that use the X Window System, `configure' can usually\n+find the X include and library files automatically, but if it doesn't,\n+you can use the `configure' options `--x-includes=DIR' and\n+`--x-libraries=DIR' to specify their locations.\n+\n+   Some packages offer the ability to configure how verbose the\n+execution of `make' will be.  For these packages, running `./configure\n+--enable-silent-rules' sets the default to minimal output, which can be\n+overridden with `make V=1'; while running `./configure\n+--disable-silent-rules' sets the default to verbose, which can be\n+overridden with `make V=0'.\n+\n+Particular systems\n+==================\n+\n+   On HP-UX, the default C compiler is not ANSI C compatible.  If GNU\n+CC is not installed, it is recommended to use the following options in\n+order to use an ANSI C compiler:\n+\n+     ./configure CC=\"cc -Ae -D_XOPEN_SOURCE=500\"\n+\n+and if that doesn't work, install pre-built binaries of GCC for HP-UX.\n+\n+   On OSF/1 a.k.a. Tru64, some versions of the default C compiler cannot\n+parse its `<wchar.h>' header file.  The option `-nodtk' can be used as\n+a workaround.  If GNU CC is not installed, it is therefore recommended\n+to try\n+\n+     ./configure CC=\"cc\"\n+\n+and if that doesn't work, try\n+\n+     ./configure CC=\"cc -nodtk\"\n+\n+   On Solaris, don't put `/usr/ucb' early in your `PATH'.  This\n+directory contains several dysfunctional programs; working variants of\n+these programs are available in `/usr/bin'.  So, if you need `/usr/ucb'\n+in your `PATH', put it _after_ `/usr/bin'.\n+\n+   On Haiku, software installed for all users goes in `/boot/common',\n+not `/usr/local'.  It is recommended to use the following options:\n+\n+     ./configure --prefix=/boot/common\n+\n+Specifying the System Type\n+==========================\n+\n+   There may be some features `configure' cannot figure out\n+automatically, but needs to determine by the type of machine the package\n+will run on.  Usually, assuming the package is built to be run on the\n+_same_ architectures, `configure' can figure that out, but if it prints\n+a message saying it cannot guess the machine type, give it the\n+`--build=TYPE' option.  TYPE can either be a short name for the system\n+type, such as `sun4', or a canonical name which has the form:\n+\n+     CPU-COMPANY-SYSTEM\n+\n+where SYSTEM can have one of these forms:\n+\n+     OS\n+     KERNEL-OS\n+\n+   See the file `config.sub' for the possible values of each field.  If\n+`config.sub' isn't included in this package, then this package doesn't\n+need to know the machine type.\n+\n+   If you are _building_ compiler tools for cross-compiling, you should\n+use the option `--target=TYPE' to select the type of system they will\n+produce code for.\n+\n+   If you want to _use_ a cross compiler, that generates code for a\n+platform different from the build platform, you should specify the\n+\"host\" platform (i.e., that on which the generated programs will\n+eventually be run) with `--host=TYPE'.\n+\n+Sharing Defaults\n+================\n+\n+   If you want to set default values for `configure' scripts to share,\n+you can create a site shell script called `config.site' that gives\n+default values for variables like `CC', `cache_file', and `prefix'.\n+`configure' looks for `PREFIX/share/config.site' if it exists, then\n+`PREFIX/etc/config.site' if it exists.  Or, you can set the\n+`CONFIG_SITE' environment variable to the location of the site script.\n+A warning: not all `configure' scripts look for a site script.\n+\n+Defining Variables\n+==================\n+\n+   Variables not defined in a site shell script can be set in the\n+environment passed to `configure'.  However, some packages may run\n+configure again during the build, and the customized values of these\n+variables may be lost.  In order to avoid this problem, you should set\n+them in the `configure' command line, using `VAR=value'.  For example:\n+\n+     ./configure CC=/usr/local2/bin/gcc\n+\n+causes the specified `gcc' to be used as the C compiler (unless it is\n+overridden in the site shell script).\n+\n+Unfortunately, this technique does not work for `CONFIG_SHELL' due to\n+an Autoconf bug.  Until the bug is fixed you can use this workaround:\n+\n+     CONFIG_SHELL=/bin/bash /bin/bash ./configure CONFIG_SHELL=/bin/bash\n+\n+`configure' Invocation\n+======================\n+\n+   `configure' recognizes the following options to control how it\n+operates.\n+\n+`--help'\n+`-h'\n+     Print a summary of all of the options to `configure', and exit.\n+\n+`--help=short'\n+`--help=recursive'\n+     Print a summary of the options unique to this package's\n+     `configure', and exit.  The `short' variant lists options used\n+     only in the top level, while the `recursive' variant lists options\n+     also present in any nested packages.\n+\n+`--version'\n+`-V'\n+     Print the version of Autoconf used to generate the `configure'\n+     script, and exit.\n+\n+`--cache-file=FILE'\n+     Enable the cache: use and save the results of the tests in FILE,\n+     traditionally `config.cache'.  FILE defaults to `/dev/null' to\n+     disable caching.\n+\n+`--config-cache'\n+`-C'\n+     Alias for `--cache-file=config.cache'.\n+\n+`--quiet'\n+`--silent'\n+`-q'\n+     Do not print messages saying which checks are being made.  To\n+     suppress all normal output, redirect it to `/dev/null' (any error\n+     messages will still be shown).\n+\n+`--srcdir=DIR'\n+     Look for the package's source code in directory DIR.  Usually\n+     `configure' can determine that directory automatically.\n+\n+`--prefix=DIR'\n+     Use DIR as the installation prefix.  *note Installation Names::\n+     for more details, including other options available for fine-tuning\n+     the installation locations.\n+\n+`--no-create'\n+`-n'\n+     Run the configure checks, but stop before creating any output\n+     files.\n+\n+`configure' also accepts some other, not widely useful, options.  Run\n+`configure --help' for more details.\n+"
      },
      {
        "sha": "cf2761634e97bcaa3afdc1dc6d883197b19658c0",
        "filename": "Makefile.am",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,5 @@\n+DISTCHECK_CONFIGURE_FLAGS = V=1\n+\n+SUBDIRS = src\n+\n+ACLOCAL_AMFLAGS = -I m4\n\\ No newline at end of file"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "NEWS",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/NEWS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/NEWS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/NEWS?ref=35471cade3427626b077487207c880a8528c8ea3"
      },
      {
        "sha": "109d04989c33ef91da8218ed82fa99641ea818da",
        "filename": "configure.ac",
        "status": "added",
        "additions": 320,
        "deletions": 0,
        "changes": 320,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,320 @@\n+dnl ===================================================\n+dnl Autotools build-system for Bitcoin\n+dnl Run 'autoreconf -i' to produce a configure script\n+dnl Run 'make distcheck' to produce a tarball release\n+dnl See debugging and profiling development facilities\n+dnl ===================================================\n+dnl Copyright (C) 2011 by Denis Roio <jaromil@dyne.org>\n+dnl Distributed under the terms of the MIT/X11 license\n+dnl ===================================================\n+\n+dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n+AC_PREREQ([2.60])\n+\n+AC_INIT([Bitcoin],[0.4.0],[info@bitcoin.org],[bitcoin])\n+AC_CONFIG_MACRO_DIR([m4])\n+AC_CANONICAL_HOST\n+\n+\n+dnl backwards compatibility for autoconf >= 2.64\n+dnl PACKAGE_URL should be the fifth argument of AC_INIT\n+m4_define([AC_PACKAGE_URL], [http://bitcoin.org])\n+AC_DEFINE(PACKAGE_URL, \"AC_PACKAGE_URL\", [Package URL])\n+AC_SUBST(PACKAGE_URL, AC_PACKAGE_URL)\n+dnl DISTCHECK_CONFIGURE_FLAGS=\"V=1\"\n+dnl AC_SUBST(DISTCHECK_CONFIGURE_FLAGS)\n+\n+dnl ==============================================================\n+dnl Get the operating system and version number...\n+dnl ==============================================================\n+AC_MSG_CHECKING([for which platform we are compiling])\n+case \"$host_cpu\" in\n+  powerpc*)\n+    have_ppc=yes\n+  ;;\n+  x86_64*)\n+    have_x86_64=yes\n+    AC_DEFINE(HAVE_X86_64BIT,1,[define if host is an x86 64 bit])\n+  ;;\n+  i*86*)\n+    have_x86_32=yes\n+    AC_DEFINE(ARCH_X86_32BIT,1,[define if host is an x86 32 bit])\n+  ;;\n+esac\n+\n+# TODO: until big endian is not supported this message should appear for\n+#       all BE platforms, not just ppc.\n+if test x$have_ppc = xyes; then\n+       AC_MSG_ERROR([[\n+[!] Your system architecture (Big Endian, PPC) is not supported\n+[!] if you are interested in porting Bitcoin to your architecture\n+[!] you are very welcome to contact us on http://bitcoin.org\n+]], 0)\n+fi\n+\n+HOST_LIBS=\"\"\n+HOST_CPPFLAGS=\"\"\n+\n+case \"$host_os\" in\n+  *linux*)\n+    have_linux=yes\n+    AC_MSG_RESULT([Linux])\n+    AC_DEFINE(HAVE_LINUX,1,[define if compiling for GNU/Linux])\n+    HOST_LIBS=\"-lpthread -lz -ldl\"\n+  ;;\n+\n+  *darwin*)\n+    have_osx=yes\n+    AC_MSG_RESULT([Apple/OSX])\n+    AC_DEFINE(HAVE_MACOSX,1,[define if compiling for Apple OSX])\n+    AC_DEFINE(BSD,1,[define if compiling on a BSD operating system])\n+    AC_DEFINE(CRYPTOPP_DISABLE_ASM,1,[define to deactivate ASM optimization in cryptopp lib])\n+    HOST_CPPFLAGS=\"-mmacosx-version-min=10.5\"\n+    HOST_CXXFLAGS=\"-I/opt/local/include/db46\"\n+    HOST_LIBS=\"-L/opt/local/lib/db46 -lpthread -lz -ldl\"\n+    # other defines present in old mkfile: -DNOPCH -DMSG_NOSIGNAL=0\n+  ;;\n+\n+  *freebsd*)\n+    have_freebsd=yes\n+    AC_MSG_RESULT([FreeBSD])\n+    AC_DEFINE(BSD,1,[define if compiling on a BSD operating system])\n+    AC_DEFINE(HAVE_FREEBSD,1,[define if compiling for FreeBSD])\n+    AC_DEFINE(HAVE_SYS_SOCKET_H,1,[usually needed for FreeBSD includes])\n+    HOST_CPPFLAGS=\"-I/usr/local/include -L/usr/local/lib\"\n+    HOST_LIBS=\"-lpthread -lz -ldl\"\n+  ;;\n+\n+  *win*)\n+    have_mswin=yes\n+    AC_MSG_RESULT([MS/Windows (TODO)])\n+    # TODO\n+  ;;\n+\n+  *mingw*)\n+    have_mingw=yes\n+    AC_MSG_RESULT([MINGW cross compile])\n+    HOST_CXXFLAGS=\"-DWIN32 -D__WXMSW__ -D_WINDOWS -DNOPCH -mwindows -mthreads\"\n+    HOST_CPPFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n+    HOST_LIBS=\"-L/usr/i586-mingw32msvc/lib/ -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lws2_32 -lshlwapi\"\n+    # fix the -I. bug\n+    DEFAULT_INCLUDES=\"-I..\"\n+    AC_SUBST(DEFAULT_INCLUDES)\n+  ;;\n+\n+  *)\n+    AC_MSG_RESULT([$host_os?!])\n+    AC_MSG_ERROR([[\n+[!] Your system architecture is not supported by Bitcoin\n+[!] if you are interested in porting Bitcoin to your architecture\n+[!] you can reach developers via #bitcoin-dev channel on freenode\n+[!] or the web forum on http://bitcoin.org\n+]], 0)\n+  ;;\n+esac\n+\n+AC_SUBST(HOST_LIBS)\n+AC_SUBST(HOST_CPPFLAGS)\n+AC_SUBST(HOST_CXXFLAGS)\n+\n+dnl ==============================================================\n+dnl Setup for automake\n+dnl ==============================================================\n+\n+AM_INIT_AUTOMAKE([dist-bzip2 subdir-objects no-define])\n+dnl the no-define flag is to avoid definition of VERSION by automake\n+dnl our VERSION is defined in sourcecode: src/serialize.h as (int)\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+AC_CONFIG_SRCDIR([src])\n+AC_CONFIG_HEADERS([auto-config.h])\n+\n+dnl Checks for programs.\n+AC_PROG_CXX\n+AC_PROG_CPP\n+AC_PROG_INSTALL\n+AC_PROG_LN_S\n+AC_PROG_MAKE_SET\n+AM_PROG_AS\n+AC_PROG_RANLIB\n+\n+AC_CHECK_HEADERS([stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h])\n+\n+dnl Advanced network address translating functions\n+AC_CHECK_FUNCS(inet_ntop)\n+\n+dnl Checks for libraries\n+AC_CHECK_LIB(crypto, MD5_Init, CRYPTO_LIBS=-lcrypto)\n+AX_BOOST_BASE\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_PROGRAM_OPTIONS\n+AX_BOOST_THREAD\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n+AC_SUBST(BOOST_LIBS)\n+\n+PKG_CHECK_MODULES(SSL, libssl >= 0.9, :,\n+\t\t  AC_MSG_ERROR([ SSL development library not found]))\n+AC_DEFINE(USE_SSL,1,[Define if building support for SSL using libssl])\n+\n+PKG_CHECK_MODULES(CRYPTO, libcrypto, :,\n+\t\t  AC_MSG_ERROR([ Crypto development library not found]))\n+\n+# platform dependent threading libs\n+case \"$host_os\" in\n+  *mingw*)\n+    COMMON_LIBS=\"-mthreads\"\n+  ;;\n+  *linux*)\n+    PKG_CHECK_MODULES(GTHREAD2, gthread-2.0, :,\n+    \t\t\tAC_MSG_ERROR([ GThread-2 development library not found]))\n+esac\n+\n+dnl platform independent database libs\n+COMMON_LIBS=\"$COMMON_LIBS -ldb_cxx\"\n+AC_SUBST(COMMON_LIBS)\n+\n+dnl ==============================================================\n+dnl enable UPNP\n+dnl ==============================================================\n+AC_ARG_ENABLE(upnp,\n+\tAS_HELP_STRING([--enable-upnp],[compile with UPNP support (use on/off to set default behaviour)]),\n+\t[have_upnp=$enableval],\n+\t[have_upnp=omit])\n+AC_MSG_CHECKING([if UPNP support (miniupnp) is enabled])\n+UPNP_LIBS=\"\"\n+if test x$have_upnp = xyes; then\n+# this is the default behaviour for --enable-upnp with no arguments\n+   AC_MSG_RESULT([compiled - on by default])\n+   AC_DEFINE(USE_UPNP,1,[Define if building support for UPNP functions via miniupnp])\n+elif test x$have_upnp = xon; then\n+   AC_MSG_RESULT([compiled - on by default])\n+   AC_DEFINE(USE_UPNP,1,[Define if building support for UPNP functions via miniupnp])\n+elif test x$have_upnp = xoff; then\n+   AC_MSG_RESULT([compiled - off by default])\n+   AC_DEFINE(USE_UPNP,0,[Define if building support for UPNP functions via miniupnp])\n+else\n+   AC_MSG_RESULT(no)\n+fi\n+if test x$have_upnp != xomit; then\n+   if test x$have_linux = xyes; then\n+      UPNP_LIBS=\"-lminiupnpc\"\n+   fi\n+   # TODO OSX and WIN\n+fi\n+\n+\n+AC_SUBST(UPNP_LIBS)\n+\n+dnl ==============================================================\n+dnl Graphical User Interface\n+dnl ==============================================================\n+AC_ARG_ENABLE(gui,\n+\tAS_HELP_STRING([--enable-gui],[compile a graphical user interface: wx or none]),\n+\t[have_gui=$enableval],\n+\t[have_gui=none])\n+AC_MSG_CHECKING([which GUI is selected])\n+\n+case \"$have_gui\" in\n+\n+     dnl ============\n+     dnl WxWidget GUI\n+     yes)\n+     dnl we can have more GUIs in future by checking the value here\n+     dnl like using --enable-gui=wx --enable-gui=gtk etc.\n+\tAC_MSG_RESULT(WxWidgets)\n+\tif test x$have_linux = xyes; then\n+\t   AM_OPTIONS_WXCONFIG\n+\t   AM_PATH_WXCONFIG(2.9.1, have_wx=yes)\n+\t   if test x$have_wx != xyes; then\n+\t      AC_MSG_ERROR([WxWidget GUI selected, but wx-config version 2.9.1 is not found])\n+\t   else\n+\t      AC_DEFINE(__WXGTK__,1,[Define if building the WX GUI on GNU/Linux using GTK])\n+\t      GUI_CPPFLAGS=\"$WX_CPPFLAGS\"\n+\t      GUI_CXXFLAGS=\"$WX_CXXFLAGS_ONLY -Iwx\"\n+\t      GUI_LIBS=\"$WX_LIBS wx/libbtcwxgui.a\"\n+\t      GUI_SUBDIRS=\"wx\"\n+\t   fi\n+\tfi\n+\n+\tif test x$have_osx = xyes; then\n+\t   # TODO\n+\t   AC_DEFINE(__WXMAC_OSX__,1,[Define if building the WX GUI on Apple/OSX])\t\n+\tfi\n+\n+\tif test x$have_mswin = xyes; then\n+\t   # TODO\n+\t   AC_DEFINE(__WXMSW__,1,[Define if building the WX GUI on MS/Windows])\t\n+\tfi\n+     ;;\n+     \n+     none)\n+\tAC_MSG_RESULT(none)\n+     ;;\n+esac\n+AC_SUBST(GUI_LIBS)\n+AC_SUBST(GUI_CXXFLAGS)\n+AC_SUBST(GUI_CPPFLAGS)\n+AC_SUBST(GUI_SUBDIRS)\n+AM_CONDITIONAL([BUILD_WX], [test x$have_wx = xyes])\n+\n+\n+dnl ==============================================================\n+dnl compile with full warnings and debugging symbols\n+dnl ==============================================================\n+AC_ARG_ENABLE(debug,\n+    AS_HELP_STRING([--enable-debug],[compile with debug symbols (no)]),\n+    [enable_debug=$enableval],\n+    [enable_debug=no])\n+    AC_MSG_CHECKING([if compiling with debugging symbols])\n+\n+if test x$enable_debug = xyes; then\n+    # default debug flags\n+    DEBUG_CXXFLAGS=\"-Wall -g -ggdb\"\n+    if test x$have_wx = xyes; then\n+       DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -D__WXDEBUG__\"\n+    fi\n+    AC_MSG_RESULT(yes)\n+elif test x$enable_debug != xno; then\n+    # specified at configure with --enable-debug=\"...\"\n+    DEBUG_CXXFLAGS=\"$enableval\"\n+    AC_MSG_RESULT([$enableval])\n+else\n+    # usual optimizations and warnings\n+    DEBUG_CXXFLAGS=\"-O2 -Wno-invalid-offsetof -Wformat\"\n+    AC_MSG_RESULT(no)\n+fi\n+\n+dnl ==============================================================================\n+dnl CHECK to use profiling flags when compiling, for execution analysis with gprof\n+dnl ==============================================================================\n+AC_ARG_ENABLE(profiling,\n+    AS_HELP_STRING([--enable-profiling],[compile using flags for execution analysis with gprof (no)]),\n+    [enable_profiling=$enableval],\n+    [enable_profiling=no])\n+    AC_MSG_CHECKING([if compiling for the GNU profiler, see gprof(1)])\n+\n+if test x$enable_profiling = xyes; then\n+  DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -pg -fprofile-arcs -ftest-coverage\"\n+  PROFILING_LIBS=\"-lgcov\"\n+  AC_SUBST(PROFILING_LIBS)\n+  AC_MSG_RESULT(yes)\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n+CXXFLAGS=\"$HOST_CXXFLAGS $DEBUG_CXXFLAGS\"\n+AC_SUBST(CXXFLAGS)\n+\n+AC_CONFIG_FILES([\n+Makefile\n+src/Makefile\n+src/xpm/Makefile\n+src/json/Makefile\n+src/cryptopp/Makefile\n+src/wx/Makefile\n+])\n+AC_OUTPUT\n+"
      },
      {
        "sha": "3867defacb61e3d330e6a3565d3a9c8c787825aa",
        "filename": "doc/build-cross-mingw32.txt",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/doc/build-cross-mingw32.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/doc/build-cross-mingw32.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-cross-mingw32.txt?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,29 @@\n+Copyright (c) 2011 Bitcoin Developers\n+Distributed under the MIT/X11 software license, see the accompanying\n+file license.txt or http://www.opensource.org/licenses/mit-license.php.\n+\n+MinGW32 cross-compilation instructions\n+\n+written by Denis Roio <jaromil@dyne.org>\n+testing contributed by Matt Corallo <matt@bluematt.me>\n+\n+\n+Install mingw32 (packages found in Debian, Ubuntu, Fedora and others)\n+\n+Cross-compile all needed libraries and run:\n+\n+./configure --host=i586-mingw32msvc \\\n+\t    --with-boost-libdir=bitcoin-mingw32-libs/lib \\\n+\t    --with-boost=bitcoin-mingw32-libs\n+\n+Where one should substitute 'bitcoin-mingw32-libs' with the path to\n+the libraries that were compiled.\n+\n+Please note both --with-boost flags are needed\n+\n+If all goes well with the configure detection then you can run\n+\n+make\n+\n+which should produce bitcoin (if WX GUI was selected) \n+and bitcoind (background daemon)"
      },
      {
        "sha": "84f133c730c2d6820210a152acc35385c9551e4c",
        "filename": "doc/build-msw.txt",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -6,7 +6,6 @@ the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP\n software written by Thomas Bernard.\n \n-\n WINDOWS BUILD NOTES\n ===================\n \n@@ -101,7 +100,14 @@ Get miniupnpc-1.5.20110215.tar.gz and copy *.h to \\upnpc-exe-win32-20110215\\mini\n Bitcoin\n -------\n DOS prompt:\n-cd \\bitcoin\\src\n-mingw32-make bitcoin.exe bitcoind.exe -f makefile.mingw\n+Substitute mingw32msvc with the executable prefix of the mingw compiler installed\n+Substitute bitcoin-mingw32-libs with the path to the libraries\n+To Fine tune see ./configure --help\n+\n+cd \\bitcoin\n+./configure --host=i586-mingw32msvc --with-boost-libdir=bitcoin-mingw32-libs/lib --with-boost=bitcoin-mingw32-libs\n+mingw32-make\n+\n+To eliminate debugging symbols from executables:\n strip bitcoin.exe\n strip bitcoind.exe"
      },
      {
        "sha": "cebb1806a730d864a55a12398aafc599b92ebff9",
        "filename": "doc/build-osx.txt",
        "status": "modified",
        "additions": 36,
        "deletions": 13,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -1,26 +1,33 @@\n Copyright (c) 2010 Laszlo Hanyecz\n+Copyright (c) 2011 Bitcoin Developers\n Distributed under the MIT/X11 software license, see the accompanying\n file license.txt or http://www.opensource.org/licenses/mit-license.php.\n This product includes software developed by the OpenSSL Project for use in\n the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP\n software written by Thomas Bernard.\n \n-\n Mac OS X build instructions\n-Laszlo Hanyecz (solar@heliacal.net)\n+Written by\n+    Laszlo Hanyecz <solar@heliacal.net>\n+    Denis Roio <jaromil@dyne.org>\n \n+Tested on 10.5 and 10.6 Intel.\n \n-Tested on 10.5 and 10.6 intel.  PPC is not supported because it's big-endian.\n+PPC is not supported because it's big-endian.\n \n All of the commands should be executed in Terminal.app.. it's in\n /Applications/Utilities\n \n-You need to install XCode with all the options checked so that the compiler\n-and everything is available in /usr not just /Developer\n-I think it comes on the DVD but you can get the current version from\n+You need to install XCode with all the options checked so that the\n+compiler and everything is available in /usr not just /Developer I\n+think it comes on the DVD but you can get the current version from\n http://developer.apple.com\n \n+You also need to install MacPorts which provide the dependencies\n+necessary to compile bitcoin. In particular you need to install ports\n+for: git-core, boost, openssl and miniupnp, see http://www.macports.org\n+\n \n 1.  Pick a directory to work inside.. something like ~/bitcoin works.  The\n structure I use looks like this:\n@@ -41,16 +48,19 @@ name of the directory, for example /Users/james/bitcoin/deps for a user named\n 2.  Check out the trunk version of the bitcoin code from subversion:\n \n cd ~/bitcoin\n-svn checkout https://bitcoin.svn.sourceforge.net/svnroot/bitcoin/trunk\n+git clone https://github.com/bitcoin/bitcoin.git trunk\n \n-This will make ~/bitcoin/trunk for you with all the files from subversion. \n+This will make ~/bitcoin/trunk for you with all the files from github. \n \n 3.  Get and build the dependencies\n \n \n Boost\n -----\n \n+Install the needed boost packages from MacPorts, or manually.\n+Below instructions for manual installation.\n+\n Download from http://www.boost.org/users/download/\n I'm assuming it ended up in ~/Downloads..\n \n@@ -80,6 +90,9 @@ This is what my output looked like at the end:\n OpenSSL\n -------\n \n+Install the needed boost packages from MacPorts, or manually.\n+Below instructions for manual installation.\n+\n Download from http://www.openssl.org/source/\n \n We would like to build this as a 32 bit/64 bit library so we actually build it\n@@ -120,7 +133,7 @@ lib/libcrypto.a (for architecture x86_64):\tcurrent ar archive random library\n miniupnpc\n ---------\n \n-The process for miniupnpc (optional) is similar to that of OpenSSL.\n+Miniupnpc has to be installed manually\n \n Download from http://miniupnp.tuxfamily.org/files/.\n \n@@ -160,6 +173,9 @@ lib/libminiupnpc.a (for architecture x86_64):\tcurrent ar archive random library\n Berkeley DB\n -----------\n \n+Install the needed boost packages from MacPorts, or manually.\n+Below instructions for manual installation.\n+\n Download from http://freshmeat.net/projects/berkeleydb/\n \n cd ~/bitcoin/deps\n@@ -171,9 +187,7 @@ cd db-4.8.26/build_unix\n wxWidgets\n ---------\n \n-This is the big one..\n-\n-Check it out from svn\n+Check it out from svn since that is fixed to work at the moment\n \n cd ~/bitcoin/deps\n svn checkout http://svn.wxwidgets.org/svn/wx/wxWidgets/trunk wxWidgets-trunk\n@@ -237,7 +251,16 @@ make install\n Now you should be able to build bitcoin\n \n cd ~/bitcoin/trunk\n-make -f makefile.osx bitcoin\n+\n+./configure\n+\n+add relevant flags:\n+\t  --enable-gui=wx # Bitcoin with wxWidgets GUI\n+\t  --enable-upnp=on # use off to compile it in, but default off \n+see more options with ./configure --help including debug and profile\n+\n+then type\n+make\n \n Before you can run it, you need to create an application bundle for Mac OS.\n Create the directories in terminal using mkdir and copy the files into place."
      },
      {
        "sha": "8073d53d256ff9e3d711454d7ea536e2f2af683e",
        "filename": "doc/build-unix.txt",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -13,11 +13,15 @@ UNIX BUILD NOTES\n To Build\n --------\n \n-cd src/\n+./configure\n \n-make -f makefile.unix            # Bitcoin with wxWidgets GUI\n-  or\n-make -f makefile.unix bitcoind   # Headless bitcoin\n+add relevant flags:\n+\t  --enable-gui=wx # Bitcoin with wxWidgets GUI\n+\t  --enable-upnp=on # use off to compile it in, but default off \n+see more options with ./configure --help including debug and profile\n+\n+then type\n+make\n \n \n Dependencies"
      },
      {
        "sha": "9b429031e8a7e06a4a35e602be500cfaf88a0325",
        "filename": "m4/Makefile.am",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,8 @@\n+\n+EXTRA_DIST = \\\n+\tax_boost_base.m4\t\t\\\n+\tax_boost_system.m4\t\t\\\n+\tax_boost_filesystem.m4\t\t\\\n+\tax_boost_program_options.m4\t\\\n+\tax_boost_thread.m4\n+"
      },
      {
        "sha": "54a2a1bee74e97f9c20eae32667dc6cf66c05bdd",
        "filename": "m4/ax_boost_base.m4",
        "status": "added",
        "additions": 258,
        "deletions": 0,
        "changes": 258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/ax_boost_base.m4?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,258 @@\n+# ===========================================================================\n+#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+    if test \"$withval\" = \"no\"; then\n+        want_boost=\"no\"\n+    elif test \"$withval\" = \"yes\"; then\n+        want_boost=\"yes\"\n+        ac_boost_path=\"\"\n+    else\n+        want_boost=\"yes\"\n+        ac_boost_path=\"$withval\"\n+    fi\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n+        [\n+        if test -d \"$withval\"\n+        then\n+                ac_boost_lib_path=\"$withval\"\n+        else\n+                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n+        fi\n+        ],\n+        [ac_boost_lib_path=\"\"]\n+)\n+\n+if test \"x$want_boost\" = \"xyes\"; then\n+    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n+    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n+    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n+        boost_lib_version_req_sub_minor=\"0\"\n+        fi\n+    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n+    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+    succeeded=no\n+\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    libsubdirs=\"lib\"\n+    ax_arch=`uname -m`\n+    if test $ax_arch = x86_64 -o $ax_arch = ppc64 -o $ax_arch = s390x -o $ax_arch = sparc64; then\n+        libsubdirs=\"lib64 lib lib64\"\n+    fi\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    if test \"$ac_boost_path\" != \"\"; then\n+        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n+        for ac_boost_path_tmp in $libsubdirs; do\n+                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n+                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n+                        break\n+                fi\n+        done\n+    elif test \"$cross_compiling\" != yes; then\n+        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    fi\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    if test \"$ac_boost_lib_path\" != \"\"; then\n+       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n+    fi\n+\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    @%:@include <boost/version.hpp>\n+    ]], [[\n+    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+    // Everything is okay\n+    #else\n+    #  error Boost version is too old\n+    #endif\n+    ]])],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\"; then\n+        _version=0\n+        if test \"$ac_boost_path\" != \"\"; then\n+            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"$V_CHECK\" = \"1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+            fi\n+        else\n+            if test \"$cross_compiling\" != yes; then\n+                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"$V_CHECK\" = \"1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$ac_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test \"$ac_boost_lib_path\" = \"\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test \"x$BOOST_ROOT\" != \"x\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        @%:@include <boost/version.hpp>\n+        ]], [[\n+        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+        // Everything is okay\n+        #else\n+        #  error Boost version is too old\n+        #endif\n+        ]])],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"$succeeded\" != \"yes\" ; then\n+        if test \"$_version\" = \"0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_SUBST(BOOST_CPPFLAGS)\n+        AC_SUBST(BOOST_LDFLAGS)\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+fi\n+\n+])"
      },
      {
        "sha": "2a62da8d89f9e284edbe4f00a0988cc984dce23d",
        "filename": "m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/ax_boost_filesystem.m4?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 21\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_filesystem*.so* $BOOSTLIBDIR/libboost_filesystem*.dylib* $BOOSTLIBDIR/libboost_filesystem*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_filesystem.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.a*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.dylib$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_filesystem*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_filesystem.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_filesystem.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d612f91da36a2d55f8676f958cb46397c4509135",
        "filename": "m4/ax_boost_program_options.m4",
        "status": "added",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/ax_boost_program_options.m4?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,108 @@\n+# ============================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n+# ============================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROGRAM_OPTIONS\n+#\n+# DESCRIPTION\n+#\n+#   Test for program options library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROGRAM_OPTIONS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n+[\n+\tAC_ARG_WITH([boost-program-options],\n+\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n+                       [use the program options library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_program_options_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_program_options_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t    export want_boost\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n+\t\t\t\t\t   ax_cv_boost_program_options,\n+\t\t\t\t\t   [AC_LANG_PUSH(C++)\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+                                                          ]],\n+                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                   return 0;]])],\n+                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n+\t\t\t\t\tAC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n+\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n+                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                fi\n+                else\n+                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n+                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                   [link_program_options=\"no\"])\n+                  done\n+                fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n+\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n+\t\t\t\tfi\n+\t\tfi\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "7fbf6d360d7f2ab8e9811ce0cfb6d40cef64ed17",
        "filename": "m4/ax_boost_system.m4",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/ax_boost_system.m4?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,120 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 14\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+                                   [[boost::system::system_category]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_system*.so* $BOOSTLIBDIR/libboost_system*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_system.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_system*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_system.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d9cd8a1d1d4bf04e121976a9989dccf4b5c88a38",
        "filename": "m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/ax_boost_thread.m4?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,153 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+\tAC_ARG_WITH([boost-thread],\n+\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_thread_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+\t\t\t\t\t   ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t # let us handle platform dependent issues in\n+\t\t\t # configure.ac\n+\n+\t\t\t # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t\t\t # \t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+\t\t\t # elif test \"x$build_os\" = \"xming32\" ; then\n+\t\t\t # \t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+\t\t\t # else\n+\t\t\t # \tCXXFLAGS=\"-pthread $CXXFLAGS\"\n+\t\t\t # fi\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n+                                   [[boost::thread_group thrds;\n+                                   return 0;]])],\n+                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+           # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+\t   # \t   elif test \"x$build_os\" = \"xming32\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+\t   # \t   else\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+\t   # \t   fi\n+\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+                        # case \"x$build_os\" in\n+                        #   *bsd* )\n+                        #        LDFLAGS=\"-pthread $LDFLAGS\"\n+                        #   break;\n+                        #   ;;\n+                        # esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_thread*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.a*$;\\1;'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_thread*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t# if test \"x$link_thread\" = \"xno\"; then\n+\t\t\t# \tAC_MSG_ERROR(Could not link against $ax_lib !)\n+                        # else\n+                        #    case \"x$build_os\" in\n+                        #       *bsd* )\n+\t\t\t# \tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        #       break;\n+                        #       ;;\n+                        #    esac\n+\n+\t\t\t# fi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "f0e0bc619ecba963d09e297d193ba0641984ba51",
        "filename": "m4/wxwin.m4",
        "status": "added",
        "additions": 1062,
        "deletions": 0,
        "changes": 1062,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/m4/wxwin.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/m4/wxwin.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/m4/wxwin.m4?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,1062 @@\n+dnl ---------------------------------------------------------------------------\n+dnl Author:          wxWidgets development team,\n+dnl                  Francesco Montorsi,\n+dnl                  Bob McCown (Mac-testing)\n+dnl Creation date:   24/11/2001\n+dnl RCS-ID:          $Id$\n+dnl ---------------------------------------------------------------------------\n+\n+dnl ===========================================================================\n+dnl Table of Contents of this macro file:\n+dnl -------------------------------------\n+dnl\n+dnl SECTION A: wxWidgets main macros\n+dnl  - WX_CONFIG_OPTIONS\n+dnl  - WX_CONFIG_CHECK\n+dnl  - WXRC_CHECK\n+dnl  - WX_STANDARD_OPTIONS\n+dnl  - WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS\n+dnl  - WX_DETECT_STANDARD_OPTION_VALUES\n+dnl\n+dnl SECTION B: wxWidgets-related utilities\n+dnl  - WX_LIKE_LIBNAME\n+dnl  - WX_ARG_ENABLE_YESNOAUTO\n+dnl  - WX_ARG_WITH_YESNOAUTO\n+dnl\n+dnl SECTION C: messages to the user\n+dnl  - WX_STANDARD_OPTIONS_SUMMARY_MSG\n+dnl  - WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN\n+dnl  - WX_STANDARD_OPTIONS_SUMMARY_MSG_END\n+dnl  - WX_BOOLOPT_SUMMARY\n+dnl\n+dnl The special \"WX_DEBUG_CONFIGURE\" variable can be set to 1 to enable extra\n+dnl debug output on stdout from these macros.\n+dnl ===========================================================================\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl Macros for wxWidgets detection. Typically used in configure.in as:\n+dnl\n+dnl     AC_ARG_ENABLE(...)\n+dnl     AC_ARG_WITH(...)\n+dnl        ...\n+dnl     WX_CONFIG_OPTIONS\n+dnl        ...\n+dnl        ...\n+dnl     WX_CONFIG_CHECK([2.6.0], [wxWin=1])\n+dnl     if test \"$wxWin\" != 1; then\n+dnl        AC_MSG_ERROR([\n+dnl                wxWidgets must be installed on your system\n+dnl                but wx-config script couldn't be found.\n+dnl\n+dnl                Please check that wx-config is in path, the directory\n+dnl                where wxWidgets libraries are installed (returned by\n+dnl                'wx-config --libs' command) is in LD_LIBRARY_PATH or\n+dnl                equivalent variable and wxWidgets version is 2.3.4 or above.\n+dnl        ])\n+dnl     fi\n+dnl     CPPFLAGS=\"$CPPFLAGS $WX_CPPFLAGS\"\n+dnl     CXXFLAGS=\"$CXXFLAGS $WX_CXXFLAGS_ONLY\"\n+dnl     CFLAGS=\"$CFLAGS $WX_CFLAGS_ONLY\"\n+dnl\n+dnl     LIBS=\"$LIBS $WX_LIBS\"\n+dnl\n+dnl If you want to support standard --enable-debug/unicode/shared options, you\n+dnl may do the following:\n+dnl\n+dnl     ...\n+dnl     AC_CANONICAL_SYSTEM\n+dnl\n+dnl     # define configure options\n+dnl     WX_CONFIG_OPTIONS\n+dnl     WX_STANDARD_OPTIONS([debug,unicode,shared,toolkit,wxshared])\n+dnl\n+dnl     # basic configure checks\n+dnl     ...\n+dnl\n+dnl     # we want to always have DEBUG==WX_DEBUG and UNICODE==WX_UNICODE\n+dnl     WX_DEBUG=$DEBUG\n+dnl     WX_UNICODE=$UNICODE\n+dnl\n+dnl     WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS\n+dnl     WX_CONFIG_CHECK([2.8.0], [wxWin=1],,[html,core,net,base],[$WXCONFIG_FLAGS])\n+dnl     WX_DETECT_STANDARD_OPTION_VALUES\n+dnl\n+dnl     # write the output files\n+dnl     AC_CONFIG_FILES([Makefile ...])\n+dnl     AC_OUTPUT\n+dnl\n+dnl     # optional: just to show a message to the user\n+dnl     WX_STANDARD_OPTIONS_SUMMARY_MSG\n+dnl\n+dnl ---------------------------------------------------------------------------\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_CONFIG_OPTIONS\n+dnl\n+dnl adds support for --wx-prefix, --wx-exec-prefix, --with-wxdir and\n+dnl --wx-config command line options\n+dnl ---------------------------------------------------------------------------\n+\n+AC_DEFUN([WX_CONFIG_OPTIONS],\n+[\n+    AC_ARG_WITH(wxdir,\n+                [  --with-wxdir=PATH       Use uninstalled version of wxWidgets in PATH],\n+                [ wx_config_name=\"$withval/wx-config\"\n+                  wx_config_args=\"--inplace\"])\n+    AC_ARG_WITH(wx-config,\n+                [  --with-wx-config=CONFIG wx-config script to use (optional)],\n+                wx_config_name=\"$withval\" )\n+    AC_ARG_WITH(wx-prefix,\n+                [  --with-wx-prefix=PREFIX Prefix where wxWidgets is installed (optional)],\n+                wx_config_prefix=\"$withval\", wx_config_prefix=\"\")\n+    AC_ARG_WITH(wx-exec-prefix,\n+                [  --with-wx-exec-prefix=PREFIX\n+                          Exec prefix where wxWidgets is installed (optional)],\n+                wx_config_exec_prefix=\"$withval\", wx_config_exec_prefix=\"\")\n+])\n+\n+dnl Helper macro for checking if wx version is at least $1.$2.$3, set's\n+dnl wx_ver_ok=yes if it is:\n+AC_DEFUN([_WX_PRIVATE_CHECK_VERSION],\n+[\n+    wx_ver_ok=\"\"\n+    if test \"x$WX_VERSION\" != x ; then\n+      if test $wx_config_major_version -gt $1; then\n+        wx_ver_ok=yes\n+      else\n+        if test $wx_config_major_version -eq $1; then\n+           if test $wx_config_minor_version -gt $2; then\n+              wx_ver_ok=yes\n+           else\n+              if test $wx_config_minor_version -eq $2; then\n+                 if test $wx_config_micro_version -ge $3; then\n+                    wx_ver_ok=yes\n+                 fi\n+              fi\n+           fi\n+        fi\n+      fi\n+    fi\n+])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_CONFIG_CHECK(VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND\n+dnl                  [, WX-LIBS [, ADDITIONAL-WX-CONFIG-FLAGS]]]])\n+dnl\n+dnl Test for wxWidgets, and define WX_C*FLAGS, WX_LIBS and WX_LIBS_STATIC\n+dnl (the latter is for static linking against wxWidgets). Set WX_CONFIG_NAME\n+dnl environment variable to override the default name of the wx-config script\n+dnl to use. Set WX_CONFIG_PATH to specify the full path to wx-config - in this\n+dnl case the macro won't even waste time on tests for its existence.\n+dnl\n+dnl Optional WX-LIBS argument contains comma- or space-separated list of\n+dnl wxWidgets libraries to link against. If it is not specified then WX_LIBS\n+dnl and WX_LIBS_STATIC will contain flags to link with all of the core\n+dnl wxWidgets libraries.\n+dnl\n+dnl Optional ADDITIONAL-WX-CONFIG-FLAGS argument is appended to wx-config\n+dnl invocation command in present. It can be used to fine-tune lookup of\n+dnl best wxWidgets build available.\n+dnl\n+dnl Example use:\n+dnl   WX_CONFIG_CHECK([2.6.0], [wxWin=1], [wxWin=0], [html,core,net]\n+dnl                    [--unicode --debug])\n+dnl ---------------------------------------------------------------------------\n+\n+dnl\n+dnl Get the cflags and libraries from the wx-config script\n+dnl\n+AC_DEFUN([WX_CONFIG_CHECK],\n+[\n+  dnl do we have wx-config name: it can be wx-config or wxd-config or ...\n+  if test x${WX_CONFIG_NAME+set} != xset ; then\n+     WX_CONFIG_NAME=wx-config\n+  fi\n+\n+  if test \"x$wx_config_name\" != x ; then\n+     WX_CONFIG_NAME=\"$wx_config_name\"\n+  fi\n+\n+  dnl deal with optional prefixes\n+  if test x$wx_config_exec_prefix != x ; then\n+     wx_config_args=\"$wx_config_args --exec-prefix=$wx_config_exec_prefix\"\n+     WX_LOOKUP_PATH=\"$wx_config_exec_prefix/bin\"\n+  fi\n+  if test x$wx_config_prefix != x ; then\n+     wx_config_args=\"$wx_config_args --prefix=$wx_config_prefix\"\n+     WX_LOOKUP_PATH=\"$WX_LOOKUP_PATH:$wx_config_prefix/bin\"\n+  fi\n+  if test \"$cross_compiling\" = \"yes\"; then\n+     wx_config_args=\"$wx_config_args --host=$host_alias\"\n+  fi\n+\n+  dnl don't search the PATH if WX_CONFIG_NAME is absolute filename\n+  if test -x \"$WX_CONFIG_NAME\" ; then\n+     AC_MSG_CHECKING(for wx-config)\n+     WX_CONFIG_PATH=\"$WX_CONFIG_NAME\"\n+     AC_MSG_RESULT($WX_CONFIG_PATH)\n+  else\n+     AC_PATH_PROG(WX_CONFIG_PATH, $WX_CONFIG_NAME, no, \"$WX_LOOKUP_PATH:$PATH\")\n+  fi\n+\n+  if test \"$WX_CONFIG_PATH\" != \"no\" ; then\n+    WX_VERSION=\"\"\n+\n+    min_wx_version=ifelse([$1], ,2.2.1,$1)\n+    if test -z \"$5\" ; then\n+      AC_MSG_CHECKING([for wxWidgets version >= $min_wx_version])\n+    else\n+      AC_MSG_CHECKING([for wxWidgets version >= $min_wx_version ($5)])\n+    fi\n+\n+    dnl don't add the libraries ($4) to this variable as this would result in\n+    dnl an error when it's used with --version below\n+    WX_CONFIG_WITH_ARGS=\"$WX_CONFIG_PATH $wx_config_args $5\"\n+\n+    WX_VERSION=`$WX_CONFIG_WITH_ARGS --version 2>/dev/null`\n+    wx_config_major_version=`echo $WX_VERSION | \\\n+           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n+    wx_config_minor_version=`echo $WX_VERSION | \\\n+           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n+    wx_config_micro_version=`echo $WX_VERSION | \\\n+           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n+\n+    wx_requested_major_version=`echo $min_wx_version | \\\n+           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n+    wx_requested_minor_version=`echo $min_wx_version | \\\n+           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n+    wx_requested_micro_version=`echo $min_wx_version | \\\n+           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n+\n+    _WX_PRIVATE_CHECK_VERSION([$wx_requested_major_version],\n+                              [$wx_requested_minor_version],\n+                              [$wx_requested_micro_version])\n+\n+    if test -n \"$wx_ver_ok\"; then\n+      AC_MSG_RESULT(yes (version $WX_VERSION))\n+      WX_LIBS=`$WX_CONFIG_WITH_ARGS --libs $4`\n+\n+      dnl is this even still appropriate?  --static is a real option now\n+      dnl and WX_CONFIG_WITH_ARGS is likely to contain it if that is\n+      dnl what the user actually wants, making this redundant at best.\n+      dnl For now keep it in case anyone actually used it in the past.\n+      AC_MSG_CHECKING([for wxWidgets static library])\n+      WX_LIBS_STATIC=`$WX_CONFIG_WITH_ARGS --static --libs $4 2>/dev/null`\n+      if test \"x$WX_LIBS_STATIC\" = \"x\"; then\n+        AC_MSG_RESULT(no)\n+      else\n+        AC_MSG_RESULT(yes)\n+      fi\n+\n+      dnl starting with version 2.2.6 wx-config has --cppflags argument\n+      wx_has_cppflags=\"\"\n+      if test $wx_config_major_version -gt 2; then\n+        wx_has_cppflags=yes\n+      else\n+        if test $wx_config_major_version -eq 2; then\n+           if test $wx_config_minor_version -gt 2; then\n+              wx_has_cppflags=yes\n+           else\n+              if test $wx_config_minor_version -eq 2; then\n+                 if test $wx_config_micro_version -ge 6; then\n+                    wx_has_cppflags=yes\n+                 fi\n+              fi\n+           fi\n+        fi\n+      fi\n+\n+      dnl starting with version 2.7.0 wx-config has --rescomp option\n+      wx_has_rescomp=\"\"\n+      if test $wx_config_major_version -gt 2; then\n+        wx_has_rescomp=yes\n+      else\n+        if test $wx_config_major_version -eq 2; then\n+           if test $wx_config_minor_version -ge 7; then\n+              wx_has_rescomp=yes\n+           fi\n+        fi\n+      fi\n+      if test \"x$wx_has_rescomp\" = x ; then\n+         dnl cannot give any useful info for resource compiler\n+         WX_RESCOMP=\n+      else\n+         WX_RESCOMP=`$WX_CONFIG_WITH_ARGS --rescomp`\n+      fi\n+\n+      if test \"x$wx_has_cppflags\" = x ; then\n+         dnl no choice but to define all flags like CFLAGS\n+         WX_CFLAGS=`$WX_CONFIG_WITH_ARGS --cflags $4`\n+         WX_CPPFLAGS=$WX_CFLAGS\n+         WX_CXXFLAGS=$WX_CFLAGS\n+\n+         WX_CFLAGS_ONLY=$WX_CFLAGS\n+         WX_CXXFLAGS_ONLY=$WX_CFLAGS\n+      else\n+         dnl we have CPPFLAGS included in CFLAGS included in CXXFLAGS\n+         WX_CPPFLAGS=`$WX_CONFIG_WITH_ARGS --cppflags $4`\n+         WX_CXXFLAGS=`$WX_CONFIG_WITH_ARGS --cxxflags $4`\n+         WX_CFLAGS=`$WX_CONFIG_WITH_ARGS --cflags $4`\n+\n+         WX_CFLAGS_ONLY=`echo $WX_CFLAGS | sed \"s@^$WX_CPPFLAGS *@@\"`\n+         WX_CXXFLAGS_ONLY=`echo $WX_CXXFLAGS | sed \"s@^$WX_CFLAGS *@@\"`\n+      fi\n+\n+      ifelse([$2], , :, [$2])\n+\n+    else\n+\n+       if test \"x$WX_VERSION\" = x; then\n+          dnl no wx-config at all\n+          AC_MSG_RESULT(no)\n+       else\n+          AC_MSG_RESULT(no (version $WX_VERSION is not new enough))\n+       fi\n+\n+       WX_CFLAGS=\"\"\n+       WX_CPPFLAGS=\"\"\n+       WX_CXXFLAGS=\"\"\n+       WX_LIBS=\"\"\n+       WX_LIBS_STATIC=\"\"\n+       WX_RESCOMP=\"\"\n+\n+       if test ! -z \"$5\"; then\n+\n+          wx_error_message=\"\n+    The configuration you asked for $PACKAGE_NAME requires a wxWidgets\n+    build with the following settings:\n+        $5\n+    but such build is not available.\n+\n+    To see the wxWidgets builds available on this system, please use\n+    'wx-config --list' command. To use the default build, returned by\n+    'wx-config --selected-config', use the options with their 'auto'\n+    default values.\"\n+\n+       fi\n+\n+       wx_error_message=\"\n+    The requested wxWidgets build couldn't be found.\n+    $wx_error_message\n+\n+    If you still get this error, then check that 'wx-config' is\n+    in path, the directory where wxWidgets libraries are installed\n+    (returned by 'wx-config --libs' command) is in LD_LIBRARY_PATH\n+    or equivalent variable and wxWidgets version is $1 or above.\"\n+\n+       ifelse([$3], , AC_MSG_ERROR([$wx_error_message]), [$3])\n+\n+    fi\n+  else\n+\n+    WX_CFLAGS=\"\"\n+    WX_CPPFLAGS=\"\"\n+    WX_CXXFLAGS=\"\"\n+    WX_LIBS=\"\"\n+    WX_LIBS_STATIC=\"\"\n+    WX_RESCOMP=\"\"\n+\n+    ifelse([$3], , :, [$3])\n+\n+  fi\n+\n+  AC_SUBST(WX_CPPFLAGS)\n+  AC_SUBST(WX_CFLAGS)\n+  AC_SUBST(WX_CXXFLAGS)\n+  AC_SUBST(WX_CFLAGS_ONLY)\n+  AC_SUBST(WX_CXXFLAGS_ONLY)\n+  AC_SUBST(WX_LIBS)\n+  AC_SUBST(WX_LIBS_STATIC)\n+  AC_SUBST(WX_VERSION)\n+  AC_SUBST(WX_RESCOMP)\n+\n+  dnl need to export also WX_VERSION_MINOR and WX_VERSION_MAJOR symbols\n+  dnl to support wxpresets bakefiles (we export also WX_VERSION_MICRO for completeness):\n+  WX_VERSION_MAJOR=\"$wx_config_major_version\"\n+  WX_VERSION_MINOR=\"$wx_config_minor_version\"\n+  WX_VERSION_MICRO=\"$wx_config_micro_version\"\n+  AC_SUBST(WX_VERSION_MAJOR)\n+  AC_SUBST(WX_VERSION_MINOR)\n+  AC_SUBST(WX_VERSION_MICRO)\n+])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl Get information on the wxrc program for making C++, Python and xrs\n+dnl resource files.\n+dnl\n+dnl     AC_ARG_ENABLE(...)\n+dnl     AC_ARG_WITH(...)\n+dnl        ...\n+dnl     WX_CONFIG_OPTIONS\n+dnl        ...\n+dnl     WX_CONFIG_CHECK(2.6.0, wxWin=1)\n+dnl     if test \"$wxWin\" != 1; then\n+dnl        AC_MSG_ERROR([\n+dnl                wxWidgets must be installed on your system\n+dnl                but wx-config script couldn't be found.\n+dnl\n+dnl                Please check that wx-config is in path, the directory\n+dnl                where wxWidgets libraries are installed (returned by\n+dnl                'wx-config --libs' command) is in LD_LIBRARY_PATH or\n+dnl                equivalent variable and wxWidgets version is 2.6.0 or above.\n+dnl        ])\n+dnl     fi\n+dnl\n+dnl     WXRC_CHECK([HAVE_WXRC=1], [HAVE_WXRC=0])\n+dnl     if test \"x$HAVE_WXRC\" != x1; then\n+dnl         AC_MSG_ERROR([\n+dnl                The wxrc program was not installed or not found.\n+dnl\n+dnl                Please check the wxWidgets installation.\n+dnl         ])\n+dnl     fi\n+dnl\n+dnl     CPPFLAGS=\"$CPPFLAGS $WX_CPPFLAGS\"\n+dnl     CXXFLAGS=\"$CXXFLAGS $WX_CXXFLAGS_ONLY\"\n+dnl     CFLAGS=\"$CFLAGS $WX_CFLAGS_ONLY\"\n+dnl\n+dnl     LDFLAGS=\"$LDFLAGS $WX_LIBS\"\n+dnl ---------------------------------------------------------------------------\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WXRC_CHECK([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])\n+dnl\n+dnl Test for wxWidgets' wxrc program for creating either C++, Python or XRS\n+dnl resources.  The variable WXRC will be set and substituted in the configure\n+dnl script and Makefiles.\n+dnl\n+dnl Example use:\n+dnl   WXRC_CHECK([wxrc=1], [wxrc=0])\n+dnl ---------------------------------------------------------------------------\n+\n+dnl\n+dnl wxrc program from the wx-config script\n+dnl\n+AC_DEFUN([WXRC_CHECK],\n+[\n+  AC_ARG_VAR([WXRC], [Path to wxWidget's wxrc resource compiler])\n+\n+  if test \"x$WX_CONFIG_NAME\" = x; then\n+    AC_MSG_ERROR([The wxrc tests must run after wxWidgets test.])\n+  else\n+\n+    AC_MSG_CHECKING([for wxrc])\n+\n+    if test \"x$WXRC\" = x ; then\n+      dnl wx-config --utility is a new addition to wxWidgets:\n+      _WX_PRIVATE_CHECK_VERSION(2,5,3)\n+      if test -n \"$wx_ver_ok\"; then\n+        WXRC=`$WX_CONFIG_WITH_ARGS --utility=wxrc`\n+      fi\n+    fi\n+\n+    if test \"x$WXRC\" = x ; then\n+      AC_MSG_RESULT([not found])\n+      ifelse([$2], , :, [$2])\n+    else\n+      AC_MSG_RESULT([$WXRC])\n+      ifelse([$1], , :, [$1])\n+    fi\n+\n+    AC_SUBST(WXRC)\n+  fi\n+])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_LIKE_LIBNAME([output-var] [prefix], [name])\n+dnl\n+dnl Sets the \"output-var\" variable to the name of a library named with same\n+dnl wxWidgets rule.\n+dnl E.g. for output-var=='lib', name=='test', prefix='mine', sets\n+dnl      the $lib variable to:\n+dnl          'mine_gtk2ud_test-2.8'\n+dnl      if WX_PORT=gtk2, WX_UNICODE=1, WX_DEBUG=1 and WX_RELEASE=28\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_LIKE_LIBNAME],\n+    [\n+        wx_temp=\"$2\"\"_\"\"$WX_PORT\"\n+\n+        dnl add the [u][d] string\n+        if test \"$WX_UNICODE\" = \"1\"; then\n+            wx_temp=\"$wx_temp\"\"u\"\n+        fi\n+        if test \"$WX_DEBUG\" = \"1\"; then\n+            wx_temp=\"$wx_temp\"\"d\"\n+        fi\n+\n+        dnl complete the name of the lib\n+        wx_temp=\"$wx_temp\"\"_\"\"$3\"\"-$WX_VERSION_MAJOR.$WX_VERSION_MINOR\"\n+\n+        dnl save it in the user's variable\n+        $1=$wx_temp\n+    ])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_ARG_ENABLE_YESNOAUTO/WX_ARG_WITH_YESNOAUTO\n+dnl\n+dnl Two little custom macros which define the ENABLE/WITH configure arguments.\n+dnl Macro arguments:\n+dnl $1 = the name of the --enable / --with  feature\n+dnl $2 = the name of the variable associated\n+dnl $3 = the description of that feature\n+dnl $4 = the default value for that feature\n+dnl $5 = additional action to do in case option is given with \"yes\" value\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_ARG_ENABLE_YESNOAUTO],\n+         [AC_ARG_ENABLE($1,\n+            AC_HELP_STRING([--enable-$1], [$3 (default is $4)]),\n+            [], [enableval=\"$4\"])\n+\n+            dnl Show a message to the user about this option\n+            AC_MSG_CHECKING([for the --enable-$1 option])\n+            if test \"$enableval\" = \"yes\" ; then\n+                AC_MSG_RESULT([yes])\n+                $2=1\n+                $5\n+            elif test \"$enableval\" = \"no\" ; then\n+                AC_MSG_RESULT([no])\n+                $2=0\n+            elif test \"$enableval\" = \"auto\" ; then\n+                AC_MSG_RESULT([will be automatically detected])\n+                $2=\"auto\"\n+            else\n+                AC_MSG_ERROR([\n+    Unrecognized option value (allowed values: yes, no, auto)\n+                ])\n+            fi\n+         ])\n+\n+AC_DEFUN([WX_ARG_WITH_YESNOAUTO],\n+         [AC_ARG_WITH($1,\n+            AC_HELP_STRING([--with-$1], [$3 (default is $4)]),\n+            [], [withval=\"$4\"])\n+\n+            dnl Show a message to the user about this option\n+            AC_MSG_CHECKING([for the --with-$1 option])\n+            if test \"$withval\" = \"yes\" ; then\n+                AC_MSG_RESULT([yes])\n+                $2=1\n+                $5\n+            dnl NB: by default we don't allow --with-$1=no option\n+            dnl     since it does not make much sense !\n+            elif test \"$6\" = \"1\" -a \"$withval\" = \"no\" ; then\n+                AC_MSG_RESULT([no])\n+                $2=0\n+            elif test \"$withval\" = \"auto\" ; then\n+                AC_MSG_RESULT([will be automatically detected])\n+                $2=\"auto\"\n+            else\n+                AC_MSG_ERROR([\n+    Unrecognized option value (allowed values: yes, auto)\n+                ])\n+            fi\n+         ])\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_STANDARD_OPTIONS([options-to-add])\n+dnl\n+dnl Adds to the configure script one or more of the following options:\n+dnl   --enable-[debug|unicode|shared|wxshared|wxdebug]\n+dnl   --with-[gtk|msw|motif|x11|mac|mgl|dfb]\n+dnl   --with-wxversion\n+dnl Then checks for their presence and eventually set the DEBUG, UNICODE, SHARED,\n+dnl PORT, WX_SHARED, WX_DEBUG, variables to one of the \"yes\", \"no\", \"auto\" values.\n+dnl\n+dnl Note that e.g. UNICODE != WX_UNICODE; the first is the value of the\n+dnl --enable-unicode option (in boolean format) while the second indicates\n+dnl if wxWidgets was built in Unicode mode (and still is in boolean format).\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_STANDARD_OPTIONS],\n+        [\n+\n+        dnl the following lines will expand to WX_ARG_ENABLE_YESNOAUTO calls if and only if\n+        dnl the $1 argument contains respectively the debug,unicode or shared options.\n+\n+        dnl be careful here not to set debug flag if only \"wxdebug\" was specified\n+        ifelse(regexp([$1], [\\bdebug]), [-1],,\n+               [WX_ARG_ENABLE_YESNOAUTO([debug], [DEBUG], [Build in debug mode], [auto])])\n+\n+        ifelse(index([$1], [unicode]), [-1],,\n+               [WX_ARG_ENABLE_YESNOAUTO([unicode], [UNICODE], [Build in Unicode mode], [auto])])\n+\n+        ifelse(regexp([$1], [\\bshared]), [-1],,\n+               [WX_ARG_ENABLE_YESNOAUTO([shared], [SHARED], [Build as shared library], [auto])])\n+\n+        dnl WX_ARG_WITH_YESNOAUTO cannot be used for --with-toolkit since it's an option\n+        dnl which must be able to accept the auto|gtk1|gtk2|msw|... values\n+        ifelse(index([$1], [toolkit]), [-1],,\n+               [\n+                AC_ARG_WITH([toolkit],\n+                            AC_HELP_STRING([--with-toolkit],\n+                                           [Build against a specific wxWidgets toolkit (default is auto)]),\n+                            [], [withval=\"auto\"])\n+\n+                dnl Show a message to the user about this option\n+                AC_MSG_CHECKING([for the --with-toolkit option])\n+                if test \"$withval\" = \"auto\" ; then\n+                    AC_MSG_RESULT([will be automatically detected])\n+                    TOOLKIT=\"auto\"\n+                else\n+                    TOOLKIT=\"$withval\"\n+\n+                    dnl PORT must be one of the allowed values\n+                    if test \"$TOOLKIT\" != \"gtk1\" -a \"$TOOLKIT\" != \"gtk2\" -a \\\n+                            \"$TOOLKIT\" != \"msw\" -a \"$TOOLKIT\" != \"motif\" -a \\\n+                            \"$TOOLKIT\" != \"x11\" -a \"$TOOLKIT\" != \"mac\" -a \\\n+                            \"$TOOLKIT\" != \"mgl\" -a \"$TOOLKIT\" != \"dfb\" ; then\n+                        AC_MSG_ERROR([\n+    Unrecognized option value (allowed values: auto, gtk1, gtk2, msw, motif, x11, mac, mgl, dfb)\n+                        ])\n+                    fi\n+\n+                    AC_MSG_RESULT([$TOOLKIT])\n+                fi\n+               ])\n+\n+        dnl ****** IMPORTANT *******\n+        dnl   Unlike for the UNICODE setting, you can build your program in\n+        dnl   shared mode against a static build of wxWidgets. Thus we have the\n+        dnl   following option which allows these mixtures. E.g.\n+        dnl\n+        dnl      ./configure --disable-shared --with-wxshared\n+        dnl\n+        dnl   will build your library in static mode against the first available\n+        dnl   shared build of wxWidgets.\n+        dnl\n+        dnl   Note that's not possible to do the viceversa:\n+        dnl\n+        dnl      ./configure --enable-shared --without-wxshared\n+        dnl\n+        dnl   Doing so you would try to build your library in shared mode against a static\n+        dnl   build of wxWidgets. This is not possible (you would mix PIC and non PIC code) !\n+        dnl   A check for this combination of options is in WX_DETECT_STANDARD_OPTION_VALUES\n+        dnl   (where we know what 'auto' should be expanded to).\n+        dnl\n+        dnl   If you try to build something in ANSI mode against a UNICODE build\n+        dnl   of wxWidgets or in RELEASE mode against a DEBUG build of wxWidgets,\n+        dnl   then at best you'll get ton of linking errors !\n+        dnl ************************\n+\n+        ifelse(index([$1], [wxshared]), [-1],,\n+               [\n+                WX_ARG_WITH_YESNOAUTO(\n+                    [wxshared], [WX_SHARED],\n+                    [Force building against a shared build of wxWidgets, even if --disable-shared is given],\n+                    [auto], [], [1])\n+               ])\n+\n+        dnl Just like for SHARED and WX_SHARED it may happen that some adventurous\n+        dnl peoples will want to mix a wxWidgets release build with a debug build of\n+        dnl his app/lib. So, we have both DEBUG and WX_DEBUG variables.\n+        ifelse(index([$1], [wxdebug]), [-1],,\n+               [\n+                WX_ARG_WITH_YESNOAUTO(\n+                    [wxdebug], [WX_DEBUG],\n+                    [Force building against a debug build of wxWidgets, even if --disable-debug is given],\n+                    [auto], [], [1])\n+               ])\n+\n+        dnl WX_ARG_WITH_YESNOAUTO cannot be used for --with-wxversion since it's an option\n+        dnl which accepts the \"auto|2.6|2.7|2.8|2.9|3.0\" etc etc values\n+        ifelse(index([$1], [wxversion]), [-1],,\n+               [\n+                AC_ARG_WITH([wxversion],\n+                            AC_HELP_STRING([--with-wxversion],\n+                                           [Build against a specific version of wxWidgets (default is auto)]),\n+                            [], [withval=\"auto\"])\n+\n+                dnl Show a message to the user about this option\n+                AC_MSG_CHECKING([for the --with-wxversion option])\n+                if test \"$withval\" = \"auto\" ; then\n+                    AC_MSG_RESULT([will be automatically detected])\n+                    WX_RELEASE=\"auto\"\n+                else\n+\n+                    wx_requested_major_version=`echo $withval | \\\n+                        sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).*/\\1/'`\n+                    wx_requested_minor_version=`echo $withval | \\\n+                        sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).*/\\2/'`\n+\n+                    dnl both vars above must be exactly 1 digit\n+                    if test \"${#wx_requested_major_version}\" != \"1\" -o \\\n+                            \"${#wx_requested_minor_version}\" != \"1\" ; then\n+                        AC_MSG_ERROR([\n+    Unrecognized option value (allowed values: auto, 2.6, 2.7, 2.8, 2.9, 3.0)\n+                        ])\n+                    fi\n+\n+                    WX_RELEASE=\"$wx_requested_major_version\"\".\"\"$wx_requested_minor_version\"\n+                    AC_MSG_RESULT([$WX_RELEASE])\n+                fi\n+               ])\n+\n+        if test \"$WX_DEBUG_CONFIGURE\" = \"1\"; then\n+            echo \"[[dbg]] DEBUG: $DEBUG, WX_DEBUG: $WX_DEBUG\"\n+            echo \"[[dbg]] UNICODE: $UNICODE, WX_UNICODE: $WX_UNICODE\"\n+            echo \"[[dbg]] SHARED: $SHARED, WX_SHARED: $WX_SHARED\"\n+            echo \"[[dbg]] TOOLKIT: $TOOLKIT, WX_TOOLKIT: $WX_TOOLKIT\"\n+            echo \"[[dbg]] VERSION: $VERSION, WX_RELEASE: $WX_RELEASE\"\n+        fi\n+    ])\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS\n+dnl\n+dnl Sets the WXCONFIG_FLAGS string using the SHARED,DEBUG,UNICODE variable values\n+dnl which are different from \"auto\".\n+dnl Thus this macro needs to be called only once all options have been set.\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS],\n+        [\n+        if test \"$WX_SHARED\" = \"1\" ; then\n+            WXCONFIG_FLAGS=\"--static=no \"\n+        elif test \"$WX_SHARED\" = \"0\" ; then\n+            WXCONFIG_FLAGS=\"--static=yes \"\n+        fi\n+\n+        if test \"$WX_DEBUG\" = \"1\" ; then\n+            WXCONFIG_FLAGS=\"$WXCONFIG_FLAGS\"\"--debug=yes \"\n+        elif test \"$WX_DEBUG\" = \"0\" ; then\n+            WXCONFIG_FLAGS=\"$WXCONFIG_FLAGS\"\"--debug=no \"\n+        fi\n+\n+        dnl The user should have set WX_UNICODE=UNICODE\n+        if test \"$WX_UNICODE\" = \"1\" ; then\n+            WXCONFIG_FLAGS=\"$WXCONFIG_FLAGS\"\"--unicode=yes \"\n+        elif test \"$WX_UNICODE\" = \"0\" ; then\n+            WXCONFIG_FLAGS=\"$WXCONFIG_FLAGS\"\"--unicode=no \"\n+        fi\n+\n+        if test \"$TOOLKIT\" != \"auto\" ; then\n+            WXCONFIG_FLAGS=\"$WXCONFIG_FLAGS\"\"--toolkit=$TOOLKIT \"\n+        fi\n+\n+        if test \"$WX_RELEASE\" != \"auto\" ; then\n+            WXCONFIG_FLAGS=\"$WXCONFIG_FLAGS\"\"--version=$WX_RELEASE \"\n+        fi\n+\n+        dnl strip out the last space of the string\n+        WXCONFIG_FLAGS=${WXCONFIG_FLAGS% }\n+\n+        if test \"$WX_DEBUG_CONFIGURE\" = \"1\"; then\n+            echo \"[[dbg]] WXCONFIG_FLAGS: $WXCONFIG_FLAGS\"\n+        fi\n+    ])\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl _WX_SELECTEDCONFIG_CHECKFOR([RESULTVAR], [STRING], [MSG]\n+dnl                             [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])\n+dnl\n+dnl Outputs the given MSG. Then searches the given STRING in the wxWidgets\n+dnl additional CPP flags and put the result of the search in WX_$RESULTVAR\n+dnl also adding the \"yes\" or \"no\" message result to MSG.\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([_WX_SELECTEDCONFIG_CHECKFOR],\n+        [\n+        if test \"$$1\" = \"auto\" ; then\n+\n+            dnl The user does not have particular preferences for this option;\n+            dnl so we will detect the wxWidgets relative build setting and use it\n+            AC_MSG_CHECKING([$3])\n+\n+            dnl set WX_$1 variable to 1 if the $WX_SELECTEDCONFIG contains the $2\n+            dnl string or to 0 otherwise.\n+            dnl NOTE: 'expr match STRING REGEXP' cannot be used since on Mac it\n+            dnl       doesn't work; we use 'expr STRING : REGEXP' instead\n+            WX_$1=$(expr \"$WX_SELECTEDCONFIG\" : \".*$2.*\")\n+\n+            if test \"$WX_$1\" != \"0\"; then\n+                WX_$1=1\n+                AC_MSG_RESULT([yes])\n+                ifelse([$4], , :, [$4])\n+            else\n+                WX_$1=0\n+                AC_MSG_RESULT([no])\n+                ifelse([$5], , :, [$5])\n+            fi\n+        else\n+\n+            dnl Use the setting given by the user\n+            WX_$1=$$1\n+        fi\n+    ])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_DETECT_STANDARD_OPTION_VALUES\n+dnl\n+dnl Detects the values of the following variables:\n+dnl 1) WX_RELEASE\n+dnl 2) WX_UNICODE\n+dnl 3) WX_DEBUG\n+dnl 4) WX_SHARED    (and also WX_STATIC)\n+dnl 5) WX_PORT\n+dnl from the previously selected wxWidgets build; this macro in fact must be\n+dnl called *after* calling the WX_CONFIG_CHECK macro.\n+dnl\n+dnl Note that the WX_VERSION_MAJOR, WX_VERSION_MINOR symbols are already set\n+dnl by WX_CONFIG_CHECK macro\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_DETECT_STANDARD_OPTION_VALUES],\n+        [\n+        dnl IMPORTANT: WX_VERSION contains all three major.minor.micro digits,\n+        dnl            while WX_RELEASE only the major.minor ones.\n+        WX_RELEASE=\"$WX_VERSION_MAJOR\"\"$WX_VERSION_MINOR\"\n+        if test $WX_RELEASE -lt 26 ; then\n+\n+            AC_MSG_ERROR([\n+    Cannot detect the wxWidgets configuration for the selected wxWidgets build\n+    since its version is $WX_VERSION < 2.6.0; please install a newer\n+    version of wxWidgets.\n+                         ])\n+        fi\n+\n+        dnl The wx-config we are using understands the \"--selected_config\"\n+        dnl option which returns an easy-parseable string !\n+        WX_SELECTEDCONFIG=$($WX_CONFIG_WITH_ARGS --selected_config)\n+\n+        if test \"$WX_DEBUG_CONFIGURE\" = \"1\"; then\n+            echo \"[[dbg]] Using wx-config --selected-config\"\n+            echo \"[[dbg]] WX_SELECTEDCONFIG: $WX_SELECTEDCONFIG\"\n+        fi\n+\n+\n+        dnl we could test directly for WX_SHARED with a line like:\n+        dnl    _WX_SELECTEDCONFIG_CHECKFOR([SHARED], [shared],\n+        dnl                                [if wxWidgets was built in SHARED mode])\n+        dnl but wx-config --selected-config DOES NOT outputs the 'shared'\n+        dnl word when wx was built in shared mode; it rather outputs the\n+        dnl 'static' word when built in static mode.\n+        if test $WX_SHARED = \"1\"; then\n+            STATIC=0\n+        elif test $WX_SHARED = \"0\"; then\n+            STATIC=1\n+        elif test $WX_SHARED = \"auto\"; then\n+            STATIC=\"auto\"\n+        fi\n+\n+        dnl Now set the WX_UNICODE, WX_DEBUG, WX_STATIC variables\n+        _WX_SELECTEDCONFIG_CHECKFOR([UNICODE], [unicode],\n+                                    [if wxWidgets was built with UNICODE enabled])\n+        _WX_SELECTEDCONFIG_CHECKFOR([DEBUG], [debug],\n+                                    [if wxWidgets was built in DEBUG mode])\n+        _WX_SELECTEDCONFIG_CHECKFOR([STATIC], [static],\n+                                    [if wxWidgets was built in STATIC mode])\n+\n+        dnl init WX_SHARED from WX_STATIC\n+        if test \"$WX_STATIC\" != \"0\"; then\n+            WX_SHARED=0\n+        else\n+            WX_SHARED=1\n+        fi\n+\n+        AC_SUBST(WX_UNICODE)\n+        AC_SUBST(WX_DEBUG)\n+        AC_SUBST(WX_SHARED)\n+\n+        dnl detect the WX_PORT to use\n+        if test \"$TOOLKIT\" = \"auto\" ; then\n+\n+            dnl The user does not have particular preferences for this option;\n+            dnl so we will detect the wxWidgets relative build setting and use it\n+            AC_MSG_CHECKING([which wxWidgets toolkit was selected])\n+\n+            WX_GTKPORT1=$(expr \"$WX_SELECTEDCONFIG\" : \".*gtk1.*\")\n+            WX_GTKPORT2=$(expr \"$WX_SELECTEDCONFIG\" : \".*gtk2.*\")\n+            WX_MSWPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*msw.*\")\n+            WX_MOTIFPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*motif.*\")\n+            WX_OSXCOCOAPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*osx_cocoa.*\")\n+            WX_OSXCARBONPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*osx_carbon.*\")\n+            WX_X11PORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*x11.*\")\n+            WX_MGLPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*mgl.*\")\n+            WX_DFBPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*dfb.*\")\n+\n+            WX_PORT=\"unknown\"\n+            if test \"$WX_GTKPORT1\" != \"0\"; then WX_PORT=\"gtk1\"; fi\n+            if test \"$WX_GTKPORT2\" != \"0\"; then WX_PORT=\"gtk2\"; fi\n+            if test \"$WX_MSWPORT\" != \"0\"; then WX_PORT=\"msw\"; fi\n+            if test \"$WX_MOTIFPORT\" != \"0\"; then WX_PORT=\"motif\"; fi\n+            if test \"$WX_OSXCOCOAPORT\" != \"0\"; then WX_PORT=\"osx_cocoa\"; fi\n+            if test \"$WX_OSXCARBONPORT\" != \"0\"; then WX_PORT=\"osx_carbon\"; fi\n+            if test \"$WX_X11PORT\" != \"0\"; then WX_PORT=\"x11\"; fi\n+            if test \"$WX_MGLPORT\" != \"0\"; then WX_PORT=\"mgl\"; fi\n+            if test \"$WX_DFBPORT\" != \"0\"; then WX_PORT=\"dfb\"; fi\n+\n+            dnl NOTE: backward-compatible check for wx2.8; in wx2.9 the mac\n+            dnl       ports are called 'osx_cocoa' and 'osx_carbon' (see above)\n+            WX_MACPORT=$(expr \"$WX_SELECTEDCONFIG\" : \".*mac.*\")\n+            if test \"$WX_MACPORT\" != \"0\"; then WX_PORT=\"mac\"; fi\n+\n+            dnl check at least one of the WX_*PORT has been set !\n+\n+            if test \"$WX_PORT\" = \"unknown\" ; then\n+                AC_MSG_ERROR([\n+        Cannot detect the currently installed wxWidgets port !\n+        Please check your 'wx-config --cxxflags'...\n+                            ])\n+            fi\n+\n+            AC_MSG_RESULT([$WX_PORT])\n+        else\n+\n+            dnl Use the setting given by the user\n+            if test -z \"$TOOLKIT\" ; then\n+                WX_PORT=$TOOLKIT\n+            else\n+                dnl try with PORT\n+                WX_PORT=$PORT\n+            fi\n+        fi\n+\n+        AC_SUBST(WX_PORT)\n+\n+        if test \"$WX_DEBUG_CONFIGURE\" = \"1\"; then\n+            echo \"[[dbg]] Values of all WX_* options after final detection:\"\n+            echo \"[[dbg]] WX_DEBUG: $WX_DEBUG\"\n+            echo \"[[dbg]] WX_UNICODE: $WX_UNICODE\"\n+            echo \"[[dbg]] WX_SHARED: $WX_SHARED\"\n+            echo \"[[dbg]] WX_RELEASE: $WX_RELEASE\"\n+            echo \"[[dbg]] WX_PORT: $WX_PORT\"\n+        fi\n+\n+        dnl Avoid problem described in the WX_STANDARD_OPTIONS which happens when\n+        dnl the user gives the options:\n+        dnl      ./configure --enable-shared --without-wxshared\n+        dnl or just do\n+        dnl      ./configure --enable-shared\n+        dnl but there is only a static build of wxWidgets available.\n+        if test \"$WX_SHARED\" = \"0\" -a \"$SHARED\" = \"1\"; then\n+            AC_MSG_ERROR([\n+    Cannot build shared library against a static build of wxWidgets !\n+    This error happens because the wxWidgets build which was selected\n+    has been detected as static while you asked to build $PACKAGE_NAME\n+    as shared library and this is not possible.\n+    Use the '--disable-shared' option to build $PACKAGE_NAME\n+    as static library or '--with-wxshared' to use wxWidgets as shared library.\n+                         ])\n+        fi\n+\n+        dnl now we can finally update the DEBUG,UNICODE,SHARED options\n+        dnl to their final values if they were set to 'auto'\n+        if test \"$DEBUG\" = \"auto\"; then\n+            DEBUG=$WX_DEBUG\n+        fi\n+        if test \"$UNICODE\" = \"auto\"; then\n+            UNICODE=$WX_UNICODE\n+        fi\n+        if test \"$SHARED\" = \"auto\"; then\n+            SHARED=$WX_SHARED\n+        fi\n+        if test \"$TOOLKIT\" = \"auto\"; then\n+            TOOLKIT=$WX_PORT\n+        fi\n+\n+        dnl in case the user needs a BUILD=debug/release var...\n+        if test \"$DEBUG\" = \"1\"; then\n+            BUILD=\"debug\"\n+        elif test \"$DEBUG\" = \"0\" -o \"$DEBUG\" = \"\"; then\n+            BUILD=\"release\"\n+        fi\n+\n+        dnl respect the DEBUG variable adding the optimize/debug flags\n+        dnl NOTE: the CXXFLAGS are merged together with the CPPFLAGS so we\n+        dnl       don't need to set them, too\n+        if test \"$DEBUG\" = \"1\"; then\n+            CXXFLAGS=\"$CXXFLAGS -g -O0\"\n+            CFLAGS=\"$CFLAGS -g -O0\"\n+        else\n+            CXXFLAGS=\"$CXXFLAGS -O2\"\n+            CFLAGS=\"$CFLAGS -O2\"\n+        fi\n+    ])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_BOOLOPT_SUMMARY([name of the boolean variable to show summary for],\n+dnl                   [what to print when var is 1],\n+dnl                   [what to print when var is 0])\n+dnl\n+dnl Prints $2 when variable $1 == 1 and prints $3 when variable $1 == 0.\n+dnl This macro mainly exists just to make configure.ac scripts more readable.\n+dnl\n+dnl NOTE: you need to use the [\" my message\"] syntax for 2nd and 3rd arguments\n+dnl       if you want that m4 avoid to throw away the spaces prefixed to the\n+dnl       argument value.\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_BOOLOPT_SUMMARY],\n+        [\n+        if test \"x$$1\" = \"x1\" ; then\n+            echo $2\n+        elif test \"x$$1\" = \"x0\" ; then\n+            echo $3\n+        else\n+            echo \"$1 is $$1\"\n+        fi\n+    ])\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_STANDARD_OPTIONS_SUMMARY_MSG\n+dnl\n+dnl Shows a summary message to the user about the WX_* variable contents.\n+dnl This macro is used typically at the end of the configure script.\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_STANDARD_OPTIONS_SUMMARY_MSG],\n+        [\n+        echo\n+        echo \"  The wxWidgets build which will be used by $PACKAGE_NAME $PACKAGE_VERSION\"\n+        echo \"  has the following settings:\"\n+        WX_BOOLOPT_SUMMARY([WX_DEBUG],   [\"  - DEBUG build\"],  [\"  - RELEASE build\"])\n+        WX_BOOLOPT_SUMMARY([WX_UNICODE], [\"  - UNICODE mode\"], [\"  - ANSI mode\"])\n+        WX_BOOLOPT_SUMMARY([WX_SHARED],  [\"  - SHARED mode\"],  [\"  - STATIC mode\"])\n+        echo \"  - VERSION: $WX_VERSION\"\n+        echo \"  - PORT: $WX_PORT\"\n+    ])\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN, WX_STANDARD_OPTIONS_SUMMARY_MSG_END\n+dnl\n+dnl Like WX_STANDARD_OPTIONS_SUMMARY_MSG macro but these two macros also gives info\n+dnl about the configuration of the package which used the wxpresets.\n+dnl\n+dnl Typical usage:\n+dnl    WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN\n+dnl    echo \"   - Package setting 1: $SETTING1\"\n+dnl    echo \"   - Package setting 2: $SETTING1\"\n+dnl    ...\n+dnl    WX_STANDARD_OPTIONS_SUMMARY_MSG_END\n+dnl\n+dnl ---------------------------------------------------------------------------\n+AC_DEFUN([WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN],\n+        [\n+        echo\n+        echo \" ----------------------------------------------------------------\"\n+        echo \"  Configuration for $PACKAGE_NAME $PACKAGE_VERSION successfully completed.\"\n+        echo \"  Summary of main configuration settings for $PACKAGE_NAME:\"\n+        WX_BOOLOPT_SUMMARY([DEBUG], [\"  - DEBUG build\"], [\"  - RELEASE build\"])\n+        WX_BOOLOPT_SUMMARY([UNICODE], [\"  - UNICODE mode\"], [\"  - ANSI mode\"])\n+        WX_BOOLOPT_SUMMARY([SHARED], [\"  - SHARED mode\"], [\"  - STATIC mode\"])\n+    ])\n+\n+AC_DEFUN([WX_STANDARD_OPTIONS_SUMMARY_MSG_END],\n+        [\n+        WX_STANDARD_OPTIONS_SUMMARY_MSG\n+        echo\n+        echo \"  Now, just run make.\"\n+        echo \" ----------------------------------------------------------------\"\n+        echo\n+    ])\n+\n+\n+dnl ---------------------------------------------------------------------------\n+dnl Deprecated macro wrappers\n+dnl ---------------------------------------------------------------------------\n+\n+AC_DEFUN([AM_OPTIONS_WXCONFIG], [WX_CONFIG_OPTIONS])\n+AC_DEFUN([AM_PATH_WXCONFIG], [\n+    WX_CONFIG_CHECK([$1],[$2],[$3],[$4],[$5])\n+])\n+AC_DEFUN([AM_PATH_WXRC], [WXRC_CHECK([$1],[$2])])"
      },
      {
        "sha": "0bd9de600cd7c7833c39d764f5b586e4cf30d8a6",
        "filename": "src/Makefile.am",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,45 @@\n+SUBDIRS = cryptopp wx xpm json\n+\n+AM_CXXFLAGS = -I$(top_srcdir) $(HOST_CXXFLAGS) $(DEBUG_CXXFLAGS)\n+\n+\n+bin_PROGRAMS = bitcoind\n+\n+noinst_HEADERS = base58.h bignum.h db.h headers.h init.h irc.h key.h\t\\\n+\t\t main.h net.h noui.h rpc.h script.h serialize.h\t\t\\\n+\t\t strlcpy.h uint256.h util.h wallet.h keystore.h\n+\n+if BUILD_WX\n+\n+bin_PROGRAMS += bitcoin\n+# WX gui\n+bitcoin_SOURCES =  util.cpp script.cpp db.cpp net.cpp irc.cpp \\\n+\t\t\tmain.cpp rpc.cpp init.cpp wallet.cpp keystore.cpp\n+bitcoin_CPPFLAGS = -Icryptopp $(HOST_CPPFLAGS) $(GUI_CPPFLAGS) -DGUI=1 -Iwx \\\n+\t$(BOOST_CPPFLAGS) $(SSL_CPPFLAGS) $(CRYPTO_CPPFLAGS) $(GTHREAD2_CPPFLAGS) \n+bitcoin_LDADD = cryptopp/libcryptopp.a $(COMMON_LIBS) \\\n+   $(BOOST_LIBS) \\\n+   $(SSL_LIBS) \\\n+   $(CRYPTO_LIBS) \\\n+   $(GTHREAD2_LIBS) \\\n+   $(UPNP_LIBS) \\\n+   $(GUI_LIBS) \\\n+   $(HOST_LIBS)\n+\n+endif\n+\n+# Deamon only, no gui\n+bitcoind_SOURCES = util.cpp script.cpp db.cpp net.cpp irc.cpp \\\n+\t\t\tmain.cpp rpc.cpp init.cpp wallet.cpp keystore.cpp\n+bitcoind_CPPFLAGS = -Icryptopp $(HOST_CPPFLAGS) \\\n+\t$(BOOST_CPPFLAGS) $(SSL_CPPFLAGS) $(CRYPTO_CPPFLAGS) $(GTHREAD2_CPPFLAGS) \n+\n+bitcoind_LDADD = cryptopp/libcryptopp.a $(PROFILING_LIBS) \\\n+   $(COMMON_LIBS) \\\n+   $(BOOST_LIBS) \\\n+   $(SSL_LIBS) \\\n+   $(CRYPTO_LIBS) \\\n+   $(GTHREAD2_LIBS) \\\n+   $(UPNP_LIBS) \\\n+   $(HOST_LIBS)\n+"
      },
      {
        "sha": "579b5c0de875c79a33ac5e1e7735a058133461aa",
        "filename": "src/cryptopp/Makefile.am",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/cryptopp/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/cryptopp/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cryptopp/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,7 @@\n+\n+noinst_LIBRARIES = libcryptopp.a\n+\n+libcryptopp_a_SOURCES = sha.cpp cpu.cpp\n+\n+noinst_HEADERS = config.h cpu.h cryptlib.h iterhash.h misc.h \\\n+\t  pch.h secblock.h sha.h simple.h smartptr.h stdcpp.h"
      },
      {
        "sha": "ae9dd2c49742df8c1387b2fed2319349d18ff97f",
        "filename": "src/headers.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/headers.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/headers.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/headers.h?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -2,6 +2,8 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <auto-config.h>\n+\n #ifdef _MSC_VER\n #pragma warning(disable:4786)\n #pragma warning(disable:4804)"
      },
      {
        "sha": "a330634a82649a215f72dbcc05e9433c102ed231",
        "filename": "src/json/Makefile.am",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/json/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/json/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,7 @@\n+\n+noinst_HEADERS = json_spirit_error_position.h json_spirit_reader.cpp\t\\\n+\t\t json_spirit_reader_template.h json_spirit_utils.h\t\\\n+\t\t json_spirit_value.h json_spirit_writer.h\t\t\\\n+\t\t json_spirit.h json_spirit_reader.h\t\t\t\\\n+\t\t json_spirit_stream_reader.h json_spirit_value.cpp\t\\\n+\t\t json_spirit_writer.cpp json_spirit_writer_template.h"
      },
      {
        "sha": "11a3b5ea46b7f1f3c45563a6430141917a1fccaa",
        "filename": "src/wx/Makefile.am",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/wx/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/wx/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wx/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,15 @@\n+\n+if BUILD_WX\n+\n+AM_CXXFLAGS = -DGUI $(GUI_CXXFLAGS)\n+AM_CPPFLAGS = $(GUI_CPPFLAGS)\n+\n+INCLUDES = -I..\n+\n+noinst_LIBRARIES = libbtcwxgui.a\n+\n+libbtcwxgui_a_SOURCES = ui.cpp uibase.cpp\n+\n+noinst_HEADERS = ui.h uibase.h\n+\n+endif"
      },
      {
        "sha": "a49741f54f7da1956cf940211e09dba613c0a56a",
        "filename": "src/wx/ui.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/wx/ui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/wx/ui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wx/ui.cpp?ref=35471cade3427626b077487207c880a8528c8ea3",
        "previous_filename": "src/ui.cpp"
      },
      {
        "sha": "3f06ad90cb640e5bd9ffa3d7490d3a4b1ee46bd9",
        "filename": "src/wx/ui.h",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/wx/ui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/wx/ui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wx/ui.h?ref=35471cade3427626b077487207c880a8528c8ea3",
        "previous_filename": "src/ui.h"
      },
      {
        "sha": "1b901a1edb87c9b91752a8cca14a8db6d60ca916",
        "filename": "src/wx/uibase.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/wx/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/wx/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wx/uibase.cpp?ref=35471cade3427626b077487207c880a8528c8ea3",
        "previous_filename": "src/uibase.cpp"
      },
      {
        "sha": "78f3d1b385cd685e9562c1eb4400ea8ca2bb56ee",
        "filename": "src/wx/uibase.h",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/wx/uibase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/wx/uibase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wx/uibase.h?ref=35471cade3427626b077487207c880a8528c8ea3",
        "previous_filename": "src/uibase.h"
      },
      {
        "sha": "5194df07a01b7f8e87ab7a6d58e48ebae74081cb",
        "filename": "src/xpm/Makefile.am",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35471cade3427626b077487207c880a8528c8ea3/src/xpm/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35471cade3427626b077487207c880a8528c8ea3/src/xpm/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/xpm/Makefile.am?ref=35471cade3427626b077487207c880a8528c8ea3",
        "patch": "@@ -0,0 +1,5 @@\n+\n+noinst_HEADERS = about.xpm addressbook16.xpm addressbook20.xpm\t\\\n+                 bitcoin16.xpm bitcoin20.xpm bitcoin32.xpm\t\\\n+                 bitcoin48.xpm bitcoin80.xpm check.xpm\t\t\\\n+                 send16noshadow.xpm send16.xpm send20.xpm"
      }
    ]
  },
  {
    "sha": "095df971ee7153f716db7845d0bb941e33a3aa9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTVkZjk3MWVlNzE1M2Y3MTZkYjc4NDVkMGJiOTQxZTMzYTNhYTlm",
    "commit": {
      "author": {
        "name": "mark",
        "email": "mark@shotgunsoftware.com",
        "date": "2011-06-12T21:28:36Z"
      },
      "committer": {
        "name": "Jaromil",
        "email": "jaromil@dyne.org",
        "date": "2011-06-22T13:50:35Z"
      },
      "message": "* added sections to configure.ac to detect existence of SO_NOSIGPIPE and MSG_NOSIGNAL\n* switched to using HAVE_SO_NOSIGPIPE and HAVE_MSG_NOSIGNAL provided by autotools",
      "tree": {
        "sha": "1ce92d4fed11f2144bfd51c00820825978a3c281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ce92d4fed11f2144bfd51c00820825978a3c281"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/095df971ee7153f716db7845d0bb941e33a3aa9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/095df971ee7153f716db7845d0bb941e33a3aa9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/095df971ee7153f716db7845d0bb941e33a3aa9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/095df971ee7153f716db7845d0bb941e33a3aa9f/comments",
    "author": null,
    "committer": {
      "login": "jaromil",
      "id": 148059,
      "node_id": "MDQ6VXNlcjE0ODA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/148059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaromil",
      "html_url": "https://github.com/jaromil",
      "followers_url": "https://api.github.com/users/jaromil/followers",
      "following_url": "https://api.github.com/users/jaromil/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaromil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaromil/subscriptions",
      "organizations_url": "https://api.github.com/users/jaromil/orgs",
      "repos_url": "https://api.github.com/users/jaromil/repos",
      "events_url": "https://api.github.com/users/jaromil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaromil/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35471cade3427626b077487207c880a8528c8ea3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35471cade3427626b077487207c880a8528c8ea3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35471cade3427626b077487207c880a8528c8ea3"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 41,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5496baf626921f7e3c6281bd59b2ab61b10709ae",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/095df971ee7153f716db7845d0bb941e33a3aa9f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/095df971ee7153f716db7845d0bb941e33a3aa9f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=095df971ee7153f716db7845d0bb941e33a3aa9f",
        "patch": "@@ -260,6 +260,29 @@ AC_SUBST(GUI_CPPFLAGS)\n AC_SUBST(GUI_SUBDIRS)\n AM_CONDITIONAL([BUILD_WX], [test x$have_wx = xyes])\n \n+dnl **********************************************************************\n+dnl Check for MSG_NOSIGNAL\n+dnl **********************************************************************\n+AC_MSG_CHECKING(for MSG_NOSIGNAL)\n+AC_TRY_COMPILE([#include <sys/socket.h>],\n+ [ int f = MSG_NOSIGNAL; ],\n+ [ AC_MSG_RESULT(yes)\n+   AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,\n+             [Define this symbol if you have MSG_NOSIGNAL]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl **********************************************************************\n+dnl Check for SO_NOSIGPIPE (Darwin equivalent for MSG_NOSIGNAL)\n+dnl **********************************************************************\n+AC_MSG_CHECKING(for SO_NOSIGPIPE )\n+AC_TRY_COMPILE([#include <sys/socket.h>],\n+ [ int f = SO_NOSIGPIPE; ],\n+ [ AC_MSG_RESULT(yes)\n+   AC_DEFINE(HAVE_SO_NOSIGPIPE, 1,\n+             [Define this symbol if you have SO_NOSIGPIPE]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n \n dnl ==============================================================\n dnl compile with full warnings and debugging symbols"
      },
      {
        "sha": "0ff8277544eb7527408c071fdd5e442ba98b1e34",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/095df971ee7153f716db7845d0bb941e33a3aa9f/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/095df971ee7153f716db7845d0bb941e33a3aa9f/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=095df971ee7153f716db7845d0bb941e33a3aa9f",
        "patch": "@@ -64,7 +64,11 @@ static bool Send(SOCKET hSocket, const char* pszSend)\n     const char* pszEnd = psz + strlen(psz);\n     while (psz < pszEnd)\n     {\n+#ifdef HAVE_MSG_NOSIGNAL\n         int ret = send(hSocket, psz, pszEnd - psz, MSG_NOSIGNAL);\n+#else        \n+        int ret = send(hSocket, psz, pszEnd - psz, 0);\n+#endif\n         if (ret < 0)\n             return false;\n         psz += ret;"
      },
      {
        "sha": "8e3effb6e40ae38c6cef7e770a450c3c9347e89d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/095df971ee7153f716db7845d0bb941e33a3aa9f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/095df971ee7153f716db7845d0bb941e33a3aa9f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=095df971ee7153f716db7845d0bb941e33a3aa9f",
        "patch": "@@ -89,7 +89,7 @@ bool ConnectSocket(const CAddress& addrConnect, SOCKET& hSocketRet, int nTimeout\n     SOCKET hSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n     if (hSocket == INVALID_SOCKET)\n         return false;\n-#ifdef BSD\n+#ifdef HAVE_SO_NOSIGPIPE\n     int set = 1;\n     setsockopt(hSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&set, sizeof(int));\n #endif\n@@ -191,7 +191,11 @@ bool ConnectSocket(const CAddress& addrConnect, SOCKET& hSocketRet, int nTimeout\n         char* pszSocks4 = pszSocks4IP;\n         int nSize = sizeof(pszSocks4IP);\n \n+#ifdef HAVE_MSG_NOSIGNAL\n         int ret = send(hSocket, pszSocks4, nSize, MSG_NOSIGNAL);\n+#else        \n+        int ret = send(hSocket, pszSocks4, nSize, 0);\n+#endif\n         if (ret != nSize)\n         {\n             closesocket(hSocket);\n@@ -294,7 +298,11 @@ bool GetMyExternalIP2(const CAddress& addrConnect, const char* pszGet, const cha\n     if (!ConnectSocket(addrConnect, hSocket))\n         return error(\"GetMyExternalIP() : connection to %s failed\", addrConnect.ToString().c_str());\n \n+#ifdef HAVE_MSG_NOSIGNAL\n     send(hSocket, pszGet, strlen(pszGet), MSG_NOSIGNAL);\n+#else\n+    send(hSocket, pszGet, strlen(pszGet), 0);\n+#endif\n \n     string strLine;\n     while (RecvLine(hSocket, strLine))\n@@ -964,7 +972,11 @@ void ThreadSocketHandler2(void* parg)\n                     CDataStream& vSend = pnode->vSend;\n                     if (!vSend.empty())\n                     {\n+#ifdef HAVE_MSG_NOSIGNAL\n                         int nBytes = send(pnode->hSocket, &vSend[0], vSend.size(), MSG_NOSIGNAL | MSG_DONTWAIT);\n+#else                        \n+                        int nBytes = send(pnode->hSocket, &vSend[0], vSend.size(), MSG_DONTWAIT);\n+#endif                        \n                         if (nBytes > 0)\n                         {\n                             vSend.erase(vSend.begin(), vSend.begin() + nBytes);\n@@ -1553,7 +1565,7 @@ bool BindListenPort(string& strError)\n         return false;\n     }\n \n-#ifdef BSD\n+#ifdef HAVE_SO_NOSIGPIPE\n     // Different way of disabling SIGPIPE on BSD\n     setsockopt(hListenSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&nOne, sizeof(int));\n #endif"
      }
    ]
  }
]