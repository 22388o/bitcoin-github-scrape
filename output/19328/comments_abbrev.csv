fjahr,2020-06-19 14:01:53,cc @Sjors ,https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-646653238,646653238,
DrahtBot,2020-06-19 19:59:02,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19323 (gui: Fix regression in *txoutset* in GUI console by hebasto)\n* #19145 (Add hash_type MUHASH for gettxoutsetinfo b",https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-646839415,646839415,
MarcoFalke,2020-06-20 13:48:00,"```\ntest/fuzz/coins_view.cpp:281:23: error: no matching function for call to 'GetUTXOStats'\n\n                (void)GetUTXOStats(&coins_view_cache, stats);\n\n                      ^~~~~~~~~~~~\n\n./node/coinstats.h:39:6: note: candidate function not viable: requires at least 3 arguments, but 2 were provided\n\nbool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, const CoinStatsHashT",https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-646997095,646997095,
fjahr,2020-06-21 11:32:34,Fixed review comments plus some more formatting improvements,https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-647115861,647115861,
fjahr,2020-06-21 23:12:00,Addressed comments and CI failure.,https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-647193714,647193714,
MarcoFalke,2020-07-02 20:20:21,Checked that 40506bf93 is faster with the `none` option on my arm machine. Haven't yet reviewed the code of that commit,https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-653203629,653203629,
MarcoFalke,2020-07-06 12:06:23,"ACK 40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a ðŸ–¨\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a ðŸ–¨\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiC+Qv/UfSTrJYS3nGpNjOzD1xGJWB/hTnUlgwgMIm4UkrnJw5tpLgSxn",https://github.com/bitcoin/bitcoin/pull/19328#issuecomment-654193371,654193371,
MarcoFalke,2020-06-19 16:43:38,"nit in commit 87dd07e0382c6398d118d88c88b0c9ef24251e37\n\n```suggestion\nstatic bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, T hash_obj, const std::function<void()>& interruption_point)\n```",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442943981,442943981,src/node/coinstats.cpp
MarcoFalke,2020-06-19 16:44:33,"87dd07e0382c6398d118d88c88b0c9ef24251e37:\n\nAccording to the developer notes, assert(false) and with the appropriate comment",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442944374,442944374,src/node/coinstats.cpp
MarcoFalke,2020-06-19 16:45:45,"87dd07e0382c6398d118d88c88b0c9ef24251e37\n\nwhy is this needed? Looks like a str to me",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442944942,442944942,src/rpc/client.cpp
MarcoFalke,2020-06-19 16:47:26,"in commit ea41a5bdcc49566be0c23ef9362781e70f557bad:\n\nwhy is this not changed to NONE?",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442945625,442945625,src/rpc/blockchain.cpp
MarcoFalke,2020-06-19 16:51:16,"nit ea41a5bdcc49566be0c23ef9362781e70f557bad\n\n```suggestion\nstatic void ApplyStats(CCoinsStats& stats, nullptr_t, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n```",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442947356,442947356,src/node/coinstats.cpp
Sjors,2020-06-19 17:04:20,"Indeed, this should be dropped (try: `bitcoin-cli gettxoutsetinfo none`, it works without this line).",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442952980,442952980,src/rpc/client.cpp
Sjors,2020-06-19 17:15:08,"Agreed, this hash is unused in UTXO snapshots, as judged by the code as well as the hardcoded UTXO set has in `rpc_dumptxoutset.py`.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442957494,442957494,src/rpc/blockchain.cpp
Sjors,2020-06-19 17:18:33,"Maybe open a separate PR to see if there's support for deprecating `hash_serialized_2` and switch the default to `NONE` (pre-ACK, unless we find someone who actually uses this)",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r442959103,442959103,src/rpc/blockchain.cpp
fjahr,2020-06-19 22:29:44,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443065869,443065869,src/node/coinstats.cpp
fjahr,2020-06-19 22:29:52,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443065888,443065888,src/node/coinstats.cpp
fjahr,2020-06-19 22:30:00,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443065925,443065925,src/rpc/client.cpp
fjahr,2020-06-19 22:30:09,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443065960,443065960,src/rpc/blockchain.cpp
fjahr,2020-06-19 22:30:16,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443065982,443065982,src/node/coinstats.cpp
MarcoFalke,2020-06-19 22:33:12,"Should be identical to the other cases to make it grep-able. See dev-notes example:\n\n```cpp\nenum class Tabs {\n    INFO,\n    CONSOLE,\n    GRAPH,\n    PEERS\n};\n\nint GetInt(Tabs tab)\n{\n    switch (tab) {\n    case Tabs::INFO: return 0;\n    case Tabs::CONSOLE: return 1;\n    case Tabs::GRAPH: return 2;\n    case Tabs::PEERS: return 3;\n    } // no default case, so the comp",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443066599,443066599,src/node/coinstats.cpp
fjahr,2020-06-19 22:41:33,"Hm, at least BTCPayServer uses it for FastSync: https://github.com/btcpayserver/btcpayserver-docker/tree/master/contrib/FastSync. They say in the docs to compare the whole `gettxoutsetinfo` but the hash is really what ensures there is nothing malicious going on. But I am not sure how much that feature is actually used. I will reach out to them to get an opinion.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443068432,443068432,src/rpc/blockchain.cpp
MarcoFalke,2020-06-19 22:53:49,Is there any benefit of aggressively deprecating this? With the option to select no hash there should be no downside to just leaving the default as is,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443071007,443071007,src/rpc/blockchain.cpp
fjahr,2020-06-19 22:56:49,"Ok, thanks. Fixed.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443071554,443071554,src/node/coinstats.cpp
promag,2020-06-20 13:40:11,"ed4c7302298385b797000740960b06ff91082ce8\n\nnit `* view`.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443131733,443131733,src/node/coinstats.cpp
promag,2020-06-20 13:46:51,"ed4c7302298385b797000740960b06ff91082ce8\n\nnit, this format is not used. Also add space after `switch` above.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443132203,443132203,src/node/coinstats.cpp
MarcoFalke,2020-06-20 14:58:08,";)\nhttps://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy ",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443137142,443137142,src/node/coinstats.cpp
fjahr,2020-06-21 11:31:52,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443210295,443210295,src/node/coinstats.cpp
promag,2020-06-21 11:49:56,"nit, move code below to new function and here make it `const CoinStatsHashType hash_type = ParseHashType(request.params[0], CoinStatsHashType::HASH_SERIALIZED)` (2nd is default value if 1st is null).",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443211705,443211705,src/rpc/blockchain.cpp
promag,2020-06-21 11:52:02,"nit, I'd explicitly set `hash_type = CoinStatsHashType::HASH_SERIALIZED`.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443211877,443211877,src/rpc/blockchain.cpp
MarcoFalke,2020-06-21 12:51:49,"```\nnode/coinstats.cpp:44:44: error: unknown type name 'nullptr_t'; did you mean 'std::nullptr_t'?\n\nstatic void ApplyStats(CCoinsStats& stats, nullptr_t, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n\n                                           ^~~~~~~~~\n\n                                           std::nullptr_t\n\n/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../i",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443216727,443216727,src/node/coinstats.cpp
fjahr,2020-06-21 23:09:37,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443265512,443265512,src/rpc/blockchain.cpp
fjahr,2020-06-21 23:09:49,done,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443265523,443265523,src/rpc/blockchain.cpp
fjahr,2020-06-21 23:12:13,fixed,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r443265704,443265704,src/node/coinstats.cpp
Sjors,2020-06-30 10:03:03,Most people won't realise how slow this command is by default until they already issued it (though without an index is slow anyway).,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r447566116,447566116,src/rpc/blockchain.cpp
Sjors,2020-07-02 18:55:37,"I'd like to avoid this duplication, but it can wait.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r449210413,449210413,src/node/coinstats.cpp
fjahr,2020-07-05 11:51:07,I now remove it in the follow-up when adding hash_type MUHASH https://github.com/bitcoin/bitcoin/pull/19145/files#diff-0ab7b981bd35c1a1f45b5ed75013a698,https://github.com/bitcoin/bitcoin/pull/19328#discussion_r449868658,449868658,src/node/coinstats.cpp
MarcoFalke,2020-07-06 12:08:01,"style-nit: No need for the `else` and all the whitespace padding below\n\n```suggestion\n    }\n    const std::str...\n```",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r450175986,450175986,src/rpc/util.cpp
fjahr,2020-07-06 13:59:40,"Thanks, now fixed in #19145.",https://github.com/bitcoin/bitcoin/pull/19328#discussion_r450240315,450240315,src/rpc/util.cpp
