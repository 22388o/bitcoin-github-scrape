[
  {
    "sha": "605884ef21318fc3f326dbdf4901cb353ba63fab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDU4ODRlZjIxMzE4ZmMzZjMyNmRiZGY0OTAxY2IzNTNiYTYzZmFi",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-02T21:41:04Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-19T12:13:08Z"
      },
      "message": "refactor: Extract GetBogoSize function",
      "tree": {
        "sha": "fd8bdd87fb393994b82a852c37ede33462434277",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd8bdd87fb393994b82a852c37ede33462434277"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/605884ef21318fc3f326dbdf4901cb353ba63fab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl7sq9QVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jND9sP/jiN4VFsAFEtQbeCQcrlIWcCvWYL\n/hriYYb+u79vtu2hBlkTVnreBvSXx11d6PugOSHGo/VeKD12s0Wr5B2M50z6RaFZ\nrlgErOQEApUJgalgqGTKEYuAvoO75ds5PqCWkdGLevu+Y43pFjilxmLf9AjOeVpI\naT07uLLLWdMmDPRZ4f42EU3QnpFquuNeZ3KRPnWN7mNTukJJAY2TBPy6sV5dQTbE\nLVpeimID5QgGdAsW4BTf4G+QjZW602Z+4RaK7RhW5nc4W/HlvZDP9HwasSaW1pAH\nu+D1zFPo6R3O5DCeOhGCsf6guoBoxo6ZsSS/IbJcvcmz0rtj2jP8Qmh5BX4y9Y7z\nPVvNdV8gYfGiphFf61STIhNzDt4X1d1kXYxg3ZVDVMnus/UU7WshcUK4IPP7Rh2M\nP2s2YFJ074rlish1xzrvKvnzqWGNIZbXtwGbi1wU7LJoAFef9k3+K66B9SRC7pLZ\nQifo+pmEuum88V7obZ0pPt0lYLaX5Zn1ABINQ93ku9Vmton7RLamvVfwFPqjB2Cy\nIXb7YoKRFF+gW7m687eXiZ9fYsjeA4Tui1/l2pX/s2liOMHI4z8D/nF3wv/vqaUW\n6X6MYhs3s+tt7b+hJHdeHHloIOnvNJnoAnmLx0mkLh/QS24HnyuNwKkisDbOqGDT\nV8JNiUCdz49qfRIO\n=F1kU\n-----END PGP SIGNATURE-----",
        "payload": "tree fd8bdd87fb393994b82a852c37ede33462434277\nparent b33136b6ba9887f7db651c4c5264ca7f2f601df7\nauthor Fabian Jahr <fjahr@protonmail.com> 1591134064 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1592568788 +0200\n\nrefactor: Extract GetBogoSize function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/605884ef21318fc3f326dbdf4901cb353ba63fab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/605884ef21318fc3f326dbdf4901cb353ba63fab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/605884ef21318fc3f326dbdf4901cb353ba63fab/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b33136b6ba9887f7db651c4c5264ca7f2f601df7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b33136b6ba9887f7db651c4c5264ca7f2f601df7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b33136b6ba9887f7db651c4c5264ca7f2f601df7"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "faa62420cdedd48b1f8d2e9c6e4c054314960d5f",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/605884ef21318fc3f326dbdf4901cb353ba63fab/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/605884ef21318fc3f326dbdf4901cb353ba63fab/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=605884ef21318fc3f326dbdf4901cb353ba63fab",
        "patch": "@@ -8,12 +8,22 @@\n #include <coins.h>\n #include <hash.h>\n #include <serialize.h>\n-#include <validation.h>\n #include <uint256.h>\n #include <util/system.h>\n+#include <validation.h>\n \n #include <map>\n \n+static uint64_t GetBogoSize(const CScript& scriptPubKey)\n+{\n+    return 32 /* txid */ +\n+           4 /* vout index */ +\n+           4 /* height + coinbase */ +\n+           8 /* amount */ +\n+           2 /* scriptPubKey len */ +\n+           scriptPubKey.size() /* scriptPubKey */;\n+}\n+\n static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n {\n     assert(!outputs.empty());\n@@ -26,8 +36,7 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n         ss << VARINT_MODE(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);\n         stats.nTransactionOutputs++;\n         stats.nTotalAmount += output.second.out.nValue;\n-        stats.nBogoSize += 32 /* txid */ + 4 /* vout index */ + 4 /* height + coinbase */ + 8 /* amount */ +\n-                           2 /* scriptPubKey len */ + output.second.out.scriptPubKey.size() /* scriptPubKey */;\n+        stats.nBogoSize += GetBogoSize(output.second.out.scriptPubKey);\n     }\n     ss << VARINT(0u);\n }"
      }
    ]
  },
  {
    "sha": "a712cf6f6801157667fcf36d1c498b6fff6d328a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzEyY2Y2ZjY4MDExNTc2NjdmY2YzNmQxYzQ5OGI2ZmZmNmQzMjhh",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-02T21:52:34Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-21T22:55:44Z"
      },
      "message": "rpc: gettxoutsetinfo can specify hash_type (only legacy option for now)",
      "tree": {
        "sha": "1ac2dbe3f86e8d04b271fa0c187f522cf963c110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ac2dbe3f86e8d04b271fa0c187f522cf963c110"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a712cf6f6801157667fcf36d1c498b6fff6d328a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl7v5XQVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN1PwP+wYWlTtCAA1GlLXs0NMtjtJ77x27\nV0oQ1On2LyrUMaOyM2d9Gy3ePCmuu3DtrCR8r95/CFnNtNO3CWcboUfR0jaXitO4\nK2mF5uaY+j43tdEutbzDBSzian1c8AppnUpUnoXyNPupFdv1hJCIPKyO+n5NAE0A\nZHE8DrMXkqO02QklE2OelNdlSa2yEKPhm/1QpyrLKt5zLfJ14cgWqyN/HzJOX0w4\ni6W99u46ndMbDBMUD7Er6UU9DoQgDQZPgk5iSfHn7uB8AvHdqk9a8EFD1g/LrppL\nZTT5prfvAxM4Yo7ytk7hFQTMAl3oA3TDYBc7lNHvzGf/afFHKN0pYx4Kn9GAejI2\nfSzxtUXp19uvsCR1FYGlvQIi9SpkxeyzMttMK1IbYR4LNnQRlnSccf8PZklVJF4z\ncBJLdmXyydlZDnhSZJiw5BTelC8mtCsCuAd0L6z8bJsMXH+jCCXoJ6q/b/vUAv0V\nQOfUYNhwhPRqS8bUUmg3Fi0jHd9K97rBkYWe8ExSm/U5G6LMUvLa44n8WEe9sZs2\n7orQ/sSf0Z4Drs0eaVlttSBXBu6BCU8ancmhc1kryGfc5pih/VCkvp3oD8FYk5fB\nzTNapIE6MLM1aV4YUdIF4c/l9zTMeYyiuuMARQNC1bbraeoT+R5a+W8nGeSEVMUH\nYca4Xkp5WbViJzdj\n=HfPM\n-----END PGP SIGNATURE-----",
        "payload": "tree 1ac2dbe3f86e8d04b271fa0c187f522cf963c110\nparent 605884ef21318fc3f326dbdf4901cb353ba63fab\nauthor Fabian Jahr <fjahr@protonmail.com> 1591134754 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1592780144 +0200\n\nrpc: gettxoutsetinfo can specify hash_type (only legacy option for now)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a712cf6f6801157667fcf36d1c498b6fff6d328a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a712cf6f6801157667fcf36d1c498b6fff6d328a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a712cf6f6801157667fcf36d1c498b6fff6d328a/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "605884ef21318fc3f326dbdf4901cb353ba63fab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/605884ef21318fc3f326dbdf4901cb353ba63fab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/605884ef21318fc3f326dbdf4901cb353ba63fab"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 69,
      "deletions": 15
    },
    "files": [
      {
        "sha": "cc5e3cb62736e02f59b8891d91993a9e36e2329f",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 7,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "patch": "@@ -24,7 +24,7 @@ static uint64_t GetBogoSize(const CScript& scriptPubKey)\n            scriptPubKey.size() /* scriptPubKey */;\n }\n \n-static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n+static void ApplyStats(CCoinsStats& stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n {\n     assert(!outputs.empty());\n     ss << hash;\n@@ -42,19 +42,21 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n }\n \n //! Calculate statistics about the unspent transaction output set\n-bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, const std::function<void()>& interruption_point)\n+template <typename T>\n+static bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, T hash_obj, const std::function<void()>& interruption_point)\n {\n     stats = CCoinsStats();\n     std::unique_ptr<CCoinsViewCursor> pcursor(view->Cursor());\n     assert(pcursor);\n \n-    CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n     stats.hashBlock = pcursor->GetBestBlock();\n     {\n         LOCK(cs_main);\n         stats.nHeight = LookupBlockIndex(stats.hashBlock)->nHeight;\n     }\n-    ss << stats.hashBlock;\n+\n+    PrepareHash(hash_obj, stats);\n+\n     uint256 prevkey;\n     std::map<uint32_t, Coin> outputs;\n     while (pcursor->Valid()) {\n@@ -63,7 +65,7 @@ bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, const std::function<void\n         Coin coin;\n         if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n             if (!outputs.empty() && key.hash != prevkey) {\n-                ApplyStats(stats, ss, prevkey, outputs);\n+                ApplyStats(stats, hash_obj, prevkey, outputs);\n                 outputs.clear();\n             }\n             prevkey = key.hash;\n@@ -75,9 +77,33 @@ bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, const std::function<void\n         pcursor->Next();\n     }\n     if (!outputs.empty()) {\n-        ApplyStats(stats, ss, prevkey, outputs);\n+        ApplyStats(stats, hash_obj, prevkey, outputs);\n     }\n-    stats.hashSerialized = ss.GetHash();\n+\n+    FinalizeHash(hash_obj, stats);\n+\n     stats.nDiskSize = view->EstimateSize();\n     return true;\n }\n+\n+bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, CoinStatsHashType hash_type, const std::function<void()>& interruption_point)\n+{\n+    switch (hash_type) {\n+    case(CoinStatsHashType::HASH_SERIALIZED): {\n+        CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n+        return GetUTXOStats(view, stats, ss, interruption_point);\n+    }\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n+}\n+\n+// The legacy hash serializes the hashBlock\n+static void PrepareHash(CHashWriter& ss, CCoinsStats& stats)\n+{\n+    ss << stats.hashBlock;\n+}\n+\n+static void FinalizeHash(CHashWriter& ss, CCoinsStats& stats)\n+{\n+    stats.hashSerialized = ss.GetHash();\n+}"
      },
      {
        "sha": "1d0270d56db9a36a039bae313af0c6380d7ed9a0",
        "filename": "src/node/coinstats.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "patch": "@@ -14,6 +14,10 @@\n \n class CCoinsView;\n \n+enum class CoinStatsHashType {\n+    HASH_SERIALIZED,\n+};\n+\n struct CCoinsStats\n {\n     int nHeight{0};\n@@ -30,6 +34,6 @@ struct CCoinsStats\n };\n \n //! Calculate statistics about the unspent transaction output set\n-bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, const std::function<void()>& interruption_point = {});\n+bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, const CoinStatsHashType hash_type, const std::function<void()>& interruption_point = {});\n \n #endif // BITCOIN_NODE_COINSTATS_H"
      },
      {
        "sha": "8ba850be11758923ce75a189d64b93287bbabbcf",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "patch": "@@ -972,7 +972,9 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n             RPCHelpMan{\"gettxoutsetinfo\",\n                 \"\\nReturns statistics about the unspent transaction output set.\\n\"\n                 \"Note this call may take some time.\\n\",\n-                {},\n+                {\n+                    {\"hash_type\", RPCArg::Type::STR, /* default */ \"hash_serialized_2\", \"Which UTXO set hash should be calculated. Options: 'hash_serialized_2' (the legacy algorithm).\"},\n+                },\n                 RPCResult{\n                     RPCResult::Type::OBJ, \"\", \"\",\n                     {\n@@ -981,7 +983,7 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n                         {RPCResult::Type::NUM, \"transactions\", \"The number of transactions with unspent outputs\"},\n                         {RPCResult::Type::NUM, \"txouts\", \"The number of unspent transaction outputs\"},\n                         {RPCResult::Type::NUM, \"bogosize\", \"A meaningless metric for UTXO set size\"},\n-                        {RPCResult::Type::STR_HEX, \"hash_serialized_2\", \"The serialized hash\"},\n+                        {RPCResult::Type::STR_HEX, \"hash_serialized_2\", \"The serialized hash (only present if 'hash_serialized_2' hash_type is chosen)\"},\n                         {RPCResult::Type::NUM, \"disk_size\", \"The estimated size of the chainstate on disk\"},\n                         {RPCResult::Type::STR_AMOUNT, \"total_amount\", \"The total amount\"},\n                     }},\n@@ -996,14 +998,18 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n     CCoinsStats stats;\n     ::ChainstateActive().ForceFlushStateToDisk();\n \n+    const CoinStatsHashType hash_type = ParseHashType(request.params[0], CoinStatsHashType::HASH_SERIALIZED);\n+\n     CCoinsView* coins_view = WITH_LOCK(cs_main, return &ChainstateActive().CoinsDB());\n-    if (GetUTXOStats(coins_view, stats, RpcInterruptionPoint)) {\n+    if (GetUTXOStats(coins_view, stats, hash_type, RpcInterruptionPoint)) {\n         ret.pushKV(\"height\", (int64_t)stats.nHeight);\n         ret.pushKV(\"bestblock\", stats.hashBlock.GetHex());\n         ret.pushKV(\"transactions\", (int64_t)stats.nTransactions);\n         ret.pushKV(\"txouts\", (int64_t)stats.nTransactionOutputs);\n         ret.pushKV(\"bogosize\", (int64_t)stats.nBogoSize);\n-        ret.pushKV(\"hash_serialized_2\", stats.hashSerialized.GetHex());\n+        if (hash_type == CoinStatsHashType::HASH_SERIALIZED) {\n+            ret.pushKV(\"hash_serialized_2\", stats.hashSerialized.GetHex());\n+        }\n         ret.pushKV(\"disk_size\", stats.nDiskSize);\n         ret.pushKV(\"total_amount\", ValueFromAmount(stats.nTotalAmount));\n     } else {\n@@ -2316,7 +2322,7 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n \n         ::ChainstateActive().ForceFlushStateToDisk();\n \n-        if (!GetUTXOStats(&::ChainstateActive().CoinsDB(), stats, RpcInterruptionPoint)) {\n+        if (!GetUTXOStats(&::ChainstateActive().CoinsDB(), stats, CoinStatsHashType::HASH_SERIALIZED, RpcInterruptionPoint)) {\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n         }\n \n@@ -2377,7 +2383,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         {} },\n     { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          {\"verbose\"} },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n-    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },\n+    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {\"hash_type\"} },\n     { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n     { \"blockchain\",         \"savemempool\",            &savemempool,            {} },\n     { \"blockchain\",         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },"
      },
      {
        "sha": "bac7c722c16be18442953b87804bc28368b2473f",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "patch": "@@ -113,6 +113,21 @@ std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey)\n     return ParseHexV(find_value(o, strKey), strKey);\n }\n \n+CoinStatsHashType ParseHashType(const UniValue& param, const CoinStatsHashType default_type)\n+{\n+    if (param.isNull()) {\n+        return default_type;\n+    } else {\n+        std::string hash_type_input = param.get_str();\n+\n+        if (hash_type_input == \"hash_serialized_2\") {\n+            return CoinStatsHashType::HASH_SERIALIZED;\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%d is not a valid hash_type\", hash_type_input));\n+        }\n+    }\n+}\n+\n std::string HelpExampleCli(const std::string& methodname, const std::string& args)\n {\n     return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";"
      },
      {
        "sha": "96dd1ea74a7b416ffef92b41f0edf64f13917036",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_RPC_UTIL_H\n #define BITCOIN_RPC_UTIL_H\n \n+#include <node/coinstats.h>\n #include <node/transaction.h>\n #include <outputtype.h>\n #include <protocol.h>\n@@ -77,6 +78,8 @@ extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n+CoinStatsHashType ParseHashType(const UniValue& param, const CoinStatsHashType default_type);\n+\n extern CAmount AmountFromValue(const UniValue& value);\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);"
      },
      {
        "sha": "c186bef7ae7782b39cff28ad101a0dbc9d1f5476",
        "filename": "src/test/fuzz/coins_view.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/test/fuzz/coins_view.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a712cf6f6801157667fcf36d1c498b6fff6d328a/src/test/fuzz/coins_view.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/coins_view.cpp?ref=a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "patch": "@@ -278,7 +278,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             CCoinsStats stats;\n             bool expected_code_path = false;\n             try {\n-                (void)GetUTXOStats(&coins_view_cache, stats);\n+                (void)GetUTXOStats(&coins_view_cache, stats, CoinStatsHashType::HASH_SERIALIZED);\n             } catch (const std::logic_error&) {\n                 expected_code_path = true;\n             }"
      }
    ]
  },
  {
    "sha": "f17a4d1c4ddce6935a353004898fb4e8618a213e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTdhNGQxYzRkZGNlNjkzNWEzNTMwMDQ4OThmYjRlODYxOGEyMTNl",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-02T21:56:28Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-21T23:55:36Z"
      },
      "message": "rpc: Add hash_type NONE to gettxoutsetinfo",
      "tree": {
        "sha": "ac02ebbe6cb4014da200bf3e466efd74468c521c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac02ebbe6cb4014da200bf3e466efd74468c521c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f17a4d1c4ddce6935a353004898fb4e8618a213e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl7v83sVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNDAwP/jjqXilHB91nFIhmE/cRpCpHQaKH\n35AANulBVpOef8yCrCXDlhq6W7yBMILQsMqR9BlAegpBm/cjw2U1+8ruZXwYGy7L\nHWv/OXtHqwBffYZqqOt7GianfXvn3TxRz1CD3/3/wabcxqmRb1HpDiXZwDtsvnzw\nBtzIgNR3eD2XcaP70hZ6Z5vkG00jO/q7oEIryYyYEWhSwMrg0ZMM/RXOa4OX744U\nDfRVOai593J588tKdo0+TVNbIuYX/t5M9IqNdIzqQAoa3GkAgfEzcgJkc7wPzeE2\ndtCR14LKOgylGUapWpQPpOm2XQvDC2lwGy8jHmPyiBp3yVfM0cWDCH58yWvocwkC\nxgfo+4oDoJxaSqnDAjLAuntWdR+7Xmme1yTJmfP631CV6NhkozZn609RuF18gY0K\n9PUSjxAMV0LV1koqa3o+v/7hatQBrxEuZ6cZCZfboyzwjIbUoXEMI+Jwzi9wZaK7\nW2Jr5ZpBwin4Gro4kzGJTo4f5jD4oxPMX4HhfLZe0GqB5EtUGjq+s+zRE4QDb25n\noUIuXAw34TqHrCFYoH+KHvmrnaYOExqpQOwPz6DlQkTTqKAkgRwF+neS+ce2I1IV\n286IXgAKwlidaRqV7c34JEDEeAIFvze9OeWsvJfWvX9TwJ8jrJTPgjFm/7PQJ/eK\nFUu6DR5bvOQy7+C8\n=X7jZ\n-----END PGP SIGNATURE-----",
        "payload": "tree ac02ebbe6cb4014da200bf3e466efd74468c521c\nparent a712cf6f6801157667fcf36d1c498b6fff6d328a\nauthor Fabian Jahr <fjahr@protonmail.com> 1591134988 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1592783736 +0200\n\nrpc: Add hash_type NONE to gettxoutsetinfo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f17a4d1c4ddce6935a353004898fb4e8618a213e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f17a4d1c4ddce6935a353004898fb4e8618a213e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f17a4d1c4ddce6935a353004898fb4e8618a213e/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a712cf6f6801157667fcf36d1c498b6fff6d328a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a712cf6f6801157667fcf36d1c498b6fff6d328a"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 21,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fb46ea173148ba39d2ca966502c070ad2dba5783",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=f17a4d1c4ddce6935a353004898fb4e8618a213e",
        "patch": "@@ -41,6 +41,17 @@ static void ApplyStats(CCoinsStats& stats, CHashWriter& ss, const uint256& hash,\n     ss << VARINT(0u);\n }\n \n+static void ApplyStats(CCoinsStats& stats, std::nullptr_t, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n+{\n+    assert(!outputs.empty());\n+    stats.nTransactions++;\n+    for (const auto& output : outputs) {\n+        stats.nTransactionOutputs++;\n+        stats.nTotalAmount += output.second.out.nValue;\n+        stats.nBogoSize += GetBogoSize(output.second.out.scriptPubKey);\n+    }\n+}\n+\n //! Calculate statistics about the unspent transaction output set\n template <typename T>\n static bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, T hash_obj, const std::function<void()>& interruption_point)\n@@ -93,6 +104,9 @@ bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, CoinStatsHashType hash_t\n         CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n         return GetUTXOStats(view, stats, ss, interruption_point);\n     }\n+    case(CoinStatsHashType::NONE): {\n+        return GetUTXOStats(view, stats, nullptr, interruption_point);\n+    }\n     } // no default case, so the compiler can warn about missing cases\n     assert(false);\n }\n@@ -102,8 +116,10 @@ static void PrepareHash(CHashWriter& ss, CCoinsStats& stats)\n {\n     ss << stats.hashBlock;\n }\n+static void PrepareHash(std::nullptr_t, CCoinsStats& stats) {}\n \n static void FinalizeHash(CHashWriter& ss, CCoinsStats& stats)\n {\n     stats.hashSerialized = ss.GetHash();\n }\n+static void FinalizeHash(std::nullptr_t, CCoinsStats& stats) {}"
      },
      {
        "sha": "2a7441c10e7bd87aaf0ce648839be719c8a89612",
        "filename": "src/node/coinstats.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=f17a4d1c4ddce6935a353004898fb4e8618a213e",
        "patch": "@@ -16,6 +16,7 @@ class CCoinsView;\n \n enum class CoinStatsHashType {\n     HASH_SERIALIZED,\n+    NONE,\n };\n \n struct CCoinsStats"
      },
      {
        "sha": "2e9cccc2f403d62d4b1fc316f51431311ebae017",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=f17a4d1c4ddce6935a353004898fb4e8618a213e",
        "patch": "@@ -973,7 +973,7 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n                 \"\\nReturns statistics about the unspent transaction output set.\\n\"\n                 \"Note this call may take some time.\\n\",\n                 {\n-                    {\"hash_type\", RPCArg::Type::STR, /* default */ \"hash_serialized_2\", \"Which UTXO set hash should be calculated. Options: 'hash_serialized_2' (the legacy algorithm).\"},\n+                    {\"hash_type\", RPCArg::Type::STR, /* default */ \"hash_serialized_2\", \"Which UTXO set hash should be calculated. Options: 'hash_serialized_2' (the legacy algorithm), 'none'.\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::OBJ, \"\", \"\",\n@@ -2322,7 +2322,7 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n \n         ::ChainstateActive().ForceFlushStateToDisk();\n \n-        if (!GetUTXOStats(&::ChainstateActive().CoinsDB(), stats, CoinStatsHashType::HASH_SERIALIZED, RpcInterruptionPoint)) {\n+        if (!GetUTXOStats(&::ChainstateActive().CoinsDB(), stats, CoinStatsHashType::NONE, RpcInterruptionPoint)) {\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n         }\n "
      },
      {
        "sha": "7abf966226222ad94cefcc197f21055329a46103",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f17a4d1c4ddce6935a353004898fb4e8618a213e/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=f17a4d1c4ddce6935a353004898fb4e8618a213e",
        "patch": "@@ -122,6 +122,8 @@ CoinStatsHashType ParseHashType(const UniValue& param, const CoinStatsHashType d\n \n         if (hash_type_input == \"hash_serialized_2\") {\n             return CoinStatsHashType::HASH_SERIALIZED;\n+        } else if (hash_type_input == \"none\") {\n+            return CoinStatsHashType::NONE;\n         } else {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%d is not a valid hash_type\", hash_type_input));\n         }"
      }
    ]
  },
  {
    "sha": "40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDUwNmJmOTNmOTU1YWRmYmM0NDZjNGQ1ZmVlNGZhOGJjZmQ3ZDlh",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-19T13:21:35Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-21T23:55:41Z"
      },
      "message": "test: Test gettxouttsetinfo hash_type option",
      "tree": {
        "sha": "19cc59579551f4cf872a9708dac1795da55da3b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19cc59579551f4cf872a9708dac1795da55da3b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl7v830VHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNtUwP/iaIMuaDLG5UeE5Buwnms29vVPSt\nYooruqD2deLYKtXg40d+3hLH99GK1EukLR9xtvdGngWdDp1vXYrMh/OfaZll8N0K\nxQyTlaUU3rbzDprsn8pPcjat63b0p3DcXCvmZZV+Qmic4W5I74Zm7ebEhb3q/Zgr\nXOyFPcbZVzj2t63iQ+9G+Vhav9KTlEP4qNbbsRa7Ep874BfJg2ESExpsMHGMk6E5\nsuUR+vu6hsy2qF0S8CDejJid/gaehU2jiGTS3LN4gh3+xFT6rhW9yGcUoxnYjD8y\nWB6lbAXCHWH+oEoRuPny5DyyHyW0HJcz31Xd8hTbOhpx5BAe3pPwJhumFWOcNYvk\njBBmvhpTG5Ms4Yl25WcoF65Os2MXMa4izPAqaxZjpWbYj4UxCZdJhyklrvuEi494\n5wUmMGnWRXkNrmEyJ/sfTK5m8SNUvpg8psaKJFsJb2cn+SGX6TQI5lt0+DRetvbO\nRww0uoXUrMfj+QukVUoYVV/Bq9tgYiTkXfztP2JxawuYfP9FtxsYBTuKYay8Qpj/\ndUUdMH7fjoYRoCK79R7Sz8UgRN7hzSHGXTYC4QYR4MYyqRtA+hJZtOOpnvp73ktM\n9ld6iHr+i0MVZvSCmTxRiSF7MxjtbCyUYJQmLY85ArIFfUq5KTmDDNBzLJKmqY2/\nV4r81QfkEAU7MF/U\n=8iXH\n-----END PGP SIGNATURE-----",
        "payload": "tree 19cc59579551f4cf872a9708dac1795da55da3b3\nparent f17a4d1c4ddce6935a353004898fb4e8618a213e\nauthor Fabian Jahr <fjahr@protonmail.com> 1592572895 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1592783741 +0200\n\ntest: Test gettxouttsetinfo hash_type option\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f17a4d1c4ddce6935a353004898fb4e8618a213e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f17a4d1c4ddce6935a353004898fb4e8618a213e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f17a4d1c4ddce6935a353004898fb4e8618a213e"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7c70f30ca368dad8595f718e4f9a95ad5db16491",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=40506bf93f955adfbc446c4d5fee4fa8bcfd7d9a",
        "patch": "@@ -241,6 +241,17 @@ def _test_gettxoutsetinfo(self):\n         del res['disk_size'], res3['disk_size']\n         assert_equal(res, res3)\n \n+        self.log.info(\"Test hash_type option for gettxoutsetinfo()\")\n+        # Adding hash_type 'hash_serialized_2', which is the default, should\n+        # not change the result.\n+        res4 = node.gettxoutsetinfo(hash_type='hash_serialized_2')\n+        del res4['disk_size']\n+        assert_equal(res, res4)\n+\n+        # hash_type none should not return a UTXO set hash.\n+        res5 = node.gettxoutsetinfo(hash_type='none')\n+        assert 'hash_serialized_2' not in res5\n+\n     def _test_getblockheader(self):\n         node = self.nodes[0]\n "
      }
    ]
  }
]