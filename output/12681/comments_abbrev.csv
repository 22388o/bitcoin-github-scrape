promag,2018-03-13T23:16:52Z,Actually I think it's enough to fix the test and remove the lock. The lock assertion is already in LookupBlockIndex.,https://github.com/bitcoin/bitcoin/pull/12681#issuecomment-372850996,372850996,
ryanofsky,2018-03-13T23:45:08Z,"> Actually I think it's enough to fix the test and remove the lock. The lock assertion is already in LookupBlockIndex.\n\nSounds good. Removed the lock and new assert.\n\nUpdated 84ae51a95c40e1e11520f41c1f8783504de694b3 -> 33eb9071b98e63fd66c1211254e420535320eebd ([pr/locksmart.1](https://github.com/ryanofsky/bitcoin/commits/pr/locksmart.1) -> [pr/locksmart.2](https://github.com/ryanofsky/bitc",https://github.com/bitcoin/bitcoin/pull/12681#issuecomment-372856822,372856822,
promag,2018-03-14T00:07:25Z,"utACK 33eb9071.\n\nSorry for the bug, thanks @ryanofsky for the quick fix.",https://github.com/bitcoin/bitcoin/pull/12681#issuecomment-372861051,372861051,
MarcoFalke,2018-03-14T00:11:14Z,utACK 33eb9071b98e63fd66c1211254e420535320eebd,https://github.com/bitcoin/bitcoin/pull/12681#issuecomment-372861753,372861753,
MarcoFalke,2018-03-13T23:06:45Z,"Wouldn't it make sense to instead move this down to ComputeTimeSmart?\n\n```diff\n--- a/src/wallet/wallet.cpp\n+++ b/src/wallet/wallet.cpp\n@@ -899,7 +899,6 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n \n bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n {\n-    AssertLockHeld(cs_main); // Needed for ComputeTimeSmart\n     LOC",https://github.com/bitcoin/bitcoin/pull/12681#discussion_r174312140,174312140,src/wallet/wallet.cpp
