[
  {
    "sha": "63b3111f84daa421abc2889a550e86c17bf9609d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2IzMTExZjg0ZGFhNDIxYWJjMjg4OWE1NTBlODZjMTdiZjk2MDlk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-03-09T21:45:58Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-27T05:17:14Z"
      },
      "message": "build: quiet annoying warnings without adding new ones\n\nDisabling warnings can be tricky, because doing so can cause a different\ncompiler to create new warnings about unsupported disable flags. Also, some\nwarnings don't surface until they're paired with another warning (gcc). For\nexample, adding \"-Wno-foo\" won't cause any trouble, but if there's a legitimate\nwarning emitted, the \"unknown option -Wno-foo\" will show up as well.\n\nWork around this in 2 ways:\n\n1. When checking to see if -Wno-foo is supported, check for \"-Wfoo\" instead.\n2. Enable -Werror while checking 1.\n\nIf \"-Werror -Wfoo\" compiles, \"-Wno-foo\" is almost guaranteed to be supported.\n\n-Werror itself is also checked. If that fails to compile by itself, it likely\nmeans that the user added a flag that adds a warning. In that case, -Werror\nwon't be used while checking, and the build may be extra noisy. The user would\nneed to fix the bad input flag.\n\nAlso, silence 2 more additional warnings that can show up post-c++11.",
      "tree": {
        "sha": "b83930ad73ec9e693880a38c4ca3e87ec04d1cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b83930ad73ec9e693880a38c4ca3e87ec04d1cf2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63b3111f84daa421abc2889a550e86c17bf9609d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b3111f84daa421abc2889a550e86c17bf9609d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63b3111f84daa421abc2889a550e86c17bf9609d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b3111f84daa421abc2889a550e86c17bf9609d/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e26b62093ae21e89ed7d36a24a6b863f38ec631d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e26b62093ae21e89ed7d36a24a6b863f38ec631d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e26b62093ae21e89ed7d36a24a6b863f38ec631d"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 15,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e73f7e0868e650856af4bd46d46617ad229add08",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63b3111f84daa421abc2889a550e86c17bf9609d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63b3111f84daa421abc2889a550e86c17bf9609d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=63b3111f84daa421abc2889a550e86c17bf9609d",
        "patch": "@@ -185,6 +185,9 @@ AC_ARG_ENABLE([debug],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+AC_LANG_PUSH([C++])\n+AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n+\n if test \"x$enable_debug\" = xyes; then\n     CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n     if test \"x$GCC\" = xyes; then\n@@ -196,11 +199,19 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n-##       compatibility with the legacy buildsystem.\n-##\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\n+  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+\n+  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n+  ## set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n fi\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n@@ -222,8 +233,6 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n-AC_LANG_PUSH([C++])\n-\n use_pkgconfig=yes\n case $host in\n   *mingw*)"
      }
    ]
  }
]