[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552585162",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552585162",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552585162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU4NTE2Mg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T19:40:49Z",
    "updated_at": "2020-04-11T23:25:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18571 (fuzz: Disable debug log file by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552585162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552586058",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552586058",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552586058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU4NjA1OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T19:43:22Z",
    "updated_at": "2019-11-11T19:43:22Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke \r\n> I'd still argue that this should be parsed at the time of construction...\r\n\r\n@ryanofsky \r\n> It's not obvious that it's better to parse config values when they are first used instead of in AppInitParameterInteraction...\r\n\r\nI think that `AppInitParameterInteraction()` should be used for checking for parameter interactions. In cases where a parameter is just being read and stored in a global, it's better to keep that in the translation unit where it's used to avoid polluting the global namespace. Parsing and storing parameters in their own components also reduce code churn hotspots and reduces merge conflicts and rebases.\r\n\r\n> Would suggest making this a CChainState object...\r\n\r\nThis seems reasonable, although note `g_chainstate` has't yet been initialized at the point that we call `AppInitParameterInteraction`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552586058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552589646",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552589646",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552589646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU4OTY0Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T19:53:56Z",
    "updated_at": "2019-11-11T19:53:56Z",
    "author_association": "MEMBER",
    "body": "> This seems reasonable, although note g_chainstate has't yet been initialized at the point that we call AppInitParameterInteraction.\r\n\r\nI think we agree that `AppInitParameterInteraction` is the wrong place for this, so obviously this code would need to be called when the chainstate is initialized.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552589646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552591363",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552591363",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552591363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU5MTM2Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T19:59:00Z",
    "updated_at": "2019-11-11T19:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, would be good to look at specific cases, but the general tradeoff with this PR seems to be better error feedback for users and potentially simpler error handling in code vs \"polluting the global namespace\" and \"code churn hotspots\", and \"merge conflicts and rebases\".\r\n\r\n> This seems reasonable, although note `g_chainstate` has't yet been initialized at the point that we call `AppInitParameterInteraction`.\r\n\r\nYeah, sorry I was suggesting two different things. My first preference would be to keep parsing in AppInitParameterInteraction so it can happen as early as possible. But if that's a losing proposition, CChainState member would be preferable to static local.\r\n\r\nIf there are a lot of related options, it might make sense to introduce a struct similar to the coin control  struct which could hold parsed options and be passed around where needed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552591363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552599352",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552599352",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552599352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU5OTM1Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T20:21:52Z",
    "updated_at": "2019-11-11T20:21:52Z",
    "author_association": "MEMBER",
    "body": "> If there are a lot of related options, it might make sense to introduce a struct similar to the coin control struct which could hold parsed options and be passed around where needed.\r\n\r\nWe already do that for connman: https://dev.visucore.com/bitcoin/doxygen/struct_c_connman_1_1_options.html",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552599352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552610101",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552610101",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552610101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYxMDEwMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T20:51:15Z",
    "updated_at": "2019-11-11T20:51:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think we agree that `AppInitParameterInteraction` is the wrong place for this\r\n\r\nI don't agree `AppInitParameterInteraction` is the wrong place to parse and validate options. Or, I don't think it's the wrong time to validate and parse options. If relevant parsing were moved into a `ValidationParameterInteraction` function to be more modular, that would seem good too.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552610101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552612442",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552612442",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552612442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYxMjQ0Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T20:57:24Z",
    "updated_at": "2019-11-11T20:57:24Z",
    "author_association": "MEMBER",
    "body": "> If relevant parsing were moved into a ValidationParameterInteraction function to be more modular, that would seem good too.\r\n\r\nI agree this would be good. We do something similar for wallet: https://github.com/bitcoin/bitcoin/blob/a6f6333ba253cda83221ee529810cacf930e413f/src/init.cpp#L1116",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552612442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552651592",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552651592",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552651592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjY1MTU5Mg==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T22:46:26Z",
    "updated_at": "2019-11-11T22:46:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright. I've moved the `fCheckBlockIndex` value to the members of `Validation.cpp` and added a function `ValidationParameterInteraction(const CChainParams& chainparams)` function to `validation.h` and `validation.cpp` which I'm calling from `init.cpp::AppInitParameterInteraction`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552651592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552709104",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552709104",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552709104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjcwOTEwNA==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-12T02:44:21Z",
    "updated_at": "2019-11-12T02:44:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Code review ACK [eec8608](https://github.com/bitcoin/bitcoin/commit/eec8608577323536b55e75268a66b8c5657529d0). Seems good. Param checking is now split between:\r\n> \r\n>     * InitParameterInteraction\r\n> \r\n>     * AppInitParameterInteraction\r\n>       \r\n>       * WalletInit::ParameterInteraction\r\n>       * ValidationParameterInteraction\r\n\r\nGreat, thanks. I'm thinking that I'll add another commit to move `fCheckpointsEnabled` in the same style next.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552709104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552714406",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552714406",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552714406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjcxNDQwNg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-12T03:09:42Z",
    "updated_at": "2019-11-12T03:09:42Z",
    "author_association": "MEMBER",
    "body": "Could you add a motivation to the OP explaining the change, please. This is still a global (while hidden from other compilation untis) and it seems that the only way for tests to set this is to force set the argument and then call `ValidationParameterInteraction`.\r\n\r\nIt doesn't look like the tests are currently calling `ValidationParameterInteraction`. That looks like a regression and raises the question if the change and bundled complication is worth it.\r\n\r\nIf the long-term goal is to limit parameter parsing to a single function per module `FooParameteriInteraction`, then maybe `gArgs` should be passed in to `ValidationParameterInteraction`, so that it some day can be removed (or limited to live in init.cpp).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552714406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552724418",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552724418",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 552724418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjcyNDQxOA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-12T04:02:17Z",
    "updated_at": "2019-11-12T04:02:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Could you add a motivation to the OP explaining the change, please. This is still a global (while hidden from other compilation untis) and it seems that the only way for tests to set this is to force set the argument and then call `ValidationParameterInteraction`.\r\n\r\nI assume that is actually the goal of the PR: to limit access to the global so it's internal to validation.cpp and outside code (including test code) can't access it without setting a up a real configuration and initializing it with `ValidationParameterInteraction`.\r\n\r\nI don't know if this a good goal or not. I'm +0. Maybe isolating these global variables more will reduce merge conflicts and so on as suggested https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-552586058.\r\n\r\n> It doesn't look like the tests are currently calling `ValidationParameterInteraction`. That looks like a regression and raises the question if the change and bundled complication is worth it.\r\n\r\nThat does seem like a bug. Could be fixed by test code calling ValidationParameterInteraction, or by changing the default value from false to true:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/eec8608577323536b55e75268a66b8c5657529d0/src/validation.cpp#L118\r\n\r\n`ValidationParameterInteraction` could also take an option to set up all relevant variables for testing without the test framework having to poke specific variables.\r\n\r\n> If the long-term goal is to limit parameter parsing to a single function per module `FooParameteriInteraction`, then maybe `gArgs` should be passed in to `ValidationParameterInteraction`, so that it some day can be removed (or limited to live in init.cpp).\r\n\r\nThis would be reasonable. Could be partially implemented here. Implementing it fully might expand this PR too much to non-validation code.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552724418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614334593",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-614334593",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 614334593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDMzNDU5Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-15T23:47:12Z",
    "updated_at": "2020-04-15T23:47:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614334593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619384557",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#issuecomment-619384557",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17434",
    "id": 619384557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM4NDU1Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-25T14:03:26Z",
    "updated_at": "2020-04-25T14:03:26Z",
    "author_association": "MEMBER",
    "body": "@Xekyo Are you still working on this? Otherwise I suggest to close",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619384557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344609632",
    "pull_request_review_id": 314763446,
    "id": 344609632,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDYwOTYzMg==",
    "diff_hunk": "@@ -4729,6 +4728,7 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n \n void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n+    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "eec8608577323536b55e75268a66b8c5657529d0",
    "original_commit_id": "1b1e4213b695b9ec84e91ef1ef613171657800ba",
    "user": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\nvalidation.cpp:4731:73: error: use of undeclared identifier 'chainparams'\r\n\r\n    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\r\n```\r\n`chainparams` is not available in the scope, you should give a `CChainParams` argument in the function (like in the other functions) or use a global variable",
    "created_at": "2019-11-11T08:55:35Z",
    "updated_at": "2019-11-11T23:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344609632",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344609632"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344609632"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344609632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4731,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344846493",
    "pull_request_review_id": 315075340,
    "id": 344846493,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDg0NjQ5Mw==",
    "diff_hunk": "@@ -4729,6 +4728,7 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n \n void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n+    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "eec8608577323536b55e75268a66b8c5657529d0",
    "original_commit_id": "1b1e4213b695b9ec84e91ef1ef613171657800ba",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thank you for your review @emilengler. I've updated the CheckBlockIndex function header to take all of `chainparams` instead of only the `consensusParams` subset.",
    "created_at": "2019-11-11T18:26:28Z",
    "updated_at": "2019-11-11T23:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344846493",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344846493"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344846493"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344846493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4731,
    "side": "RIGHT",
    "in_reply_to_id": 344609632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344847650",
    "pull_request_review_id": 315076815,
    "id": 344847650,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDg0NzY1MA==",
    "diff_hunk": "@@ -4729,6 +4728,7 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n \n void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n+    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "eec8608577323536b55e75268a66b8c5657529d0",
    "original_commit_id": "1b1e4213b695b9ec84e91ef1ef613171657800ba",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of parsing command line arguments every time this function is called, what about adding this as a member variable that is only parsed once (e.g. at the time of construction).",
    "created_at": "2019-11-11T18:29:15Z",
    "updated_at": "2019-11-11T23:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344847650",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344847650"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344847650"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344847650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4731,
    "side": "RIGHT",
    "in_reply_to_id": 344609632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344857779",
    "pull_request_review_id": 315089708,
    "id": 344857779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDg1Nzc3OQ==",
    "diff_hunk": "@@ -4727,8 +4726,9 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n     return nLoaded > 0;\n }\n \n-void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n+void CChainState::CheckBlockIndex(const CChainParams& chainparams)\n {\n+    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "eec8608577323536b55e75268a66b8c5657529d0",
    "original_commit_id": "340acd0692de198dbcc8a8ecdc48744d4f741c11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move CheckBlockIndex to validation.cpp\" (340acd0692de198dbcc8a8ecdc48744d4f741c11)\r\n\r\nUsing a static local variable here isn't great because it makes makes the method harder to test and reuse. For example, it would be impossible to write a unit test that invokes this fucntion with different `fCheckBlockIndex` values. I haven't looked at all the other variables you want to extend this to, but using static locals could create real problems in other cases.\r\n\r\nWould suggest making this a CChainState object member and initializing it in the constructor as an alternative to leaving it as a global, and in general avoiding static locals in application logic outside of specialized init code.\r\n\r\nAlso, it'd be good to clarify the goal and advantages of this PR. It's not obvious that it's better to parse config values when they are first used instead of in AppInitParameterInteraction. For example an advantage of parsing in AppInitParameterInteraction is that if the user specifies an invalid or unparseable value, they can get error feedback immediately, and code that runs later doesn't need to deal with errors.",
    "created_at": "2019-11-11T18:54:19Z",
    "updated_at": "2019-11-11T23:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344857779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344857779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344857779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344857779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4731,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344862590",
    "pull_request_review_id": 315095938,
    "id": 344862590,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDg2MjU5MA==",
    "diff_hunk": "@@ -4729,6 +4728,7 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n \n void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n+    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "eec8608577323536b55e75268a66b8c5657529d0",
    "original_commit_id": "1b1e4213b695b9ec84e91ef1ef613171657800ba",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, I was wrong this was parsed on every call (missed the `static`), however I'd still argue that this should be parsed at the time of construction (during initialization), so that parse errors can be returned to the caller.",
    "created_at": "2019-11-11T19:06:13Z",
    "updated_at": "2019-11-11T23:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344862590",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344862590"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344862590"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344862590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4731,
    "side": "RIGHT",
    "in_reply_to_id": 344609632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344863005",
    "pull_request_review_id": 315096520,
    "id": 344863005,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDg2MzAwNQ==",
    "diff_hunk": "@@ -4729,6 +4728,7 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n \n void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n+    static bool fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "eec8608577323536b55e75268a66b8c5657529d0",
    "original_commit_id": "1b1e4213b695b9ec84e91ef1ef613171657800ba",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(See also the reply by @ryanofsky which says exactly the same)",
    "created_at": "2019-11-11T19:07:23Z",
    "updated_at": "2019-11-11T23:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344863005",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344863005"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17434#discussion_r344863005"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17434"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344863005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4731,
    "side": "RIGHT",
    "in_reply_to_id": 344609632
  }
]