MarcoFalke,2019-12-20 18:51:47,"> The change in behavior: with this PR VERACK message is sent and received with the common protocol version rather than INIT_PROTO_VERSION.\n\nHow does this change behavior? verack has no payload, so serialization flags can't possibly change the serialization.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-568043011,568043011,
hebasto,2019-12-20 18:54:31,"> How does this change behavior? verack has no payload, so serialization flags can't possibly change the serialization.\n\nYou are right. I did not mean change of external behavior. Bad wording. Mind help me re-word it?\nOr just skip it?",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-568043803,568043803,
laanwj,2020-01-13 10:36:26,"If correct, this is a very nice simplification.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-573599724,573599724,
DrahtBot,2020-01-17 06:57:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19866 (eBPF Linux tracepoints by jb55)\n* #19776 (net, rpc: expose high bandwidth mode state via getpeerinfo by theStack)",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-575500379,575500379,
laanwj,2020-02-06 12:13:58,">   You are right. I did not mean change of external behavior. Bad wording. Mind help me re-word it?\nOr just skip it?\n\nI'd suggest removing that, and explicitly say that there is *no* change in behavior on the P2P network.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-582878136,582878136,
hebasto,2020-02-06 16:21:43,"@laanwj \n> > You are right. I did not mean change of external behavior. Bad wording. Mind help me re-word it?\n> > Or just skip it?\n> \n> I'd suggest removing that, and explicitly say that there is _no_ change in behavior on the P2P network.\n\nDone. Thank you for your suggestion.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-582985047,582985047,
hebasto,2020-06-06 06:57:52,Rebased 25b93f13f08fba0a25c3480e158d131eea8795e5 -> cc5dba8e1fd2586dee32e1d19e8867e5f6b03754 ([pr17785.02](https://github.com/hebasto/bitcoin/commits/pr17785.02) -> [pr17785.04](https://github.com/hebasto/bitcoin/commits/pr17785.04)) due to the conflict with #19053.,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-639998536,639998536,
hebasto,2020-07-10 18:18:43,Rebased cc5dba8e1fd2586dee32e1d19e8867e5f6b03754 -> e268f6451fd2e5b57e8d7409c2853bea984a1ba9 ([pr17785.04](https://github.com/hebasto/bitcoin/commits/pr17785.04) -> [pr17785.05](https://github.com/hebasto/bitcoin/commits/pr17785.05)) due to the conflict with #14033.,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-656815889,656815889,
hebasto,2020-07-10 19:57:18,@jnewbery Mind looking into this PR?,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-656863304,656863304,
jnewbery,2020-07-10 20:41:50,"Concept ACK. The version fields in `CNode` are confusing. After version negotiation, I think we should only need one field to track common version. A couple of comments:\n\n- there's also an `nVersion` field. Can that also be merged?\n- would it make sense for `CNode` or `CNodeState` to store a `CNetMsgMaker` rather than constructing it in every function it needs to use it in?",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-656880630,656880630,
MarcoFalke,2020-07-11 11:47:27,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-657051764,657051764,
hebasto,2020-08-21 10:50:51,"Rebased e268f6451fd2e5b57e8d7409c2853bea984a1ba9 -> 7b12f25d34e7af6a518e17456a48be493282deb3 ([pr17785.05](https://github.com/hebasto/bitcoin/commits/pr17785.05) -> [pr17785.06](https://github.com/hebasto/bitcoin/commits/pr17785.06)) due to the conflicts with #19316, #19174, #18044, #19472, #19512.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-678228850,678228850,
hebasto,2020-08-21 10:55:01,"@jnewbery  \n>  - there's also an `nVersion` field. Can that also be merged?\n\nIf our node is not upgraded, comparing to its peer, `nVersion` and `m_greatest_common_version` would differ.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-678231578,678231578,
hebasto,2020-08-21 10:57:39,"@jnewbery \n>  - would it make sense for `CNode` or `CNodeState` to store a `CNetMsgMaker` rather than constructing it in every function it needs to use it in?\n\nI think yes. The same idea came into my head while was working on this PR. But not in this PR scope.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-678232489,678232489,
jnewbery,2020-08-24 10:17:27,"> If our node is not upgraded, comparing to its peer, nVersion and m_greatest_common_version would differ.\n\nRight, but there's nothing we can do with that information. If a node has a higher version than us, it means that it has some functionality that we're unaware of. We can't do anything with that information except perhaps report it in logs and in getpeerinfo. All peer logic in net_process",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-679040954,679040954,
hebasto,2020-08-24 23:29:11,"Updated 7b12f25d34e7af6a518e17456a48be493282deb3 -> 659a90cb93cbe9a894cae461e0401ed32b25caf3 ([pr17785.06](https://github.com/hebasto/bitcoin/commits/pr17785.06) -> [pr17785.07](https://github.com/hebasto/bitcoin/commits/pr17785.07)):\n- rebased due to the conflict with #19704\n- implemented @jnewbery's [suggestion](https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-679040954):\n> All p",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-679416590,679416590,
jnewbery,2020-08-25 10:32:51,utACK 659a90cb93cbe9a894cae461e0401ed32b25caf3. Nice tidy-up. Thanks hebasto!,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-679944234,679944234,
hebasto,2020-09-01 07:30:04,Rebased 659a90cb93cbe9a894cae461e0401ed32b25caf3 -> dc56e956fb988003777a949350f08b7964bd3452 ([pr17785.07](https://github.com/hebasto/bitcoin/commits/pr17785.07) -> [pr17785.08](https://github.com/hebasto/bitcoin/commits/pr17785.08)) due to the conflict with #19668.,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-684514491,684514491,
hebasto,2020-09-01 08:09:41,Rebased dc56e956fb988003777a949350f08b7964bd3452 -> e68912bc559197d3c82c581a1f64ec4c06f119da ([pr17785.08](https://github.com/hebasto/bitcoin/commits/pr17785.08) -> [pr17785.09](https://github.com/hebasto/bitcoin/commits/pr17785.09)) due to the conflict with #19067.,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-684539373,684539373,
jnewbery,2020-09-01 08:35:21,utACK e68912bc559197d3c82c581a1f64ec4c06f119da,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-684576581,684576581,
hebasto,2020-09-03 18:14:13,Rebased e68912bc559197d3c82c581a1f64ec4c06f119da -> 646ddf115a7d82d5b2e05452e25736fb65cf9f03 ([pr17785.09](https://github.com/hebasto/bitcoin/commits/pr17785.09) -> [pr17785.10](https://github.com/hebasto/bitcoin/commits/pr17785.10)) due to the conflict with #19724.,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-686663714,686663714,
jnewbery,2020-09-04 08:04:04,"utACK 646ddf115a7d82d5b2e05452e25736fb65cf9f03\n\n(verified `git range-diff e68912bc55~4..e68912bc55 646ddf115a~4..646ddf115a`. This was a trivial rebase)",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-686987191,686987191,
hebasto,2020-09-07 18:08:43,Rebased 646ddf115a7d82d5b2e05452e25736fb65cf9f03 -> ddefb5c0b759950942ac03f28c43b548af7b4033 ([pr17785.10](https://github.com/hebasto/bitcoin/commits/pr17785.10) -> [pr17785.11](https://github.com/hebasto/bitcoin/commits/pr17785.11)) due to the conflict with #19791.,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-688461276,688461276,
jnewbery,2020-09-08 10:44:11,"ACK ddefb5c0b759950942ac03f28c43b548af7b4033\n\nVerified `git range-diff 646ddf115a~4..646ddf115a ddefb5c0b7~4..ddefb5c0b7`",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-688784836,688784836,
hebasto,2020-09-08 11:06:22,@MarcoFalke @amiti @sipa Mind looking into this PR?,https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-688795967,688795967,
naumenkogs,2020-09-08 14:31:09,"ACK ddefb5c0b759950942ac03f28c43b548af7b4033\ngood refactoring",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-688916758,688916758,
hebasto,2020-09-09 06:45:57,"@amitiuttarwar \n> I wondering if after these changes we can get rid of the `CNode.nVersion` field entirely. I gave it a quick shot here: [amitiuttarwar@ef2b862](https://github.com/amitiuttarwar/bitcoin/commit/ef2b8620dcc4123a3f62be48943490f72c40cfaf). It compiles & I think it makes sense (maybe one clarification in a log), but haven't evaluated super closely.\n\n@jnewbery [raised](https://gith",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-689343968,689343968,
jnewbery,2020-09-09 08:45:37,"I think `nVersion` is still useful for `getpeerinfo` to display which version was received from the peer, although perhaps it could be renamed to `m_version_received` or similar in a future PR.",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-689421560,689421560,
fjahr,2020-09-09 13:56:16,"Code review ACK ddefb5c0b759950942ac03f28c43b548af7b4033\n\nNice cleanup!",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-689579894,689579894,
amitiuttarwar,2020-09-10 00:40:08,"code review but untested ACK ddefb5c0b7\n\n\n------\n\nfor another PR: \n\n@hebasto \n> @jnewbery raised the same question. This could be resolved in a follow-up PR.\nI think we need smth like bool CNode::VersionMsgAlreadyReceived().\n\nyeah, but I got slightly confused because based on [this comment](https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-679416590) I thought you mi",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-689899720,689899720,
MarcoFalke,2020-10-12 11:14:26,"Post merge ACK, but would be good to remove nVersion from the tests as well in the last commit. See #20131",https://github.com/bitcoin/bitcoin/pull/17785#issuecomment-707055875,707055875,
amitiuttarwar,2020-09-08 23:01:54,"I'm slightly confused about why this was originally sending `INIT_PROTO_VERSION` (and below). the patch is fixing it to match my expectations, but I think this means a small change in the p2p message right? \n\nhaven't looked into the history yet, am I missing something? ",https://github.com/bitcoin/bitcoin/pull/17785#discussion_r485241606,485241606,src/net_processing.cpp
amitiuttarwar,2020-09-08 23:28:28,nit: missing newline between functions ,https://github.com/bitcoin/bitcoin/pull/17785#discussion_r485249774,485249774,src/net.h
amitiuttarwar,2020-09-08 23:52:45,"just noting that we lose the error logging previously present for `nSendVersion` (don't set more than once, don't get before setting). I think thats fine though. ",https://github.com/bitcoin/bitcoin/pull/17785#discussion_r485257095,485257095,src/net.h
hebasto,2020-09-09 07:06:18,"> I'm slightly confused about why this was originally sending `INIT_PROTO_VERSION` (and below).\n\nI don't know the whole historical context, but it seems the reason is that on that stage the `INIT_PROTO_VERSION` is the only known version on which both the node and its peer are agree as version is changed later: https://github.com/bitcoin/bitcoin/blob/4f229d8904f8e3494cab30d61df9f11f1cc06388/src",https://github.com/bitcoin/bitcoin/pull/17785#discussion_r485384872,485384872,src/net_processing.cpp
jnewbery,2020-09-09 08:32:12,"I believe the only object that is serialized differently based on p2p version is a CAddress, so the addresses in the `version` message don't have timestamps.\n\nChanging the serialization version for a wtxid message has no effect.",https://github.com/bitcoin/bitcoin/pull/17785#discussion_r485434256,485434256,src/net_processing.cpp
amitiuttarwar,2020-09-10 00:01:37,"ah, okay, that clears up my confusion about possible change. thank you!\n\nstill doesn't make sense why it was that way,\n>  it seems the reason is that on that stage the INIT_PROTO_VERSION is the only known version on which both the node and its peer are agree as version is changed later:\n\nyeah, but the local `nSendVersion` was set earlier\n\nbut I don't think that's super important now ",https://github.com/bitcoin/bitcoin/pull/17785#discussion_r485985834,485985834,src/net_processing.cpp
MarcoFalke,2020-10-12 11:17:23,Any reason to remove this debug log? I think it would be good to keep this to avoid regressing on this in the future.,https://github.com/bitcoin/bitcoin/pull/17785#discussion_r503224381,503224381,src/net.cpp
MarcoFalke,2020-10-12 20:43:41,Fixed in #20138,https://github.com/bitcoin/bitcoin/pull/17785#discussion_r503522664,503522664,src/net.cpp
