Empact,2018-05-22T03:25:37Z,"With @practicalswift https://github.com/bitcoin/bitcoin/pull/13288#issuecomment-390572942\n\nPending #13288, #13291 \n\nCurrent failures, via travis:\n```\n$ if [ ""$TRAVIS_EVENT_TYPE"" = ""pull_request"" ]; then contrib/devtools/lint-all.sh; fi\nThe following files #include .cpp files:\nsrc/test/blockchain_tests.cpp:#include ""rpc/blockchain.cpp""\nsrc/test/torcontrol_tests.cpp:#include <torco",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-390851143,390851143,
ken2812221,2018-05-22T03:29:27Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-390851654,390851654,
practicalswift,2018-05-22T04:45:25Z,"ACK 177dc4277722c2e3d5c34bab4de3951055510a88\n\nVery nice! :-)  Love these small regression tests that make sure we'll never have to think about a given class of otherwise recurring mistakes/issues ever again.\n\nTiny nit: Could be added to existing `lint-includes.sh` instead if we want to keep the number of linter files down.",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-390861268,390861268,
laanwj,2018-05-23T18:29:34Z,"Sorry to be skeptical here, but does this really happen enough to merit adding yet another linter?",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391451251,391451251,
Empact,2018-05-23T20:45:08Z,"@laanwj Generally, I'm in favor of more lints as implementing practice in code means that it need not be propagated / enforced by humans - particularly when the difference is easily overlooked by humans and easily detected by code. This case has been violated twice, and overlooked twice by reviewers, so an automatic check seems helpful, if we agree that it should not be violated.\n\nOn that poin",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391490232,391490232,
MarcoFalke,2018-05-23T21:08:01Z,"Can this be combined with the other include linter, so we don't have too many ""duplicate"" files?",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391496811,391496811,
promag,2018-05-23T22:30:34Z,"> Can this be combined with the other include linter, so we don't have too many ""duplicate"" files?\n\nI wouldn't mind separate files as it would allow:\n```sh\nfind contrib/devtools -name ""lint-*.sh"" ! -name lint-all.sh | parallel -u bash :::\n```\nHowever flake8 takes most of the time so no gain for now (hint: `s/bash/time` above).",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391517842,391517842,
promag,2018-05-23T22:37:14Z,Should it just check if the included file is `header|header.h|header.hpp`?,https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391520418,391520418,
practicalswift,2018-05-24T07:13:04Z,ACK 2f2a784c7ba189628dfc5d9dbd10d1861ebaadbd,https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391613045,391613045,
laanwj,2018-05-24T10:36:24Z,"> Generally, I'm in favor of more lints as implementing practice in code means that it need not be propagated / enforced by humans\n\nI agree. I don't think I have a problem with it in principle.\nIt's just the proliferation of all kinds of regexp shell scripts that might make the travis build fail, that I'm having problems with. There is a cost to this in maintenance.\n\nI think linters shou",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391668176,391668176,
Empact,2018-05-24T10:46:29Z,"Agreed, #13041 is a great one. I mean to cite the fact that this has happened before as evidence that these are tricky, perhaps because it is easy to gloss over includes, particularly in the context of tests. For reference, the PRs where these includes were introduced: #10408 #11748 ",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391670547,391670547,
practicalswift,2018-05-24T11:08:55Z,"@laanwj Adding some data: there seems to have been a total of twelve `.cpp` includes during the project `git` history:\n\n```\n$ git log -u | grep -E '^\+#include.*\.cpp.$' | cut -b2- | tr '<>' '""' | sort -u\n#include ""base58_tests.cpp""\n#include ""base64_tests.cpp""\n#include ""Checkpoints_tests.cpp""\n#include ""DoS_tests.cpp""\n#include ""miner_tests.cpp""\n#include ""rpc/blockchain.cpp""\n#inc",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391675959,391675959,
practicalswift,2018-05-24T12:37:51Z,@laanwj Regarding the potential maintenance need for the linting shell scripts: I volunteer to maintain all the linter scripts in the repo if that is of any help. In the event of a linter causing problems just ping me in and I'll fix it quickly! :-),https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391699052,391699052,
laanwj,2018-05-24T13:21:53Z,"> @laanwj Adding some data: there seems to have been a total of twelve .cpp includes during the project git history:\n\nEven on the desirability there is an alternative perspective, FWIW: at one of my previous employers we maintained a huge system, and including the `.c` or `.cpp` was standard practice for private unit tests. This allowed testing internal functions and methods and which are not ",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-391712408,391712408,
MarcoFalke,2018-06-05T18:46:57Z,"> I wouldn't mind separate files as it would allow:\n> find contrib/devtools -name ""lint-*.sh"" ! -name lint-all.sh | parallel -u bash :::\n> However flake8 takes most of the time so no gain for now (hint: s/bash/time above).\n\nI highly doubt that a single `git grep` makes up a significant run-time to justify for the overhead of another script with copyright header, etc.",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-394818835,394818835,
MarcoFalke,2018-06-05T18:47:35Z,"Oh, I see this was already combined into the existing file. utACK, but needs rebase.",https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-394819008,394819008,
Empact,2018-06-06T09:25:24Z,Rebased for #13385,https://github.com/bitcoin/bitcoin/pull/13301#issuecomment-395005117,395005117,
promag,2018-05-22T16:05:16Z,"nit\n```\n#!/usr/bin/env bash\n```",https://github.com/bitcoin/bitcoin/pull/13301#discussion_r189960701,189960701,contrib/devtools/lint-include-cpp.sh
promag,2018-05-22T16:05:57Z,Are these glob portable?,https://github.com/bitcoin/bitcoin/pull/13301#discussion_r189960950,189960950,contrib/devtools/lint-include-cpp.sh
practicalswift,2018-05-22T17:16:39Z,"@promag They are expanded by `git` and not the shell, but even if they were handled by `bash` they would have be portable, no? :-)",https://github.com/bitcoin/bitcoin/pull/13301#discussion_r189983632,189983632,contrib/devtools/lint-include-cpp.sh
promag,2018-05-22T17:46:03Z,"> @promag They are expanded by git \n\n👍 \n\n> but even if they were handled by bash they would have be portable, no?\n\nSee https://github.com/bitcoin/bitcoin/pull/13228/files#r188147943.",https://github.com/bitcoin/bitcoin/pull/13301#discussion_r189993016,189993016,contrib/devtools/lint-include-cpp.sh
Empact,2018-05-22T22:30:55Z,"Provided it's run from the project root (which is how it's run on Travis), it should get all cpp/h files - it's just the top level that is missed by ** in some cases.",https://github.com/bitcoin/bitcoin/pull/13301#discussion_r190073338,190073338,contrib/devtools/lint-include-cpp.sh
practicalswift,2018-05-23T03:46:09Z,"Ah, I now understand what you meant. What about changing it from `""**/*.cpp"" ""**/*.h""` to `""*.cpp"" ""*.h""`? That will work regardless of where it is run from.",https://github.com/bitcoin/bitcoin/pull/13301#discussion_r190115262,190115262,contrib/devtools/lint-include-cpp.sh
Empact,2018-05-23T20:48:12Z,"Currently, every bash invocation is via `#!/bin/bash`. I'm seeing arguments for using bin/env for compatibility across more systems, e.g. OpenBSD, and some concerns about potential security issues if malicious code corrupts the path. Not sure how to value those.",https://github.com/bitcoin/bitcoin/pull/13301#discussion_r190393776,190393776,contrib/devtools/lint-include-cpp.sh
