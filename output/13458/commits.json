[
  {
    "sha": "bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWQwNjhhZDlmNGJjNjBiZmMxMGUyN2Q0ZmZhZWM5MmQ3ZGY4NDkx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-13T15:02:49Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-13T16:15:47Z"
      },
      "message": "build: Build system changes to support only Qt5",
      "tree": {
        "sha": "a4a7735630c406fe0cb5a1d19a4bac6745408607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4a7735630c406fe0cb5a1d19a4bac6745408607"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8eb76f3958e3e2af7a2fb7a14017d478c44ac484",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8eb76f3958e3e2af7a2fb7a14017d478c44ac484",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8eb76f3958e3e2af7a2fb7a14017d478c44ac484"
      }
    ],
    "stats": {
      "total": 240,
      "additions": 91,
      "deletions": 149
    },
    "files": [
      {
        "sha": "fe0cc6c36d14b9e069d7c21712f189a07f86bdc2",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 90,
        "deletions": 147,
        "changes": 237,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
        "patch": "@@ -53,8 +53,8 @@ dnl CAUTION: Do not use this inside of a conditional.\n AC_DEFUN([BITCOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto)])],\n     [\n      bitcoin_qt_want_version=$withval\n      if test \"x$bitcoin_qt_want_version\" = xyes; then\n@@ -94,82 +94,66 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   fi\n \n   if test \"x$use_pkgconfig\" = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG])\n   else\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n+  dnl For Qt5, we can check a header to find out whether Qt is build\n+  dnl statically. When Qt is built statically, some plugins must be linked into\n+  dnl the final binary as well.\n+  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n+  dnl added.\n   dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n   dnl results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test \"x$bitcoin_cv_static_qt\" = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-            #include <QtCore/qconfig.h>\n-            #ifndef QT_VERSION\n-            #  include <QtCore/qglobal.h>\n-            #endif\n-          ]],\n-          [[\n-            #if QT_VERSION >= 0x050400\n-            choke\n-            #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = xyes; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-      if test \"x$TARGET_OS\" = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test \"x$TARGET_OS\" = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test \"x$TARGET_OS\" = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n+  _BITCOIN_QT_IS_STATIC\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n+    _BITCOIN_QT_FIND_STATIC_PLUGINS\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+    AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+          #include <QtCore/qconfig.h>\n+          #ifndef QT_VERSION\n+          #  include <QtCore/qglobal.h>\n+          #endif\n+        ]],\n+        [[\n+          #if QT_VERSION >= 0x050400\n+          choke\n+          #endif\n+        ]])],\n+      [bitcoin_cv_need_acc_widget=yes],\n+      [bitcoin_cv_need_acc_widget=no])\n+    ])\n+    if test \"x$bitcoin_cv_need_acc_widget\" = xyes; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n     fi\n-  else\n+    _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+    AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n     if test \"x$TARGET_OS\" = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+    elif test \"x$TARGET_OS\" = xlinux; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+    elif test \"x$TARGET_OS\" = xdarwin; then\n+      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n   CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n   if test \"x$use_pkgconfig$qt_bin_path\" = xyes; then\n-    if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n+    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n   fi\n \n   if test \"x$use_hardening\" != xno; then\n@@ -219,11 +203,11 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     ])\n   fi\n \n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n@@ -262,7 +246,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ],[\n     bitcoin_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt5)])\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -272,7 +256,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_DBUS_LIBS)\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(QT_SELECT, qt5)\n   AC_SUBST(MOC_DEFS)\n ])\n \n@@ -301,7 +285,7 @@ AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n ])])\n \n dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: Qt5.\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Output: bitcoin_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n@@ -346,58 +330,50 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n ])\n \n dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-      if test \"x$qt_plugin_path\" != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n+    if test \"x$qt_plugin_path\" != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      if test -d \"$qt_plugin_path/accessible\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n       fi\n-     if test \"x$use_pkgconfig\" = xyes; then\n-     : dnl\n-     m4_ifdef([PKG_CHECK_MODULES],[\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test \"x$TARGET_OS\" = xlinux; then\n-         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-         fi\n-       elif test \"x$TARGET_OS\" = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+    fi\n+   if test \"x$use_pkgconfig\" = xyes; then\n+   : dnl\n+   m4_ifdef([PKG_CHECK_MODULES],[\n+     PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+     if test \"x$TARGET_OS\" = xlinux; then\n+       PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n+       if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n+         PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n        fi\n-     ])\n-     else\n-       if test \"x$TARGET_OS\" = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n-           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-               #include <QtCore/qconfig.h>\n-               #ifndef QT_VERSION\n-               #  include <QtCore/qglobal.h>\n-               #endif\n-             ]],\n-             [[\n-               #if QT_VERSION < 0x050600\n-               choke\n-               #endif\n-             ]])],\n-           [bitcoin_cv_need_platformsupport=yes],\n-           [bitcoin_cv_need_platformsupport=no])\n-         ])\n-         if test \"x$bitcoin_cv_need_platformsupport\" = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}PlatformSupport not found)))\n-         fi\n+     elif test \"x$TARGET_OS\" = xdarwin; then\n+       PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+     fi\n+   ])\n+   else\n+     if test \"x$TARGET_OS\" = xwindows; then\n+       AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+             #include <QtCore/qconfig.h>\n+             #ifndef QT_VERSION\n+             #  include <QtCore/qglobal.h>\n+             #endif\n+           ]],\n+           [[\n+             #if QT_VERSION < 0x050600\n+             choke\n+             #endif\n+           ]])],\n+         [bitcoin_cv_need_platformsupport=yes],\n+         [bitcoin_cv_need_platformsupport=no])\n+       ])\n+       if test \"x$bitcoin_cv_need_platformsupport\" = xyes; then\n+         BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}PlatformSupport not found)))\n        fi\n      fi\n-  else\n-    if test \"x$qt_plugin_path\" != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n+   fi\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n@@ -406,38 +382,14 @@ dnl         first.\n dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n dnl         first.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test \"x$auto_priority_version\" = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test \"x$bitcoin_qt_want_version\" = xqt5 ||  ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n+    QT_LIB_PREFIX=Qt5\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n     BITCOIN_QT_CHECK([\n-      if test \"x$bitcoin_qt_want_version\" = xqt5 || ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt5 ); then\n-        PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n-      elif test \"x$bitcoin_qt_want_version\" = xqt4 || ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt4 ); then\n-        PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes], [have_qt=no])\n-      fi\n+      PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n \n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test \"x$have_qt\" = xno && test \"x$bitcoin_qt_want_version\" = xauto; then\n-        if test \"x$auto_priority_version\" = xqt5; then\n-          PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n       if test \"x$have_qt\" != xyes; then\n         have_qt=no\n         BITCOIN_QT_FAIL([Qt dependencies not found])\n@@ -458,7 +410,6 @@ dnl from the discovered headers.\n dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n@@ -480,13 +431,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n     if test \"x$bitcoin_qt_want_version\" = xauto; then\n       _BITCOIN_QT_CHECK_QT5\n     fi\n-    if test \"x$bitcoin_cv_qt5\" = xyes || test \"x$bitcoin_qt_want_version\" = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n+    QT_LIB_PREFIX=Qt5\n   ])\n \n   BITCOIN_QT_CHECK([\n@@ -508,9 +453,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))\n-  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n-  fi\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n "
      },
      {
        "sha": "027e429140e105d1bc94fc22cad4baeb98058860",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
        "patch": "@@ -837,7 +837,7 @@ fi\n BITCOIN_QT_INIT\n \n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig])\n \n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n     use_boost=no\n@@ -1422,7 +1422,6 @@ echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n echo \"  with gui / qt = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n-    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\""
      }
    ]
  },
  {
    "sha": "907f73bbc5b6c98b01d7c6088a294dea66634a3f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDdmNzNiYmM1YjZjOThiMDFkN2M2MDg4YTI5NGRlYTY2NjM0YTNm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-13T14:02:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-18T10:22:11Z"
      },
      "message": "gui: Remove QT_VERSION fallbacks for Qt < 5\n\nThere were surprisingly many `#ifdef` fallbacks for Qt 4.\n\nRemiving them simplifies maintenance, as well as adding new GUI\nfunctionality.",
      "tree": {
        "sha": "dc13b60296bed0a15e1ed829681fa105db8c8d86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc13b60296bed0a15e1ed829681fa105db8c8d86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/907f73bbc5b6c98b01d7c6088a294dea66634a3f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/907f73bbc5b6c98b01d7c6088a294dea66634a3f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/907f73bbc5b6c98b01d7c6088a294dea66634a3f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/907f73bbc5b6c98b01d7c6088a294dea66634a3f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bad068ad9f4bc60bfc10e27d4ffaec92d7df8491"
      }
    ],
    "stats": {
      "total": 183,
      "additions": 8,
      "deletions": 175
    },
    "files": [
      {
        "sha": "d51069d9220f91f61629d7355b8b9beed58c260c",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -160,13 +160,8 @@ void AddressBookPage::setModel(AddressTableModel *_model)\n     ui->tableView->sortByColumn(0, Qt::AscendingOrder);\n \n     // Set column widths\n-#if QT_VERSION < 0x050000\n-    ui->tableView->horizontalHeader()->setResizeMode(AddressTableModel::Label, QHeaderView::Stretch);\n-    ui->tableView->horizontalHeader()->setResizeMode(AddressTableModel::Address, QHeaderView::ResizeToContents);\n-#else\n     ui->tableView->horizontalHeader()->setSectionResizeMode(AddressTableModel::Label, QHeaderView::Stretch);\n     ui->tableView->horizontalHeader()->setSectionResizeMode(AddressTableModel::Address, QHeaderView::ResizeToContents);\n-#endif\n \n     connect(ui->tableView->selectionModel(), SIGNAL(selectionChanged(QItemSelection,QItemSelection)),\n         this, SLOT(selectionChanged()));"
      },
      {
        "sha": "aa0d4a31d3e589ea7e21095c089358da18b5d7ef",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -52,9 +52,7 @@ class BanTablePriv\n         node.getBanned(banMap);\n \n         cachedBanlist.clear();\n-#if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n-#endif\n         for (const auto& entry : banMap)\n         {\n             CCombinedBan banEntry;"
      },
      {
        "sha": "d38175e4a5e843ada448521411b6de8bbbf97ee5",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 35,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -55,13 +55,6 @@\n \n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n-#if QT_VERSION < 0x050000\n-Q_IMPORT_PLUGIN(qcncodecs)\n-Q_IMPORT_PLUGIN(qjpcodecs)\n-Q_IMPORT_PLUGIN(qtwcodecs)\n-Q_IMPORT_PLUGIN(qkrcodecs)\n-Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n-#else\n #if QT_VERSION < 0x050400\n Q_IMPORT_PLUGIN(AccessibleFactory)\n #endif\n@@ -73,11 +66,6 @@ Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n #endif\n #endif\n-#endif\n-\n-#if QT_VERSION < 0x050000\n-#include <QTextCodec>\n-#endif\n \n // Declare meta types used for QMetaObject::invokeMethod\n Q_DECLARE_METATYPE(bool*)\n@@ -151,16 +139,6 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n }\n \n /* qDebug() message handler --> debug.log */\n-#if QT_VERSION < 0x050000\n-void DebugMessageHandler(QtMsgType type, const char *msg)\n-{\n-    if (type == QtDebugMsg) {\n-        LogPrint(BCLog::QT, \"GUI: %s\\n\", msg);\n-    } else {\n-        LogPrintf(\"GUI: %s\\n\", msg);\n-    }\n-}\n-#else\n void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n {\n     Q_UNUSED(context);\n@@ -170,7 +148,6 @@ void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, cons\n         LogPrintf(\"GUI: %s\\n\", msg.toStdString());\n     }\n }\n-#endif\n \n /** Class encapsulating Bitcoin Core startup and shutdown.\n  * Allows running startup and shutdown in a different thread from the UI thread.\n@@ -572,12 +549,6 @@ int main(int argc, char *argv[])\n     // Do not refer to data directory yet, this can be overridden by Intro::pickDataDirectory\n \n     /// 1. Basic Qt initialization (not dependent on parameters or configuration)\n-#if QT_VERSION < 0x050000\n-    // Internal string conversion is all UTF-8\n-    QTextCodec::setCodecForTr(QTextCodec::codecForName(\"UTF-8\"));\n-    QTextCodec::setCodecForCStrings(QTextCodec::codecForTr());\n-#endif\n-\n     Q_INIT_RESOURCE(bitcoin);\n     Q_INIT_RESOURCE(bitcoin_locale);\n \n@@ -708,17 +679,12 @@ int main(int argc, char *argv[])\n     /// 9. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n-#if QT_VERSION < 0x050000\n-    // Install qDebug() message handler to route to debug.log\n-    qInstallMsgHandler(DebugMessageHandler);\n-#else\n #if defined(Q_OS_WIN)\n     // Install global event filter for processing Windows session related Windows messages (WM_QUERYENDSESSION and WM_ENDSESSION)\n     qApp->installNativeEventFilter(new WinShutdownMonitor());\n #endif\n     // Install qDebug() message handler to route to debug.log\n     qInstallMessageHandler(DebugMessageHandler);\n-#endif\n     // Allow parameter interaction before we create the options model\n     app.parameterSetup();\n     // Load GUI settings from QSettings\n@@ -739,7 +705,7 @@ int main(int argc, char *argv[])\n         // so the GUI thread won't be held up.\n         if (node->baseInitialize()) {\n             app.requestInitialize();\n-#if defined(Q_OS_WIN) && QT_VERSION >= 0x050000\n+#if defined(Q_OS_WIN)\n             WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), (HWND)app.getMainWinId());\n #endif\n             app.exec();"
      },
      {
        "sha": "0677a2422c9394b0ca2beddaf1a12c554161d1d7",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 14,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -55,14 +55,8 @@\n #include <QStyle>\n #include <QTimer>\n #include <QToolBar>\n-#include <QVBoxLayout>\n-\n-#if QT_VERSION < 0x050000\n-#include <QTextDocument>\n-#include <QUrl>\n-#else\n #include <QUrlQuery>\n-#endif\n+#include <QVBoxLayout>\n \n const std::string BitcoinGUI::DEFAULT_UIPLATFORM =\n #if defined(Q_OS_MAC)\n@@ -147,12 +141,6 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n #endif\n     setWindowTitle(windowTitle);\n \n-#if defined(Q_OS_MAC) && QT_VERSION < 0x050000\n-    // This property is not implemented in Qt 5. Setting it has no effect.\n-    // A replacement API (QtMacUnifiedToolBar) is available in QtMacExtras.\n-    setUnifiedTitleAndToolBarOnMac(true);\n-#endif\n-\n     rpcConsole = new RPCConsole(node, _platformStyle, 0);\n     helpMessageDialog = new HelpMessageDialog(node, this, false);\n #ifdef ENABLE_WALLET\n@@ -229,7 +217,7 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n \n     // Override style sheet for progress bar for styles that have a segmented progress bar,\n     // as they make the text unreadable (workaround for issue #1071)\n-    // See https://qt-project.org/doc/qt-4.8/gallery.html\n+    // See https://doc.qt.io/qt-5/gallery.html\n     QString curStyle = QApplication::style()->metaObject()->className();\n     if(curStyle == \"QWindowsStyle\" || curStyle == \"QWindowsXPStyle\")\n     {"
      },
      {
        "sha": "222ed6f65fd3d2403ec34bcdee40765ecc4398c0",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -109,11 +109,7 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidge\n     connect(ui->treeWidget, SIGNAL(itemChanged(QTreeWidgetItem*, int)), this, SLOT(viewItemChanged(QTreeWidgetItem*, int)));\n \n     // click on header\n-#if QT_VERSION < 0x050000\n-    ui->treeWidget->header()->setClickable(true);\n-#else\n     ui->treeWidget->header()->setSectionsClickable(true);\n-#endif\n     connect(ui->treeWidget->header(), SIGNAL(sectionClicked(int)), this, SLOT(headerSectionClicked(int)));\n \n     // ok button\n@@ -392,13 +388,11 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n \n     // TODO: Remove this temporary qt5 fix after Qt5.3 and Qt5.4 are no longer used.\n     //       Fixed in Qt5.5 and above: https://bugreports.qt.io/browse/QTBUG-43473\n-#if QT_VERSION >= 0x050000\n     else if (column == COLUMN_CHECKBOX && item->childCount() > 0)\n     {\n         if (item->checkState(COLUMN_CHECKBOX) == Qt::PartiallyChecked && item->child(0)->checkState(COLUMN_CHECKBOX) == Qt::PartiallyChecked)\n             item->setCheckState(COLUMN_CHECKBOX, Qt::Checked);\n     }\n-#endif\n }\n \n // shows count of locked unspent outputs"
      },
      {
        "sha": "acd9f7b35cea11c184eb2532cc77e44a84a24eaa",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 31,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -53,13 +53,9 @@\n #include <QSettings>\n #include <QTextDocument> // for Qt::mightBeRichText\n #include <QThread>\n+#include <QUrlQuery>\n #include <QMouseEvent>\n \n-#if QT_VERSION < 0x050000\n-#include <QUrl>\n-#else\n-#include <QUrlQuery>\n-#endif\n \n #if QT_VERSION >= 0x50200\n #include <QFontDatabase>\n@@ -95,11 +91,7 @@ QFont fixedPitchFont()\n     return QFontDatabase::systemFont(QFontDatabase::FixedFont);\n #else\n     QFont font(\"Monospace\");\n-#if QT_VERSION >= 0x040800\n     font.setStyleHint(QFont::Monospace);\n-#else\n-    font.setStyleHint(QFont::TypeWriter);\n-#endif\n     return font;\n #endif\n }\n@@ -127,12 +119,10 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n     parent->setFocusProxy(widget);\n \n     widget->setFont(fixedPitchFont());\n-#if QT_VERSION >= 0x040700\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied.\n     widget->setPlaceholderText(QObject::tr(\"Enter a Bitcoin address (e.g. %1)\").arg(\n         QString::fromStdString(DummyAddress(Params()))));\n-#endif\n     widget->setValidator(new BitcoinAddressEntryValidator(parent));\n     widget->setCheckValidator(new BitcoinAddressCheckValidator(parent));\n }\n@@ -151,12 +141,8 @@ bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n     }\n     rv.amount = 0;\n \n-#if QT_VERSION < 0x050000\n-    QList<QPair<QString, QString> > items = uri.queryItems();\n-#else\n     QUrlQuery uriQuery(uri);\n     QList<QPair<QString, QString> > items = uriQuery.queryItems();\n-#endif\n     for (QList<QPair<QString, QString> >::iterator i = items.begin(); i != items.end(); i++)\n     {\n         bool fShouldReturnFalse = false;\n@@ -242,11 +228,7 @@ bool isDust(interfaces::Node& node, const QString& address, const CAmount& amoun\n \n QString HtmlEscape(const QString& str, bool fMultiLine)\n {\n-#if QT_VERSION < 0x050000\n-    QString escaped = Qt::escape(str);\n-#else\n     QString escaped = str.toHtmlEscaped();\n-#endif\n     if(fMultiLine)\n     {\n         escaped = escaped.replace(\"\\n\", \"<br>\\n\");\n@@ -287,11 +269,7 @@ QString getSaveFileName(QWidget *parent, const QString &caption, const QString &\n     QString myDir;\n     if(dir.isEmpty()) // Default to user documents location\n     {\n-#if QT_VERSION < 0x050000\n-        myDir = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);\n-#else\n         myDir = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);\n-#endif\n     }\n     else\n     {\n@@ -337,11 +315,7 @@ QString getOpenFileName(QWidget *parent, const QString &caption, const QString &\n     QString myDir;\n     if(dir.isEmpty()) // Default to user documents location\n     {\n-#if QT_VERSION < 0x050000\n-        myDir = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);\n-#else\n         myDir = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);\n-#endif\n     }\n     else\n     {\n@@ -495,11 +469,7 @@ void TableViewLastColumnResizingFixer::disconnectViewHeadersSignals()\n // Refactored here for readability.\n void TableViewLastColumnResizingFixer::setViewHeaderResizeMode(int logicalIndex, QHeaderView::ResizeMode resizeMode)\n {\n-#if QT_VERSION < 0x050000\n-    tableView->horizontalHeader()->setResizeMode(logicalIndex, resizeMode);\n-#else\n     tableView->horizontalHeader()->setSectionResizeMode(logicalIndex, resizeMode);\n-#endif\n }\n \n void TableViewLastColumnResizingFixer::resizeColumn(int nColumnIndex, int width)"
      },
      {
        "sha": "e965a91d181fcf38c7d20e8f3129cbb93f3455e6",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -233,7 +233,7 @@ namespace GUIUtil\n         void mouseReleaseEvent(QMouseEvent *event);\n     };\n \n-#if defined(Q_OS_MAC) && QT_VERSION >= 0x050000\n+#if defined(Q_OS_MAC)\n     // workaround for Qt OSX Bug:\n     // https://bugreports.qt-project.org/browse/QTBUG-15631\n     // QProgressBar uses around 10% CPU even when app is in background"
      },
      {
        "sha": "a0b62ae00066e56f8e40efa7db3006d492c7b576",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -14,10 +14,6 @@\n #include <objc/objc.h>\n #include <objc/message.h>\n \n-#if QT_VERSION < 0x050000\n-extern void qt_mac_set_dock_menu(QMenu *);\n-#endif\n-\n static MacDockIconHandler *s_instance = nullptr;\n \n bool dockClickHandler(id self,SEL _cmd,...) {\n@@ -54,9 +50,7 @@ void setupDockClickHandler() {\n     this->m_dummyWidget = new QWidget();\n     this->m_dockMenu = new QMenu(this->m_dummyWidget);\n     this->setMainWindow(nullptr);\n-#if QT_VERSION < 0x050000\n-    qt_mac_set_dock_menu(this->m_dockMenu);\n-#elif QT_VERSION >= 0x050200\n+#if QT_VERSION >= 0x050200\n     this->m_dockMenu->setAsDockMenu();\n #endif\n     [pool release];"
      },
      {
        "sha": "c4b732e3e00b346e31f04606deff11c13371f0c9",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -68,11 +68,7 @@ NetworkStyle::NetworkStyle(const QString &_appName, const int iconColorHueShift,\n         }\n \n         //convert back to QPixmap\n-#if QT_VERSION >= 0x040700\n         pixmap.convertFromImage(img);\n-#else\n-        pixmap = QPixmap::fromImage(img);\n-#endif\n     }\n \n     appIcon             = QIcon(pixmap);"
      },
      {
        "sha": "d211f908c801e89862f5f47db43e69698507eace",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -15,9 +15,7 @@ OpenURIDialog::OpenURIDialog(QWidget *parent) :\n     ui(new Ui::OpenURIDialog)\n {\n     ui->setupUi(this);\n-#if QT_VERSION >= 0x040700\n     ui->uriEdit->setPlaceholderText(\"bitcoin:\");\n-#endif\n }\n \n OpenURIDialog::~OpenURIDialog()"
      },
      {
        "sha": "3ff6f59c25c1350c26e7f646376c6ca0894d9ced",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -97,28 +97,16 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n         /** check if the locale name consists of 2 parts (language_country) */\n         if(langStr.contains(\"_\"))\n         {\n-#if QT_VERSION >= 0x040800\n             /** display language strings as \"native language - native country (locale name)\", e.g. \"Deutsch - Deutschland (de)\" */\n             ui->lang->addItem(locale.nativeLanguageName() + QString(\" - \") + locale.nativeCountryName() + QString(\" (\") + langStr + QString(\")\"), QVariant(langStr));\n-#else\n-            /** display language strings as \"language - country (locale name)\", e.g. \"German - Germany (de)\" */\n-            ui->lang->addItem(QLocale::languageToString(locale.language()) + QString(\" - \") + QLocale::countryToString(locale.country()) + QString(\" (\") + langStr + QString(\")\"), QVariant(langStr));\n-#endif\n         }\n         else\n         {\n-#if QT_VERSION >= 0x040800\n             /** display language strings as \"native language (locale name)\", e.g. \"Deutsch (de)\" */\n             ui->lang->addItem(locale.nativeLanguageName() + QString(\" (\") + langStr + QString(\")\"), QVariant(langStr));\n-#else\n-            /** display language strings as \"language (locale name)\", e.g. \"German (de)\" */\n-            ui->lang->addItem(QLocale::languageToString(locale.language()) + QString(\" (\") + langStr + QString(\")\"), QVariant(langStr));\n-#endif\n         }\n     }\n-#if QT_VERSION >= 0x040700\n     ui->thirdPartyTxUrls->setPlaceholderText(\"https://example.com/tx/%s\");\n-#endif\n \n     ui->unit->setModel(new BitcoinUnits(this));\n "
      },
      {
        "sha": "dfeb70d6693ad05f31809efab4e5727e89b2fc5b",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -97,12 +97,10 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n             qWarning() << \"PaymentRequestPlus::getMerchant: Payment request: certificate expired or not yet active: \" << qCert;\n             return false;\n         }\n-#if QT_VERSION >= 0x050000\n         if (qCert.isBlacklisted()) {\n             qWarning() << \"PaymentRequestPlus::getMerchant: Payment request: certificate blacklisted: \" << qCert;\n             return false;\n         }\n-#endif\n         const unsigned char *data = (const unsigned char *)certChain.certificate(i).data();\n         X509 *cert = d2i_X509(nullptr, &data, certChain.certificate(i).size());\n         if (cert)"
      },
      {
        "sha": "e5e6430959bb763d02bf47781d6a91173c52e46a",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -41,12 +41,7 @@\n #include <QSslSocket>\n #include <QStringList>\n #include <QTextDocument>\n-\n-#if QT_VERSION < 0x050000\n-#include <QUrl>\n-#else\n #include <QUrlQuery>\n-#endif\n \n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds\n const QString BITCOIN_IPC_PREFIX(\"bitcoin:\");\n@@ -100,11 +95,7 @@ static QList<QString> savedPaymentRequests;\n \n static void ReportInvalidCertificate(const QSslCertificate& cert)\n {\n-#if QT_VERSION < 0x050000\n-    qDebug() << QString(\"%1: Payment server found an invalid certificate: \").arg(__func__) << cert.serialNumber() << cert.subjectInfo(QSslCertificate::CommonName) << cert.subjectInfo(QSslCertificate::OrganizationalUnitName);\n-#else\n     qDebug() << QString(\"%1: Payment server found an invalid certificate: \").arg(__func__) << cert.serialNumber() << cert.subjectInfo(QSslCertificate::CommonName) << cert.subjectInfo(QSslCertificate::DistinguishedNameQualifier) << cert.subjectInfo(QSslCertificate::OrganizationalUnitName);\n-#endif\n }\n \n //\n@@ -157,13 +148,11 @@ void PaymentServer::LoadRootCAs(X509_STORE* _store)\n             continue;\n         }\n \n-#if QT_VERSION >= 0x050000\n         // Blacklisted certificate\n         if (cert.isBlacklisted()) {\n             ReportInvalidCertificate(cert);\n             continue;\n         }\n-#endif\n         QByteArray certData = cert.toDer();\n         const unsigned char *data = (const unsigned char *)certData.data();\n \n@@ -413,11 +402,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n     }\n     else if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin: URI\n     {\n-#if QT_VERSION < 0x050000\n-        QUrl uri(s);\n-#else\n         QUrlQuery uri((QUrl(s)));\n-#endif\n         if (uri.hasQueryItem(\"r\")) // payment request URI\n         {\n             QByteArray temp;"
      },
      {
        "sha": "0ca9d48bf6046a20ee298f5a9ba9939a561d3b4a",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -64,9 +64,7 @@ class PeerTablePriv\n \n             interfaces::Node::NodesStats nodes_stats;\n             node.getNodesStats(nodes_stats);\n-#if QT_VERSION >= 0x040700\n             cachedNodeStats.reserve(nodes_stats.size());\n-#endif\n             for (auto& node_stats : nodes_stats)\n             {\n                 CNodeCombinedStats stats;"
      },
      {
        "sha": "f9610f2d3b1def98729080b0245c2034d6e1bf97",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -16,9 +16,6 @@\n #include <QMimeData>\n #include <QMouseEvent>\n #include <QPixmap>\n-#if QT_VERSION < 0x050000\n-#include <QUrl>\n-#endif\n \n #if defined(HAVE_CONFIG_H)\n #include <config/bitcoin-config.h> /* for USE_QRCODE */"
      },
      {
        "sha": "b47eb9c02b63aa17dbe73fe2fa2165fbaeb73301",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -40,10 +40,6 @@\n #include <QTimer>\n #include <QStringList>\n \n-#if QT_VERSION < 0x050000\n-#include <QUrl>\n-#endif\n-\n // TODO: add a scrollback limit, as there is currently none\n // TODO: make it possible to filter out categories (esp debug messages when implemented)\n // TODO: receive errors and debug messages through ClientModel"
      },
      {
        "sha": "e8c85bc2a18ff3fb39af13b66fe7a5790d887e8b",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -32,9 +32,7 @@ SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *par\n \n     if (platformStyle->getUseExtraSpacing())\n         ui->payToLayout->setSpacing(4);\n-#if QT_VERSION >= 0x040700\n     ui->addAsLabel->setPlaceholderText(tr(\"Enter a label for this address to add it to your address book\"));\n-#endif\n \n     // normal bitcoin address field\n     GUIUtil::setupAddressWidget(ui->payTo, this);"
      },
      {
        "sha": "c8e694e658ca5b6fab572261adbc4828988145b1",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -37,9 +37,7 @@ SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *_platformS\n     ui->verifyMessageButton_VM->setIcon(platformStyle->SingleColorIcon(\":/icons/transaction_0\"));\n     ui->clearButton_VM->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n \n-#if QT_VERSION >= 0x040700\n     ui->signatureOut_SM->setPlaceholderText(tr(\"Click \\\"Sign Message\\\" to generate signature\"));\n-#endif\n \n     GUIUtil::setupAddressWidget(ui->addressIn_SM, this);\n     GUIUtil::setupAddressWidget(ui->addressIn_VM, this);"
      },
      {
        "sha": "f0ac43a58c96d3f144b75489d1db9ccf007ec961",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -26,12 +26,6 @@\n \n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n-#if QT_VERSION < 0x050000\n-Q_IMPORT_PLUGIN(qcncodecs)\n-Q_IMPORT_PLUGIN(qjpcodecs)\n-Q_IMPORT_PLUGIN(qtwcodecs)\n-Q_IMPORT_PLUGIN(qkrcodecs)\n-#else\n #if defined(QT_QPA_PLATFORM_MINIMAL)\n Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin);\n #endif\n@@ -43,7 +37,6 @@ Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n #endif\n #endif\n-#endif\n \n extern void noui_connect();\n "
      },
      {
        "sha": "c314dadde449521a204e8aaa00d08c9626e154b6",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 12,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -87,17 +87,6 @@ QModelIndex FindTx(const QAbstractItemModel& model, const uint256& txid)\n     return {};\n }\n \n-//! Request context menu (call method that is public in qt5, but protected in qt4).\n-void RequestContextMenu(QWidget* widget)\n-{\n-    class Qt4Hack : public QWidget\n-    {\n-    public:\n-        using QWidget::customContextMenuRequested;\n-    };\n-    static_cast<Qt4Hack*>(widget)->customContextMenuRequested({});\n-}\n-\n //! Invoke bumpfee on txid and check results.\n void BumpFee(TransactionView& view, const uint256& txid, bool expectDisabled, std::string expectError, bool cancel)\n {\n@@ -110,7 +99,7 @@ void BumpFee(TransactionView& view, const uint256& txid, bool expectDisabled, st\n     QAction* action = view.findChild<QAction*>(\"bumpFeeAction\");\n     table->selectionModel()->select(index, QItemSelectionModel::ClearAndSelect | QItemSelectionModel::Rows);\n     action->setEnabled(expectDisabled);\n-    RequestContextMenu(table);\n+    table->customContextMenuRequested({});\n     QCOMPARE(action->isEnabled(), !expectDisabled);\n \n     action->setEnabled(true);"
      },
      {
        "sha": "e60a387934f8f72e4b07f14705a5b59bd0187d73",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -95,15 +95,11 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     hlayout->addWidget(typeWidget);\n \n     search_widget = new QLineEdit(this);\n-#if QT_VERSION >= 0x040700\n     search_widget->setPlaceholderText(tr(\"Enter address, transaction id, or label to search\"));\n-#endif\n     hlayout->addWidget(search_widget);\n \n     amountWidget = new QLineEdit(this);\n-#if QT_VERSION >= 0x040700\n     amountWidget->setPlaceholderText(tr(\"Min amount\"));\n-#endif\n     if (platformStyle->getUseExtraSpacing()) {\n         amountWidget->setFixedWidth(97);\n     } else {"
      },
      {
        "sha": "6190a74598757af0167940b4b9fe05563b083633",
        "filename": "src/qt/winshutdownmonitor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/winshutdownmonitor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/winshutdownmonitor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/winshutdownmonitor.cpp?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -4,7 +4,7 @@\n \n #include <qt/winshutdownmonitor.h>\n \n-#if defined(Q_OS_WIN) && QT_VERSION >= 0x050000\n+#if defined(Q_OS_WIN)\n #include <init.h>\n #include <util.h>\n "
      },
      {
        "sha": "c8a523a538e0f390ac6e1822a55dd11ccddfdf40",
        "filename": "src/qt/winshutdownmonitor.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/winshutdownmonitor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/907f73bbc5b6c98b01d7c6088a294dea66634a3f/src/qt/winshutdownmonitor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/winshutdownmonitor.h?ref=907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "patch": "@@ -9,7 +9,6 @@\n #include <QByteArray>\n #include <QString>\n \n-#if QT_VERSION >= 0x050000\n #include <windef.h> // for HWND\n \n #include <QAbstractNativeEventFilter>\n@@ -24,6 +23,5 @@ class WinShutdownMonitor : public QAbstractNativeEventFilter\n     static void registerShutdownBlockReason(const QString& strReason, const HWND& mainWinId);\n };\n #endif\n-#endif\n \n #endif // BITCOIN_QT_WINSHUTDOWNMONITOR_H"
      }
    ]
  },
  {
    "sha": "462c71f71b5d753bc8327ab833dea23679450ca3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjJjNzFmNzFiNWQ3NTNiYzgzMjdhYjgzM2RlYTIzNjc5NDUwY2Ez",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-13T15:25:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-18T10:22:13Z"
      },
      "message": "test: Update travis to not test Qt4 anymore\n\nChange Qt4 & system libs build to Qt5 & system libs build.",
      "tree": {
        "sha": "363def6f9cccdb55448f5a468e09cb12091f41e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/363def6f9cccdb55448f5a468e09cb12091f41e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/462c71f71b5d753bc8327ab833dea23679450ca3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/462c71f71b5d753bc8327ab833dea23679450ca3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/462c71f71b5d753bc8327ab833dea23679450ca3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/462c71f71b5d753bc8327ab833dea23679450ca3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/907f73bbc5b6c98b01d7c6088a294dea66634a3f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/907f73bbc5b6c98b01d7c6088a294dea66634a3f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cc5d2d21614a9689df603660d92ab2f6dd3a289a",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/462c71f71b5d753bc8327ab833dea23679450ca3/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/462c71f71b5d753bc8327ab833dea23679450ca3/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=462c71f71b5d753bc8327ab833dea23679450ca3",
        "patch": "@@ -35,8 +35,8 @@ env:\n     - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" CONFIG_SHELL=\"/bin/dash\"\n # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# Qt4 & system libs\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb libqt4-dev\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\" DISPLAY=:99.0\n+# x86_64 Linux (Qt5 & system libs)\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\" NO_DEPENDS=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER\"\n # x86_64 Linux, No wallet\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n@@ -45,7 +45,7 @@ env:\n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n-    - env | grep -E '^(CCACHE_|WINEDEBUG|DISPLAY|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env\n+    - env | grep -E '^(CCACHE_|WINEDEBUG|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env\n     - if [[ $HOST = *-mingw32 ]]; then DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"; fi\n     - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env ubuntu:18.04)\n     - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"; }\n@@ -58,8 +58,6 @@ before_script:\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\); fi\n     - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n-    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n-    - if [ \"$NEED_XVFB\" = 1 ]; then DOCKER_EXEC /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n script:\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST"
      }
    ]
  },
  {
    "sha": "af6ac3b677454644364fd24d0df0c02ac9b8c8db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjZhYzNiNjc3NDU0NjQ0MzY0ZmQyNGQwZGYwYzAyYWM5YjhjOGRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-13T16:14:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-06-18T10:22:14Z"
      },
      "message": "doc: Remove mention of Qt4 from build docs",
      "tree": {
        "sha": "6baab01d2bec5ffb84502d3b9524f9f96a0f7d88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6baab01d2bec5ffb84502d3b9524f9f96a0f7d88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af6ac3b677454644364fd24d0df0c02ac9b8c8db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af6ac3b677454644364fd24d0df0c02ac9b8c8db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af6ac3b677454644364fd24d0df0c02ac9b8c8db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af6ac3b677454644364fd24d0df0c02ac9b8c8db/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "462c71f71b5d753bc8327ab833dea23679450ca3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/462c71f71b5d753bc8327ab833dea23679450ca3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/462c71f71b5d753bc8327ab833dea23679450ca3"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 8,
      "deletions": 15
    },
    "files": [
      {
        "sha": "a07dbd1e1d8a59f56812e5f0d08db95b5d65afc7",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af6ac3b677454644364fd24d0df0c02ac9b8c8db/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af6ac3b677454644364fd24d0df0c02ac9b8c8db/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=af6ac3b677454644364fd24d0df0c02ac9b8c8db",
        "patch": "@@ -24,8 +24,6 @@ If you want to build the disk image with `make deploy` (.dmg / optional), you ne\n \n     brew install librsvg\n \n-NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n-\n Berkeley DB\n -----------\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself,"
      },
      {
        "sha": "25b6dd916e7c8d016c42790f3e430c6de49ac7e8",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af6ac3b677454644364fd24d0df0c02ac9b8c8db/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af6ac3b677454644364fd24d0df0c02ac9b8c8db/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=af6ac3b677454644364fd24d0df0c02ac9b8c8db",
        "patch": "@@ -112,18 +112,13 @@ ZMQ dependencies (provides ZMQ API 4.x):\n #### Dependencies for the GUI\n \n If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n-are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n-If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n+are installed. Qt 5 is necessary to build the GUI.\n To build without GUI pass `--without-gui`.\n \n-To build with Qt 5 (recommended) you need the following:\n+To build with Qt 5 you need the following:\n \n     sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n \n-Alternatively, to build with Qt 4 you need the following:\n-\n-    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n-\n libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n@@ -144,7 +139,7 @@ Optional:\n \n     sudo dnf install miniupnpc-devel\n \n-To build with Qt 5 (recommended) you need the following:\n+To build with Qt 5 you need the following:\n \n     sudo dnf install qt5-qttools-devel qt5-qtbase-devel protobuf-devel\n "
      },
      {
        "sha": "793c659419c0153b8a150250cebfa8cc708d3734",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af6ac3b677454644364fd24d0df0c02ac9b8c8db/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af6ac3b677454644364fd24d0df0c02ac9b8c8db/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=af6ac3b677454644364fd24d0df0c02ac9b8c8db",
        "patch": "@@ -23,7 +23,7 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | protobuf | [2.6.3](https://github.com/google/protobuf/releases) |  | No |  |  |\n | Python (tests) |  | [3.4](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n-| Qt | [5.7.1](https://download.qt.io/official_releases/qt/) | 4.7+ | No |  |  |\n+| Qt | [5.7.1](https://download.qt.io/official_releases/qt/) | 5.x | No |  |  |\n | XCB |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L94) (Linux only) |\n | xkbcommon |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L93) (Linux only) |\n | ZeroMQ | [4.2.3](https://github.com/zeromq/libzmq/releases) |  | No |  |  |"
      },
      {
        "sha": "3ec538b4f43dd35f4829e798e311ad41b1b8eec9",
        "filename": "src/qt/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af6ac3b677454644364fd24d0df0c02ac9b8c8db/src/qt/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af6ac3b677454644364fd24d0df0c02ac9b8c8db/src/qt/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/README.md?ref=af6ac3b677454644364fd24d0df0c02ac9b8c8db",
        "patch": "@@ -1,6 +1,6 @@\n This directory contains the BitcoinQT graphical user interface (GUI). It uses the cross-platform framework [Qt](https://www1.qt.io/developers/).\n \n-The current precise version for Qt 5 is specified in [qt.mk](/depends/packages/qt.mk). Qt 4 is also supported (see [#8263](https://github.com/bitcoin/bitcoin/issues/8263)).\n+The current precise version for Qt 5 is specified in [qt.mk](/depends/packages/qt.mk).\n \n ## Compile and run\n \n@@ -16,7 +16,7 @@ To run:\n \n ### forms\n \n-Contains [Designer UI](http://doc.qt.io/qt-5.9/designer-using-a-ui-file.html) files. They are created with [Qt Creator](#using-qt-creator-as-ide), but can be edited using any text editor.\n+Contains [Designer UI](https://doc.qt.io/qt-5.9/designer-using-a-ui-file.html) files. They are created with [Qt Creator](#using-qt-creator-as-ide), but can be edited using any text editor.\n \n ### locale\n \n@@ -36,7 +36,7 @@ Represents the main window of the Bitcoin UI.\n \n ### \\*model.(h/cpp)\n \n-The model. When it has a corresponding controller, it generally inherits from  [QAbstractTableModel](http://doc.qt.io/qt-5/qabstracttablemodel.html). Models that are used by controllers as helpers inherit from other Qt classes like [QValidator](http://doc.qt.io/qt-5/qvalidator.html).\n+The model. When it has a corresponding controller, it generally inherits from  [QAbstractTableModel](https://doc.qt.io/qt-5/qabstracttablemodel.html). Models that are used by controllers as helpers inherit from other Qt classes like [QValidator](https://doc.qt.io/qt-5/qvalidator.html).\n \n ClientModel is used by the main application `bitcoingui` and several models like `peertablemodel`.\n \n@@ -46,7 +46,7 @@ A controller. `:NAMEpage.cpp` generally includes `:NAMEmodel.h` and `forms/:NAME\n \n ### \\*dialog.(h/cpp)\n \n-Various dialogs, e.g. to open a URL. Inherit from [QDialog](http://doc.qt.io/qt-4.8/qdialog.html).\n+Various dialogs, e.g. to open a URL. Inherit from [QDialog](https://doc.qt.io/qt-5/qdialog.html).\n \n ### paymentserver.(h/cpp)\n "
      }
    ]
  }
]