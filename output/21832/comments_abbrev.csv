DrahtBot,2021-05-02 15:14:43,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17783 by ryanofsky\n\nIf you consider this pull request important, please also help to review the conflicting pull reques",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-830824783,830824783,
DrahtBot,2021-05-03 09:31:13,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @jonatack has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-831141176,831141176,
jonatack,2021-05-03 10:45:02,"Concept ACK. Quick test below on signet. Build is clean, only skimmed the code for now.\n\nIdeas:\n- perhaps try displaying the balances before the wallet names, as the balances have a fixed length\n- maybe display the connections on one line `connections: in 10, out 10, total 20`...a good opportunity to save on vertical space, as getinfo was previously pruned down due to its output being cons",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-831179733,831179733,
klementtan,2021-05-03 13:46:23,"@jonatack \nUpdated the PR according to your comments:\n1. Swap position of wallet and balance and \n2. Prefix balance  value with ₿ emoji to remove any ambiguity of what it represents \n3.  display the connections on one line \n4. changed `Blockchain` to `Block chain`\n5. added space to `verification progress`, `realy fee`, `time offset` and `keypool size`(Should I also change `paytxfee` to",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-831270065,831270065,
laanwj,2021-05-04 15:00:21,"I think this is nice. It looks better, is more user friendly, and at the same time discourages parsing the output in scripts and such (which is good because it is not intended as a stable interface).\n",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-832009885,832009885,
klementtan,2021-05-07 11:22:04,Added check to not print ansi colour code if running on `WIN32`.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-834283464,834283464,
laanwj,2021-05-10 12:55:27,"Looks good to me now. I think it makes sense to squash these commits before merge, as they incrementally change the same code.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-836664863,836664863,
klementtan,2021-05-10 15:25:47,"@laanwj Roger that. Squashed all the commits to a single commit. \n\nNot sure why the last CI task is failing tho. Anyone have a clue?",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-836837141,836837141,
laanwj,2021-05-12 12:47:57,"Thanks!\n\n> Not sure why the last CI task is failing tho. Anyone have a clue?\n\nSeems to be solved now. We have transient issues with the CI quite often, unfortunately.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-839743785,839743785,
jonatack,2021-05-12 13:24:46,"Approach ACK\n\n![Screenshot from 2021-05-12 15-25-10](https://user-images.githubusercontent.com/2415484/117982964-0ccfb480-b326-11eb-83f7-8eb08b156d2f.png)\n\nSome questions (not sure they are good ideas!)\n\nThe Bitcoin symbols are neat but I'm not sure they are needed...or maybe instead add just one symbol in parentheses after ""Balances"" in the header, e.g. Balances (B)...or insert a spac",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-839770329,839770329,
klementtan,2021-05-12 17:50:13,"Updated the PR to according @jonatack' comments\n> Some questions (not sure they are good ideas!)  \nThe Bitcoin symbols are neat but I'm not sure they are needed...or maybe instead add just one symbol in parentheses after ""Balances"" in the header, e.g. Balances (B)...or insert a space between them and the balance?\nShould the field names be capitalized? e.g. s/verification progress/Verificatio",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-839976950,839976950,
jonatack,2021-05-12 21:05:26,"Test of f93b021472\n\n![Screenshot from 2021-05-12 22-48-59](https://user-images.githubusercontent.com/2415484/118042593-cd27bd80-b363-11eb-9c4c-49c989f85b5e.png)\n\nWhat do you think about\n- `s/Balance(₿):/Balance (₿):/` (insert a space)\n- extend the colors to the full line of `Chain: <chain>` and `Balances (₿)`\n- right-justify the balances to the largest balance, prefixing spaces to th",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-840096163,840096163,
jonatack,2021-05-12 21:36:43,"Oh, and if you need some sBTC (signet coins) for testing, here's a faucet: https://signetfaucet.com (I can send you some too, if you need).",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-840112979,840112979,
klementtan,2021-05-13 07:40:34,"Updated [ed7feb4](https://github.com/bitcoin/bitcoin/pull/21832/commits/ed7feb460e841cec9570fc4115dc00486eec81b0) with the following changes:\n1. Added space before `(₿)`: `s/Balance(₿):/Balance (₿):/` and `s/Balances(₿):/Balances (₿):/`\n2. Combined Connections into `Network` header: `Network: in <in>, out <out>, total <total>`\n3. Extended colors for `Chain: <chain>`, `Balances (₿)`, `Balance",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-840382324,840382324,
jonatack,2021-05-13 14:27:50,"Sent you some signet coins (wow, the faucet used to be 10 sBTC and now it's max .01). Thanks for updating! Looking pretty good. I think the balances alignment should based on the decimal point (apologies, I was unclear) which might require padding spaces after the balance as well if there are fewer than 8 digits after the decimal point (I thought there were always 8). And maybe we can omit the `:`",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-840598859,840598859,
klementtan,2021-05-13 15:45:56,"Got it! Thanks for sending it to me and replying to me so quickly. My apologies the amount was hardcoded by me and I added fewer decimal places than what it would actually have. Here is the updated screenshot of what it would look like when one wallet contains ""longer"" balance than others\n\n![image](https://user-images.githubusercontent.com/49265907/118150344-071cc080-b445-11eb-9b8f-5de1f92a3a8",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-840650032,840650032,
jonatack,2021-05-18 17:11:26,Will re-test and review very soon.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-843370931,843370931,
jonatack,2021-05-19 10:32:29,"ACK 6015d1d689c78dd5469cfde0963259422eef66df\n\nOne nice advantage of this change is that -getinfo would use less vertical screen space.\n\n![Screenshot from 2021-05-19 12-28-40](https://user-images.githubusercontent.com/2415484/118798538-473cd280-b88d-11eb-8125-55132ca4069b.png)\n\nWith no wallets loaded:\n\n![Screenshot from 2021-05-19 12-38-31](https://user-images.githubusercontent.com/",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-843971337,843971337,
klementtan,2021-05-19 10:42:57,@jonatack Thanks for taking the time to review the PR and guide me. Will work on refactoring the test to simplify it.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-843978950,843978950,
jonatack,2021-05-19 10:44:53,"> fixes: #17314\n\n(This mention would auto-close the issue, I think. I don't know if it should be closed.)\n",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-843980325,843980325,
jonatack,2021-05-19 22:00:09,> Some thinking out loud: For me it's rather hard to say what keys are in `result` variable in `ParseGetInfoResult`.\n\nSee the GetinfoRequestHandler class. I'm not sure the keys need to be hoisted out to a bunch of file-level static constants.\n\nMaybe ParseGetInfoResult() could be a method in the GetinfoRequestHandler class for better encapsulation.\n,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844506315,844506315,
klementtan,2021-05-20 01:48:15,"Made the following changes:\n- Updated s/`Time offset`/`Time offset (s)` and s/`Relay fee`/ `Relay fee (BTC/kB)` \n![image](https://user-images.githubusercontent.com/49265907/118904939-6ac75200-b94d-11eb-91ba-e99c8f965e1d.png)\n- Update release notes.\n\n> Maybe ParseGetInfoResult() could be a method in the GetinfoRequestHandler class for better encapsulation.\n\n@jonatack I am not sure how",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844618949,844618949,
kiminuo,2021-05-20 06:16:44,"> * Updated s/`Time offset`/`Time offset (s)` and s/`Relay fee`/ `Relay fee (BTC/kB)`\n>   ![image](https://user-images.githubusercontent.com/49265907/118904939-6ac75200-b94d-11eb-91ba-e99c8f965e1d.png)\n> \n> * Update release notes.\n\nLooks good. Thanks for the patch.\n\n* ""Pay transaction fee"" should have a unit too, right?\n* ""Proxy"" is empty. Maybe ""Proxy: N/A"" when there is no proxy?",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844738911,844738911,
jonatack,2021-05-20 06:51:41,"> @jonatack I am not sure how to do that because `GetWalletBalances` takes in the return result of `GetinfoRequestHandler` and `ParseGetInfoResult` can only be called after `GetWalletBalances` is executed. Might need to refactor `GetWalletBalances` as well if we would like to encapsulate `ParseGetInfoResult`.\n\nMakes sense, and this can be in a follow-up.\n",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844762934,844762934,
klementtan,2021-05-20 07:24:59,"> * ""Pay transaction fee"" should have a unit too, right?\n> * ""Proxy"" is empty. Maybe ""Proxy: N/A"" when there is no proxy? Or hide it altogether when there is no proxy? I have not checked possible values but it feels strage to show ""Proxy: <nothing here>"".\n\nUpdate the PR with the following changes:\n- If no `Proxy` then display `N/A` instead of an empty string\n- added unit for `Pay transac",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844794516,844794516,
kiminuo,2021-05-20 09:07:48,"This is my output on Windows 10 *with colors turned for the Win32 platform*:\n\n## Windows Terminal running Powershell 7\n\n![image](https://user-images.githubusercontent.com/58662979/118949209-470a0900-b959-11eb-8457-6d9a41184f6b.png)\n\n(https://github.com/microsoft/terminal/ is not bundled with Windows by default and Powershell 7 is not bundled in Windows 10 by default too)\n\nNote: Win",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844890803,844890803,
klementtan,2021-05-20 09:33:05,"@kiminuo Thanks a lot for testing! <strike>Unfortunately, I do not own a Windows computer to test this myself. \n\nDoes this mean the `WIN32` check [here](https://github.com/bitcoin/bitcoin/pull/21832/files#diff-134ccc4e5308f84fb9c03a9a1e1599209560370e49e30c7f545fa7b9ba7e07deR882-R896) is insufficient? </strike>\n\nWill create a follow-up issue for this if this PR gets merged",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844913905,844913905,
klementtan,2021-05-21 10:59:10,"Updated the PR with the following changes: \n- Change `Relay fee` to `Min tx relay fee rate`\n- Change `Pay transaction fee` to `Paytxfee`\n\nCleaned up OP to add additional details on how to test as the PR comments have become rather long",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-845869116,845869116,
jonatack,2021-05-25 08:04:49,Will re-test shortly. This would be nice for the upcoming release.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-847647684,847647684,
jonatack,2021-05-25 21:20:33,"This is nicely improved after the feedback by @kiminuo.\n\nRegarding the paytxfee and relay fee labels, I wonder if the longer versions wouldn't be more user-friendly and have the advantage of both clearly being fee rates (see screenshot), but I'm honestly not sure. Happy to re-ACK if you update.\n\n![Screenshot from 2021-05-25 23-13-01](https://user-images.githubusercontent.com/2415484/119569",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-848273149,848273149,
prayank23,2021-05-25 21:57:31,"```js\nConcept ACK\n```",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-848295424,848295424,
klementtan,2021-05-26 01:17:17,"@jonatack Thanks for reviewing again! \n> Regarding the paytxfee and relay fee labels, I wonder if the longer versions wouldn't be more user-friendly and have the advantage of both clearly being fee rates (see screenshot)\n\nYup I agree. Having a longer version for `paytxfee` would allow for better standardization and user-friendliness. Have updated the PR to change `Paytxfee (BTC/kVb)` to `Tra",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-848384950,848384950,
jonatack,2021-05-26 13:04:14,"Diff-review-only re-ACK 36ddd44c9df3f1209be387c40b801c2fbab49672 per `git diff 7c0cd20 36ddd44`\n\n>  Is it harder to review if I constantly squash my changes compared to squashing it at the end when everything is finalized?\n\nOnce the pull is complete and ready for more-or-less final review, I think it's preferable to squash immediately, as `git diff` (or `git range-diff`) allows easily diff",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-848751692,848751692,
klementtan,2021-05-26 16:36:33,"> but markdown toggles maybe yes to not rely on markdown for it to make sense\n\n@jonatack Ok got it! Updated the PR description to remove the markdown toggles.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-848928542,848928542,
jonatack,2021-05-30 10:52:05,"I think this is a nice improvement and it has an ACK by me and 3 Concept ACKs, if anyone else would like to review or test it.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-850979641,850979641,
prayank23,2021-05-30 13:59:44,"1. nit: Could have created a ""topic specific branch"" for PR as mentioned in [CONTRIBUTING.md#contributor-workflow](/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#contributor-workflow)\n\n2. Compiled and tested on Ubuntu. Bitcoin symbol unicode character was missing. Maybe we can avoid using it. Either mention nothing because Bitcoin Core wallet will only be used for bitcoin and nothing else or wri",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-851004943,851004943,
klementtan,2021-05-30 16:27:22,"@prayank23 thanks a lot for reviewing ❤️ \n\n> 1. nit: Could have created a ""topic specific branch"" for PR as mentioned in [CONTRIBUTING.md#contributor-workflow](/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#contributor-workflow)\n\nMy apologies for that. I didn't want to create a new PR with a ""topic-specific branch"" as other people had already started reviewing the PR. \n\n> 2. Compiled and",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-851025850,851025850,
klementtan,2021-05-30 16:31:53,"Made the following changes for `a283d3d to ef535b4`:\n- Removed bitcoin emoji as it is not supported by default on ubuntu \n\n<details>\n\n<summary> Screenshots </summary>\n\n*No wallet loaded:*\n![image](https://user-images.githubusercontent.com/49265907/120110499-57fc1b00-c1a0-11eb-9f62-169e5031e569.png)\n\n*Single wallet loaded*\n![image](https://user-images.githubusercontent.com/492",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-851026419,851026419,
prayank23,2021-05-30 16:44:49,"> Hmmm I am not too sure about this as the only other color that is left in ANSI Colour Code is red and I am afraid that it would give a false sense of danger to the user.\n\nAgree. Red works better for errors.\n\n> Another approach would be to use bright cyan(\x1B[96m) for wallet(refer to screenshot below). However in my opinion, the difference between bright and non-bright color is too subtl",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-851028054,851028054,
klementtan,2021-05-31 12:24:54,[`ef535b4`](https://github.com/bitcoin/bitcoin/commit/ef535b48b618a40383498a35ec08a45992e51b58) to [`23c8c52`](https://github.com/bitcoin/bitcoin/commit/23c8c5284acb18d8e960184e0b2d425c8a304004) rebased to resolve conflict.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-851455678,851455678,
klementtan,2021-06-01 12:17:07,"[`23c8c52`](https://github.com/bitcoin/bitcoin/commit/23c8c5284acb18d8e960184e0b2d425c8a304004) to [`8233881`](https://github.com/bitcoin/bitcoin/commit/823388119bb1179e3667f86e82ab6817f87eb616)\n* Added color to `:` for `Balance:` and `Warning:`\n* Minor tests cleanup",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852077138,852077138,
klementtan,2021-06-01 18:40:07,"> A few nits below, will re-ACK if you choose to address them.\n\n@jonatack thanks! Addressed the nits in  [`8233881`](https://github.com/bitcoin/bitcoin/commit/8233881) to [`b634ff2`](https://github.com/bitcoin/bitcoin/commit/b634ff26ab8cf4bdffed1a75300ec63a9da22cf1)",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852357746,852357746,
kiminuo,2021-06-01 18:52:57,"tACK b634ff2\n\nGood work!",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852365377,852365377,
jonatack,2021-06-01 20:23:53,"Code review re-ACK b634ff26ab8cf4bdffed1a75300ec63a9da22cf1 per `git diff 8233881 b634ff2`, documentation and code comment changes only",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852421716,852421716,
prayank23,2021-06-01 20:54:00,"~~re-ACK  https://github.com/bitcoin/bitcoin/commit/b634ff26ab8cf4bdffed1a75300ec63a9da22cf1~~\n\nI couldn't' see any colors in PowerShell like https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-844890803 :(\n\nMaybe it works only with Microsoft Terminal.\n\n\n<details><summary>Command Prompt</summary>\n\n![image](https://user-images.githubusercontent.com/13405205/120388647-0642c4",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852438266,852438266,
sipa,2021-06-02 00:17:55,Maybe this should only be enabled when stdout is connected to a terminal (`isatty(stdout)`)?,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852586012,852586012,
prayank23,2021-06-02 01:23:36,"Yes this should only be enabled for output in terminal.\n\nRelated link: https://stackoverflow.com/questions/2027484/determine-whether-process-output-is-being-redirected-in-c-c\n\nAlthough I am not sure about header files required for it to work on every OS. Maybe `unistd.h` for Linux and [`io.h`](https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/isatty?view=msvc-160) for Window",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852638202,852638202,
klementtan,2021-06-02 02:34:28,"@prayank23 thanks a lot for testing!\n\n> reg add HKEY_CURRENT_USER\Console /v VirtualTerminalLevel /t REG_DWORD /d 0x00000001 /f\n\nIf we go with that approach does it mean that bitcoin core will no longer work out of the box for Windows users? In my opinion not having colors for WIN32 would be better than having to run an additional step of entering the `reg add ...` command as an administra",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852666625,852666625,
sipa,2021-06-02 02:45:49,"@klementtan Right, when you're sending output to a text file or through grep or something like that, you generally don't want colorization.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852671079,852671079,
prayank23,2021-06-02 02:54:14,"> If we go with that approach does it mean that bitcoin core will no longer work out of the box for Windows users? In my opinion not having colors for WIN32 would be better than having to run an additional step of entering the reg add ... command as an administrator. What do you think? :)\n\n~~Colors don't work on Windows with ANSI escape sequence by default. So making the changes that I suggest",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852674355,852674355,
klementtan,2021-06-02 05:11:23,"> Right, when you're sending output to a text file or through grep or something like that, you generally don't want colorization.\n\n@sipa Good idea! Added this in the latest commit.\n\nb634ff2 to bc97f9a: \n- return colored text only when connected to the terminal.\n- No change in behaviour for normal cli usage \n\n<details>\n<summary> Before  b634ff2 </summary>\n\n```\n./src/bitcoin-cli",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852727706,852727706,
prayank23,2021-06-02 09:32:14,ACK https://github.com/bitcoin/bitcoin/commit/84547644885098fc94a3c126a0464f3d08277f5f,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-852869409,852869409,
kiminuo,2021-06-03 17:44:29,ACK 84547644885098fc94a3c126a0464f3d08277f5f,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-854059843,854059843,
klementtan,2021-06-03 18:36:59,84547644885098fc94a3c126a0464f3d08277f5f to 7f253cf resolved style issues. No change in any behaviour to `-getinfo`.,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-854090894,854090894,
jonatack,2021-06-03 18:39:48,Lightly retested and diff review re-ACK 7f253cf3459afa340412887765b62faff2f387f5 per `git diff 8454764 7f253cf` ,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-854092707,854092707,
prayank23,2021-06-03 18:41:05,ACK https://github.com/bitcoin/bitcoin/commit/7f253cf3459afa340412887765b62faff2f387f5,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-854093480,854093480,
klementtan,2021-06-12 04:14:36,"> @luke-jr: Might be nice to have a way to force it on/off?\n\n7f253cf to 5a2a6b3: Added `-color=never/always/auto`\n* `always`: Will always display color\n* `never`: Will never display color\n* `auto`: Will only display color if OS is not WIN32 and stdout connected to terminal \n\n### Tested scenarios \n<details>\n<summary>-color not set</summary>\n\n```bash\n$ ./src/bitcoin-cli -sign",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-859994844,859994844,
theStack,2021-06-12 22:56:05,"Concept ACK\nOnly quickly tested the ""No wallet"" scenario so far, looks very nice!  🎉 \nPlanning to test with wallet(s) loaded and to code-review tomorrow.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-860123180,860123180,
klementtan,2021-06-13 03:46:37,"> @theStack how about with 4 decimal places? \n\n5a2a6b3 to c5625c2: Chanted `Verification progress:` to percentage with 4 dp.\n\n<details>\n<summary> New screenshots </summary>\n\n*No wallet loaded:*\n![image](https://user-images.githubusercontent.com/49265907/121794631-94b62080-cc3c-11eb-8627-d0d1c25f0878.png)\n\n*Single wallet loaded*\n![image](https://user-images.githubusercontent.c",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-860146339,860146339,
klementtan,2021-06-13 16:21:31,"@theStack thanks for reviewing and testing. Yeah, I agree those are great ideas! I will update the issue with other improvement ideas after this PR gets merged. I would also like to refactor `ParseGetInfoResult` and `GetWalletBalances` into `GetinfoRequestHandler`.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-860236735,860236735,
achow101,2021-06-14 20:49:31,Code Review ACK d6211e9a49fda31c2e2792874e537858c1913af3,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-860982244,860982244,
klementtan,2021-06-14 20:52:24,c5625c2 to d6211e9 resolve typo in test log,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-860985272,860985272,
klementtan,2021-06-14 21:43:01,"d6211e9 to 14cb2e0: to re-trigger CI because of failing flaky test and `s/cli/CLI` for args options.\n\nApologies to previous ACKs ",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-861015642,861015642,
prayank23,2021-06-15 05:35:36,"### 1. Terminal (-color not set):\n\n<details><summary>Single Wallet</summary>\n\n![image](https://user-images.githubusercontent.com/13405205/121998112-04591680-cdc9-11eb-999e-ea0fc8c5aac4.png)\n\n</details>\n\n<details><summary>Multi Wallet</summary>\n\n![image](https://user-images.githubusercontent.com/13405205/121994709-6747af00-cdc3-11eb-9cde-0b52868d3e86.png)</details>\n\n### 2. -",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-861184991,861184991,
achow101,2021-06-15 17:58:38,re-ACK 14cb2e0fe1384f89b4c9ca70751e6676f438b7a5,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-861715802,861715802,
klementtan,2021-07-05 13:10:56,"14cb2e0 to 658ab9c: \n\n* Resolved stylying nit\n* Add validation when invalid value added to `-color`\n\n```\n$ ./src/bitcoin-cli -signet -color=foo -getinfo\nerror: Invalid value for -color option. Valid values: always, auto, never.\n```",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-874101828,874101828,
jonatack,2021-07-05 20:08:29,"re-ACK d525177aba60e996481007989422280f9c191f15 per `git diff 658ab9c d525177`\n\nOnly change is addressing feedback on 2 test logging touch-ups.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-874308675,874308675,
klementtan,2021-07-08 00:58:35,658ab9c to 62aaff1: resolved comments from reviewers regarding logging and better handling of `-color` option 🙏 ,https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-876034884,876034884,
jonatack,2021-07-08 10:53:44,"re-ACK 62aaff178a665d757b604ee4a90556242c1135d3 per `git diff d525177 62aaff1`\n",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-876339120,876339120,
DrahtBot,2021-07-21 10:00:35,"<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-884060716,884060716,
jonatack,2021-07-21 12:26:23,"Congrats @klementtan, well-deserved.",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-884149650,884149650,
theStack,2021-07-21 12:35:56,"This PR seems to be merged, but is still open. Another GitHub problem I guess? 🤔 ",https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-884155110,884155110,
laanwj,2021-05-04 15:11:14,"Are there still issues on windows with colorized text, or can basic ANSI color support be assumed all over the board now?\n(if not, you might want to put this in `#ifndef WIN32`, leave the strings empty if not—we do this for some python scripts)",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r625867813,625867813,src/bitcoin-cli.cpp
klementtan,2021-05-04 15:27:22,"hmmm I do not own a Windows computer and cannot test if ANSI color support works. \n\n> (if not, you might want to put this in #ifndef WIN32, leave the strings empty if not—we do this for some python scripts)\n\nAm I right to say you are referring to something like this? \n```\n    std::string RESET = """";\n    std::string GREEN = """";\n    std::string BLUE = """";\n    std::string YELLOW = """,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r625880919,625880919,src/bitcoin-cli.cpp
laanwj,2021-05-04 15:39:58,"Yes, for example. I think I would personally do, to make it symmetrical:\n```c++\n#ifndef WIN32\n    const std::string RESET = ""\x1B[0m"";\n    const std::string GREEN = ""\x1B[32m"";\n    const std::string BLUE = ""\x1B[34m"";\n    const std::string YELLOW = ""\x1B[33m"";\n    const std::string MAGENTA = ""\x1B[35m"";\n    const std::string CYAN = ""\x1B[36m"";\n#else\n    const std::string RESET ",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r625891154,625891154,src/bitcoin-cli.cpp
klementtan,2021-05-04 16:13:25,@laanwj Yeah you're right that looks better 👍. Updated the PR to add WIN32 check. ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r625917394,625917394,src/bitcoin-cli.cpp
jonatack,2021-05-12 13:03:18,Could add Doxygen documentation for this new function.,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631020404,631020404,src/bitcoin-cli.cpp
jonatack,2021-05-12 13:07:07,"Maybe reference to const here rather than copying\n ```suggestion\n         for (const std::string& wallet : result[""balances""].getKeys()) {\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631023249,631023249,src/bitcoin-cli.cpp
jonatack,2021-05-12 13:07:34,"style nit, for a guard conditional at the top of the function this seems more compact to me, feel free to ignore\n```diff\n-    if (!find_value(result, ""error"").isNull()) {\n-        return;\n-    }\n+    if (!find_value(result, ""error"").isNull()) return;\n```\n",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631023669,631023669,src/bitcoin-cli.cpp
jonatack,2021-05-12 13:12:27,"nit, maybe combine the two -getinfo checks, feel free to ignore\n```diff\n             if (error.isNull()) {\n-                if (gArgs.IsArgSet(""-getinfo"") && !gArgs.IsArgSet(""-rpcwallet"")) {\n-                    GetWalletBalances(result); // fetch multiwallet balances and append to result\n-                }\n-\n                 if (gArgs.IsArgSet(""-getinfo"")) {\n+                    i",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631027533,631027533,src/bitcoin-cli.cpp
jonatack,2021-05-12 13:14:29,"nit, after using `if (gArgs.IsArgSet(""-getinfo""))` a year ago, I learned later that this does more robust value checking of the user input:\n```suggestion\n                if (gArgs.GetBoolArg(""-getinfo"", false)) {\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631029190,631029190,src/bitcoin-cli.cpp
klementtan,2021-05-12 17:51:07,Added Doxygen documentation for `ParseGetInfoResult`,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631274553,631274553,src/bitcoin-cli.cpp
klementtan,2021-05-12 17:54:00,Updated to use string reference instead of copying,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631276492,631276492,src/bitcoin-cli.cpp
klementtan,2021-05-12 17:54:49,Followed your suggestion and updated to a single line guard clause,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631277055,631277055,src/bitcoin-cli.cpp
klementtan,2021-05-12 17:55:14,Followed your suggestion and combined the checks,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631277320,631277320,src/bitcoin-cli.cpp
klementtan,2021-05-12 17:55:49,Updated to use `GetBoolArg` instead of `IsArgSet`,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r631277699,631277699,src/bitcoin-cli.cpp
jonatack,2021-05-19 07:57:20,"Thanks for adding it. Suggestion:\n```diff\n /**\n- * ParseGetInfoResult takes in -getinfo result in UniValue object and parses it into a user friendly UniValue string to be\n- * printed on the console.\n- * @param result Reference to a UniValue object that contains all the -getinfo data.\n+ * ParseGetInfoResult takes in -getinfo result in UniValue object and parses it\n+ * into a user frie",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635000570,635000570,src/bitcoin-cli.cpp
jonatack,2021-05-19 08:17:27,"This is clear from the `BITCOIN_EMOJI` constant, so I think you can drop this line. ",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635015053,635015053,src/bitcoin-cli.cpp
jonatack,2021-05-19 08:25:43,"The diff in the above 15 lines in  the ""Test -stdinrpcpass option"" section is unrelated formatting changes. I checked that it doesn't change the code, but it's easier and safer to review without them and normally they shouldn't be added in this commit. I think they can probably be omitted.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635021231,635021231,test/functional/interface_bitcoin_cli.py
jonatack,2021-05-19 08:29:31,"This `cli_get_info_string_to_dict()` function seems like a lot of workaround, would it be easier to drop this and test the stdout instead? I think we do that in other tests (feature_help.py, tool_wallet.py, etc). I guess it could be done later.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635024249,635024249,test/functional/interface_bitcoin_cli.py
klementtan,2021-05-19 10:11:55,👍 updated it according to your suggestion.,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635100581,635100581,src/bitcoin-cli.cpp
klementtan,2021-05-19 10:13:26,Removed the comment ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635101574,635101574,src/bitcoin-cli.cpp
klementtan,2021-05-19 10:14:13,My apologies for that 😅. Removed the unrelated formatting changes in this PR. ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635102204,635102204,test/functional/interface_bitcoin_cli.py
kiminuo,2021-05-19 20:37:12,"Given that user should undestand this output, would it make sense to add a unit here (`BTC/kB`? / `BTC/kvB`?)?",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635567281,635567281,src/bitcoin-cli.cpp
kiminuo,2021-05-19 20:51:08,Would it make sense to add `s` (seconds) as a time unit here? (At least I believe it is in seconds.),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635575974,635575974,src/bitcoin-cli.cpp
klementtan,2021-05-20 01:57:32,Good suggestion! Updated to `BTC/kB` as per the unit in the [code](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/net.cpp#L606),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635694243,635694243,src/bitcoin-cli.cpp
klementtan,2021-05-20 01:58:41,Updated to add unit `s`. Yup you're right it is in seconds([code](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/net.cpp#L135)),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635694547,635694547,src/bitcoin-cli.cpp
kiminuo,2021-05-20 06:26:18,"I think that instead of `""""`, it is more common to use `[default wallet]`. \n\nAt least these make me think so:\n\n* https://github.com/bitcoin/bitcoin/blob/ea8b2e8e127b5a27424c1c08a1352ec1c9382c96/src/qt/bitcoingui.cpp#L401\n* https://github.com/bitcoin/bitcoin/pull/13275/",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635800191,635800191,src/bitcoin-cli.cpp
jonatack,2021-05-20 06:50:02,"In the RPC/CLI the default wallet has been `""""`.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635812803,635812803,src/bitcoin-cli.cpp
jonatack,2021-05-20 06:54:36,Would be good to insert a blank line before it.,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635815443,635815443,doc/release-notes.md
jonatack,2021-05-20 07:00:58,"s/kB/kvB/ (virtual size is used now, see #21752)",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635819145,635819145,src/bitcoin-cli.cpp
jonatack,2021-05-20 07:02:49,sort,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635820252,635820252,src/bitcoin-cli.cpp
kiminuo,2021-05-20 07:04:52,"Is that user-friendly? I mean `""""` looks like an output for programmers and not for users. However, if it is a convention in CLI, then it's better to align with it.\n\n____\nOne can possibly write also `default wallet ("""")`",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635821395,635821395,src/bitcoin-cli.cpp
jonatack,2021-05-20 07:13:57,"If you need to specify the default wallet in the CLI or RPC, you pass `""""` or just nothing, e.g.:\n```\n$ bitcoin-cli -signet -rpcwallet="""" -getinfo\n$ bitcoin-cli -signet -rpcwallet=  -getinfo\n```\nIf you pass something else, it won't be recognized as the default wallet (unless there is some way I'm not aware of).\n\nIf you have a wallet named ""default wallet"" then it seems your suggestio",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635826943,635826943,src/bitcoin-cli.cpp
klementtan,2021-05-20 07:27:08,Thanks for spotting that! updated position of import ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635835386,635835386,src/bitcoin-cli.cpp
klementtan,2021-05-20 07:28:04,Thanks I didn't know that! Changed the units to `kvB` for Relay fee and Pay transaction fee,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635836043,635836043,src/bitcoin-cli.cpp
klementtan,2021-05-20 07:28:20,Added blank line before it 👍🏻,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635836258,635836258,doc/release-notes.md
kiminuo,2021-05-20 08:28:17,"I see, that makes sense. Even though I was not suggesting to pass ""default wallet"" to a CLI command, just to make it clear that `""""` means a default wallet in the text output. \n\nAnyway, all is good.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635886608,635886608,src/bitcoin-cli.cpp
jonatack,2021-05-20 10:03:21,"So that it is clear that this line refers to the `-paytxfee` configuration option without having to look in the code, and that it is actually a fee rate, maybe either s/Pay transaction fee/Paytxfee/ or\n```suggestion\n        result_string += strprintf(""Transaction fee rate (-paytxfee) (%s/kvB): %s\n\n"", CURRENCY_UNIT, result[""paytxfee""].getValStr());\n```\nSee also src/wallet/init.cpp:\n```c",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635958485,635958485,src/bitcoin-cli.cpp
jonatack,2021-05-20 10:07:36,"maybe ""Min tx relay fee rate"" or ""Minimum fee rate for transaction relay"" or something like that...WDYT?\n```suggestion\n            assert_equal(Decimal(cli_get_info['Min tx relay fee rate (BTC/kvB)']), network_info['relayfee'])\n```\n(see the getnetworkinfo help)",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635961516,635961516,test/functional/interface_bitcoin_cli.py
klementtan,2021-05-20 10:45:32,Thanks! Updated to `Paytxfee` instead because `Transaction fee rate (-paytxfee)` seems a bit too long ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635986985,635986985,src/bitcoin-cli.cpp
klementtan,2021-05-20 10:46:45,Agreed 👍 ! `Min tx relay fee rate` is better wording. Updated to `Relay fee` to `Min tx relay fee rate`,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r635987818,635987818,test/functional/interface_bitcoin_cli.py
kiminuo,2021-05-31 13:37:12,"nit: Comparing of floats in general can lead to comparing errors in general. (Please see https://stackoverflow.com/questions/4548004/how-to-correctly-and-standardly-compare-floats) \n\nSo even though it may not be an issue now and here, it's still a question whether one should consider using `Decimal` comparison or even string comparison.\n\nI don't know exact details here, so feel free to ign",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r642495339,642495339,test/functional/interface_bitcoin_cli.py
klementtan,2021-05-31 13:52:06,"<strike>Yeah I agree. Comparing floats directly is not a great idea and we could do something like [this](https://stackoverflow.com/a/33024979/11635160). However, I think if we were to use that method a separate PR should be created to replace all float comparisons with it.</strike>",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r642505293,642505293,test/functional/interface_bitcoin_cli.py
jonatack,2021-06-01 11:35:12,"micro-nit\n```suggestion\n        result_string += strprintf(""%sBalance:%s %s\n\n"", CYAN, RESET, result[""balance""].getValStr());\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643020698,643020698,src/bitcoin-cli.cpp
MarcoFalke,2021-06-01 11:37:59,"The others in this file are already using Decimal, no? E.g. `assert_equal(Decimal(cli_get_info['Balance']), amounts[1])`.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643022374,643022374,test/functional/interface_bitcoin_cli.py
klementtan,2021-06-01 12:09:26,👍  updated this in [`8233881`](https://github.com/bitcoin/bitcoin/commit/823388119bb1179e3667f86e82ab6817f87eb616),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643042531,643042531,src/bitcoin-cli.cpp
klementtan,2021-06-01 12:30:10,"<strike>Yup, they are all using python Decimal for the file. Correct if I am wrong but I think what @kiminuo meant is that using `assert_equal` for floats(`float`/`Decimal`) might lead to comparison errors and maybe another type of assertion should be used to check if the floats are ""close enough"".\n\nHowever, I am and very new here, and might not know the nuance behind it.</strike>",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643057178,643057178,test/functional/interface_bitcoin_cli.py
klementtan,2021-06-01 12:42:19,Also changed `float(cli_get_info['Balance'])` to `Decimal(cli_get_info['Balance']` to standardize with the rest of the tests.,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643066109,643066109,test/functional/interface_bitcoin_cli.py
MarcoFalke,2021-06-01 12:47:32,`Decimal` is not a float,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643070079,643070079,test/functional/interface_bitcoin_cli.py
klementtan,2021-06-01 13:59:42,My apologies I was confusing myself. Please ignore whatever I said ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643130324,643130324,test/functional/interface_bitcoin_cli.py
jonatack,2021-06-01 18:14:12,"```suggestion\n- Update `-getinfo` to return data in a user-friendly format that also reduces vertical space. (#21832)\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643376099,643376099,doc/release-notes.md
jonatack,2021-06-01 18:15:30,"```suggestion\n    """"""Helper method to convert human-readable -getinfo output to a dictionary""""""\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643376956,643376956,test/functional/interface_bitcoin_cli.py
jonatack,2021-06-01 18:16:16,"```suggestion\n            # When ""Balances"" appears in a line, all of the following lines contain ""balance: wallet"" until an empty line\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643377417,643377417,test/functional/interface_bitcoin_cli.py
klementtan,2021-06-01 18:37:09,👍 Resolved it in [`b634ff2`](https://github.com/bitcoin/bitcoin/commit/b634ff26ab8cf4bdffed1a75300ec63a9da22cf1),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643390374,643390374,doc/release-notes.md
klementtan,2021-06-01 18:37:33,👍 Resolved it in [`b634ff2`](https://github.com/bitcoin/bitcoin/commit/b634ff26ab8cf4bdffed1a75300ec63a9da22cf1),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643390642,643390642,test/functional/interface_bitcoin_cli.py
klementtan,2021-06-01 18:37:54,Good catch! Resolved it in [`b634ff2`](https://github.com/bitcoin/bitcoin/commit/b634ff26ab8cf4bdffed1a75300ec63a9da22cf1),https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643390907,643390907,test/functional/interface_bitcoin_cli.py
prayank23,2021-06-01 23:27:04,"```suggestion\nconst std::string RESET = ""\x1B[0m"";\nconst std::string GREEN = ""\x1B[32m"";\nconst std::string BLUE = ""\x1B[34m""; \nconst std::string YELLOW = ""\x1B[33m"";\nconst std::string MAGENTA = ""\x1B[35m""; \nconst std::string CYAN = ""\x1B[36m"";\n```\n\nIf you remove the code that ignores ANSI escape sequence on Windows, we can see colors on Windows in Command Prompt and PowerShell as",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r643550352,643550352,src/bitcoin-cli.cpp
jonatack,2021-06-03 16:28:22,"style nit, std::string is default-initialized to `""""`\n```diff\n-    std::string RESET = """";\n-    std::string GREEN = """";\n-    std::string BLUE = """";\n-    std::string YELLOW = """";\n-    std::string MAGENTA = """";\n-    std::string CYAN = """";\n+    std::string RESET, GREEN, BLUE, YELLOW, MAGENTA, CYAN;\n```\n",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r644948677,644948677,src/bitcoin-cli.cpp
klementtan,2021-06-03 18:34:53,Agreed that is much cleaner 👍 . Updated to this in 7f253cf,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r645038838,645038838,src/bitcoin-cli.cpp
lsilva01,2021-06-04 01:01:16,"nit: instead of `verificationprogress: 0.9999...` or `verificationprogress: 0.9977977097643339`, this change shows `verificationprogress: 100%` and `verificationprogress: 99.78%` respectively \n\n```suggestion\n    result_string += strprintf(""Verification progress: %.2f%%\n"", result[""verificationprogress""].get_real() * 100);\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r645221582,645221582,src/bitcoin-cli.cpp
lsilva01,2021-06-04 01:08:22,"nit: Maybe `Connections` is clearer. `Network` can refer to IPv4, Tor, I2P ...",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r645223636,645223636,src/bitcoin-cli.cpp
klementtan,2021-06-04 02:04:27,"Thanks a lot for reviewing! \n\nI actually considered changing it to 2 decimal places but was on the fence for it. My concern is that currently `0.01%` of the current height(`686181`) is about 6 blocks and displaying only 2 decimal places could confuse the user into thinking that their node is stuck. Additionally, as time goes on and the best height increases, I feel that it would be better to h",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r645240605,645240605,src/bitcoin-cli.cpp
klementtan,2021-06-04 02:09:23,"`Network` is a ""header"" that is used to represent that the segment contains network-related information from `getnetworkinfo`. The connections information were moved up to the same line as `Network` as their values are quite self-explanatory and we will save vertical real estate with that. https://github.com/bitcoin/bitcoin/pull/21832#issuecomment-840096163 for more information.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r645241947,645241947,src/bitcoin-cli.cpp
luke-jr,2021-06-11 21:24:36,Might be nice to have a way to force it on/off?,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r650272568,650272568,src/bitcoin-cli.cpp
klementtan,2021-06-11 22:36:36,"Are you suggesting a `bitcon.conf` option or CLI argument to allow WIN32 users to print ANSI color code and non-WIN32 users to not print ANSI color code? For the former, I am planning on making a follow-up PR to allow that but I am not too sure if there is a strong use case for the latter tho. ",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r650296233,650296233,src/bitcoin-cli.cpp
luke-jr,2021-06-12 00:08:37,"eg, most GNU tools support a `--color=always/never/auto`\n\nOften useful when you want to pipe coloured output to `less` or such",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r650316862,650316862,src/bitcoin-cli.cpp
klementtan,2021-06-12 03:53:29,Good suggestion! Added `-color` option in https://github.com/bitcoin/bitcoin/commit/5a2a6b3bc5e2b1bd085f5a687f1992182b71ad62,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r650340752,650340752,src/bitcoin-cli.cpp
theStack,2021-06-12 22:48:11,"I think Isilva01's proposal was primarily to change to per-cent unit, and the number of decimal places is just an example. Personally I'd also prefer showing in %; how about with 4 decimal places? With that, even a total block height of 1000000 (still years away) each single block verified results in a change of the verification progress display.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r650444076,650444076,src/bitcoin-cli.cpp
klementtan,2021-06-13 03:48:03,Yeah that makes sense! % would be better than fractional from. Implemented this in c5625c2. Thanks!,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r650464468,650464468,src/bitcoin-cli.cpp
kiminuo,2021-06-14 21:02:45,"Nit: I would expect:\n\n```suggestion\n    argsman.AddArg(""-color=<when>"", ""Enable key information from CLI response to be displayed with color. With \""-color=auto\"", bitcoin-cli will only emit color codes when standard output is connected to a terminal and OS is not WIN32. \""when\"" can be \""never\"", \""always\"", or \""auto\""(default)."", ArgsManager::ALLOW_STRING, OptionsCategory::OPTIONS);\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r651275203,651275203,src/bitcoin-cli.cpp
kiminuo,2021-06-14 21:07:21,"The idea is that when somebody passes `-color=nonsense`, then you consider the value to be `auto` (no warning or so), right?",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r651277800,651277800,src/bitcoin-cli.cpp
klementtan,2021-06-14 21:09:12,"Yup! If they don't enter a valid ""when"" value, it would be treated as the default colouring.",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r651278883,651278883,src/bitcoin-cli.cpp
klementtan,2021-06-14 21:43:29,👍  Changed in 14cb2e0 ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r651298215,651298215,src/bitcoin-cli.cpp
jonatack,2021-06-16 06:53:51,"nit, sort and missing space (see proposed improvement diff)\n```suggestion\n    argsman.AddArg(""-color=<when>"", ""Enable key information from CLI response to be displayed with color. With \""-color=auto\"", bitcoin-cli will only emit color codes when standard output is connected to a terminal and OS is not WIN32. \""when\"" can be \""never\"", \""always\"", or \""auto\"" (default)."", ArgsManager::ALLOW_STR",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r652400392,652400392,src/bitcoin-cli.cpp
klementtan,2021-06-16 08:01:20,Thanks for the suggestion! will do this if I need to retouch or in a followup,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r652446985,652446985,src/bitcoin-cli.cpp
klementtan,2021-07-05 13:09:23,Resolved this in 658ab9c. Thanks!,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r663919581,663919581,src/bitcoin-cli.cpp
jonatack,2021-07-05 16:34:04,"```suggestion\n        self.log.info(""Test -getinfo with -color=never returns no ANSI escape codes"")\n```\n\nbetter yet, `s/retuns no/does not return/`",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r664043711,664043711,test/functional/interface_bitcoin_cli.py
jonatack,2021-07-05 16:34:23,"```suggestion\n        self.log.info(""Test -getinfo with -color=always returns ANSI escape codes"")\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r664043841,664043841,test/functional/interface_bitcoin_cli.py
klementtan,2021-07-05 18:31:13,Good catch! Resolved this in d525177 ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r664083741,664083741,test/functional/interface_bitcoin_cli.py
klementtan,2021-07-05 18:31:23,Good catch! Resolved this in d525177 ,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r664083789,664083789,test/functional/interface_bitcoin_cli.py
theStack,2021-07-08 00:42:10,"nit: I don't think using the constant is a good idea here. If the default color setting is ever changed, then passing ""auto"" would not work anymore.\n```suggestion\n        } else if (color != ""auto"") {\n```",https://github.com/bitcoin/bitcoin/pull/21832#discussion_r665792495,665792495,src/bitcoin-cli.cpp
klementtan,2021-07-08 00:55:52,Good point resolved this in 62aaff1.,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r665796494,665796494,src/bitcoin-cli.cpp
MarcoFalke,2021-07-21 09:45:43,Note to myself: Might have been better to merge before #22515.,https://github.com/bitcoin/bitcoin/pull/21832#discussion_r673825293,673825293,doc/release-notes.md
