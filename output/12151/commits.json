[
  {
    "sha": "54dc13b6a2ea2823d71968049c9ad80648c3d962",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGRjMTNiNmEyZWEyODIzZDcxOTY4MDQ5YzlhZDgwNjQ4YzNkOTYy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-11T13:04:59Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-09T17:00:07Z"
      },
      "message": "rpc: Fix SoftForkMajorityDesc and SoftForkDesc signatures",
      "tree": {
        "sha": "192245c01c685ca3d9048f5a3077a9ecdca785e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/192245c01c685ca3d9048f5a3077a9ecdca785e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54dc13b6a2ea2823d71968049c9ad80648c3d962",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54dc13b6a2ea2823d71968049c9ad80648c3d962",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54dc13b6a2ea2823d71968049c9ad80648c3d962",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54dc13b6a2ea2823d71968049c9ad80648c3d962/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb25cd6aa18c69918176d68e36e26f7e373aa48c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb25cd6aa18c69918176d68e36e26f7e373aa48c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb25cd6aa18c69918176d68e36e26f7e373aa48c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d698b5779f77ce380d6ddf9c7844a200fb1c945e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54dc13b6a2ea2823d71968049c9ad80648c3d962/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54dc13b6a2ea2823d71968049c9ad80648c3d962/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=54dc13b6a2ea2823d71968049c9ad80648c3d962",
        "patch": "@@ -1121,7 +1121,7 @@ static UniValue verifychain(const JSONRPCRequest& request)\n }\n \n /** Implementation of IsSuperMajority with better feedback */\n-static UniValue SoftForkMajorityDesc(int version, CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+static UniValue SoftForkMajorityDesc(int version, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n {\n     UniValue rv(UniValue::VOBJ);\n     bool activated = false;\n@@ -1141,7 +1141,7 @@ static UniValue SoftForkMajorityDesc(int version, CBlockIndex* pindex, const Con\n     return rv;\n }\n \n-static UniValue SoftForkDesc(const std::string &name, int version, CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+static UniValue SoftForkDesc(const std::string &name, int version, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n {\n     UniValue rv(UniValue::VOBJ);\n     rv.pushKV(\"id\", name);"
      }
    ]
  },
  {
    "sha": "343b98cbcd52854ffffaca7ada72f5522117ac7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDNiOThjYmNkNTI4NTRmZmZmYWNhN2FkYTcyZjU1MjIxMTdhYzdm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-11T13:11:10Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-09T17:02:22Z"
      },
      "message": "rpc: Specify chain tip instead of chain in GetDifficulty",
      "tree": {
        "sha": "adb41e554ff0f0ded3a2fb9742454d39a4a5e8b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adb41e554ff0f0ded3a2fb9742454d39a4a5e8b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/343b98cbcd52854ffffaca7ada72f5522117ac7f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343b98cbcd52854ffffaca7ada72f5522117ac7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/343b98cbcd52854ffffaca7ada72f5522117ac7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343b98cbcd52854ffffaca7ada72f5522117ac7f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54dc13b6a2ea2823d71968049c9ad80648c3d962",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54dc13b6a2ea2823d71968049c9ad80648c3d962",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54dc13b6a2ea2823d71968049c9ad80648c3d962"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 8,
      "deletions": 18
    },
    "files": [
      {
        "sha": "abab731ea7215e3b9b884424833a9cf89e0292c7",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 11,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/343b98cbcd52854ffffaca7ada72f5522117ac7f/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/343b98cbcd52854ffffaca7ada72f5522117ac7f/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=343b98cbcd52854ffffaca7ada72f5522117ac7f",
        "patch": "@@ -58,10 +58,7 @@ static CUpdatedBlock latestblock;\n  */\n double GetDifficulty(const CBlockIndex* blockindex)\n {\n-    if (blockindex == nullptr)\n-    {\n-        return 1.0;\n-    }\n+    assert(blockindex);\n \n     int nShift = (blockindex->nBits >> 24) & 0xff;\n     double dDiff =\n@@ -1247,20 +1244,21 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n \n     LOCK(cs_main);\n \n+    const CBlockIndex* tip = chainActive.Tip();\n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"chain\",                 Params().NetworkIDString());\n     obj.pushKV(\"blocks\",                (int)chainActive.Height());\n     obj.pushKV(\"headers\",               pindexBestHeader ? pindexBestHeader->nHeight : -1);\n-    obj.pushKV(\"bestblockhash\",         chainActive.Tip()->GetBlockHash().GetHex());\n-    obj.pushKV(\"difficulty\",            (double)GetDifficulty(chainActive.Tip()));\n-    obj.pushKV(\"mediantime\",            (int64_t)chainActive.Tip()->GetMedianTimePast());\n-    obj.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), chainActive.Tip()));\n+    obj.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+    obj.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+    obj.pushKV(\"mediantime\",            (int64_t)tip->GetMedianTimePast());\n+    obj.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n     obj.pushKV(\"initialblockdownload\",  IsInitialBlockDownload());\n-    obj.pushKV(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex());\n+    obj.pushKV(\"chainwork\",             tip->nChainWork.GetHex());\n     obj.pushKV(\"size_on_disk\",          CalculateCurrentUsage());\n     obj.pushKV(\"pruned\",                fPruneMode);\n     if (fPruneMode) {\n-        CBlockIndex* block = chainActive.Tip();\n+        const CBlockIndex* block = tip;\n         assert(block);\n         while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n             block = block->pprev;\n@@ -1277,7 +1275,6 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     }\n \n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    CBlockIndex* tip = chainActive.Tip();\n     UniValue softforks(UniValue::VARR);\n     UniValue bip9_softforks(UniValue::VOBJ);\n     softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));"
      },
      {
        "sha": "b61152985f2918b007908401589cc54e5cebac08",
        "filename": "src/test/blockchain_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/343b98cbcd52854ffffaca7ada72f5522117ac7f/src/test/blockchain_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/343b98cbcd52854ffffaca7ada72f5522117ac7f/src/test/blockchain_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockchain_tests.cpp?ref=343b98cbcd52854ffffaca7ada72f5522117ac7f",
        "patch": "@@ -68,11 +68,4 @@ BOOST_AUTO_TEST_CASE(get_difficulty_for_very_high_target)\n     TestDifficulty(0x12345678, 5913134931067755359633408.0);\n }\n \n-// Verify that difficulty is 1.0 for an empty chain.\n-BOOST_AUTO_TEST_CASE(get_difficulty_for_null_tip)\n-{\n-    double difficulty = GetDifficulty(nullptr);\n-    RejectDifficultyMismatch(difficulty, 1.0);\n-}\n-\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "b9f226b41f989f5c07fe57801701a39c14a6e173",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOWYyMjZiNDFmOTg5ZjVjMDdmZTU3ODAxNzAxYTM5YzE0YTZlMTcz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-11T22:23:19Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-09T17:02:24Z"
      },
      "message": "rpc: Remove cs_main lock from blockToJSON and blockHeaderToJSON",
      "tree": {
        "sha": "948a78b3718a6bbddeb367bff7ff7e1270544ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/948a78b3718a6bbddeb367bff7ff7e1270544ac9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9f226b41f989f5c07fe57801701a39c14a6e173",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9f226b41f989f5c07fe57801701a39c14a6e173",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b9f226b41f989f5c07fe57801701a39c14a6e173",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9f226b41f989f5c07fe57801701a39c14a6e173/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "343b98cbcd52854ffffaca7ada72f5522117ac7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343b98cbcd52854ffffaca7ada72f5522117ac7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/343b98cbcd52854ffffaca7ada72f5522117ac7f"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 27,
      "deletions": 28
    },
    "files": [
      {
        "sha": "42d9a26195caff9646d9a049273b5162c92d67f8",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9f226b41f989f5c07fe57801701a39c14a6e173/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9f226b41f989f5c07fe57801701a39c14a6e173/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=b9f226b41f989f5c07fe57801701a39c14a6e173",
        "patch": "@@ -144,10 +144,12 @@ static bool rest_headers(HTTPRequest* req,\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n \n+    const CBlockIndex* tip = nullptr;\n     std::vector<const CBlockIndex *> headers;\n     headers.reserve(count);\n     {\n         LOCK(cs_main);\n+        tip = chainActive.Tip();\n         const CBlockIndex* pindex = LookupBlockIndex(hash);\n         while (pindex != nullptr && chainActive.Contains(pindex)) {\n             headers.push_back(pindex);\n@@ -178,11 +180,8 @@ static bool rest_headers(HTTPRequest* req,\n     }\n     case RetFormat::JSON: {\n         UniValue jsonHeaders(UniValue::VARR);\n-        {\n-            LOCK(cs_main);\n-            for (const CBlockIndex *pindex : headers) {\n-                jsonHeaders.push_back(blockheaderToJSON(pindex));\n-            }\n+        for (const CBlockIndex *pindex : headers) {\n+            jsonHeaders.push_back(blockheaderToJSON(tip, pindex));\n         }\n         std::string strJSON = jsonHeaders.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n@@ -210,8 +209,10 @@ static bool rest_block(HTTPRequest* req,\n \n     CBlock block;\n     CBlockIndex* pblockindex = nullptr;\n+    CBlockIndex* tip = nullptr;\n     {\n         LOCK(cs_main);\n+        tip = chainActive.Tip();\n         pblockindex = LookupBlockIndex(hash);\n         if (!pblockindex) {\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n@@ -243,11 +244,7 @@ static bool rest_block(HTTPRequest* req,\n     }\n \n     case RetFormat::JSON: {\n-        UniValue objBlock;\n-        {\n-            LOCK(cs_main);\n-            objBlock = blockToJSON(block, pblockindex, showTxDetails);\n-        }\n+        UniValue objBlock = blockToJSON(block, tip, pblockindex, showTxDetails);\n         std::string strJSON = objBlock.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n         req->WriteReply(HTTP_OK, strJSON);"
      },
      {
        "sha": "75677a722b49475768b683591402e5bc9eaf6d93",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 16,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9f226b41f989f5c07fe57801701a39c14a6e173/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9f226b41f989f5c07fe57801701a39c14a6e173/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b9f226b41f989f5c07fe57801701a39c14a6e173",
        "patch": "@@ -78,15 +78,22 @@ double GetDifficulty(const CBlockIndex* blockindex)\n     return dDiff;\n }\n \n-UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n+static int ComputeNextBlockAndDepth(const CBlockIndex* tip, const CBlockIndex* blockindex, const CBlockIndex*& next)\n+{\n+    next = tip->GetAncestor(blockindex->nHeight + 1);\n+    if (next && next->pprev == blockindex) {\n+        return tip->nHeight - blockindex->nHeight + 1;\n+    }\n+    next = nullptr;\n+    return blockindex == tip ? 1 : -1;\n+}\n+\n+UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex)\n {\n-    AssertLockHeld(cs_main);\n     UniValue result(UniValue::VOBJ);\n     result.pushKV(\"hash\", blockindex->GetBlockHash().GetHex());\n-    int confirmations = -1;\n-    // Only report confirmations if the block is on the main chain\n-    if (chainActive.Contains(blockindex))\n-        confirmations = chainActive.Height() - blockindex->nHeight + 1;\n+    const CBlockIndex* pnext;\n+    int confirmations = ComputeNextBlockAndDepth(tip, blockindex, pnext);\n     result.pushKV(\"confirmations\", confirmations);\n     result.pushKV(\"height\", blockindex->nHeight);\n     result.pushKV(\"version\", blockindex->nVersion);\n@@ -102,21 +109,17 @@ UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n \n     if (blockindex->pprev)\n         result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n-    CBlockIndex *pnext = chainActive.Next(blockindex);\n     if (pnext)\n         result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n     return result;\n }\n \n-UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails)\n+UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails)\n {\n-    AssertLockHeld(cs_main);\n     UniValue result(UniValue::VOBJ);\n     result.pushKV(\"hash\", blockindex->GetBlockHash().GetHex());\n-    int confirmations = -1;\n-    // Only report confirmations if the block is on the main chain\n-    if (chainActive.Contains(blockindex))\n-        confirmations = chainActive.Height() - blockindex->nHeight + 1;\n+    const CBlockIndex* pnext;\n+    int confirmations = ComputeNextBlockAndDepth(tip, blockindex, pnext);\n     result.pushKV(\"confirmations\", confirmations);\n     result.pushKV(\"strippedsize\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS));\n     result.pushKV(\"size\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION));\n@@ -148,7 +151,6 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n \n     if (blockindex->pprev)\n         result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n-    CBlockIndex *pnext = chainActive.Next(blockindex);\n     if (pnext)\n         result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n     return result;\n@@ -744,7 +746,7 @@ static UniValue getblockheader(const JSONRPCRequest& request)\n         return strHex;\n     }\n \n-    return blockheaderToJSON(pblockindex);\n+    return blockheaderToJSON(chainActive.Tip(), pblockindex);\n }\n \n static CBlock GetBlockChecked(const CBlockIndex* pblockindex)\n@@ -845,7 +847,7 @@ static UniValue getblock(const JSONRPCRequest& request)\n         return strHex;\n     }\n \n-    return blockToJSON(block, pblockindex, verbosity >= 2);\n+    return blockToJSON(block, chainActive.Tip(), pblockindex, verbosity >= 2);\n }\n \n struct CCoinsStats"
      },
      {
        "sha": "529132d0336f40b971fb4a9a8caad03cfa5c4280",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9f226b41f989f5c07fe57801701a39c14a6e173/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9f226b41f989f5c07fe57801701a39c14a6e173/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=b9f226b41f989f5c07fe57801701a39c14a6e173",
        "patch": "@@ -27,7 +27,7 @@ double GetDifficulty(const CBlockIndex* blockindex);\n void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n \n /** Block description to JSON */\n-UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n+UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails = false);\n \n /** Mempool information to JSON */\n UniValue mempoolInfoToJSON();\n@@ -36,7 +36,7 @@ UniValue mempoolInfoToJSON();\n UniValue mempoolToJSON(bool fVerbose = false);\n \n /** Block header to JSON */\n-UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n+UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex);\n \n /** Used by getblockstats to get feerates at different percentiles by weight  */\n void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES], std::vector<std::pair<CAmount, int64_t>>& scores, int64_t total_weight);"
      }
    ]
  }
]