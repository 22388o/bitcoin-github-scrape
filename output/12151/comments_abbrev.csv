promag,2018-01-11T18:19:24Z,Best reviewed commit by commit,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-357015434,357015434,
promag,2018-01-11T22:52:44Z,"Fixed @TheBlueMatt and @jimpo comments, thanks.",https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-357088015,357088015,
promag,2018-02-26T16:25:37Z,"Rebased mainly due to recent change from `push_back(Pair())` to `pushKV()`.\n\nAlso reworded to replace prefix `[rpc]` to `rpc:` as per @laanwj suggestion.  ",https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-368559753,368559753,
MarcoFalke,2018-03-19T01:13:33Z,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-374074718,374074718,
promag,2018-03-19T13:53:05Z,"Rebased.\n\n@MarcoFalke like @TheBlueMatt said above:\n\n> in the context of #11913 it makes sense to not lock cs_main and then unlock, then re-lock it there.\n\nI'd say at least let's wait for that.",https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-374218882,374218882,
jnewbery,2018-04-03T21:56:38Z,needs rebase,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-378412453,378412453,
promag,2018-04-03T22:13:52Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-378416488,378416488,
MarcoFalke,2018-06-05T22:35:24Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-394882221,394882221,
promag,2018-06-10T20:34:48Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-396079909,396079909,
promag,2018-08-12T00:43:48Z,Now related to #13903.,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-412310709,412310709,
DrahtBot,2018-09-21T13:27:59Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-423530764,423530764,
MarcoFalke,2019-01-03T17:10:35Z,utACK b9f226b41f989f5c07fe57801701a39c14a6e173,https://github.com/bitcoin/bitcoin/pull/12151#issuecomment-451210485,451210485,
TheBlueMatt,2018-01-11T17:46:47Z,"Why? You can just do a GetAncestor for blockindex->nHeight here, no?",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161026738,161026738,src/rpc/blockchain.cpp
TheBlueMatt,2018-01-11T17:48:15Z,"No need to change these unless you're gonna actually kill the cs_main held for the whole time, I'd think, no (and little reason to, its not like its being held for an extended period)?",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161027116,161027116,src/rpc/blockchain.cpp
promag,2018-01-11T18:16:44Z,This way you get next of blockindex.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161034204,161034204,src/rpc/blockchain.cpp
promag,2018-01-11T18:18:13Z,This moves up tip variable declared below.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161034615,161034615,src/rpc/blockchain.cpp
TheBlueMatt,2018-01-11T18:18:28Z,"Ohoh, sorry, missed its use in blockheaderToJSON.",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161034671,161034671,src/rpc/blockchain.cpp
jimpo,2018-01-11T21:51:28Z,`tip` instead of `chainActive.Tip()`?,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161085651,161085651,src/rpc/blockchain.cpp
jimpo,2018-01-11T21:52:31Z,`tip` instead of `chainActive.Tip()`?,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161085870,161085870,src/rpc/blockchain.cpp
jimpo,2018-01-11T21:57:15Z,Should be `+1` I believe?,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161087140,161087140,src/rpc/blockchain.cpp
jimpo,2018-01-11T21:57:55Z,Should be `? 1 : -1`. Blocks that are the chain tip have 1 confirmation.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161087306,161087306,src/rpc/blockchain.cpp
promag,2018-01-11T22:41:25Z,"Wrong order, should be `tip, pblockindex`.",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161096849,161096849,src/rest.cpp
promag,2018-01-11T22:41:47Z,Same.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r161096922,161096922,src/rpc/blockchain.cpp
ryanofsky,2018-02-05T23:01:39Z,This confused me for a minute too. Maybe could rename function to something like `ComputeNextBlockAndDepth` to mention the `next` part.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r166140331,166140331,src/rpc/blockchain.cpp
promag,2018-02-05T23:10:16Z,"Can do, WDYT about returning `std::pair<int, const CBlockIndex*>`?",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r166142183,166142183,src/rpc/blockchain.cpp
promag,2018-02-05T23:11:53Z,I can add a comment there too explaning the `height + 1` and `->pprev == blockindex`.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r166142499,166142499,src/rpc/blockchain.cpp
promag,2018-02-26T16:23:43Z,Renamed to `ComputeNextBlockAndDepth` as per @ryanofsky suggestion. ,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r170648923,170648923,src/rpc/blockchain.cpp
dcousens,2018-03-19T02:49:00Z,Does return-value optimization not capture this?,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r175320702,175320702,src/rest.cpp
promag,2018-03-19T13:51:22Z,I think you are correct.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r175440391,175440391,src/rest.cpp
ryanofsky,2018-04-04T18:37:06Z,Indentation isn't consistent this line.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r179242303,179242303,src/rest.cpp
promag,2018-04-04T22:38:54Z,"Sorry, indentation fixed.",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r179304358,179304358,src/rest.cpp
jimpo,2018-05-17T23:25:23Z,"commit: rpc: Specify chain tip instead of chain in GetDifficulty\n\nI don't think this is really necessary. Would rather just inline `GetDifficulty(blockindex ? blockindex : chainActive.Tip())` at the few call sites if blockindex may be null.\n\nI don't actually see any instances in this file where `blockindex` might be `nullptr`.",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r189129075,189129075,src/rpc/blockchain.cpp
promag,2018-05-18T00:11:45Z,"Below there is the test\n```cpp\n// Verify that difficulty is 1.0 for a null chain tip.\nBOOST_AUTO_TEST_CASE(get_difficulty_for_null_tip)\n{\n    double difficulty = GetDifficulty(nullptr, nullptr);\n    RejectDifficultyMismatch(difficulty, 1.0);\n}\n```\nDo you agree changing to\n```cpp\n// Verify that difficulty is 1.0 for a null block index.\nBOOST_AUTO_TEST_CASE(get_difficulty_for",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r189135108,189135108,src/rpc/blockchain.cpp
jimpo,2018-05-18T00:17:40Z,"Yes, I am proposing changing the behavior so that if null is passed it, it returns 1. I think that makes the most sense in the context of this change because you want are removing the dependence of this function on `chainActive`. Given that you are updating every invocation, this seems like the right time to make the change I am proposing.",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r189135851,189135851,src/rpc/blockchain.cpp
promag,2018-05-18T00:41:45Z,Fixed in https://github.com/bitcoin/bitcoin/pull/12151/commits/92e68393e4e9ab1cdecef976c8500b2e058b9376,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r189138576,189138576,src/rpc/blockchain.cpp
fanquake,2018-07-08T13:03:12Z,"From #13602: Can you drop the ""to"" here.",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r200839844,200839844,src/rpc/blockchain.h
promag,2018-07-08T17:36:08Z,Sure!,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r200847655,200847655,src/rpc/blockchain.h
Empact,2018-08-11T08:34:59Z,"This call could fail the new assert:\nhttps://github.com/bitcoin/bitcoin/blob/d6faea4f917efdbd6cefe6e91a61c101e20db434/src/rpc/mining.cpp#L217",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r209420971,209420971,src/rpc/blockchain.cpp
MarcoFalke,2018-09-14T22:05:40Z,"In rpc code, assert should be replaced with throw JSONRPCError?",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r217853810,217853810,src/rpc/blockchain.cpp
promag,2019-01-03T17:05:30Z,I believe `chainActive.Tip()` is always non null.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r245067168,245067168,src/rpc/blockchain.cpp
promag,2019-01-03T17:06:51Z,"I don't think this is a usage error, should be a programatic error?",https://github.com/bitcoin/bitcoin/pull/12151#discussion_r245067656,245067656,src/rpc/blockchain.cpp
MarcoFalke,2019-01-03T17:12:37Z,I guess you could avoid the assert by passing in a const reference?,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r245069328,245069328,src/rpc/blockchain.cpp
promag,2019-01-03T17:18:35Z,Sure but out of scope here and I'm happy to submit that refactor in a separate PR.,https://github.com/bitcoin/bitcoin/pull/12151#discussion_r245071089,245071089,src/rpc/blockchain.cpp
