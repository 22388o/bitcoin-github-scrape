gmaxwell,2017-08-26T00:26:46Z,"> Without a6564cc, P2WPKH scripts where the pubkey is uncompressed are incorrectly\n\nsounds correct to change; but how would a P2WPKH redeem script for such a key end up in the wallet in the first place? (trying to gauge severity; if it's only accessible inside the code it's good to fix but not e.g. something we need to worry about end users hitting.)",https://github.com/bitcoin/bitcoin/pull/11116#issuecomment-325063107,325063107,
jimpo,2017-08-26T00:30:42Z,"@gmaxwell I haven't looked through the wallet code enough to know. I assume it would not happen, and it's just a bug in some internals that wouldn't be exercised, but I'm not 100% sure. I came across it through unit tests, not end-to-end testing of the wallet.",https://github.com/bitcoin/bitcoin/pull/11116#issuecomment-325063617,325063617,
gmaxwell,2017-08-26T00:31:16Z,Great okay! just making sure you weren't aware of any.,https://github.com/bitcoin/bitcoin/pull/11116#issuecomment-325063686,325063686,
sipa,2017-08-27T19:52:49Z,"@jimpo If a6564cc has any effect, I think it's a sign there is a more severe issue, namely that the CKeyID and the CKey in the CBasicKeyStore's map are not in sync with each other (as the CKey stores the compressedness too). I'd rather investigate that discrepancy first.\n\nEDIT: it seems it's just the test code that's wrong. You're calling AddKeyPubKey with a CKey and CPubKey that don't corresp",https://github.com/bitcoin/bitcoin/pull/11116#issuecomment-325220347,325220347,
jimpo,2017-08-28T16:41:58Z,Thanks for the review @sipa. I had forgotten that CKey tracks the compressedness. Updated the test and removed the change to CBasicKeyStore.,https://github.com/bitcoin/bitcoin/pull/11116#issuecomment-325406975,325406975,
gmaxwell,2017-09-08T18:44:55Z,utACK,https://github.com/bitcoin/bitcoin/pull/11116#issuecomment-328183935,328183935,
promag,2017-08-23T04:32:16Z,Remove.,https://github.com/bitcoin/bitcoin/pull/11116#discussion_r134655141,134655141,src/script/ismine.cpp
jonasschnelli,2017-08-23T10:51:15Z,This variable is unused.,https://github.com/bitcoin/bitcoin/pull/11116#discussion_r134718483,134718483,src/test/script_standard_tests.cpp
jimpo,2017-08-23T16:53:21Z,"Could you please explain why? Since `isValid` is a return parameter, I think it should get set to `false` from an initial value of `true` if the script is not invalid.",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r134808635,134808635,src/script/ismine.cpp
sipa,2017-08-27T19:57:05Z,"You're adding a compressed CKey (`keys[0]`) with an uncompressed CPubKey, which is incorrect use of the function. You should first change the CKey's compressedness.\n\nPerhaps this warrants a comment on AddKeyPubKey or even an assert. It should alleviate the need for a6564cca7d443789671778f769a24bbb5a4a0652 though.",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r135419689,135419689,src/test/script_standard_tests.cpp
jimpo,2017-08-27T20:28:11Z,"Thanks, will change.",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r135420496,135420496,src/test/script_standard_tests.cpp
promag,2017-09-08T18:18:13Z,"Ok, got it.",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r137856830,137856830,src/script/ismine.cpp
MarcoFalke,2017-09-20T10:11:57Z,"why? It is the task of the solver to set the size of the vector to 0. Otherwise you could as well remove the `BOOST_CHECK_EQUAL(solutions.size(), 0);`, no?",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r139928791,139928791,src/test/script_standard_tests.cpp
jimpo,2017-09-20T18:09:53Z,Good point.,https://github.com/bitcoin/bitcoin/pull/11116#discussion_r140048661,140048661,src/test/script_standard_tests.cpp
TheBlueMatt,2017-09-20T23:32:51Z,I believe this is practically unused.,https://github.com/bitcoin/bitcoin/pull/11116#discussion_r140118269,140118269,src/test/script_standard_tests.cpp
jimpo,2017-09-21T19:25:25Z,"Thanks, removed.",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r140336875,140336875,src/test/script_standard_tests.cpp
sipa,2017-09-23T22:11:57Z,"Posthumous review (and fixed in #11167): this does not construct a valid TX_WITNESS_V0_SCRIPTHASH but a TX_WITNESS_V0_KEYHASH (as the pushed size is 20, not 32)",https://github.com/bitcoin/bitcoin/pull/11116#discussion_r140642842,140642842,src/test/script_standard_tests.cpp
