[
  {
    "sha": "757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTdmMGQ2YzM2ZjJkZDA0ODAxZWYxYmI3YTI3M2RjOTk2Yzg4ZjE0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-10T19:29:33Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-10T19:29:33Z"
      },
      "message": "spentpertxout: keep spent information for each wallet's txout instead of per tx.",
      "tree": {
        "sha": "54821b1b2f8f3227b9e967f2160269f3641549d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54821b1b2f8f3227b9e967f2160269f3641549d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/757f0d6c36f2dd04801ef1bb7a273dc996c88f14/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b104df742d1acfcccb35e35c5427ef221296db73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b104df742d1acfcccb35e35c5427ef221296db73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b104df742d1acfcccb35e35c5427ef221296db73"
      }
    ],
    "stats": {
      "total": 147,
      "additions": 103,
      "deletions": 44
    },
    "files": [
      {
        "sha": "0c10207c0b4e040b5b3956206d8a4271b4e21ab4",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 35,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/757f0d6c36f2dd04801ef1bb7a273dc996c88f14/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/757f0d6c36f2dd04801ef1bb7a273dc996c88f14/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
        "patch": "@@ -136,11 +136,7 @@ bool AddToWallet(const CWalletTx& wtxIn)\n                 wtx.fFromMe = wtxIn.fFromMe;\n                 fUpdated = true;\n             }\n-            if (wtxIn.fSpent && wtxIn.fSpent != wtx.fSpent)\n-            {\n-                wtx.fSpent = wtxIn.fSpent;\n-                fUpdated = true;\n-            }\n+            fUpdated |= wtx.UpdateSpent(wtxIn.vfSpent);\n         }\n \n         //// debug print\n@@ -221,10 +217,10 @@ void WalletUpdateSpent(const COutPoint& prevout)\n         if (mi != mapWallet.end())\n         {\n             CWalletTx& wtx = (*mi).second;\n-            if (!wtx.fSpent && wtx.vout[prevout.n].IsMine())\n+            if (!wtx.vfSpent[prevout.n] && wtx.vout[prevout.n].IsMine())\n             {\n                 printf(\"WalletUpdateSpent found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n-                wtx.fSpent = true;\n+                wtx.vfSpent[prevout.n] = true;\n                 wtx.WriteToDisk();\n                 vWalletUpdated.push_back(prevout.hash);\n             }\n@@ -925,34 +921,33 @@ void ReacceptWalletTransactions()\n         foreach(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)\n         {\n             CWalletTx& wtx = item.second;\n-            if (wtx.fSpent && wtx.IsCoinBase())\n-                continue;\n+//            if (wtx.fSpent && wtx.IsCoinBase())\n+//                continue;\n \n             CTxIndex txindex;\n+            bool fUpdated;\n             if (txdb.ReadTxIndex(wtx.GetHash(), txindex))\n             {\n                 // Update fSpent if a tx got spent somewhere else by a copy of wallet.dat\n-                if (!wtx.fSpent)\n+                if (txindex.vSpent.size() != wtx.vout.size())\n                 {\n-                    if (txindex.vSpent.size() != wtx.vout.size())\n-                    {\n-                        printf(\"ERROR: ReacceptWalletTransactions() : txindex.vSpent.size() %d != wtx.vout.size() %d\\n\", txindex.vSpent.size(), wtx.vout.size());\n-                        continue;\n-                    }\n-                    for (int i = 0; i < txindex.vSpent.size(); i++)\n-                    {\n-                        if (!txindex.vSpent[i].IsNull() && wtx.vout[i].IsMine())\n-                        {\n-                            wtx.fSpent = true;\n-                            vMissingTx.push_back(txindex.vSpent[i]);\n-                        }\n-                    }\n-                    if (wtx.fSpent)\n+                    printf(\"ERROR: ReacceptWalletTransactions() : txindex.vSpent.size() %d != wtx.vout.size() %d\\n\", txindex.vSpent.size(), wtx.vout.size());\n+                    continue;\n+                }\n+                for (int i = 0; i < txindex.vSpent.size(); i++)\n+                {\n+                    if (!txindex.vSpent[i].IsNull() && wtx.vout[i].IsMine())\n                     {\n-                        printf(\"ReacceptWalletTransactions found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n-                        wtx.WriteToDisk();\n+                        wtx.vfSpent[i] = true;\n+                        fUpdated = true;\n+                        vMissingTx.push_back(txindex.vSpent[i]);\n                     }\n                 }\n+                if (fUpdated)\n+                {\n+                    printf(\"ReacceptWalletTransactions found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n+                    wtx.WriteToDisk();\n+                }\n             }\n             else\n             {\n@@ -3709,9 +3704,9 @@ int64 GetBalance()\n         for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             CWalletTx* pcoin = &(*it).second;\n-            if (!pcoin->IsFinal() || pcoin->fSpent || !pcoin->IsConfirmed())\n+            if (!pcoin->IsFinal() || !pcoin->IsConfirmed())\n                 continue;\n-            nTotal += pcoin->GetCredit();\n+            nTotal += pcoin->GetAvailableCredit();\n         }\n     }\n \n@@ -3740,14 +3735,14 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n \n        foreach(CWalletTx* pcoin, vCoins)\n        {\n-            if (!pcoin->IsFinal() || pcoin->fSpent || !pcoin->IsConfirmed())\n+            if (!pcoin->IsFinal() || !pcoin->IsConfirmed())\n                 continue;\n \n             int nDepth = pcoin->GetDepthInMainChain();\n             if (nDepth < (pcoin->IsFromMe() ? nConfMine : nConfTheirs))\n                 continue;\n \n-            int64 n = pcoin->GetCredit();\n+            int64 n = pcoin->GetAvailableCredit();\n             if (n <= 0)\n                 continue;\n             if (n < nTargetValue)\n@@ -3965,12 +3960,11 @@ bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             // Mark old coins as spent\n             set<CWalletTx*> setCoins;\n             foreach(const CTxIn& txin, wtxNew.vin)\n-                setCoins.insert(&mapWallet[txin.prevout.hash]);\n-            foreach(CWalletTx* pcoin, setCoins)\n             {\n-                pcoin->fSpent = true;\n-                pcoin->WriteToDisk();\n-                vWalletUpdated.push_back(pcoin->GetHash());\n+                CWalletTx &pcoin = mapWallet[txin.prevout.hash];\n+                pcoin.vfSpent[txin.prevout.n] = true;\n+                pcoin.WriteToDisk();\n+                vWalletUpdated.push_back(pcoin.GetHash());\n             }\n         }\n "
      },
      {
        "sha": "37663ff1aad3f99083391bfdc800568d09357399",
        "filename": "main.h",
        "status": "modified",
        "additions": 74,
        "deletions": 9,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/757f0d6c36f2dd04801ef1bb7a273dc996c88f14/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/757f0d6c36f2dd04801ef1bb7a273dc996c88f14/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
        "patch": "@@ -730,6 +730,7 @@ class CMerkleTx : public CTransaction\n         fMerkleVerified = false;\n     }\n \n+\n     IMPLEMENT_SERIALIZE\n     (\n         nSerSize += SerReadWrite(s, *(CTransaction*)this, nType, nVersion, ser_action);\n@@ -766,8 +767,8 @@ class CWalletTx : public CMerkleTx\n     unsigned int fTimeReceivedIsTxTime;\n     unsigned int nTimeReceived;  // time received by this node\n     char fFromMe;\n-    char fSpent;\n     string strFromAccount;\n+    vector<char> vfSpent;\n \n     // memory only\n     mutable char fDebitCached;\n@@ -791,11 +792,13 @@ class CWalletTx : public CMerkleTx\n     CWalletTx(const CMerkleTx& txIn) : CMerkleTx(txIn)\n     {\n         Init();\n+        vfSpent.assign(vout.size(), false);\n     }\n \n     CWalletTx(const CTransaction& txIn) : CMerkleTx(txIn)\n     {\n         Init();\n+        vfSpent.assign(vout.size(), false);\n     }\n \n     void Init()\n@@ -806,8 +809,8 @@ class CWalletTx : public CMerkleTx\n         fTimeReceivedIsTxTime = false;\n         nTimeReceived = 0;\n         fFromMe = false;\n-        fSpent = false;\n         strFromAccount.clear();\n+        vfSpent.clear();\n         fDebitCached = false;\n         fCreditCached = false;\n         fChangeCached = false;\n@@ -824,22 +827,67 @@ class CWalletTx : public CMerkleTx\n         CWalletTx* pthis = const_cast<CWalletTx*>(this);\n         if (fRead)\n             pthis->Init();\n-        nSerSize += SerReadWrite(s, *(CMerkleTx*)this, nType, nVersion, ser_action);\n-        READWRITE(vtxPrev);\n+        char fSpent = false;\n \n-        pthis->mapValue[\"fromaccount\"] = pthis->strFromAccount;\n-        READWRITE(mapValue);\n-        pthis->strFromAccount = pthis->mapValue[\"fromaccount\"];\n-        pthis->mapValue.erase(\"fromaccount\");\n-        pthis->mapValue.erase(\"version\");\n+        if (!fRead)\n+        {\n+            pthis->mapValue[\"fromaccount\"] = pthis->strFromAccount;\n \n+            string str;\n+            foreach(char f, vfSpent)\n+            {\n+                str += (f ? '1' : '0');\n+                if (f)\n+                    fSpent = true;\n+            }\n+            pthis->mapValue[\"spent\"] = str;\n+        }\n+\n+        nSerSize += SerReadWrite(s, *(CMerkleTx*)this, nType, nVersion,ser_action);\n+        READWRITE(vtxPrev);\n+        READWRITE(mapValue);\n         READWRITE(vOrderForm);\n         READWRITE(fTimeReceivedIsTxTime);\n         READWRITE(nTimeReceived);\n         READWRITE(fFromMe);\n         READWRITE(fSpent);\n+\n+        if (fRead)\n+        {\n+            pthis->strFromAccount = pthis->mapValue[\"fromaccount\"];\n+\n+            if (mapValue.count(\"spent\"))\n+                foreach(char c, pthis->mapValue[\"spent\"])\n+                    pthis->vfSpent.push_back(c != '0');\n+            else\n+                pthis->vfSpent.assign(vout.size(), fSpent);\n+        }\n+\n+        pthis->mapValue.erase(\"fromaccount\");\n+        pthis->mapValue.erase(\"version\");\n+        pthis->mapValue.erase(\"spent\");\n     )\n \n+    // marks certain txout's as spent\n+    // returns true if any update took place\n+    bool UpdateSpent(vector<char> vfNewSpent)\n+    {\n+        bool fReturn;\n+        for (int i=0; i < vfNewSpent.size(); i++)\n+        {\n+            if (i == vfSpent.size())\n+                break;\n+\n+            if (vfNewSpent[i] && !vfSpent[i])\n+            {\n+                vfSpent[i] = true;\n+                fReturn = true;\n+            }\n+        }\n+        return fReturn;\n+    }\n+\n+\n     int64 GetDebit() const\n     {\n         if (vin.empty())\n@@ -865,6 +913,23 @@ class CWalletTx : public CMerkleTx\n         return nCreditCached;\n     }\n \n+    int64 GetAvailableCredit() const\n+    {\n+        int64 nCredit = 0;\n+        for (int i = 0; i < vout.size(); i++)\n+        {\n+            if (!vfSpent[i])\n+            {\n+                const CTxOut &txout = vout[i];\n+                nCredit += txout.GetCredit();\n+                if (!MoneyRange(nCredit))\n+                    throw runtime_error(\"CTransaction::GetAvailableCredit() : value out of range\");\n+            }\n+        }\n+        return nCredit;\n+    }\n+\n+\n     int64 GetChange() const\n     {\n         if (fChangeCached)"
      }
    ]
  },
  {
    "sha": "aa7607186bb5720dae71badf8f44830615d659ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTc2MDcxODZiYjU3MjBkYWU3MWJhZGY4ZjQ0ODMwNjE1ZDY1OWVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-10T21:56:14Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-10T21:56:14Z"
      },
      "message": "when creating transactions, select sources per txout instead of per tx",
      "tree": {
        "sha": "f1e92fe2dda998380c77abdc1eed29b7f7042047",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f1e92fe2dda998380c77abdc1eed29b7f7042047"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa7607186bb5720dae71badf8f44830615d659ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa7607186bb5720dae71badf8f44830615d659ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa7607186bb5720dae71badf8f44830615d659ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa7607186bb5720dae71badf8f44830615d659ec/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/757f0d6c36f2dd04801ef1bb7a273dc996c88f14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/757f0d6c36f2dd04801ef1bb7a273dc996c88f14"
      }
    ],
    "stats": {
      "total": 98,
      "additions": 55,
      "deletions": 43
    },
    "files": [
      {
        "sha": "d99a9788c488d81595f1acf6dcd271fd757af87d",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 43,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa7607186bb5720dae71badf8f44830615d659ec/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa7607186bb5720dae71badf8f44830615d659ec/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=aa7607186bb5720dae71badf8f44830615d659ec",
        "patch": "@@ -3715,14 +3715,16 @@ int64 GetBalance()\n }\n \n \n-bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<CWalletTx*>& setCoinsRet)\n+bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<pair<CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet)\n {\n     setCoinsRet.clear();\n+    nValueRet = 0;\n \n     // List of values less than target\n-    int64 nLowestLarger = INT64_MAX;\n-    CWalletTx* pcoinLowestLarger = NULL;\n-    vector<pair<int64, CWalletTx*> > vValue;\n+    pair<int64, pair<CWalletTx*,unsigned int> > coinLowestLarger;\n+    coinLowestLarger.first = INT64_MAX;\n+    coinLowestLarger.second.first = NULL;\n+    vector<pair<int64, pair<CWalletTx*,unsigned int> > > vValue;\n     int64 nTotalLower = 0;\n \n     CRITICAL_BLOCK(cs_mapWallet)\n@@ -3742,32 +3744,43 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n             if (nDepth < (pcoin->IsFromMe() ? nConfMine : nConfTheirs))\n                 continue;\n \n-            int64 n = pcoin->GetAvailableCredit();\n-            if (n <= 0)\n-                continue;\n-            if (n < nTargetValue)\n-            {\n-                vValue.push_back(make_pair(n, pcoin));\n-                nTotalLower += n;\n-            }\n-            else if (n == nTargetValue)\n+            for (int i = 0; i < pcoin->vout.size(); i++)\n             {\n-                setCoinsRet.insert(pcoin);\n-                return true;\n-            }\n-            else if (n < nLowestLarger)\n-            {\n-                nLowestLarger = n;\n-                pcoinLowestLarger = pcoin;\n+                if (pcoin->vfSpent[i] || !pcoin->vout[i].IsMine())\n+                    continue;\n+\n+                int64 n = pcoin->vout[i].nValue;\n+\n+                if (n <= 0)\n+                    continue;\n+\n+                pair<int64,pair<CWalletTx*,unsigned int> > coin = make_pair(n,make_pair(pcoin,i));\n+\n+                if (n < nTargetValue)\n+                {\n+                    vValue.push_back(coin);\n+                    nTotalLower += n;\n+                }\n+                else if (n == nTargetValue)\n+                {\n+                    setCoinsRet.insert(coin.second);\n+                    nValueRet += coin.first;\n+                    return true;\n+                }\n+                else if (n < coinLowestLarger.first)\n+                {\n+                    coinLowestLarger = coin;\n+                }\n             }\n         }\n     }\n \n     if (nTotalLower < nTargetValue)\n     {\n-        if (pcoinLowestLarger == NULL)\n+        if (coinLowestLarger.second.first == NULL)\n             return false;\n-        setCoinsRet.insert(pcoinLowestLarger);\n+        setCoinsRet.insert(coinLowestLarger.second);\n+        nValueRet += coinLowestLarger.first;\n         return true;\n     }\n \n@@ -3807,13 +3820,18 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n     }\n \n     // If the next larger is still closer, return it\n-    if (pcoinLowestLarger && nLowestLarger - nTargetValue <= nBest - nTargetValue)\n-        setCoinsRet.insert(pcoinLowestLarger);\n-    else\n+    if (coinLowestLarger.second.first && coinLowestLarger.first - nTargetValue <= nBest - nTargetValue)\n     {\n+        setCoinsRet.insert(coinLowestLarger.second);\n+        nValueRet += coinLowestLarger.first;\n+    }\n+    else {\n         for (int i = 0; i < vValue.size(); i++)\n             if (vfBest[i])\n+            {\n                 setCoinsRet.insert(vValue[i].second);\n+                nValueRet += vValue[i].first;\n+            }\n \n         //// debug print\n         printf(\"SelectCoins() best subset: \");\n@@ -3826,11 +3844,11 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n     return true;\n }\n \n-bool SelectCoins(int64 nTargetValue, set<CWalletTx*>& setCoinsRet)\n+bool SelectCoins(int64 nTargetValue, set<pair<CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet)\n {\n-    return (SelectCoinsMinConf(nTargetValue, 1, 6, setCoinsRet) ||\n-            SelectCoinsMinConf(nTargetValue, 1, 1, setCoinsRet) ||\n-            SelectCoinsMinConf(nTargetValue, 0, 1, setCoinsRet));\n+    return (SelectCoinsMinConf(nTargetValue, 1, 6, setCoinsRet, nValueRet) ||\n+            SelectCoinsMinConf(nTargetValue, 1, 1, setCoinsRet, nValueRet) ||\n+            SelectCoinsMinConf(nTargetValue, 0, 1, setCoinsRet, nValueRet));\n }\n \n \n@@ -3856,12 +3874,10 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 int64 nTotalValue = nValue + nFeeRet;\n \n                 // Choose coins to use\n-                set<CWalletTx*> setCoins;\n-                if (!SelectCoins(nTotalValue, setCoins))\n-                    return false;\n+                set<pair<CWalletTx*,unsigned int> > setCoins;\n                 int64 nValueIn = 0;\n-                foreach(CWalletTx* pcoin, setCoins)\n-                    nValueIn += pcoin->GetCredit();\n+                if (!SelectCoins(nTotalValue, setCoins, nValueIn))\n+                    return false;\n \n                 // Fill a vout to the payee\n                 bool fChangeFirst = GetRand(2);\n@@ -3899,18 +3915,14 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                     wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n \n                 // Fill vin\n-                foreach(CWalletTx* pcoin, setCoins)\n-                    for (int nOut = 0; nOut < pcoin->vout.size(); nOut++)\n-                        if (pcoin->vout[nOut].IsMine())\n-                            wtxNew.vin.push_back(CTxIn(pcoin->GetHash(), nOut));\n+                foreach(const PAIRTYPE(CWalletTx*,unsigned int)& coin, setCoins)\n+                    wtxNew.vin.push_back(CTxIn(coin.first->GetHash(),coin.second));\n \n                 // Sign\n                 int nIn = 0;\n-                foreach(CWalletTx* pcoin, setCoins)\n-                    for (int nOut = 0; nOut < pcoin->vout.size(); nOut++)\n-                        if (pcoin->vout[nOut].IsMine())\n-                            if (!SignSignature(*pcoin, wtxNew, nIn++))\n-                                return false;\n+                foreach(const PAIRTYPE(CWalletTx*,unsigned int)& coin, setCoins)\n+                    if (!SignSignature(*coin.first, wtxNew, nIn++))\n+                        return false;\n \n                 // Limit size\n                 unsigned int nBytes = ::GetSerializeSize(*(CTransaction*)&wtxNew, SER_NETWORK);"
      }
    ]
  },
  {
    "sha": "00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMGUwODM2MDI3YzkxOWQxMGJiOWQ0MGQwMDFkNWY2YTk4ZDNjMWU4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-11T09:31:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-11T09:32:25Z"
      },
      "message": "bugfix: do not require vfSpent to have the same size as vout",
      "tree": {
        "sha": "788a37e57b970e30cd0942aa80beb1be5171b639",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/788a37e57b970e30cd0942aa80beb1be5171b639"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00e0836027c919d10bb9d40d001d5f6a98d3c1e8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aa7607186bb5720dae71badf8f44830615d659ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa7607186bb5720dae71badf8f44830615d659ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aa7607186bb5720dae71badf8f44830615d659ec"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 25,
      "deletions": 10
    },
    "files": [
      {
        "sha": "f773fabaea10194269cd77ee415bf0bb1d205713",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00e0836027c919d10bb9d40d001d5f6a98d3c1e8/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00e0836027c919d10bb9d40d001d5f6a98d3c1e8/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
        "patch": "@@ -217,10 +217,10 @@ void WalletUpdateSpent(const COutPoint& prevout)\n         if (mi != mapWallet.end())\n         {\n             CWalletTx& wtx = (*mi).second;\n-            if (!wtx.vfSpent[prevout.n] && wtx.vout[prevout.n].IsMine())\n+            if (!wtx.IsSpent(prevout.n) && wtx.vout[prevout.n].IsMine())\n             {\n                 printf(\"WalletUpdateSpent found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n-                wtx.vfSpent[prevout.n] = true;\n+                wtx.MarkSpent(prevout.n);\n                 wtx.WriteToDisk();\n                 vWalletUpdated.push_back(prevout.hash);\n             }\n@@ -938,7 +938,7 @@ void ReacceptWalletTransactions()\n                 {\n                     if (!txindex.vSpent[i].IsNull() && wtx.vout[i].IsMine())\n                     {\n-                        wtx.vfSpent[i] = true;\n+                        wtx.MarkSpent(i);\n                         fUpdated = true;\n                         vMissingTx.push_back(txindex.vSpent[i]);\n                     }\n@@ -3746,7 +3746,7 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n \n             for (int i = 0; i < pcoin->vout.size(); i++)\n             {\n-                if (pcoin->vfSpent[i] || !pcoin->vout[i].IsMine())\n+                if (pcoin->IsSpent(i) || !pcoin->vout[i].IsMine())\n                     continue;\n \n                 int64 n = pcoin->vout[i].nValue;\n@@ -3974,7 +3974,7 @@ bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             foreach(const CTxIn& txin, wtxNew.vin)\n             {\n                 CWalletTx &pcoin = mapWallet[txin.prevout.hash];\n-                pcoin.vfSpent[txin.prevout.n] = true;\n+                pcoin.MarkSpent(txin.prevout.n);\n                 pcoin.WriteToDisk();\n                 vWalletUpdated.push_back(pcoin.GetHash());\n             }"
      },
      {
        "sha": "4900d34d152c1d06b92965e51eac6de06a3fa6aa",
        "filename": "main.h",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00e0836027c919d10bb9d40d001d5f6a98d3c1e8/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00e0836027c919d10bb9d40d001d5f6a98d3c1e8/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
        "patch": "@@ -792,13 +792,11 @@ class CWalletTx : public CMerkleTx\n     CWalletTx(const CMerkleTx& txIn) : CMerkleTx(txIn)\n     {\n         Init();\n-        vfSpent.assign(vout.size(), false);\n     }\n \n     CWalletTx(const CTransaction& txIn) : CMerkleTx(txIn)\n     {\n         Init();\n-        vfSpent.assign(vout.size(), false);\n     }\n \n     void Init()\n@@ -870,7 +868,7 @@ class CWalletTx : public CMerkleTx\n \n     // marks certain txout's as spent\n     // returns true if any update took place\n-    bool UpdateSpent(vector<char> vfNewSpent)\n+    bool UpdateSpent(const vector<char>& vfNewSpent)\n     {\n         bool fReturn;\n         for (int i=0; i < vfNewSpent.size(); i++)\n@@ -888,6 +886,23 @@ class CWalletTx : public CMerkleTx\n     }\n \n \n+    void MarkSpent(unsigned int nOut)\n+    {\n+        if (nOut >= vout.size())\n+            throw runtime_error(\"CWalletTx::MarkSpent() : nOut out of range\");\n+        vfSpent.resize(vout.size());\n+        vfSpent[nOut] = true;\n+    }\n+\n+    bool IsSpent(unsigned int nOut)\n+    {\n+        if (nOut >= vout.size())\n+            throw runtime_error(\"CWalletTx::IsSpent() : nOut out of range\");\n+        if (nOut >= vfSpent.size())\n+            return false;\n+        return (!!vfSpent[nOut]);\n+    }\n+\n     int64 GetDebit() const\n     {\n         if (vin.empty())\n@@ -918,12 +933,12 @@ class CWalletTx : public CMerkleTx\n         int64 nCredit = 0;\n         for (int i = 0; i < vout.size(); i++)\n         {\n-            if (!vfSpent[i])\n+            if (!IsSpent(i))\n             {\n                 const CTxOut &txout = vout[i];\n                 nCredit += txout.GetCredit();\n                 if (!MoneyRange(nCredit))\n-                    throw runtime_error(\"CTransaction::GetAvailableCredit() : value out of range\");\n+                    throw runtime_error(\"CWalletTx::GetAvailableCredit() : value out of range\");\n             }\n         }\n         return nCredit;"
      }
    ]
  },
  {
    "sha": "8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2YwZDRlZDE3NGI2OTIxZmJmNmFlYzdmY2YwZGZkYWJjMDU1YjEw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-11T15:04:29Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-11T15:04:29Z"
      },
      "message": "bugfix",
      "tree": {
        "sha": "4563f6d5694527cf46c4f203fbecea2a25b19f71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4563f6d5694527cf46c4f203fbecea2a25b19f71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00e0836027c919d10bb9d40d001d5f6a98d3c1e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00e0836027c919d10bb9d40d001d5f6a98d3c1e8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "705438fc56fbb1b9d7daf30542d2e1291cf264a3",
        "filename": "main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
        "patch": "@@ -894,7 +894,7 @@ class CWalletTx : public CMerkleTx\n         vfSpent[nOut] = true;\n     }\n \n-    bool IsSpent(unsigned int nOut)\n+    bool IsSpent(unsigned int nOut) const\n     {\n         if (nOut >= vout.size())\n             throw runtime_error(\"CWalletTx::IsSpent() : nOut out of range\");"
      }
    ]
  },
  {
    "sha": "d2168d5dc87150516577fe7665db3954c1c59938",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjE2OGQ1ZGM4NzE1MDUxNjU3N2ZlNzY2NWRiMzk1NGMxYzU5OTM4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T01:04:51Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T01:04:51Z"
      },
      "message": "bugfix: do not count coinbases too early",
      "tree": {
        "sha": "69f92c1714e4168e43dfc468ff0461c9bcd666b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69f92c1714e4168e43dfc468ff0461c9bcd666b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2168d5dc87150516577fe7665db3954c1c59938",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2168d5dc87150516577fe7665db3954c1c59938",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2168d5dc87150516577fe7665db3954c1c59938",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2168d5dc87150516577fe7665db3954c1c59938/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cf0d4ed174b6921fbf6aec7fcf0dfdabc055b10"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ea18e66a409070ef00e218d6eb145676b813d5bf",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2168d5dc87150516577fe7665db3954c1c59938/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2168d5dc87150516577fe7665db3954c1c59938/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=d2168d5dc87150516577fe7665db3954c1c59938",
        "patch": "@@ -921,8 +921,8 @@ void ReacceptWalletTransactions()\n         foreach(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)\n         {\n             CWalletTx& wtx = item.second;\n-//            if (wtx.fSpent && wtx.IsCoinBase())\n-//                continue;\n+            if (wtx.IsCoinBase() && wtx.IsSpent(0))\n+                continue;\n \n             CTxIndex txindex;\n             bool fUpdated;"
      },
      {
        "sha": "a0cfb49080b14106234a961b55cdfc9f67b56ee4",
        "filename": "main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2168d5dc87150516577fe7665db3954c1c59938/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2168d5dc87150516577fe7665db3954c1c59938/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=d2168d5dc87150516577fe7665db3954c1c59938",
        "patch": "@@ -930,6 +930,10 @@ class CWalletTx : public CMerkleTx\n \n     int64 GetAvailableCredit() const\n     {\n+        // Must wait until coinbase is safely deep enough in the chain before valuing it\n+        if (IsCoinBase() && GetBlocksToMaturity() > 0)\n+            return 0;\n+\n         int64 nCredit = 0;\n         for (int i = 0; i < vout.size(); i++)\n         {"
      }
    ]
  },
  {
    "sha": "5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTJmOTE4MmZjMjhlZTI5ODNjODRlZjNmMWJjMzg3NDc0ZjkzYzVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T01:11:50Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T01:11:50Z"
      },
      "message": "prospected available credit",
      "tree": {
        "sha": "706c2e5ee4a817210be659fd54cd2131cff80dfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/706c2e5ee4a817210be659fd54cd2131cff80dfb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2168d5dc87150516577fe7665db3954c1c59938",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2168d5dc87150516577fe7665db3954c1c59938",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2168d5dc87150516577fe7665db3954c1c59938"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6fc76e005f21e5b5d7b1df610c22a48053d970a2",
        "filename": "main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
        "patch": "@@ -928,10 +928,10 @@ class CWalletTx : public CMerkleTx\n         return nCreditCached;\n     }\n \n-    int64 GetAvailableCredit() const\n+    int64 GetAvailableCredit(bool fProspected=false) const\n     {\n         // Must wait until coinbase is safely deep enough in the chain before valuing it\n-        if (IsCoinBase() && GetBlocksToMaturity() > 0)\n+        if (!fProspected && IsCoinBase() && GetBlocksToMaturity() > 0)\n             return 0;\n \n         int64 nCredit = 0;"
      }
    ]
  },
  {
    "sha": "a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWY4ZjFmNGNkMWMxZjFkZWY2ZDBhNTlkMzBiYjQ2NTRlYjkxYzE2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T14:47:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T14:47:53Z"
      },
      "message": "cache for GetAvailableCredit, and dirtying cache when rescanning",
      "tree": {
        "sha": "c9f228cccab2eca016b6615c6cd76bf03295eea8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9f228cccab2eca016b6615c6cd76bf03295eea8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e2f9182fc28ee2983c84ef3f1bc387474f93c5c"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b64635e98ba3efeaf3bad2c2f7786ffffb75dafa",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
        "patch": "@@ -892,13 +892,15 @@ int ScanForWalletTransactions(CBlockIndex* pindexStart)\n                 AddToWalletIfMine(tx, &block);\n                 if (mapWallet.count(hash))\n                 {\n+                    tx.MarkDirty();\n                     ++ret;\n                     printf(\"Added missing RECEIVE %s\\n\", hash.ToString().c_str());\n                     continue;\n                 }\n                 AddToWalletIfFromMe(tx, &block);\n                 if (mapWallet.count(hash))\n                 {\n+                    tx.MarkDirty();\n                     ++ret;\n                     printf(\"Added missing SEND %s\\n\", hash.ToString().c_str());\n                     continue;"
      },
      {
        "sha": "af5a49c8e2bd3a57350d4f4292af7531b7fa05f6",
        "filename": "main.h",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
        "patch": "@@ -773,9 +773,11 @@ class CWalletTx : public CMerkleTx\n     // memory only\n     mutable char fDebitCached;\n     mutable char fCreditCached;\n+    mutable char fAvailableCreditCached;\n     mutable char fChangeCached;\n     mutable int64 nDebitCached;\n     mutable int64 nCreditCached;\n+    mutable int64 nAvailableCreditCached;\n     mutable int64 nChangeCached;\n \n     // memory only UI hints\n@@ -885,6 +887,13 @@ class CWalletTx : public CMerkleTx\n         return fReturn;\n     }\n \n+    void MarkDirty()\n+    {\n+        fCreditCached = false;\n+        fAvailableCreditCached = false;\n+        fDebitCached = false;\n+        fChangeCached = false;\n+    }\n \n     void MarkSpent(unsigned int nOut)\n     {\n@@ -928,12 +937,15 @@ class CWalletTx : public CMerkleTx\n         return nCreditCached;\n     }\n \n-    int64 GetAvailableCredit(bool fProspected=false) const\n+    int64 GetAvailableCredit(bool fUseCache=true) const\n     {\n         // Must wait until coinbase is safely deep enough in the chain before valuing it\n-        if (!fProspected && IsCoinBase() && GetBlocksToMaturity() > 0)\n+        if (IsCoinBase() && GetBlocksToMaturity() > 0)\n             return 0;\n \n+        if (fUseCache && fAvailableCreditCached)\n+            return nAvailableCreditCached;\n+\n         int64 nCredit = 0;\n         for (int i = 0; i < vout.size(); i++)\n         {\n@@ -945,6 +957,9 @@ class CWalletTx : public CMerkleTx\n                     throw runtime_error(\"CWalletTx::GetAvailableCredit() : value out of range\");\n             }\n         }\n+\n+        nAvailableCreditCached = nCredit;\n+        fAvailableCreditCached = true;\n         return nCredit;\n     }\n "
      }
    ]
  },
  {
    "sha": "d1fe7b65a1232c68867ff921879f7563d12ca87a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWZlN2I2NWExMjMyYzY4ODY3ZmY5MjE4NzlmNzU2M2QxMmNhODdh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T14:55:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T14:55:39Z"
      },
      "message": "bugfix: dirtying on the wrong place",
      "tree": {
        "sha": "3ca01b8d499770b0ddc8b0fe874409f3d2967124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ca01b8d499770b0ddc8b0fe874409f3d2967124"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1fe7b65a1232c68867ff921879f7563d12ca87a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1fe7b65a1232c68867ff921879f7563d12ca87a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1fe7b65a1232c68867ff921879f7563d12ca87a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1fe7b65a1232c68867ff921879f7563d12ca87a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9f8f1f4cd1c1f1def6d0a59d30bb4654eb91c16"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9b789cb47ae01441860aa289abb675ce48b00581",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1fe7b65a1232c68867ff921879f7563d12ca87a/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1fe7b65a1232c68867ff921879f7563d12ca87a/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=d1fe7b65a1232c68867ff921879f7563d12ca87a",
        "patch": "@@ -892,15 +892,13 @@ int ScanForWalletTransactions(CBlockIndex* pindexStart)\n                 AddToWalletIfMine(tx, &block);\n                 if (mapWallet.count(hash))\n                 {\n-                    tx.MarkDirty();\n                     ++ret;\n                     printf(\"Added missing RECEIVE %s\\n\", hash.ToString().c_str());\n                     continue;\n                 }\n                 AddToWalletIfFromMe(tx, &block);\n                 if (mapWallet.count(hash))\n                 {\n-                    tx.MarkDirty();\n                     ++ret;\n                     printf(\"Added missing SEND %s\\n\", hash.ToString().c_str());\n                     continue;\n@@ -948,6 +946,7 @@ void ReacceptWalletTransactions()\n                 if (fUpdated)\n                 {\n                     printf(\"ReacceptWalletTransactions found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n+                    wtx.MarkDirty();\n                     wtx.WriteToDisk();\n                 }\n             }"
      }
    ]
  },
  {
    "sha": "acee1dc796f4a12399249a8e42e3151579b8fd9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2VlMWRjNzk2ZjRhMTIzOTkyNDlhOGU0MmUzMTUxNTc5YjhmZDlk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T15:41:00Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T15:41:00Z"
      },
      "message": "nicer description for mixed transactions",
      "tree": {
        "sha": "dbf568f1745b2087ea55b98ba7b044d811067d5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbf568f1745b2087ea55b98ba7b044d811067d5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/acee1dc796f4a12399249a8e42e3151579b8fd9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acee1dc796f4a12399249a8e42e3151579b8fd9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/acee1dc796f4a12399249a8e42e3151579b8fd9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acee1dc796f4a12399249a8e42e3151579b8fd9d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1fe7b65a1232c68867ff921879f7563d12ca87a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1fe7b65a1232c68867ff921879f7563d12ca87a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1fe7b65a1232c68867ff921879f7563d12ca87a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4a8d19aee6b2301371ae96a612020634e8b9b6d8",
        "filename": "ui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/acee1dc796f4a12399249a8e42e3151579b8fd9d/ui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/acee1dc796f4a12399249a8e42e3151579b8fd9d/ui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ui.cpp?ref=acee1dc796f4a12399249a8e42e3151579b8fd9d",
        "patch": "@@ -784,7 +784,7 @@ bool CMainFrame::InsertTransaction(const CWalletTx& wtx, bool fNew, int nIndex)\n             InsertLine(fNew, nIndex, hash, strSort, colour,\n                        strStatus,\n                        nTime ? DateTimeStr(nTime) : \"\",\n-                       \"\",\n+                       \"Mixed transaction\",\n                        FormatMoney(nNet, true),\n                        \"\");\n         }"
      }
    ]
  },
  {
    "sha": "3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTZlY2UyYWJlM2E0ZDU0NzhlOWJiZjc3ZjdmZmQ2NDQ4ZDBjNDA0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T16:07:32Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T16:07:32Z"
      },
      "message": "bugfix: mark availablecredit cache dirty when spening",
      "tree": {
        "sha": "2e488ff5749f9eea22d5341cd66f907d050e5931",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e488ff5749f9eea22d5341cd66f907d050e5931"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acee1dc796f4a12399249a8e42e3151579b8fd9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acee1dc796f4a12399249a8e42e3151579b8fd9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/acee1dc796f4a12399249a8e42e3151579b8fd9d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3d5a885a07097f9a0bf2e135c5f7cdfa8b5a43b2",
        "filename": "main.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
        "patch": "@@ -882,6 +882,7 @@ class CWalletTx : public CMerkleTx\n             {\n                 vfSpent[i] = true;\n                 fReturn = true;\n+                fAvailableCreditCached = false;\n             }\n         }\n         return fReturn;\n@@ -900,7 +901,11 @@ class CWalletTx : public CMerkleTx\n         if (nOut >= vout.size())\n             throw runtime_error(\"CWalletTx::MarkSpent() : nOut out of range\");\n         vfSpent.resize(vout.size());\n-        vfSpent[nOut] = true;\n+        if (!vfSpent[nOut])\n+        {\n+            vfSpent[nOut] = true;\n+            fAvailableCreditCached = false;\n+        }\n     }\n \n     bool IsSpent(unsigned int nOut) const"
      }
    ]
  },
  {
    "sha": "34f9810da4bf9954feeb13dc2026fefa3df145a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGY5ODEwZGE0YmY5OTU0ZmVlYjEzZGMyMDI2ZmVmYTNkZjE0NWE3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T16:28:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-12T16:28:48Z"
      },
      "message": "bugfix: do not select coinbases before they mature",
      "tree": {
        "sha": "c78b06633912891d7c00e5a64c2737df3ab77a84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c78b06633912891d7c00e5a64c2737df3ab77a84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f9810da4bf9954feeb13dc2026fefa3df145a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f9810da4bf9954feeb13dc2026fefa3df145a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34f9810da4bf9954feeb13dc2026fefa3df145a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f9810da4bf9954feeb13dc2026fefa3df145a7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a6ece2abe3a4d5478e9bbf77f7ffd6448d0c404"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "be9e8415cedca71e4d82d4b301541737d9f5b0fd",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34f9810da4bf9954feeb13dc2026fefa3df145a7/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34f9810da4bf9954feeb13dc2026fefa3df145a7/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=34f9810da4bf9954feeb13dc2026fefa3df145a7",
        "patch": "@@ -3750,6 +3750,9 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n                 if (pcoin->IsSpent(i) || !pcoin->vout[i].IsMine())\n                     continue;\n \n+                if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n+                    continue;\n+\n                 int64 n = pcoin->vout[i].nValue;\n \n                 if (n <= 0)"
      }
    ]
  },
  {
    "sha": "307c9317ed4a710dad9b7adb4b5515129a409e6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDdjOTMxN2VkNGE3MTBkYWQ5YjdhZGI0YjU1MTUxMjlhNDA5ZTZi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-13T00:58:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-13T00:58:48Z"
      },
      "message": "merge with upstream",
      "tree": {
        "sha": "feea29c28d5b44935cd7ad3644dea78132d22e59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/feea29c28d5b44935cd7ad3644dea78132d22e59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/307c9317ed4a710dad9b7adb4b5515129a409e6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307c9317ed4a710dad9b7adb4b5515129a409e6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/307c9317ed4a710dad9b7adb4b5515129a409e6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307c9317ed4a710dad9b7adb4b5515129a409e6b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34f9810da4bf9954feeb13dc2026fefa3df145a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f9810da4bf9954feeb13dc2026fefa3df145a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34f9810da4bf9954feeb13dc2026fefa3df145a7"
      },
      {
        "sha": "8f58d0dbc8cc05d0969373eb4c0a555931b64245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f58d0dbc8cc05d0969373eb4c0a555931b64245",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f58d0dbc8cc05d0969373eb4c0a555931b64245"
      }
    ],
    "stats": {
      "total": 95,
      "additions": 77,
      "deletions": 18
    },
    "files": [
      {
        "sha": "92385e50b2b23bbdea7364cc9e54a862c56b87a8",
        "filename": "contrib/gitian.yml",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307c9317ed4a710dad9b7adb4b5515129a409e6b/contrib/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307c9317ed4a710dad9b7adb4b5515129a409e6b/contrib/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian.yml?ref=307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "patch": "@@ -0,0 +1,37 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages: \n+- \"libdb4.8++-dev\"\n+- \"libxxf86vm-dev\"\n+- \"libgtk2.0-dev\"\n+- \"libboost-all-dev\"\n+- \"libssl-dev\"\n+- \"git-core\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"wxWidgets-2.9.1.tar.bz2\"\n+script: |\n+  INSTDIR=\"$HOME/install\"\n+  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  tar xjf wxWidgets-2.9.1.tar.bz2\n+  cd wxWidgets-2.9.1\n+  ./configure --prefix=$INSTDIR --enable-monolithic --disable-shared\n+  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n+  make $MAKEOPTS install\n+  cd ../bitcoin\n+  mkdir -p $OUTDIR/src\n+  cp -a . $OUTDIR/src\n+  rm -rf $OUTDIR/src/.git\n+  mv $OUTDIR/src/locale $OUTDIR\n+  cp $OUTDIR/src/license.txt $OUTDIR\n+  make -f makefile.unix $MAKEOPTS  WXLIBS=\"-Wl,-Bstatic -l wx_gtk2u-2.9 -Wl,-Bdynamic -l gtk-x11-2.0 -l SM -l Xxf86vm\" INCLUDEPATHS=\"`$INSTDIR/bin/wx-config --cflags`\" bitcoin bitcoind\n+  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n+  cp bitcoin bitcoind $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "d3da5ad2aadbd87f7865c071e6f8dc0eadb7e071",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 15,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307c9317ed4a710dad9b7adb4b5515129a409e6b/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307c9317ed4a710dad9b7adb4b5515129a409e6b/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "patch": "@@ -283,7 +283,7 @@ void EraseOrphanTx(uint256 hash)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n-// CTransaction\n+// CTransaction and CTxIndex\n //\n \n bool CTransaction::ReadFromDisk(CTxDB& txdb, COutPoint prevout, CTxIndex& txindexRet)\n@@ -1030,6 +1030,22 @@ void ResendWalletTransactions()\n     }\n }\n \n+int CTxIndex::GetDepthInMainChain() const\n+{\n+    // Read block header\n+    CBlock block;\n+    if (!block.ReadFromDisk(pos.nFile, pos.nBlockPos, false))\n+        return 0;\n+    // Find the block in the index\n+    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(block.GetHash());\n+    if (mi == mapBlockIndex.end())\n+        return 0;\n+    CBlockIndex* pindex = (*mi).second;\n+    if (!pindex || !pindex->IsInMainChain())\n+        return 0;\n+    return 1 + nBestHeight - pindex->nHeight;\n+}\n+\n \n \n \n@@ -3323,18 +3339,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;\n \n                 // Read block header\n-                int nConf = 0;\n-                CBlock block;\n-                if (block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))\n-                {\n-                    map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(block.GetHash());\n-                    if (it != mapBlockIndex.end())\n-                    {\n-                        CBlockIndex* pindex = (*it).second;\n-                        if (pindex->IsInMainChain())\n-                            nConf = 1 + nBestHeight - pindex->nHeight;\n-                    }\n-                }\n+                int nConf = txindex.GetDepthInMainChain();\n \n                 dPriority += (double)nValueIn * nConf;\n \n@@ -3379,7 +3384,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 continue;\n \n             // Transaction fee required depends on block size\n-            bool fAllowFree = (nBlockSize + nTxSize < 4000 || dPriority > COIN * 144 / 250);\n+            bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n             int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n@@ -3876,12 +3881,19 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                     return false;\n                 int64 nValueOut = nValue;\n                 int64 nTotalValue = nValue + nFeeRet;\n+                double dPriority = 0;\n \n                 // Choose coins to use\n                 set<pair<CWalletTx*,unsigned int> > setCoins;\n                 int64 nValueIn = 0;\n                 if (!SelectCoins(nTotalValue, setCoins, nValueIn))\n                     return false;\n+                foreach(CWalletTx* pcoin, setCoins)\n+                {\n+                    int64 nCredit = pcoin->GetCredit();\n+                    nValueIn += nCredit;\n+                    dPriority += (double)nCredit * pcoin->GetDepthInMainChain();\n+                }\n \n                 // Fill a vout to the payee\n                 bool fChangeFirst = GetRand(2);\n@@ -3932,10 +3944,12 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 unsigned int nBytes = ::GetSerializeSize(*(CTransaction*)&wtxNew, SER_NETWORK);\n                 if (nBytes >= MAX_BLOCK_SIZE_GEN/5)\n                     return false;\n+                dPriority /= nBytes;\n \n                 // Check that enough fee is included\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);\n-                int64 nMinFee = wtxNew.GetMinFee();\n+                bool fAllowFree = CTransaction::AllowFree(dPriority);\n+                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);"
      },
      {
        "sha": "8530086fba8608113e990fd2e17c79269e4d4e85",
        "filename": "main.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307c9317ed4a710dad9b7adb4b5515129a409e6b/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307c9317ed4a710dad9b7adb4b5515129a409e6b/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "patch": "@@ -574,6 +574,13 @@ class CTransaction\n         return nValueOut;\n     }\n \n+    static bool AllowFree(double dPriority)\n+    {\n+        // Large (in bytes) low-priority (new, small-coin) transactions\n+        // need a fee.\n+        return dPriority > COIN * 144 / 250;\n+    }\n+\n     int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true) const\n     {\n         // Base fee is 1 cent per kilobyte\n@@ -1102,6 +1109,7 @@ class CTxIndex\n     {\n         return !(a == b);\n     }\n+    int GetDepthInMainChain() const;\n };\n \n "
      },
      {
        "sha": "383c9878647f39c33d6a44427394bff0338276cd",
        "filename": "serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307c9317ed4a710dad9b7adb4b5515129a409e6b/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307c9317ed4a710dad9b7adb4b5515129a409e6b/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/serialize.h?ref=307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "patch": "@@ -25,7 +25,7 @@ class CDataStream;\n class CAutoFile;\n static const unsigned int MAX_SIZE = 0x02000000;\n \n-static const int VERSION = 32002;\n+static const int VERSION = 32100;\n static const char* pszSubVer = \"\";\n static const bool VERSION_IS_BETA = true;\n "
      },
      {
        "sha": "d806230dee7df092e877fddfe56f8eb789ae1df0",
        "filename": "uibase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307c9317ed4a710dad9b7adb4b5515129a409e6b/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307c9317ed4a710dad9b7adb4b5515129a409e6b/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.cpp?ref=307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "patch": "@@ -550,7 +550,7 @@ CAboutDialogBase::CAboutDialogBase( wxWindow* parent, wxWindowID id, const wxStr\n \t\n \tbSizer631->Add( 0, 4, 0, wxEXPAND, 5 );\n \t\n-\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2010 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n+\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2011 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n \tm_staticTextMain->Wrap( -1 );\n \tbSizer631->Add( m_staticTextMain, 0, wxALL, 5 );\n \t"
      },
      {
        "sha": "f9f653184b26353eb3d2fc1f00085ce66563e4f3",
        "filename": "uiproject.fbp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307c9317ed4a710dad9b7adb4b5515129a409e6b/uiproject.fbp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307c9317ed4a710dad9b7adb4b5515129a409e6b/uiproject.fbp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uiproject.fbp?ref=307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "patch": "@@ -3140,7 +3140,7 @@\n                                                 <property name=\"font\"></property>\r\n                                                 <property name=\"hidden\">0</property>\r\n                                                 <property name=\"id\">wxID_ANY</property>\r\n-                                                <property name=\"label\">Copyright (c) 2009-2010 Bitcoin Developers&#x0A;&#x0A;This is experimental software.&#x0A;&#x0A;Distributed under the MIT/X11 software license, see the accompanying file &#x0A;license.txt or http://www.opensource.org/licenses/mit-license.php.&#x0A;&#x0A;This product includes software developed by the OpenSSL Project for use in the &#x0A;OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by &#x0A;Eric Young (eay@cryptsoft.com).</property>\r\n+                                                <property name=\"label\">Copyright (c) 2009-2011 Bitcoin Developers&#x0A;&#x0A;This is experimental software.&#x0A;&#x0A;Distributed under the MIT/X11 software license, see the accompanying file &#x0A;license.txt or http://www.opensource.org/licenses/mit-license.php.&#x0A;&#x0A;This product includes software developed by the OpenSSL Project for use in the &#x0A;OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by &#x0A;Eric Young (eay@cryptsoft.com).</property>\r\n                                                 <property name=\"maximum_size\"></property>\r\n                                                 <property name=\"minimum_size\"></property>\r\n                                                 <property name=\"name\">m_staticTextMain</property>\r"
      }
    ]
  },
  {
    "sha": "053aa26998ec673a5ea43e5268a88dd93be07087",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTNhYTI2OTk4ZWM2NzNhNWVhNDNlNTI2OGE4OGRkOTNiZTA3MDg3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-13T01:05:56Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-13T01:05:56Z"
      },
      "message": "merge with upstream: bugfix",
      "tree": {
        "sha": "7043451c30157f1798989c706ff2fb18dfa282cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7043451c30157f1798989c706ff2fb18dfa282cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/053aa26998ec673a5ea43e5268a88dd93be07087",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053aa26998ec673a5ea43e5268a88dd93be07087",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/053aa26998ec673a5ea43e5268a88dd93be07087",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053aa26998ec673a5ea43e5268a88dd93be07087/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307c9317ed4a710dad9b7adb4b5515129a409e6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/307c9317ed4a710dad9b7adb4b5515129a409e6b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c2bf50daa00887ad901090bed02217ee1d0cbd13",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/053aa26998ec673a5ea43e5268a88dd93be07087/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/053aa26998ec673a5ea43e5268a88dd93be07087/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=053aa26998ec673a5ea43e5268a88dd93be07087",
        "patch": "@@ -3888,11 +3888,10 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 int64 nValueIn = 0;\n                 if (!SelectCoins(nTotalValue, setCoins, nValueIn))\n                     return false;\n-                foreach(CWalletTx* pcoin, setCoins)\n+                foreach(PAIRTYPE(CWalletTx*, unsigned int) pcoin, setCoins)\n                 {\n-                    int64 nCredit = pcoin->GetCredit();\n-                    nValueIn += nCredit;\n-                    dPriority += (double)nCredit * pcoin->GetDepthInMainChain();\n+                    int64 nCredit = pcoin.first->vout[pcoin.second].nValue;\n+                    dPriority += (double)nCredit * pcoin.first->GetDepthInMainChain();\n                 }\n \n                 // Fill a vout to the payee"
      }
    ]
  },
  {
    "sha": "ccefc585978abbbadd5ce4eb57aadeae0defadfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2VmYzU4NTk3OGFiYmJhZGQ1Y2U0ZWI1N2FhZGVhZTBkZWZhZGZi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2011-03-16T16:43:12Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2011-03-16T16:43:12Z"
      },
      "message": "merge with avoid tx fee",
      "tree": {
        "sha": "278fa2bae1365b41370b154ad189ac81ff596006",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/278fa2bae1365b41370b154ad189ac81ff596006"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccefc585978abbbadd5ce4eb57aadeae0defadfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccefc585978abbbadd5ce4eb57aadeae0defadfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccefc585978abbbadd5ce4eb57aadeae0defadfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccefc585978abbbadd5ce4eb57aadeae0defadfb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "053aa26998ec673a5ea43e5268a88dd93be07087",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053aa26998ec673a5ea43e5268a88dd93be07087",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/053aa26998ec673a5ea43e5268a88dd93be07087"
      },
      {
        "sha": "27b7f3b43a3868cd4d4f97e03c35074c2ef12349",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27b7f3b43a3868cd4d4f97e03c35074c2ef12349",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27b7f3b43a3868cd4d4f97e03c35074c2ef12349"
      }
    ],
    "stats": {
      "total": 1134,
      "additions": 734,
      "deletions": 400
    },
    "files": [
      {
        "sha": "3afc8eedc904b5b4f7b25c33aa682135aaec00ec",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 26,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -74,32 +74,11 @@ void HandleSIGTERM(int)\n #ifndef GUI\n int main(int argc, char* argv[])\n {\n-    for (int i = 1; i < argc; i++)\n-        if (!IsSwitchChar(argv[i][0]))\n-            fCommandLine = true;\n-    fDaemon = !fCommandLine;\n-\n-#ifdef __WXGTK__\n-    if (!fCommandLine)\n-    {\n-        // Daemonize\n-        pid_t pid = fork();\n-        if (pid < 0)\n-        {\n-            fprintf(stderr, \"Error: fork() returned %d errno %d\\n\", pid, errno);\n-            return 1;\n-        }\n-        if (pid > 0)\n-            pthread_exit((void*)0);\n-    }\n-#endif\n-\n-    if (!AppInit(argc, argv))\n-        return 1;\n+    bool fRet = false;\n+    fRet = AppInit(argc, argv);\n \n-    while (!fShutdown)\n-        Sleep(1000000);\n-    return 0;\n+    if (fRet && fDaemon)\n+        pthread_exit((void*)0);\n }\n #endif\n \n@@ -177,8 +156,10 @@ bool AppInit2(int argc, char* argv[])\n             \"  -connect=<ip>    \\t\\t  \" + _(\"Connect only to the specified node\\n\") +\n             \"  -nolisten        \\t  \"   + _(\"Don't accept connections from outside\\n\") +\n             \"  -paytxfee=<amt>  \\t  \"   + _(\"Fee per KB to add to transactions you send\\n\") +\n+#ifdef GUI\n             \"  -server          \\t\\t  \" + _(\"Accept command line and JSON-RPC commands\\n\") +\n             \"  -daemon          \\t\\t  \" + _(\"Run in the background as a daemon and accept commands\\n\") +\n+#endif\n             \"  -testnet         \\t\\t  \" + _(\"Use the test network\\n\") +\n             \"  -rpcuser=<user>  \\t  \"   + _(\"Username for JSON-RPC connections\\n\") +\n             \"  -rpcpassword=<pw>\\t  \"   + _(\"Password for JSON-RPC connections\\n\") +\n@@ -213,19 +194,51 @@ bool AppInit2(int argc, char* argv[])\n \n     fDebug = GetBoolArg(\"-debug\");\n \n+    fDaemon = GetBoolArg(\"-daemon\");\n+\n+    if (fDaemon)\n+        fServer = true;\n+    else\n+        fServer = GetBoolArg(\"-server\");\n+\n+    /* force fServer and fDaemon when running without GUI */\n+#ifndef GUI\n+    fServer = true;\n+    fDaemon = true;\n+#endif\n+\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\");\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\");\n \n     fTestNet = GetBoolArg(\"-testnet\");\n     \n     fNoListen = GetBoolArg(\"-nolisten\");\n \n+    for (int i = 1; i < argc; i++)\n+        if (!IsSwitchChar(argv[i][0]))\n+            fCommandLine = true;\n+\n     if (fCommandLine)\n     {\n         int ret = CommandLineRPC(argc, argv);\n         exit(ret);\n     }\n \n+#ifndef GUI\n+    if (fDaemon)\n+    {\n+        // Daemonize\n+        pid_t pid = fork();\n+        if (pid < 0)\n+        {\n+            fprintf(stderr, \"Error: fork() returned %d errno %d\\n\", pid, errno);\n+            return false;\n+        }\n+        if (pid > 0)\n+            return true;\n+    }\n+#endif\n+\n     if (!fDebug && !pszSetDataDir[0])\n         ShrinkDebugFile();\n     printf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n@@ -416,6 +429,9 @@ bool AppInit2(int argc, char* argv[])\n         }\n     }\n \n+    if (mapArgs.count(\"-dnsseed\"))\n+        DNSAddressSeed();\n+\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n@@ -443,7 +459,7 @@ bool AppInit2(int argc, char* argv[])\n     if (!CreateThread(StartNode, NULL))\n         wxMessageBox(\"Error: CreateThread(StartNode) failed\", \"Bitcoin\");\n \n-    if (GetBoolArg(\"-server\") || fDaemon)\n+    if (fServer)\n         CreateThread(ThreadRPCServer, NULL);\n \n #if defined(__WXMSW__) && defined(GUI)"
      },
      {
        "sha": "5416c348f7b033f4ae7845b5188f254236115403",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 33,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -674,7 +674,11 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n \n     // Safety limits\n     unsigned int nSize = ::GetSerializeSize(*this, SER_NETWORK);\n-    if (GetSigOpCount() > 2 || nSize < 100)\n+    // Checking ECDSA signatures is a CPU bottleneck, so to avoid denial-of-service\n+    // attacks disallow transactions with more than one SigOp per 34 bytes.\n+    // 34 bytes because a TxOut is:\n+    //   20-byte address + 8 byte bitcoin amount + 5 bytes of ops + 1 byte script length\n+    if (GetSigOpCount() > nSize / 34 || nSize < 100)\n         return error(\"AcceptToMemoryPool() : nonstandard transaction\");\n \n     // Rather not work on nonstandard transactions\n@@ -734,19 +738,29 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n         if (nFees < GetMinFee(1000))\n             return error(\"AcceptToMemoryPool() : not enough fees\");\n \n-        // Limit free transactions per 10 minutes\n-        if (nFees < CENT && GetBoolArg(\"-limitfreerelay\"))\n+        // Continuously rate-limit free transactions\n+        // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n+        // be annoying or make other's transactions take longer to confirm.\n+        if (nFees < CENT)\n         {\n-            static int64 nNextReset;\n-            static int64 nFreeCount;\n-            if (GetTime() > nNextReset)\n+            static CCriticalSection cs;\n+            static double dFreeCount;\n+            static int64 nLastTime;\n+            int64 nNow = GetTime();\n+\n+            CRITICAL_BLOCK(cs)\n             {\n-                nNextReset = GetTime() + 10 * 60;\n-                nFreeCount = 0;\n+                // Use an exponentially decaying ~10-minute window:\n+                dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n+                nLastTime = nNow;\n+                // -limitfreerelay unit is thousand-bytes-per-minute\n+                // At default rate it would take over a month to fill 1GB\n+                if (dFreeCount > GetArg(\"-limitfreerelay\", 15)*10*1000 && !IsFromMe())\n+                    return error(\"AcceptToMemoryPool() : free transaction rejected by rate limiter\");\n+                if (fDebug)\n+                    printf(\"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n+                dFreeCount += nSize;\n             }\n-            if (nFreeCount > 150000 && !IsFromMe())\n-                return error(\"AcceptToMemoryPool() : free transaction rejected by rate limiter\");\n-            nFreeCount += nSize;\n         }\n     }\n \n@@ -2378,6 +2392,10 @@ bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return true;\n         }\n \n+        // Be shy and don't send version until we hear\n+        if (pfrom->fInbound)\n+            pfrom->PushVersion();\n+\n         pfrom->fClient = !(pfrom->nServices & NODE_NETWORK);\n \n         AddTimeData(pfrom->addr.ip, nTime);\n@@ -3765,17 +3783,17 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n \n                 pair<int64,pair<CWalletTx*,unsigned int> > coin = make_pair(n,make_pair(pcoin,i));\n \n-                if (n < nTargetValue)\n-                {\n-                    vValue.push_back(coin);\n-                    nTotalLower += n;\n-                }\n-                else if (n == nTargetValue)\n+                if (n == nTargetValue)\n                 {\n                     setCoinsRet.insert(coin.second);\n                     nValueRet += coin.first;\n                     return true;\n                 }\n+                else if (n < nTargetValue + CENT)\n+                {\n+                    vValue.push_back(coin);\n+                    nTotalLower += n;\n+                }\n                 else if (n < coinLowestLarger.first)\n                 {\n                     coinLowestLarger = coin;\n@@ -3784,7 +3802,17 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n         }\n     }\n \n-    if (nTotalLower < nTargetValue)\n+    if (nTotalLower == nTargetValue || nTotalLower == nTargetValue + CENT)\n+    {\n+        for (int i = 0; i < vValue.size(); ++i)\n+        {\n+            setCoinsRet.insert(vValue[i].second);\n+            nValueRet += vValue[i].first;\n+        }\n+        return true;\n+    }\n+\n+    if (nTotalLower < nTargetValue + (coinLowestLarger.second.first ? CENT : 0))\n     {\n         if (coinLowestLarger.second.first == NULL)\n             return false;\n@@ -3793,6 +3821,9 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n         return true;\n     }\n \n+    if (nTotalLower >= nTargetValue + CENT)\n+        nTargetValue += CENT;\n+\n     // Solve subset sum by stochastic approximation\n     sort(vValue.rbegin(), vValue.rend());\n     vector<char> vfIncluded;\n@@ -3863,8 +3894,18 @@ bool SelectCoins(int64 nTargetValue, set<pair<CWalletTx*,unsigned int> >& setCoi\n \n \n \n-bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n+bool CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n {\n+    int64 nValue = 0;\n+    foreach (const PAIRTYPE(CScript, int64)& s, vecSend)\n+    {\n+        if (nValue < 0)\n+            return false;\n+        nValue += s.second;\n+    }\n+    if (vecSend.empty() || nValue < 0)\n+        return false;\n+\n     CRITICAL_BLOCK(cs_main)\n     {\n         // txdb must be opened before the mapWallet lock\n@@ -3877,11 +3918,12 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 wtxNew.vin.clear();\n                 wtxNew.vout.clear();\n                 wtxNew.fFromMe = true;\n-                if (nValue < 0)\n-                    return false;\n-                int64 nValueOut = nValue;\n+\n                 int64 nTotalValue = nValue + nFeeRet;\n                 double dPriority = 0;\n+                // vouts to the payees\n+                foreach (const PAIRTYPE(CScript, int64)& s, vecSend)\n+                    wtxNew.vout.push_back(CTxOut(s.second, s.first));\n \n                 // Choose coins to use\n                 set<pair<CWalletTx*,unsigned int> > setCoins;\n@@ -3894,11 +3936,6 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                     dPriority += (double)nCredit * pcoin.first->GetDepthInMainChain();\n                 }\n \n-                // Fill a vout to the payee\n-                bool fChangeFirst = GetRand(2);\n-                if (!fChangeFirst)\n-                    wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n-\n                 // Fill a vout back to self with any change\n                 int64 nChange = nValueIn - nTotalValue;\n                 if (nChange >= CENT)\n@@ -3916,19 +3953,18 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n \n                     // Fill a vout to ourself, using same address type as the payment\n                     CScript scriptChange;\n-                    if (scriptPubKey.GetBitcoinAddressHash160() != 0)\n+                    if (vecSend[0].first.GetBitcoinAddressHash160() != 0)\n                         scriptChange.SetBitcoinAddress(vchPubKey);\n                     else\n                         scriptChange << vchPubKey << OP_CHECKSIG;\n-                    wtxNew.vout.push_back(CTxOut(nChange, scriptChange));\n+\n+                    // Insert change txn at random position:\n+                    vector<CTxOut>::iterator position = wtxNew.vout.begin()+GetRandInt(wtxNew.vout.size());\n+                    wtxNew.vout.insert(position, CTxOut(nChange, scriptChange));\n                 }\n                 else\n                     reservekey.ReturnKey();\n \n-                // Fill a vout to the payee\n-                if (fChangeFirst)\n-                    wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n-\n                 // Fill vin\n                 foreach(const PAIRTYPE(CWalletTx*,unsigned int)& coin, setCoins)\n                     wtxNew.vin.push_back(CTxIn(coin.first->GetHash(),coin.second));\n@@ -3966,6 +4002,13 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n     return true;\n }\n \n+bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n+{\n+    vector< pair<CScript, int64> > vecSend;\n+    vecSend.push_back(make_pair(scriptPubKey, nValue));\n+    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet);\n+}\n+\n // Call after CreateTransaction unless you want to abort\n bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n {"
      },
      {
        "sha": "48a5a1f1a9f663e485634caea7d82c2cfeea9b48",
        "filename": "main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -77,6 +77,7 @@ bool ProcessMessages(CNode* pfrom);\n bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n int64 GetBalance();\n+bool CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n bool BroadcastTransaction(CWalletTx& wtxNew);"
      },
      {
        "sha": "372402f51fb0441daaf43d7c8342a30e377788e0",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -857,7 +857,34 @@ void ThreadSocketHandler2(void* parg)\n \n \n \n+static const char *strDNSSeed[] = {\n+    \"bitseed.xf2.org\",\n+};\n \n+void DNSAddressSeed()\n+{\n+    int found = 0;\n+\n+    printf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n+\n+    for (int seed_idx = 0; seed_idx < ARRAYLEN(strDNSSeed); seed_idx++) {\n+        struct hostent* phostent = gethostbyname(strDNSSeed[seed_idx]);\n+        if (!phostent)\n+            continue;\n+\n+        for (int host = 0; phostent->h_addr_list[host] != NULL; host++) {\n+            CAddress addr(*(unsigned int*)phostent->h_addr_list[host],\n+                          GetDefaultPort(), NODE_NETWORK);\n+            addr.nTime = 0;\n+            if (addr.IsValid() && addr.GetByte(3) != 127) {\n+                AddAddress(addr);\n+                found++;\n+            }\n+        }\n+    }\n+\n+    printf(\"%d addresses found from DNS seeds\\n\", found);\n+}\n \n \n "
      },
      {
        "sha": "7d4974fd01a2afede00447426a47595ce977356b",
        "filename": "net.h",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.h?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -30,6 +30,7 @@ CNode* FindNode(unsigned int ip);\n CNode* ConnectNode(CAddress addrConnect, int64 nTimeout=0);\n void AbandonRequests(void (*fn)(void*, CDataStream&), void* param1);\n bool AnySubscribed(unsigned int nChannel);\n+void DNSAddressSeed();\n bool BindListenPort(string& strError=REF(string()));\n void StartNode(void* parg);\n bool StopNode();\n@@ -571,14 +572,9 @@ class CNode\n         fGetAddr = false;\n         vfSubscribe.assign(256, false);\n \n-        // Push a version message\n-        /// when NTP implemented, change to just nTime = GetAdjustedTime()\n-        int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n-        CAddress addrYou = (fUseProxy ? CAddress(\"0.0.0.0\") : addr);\n-        CAddress addrMe = (fUseProxy ? CAddress(\"0.0.0.0\") : addrLocalHost);\n-        RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-        PushMessage(\"version\", VERSION, nLocalServices, nTime, addrYou, addrMe,\n-                    nLocalHostNonce, string(pszSubVer), nBestHeight);\n+        // Be shy and don't send version until we hear\n+        if (!fInbound)\n+            PushVersion();\n     }\n \n     ~CNode()\n@@ -735,6 +731,19 @@ class CNode\n \n \n \n+    void PushVersion()\n+    {\n+        /// when NTP implemented, change to just nTime = GetAdjustedTime()\n+        int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n+        CAddress addrYou = (fUseProxy ? CAddress(\"0.0.0.0\") : addr);\n+        CAddress addrMe = (fUseProxy ? CAddress(\"0.0.0.0\") : addrLocalHost);\n+        RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n+        PushMessage(\"version\", VERSION, nLocalServices, nTime, addrYou, addrMe,\n+                nLocalHostNonce, string(pszSubVer), nBestHeight);\n+    }\n+\n+\n+\n \n     void PushMessage(const char* pszCommand)\n     {"
      },
      {
        "sha": "97710ff6b81e887d373d433a7b8473b6eac91c51",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -768,6 +768,69 @@ Value sendfrom(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n+Value sendmany(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 4)\n+        throw runtime_error(\n+            \"sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\\n\"\n+            \"amounts are double-precision floating point numbers\");\n+\n+    string strAccount = AccountFromValue(params[0]);\n+    Object sendTo = params[1].get_obj();\n+    int nMinDepth = 1;\n+    if (params.size() > 2)\n+        nMinDepth = params[2].get_int();\n+\n+    CWalletTx wtx;\n+    wtx.strFromAccount = strAccount;\n+    if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n+        wtx.mapValue[\"comment\"] = params[3].get_str();\n+\n+    set<string> setAddress;\n+    vector<pair<CScript, int64> > vecSend;\n+\n+    int64 totalAmount = 0;\n+    foreach(const Pair& s, sendTo)\n+    {\n+        uint160 hash160;\n+        string strAddress = s.name_;\n+\n+        if (setAddress.count(strAddress))\n+            throw JSONRPCError(-8, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+        setAddress.insert(strAddress);\n+\n+        CScript scriptPubKey;\n+        if (!scriptPubKey.SetBitcoinAddress(strAddress))\n+            throw JSONRPCError(-5, string(\"Invalid bitcoin address:\")+strAddress);\n+        int64 nAmount = AmountFromValue(s.value_); \n+        totalAmount += nAmount;\n+\n+        vecSend.push_back(make_pair(scriptPubKey, nAmount));\n+    }\n+\n+    CRITICAL_BLOCK(cs_mapWallet)\n+    {\n+        // Check funds\n+        int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n+        if (totalAmount > nBalance)\n+            throw JSONRPCError(-6, \"Account has insufficient funds\");\n+\n+        // Send\n+        CReserveKey keyChange;\n+        int64 nFeeRequired = 0;\n+        bool fCreated = CreateTransaction(vecSend, wtx, keyChange, nFeeRequired);\n+        if (!fCreated)\n+        {\n+            if (totalAmount + nFeeRequired > GetBalance())\n+                throw JSONRPCError(-6, \"Insufficient funds\");\n+            throw JSONRPCError(-4, \"Transaction creation failed\");\n+        }\n+        if (!CommitTransaction(wtx, keyChange))\n+            throw JSONRPCError(-4, \"Transaction commit failed\");\n+    }\n+\n+    return wtx.GetHash().GetHex();\n+}\n \n \n struct tallyitem\n@@ -1344,6 +1407,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getbalance\",            &getbalance),\n     make_pair(\"move\",                  &movecmd),\n     make_pair(\"sendfrom\",              &sendfrom),\n+    make_pair(\"sendmany\",              &sendmany),\n     make_pair(\"gettransaction\",        &gettransaction),\n     make_pair(\"listtransactions\",      &listtransactions),\n     make_pair(\"getwork\",               &getwork),\n@@ -1995,6 +2059,15 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n         if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+        if (strMethod == \"sendmany\"               && n > 1)\n+        {\n+            string s = params[1].get_str();\n+            Value v;\n+            if (!read_string(s, v) || v.type() != obj_type)\n+                throw runtime_error(\"type mismatch\");\n+            params[1] = v.get_obj();\n+        }\n+        if (strMethod == \"sendmany\"                && n > 2) ConvertTo<boost::int64_t>(params[2]);\n \n         // Execute\n         Object reply = CallRPC(strMethod, params);"
      },
      {
        "sha": "71c84f755ac5fcdc80b7cec9c896512e26351de1",
        "filename": "uibase.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.cpp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -1,5 +1,5 @@\n ///////////////////////////////////////////////////////////////////////////\n-// C++ code generated with wxFormBuilder (version Apr 16 2008)\n+// C++ code generated with wxFormBuilder (version Dec 21 2009)\n // http://www.wxformbuilder.org/\n //\n // PLEASE DO \"NOT\" EDIT THIS FILE!\n@@ -61,7 +61,6 @@ CMainFrameBase::CMainFrameBase( wxWindow* parent, wxWindowID id, const wxString&\n \tm_toolBar->Realize();\n \t\n \tm_statusBar = this->CreateStatusBar( 1, wxST_SIZEGRIP, wxID_ANY );\n-\t\n \twxBoxSizer* bSizer2;\n \tbSizer2 = new wxBoxSizer( wxVERTICAL );\n \t\n@@ -355,7 +354,6 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \tbSizer71 = new wxBoxSizer( wxHORIZONTAL );\n \t\n \tm_checkBoxLimitProcessors = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Limit coin generation to\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer71->Add( m_checkBoxLimitProcessors, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );\n \t\n \tm_spinCtrlLimitProcessors = new wxSpinCtrl( m_panelMain, wxID_ANY, wxEmptyString, wxDefaultPosition, wxSize( 48,-1 ), wxSP_ARROW_KEYS, 1, 999, 1 );\n@@ -368,22 +366,18 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \tbSizer69->Add( bSizer71, 0, 0, 5 );\n \t\n \tm_checkBoxStartOnSystemStartup = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Start Bitcoin on system startup\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxStartOnSystemStartup, 0, wxALL, 5 );\n \t\n \tm_checkBoxMinimizeToTray = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Minimize to the tray instead of the taskbar\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxMinimizeToTray, 0, wxALL, 5 );\n \t\n \tm_checkBoxMinimizeOnClose = new wxCheckBox( m_panelMain, wxID_ANY, _(\"M&inimize to the tray on close\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxMinimizeOnClose, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \twxBoxSizer* bSizer102;\n \tbSizer102 = new wxBoxSizer( wxHORIZONTAL );\n \t\n \tm_checkBoxUseProxy = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Connect through socks4 proxy: \"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer102->Add( m_checkBoxUseProxy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \tbSizer69->Add( bSizer102, 1, wxEXPAND, 5 );\n@@ -550,7 +544,7 @@ CAboutDialogBase::CAboutDialogBase( wxWindow* parent, wxWindowID id, const wxStr\n \t\n \tbSizer631->Add( 0, 4, 0, wxEXPAND, 5 );\n \t\n-\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2011 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n+\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2010 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n \tm_staticTextMain->Wrap( -1 );\n \tbSizer631->Add( m_staticTextMain, 0, wxALL, 5 );\n \t\n@@ -677,6 +671,11 @@ CSendDialogBase::CSendDialogBase( wxWindow* parent, wxWindowID id, const wxStrin\n \t\n \tbSizer21->Add( fgSizer1, 0, wxEXPAND|wxLEFT, 5 );\n \t\n+\twxBoxSizer* bSizer672;\n+\tbSizer672 = new wxBoxSizer( wxHORIZONTAL );\n+\t\n+\tbSizer21->Add( bSizer672, 0, wxEXPAND, 5 );\n+\t\n \twxBoxSizer* bSizer23;\n \tbSizer23 = new wxBoxSizer( wxHORIZONTAL );\n \t\n@@ -698,6 +697,7 @@ CSendDialogBase::CSendDialogBase( wxWindow* parent, wxWindowID id, const wxStrin\n \t\n \t// Connect Events\n \tm_textCtrlAddress->Connect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n+\tm_textCtrlAddress->Connect( wxEVT_COMMAND_TEXT_UPDATED, wxCommandEventHandler( CSendDialogBase::OnTextAddress ), NULL, this );\n \tm_buttonPaste->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonPaste ), NULL, this );\n \tm_buttonAddress->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonAddressBook ), NULL, this );\n \tm_textCtrlAmount->Connect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n@@ -710,6 +710,7 @@ CSendDialogBase::~CSendDialogBase()\n {\n \t// Disconnect Events\n \tm_textCtrlAddress->Disconnect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n+\tm_textCtrlAddress->Disconnect( wxEVT_COMMAND_TEXT_UPDATED, wxCommandEventHandler( CSendDialogBase::OnTextAddress ), NULL, this );\n \tm_buttonPaste->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonPaste ), NULL, this );\n \tm_buttonAddress->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonAddressBook ), NULL, this );\n \tm_textCtrlAmount->Disconnect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );"
      },
      {
        "sha": "eff5bd6bf448ae4b3462fd58419ffc722733c843",
        "filename": "uibase.h",
        "status": "modified",
        "additions": 79,
        "deletions": 74,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/uibase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/uibase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.h?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -1,5 +1,5 @@\n ///////////////////////////////////////////////////////////////////////////\n-// C++ code generated with wxFormBuilder (version Apr 16 2008)\n+// C++ code generated with wxFormBuilder (version Dec 21 2009)\n // http://www.wxformbuilder.org/\n //\n // PLEASE DO \"NOT\" EDIT THIS FILE!\n@@ -93,28 +93,28 @@ class CMainFrameBase : public wxFrame\n \t\twxPanel* m_panel93;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnIconize( wxIconizeEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnIdle( wxIdleEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMouseEvents( wxMouseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaint( wxPaintEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuFileExit( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonSend( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMouseEventsAddress( wxMouseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnSetFocusAddress( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListColBeginDrag( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaintListCtrl( wxPaintEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnIconize( wxIconizeEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnIdle( wxIdleEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMouseEvents( wxMouseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuFileExit( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonSend( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMouseEventsAddress( wxMouseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnSetFocusAddress( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListColBeginDrag( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaintListCtrl( wxPaintEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n@@ -125,6 +125,7 @@ class CMainFrameBase : public wxFrame\n \t\twxListCtrl* m_listCtrlSentReceived;\n \t\twxListCtrl* m_listCtrlSent;\n \t\twxListCtrl* m_listCtrlReceived;\n+\t\t\n \t\tCMainFrameBase( wxWindow* parent, wxWindowID id = wxID_MAINFRAME, const wxString& title = _(\"Bitcoin\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 723,484 ), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxTAB_TRAVERSAL );\n \t\t~CMainFrameBase();\n \t\n@@ -142,10 +143,11 @@ class CTxDetailsDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCTxDetailsDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Transaction Details\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 620,450 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CTxDetailsDialogBase();\n \t\n@@ -188,18 +190,19 @@ class COptionsDialogBase : public wxDialog\n \t\twxButton* m_buttonApply;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnListBox( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusTransactionFee( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonApply( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnListBox( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusTransactionFee( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonApply( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCOptionsDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Options\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 540,360 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~COptionsDialogBase();\n \t\n@@ -223,11 +226,12 @@ class CAboutDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n \t\twxStaticText* m_staticTextVersion;\n+\t\t\n \t\tCAboutDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"About Bitcoin\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 532,333 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CAboutDialogBase();\n \t\n@@ -256,26 +260,23 @@ class CSendDialogBase : public wxDialog\n \t\twxChoice* m_choiceTransferType;\n \t\t\n \t\t\n-\t\twxStaticText* m_staticTextFrom;\n-\t\twxTextCtrl* m_textCtrlFrom;\n-\t\twxStaticText* m_staticTextMessage;\n-\t\twxTextCtrl* m_textCtrlMessage;\n \t\t\n \t\twxButton* m_buttonSend;\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnTextAddress( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonPaste( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusAmount( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonSend( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnTextAddress( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonPaste( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusAmount( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonSend( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n-\t\tCSendDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Send Coins\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 675,298 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n+\t\t\n+\t\tCSendDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Send Coins\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 498,157 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CSendDialogBase();\n \t\n };\n@@ -295,13 +296,14 @@ class CSendingDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaint( wxPaintEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCSendingDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Sending...\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 442,151 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CSendingDialogBase();\n \t\n@@ -326,18 +328,19 @@ class CYourAddressDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemSelected( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonRename( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemSelected( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonRename( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCYourAddressDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Your Bitcoin Addresses\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 610,390 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CYourAddressDialogBase();\n \t\n@@ -369,21 +372,22 @@ class CAddressBookDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemSelected( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonDelete( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonEdit( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemSelected( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonDelete( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonEdit( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n \t\twxButton* m_buttonCancel;\n+\t\t\n \t\tCAddressBookDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Address Book\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 610,390 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CAddressBookDialogBase();\n \t\n@@ -408,13 +412,14 @@ class CGetTextFromUserDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCGetTextFromUserDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxEmptyString, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 440,138 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CGetTextFromUserDialogBase();\n \t"
      },
      {
        "sha": "ae712e81f1b217ef87e25419e21144ba230f7288",
        "filename": "uiproject.fbp",
        "status": "modified",
        "additions": 405,
        "deletions": 249,
        "changes": 654,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/uiproject.fbp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/uiproject.fbp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uiproject.fbp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb"
      },
      {
        "sha": "26f8e0ac2117e69de4793bece3ed42cfe069353f",
        "filename": "util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.cpp?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -14,6 +14,7 @@ char pszSetDataDir[MAX_PATH] = \"\";\n bool fRequestShutdown = false;\n bool fShutdown = false;\n bool fDaemon = false;\n+bool fServer = false;\n bool fCommandLine = false;\n string strMiscWarning;\n bool fTestNet = false;\n@@ -169,8 +170,9 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n         }\n         if (fileout)\n         {\n-            //// Debug print useful for profiling\n-            //fprintf(fileout, \" %\"PRI64d\" \", GetTimeMillis());\n+            // Debug print useful for profiling\n+            if (GetBoolArg(\"-logtimestamps\"))\n+                fprintf(fileout, \"%s \", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n             va_list arg_ptr;\n             va_start(arg_ptr, pszFormat);\n             ret = vfprintf(fileout, pszFormat, arg_ptr);"
      },
      {
        "sha": "1b780d552087591fa00595c54b9d093184309785",
        "filename": "util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccefc585978abbbadd5ce4eb57aadeae0defadfb/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccefc585978abbbadd5ce4eb57aadeae0defadfb/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.h?ref=ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "patch": "@@ -143,6 +143,7 @@ extern char pszSetDataDir[MAX_PATH];\n extern bool fRequestShutdown;\n extern bool fShutdown;\n extern bool fDaemon;\n+extern bool fServer;\n extern bool fCommandLine;\n extern string strMiscWarning;\n extern bool fTestNet;"
      }
    ]
  },
  {
    "sha": "68f3f61300e1b39eb4df6c39584dd56458999291",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGYzZjYxMzAwZTFiMzllYjRkZjZjMzk1ODRkZDU2NDU4OTk5Mjkx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2011-03-16T16:50:06Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2011-03-16T16:50:06Z"
      },
      "message": "add -pthread",
      "tree": {
        "sha": "ac6b3895c56ba8ee66664c15930016db0cc8f68b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac6b3895c56ba8ee66664c15930016db0cc8f68b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68f3f61300e1b39eb4df6c39584dd56458999291",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f3f61300e1b39eb4df6c39584dd56458999291",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68f3f61300e1b39eb4df6c39584dd56458999291",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f3f61300e1b39eb4df6c39584dd56458999291/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccefc585978abbbadd5ce4eb57aadeae0defadfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccefc585978abbbadd5ce4eb57aadeae0defadfb"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d09d61dbf7d0ba0ab589594bc0bf72741af91c14",
        "filename": "makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68f3f61300e1b39eb4df6c39584dd56458999291/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68f3f61300e1b39eb4df6c39584dd56458999291/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/makefile.unix?ref=68f3f61300e1b39eb4df6c39584dd56458999291",
        "patch": "@@ -25,7 +25,7 @@ LIBS= \\\n \n DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n DEBUGFLAGS=-g -D__WXDEBUG__\n-CXXFLAGS=-O2 -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS)\n+CXXFLAGS=-O2 -Wno-invalid-offsetof -Wformat -pthread $(DEBUGFLAGS) $(DEFS)\n HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \\\n     script.h db.h net.h irc.h main.h rpc.h uibase.h ui.h noui.h init.h\n "
      }
    ]
  },
  {
    "sha": "4fa053aacbb2300565d5b174bb1a651ba08f76a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmEwNTNhYWNiYjIzMDA1NjVkNWIxNzRiYjFhNjUxYmEwOGY3NmEz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-17T09:50:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-03-17T09:50:44Z"
      },
      "message": "optimization: move check for immature coinbase out of loop",
      "tree": {
        "sha": "f26d2b3eb607a57d0ca6afdbe4d06263e47a85fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f26d2b3eb607a57d0ca6afdbe4d06263e47a85fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fa053aacbb2300565d5b174bb1a651ba08f76a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fa053aacbb2300565d5b174bb1a651ba08f76a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fa053aacbb2300565d5b174bb1a651ba08f76a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fa053aacbb2300565d5b174bb1a651ba08f76a3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68f3f61300e1b39eb4df6c39584dd56458999291",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f3f61300e1b39eb4df6c39584dd56458999291",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68f3f61300e1b39eb4df6c39584dd56458999291"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d2cf8bce095fa87fd8893a83f91e0a2958d57d69",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fa053aacbb2300565d5b174bb1a651ba08f76a3/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fa053aacbb2300565d5b174bb1a651ba08f76a3/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=4fa053aacbb2300565d5b174bb1a651ba08f76a3",
        "patch": "@@ -3764,6 +3764,9 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n             if (!pcoin->IsFinal() || !pcoin->IsConfirmed())\n                 continue;\n \n+            if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n+                continue;\n+\n             int nDepth = pcoin->GetDepthInMainChain();\n             if (nDepth < (pcoin->IsFromMe() ? nConfMine : nConfTheirs))\n                 continue;\n@@ -3773,9 +3776,6 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n                 if (pcoin->IsSpent(i) || !pcoin->vout[i].IsMine())\n                     continue;\n \n-                if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n-                    continue;\n-\n                 int64 n = pcoin->vout[i].nValue;\n \n                 if (n <= 0)"
      }
    ]
  }
]