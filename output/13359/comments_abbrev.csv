Empact,2018-06-01T12:28:26Z,"How about using something like `typename std::enable_if<std::is_same<T, CTransaction>::value || std::is_same<T, CMutableTransaction>::value>::type` in place of `static_assert`? I haven't tested this but I think it could be defined as an abstract transaction template type and then used to restrain the type of each such template.\n\nExample use here: https://github.com/bitcoin/bitcoin/pull/13076/f",https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-393865419,393865419,
promag,2018-06-01T22:45:44Z,"Could remove the following in a separate commit?\n```cpp\nint64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, const std::vector<CTxOut>& txouts)\n```",https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-394028687,394028687,
pawan17kumar,2018-06-03T12:58:46Z,Is this mining bitcoin,https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-394160701,394160701,
Empact,2018-06-05T10:13:10Z,@pawan17kumar yes we are hard at work swinging pick-axes into keyboards.,https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-394656610,394656610,
laanwj,2018-06-05T16:25:17Z,"utACK faadf518e0e86a47fdab67884926f2f211f6fd3f\n\n> Is this mining bitcoin\n\nif only mining was proof-of-open-source-development...\n",https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-394773471,394773471,
DrahtBot,2018-09-07T18:51:42Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14158 (fix various uses of inline by arvidn)\n* #13558 (Drop unused GetType() from CSizeComputer by Empact)\n* #11634 (wallet: Add missing cs_wallet/cs_KeyStore locks to wallet by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflict",https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-419532550,419532550,
DrahtBot,2018-09-11T08:38:50Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-420194520,420194520,
ryanofsky,2018-10-19T15:20:25Z,Why was this closed?,https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-431399457,431399457,
MarcoFalke,2019-11-11T14:01:01Z,"> Why was this closed?\n\nIt needs benchmarks, to justify the use of C++11, which is less common in this project (enable_if or static_assert)",https://github.com/bitcoin/bitcoin/pull/13359#issuecomment-552457011,552457011,
arvidn,2018-09-07T19:47:28Z,"it might be nicer to have this function not participate in overload resolution (i.e. `enable_if`) when these conditions are not met, rather than being triggering a static assert.",https://github.com/bitcoin/bitcoin/pull/13359#discussion_r216069099,216069099,src/consensus/validation.h
arvidn,2018-09-07T19:48:41Z,this template should probably constrain `T` as well,https://github.com/bitcoin/bitcoin/pull/13359#discussion_r216069360,216069360,src/policy/rbf.cpp
ryanofsky,2018-09-12T20:54:29Z,Downside of using enable_if is that the resulting compiler error message will probably be more ambiguous and harder to understand.,https://github.com/bitcoin/bitcoin/pull/13359#discussion_r217185359,217185359,src/consensus/validation.h
lucash-dev,2018-09-15T22:21:13Z,"Either way, I think there should be a standard logic for checking whether a type is a transaction type -- provided by `transaction.h`, thus preserving encapsulation. ",https://github.com/bitcoin/bitcoin/pull/13359#discussion_r217896948,217896948,src/consensus/validation.h
