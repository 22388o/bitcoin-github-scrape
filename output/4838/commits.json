[
  {
    "sha": "a0dbe433bdb3f22be639fbb675c371277fba6d80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGRiZTQzM2JkYjNmMjJiZTYzOWZiYjY3NWMzNzEyNzdmYmE2ZDgw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:01:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:01:10Z"
      },
      "message": "checkpoints.cpp depends on main, it can use mapBlockIndex directly",
      "tree": {
        "sha": "07510ed5abf653fa6562bc6eb0276455f2419a69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07510ed5abf653fa6562bc6eb0276455f2419a69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0dbe433bdb3f22be639fbb675c371277fba6d80",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0dbe433bdb3f22be639fbb675c371277fba6d80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0dbe433bdb3f22be639fbb675c371277fba6d80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0dbe433bdb3f22be639fbb675c371277fba6d80/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "961c4a04c25237285fb9a694f8918556c690bcd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/961c4a04c25237285fb9a694f8918556c690bcd6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/961c4a04c25237285fb9a694f8918556c690bcd6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "343d5251f5311f93e06eb0c1c3a83f8d4eb87c97",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0dbe433bdb3f22be639fbb675c371277fba6d80/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0dbe433bdb3f22be639fbb675c371277fba6d80/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=a0dbe433bdb3f22be639fbb675c371277fba6d80",
        "patch": "@@ -146,7 +146,7 @@ namespace Checkpoints {\n         return checkpoints.rbegin()->first;\n     }\n \n-    CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex)\n+    CBlockIndex* GetLastCheckpoint()\n     {\n         if (!fEnabled)\n             return NULL;"
      },
      {
        "sha": "6d3f2d493563dc20239e2f5bc37da61c34c4e024",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0dbe433bdb3f22be639fbb675c371277fba6d80/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0dbe433bdb3f22be639fbb675c371277fba6d80/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=a0dbe433bdb3f22be639fbb675c371277fba6d80",
        "patch": "@@ -22,7 +22,7 @@ namespace Checkpoints {\n     int GetTotalBlocksEstimate();\n \n     // Returns last CBlockIndex* in mapBlockIndex that is a checkpoint\n-    CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex);\n+    CBlockIndex* GetLastCheckpoint();\n \n     double GuessVerificationProgress(CBlockIndex *pindex, bool fSigchecks = true);\n "
      },
      {
        "sha": "a024461e27b9a60bd0123f4f51595e1dfd0f7732",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0dbe433bdb3f22be639fbb675c371277fba6d80/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0dbe433bdb3f22be639fbb675c371277fba6d80/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a0dbe433bdb3f22be639fbb675c371277fba6d80",
        "patch": "@@ -2302,7 +2302,7 @@ bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex\n             return state.Invalid(error(\"AcceptBlock() : block is marked invalid\"), 0, \"duplicate\");\n     }\n \n-    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n+    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint();\n     if (pcheckpoint && block.hashPrevBlock != (chainActive.Tip() ? chainActive.Tip()->GetBlockHash() : uint256(0)))\n     {\n         // Extra checks to prevent \"fill up memory by spamming with bogus blocks\"\n@@ -2345,7 +2345,7 @@ bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex\n                              REJECT_CHECKPOINT, \"checkpoint mismatch\");\n \n         // Don't accept any forks from the main chain prior to last checkpoint\n-        CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n+        CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint();\n         if (pcheckpoint && nHeight < pcheckpoint->nHeight)\n             return state.DoS(100, error(\"AcceptBlock() : forked chain older than last checkpoint (height %d)\", nHeight));\n \n@@ -3286,7 +3286,7 @@ void static ProcessGetData(CNode* pfrom)\n                     // If the requested block is at a height below our last\n                     // checkpoint, only serve it if it's in the checkpointed chain\n                     int nHeight = mi->second->nHeight;\n-                    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n+                    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint();\n                     if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n                         if (!chainActive.Contains(mi->second))\n                         {"
      }
    ]
  },
  {
    "sha": "145d5be896db4e8fda17039bed26100e38fae2f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDVkNWJlODk2ZGI0ZThmZGExNzAzOWJlZDI2MTAwZTM4ZmFlMmYw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:02:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:04:51Z"
      },
      "message": "Introduce BlockMap type for mapBlockIndex",
      "tree": {
        "sha": "82c0a250144990617038c84d10e71b6fa905ecc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82c0a250144990617038c84d10e71b6fa905ecc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/145d5be896db4e8fda17039bed26100e38fae2f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/145d5be896db4e8fda17039bed26100e38fae2f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/145d5be896db4e8fda17039bed26100e38fae2f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/145d5be896db4e8fda17039bed26100e38fae2f0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0dbe433bdb3f22be639fbb675c371277fba6d80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0dbe433bdb3f22be639fbb675c371277fba6d80",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0dbe433bdb3f22be639fbb675c371277fba6d80"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 27,
      "deletions": 26
    },
    "files": [
      {
        "sha": "c41deea7ce64718950437f2d41f5e4ec3d96c72b",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -156,7 +156,7 @@ namespace Checkpoints {\n         BOOST_REVERSE_FOREACH(const MapCheckpoints::value_type& i, checkpoints)\n         {\n             const uint256& hash = i.second;\n-            std::map<uint256, CBlockIndex*>::const_iterator t = mapBlockIndex.find(hash);\n+            BlockMap::const_iterator t = mapBlockIndex.find(hash);\n             if (t != mapBlockIndex.end())\n                 return t->second;\n         }"
      },
      {
        "sha": "31f64878fb2521d856758947db0dd1e20cc89fc3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -1031,7 +1031,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     {\n         string strMatch = mapArgs[\"-printblock\"];\n         int nFound = 0;\n-        for (map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n+        for (BlockMap::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n         {\n             uint256 hash = (*mi).first;\n             if (boost::algorithm::starts_with(hash.ToString(), strMatch))"
      },
      {
        "sha": "2479beabddd129282bd41717cc51886a2392867a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -38,7 +38,7 @@ using namespace boost;\n \n CCriticalSection cs_main;\n \n-map<uint256, CBlockIndex*> mapBlockIndex;\n+BlockMap mapBlockIndex;\n CChain chainActive;\n int64_t nTimeBestReceived = 0;\n CWaitableCriticalSection csBestBlock;\n@@ -328,7 +328,7 @@ void ProcessBlockAvailability(NodeId nodeid) {\n     assert(state != NULL);\n \n     if (state->hashLastUnknownBlock != 0) {\n-        map<uint256, CBlockIndex*>::iterator itOld = mapBlockIndex.find(state->hashLastUnknownBlock);\n+        BlockMap::iterator itOld = mapBlockIndex.find(state->hashLastUnknownBlock);\n         if (itOld != mapBlockIndex.end() && itOld->second->nChainWork > 0) {\n             if (state->pindexBestKnownBlock == NULL || itOld->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n                 state->pindexBestKnownBlock = itOld->second;\n@@ -344,7 +344,7 @@ void UpdateBlockAvailability(NodeId nodeid, const uint256 &hash) {\n \n     ProcessBlockAvailability(nodeid);\n \n-    map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(hash);\n+    BlockMap::iterator it = mapBlockIndex.find(hash);\n     if (it != mapBlockIndex.end() && it->second->nChainWork > 0) {\n         // An actually better block was announced.\n         if (state->pindexBestKnownBlock == NULL || it->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n@@ -434,7 +434,7 @@ CBlockLocator CChain::GetLocator(const CBlockIndex *pindex) const {\n CBlockIndex *CChain::FindFork(const CBlockLocator &locator) const {\n     // Find the first block the caller has in the main chain\n     BOOST_FOREACH(const uint256& hash, locator.vHave) {\n-        std::map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hash);\n+        BlockMap::iterator mi = mapBlockIndex.find(hash);\n         if (mi != mapBlockIndex.end())\n         {\n             CBlockIndex* pindex = (*mi).second;\n@@ -2068,7 +2068,7 @@ CBlockIndex* AddToBlockIndex(CBlockHeader& block)\n {\n     // Check for duplicate\n     uint256 hash = block.GetHash();\n-    std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(hash);\n+    BlockMap::iterator it = mapBlockIndex.find(hash);\n     if (it != mapBlockIndex.end())\n         return it->second;\n \n@@ -2079,9 +2079,9 @@ CBlockIndex* AddToBlockIndex(CBlockHeader& block)\n          LOCK(cs_nBlockSequenceId);\n          pindexNew->nSequenceId = nBlockSequenceId++;\n     }\n-    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;\n+    BlockMap::iterator mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;\n     pindexNew->phashBlock = &((*mi).first);\n-    map<uint256, CBlockIndex*>::iterator miPrev = mapBlockIndex.find(block.hashPrevBlock);\n+    BlockMap::iterator miPrev = mapBlockIndex.find(block.hashPrevBlock);\n     if (miPrev != mapBlockIndex.end())\n     {\n         pindexNew->pprev = (*miPrev).second;\n@@ -2294,7 +2294,7 @@ bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex\n     AssertLockHeld(cs_main);\n     // Check for duplicate\n     uint256 hash = block.GetHash();\n-    std::map<uint256, CBlockIndex*>::iterator miSelf = mapBlockIndex.find(hash);\n+    BlockMap::iterator miSelf = mapBlockIndex.find(hash);\n     CBlockIndex *pindex = NULL;\n     if (miSelf != mapBlockIndex.end()) {\n         pindex = miSelf->second;\n@@ -2323,7 +2323,7 @@ bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex\n     CBlockIndex* pindexPrev = NULL;\n     int nHeight = 0;\n     if (hash != Params().HashGenesisBlock()) {\n-        map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(block.hashPrevBlock);\n+        BlockMap::iterator mi = mapBlockIndex.find(block.hashPrevBlock);\n         if (mi == mapBlockIndex.end())\n             return state.DoS(10, error(\"AcceptBlock() : prev block not found\"), 0, \"bad-prevblk\");\n         pindexPrev = (*mi).second;\n@@ -2517,7 +2517,7 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n         return error(\"ProcessBlock() : CheckBlock FAILED\");\n \n     // If we don't already have its previous block (with full data), shunt it off to holding area until we get it\n-    std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(pblock->hashPrevBlock);\n+    BlockMap::iterator it = mapBlockIndex.find(pblock->hashPrevBlock);\n     if (pblock->hashPrevBlock != 0 && (it == mapBlockIndex.end() || !(it->second->nStatus & BLOCK_HAVE_DATA)))\n     {\n         LogPrintf(\"ProcessBlock: ORPHAN BLOCK %lu, prev=%s\\n\", (unsigned long)mapOrphanBlocks.size(), pblock->hashPrevBlock.ToString());\n@@ -2799,7 +2799,7 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n         return NULL;\n \n     // Return existing\n-    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hash);\n+    BlockMap::iterator mi = mapBlockIndex.find(hash);\n     if (mi != mapBlockIndex.end())\n         return (*mi).second;\n \n@@ -2876,7 +2876,7 @@ bool static LoadBlockIndexDB()\n     LogPrintf(\"LoadBlockIndexDB(): transaction index %s\\n\", fTxIndex ? \"enabled\" : \"disabled\");\n \n     // Load pointer to end of best chain\n-    std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(pcoinsTip->GetBestBlock());\n+    BlockMap::iterator it = mapBlockIndex.find(pcoinsTip->GetBestBlock());\n     if (it == mapBlockIndex.end())\n         return true;\n     chainActive.SetTip(it->second);\n@@ -3034,7 +3034,7 @@ void PrintBlockTree()\n     AssertLockHeld(cs_main);\n     // pre-compute tree structure\n     map<CBlockIndex*, vector<CBlockIndex*> > mapNext;\n-    for (map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n+    for (BlockMap::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n     {\n         CBlockIndex* pindex = (*mi).second;\n         mapNext[pindex->pprev].push_back(pindex);\n@@ -3280,7 +3280,7 @@ void static ProcessGetData(CNode* pfrom)\n             if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK)\n             {\n                 bool send = false;\n-                map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(inv.hash);\n+                BlockMap::iterator mi = mapBlockIndex.find(inv.hash);\n                 if (mi != mapBlockIndex.end())\n                 {\n                     // If the requested block is at a height below our last\n@@ -3711,7 +3711,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (locator.IsNull())\n         {\n             // If locator is null, return the hashStop block\n-            map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashStop);\n+            BlockMap::iterator mi = mapBlockIndex.find(hashStop);\n             if (mi == mapBlockIndex.end())\n                 return true;\n             pindex = (*mi).second;\n@@ -4513,7 +4513,7 @@ class CMainCleanup\n     CMainCleanup() {}\n     ~CMainCleanup() {\n         // block headers\n-        std::map<uint256, CBlockIndex*>::iterator it1 = mapBlockIndex.begin();\n+        BlockMap::iterator it1 = mapBlockIndex.begin();\n         for (; it1 != mapBlockIndex.end(); it1++)\n             delete (*it1).second;\n         mapBlockIndex.clear();"
      },
      {
        "sha": "da2b5cac81dc1dc00ebfcc55ad3b0d2fb09f25c6",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -85,7 +85,8 @@ static const unsigned char REJECT_CHECKPOINT = 0x43;\n extern CScript COINBASE_FLAGS;\n extern CCriticalSection cs_main;\n extern CTxMemPool mempool;\n-extern std::map<uint256, CBlockIndex*> mapBlockIndex;\n+typedef std::map<uint256, CBlockIndex*> BlockMap;\n+extern BlockMap mapBlockIndex;\n extern uint64_t nLastBlockTx;\n extern uint64_t nLastBlockSize;\n extern const std::string strMessageMagic;"
      },
      {
        "sha": "20c1449c9248bd612a962c6f4641910aac3ba6e3",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -170,7 +170,7 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n \n     // Find the block the tx is in\n     CBlockIndex* pindex = NULL;\n-    std::map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(wtx.hashBlock);\n+    BlockMap::iterator mi = mapBlockIndex.find(wtx.hashBlock);\n     if (mi != mapBlockIndex.end())\n         pindex = (*mi).second;\n "
      },
      {
        "sha": "4b3beae20c1b37e0d12cf59562860ce910703e9b",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -392,7 +392,7 @@ Value gettxout(const Array& params, bool fHelp)\n     if (n<0 || (unsigned int)n>=coins.vout.size() || coins.vout[n].IsNull())\n         return Value::null;\n \n-    std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(pcoinsTip->GetBestBlock());\n+    BlockMap::iterator it = mapBlockIndex.find(pcoinsTip->GetBestBlock());\n     CBlockIndex *pindex = it->second;\n     ret.push_back(Pair(\"bestblock\", pindex->GetBlockHash().GetHex()));\n     if ((unsigned int)coins.nHeight == MEMPOOL_HEIGHT)"
      },
      {
        "sha": "a73641834d803d43e4e24ac1b64461df37aaeb2c",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -88,7 +88,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n \n     if (hashBlock != 0) {\n         entry.push_back(Pair(\"blockhash\", hashBlock.GetHex()));\n-        map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n+        BlockMap::iterator mi = mapBlockIndex.find(hashBlock);\n         if (mi != mapBlockIndex.end() && (*mi).second) {\n             CBlockIndex* pindex = (*mi).second;\n             if (chainActive.Contains(pindex)) {"
      },
      {
        "sha": "100d6c2bd031a23b5d9a01faaccacf0d4aab5cc6",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -1447,7 +1447,7 @@ Value listsinceblock(const Array& params, bool fHelp)\n         uint256 blockId = 0;\n \n         blockId.SetHex(params[0].get_str());\n-        std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(blockId);\n+        BlockMap::iterator it = mapBlockIndex.find(blockId);\n         if (it != mapBlockIndex.end())\n             pindex = it->second;\n     }"
      },
      {
        "sha": "d3ad4869bbea1fc06afab6f40a71052c2077fafe",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/145d5be896db4e8fda17039bed26100e38fae2f0/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/145d5be896db4e8fda17039bed26100e38fae2f0/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=145d5be896db4e8fda17039bed26100e38fae2f0",
        "patch": "@@ -2113,7 +2113,7 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n     for (std::map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); it++) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = (*it).second;\n-        std::map<uint256, CBlockIndex*>::const_iterator blit = mapBlockIndex.find(wtx.hashBlock);\n+        BlockMap::const_iterator blit = mapBlockIndex.find(wtx.hashBlock);\n         if (blit != mapBlockIndex.end() && chainActive.Contains(blit->second)) {\n             // ... which are already in a block\n             int nHeight = blit->second->nHeight;\n@@ -2233,7 +2233,7 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     }\n \n     // Is the tx in a block that's in the main chain\n-    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n+    BlockMap::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n     CBlockIndex* pindex = (*mi).second;\n@@ -2250,7 +2250,7 @@ int CMerkleTx::GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const\n     AssertLockHeld(cs_main);\n \n     // Find the block it claims to be in\n-    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n+    BlockMap::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n     CBlockIndex* pindex = (*mi).second;"
      }
    ]
  },
  {
    "sha": "8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTQxZTFlZGQ0ZDMxZDA4YjczNjBkN2U1OTY0YzFjNDBhN2FhMWI2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:03:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:05:20Z"
      },
      "message": "Use boost::unordered_map for mapBlockIndex",
      "tree": {
        "sha": "d765974a607527f381e0f9da573d08320e2e7790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d765974a607527f381e0f9da573d08320e2e7790"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "145d5be896db4e8fda17039bed26100e38fae2f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/145d5be896db4e8fda17039bed26100e38fae2f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/145d5be896db4e8fda17039bed26100e38fae2f0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8c0a743e24d666c87656b84cd0b45ebeb228351e",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
        "patch": "@@ -29,6 +29,8 @@\n #include <utility>\n #include <vector>\n \n+#include <boost/unordered_map.hpp>\n+\n class CBlockIndex;\n class CBloomFilter;\n class CInv;\n@@ -81,11 +83,15 @@ static const unsigned char REJECT_DUST = 0x41;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+struct BlockHasher\n+{\n+    size_t operator()(const uint256& hash) const { return hash.GetLow64(); }\n+};\n \n extern CScript COINBASE_FLAGS;\n extern CCriticalSection cs_main;\n extern CTxMemPool mempool;\n-typedef std::map<uint256, CBlockIndex*> BlockMap;\n+typedef boost::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\n extern BlockMap mapBlockIndex;\n extern uint64_t nLastBlockTx;\n extern uint64_t nLastBlockSize;"
      }
    ]
  },
  {
    "sha": "1e4f87f5a13e34a457b537e9d13a212e6c5b754f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTRmODdmNWExM2UzNGE0NTdiNTM3ZTlkMTNhMjEyZTZjNWI3NTRm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:03:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-04T00:27:04Z"
      },
      "message": "Use memcmp for uint256 equality/inequality",
      "tree": {
        "sha": "8b6199e305854d567e04dadfc0302ade2718ead9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b6199e305854d567e04dadfc0302ade2718ead9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e4f87f5a13e34a457b537e9d13a212e6c5b754f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e4f87f5a13e34a457b537e9d13a212e6c5b754f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e4f87f5a13e34a457b537e9d13a212e6c5b754f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e4f87f5a13e34a457b537e9d13a212e6c5b754f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a41e1edd4d31d08b7360d7e5964c1c40a7aa1b6"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6bb9a5940047e3fde06d7354ff8efd29db2932a1",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e4f87f5a13e34a457b537e9d13a212e6c5b754f/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e4f87f5a13e34a457b537e9d13a212e6c5b754f/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=1e4f87f5a13e34a457b537e9d13a212e6c5b754f",
        "patch": "@@ -10,6 +10,7 @@\n #include <stdexcept>\n #include <stdint.h>\n #include <string>\n+#include <cstring>\n #include <vector>\n \n class uint_error : public std::runtime_error {\n@@ -215,8 +216,8 @@ class base_uint\n     friend inline const base_uint operator>>(const base_uint& a, int shift) { return base_uint(a) >>= shift; }\n     friend inline const base_uint operator<<(const base_uint& a, int shift) { return base_uint(a) <<= shift; }\n     friend inline const base_uint operator*(const base_uint& a, uint32_t b) { return base_uint(a) *= b; }\n-    friend inline bool operator==(const base_uint& a, const base_uint& b) { return a.CompareTo(b) == 0; }\n-    friend inline bool operator!=(const base_uint& a, const base_uint& b) { return a.CompareTo(b) != 0; }\n+    friend inline bool operator==(const base_uint& a, const base_uint& b) { return memcmp(a.pn, b.pn, sizeof(a.pn)) == 0; }\n+    friend inline bool operator!=(const base_uint& a, const base_uint& b) { return memcmp(a.pn, b.pn, sizeof(a.pn)) != 0; }\n     friend inline bool operator>(const base_uint& a, const base_uint& b) { return a.CompareTo(b) > 0; }\n     friend inline bool operator<(const base_uint& a, const base_uint& b) { return a.CompareTo(b) < 0; }\n     friend inline bool operator>=(const base_uint& a, const base_uint& b) { return a.CompareTo(b) >= 0; }"
      }
    ]
  }
]