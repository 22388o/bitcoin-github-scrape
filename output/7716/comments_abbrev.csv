morcos,2016-03-18T19:00:16Z,This was tested by running `bip68-1112-113-p2p.py` from #7648 against the binary built in this PR.\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-198496243,198496243,
btcdrak,2016-03-28T21:55:36Z,@morcos shouldnt this backport include the `bip68-1112-113-p2p.py` tests?\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-202596084,202596084,
morcos,2016-03-29T01:01:20Z,"@btcdrak I thought I commented about that, but now I'm not sure where I wrote that.\nSome of those python tests are quite annoying to backport as I discovered when backporting the `bip68-sequence.py`.  I didn't want to mess with whatever was going to have to be done to backport the changes to the comparison test framework itself.  But because of the way the comparison test works, its easy to start",https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-202650097,202650097,
btcdrak,2016-03-29T08:42:04Z,OK. I tested the backport by compiling then switching to `master` and running the `bip68-1112-113-p2p.py` and `bip9-softforks.py` tests using the `0.11` binaries. All checks out. (note switching back to master requires a tree clean and rerun of autogen/configure).\n\nACK afb99c6\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-202779932,202779932,
NicolasDorier,2016-03-31T11:45:31Z,"Not sure if big deal but no Lockpoint ? (982670c333aff6d5660c18ed00931df764733529 removeForReorg does not seem to exist in 0.11 though)\n\nEDIT: nevermind, I forgot that 0.11 do have not the perf improvement that morcos introduced in 0.12 which assume the mempool is not corrupted, so 982670c333aff6d5660c18ed00931df764733529 is not needed, which is why test_nonzero_locks was adapted.\n",https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-203894306,203894306,
NicolasDorier,2016-03-31T11:56:47Z,ACK afb99c68c538cb045071f6ebe0dd2b69ad82656f\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-203896945,203896945,
btcdrak,2016-03-31T11:58:47Z,"> Not sure if big deal but no Lockpoint ? \n\n@NicolasDorier not for `0.11`. iirc, lockpoints were introduced to preserve the speed improvements to CNB() that were introduced in 0.12.\n",https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-203897729,203897729,
sdaftuar,2016-03-31T16:35:32Z,"ACK.  Reviewed each backported commit.\n\nAlso, if anyone else is trying to verify that `bip68-112-113-p2p.py` from master passes when run against this 0.11 binary, note that after #7751 the RPC tests will encode decimal values as strings, which can fail when run against an 0.11 node (it wasn't until 0.12 that `AmountFromValue()` will accept strings).  However, after reverting d7b80b54fbb73acc92dd",https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-204012016,204012016,
afk11,2016-04-04T13:27:03Z,ACK afb99c6 - verified using sdaftuars method\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-205295640,205295640,
morcos,2016-05-18T17:00:36Z,Closing due to lack of interest in another 0.11 release.\nSeems ok not to backport CSV to 0.11.\nI can reopen if that changes for some reason.\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-220091890,220091890,
luke-jr,2016-05-18T18:19:19Z,It would be a serious problem if CSV were to activate without a 0.11 release. This should just wait for the fixes in #7935\n,https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-220113923,220113923,
jtimon,2016-05-20T12:05:45Z,"If it gets the review, I don't see any reason not to release another 0.11. I mean, if people want to code it back to 0.8 (I think that's highly unlikely), I don't see the problem. Maybe just clearly warn users that they shouldn't expect further maintenance for 0.11 (I believe we already say ""only expect the last 2 versions to be maintained"" somewhere anyway). \n",https://github.com/bitcoin/bitcoin/pull/7716#issuecomment-220588455,220588455,
