[
  {
    "sha": "d63ff6265b0c6ae30efcbb9120d4db419606198a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjNmZjYyNjViMGM2YWUzMGVmY2JiOTEyMGQ0ZGI0MTk2MDYxOThh",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-11-27T03:32:30Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-12-21T21:49:48Z"
      },
      "message": "Make nWalletDBUpdated atomic to avoid a potential race.",
      "tree": {
        "sha": "a9ea9ba1bcc85f854b6164d8e9689a95eaf5bc15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9ea9ba1bcc85f854b6164d8e9689a95eaf5bc15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d63ff6265b0c6ae30efcbb9120d4db419606198a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63ff6265b0c6ae30efcbb9120d4db419606198a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d63ff6265b0c6ae30efcbb9120d4db419606198a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63ff6265b0c6ae30efcbb9120d4db419606198a/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76fec09d878d6dbf214bdb6228d480bd9195db4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76fec09d878d6dbf214bdb6228d480bd9195db4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76fec09d878d6dbf214bdb6228d480bd9195db4c"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 43,
      "deletions": 33
    },
    "files": [
      {
        "sha": "4278e56c89991463657dcbadd0c393cc0ef70137",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=d63ff6265b0c6ae30efcbb9120d4db419606198a",
        "patch": "@@ -24,9 +24,6 @@\n using namespace std;\n \n \n-unsigned int nWalletDBUpdated;\n-\n-\n //\n // CDB\n //"
      },
      {
        "sha": "74e4a3ca1d2369576e24f30783288c5ed2a18303",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=d63ff6265b0c6ae30efcbb9120d4db419606198a",
        "patch": "@@ -23,8 +23,6 @@\n static const unsigned int DEFAULT_WALLET_DBLOGSIZE = 100;\n static const bool DEFAULT_WALLET_PRIVDB = true;\n \n-extern unsigned int nWalletDBUpdated;\n-\n class CDBEnv\n {\n private:"
      },
      {
        "sha": "15001776f143a4365174884ee3d28eb2bdb79124",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d63ff6265b0c6ae30efcbb9120d4db419606198a",
        "patch": "@@ -3508,7 +3508,7 @@ bool CWallet::InitLoadWallet()\n         walletInstance->ScanForWalletTransactions(pindexRescan, true);\n         LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n         walletInstance->SetBestChain(chainActive.GetLocator());\n-        nWalletDBUpdated++;\n+        CWalletDB::IncrementUpdateCounter();\n \n         // Restore wallet transaction metadata after -zapwallettxes=1\n         if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")"
      },
      {
        "sha": "e31c59b22c980c7ec678faa3531e360a637f5560",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 26,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=d63ff6265b0c6ae30efcbb9120d4db419606198a",
        "patch": "@@ -15,6 +15,8 @@\n #include \"utiltime.h\"\n #include \"wallet/wallet.h\"\n \n+#include <atomic>\n+\n #include <boost/version.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n@@ -24,51 +26,53 @@ using namespace std;\n \n static uint64_t nAccountingEntryNumber = 0;\n \n+static std::atomic<unsigned int> nWalletDBUpdateCounter;\n+\n //\n // CWalletDB\n //\n \n bool CWalletDB::WriteName(const string& strAddress, const string& strName)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(make_pair(string(\"name\"), strAddress), strName);\n }\n \n bool CWalletDB::EraseName(const string& strAddress)\n {\n     // This should only be used for sending addresses, never for receiving addresses,\n     // receiving addresses must always have an address book entry if they're not change return.\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Erase(make_pair(string(\"name\"), strAddress));\n }\n \n bool CWalletDB::WritePurpose(const string& strAddress, const string& strPurpose)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(make_pair(string(\"purpose\"), strAddress), strPurpose);\n }\n \n bool CWalletDB::ErasePurpose(const string& strPurpose)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Erase(make_pair(string(\"purpose\"), strPurpose));\n }\n \n bool CWalletDB::WriteTx(const CWalletTx& wtx)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::make_pair(std::string(\"tx\"), wtx.GetHash()), wtx);\n }\n \n bool CWalletDB::EraseTx(uint256 hash)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Erase(std::make_pair(std::string(\"tx\"), hash));\n }\n \n bool CWalletDB::WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata& keyMeta)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n \n     if (!Write(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n                keyMeta, false))\n@@ -88,7 +92,7 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n                                 const CKeyMetadata &keyMeta)\n {\n     const bool fEraseUnencryptedKey = true;\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n \n     if (!Write(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n             keyMeta))\n@@ -106,31 +110,31 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n \n bool CWalletDB::WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::make_pair(std::string(\"mkey\"), nID), kMasterKey, true);\n }\n \n bool CWalletDB::WriteCScript(const uint160& hash, const CScript& redeemScript)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::make_pair(std::string(\"cscript\"), hash), *(const CScriptBase*)(&redeemScript), false);\n }\n \n bool CWalletDB::WriteWatchOnly(const CScript &dest)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)), '1');\n }\n \n bool CWalletDB::EraseWatchOnly(const CScript &dest)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Erase(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)));\n }\n \n bool CWalletDB::WriteBestBlock(const CBlockLocator& locator)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     Write(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n     return Write(std::string(\"bestblock_nomerkle\"), locator);\n }\n@@ -143,13 +147,13 @@ bool CWalletDB::ReadBestBlock(CBlockLocator& locator)\n \n bool CWalletDB::WriteOrderPosNext(int64_t nOrderPosNext)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::string(\"orderposnext\"), nOrderPosNext);\n }\n \n bool CWalletDB::WriteDefaultKey(const CPubKey& vchPubKey)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::string(\"defaultkey\"), vchPubKey);\n }\n \n@@ -160,13 +164,13 @@ bool CWalletDB::ReadPool(int64_t nPool, CKeyPool& keypool)\n \n bool CWalletDB::WritePool(int64_t nPool, const CKeyPool& keypool)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::make_pair(std::string(\"pool\"), nPool), keypool);\n }\n \n bool CWalletDB::ErasePool(int64_t nPool)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Erase(std::make_pair(std::string(\"pool\"), nPool));\n }\n \n@@ -780,20 +784,20 @@ void ThreadFlushWalletDB(const string& strFile)\n     if (!GetBoolArg(\"-flushwallet\", DEFAULT_FLUSHWALLET))\n         return;\n \n-    unsigned int nLastSeen = nWalletDBUpdated;\n-    unsigned int nLastFlushed = nWalletDBUpdated;\n+    unsigned int nLastSeen = CWalletDB::GetUpdateCounter();\n+    unsigned int nLastFlushed = CWalletDB::GetUpdateCounter();\n     int64_t nLastWalletUpdate = GetTime();\n     while (true)\n     {\n         MilliSleep(500);\n \n-        if (nLastSeen != nWalletDBUpdated)\n+        if (nLastSeen != CWalletDB::GetUpdateCounter())\n         {\n-            nLastSeen = nWalletDBUpdated;\n+            nLastSeen = CWalletDB::GetUpdateCounter();\n             nLastWalletUpdate = GetTime();\n         }\n \n-        if (nLastFlushed != nWalletDBUpdated && GetTime() - nLastWalletUpdate >= 2)\n+        if (nLastFlushed != CWalletDB::GetUpdateCounter() && GetTime() - nLastWalletUpdate >= 2)\n         {\n             TRY_LOCK(bitdb.cs_db,lockDb);\n             if (lockDb)\n@@ -814,7 +818,7 @@ void ThreadFlushWalletDB(const string& strFile)\n                     if (_mi != bitdb.mapFileUseCount.end())\n                     {\n                         LogPrint(\"db\", \"Flushing %s\\n\", strFile);\n-                        nLastFlushed = nWalletDBUpdated;\n+                        nLastFlushed = CWalletDB::GetUpdateCounter();\n                         int64_t nStart = GetTimeMillis();\n \n                         // Flush wallet file so it's self contained\n@@ -921,19 +925,29 @@ bool CWalletDB::Recover(CDBEnv& dbenv, const std::string& filename)\n \n bool CWalletDB::WriteDestData(const std::string &address, const std::string &key, const std::string &value)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)), value);\n }\n \n bool CWalletDB::EraseDestData(const std::string &address, const std::string &key)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Erase(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)));\n }\n \n \n bool CWalletDB::WriteHDChain(const CHDChain& chain)\n {\n-    nWalletDBUpdated++;\n+    nWalletDBUpdateCounter++;\n     return Write(std::string(\"hdchain\"), chain);\n }\n+\n+void CWalletDB::IncrementUpdateCounter()\n+{\n+    nWalletDBUpdateCounter++;\n+}\n+\n+unsigned int CWalletDB::GetUpdateCounter()\n+{\n+    return nWalletDBUpdateCounter;\n+}"
      },
      {
        "sha": "d7036aabdd2cfe0549cd5eb72c1b791b63180410",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63ff6265b0c6ae30efcbb9120d4db419606198a/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=d63ff6265b0c6ae30efcbb9120d4db419606198a",
        "patch": "@@ -176,10 +176,11 @@ class CWalletDB : public CDB\n     //! write the hdchain model (external chain child index counter)\n     bool WriteHDChain(const CHDChain& chain);\n \n+    static void IncrementUpdateCounter();\n+    static unsigned int GetUpdateCounter();\n private:\n     CWalletDB(const CWalletDB&);\n     void operator=(const CWalletDB&);\n-\n };\n \n void ThreadFlushWalletDB(const std::string& strFile);"
      }
    ]
  }
]