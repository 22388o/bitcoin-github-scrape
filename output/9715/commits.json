[
  {
    "sha": "2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2JkMTE5NmI3YTA3YjA4Y2ZkOTE0MTdmMmU4ZGRkMDlkOWYyMDgy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-07T20:23:17Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-07T22:44:46Z"
      },
      "message": "Disconnect peers which we do not receive VERACKs from within 60 sec",
      "tree": {
        "sha": "9498b7cb6c5713d3cbe88a94a7c131af0072dab8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9498b7cb6c5713d3cbe88a94a7c131af0072dab8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b709fe7ffc44ae14bbd2403cdfbfa4fcf94cef6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b709fe7ffc44ae14bbd2403cdfbfa4fcf94cef6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b709fe7ffc44ae14bbd2403cdfbfa4fcf94cef6b"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3394f8a08ea43a72fa4d19c58fa3df51f31c0d78",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
        "patch": "@@ -1323,6 +1323,11 @@ void CConnman::ThreadSocketHandler()\n                     LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * (GetTimeMicros() - pnode->nPingUsecStart));\n                     pnode->fDisconnect = true;\n                 }\n+                else if (!pnode->fSuccessfullyConnected)\n+                {\n+                    LogPrintf(\"version handshake timeout from %d\\n\", pnode->id);\n+                    pnode->fDisconnect = true;\n+                }\n             }\n         }\n         {"
      }
    ]
  },
  {
    "sha": "8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YWFiYTdhNmI3MzI3YTRjODMzMDhjNjhiNTBmMDdlZDRjMmFhNjc1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-07T22:35:57Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-08T17:05:13Z"
      },
      "message": "qa: mininode learns when a socket connects, not its first action",
      "tree": {
        "sha": "27f1a68f53e54b8817e835888f136d8a38588bca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27f1a68f53e54b8817e835888f136d8a38588bca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cbd1196b7a07b08cfd91417f2e8ddd09d9f2082"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 24,
      "deletions": 12
    },
    "files": [
      {
        "sha": "696a065282c624125718ba54bb58674723115bdf",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 24,
        "deletions": 12,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
        "patch": "@@ -1614,7 +1614,7 @@ class NodeConn(asyncore.dispatcher):\n         \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\",   # regtest\n     }\n \n-    def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=NODE_NETWORK):\n+    def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=NODE_NETWORK, send_version=True):\n         asyncore.dispatcher.__init__(self, map=mininode_socket_map)\n         self.log = logging.getLogger(\"NodeConn(%s:%d)\" % (dstaddr, dstport))\n         self.dstaddr = dstaddr\n@@ -1631,14 +1631,16 @@ def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=NODE\n         self.disconnect = False\n         self.nServices = 0\n \n-        # stuff version msg into sendbuf\n-        vt = msg_version()\n-        vt.nServices = services\n-        vt.addrTo.ip = self.dstaddr\n-        vt.addrTo.port = self.dstport\n-        vt.addrFrom.ip = \"0.0.0.0\"\n-        vt.addrFrom.port = 0\n-        self.send_message(vt, True)\n+        if send_version:\n+            # stuff version msg into sendbuf\n+            vt = msg_version()\n+            vt.nServices = services\n+            vt.addrTo.ip = self.dstaddr\n+            vt.addrTo.port = self.dstport\n+            vt.addrFrom.ip = \"0.0.0.0\"\n+            vt.addrFrom.port = 0\n+            self.send_message(vt, True)\n+\n         print('MiniNode: Connecting to Bitcoin Node IP # ' + dstaddr + ':' \\\n             + str(dstport))\n \n@@ -1652,8 +1654,9 @@ def show_debug_msg(self, msg):\n         self.log.debug(msg)\n \n     def handle_connect(self):\n-        self.show_debug_msg(\"MiniNode: Connected & Listening: \\n\")\n-        self.state = \"connected\"\n+        if self.state != \"connected\":\n+            self.show_debug_msg(\"MiniNode: Connected & Listening: \\n\")\n+            self.state = \"connected\"\n \n     def handle_close(self):\n         self.show_debug_msg(\"MiniNode: Closing Connection to %s:%d... \"\n@@ -1681,11 +1684,20 @@ def readable(self):\n \n     def writable(self):\n         with mininode_lock:\n+            pre_connection = self.state == \"connecting\"\n             length = len(self.sendbuf)\n-        return (length > 0)\n+        return (length > 0 or pre_connection)\n \n     def handle_write(self):\n         with mininode_lock:\n+            # asyncore does not expose socket connection, only the first read/write\n+            # event, thus we must check connection manually here to know when we\n+            # actually connect\n+            if self.state == \"connecting\":\n+                self.handle_connect()\n+            if not self.writable():\n+                return\n+\n             try:\n                 sent = self.send(self.sendbuf)\n             except:"
      }
    ]
  },
  {
    "sha": "b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDM2ZjkyZjcyNzY4NmNkOGExMGRkZmY1Y2QyMmVlNjM2NmZlOGM4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-07T22:40:28Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-08T17:05:13Z"
      },
      "message": "qa: Expose on-connection to mininode listeners",
      "tree": {
        "sha": "d09f40037676273d0567db612897e32d2d62e263",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d09f40037676273d0567db612897e32d2d62e263"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b436f92f727686cd8a10ddff5cd22ee6366fe8c8/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8aaba7a6b7327a4c83308c68b50f07ed4c2aa675"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5b563c58ae1e1a17e50caa42f165a28fd3d739d7",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b436f92f727686cd8a10ddff5cd22ee6366fe8c8/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b436f92f727686cd8a10ddff5cd22ee6366fe8c8/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
        "patch": "@@ -1540,6 +1540,7 @@ def on_ping(self, conn, message):\n         if conn.ver_send > BIP0031_VERSION:\n             conn.send_message(msg_pong(message.nonce))\n     def on_reject(self, conn, message): pass\n+    def on_open(self, conn): pass\n     def on_close(self, conn): pass\n     def on_mempool(self, conn): pass\n     def on_pong(self, conn, message): pass\n@@ -1657,6 +1658,7 @@ def handle_connect(self):\n         if self.state != \"connected\":\n             self.show_debug_msg(\"MiniNode: Connected & Listening: \\n\")\n             self.state = \"connected\"\n+            self.cb.on_open(self)\n \n     def handle_close(self):\n         self.show_debug_msg(\"MiniNode: Closing Connection to %s:%d... \""
      }
    ]
  },
  {
    "sha": "66f861ade9db108f979a9bdf8d90e8fca028e2a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmY4NjFhZGU5ZGIxMDhmOTc5YTliZGY4ZDkwZThmY2EwMjhlMmEz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-07T22:43:36Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-09T22:34:03Z"
      },
      "message": "Add a test for P2P inactivity timeouts",
      "tree": {
        "sha": "ca572ce1139535658ee44eafa7ee63d19ad204f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca572ce1139535658ee44eafa7ee63d19ad204f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66f861ade9db108f979a9bdf8d90e8fca028e2a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66f861ade9db108f979a9bdf8d90e8fca028e2a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66f861ade9db108f979a9bdf8d90e8fca028e2a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66f861ade9db108f979a9bdf8d90e8fca028e2a3/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b436f92f727686cd8a10ddff5cd22ee6366fe8c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b436f92f727686cd8a10ddff5cd22ee6366fe8c8"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 104,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2cf4adb9a0431bb1e49b092bd40a4914b2e8b34a",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66f861ade9db108f979a9bdf8d90e8fca028e2a3/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66f861ade9db108f979a9bdf8d90e8fca028e2a3/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=66f861ade9db108f979a9bdf8d90e8fca028e2a3",
        "patch": "@@ -168,6 +168,7 @@\n     # vv Tests less than 2m vv\n     'bip68-sequence.py',\n     'getblocktemplate_longpoll.py',\n+    'p2p-timeouts.py',\n     # vv Tests less than 60s vv\n     'bip9-softforks.py',\n     'p2p-feefilter.py',"
      },
      {
        "sha": "f1b190587d8efa7d43584507b13e390ca3bbe711",
        "filename": "qa/rpc-tests/p2p-timeouts.py",
        "status": "added",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66f861ade9db108f979a9bdf8d90e8fca028e2a3/qa/rpc-tests/p2p-timeouts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66f861ade9db108f979a9bdf8d90e8fca028e2a3/qa/rpc-tests/p2p-timeouts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-timeouts.py?ref=66f861ade9db108f979a9bdf8d90e8fca028e2a3",
        "patch": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\" TimeoutsTest -- test various net timeouts (only in extended tests)\n+\n+- Create three bitcoind nodes:\n+\n+    no_verack_node - we never send a verack in response to their version\n+    no_version_node - we never send a version (only a ping)\n+    no_send_node - we never send any P2P message.\n+\n+- Start all three nodes\n+- Wait 1 second\n+- Assert that we're connected\n+- Send a ping to no_verack_node and no_version_node\n+- Wait 30 seconds\n+- Assert that we're still connected\n+- Send a ping to no_verack_node and no_version_node\n+- Wait 31 seconds\n+- Assert that we're no longer connected (timeout to receive version/verack is 60 seconds)\n+\"\"\"\n+\n+from time import sleep\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class TestNode(SingleNodeConnCB):\n+    def __init__(self):\n+        SingleNodeConnCB.__init__(self)\n+        self.connected = False\n+        self.received_version = False\n+\n+    def on_open(self, conn):\n+        self.connected = True\n+\n+    def on_close(self, conn):\n+        self.connected = False\n+\n+    def on_version(self, conn, message):\n+        # Don't send a verack in response\n+        self.received_version = True\n+\n+class TimeoutsTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.nodes = []\n+\n+        # Start up node0 to be a version 1, pre-segwit node.\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, \n+                [[\"-debug\", \"-logtimemicros=1\"]])\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.\n+        self.no_verack_node = TestNode() # never send verack\n+        self.no_version_node = TestNode() # never send version (just ping)\n+        self.no_send_node = TestNode() # never send anything\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], self.no_verack_node))\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], self.no_version_node, send_version=False))\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], self.no_send_node, send_version=False))\n+        self.no_verack_node.add_connection(connections[0])\n+        self.no_version_node.add_connection(connections[1])\n+        self.no_send_node.add_connection(connections[2])\n+\n+        NetworkThread().start()  # Start up network handling in another thread\n+\n+        sleep(1)\n+\n+        assert(self.no_verack_node.connected)\n+        assert(self.no_version_node.connected)\n+        assert(self.no_send_node.connected)\n+\n+        ping_msg = msg_ping()\n+        connections[0].send_message(ping_msg)\n+        connections[1].send_message(ping_msg)\n+\n+        sleep(30)\n+\n+        assert(self.no_verack_node.received_version)\n+\n+        assert(self.no_verack_node.connected)\n+        assert(self.no_version_node.connected)\n+        assert(self.no_send_node.connected)\n+\n+        connections[0].send_message(ping_msg)\n+        connections[1].send_message(ping_msg)\n+\n+        sleep(31)\n+\n+        assert(not self.no_verack_node.connected)\n+        assert(not self.no_version_node.connected)\n+        assert(not self.no_send_node.connected)\n+\n+if __name__ == '__main__':\n+    TimeoutsTest().main()"
      }
    ]
  }
]