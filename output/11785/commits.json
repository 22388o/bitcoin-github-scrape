[
  {
    "sha": "8aaaa68432f569f9905b4085b645554db03226b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YWFhYTY4NDMyZjU2OWY5OTA1YjQwODViNjQ1NTU0ZGIwMzIyNmI3",
    "commit": {
      "author": {
        "name": "John Fremlin",
        "email": "john@fremlin.org",
        "date": "2017-11-29T04:54:20Z"
      },
      "committer": {
        "name": "John Fremlin",
        "email": "john@fremlin.org",
        "date": "2017-12-17T18:00:24Z"
      },
      "message": "After requesting the desired number, try to increase file-descriptors to the maximum allowed",
      "tree": {
        "sha": "5827af80f1826bc6da26098c935099c95d8b29f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5827af80f1826bc6da26098c935099c95d8b29f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8aaaa68432f569f9905b4085b645554db03226b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aaaa68432f569f9905b4085b645554db03226b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8aaaa68432f569f9905b4085b645554db03226b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aaaa68432f569f9905b4085b645554db03226b7/comments",
    "author": {
      "login": "vii",
      "id": 37696,
      "node_id": "MDQ6VXNlcjM3Njk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/37696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vii",
      "html_url": "https://github.com/vii",
      "followers_url": "https://api.github.com/users/vii/followers",
      "following_url": "https://api.github.com/users/vii/following{/other_user}",
      "gists_url": "https://api.github.com/users/vii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vii/subscriptions",
      "organizations_url": "https://api.github.com/users/vii/orgs",
      "repos_url": "https://api.github.com/users/vii/repos",
      "events_url": "https://api.github.com/users/vii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vii/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vii",
      "id": 37696,
      "node_id": "MDQ6VXNlcjM3Njk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/37696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vii",
      "html_url": "https://github.com/vii",
      "followers_url": "https://api.github.com/users/vii/followers",
      "following_url": "https://api.github.com/users/vii/following{/other_user}",
      "gists_url": "https://api.github.com/users/vii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vii/subscriptions",
      "organizations_url": "https://api.github.com/users/vii/orgs",
      "repos_url": "https://api.github.com/users/vii/repos",
      "events_url": "https://api.github.com/users/vii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vii/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62fdf9b07087b80d2142799bdd2324f61483359d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62fdf9b07087b80d2142799bdd2324f61483359d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62fdf9b07087b80d2142799bdd2324f61483359d"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 20,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a4e5c182d61f91aeded7d84aed69dba51263804d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aaaa68432f569f9905b4085b645554db03226b7/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aaaa68432f569f9905b4085b645554db03226b7/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=8aaaa68432f569f9905b4085b645554db03226b7",
        "patch": "@@ -713,25 +713,40 @@ bool TruncateFile(FILE *file, unsigned int length) {\n }\n \n /**\n- * this function tries to raise the file descriptor limit to the requested number.\n- * It returns the actual file descriptor limit (which may be more or less than nMinFD)\n+ * this function tries to raise the file descriptor limit to the most that we can support.\n+ * It returns the actual file descriptor limit (which may be more or less than nMinFD).\n  */\n int RaiseFileDescriptorLimit(int nMinFD) {\n #if defined(WIN32)\n     return 2048;\n #else\n     struct rlimit limitFD;\n     if (getrlimit(RLIMIT_NOFILE, &limitFD) != -1) {\n+        // first request at least the amount passed in\n         if (limitFD.rlim_cur < (rlim_t)nMinFD) {\n             limitFD.rlim_cur = nMinFD;\n             if (limitFD.rlim_cur > limitFD.rlim_max)\n                 limitFD.rlim_cur = limitFD.rlim_max;\n             setrlimit(RLIMIT_NOFILE, &limitFD);\n-            getrlimit(RLIMIT_NOFILE, &limitFD);\n         }\n-        return limitFD.rlim_cur;\n+        // then try to raise to the max we can\n+        if (limitFD.rlim_cur < limitFD.rlim_max) {\n+            limitFD.rlim_cur = limitFD.rlim_max;\n+            setrlimit(RLIMIT_NOFILE, &limitFD);\n+        }\n+\n+        if (getrlimit(RLIMIT_NOFILE, &limitFD) != -1) {\n+            if (limitFD.rlim_cur < (rlim_t)nMinFD) {\n+                LogPrintf(\"RaiseFileDescriptorLimit: could not raise limit to %lu fds, only %lu\\n\",\n+                          (unsigned long)nMinFD,\n+                          (unsigned long)limitFD.rlim_cur);\n+            }\n+            return limitFD.rlim_cur;\n+        }\n     }\n-    return nMinFD; // getrlimit failed, assume it's fine\n+    LogPrintf(\"RaiseFileDescriptorLimit error: getrlimit(RLIMIT_NOFILE) returned %s\\n\", strerror(errno));\n+\n+    return nMinFD; // getrlimit failed, try to proceed\n #endif\n }\n "
      }
    ]
  }
]