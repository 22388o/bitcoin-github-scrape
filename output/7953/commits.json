[
  {
    "sha": "f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTBlZmJmZWVmOWNkNzMzYWE3NTkwZmRmNTgxZmY4MmI5OTljNGI1",
    "commit": {
      "author": {
        "name": "Andrew",
        "email": "achow101@gmail.com",
        "date": "2016-04-26T17:17:00Z"
      },
      "committer": {
        "name": "Andrew",
        "email": "achow101@gmail.com",
        "date": "2016-04-27T10:43:39Z"
      },
      "message": "Create signmessagewithprivkey rpc\n\nNew rpc 'signmessagewithprivkey' which takes a private key to sign a message without using the wallet.",
      "tree": {
        "sha": "73d4e70aa4d17d17a1b68173e1506fb76b7245d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73d4e70aa4d17d17a1b68173e1506fb76b7245d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f90efbfeef9cd733aa7590fdf581ff82b999c4b5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e26b62093ae21e89ed7d36a24a6b863f38ec631d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e26b62093ae21e89ed7d36a24a6b863f38ec631d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e26b62093ae21e89ed7d36a24a6b863f38ec631d"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "09f51857815e27601b876c8171b7586a165237ea",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f90efbfeef9cd733aa7590fdf581ff82b999c4b5/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f90efbfeef9cd733aa7590fdf581ff82b999c4b5/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
        "patch": "@@ -366,6 +366,48 @@ UniValue verifymessage(const UniValue& params, bool fHelp)\n     return (pubkey.GetID() == keyID);\n }\n \n+UniValue signmessagewithprivkey(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"signmessagewithprivkey \\\"privkey\\\" \\\"message\\\"\\n\"\n+            \"\\nSign a message with the private key of an address\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"privkey\\\"         (string, required) The private key to sign the message with.\\n\"\n+            \"2. \\\"message\\\"         (string, required) The message to create a signature of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"signature\\\"          (string) The signature of the message encoded in base 64\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate the signature\\n\"\n+            + HelpExampleCli(\"signmessagewithprivkey\", \"\\\"privkey\\\" \\\"my message\\\"\") +\n+            \"\\nVerify the signature\\n\"\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            \"\\nAs json rpc\\n\"\n+            + HelpExampleRpc(\"signmessagewithprivkey\", \"\\\"privkey\\\", \\\"my message\\\"\")\n+        );\n+\n+    string strPrivkey = params[0].get_str();\n+    string strMessage = params[1].get_str();\n+\n+    CBitcoinSecret vchSecret;\n+    bool fGood = vchSecret.SetString(strPrivkey);\n+    if (!fGood)\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+    CKey key = vchSecret.GetKey();\n+    if (!key.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+\n+    CHashWriter ss(SER_GETHASH, 0);\n+    ss << strMessageMagic;\n+    ss << strMessage;\n+\n+    vector<unsigned char> vchSig;\n+    if (!key.SignCompact(ss.GetHash(), vchSig))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Sign failed\");\n+\n+    return EncodeBase64(&vchSig[0], vchSig.size());\n+}\n+\n UniValue setmocktime(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -404,6 +446,7 @@ static const CRPCCommand commands[] =\n     { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n     { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n     { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n+    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n \n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            true  },"
      }
    ]
  },
  {
    "sha": "7db0ecb90c80bd4995bedf8c2982e9a22345ca65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGIwZWNiOTBjODBiZDQ5OTViZWRmOGMyOTgyZTlhMjIzNDVjYTY1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101@gmail.com",
        "date": "2016-04-27T19:18:20Z"
      },
      "committer": {
        "name": "Andrew",
        "email": "achow101@gmail.com",
        "date": "2016-04-28T18:58:14Z"
      },
      "message": "Test for signing messages\n\nNew rpc test for signing and verifying messages.",
      "tree": {
        "sha": "3550a35888cdb3bb355df24327d52270941fb03d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3550a35888cdb3bb355df24327d52270941fb03d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7db0ecb90c80bd4995bedf8c2982e9a22345ca65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7db0ecb90c80bd4995bedf8c2982e9a22345ca65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7db0ecb90c80bd4995bedf8c2982e9a22345ca65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7db0ecb90c80bd4995bedf8c2982e9a22345ca65/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f90efbfeef9cd733aa7590fdf581ff82b999c4b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f90efbfeef9cd733aa7590fdf581ff82b999c4b5"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "26142c35e99929372304fb5a2d24314058f83f00",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7db0ecb90c80bd4995bedf8c2982e9a22345ca65/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7db0ecb90c80bd4995bedf8c2982e9a22345ca65/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=7db0ecb90c80bd4995bedf8c2982e9a22345ca65",
        "patch": "@@ -123,6 +123,7 @@\n     'abandonconflict.py',\n     'p2p-versionbits-warning.py',\n     'importprunedfunds.py',\n+    'signmessages.py'\n ]\n if ENABLE_ZMQ:\n     testScripts.append('zmq_test.py')"
      },
      {
        "sha": "ff22f35300a4b491c587f1ee1a77ce38a694630f",
        "filename": "qa/rpc-tests/signmessages.py",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7db0ecb90c80bd4995bedf8c2982e9a22345ca65/qa/rpc-tests/signmessages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7db0ecb90c80bd4995bedf8c2982e9a22345ca65/qa/rpc-tests/signmessages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signmessages.py?ref=7db0ecb90c80bd4995bedf8c2982e9a22345ca65",
        "patch": "@@ -0,0 +1,40 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+\n+class SignMessagesTest(BitcoinTestFramework):\n+    \"\"\"Tests RPC commands for signing and verifying messages.\"\"\"\n+\n+    def setup_chain(self):\n+        print('Initializing test directory ' + self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 1)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(1, self.options.tmpdir)\n+        self.is_network_split = False\n+\n+    def run_test(self):\n+        message = 'This is just a test message'\n+\n+        # Test the signing with a privkey\n+        privKey = 'cUeKHd5orzT3mz8P9pxyREHfsWtVfgsfDjiZZBcjUBAaGk1BTj7N'\n+        address = 'mpLQjfK79b7CCV4VMJWEWAj5Mpx8Up5zxB'\n+        signature = self.nodes[0].signmessagewithprivkey(privKey, message)\n+\n+        # Verify the message\n+        assert(self.nodes[0].verifymessage(address, signature, message))\n+\n+        # Test the signing with an address with wallet\n+        address = self.nodes[0].getnewaddress()\n+        signature = self.nodes[0].signmessage(address, message)\n+\n+        # Verify the message\n+        assert(self.nodes[0].verifymessage(address, signature, message))\n+\n+if __name__ == '__main__':\n+    SignMessagesTest().main()"
      }
    ]
  }
]