laanwj,2016-04-27T12:00:04Z,utACK https://github.com/bitcoin/bitcoin/pull/7953/commits/f90efbfeef9cd733aa7590fdf581ff82b999c4b5\n,https://github.com/bitcoin/bitcoin/pull/7953#issuecomment-215060877,215060877,
jonasschnelli,2016-04-27T12:06:24Z,utACK f90efbfeef9cd733aa7590fdf581ff82b999c4b5\n,https://github.com/bitcoin/bitcoin/pull/7953#issuecomment-215062017,215062017,
paveljanik,2016-04-27T12:17:13Z,ACK https://github.com/bitcoin/bitcoin/commit/f90efbfeef9cd733aa7590fdf581ff82b999c4b5\n\n@jonasschnelli Right. We should also recommend using `-stdin` for this when document this new RPC in release notes.\n,https://github.com/bitcoin/bitcoin/pull/7953#issuecomment-215064541,215064541,
paveljanik,2016-04-27T15:58:49Z,Can you please write some test for this new RPC?\n,https://github.com/bitcoin/bitcoin/pull/7953#issuecomment-215130273,215130273,
achow101,2016-04-27T19:20:17Z,@paveljanik I've added a test. I think I did it correctly.\n,https://github.com/bitcoin/bitcoin/pull/7953#issuecomment-215199579,215199579,
jonasschnelli,2016-04-29T12:44:43Z,Tested ACK.\nBinaries: https://bitcoin.jonasschnelli.ch/pulls/7953/\n,https://github.com/bitcoin/bitcoin/pull/7953#issuecomment-215701200,215701200,
paveljanik,2016-04-27T05:07:53Z,You do not need `HelpRequiringPassphrase` here. It is unavailable in no-wallet builds (see https://travis-ci.org/bitcoin/bitcoin/jobs/126001935#L1864).\n,https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61204507,61204507,src/rpc/misc.cpp
paveljanik,2016-04-27T05:17:26Z,This has to be `signmessagewithprivkey` instead of `signmessage`.\n,https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61204932,61204932,src/rpc/misc.cpp
achow101,2016-04-27T11:37:10Z,Fixed\n,https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61242868,61242868,src/rpc/misc.cpp
achow101,2016-04-27T11:37:20Z,Fixed\n,https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61242885,61242885,src/rpc/misc.cpp
jonasschnelli,2016-04-27T12:05:55Z,"IMO `strPrivkey`, `vchSecret` and `params[0]` should be mem-cleansed before the function returns.\nI guess `key` RAII -cleans itself.\n",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61245613,61245613,src/rpc/misc.cpp
laanwj,2016-04-27T12:50:55Z,"- vchSecret is ok - CBitcoinSecret (derived from CBase58Data) uses a zero_after_free allocator\n- strPrivKey could be a SecureString, I guess.\n\nHowever, params[] is a const parameter vector passed in, provided by a third-party library. I don't think this issue can be solved in general (except by never passing private keys in the API in the first place). The http server, JSON parsing, the RPC mec",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61250998,61250998,src/rpc/misc.cpp
jonasschnelli,2016-04-27T12:54:13Z,"Agree. Its just a nitpick (I forgot to pre-fix it with ""nit:""). As long as we are dealing with privatekeys in bitcoin-core there will always be memory containing sensitive stuff.\n",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61251392,61251392,src/rpc/misc.cpp
MarcoFalke,2016-04-27T19:24:13Z,"All of those seem dead code, so you might as well remove them?\n",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61320336,61320336,qa/rpc-tests/signmessages.py
MarcoFalke,2016-04-27T19:28:08Z,"What I mean is: If you don't expect an exception, don't catch it. The whole purpose of the test framework is to fail on any unexpected exception.\n\nOther than that, you may want to try this syntax:\n\n``` py\ntry:\n  something_that_fails()\n  assert(False)\nexcept:\n  assert(thing_on_failure())\n```\n\nor\n\n``` py\ntry:\n  something_that_fails()\nexcept:\n  assert(thing_on_failure())\nelse:\n  a",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61320938,61320938,qa/rpc-tests/signmessages.py
achow101,2016-04-27T19:30:12Z,"Ok, I'll remove them. I should probably add a failure condition, right?\n",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61321238,61321238,qa/rpc-tests/signmessages.py
laanwj,2016-04-28T13:03:36Z,You should assert the result from verifymessage\n,https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61422673,61422673,qa/rpc-tests/signmessages.py
MarcoFalke,2016-04-28T13:12:09Z,"Right, if you feel like adding a case that should fail to check if it fails properly, you are very welcome to do so.\n",https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61423869,61423869,qa/rpc-tests/signmessages.py
achow101,2016-04-28T13:32:36Z, done\n,https://github.com/bitcoin/bitcoin/pull/7953#discussion_r61426861,61426861,qa/rpc-tests/signmessages.py
