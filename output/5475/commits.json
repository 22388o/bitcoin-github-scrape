[
  {
    "sha": "06040c258bc9bc8afbb85b09f7b68faa0c335caf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjA0MGMyNThiYzliYzhhZmJiODViMDlmN2I2OGZhYTBjMzM1Y2Fm",
    "commit": {
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2014-11-04T17:30:31Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-11-21T22:18:48Z"
      },
      "message": "CCoinsViewMemPool cleanup\n\nMove the mempool lock into CCoinsViewMemPool, since the existing code\nalways manually locks the mempool (with the lock having same lifetime\nas the view!).\n\nMove a call to CMempool::pruneSpent into CCoinsViewMemPool::GetCoins,\nsince CCoinsViewMemPool::GetCoins is called only once in the codebase,\nfollowed by a call to pruneSpent with a `TODO` suggesting it be moved.",
      "tree": {
        "sha": "78a56b93a4d716da8c683bef055184d9adc8e199",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78a56b93a4d716da8c683bef055184d9adc8e199"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06040c258bc9bc8afbb85b09f7b68faa0c335caf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06040c258bc9bc8afbb85b09f7b68faa0c335caf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06040c258bc9bc8afbb85b09f7b68faa0c335caf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06040c258bc9bc8afbb85b09f7b68faa0c335caf/comments",
    "author": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a574189e2acdaa03658bfe495740b2d722984467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a574189e2acdaa03658bfe495740b2d722984467",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a574189e2acdaa03658bfe495740b2d722984467"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7367314fa1dbd22f8cde6e05e704b1e67e25f24e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "patch": "@@ -940,7 +940,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         CAmount nValueIn = 0;\n         {\n-        LOCK(pool.cs);\n         CCoinsViewMemPool viewMemPool(pcoinsTip, pool);\n         view.SetBackend(viewMemPool);\n "
      },
      {
        "sha": "143c6cf9ca7c4b9ebe3e7c8a60eac2990feaa93a",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "patch": "@@ -381,11 +381,9 @@ Value gettxout(const Array& params, bool fHelp)\n \n     CCoins coins;\n     if (fMempool) {\n-        LOCK(mempool.cs);\n         CCoinsViewMemPool view(pcoinsTip, mempool);\n         if (!view.GetCoins(hash, coins))\n             return Value::null;\n-        mempool.pruneSpent(hash, coins); // TODO: this should be done by the CCoinsViewMemPool\n     } else {\n         if (!pcoinsTip->GetCoins(hash, coins))\n             return Value::null;"
      },
      {
        "sha": "ebbb02254e2369b23435a8d9dbe7845f9e17dc8b",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "patch": "@@ -562,7 +562,6 @@ Value signrawtransaction(const Array& params, bool fHelp)\n     CCoinsView viewDummy;\n     CCoinsViewCache view(&viewDummy);\n     {\n-        LOCK(mempool.cs);\n         CCoinsViewCache &viewChain = *pcoinsTip;\n         CCoinsViewMemPool viewMempool(&viewChain, mempool);\n         view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view"
      },
      {
        "sha": "8f09cc44a11075c3fca4b0e7609df95f3056affe",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "patch": "@@ -643,7 +643,10 @@ void CTxMemPool::ClearPrioritisation(const uint256 hash)\n }\n \n \n-CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n+CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn)\n+    : CCoinsViewBacked(baseIn),\n+      criticalBlock(mempoolIn.cs, \"CCoinsViewMemPool_lock\", __FILE__, __LINE__),\n+      mempool(mempoolIn) {}\n \n bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     // If an entry in the mempool exists, always return that one, as it's guaranteed to never\n@@ -652,6 +655,7 @@ bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     CTransaction tx;\n     if (mempool.lookup(txid, tx)) {\n         coins = CCoins(tx, MEMPOOL_HEIGHT);\n+        mempool.pruneSpent(txid, coins);\n         return true;\n     }\n     return (base->GetCoins(txid, coins) && !coins.IsPruned());"
      },
      {
        "sha": "52dced9830714ddda800a82c81187df4bd67a5c8",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06040c258bc9bc8afbb85b09f7b68faa0c335caf/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "patch": "@@ -164,6 +164,7 @@ class CTxMemPool\n class CCoinsViewMemPool : public CCoinsViewBacked\n {\n protected:\n+    CCriticalBlock criticalBlock;\n     CTxMemPool &mempool;\n \n public:"
      }
    ]
  },
  {
    "sha": "05dffe9ed58f065da45b0d8c3ef44073e06ffd52",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWRmZmU5ZWQ1OGYwNjVkYTQ1YjBkOGMzZWY0NDA3M2UwNmZmZDUy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-11-21T21:50:56Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-11-21T22:18:48Z"
      },
      "message": "Remove a dup check from AcceptToMemoryPool, make mapNextTx private",
      "tree": {
        "sha": "7fc03c6c2f744d6f29793cd99e28b97be56dc4a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fc03c6c2f744d6f29793cd99e28b97be56dc4a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05dffe9ed58f065da45b0d8c3ef44073e06ffd52",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05dffe9ed58f065da45b0d8c3ef44073e06ffd52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05dffe9ed58f065da45b0d8c3ef44073e06ffd52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05dffe9ed58f065da45b0d8c3ef44073e06ffd52/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06040c258bc9bc8afbb85b09f7b68faa0c335caf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06040c258bc9bc8afbb85b09f7b68faa0c335caf"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 2,
      "deletions": 15
    },
    "files": [
      {
        "sha": "76e1426acb1198409ded7960be2e6b9cbfbae35f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05dffe9ed58f065da45b0d8c3ef44073e06ffd52/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05dffe9ed58f065da45b0d8c3ef44073e06ffd52/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=05dffe9ed58f065da45b0d8c3ef44073e06ffd52",
        "patch": "@@ -920,20 +920,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return false;\n \n-    // Check for conflicts with in-memory transactions\n-    {\n-    LOCK(pool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n-    {\n-        COutPoint outpoint = tx.vin[i].prevout;\n-        if (pool.mapNextTx.count(outpoint))\n-        {\n-            // Disable replacement feature for now\n-            return false;\n-        }\n-    }\n-    }\n-\n     {\n         CCoinsView dummy;\n         CCoinsViewCache view(&dummy);"
      },
      {
        "sha": "847f1368888ef531a5a0972fd173759a0cd0c387",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05dffe9ed58f065da45b0d8c3ef44073e06ffd52/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05dffe9ed58f065da45b0d8c3ef44073e06ffd52/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=05dffe9ed58f065da45b0d8c3ef44073e06ffd52",
        "patch": "@@ -93,10 +93,11 @@ class CTxMemPool\n     CFeeRate minRelayFee; //! Passed to constructor to avoid dependency on main\n     uint64_t totalTxSize; //! sum of all mempool tx' byte sizes\n \n+    std::map<COutPoint, CInPoint> mapNextTx;\n+\n public:\n     mutable CCriticalSection cs;\n     std::map<uint256, CTxMemPoolEntry> mapTx;\n-    std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n \n     CTxMemPool(const CFeeRate& _minRelayFee);"
      }
    ]
  }
]