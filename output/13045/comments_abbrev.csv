instagibbs,2018-04-21T12:43:07Z,@practicalswift fixed,https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-383292218,383292218,
rebroad,2018-04-21T22:16:34Z,why not simply request the compact block rather than a full block?,https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-383335960,383335960,
TheBlueMatt,2018-04-21T22:55:49Z,"Should mark the block as in flight if it wasn't already and we requested it. Probably should be checking if it's in flight from the same peer too (which would be required if you mark it, and should probably have been done either way).\n\n@promag because the mempool reconstruction will be useless so it'll be worse than a normal request.\n\nOn April 21, 2018 10:16:43 PM UTC, Rebroad <notifications@g",https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-383338354,383338354,
instagibbs,2018-04-23T14:09:12Z,@TheBlueMatt Added the filter-by-sender and marking block as in flight.,https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-383588477,383588477,
rebroad,2018-04-25T14:50:16Z,"would it be worth keeping the txs that went into the latest block to hand\nfor this situation so that compact blocks can be used? what if the previous\ncompact block received had only one transaction in it, whereas this\ncompeting block has many transactions? by requesting a full block we would\nbe favouring the empty block when it would be better for the network to\nfavour the full block. therefo",https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-384315155,384315155,
instagibbs,2018-04-25T14:54:48Z,"@rebroad I think this goes a bit off-topic to incentives. As-is it would likely take a lot of work to support it, and I'd have no idea how to do it safely.",https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-384316891,384316891,
instagibbs,2018-04-30T13:10:43Z,Comments addressed,https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-385393537,385393537,
instagibbs,2018-05-21T15:37:32Z,@Empact comments addressed,https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-390691911,390691911,
DrahtBot,2019-03-15T17:52:36Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15948](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15948.html) (refactor: rename chainActive by jamesob)\n\",https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-473383985,473383985,
DrahtBot,2019-04-28T19:11:58Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 279 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-487407232,487407232,
DrahtBot,2019-05-07T16:08:07Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-490145178,490145178,
instagibbs,2019-05-07T16:12:12Z,"I don't think anyone remaining who would review cares about this, closing.",https://github.com/bitcoin/bitcoin/pull/13045#issuecomment-490146753,490146753,
practicalswift,2018-04-21T11:03:13Z,"Nit: ""better better"" should be something else? :-)",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r183207203,183207203,src/net_processing.cpp
Empact,2018-04-23T21:31:15Z,nit: how about unpacking `blockInFlightIt->second.first` to a local like `inFlightNodeId` or the like? It's used one other place in the file and is relatively inscrutable.,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r183544144,183544144,src/net_processing.cpp
instagibbs,2018-04-24T13:38:31Z,"I cached the ""from same peer"" logic instead since it's used twice.",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r183732526,183732526,src/net_processing.cpp
instagibbs,2018-04-26T13:25:20Z,"I think this will actually request the full block that *is* the known chaintip. Probably need to check it isn't in chainActive first. It already is being checked that it connects, so this is all that is likely needed.",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r184387279,184387279,src/net_processing.cpp
instagibbs,2018-04-26T13:52:37Z,"oh, maybe not. two lines or so above we have this check:\n```\nif (pindex->nStatus & BLOCK_HAVE_DATA) // Nothing to do here\n            return true;\n```",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r184396953,184396953,src/net_processing.cpp
TheBlueMatt,2018-04-28T02:06:50Z,"I dont think we want to request the block if its already in flight from another peer, even if it has equal work with our tip.",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r184836150,184836150,src/net_processing.cpp
TheBlueMatt,2018-04-28T02:12:23Z,"This appears to be unused. That said, I think we should consider handling if peer accidentally sends us the block twice, thus queuedBlockIt->partialBlock is set after we call MarkBlockAsInFlight (probably by just wiping the partialBlock).",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r184836307,184836307,src/net_processing.cpp
instagibbs,2018-04-30T13:10:27Z,"Ok, replicated the logic from a few lines below covering the same case.",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r184981709,184981709,src/net_processing.cpp
TheBlueMatt,2018-05-14T22:04:00Z,"You want to reset to nullptr here, as we're about to fetch via non-compact-blocks.",https://github.com/bitcoin/bitcoin/pull/13045#discussion_r188112641,188112641,src/net_processing.cpp
instagibbs,2018-05-16T01:09:46Z,done,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r188479264,188479264,src/net_processing.cpp
Empact,2018-05-16T03:01:54Z,`&&` over `?` here,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r188491800,188491800,src/net_processing.cpp
Empact,2018-05-16T03:03:09Z,Redundant `fAlreadyInFlight` check,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r188491936,188491936,src/net_processing.cpp
Empact,2018-05-16T03:04:23Z,nit: snake_case for new vars,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r188492042,188492042,src/net_processing.cpp
Empact,2018-05-16T03:05:49Z,Redundant `fAlreadyInFlight` check,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r188492169,188492169,src/net_processing.cpp
Empact,2018-05-21T18:19:31Z,nit: unnecessary parens,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r189671678,189671678,src/net_processing.cpp
instagibbs,2018-05-22T16:07:37Z,done,https://github.com/bitcoin/bitcoin/pull/13045#discussion_r189961477,189961477,src/net_processing.cpp
