gmaxwell,2015-11-22T22:04:19Z,utACK. Any idea why it's slower?\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-158807464,158807464,
jonasschnelli,2015-11-24T11:49:02Z,"@gmaxwell: I haven't analyzed why they are slower, but i assume it's because of the whole GUI/QT overhead.\n",https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-159242301,159242301,
jonasschnelli,2015-11-24T12:01:35Z,"Maybe I should give some directions where this could go to:\nQT has easy functions to create a bitmap (example: PNG File) of a window. If there would be a script that runs through all UI situations and create a bunch of screenshots that could help in testing various platforms and all UI change requests (kick a script that builds a html page with screenshots, scroll through them, verify).\nTesting ",https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-159247663,159247663,
laanwj,2015-11-25T07:25:39Z,"> utACK. Any idea why it's slower?\n\nWith e.g. wallet tests with lots of transactions it's bound to be slower because the UI is doing more in that case, it keeps and maintains its own table of transactions to to do things like sort, as well as draw the screen when core's locks are contended.\n",https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-159524301,159524301,
MarcoFalke,2015-11-25T07:26:49Z,utACK ffe8fa6\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-159524431,159524431,
laanwj,2015-12-03T13:06:45Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-161632060,161632060,
jonasschnelli,2015-12-14T11:58:03Z,Rebased and reduced. There are only two changes now:\n1. Pass `-server` arg always\n2. Add `src/qt` to the PATH variable\n\nTests over QT clients can be run like `BITCOIND=bitcoin-qt ./qa/rpc-tests/wallet.py --srcdir=src/`.\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-164419501,164419501,
laanwj,2015-12-14T12:03:03Z,"Awesome, utACK\n",https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-164420485,164420485,
MarcoFalke,2015-12-14T13:06:48Z,Would be nice to have `./qa/pull-tester/rpc-tests.py` support this as well so one can run all test with the gui and check if it passes.\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-164431628,164431628,
laanwj,2015-12-14T13:14:12Z,Doesn't this simply work?\n\n```\nBITCOIND=bitcoin-qt ./qa/pull-tester/rpc-tests.py\n```\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-164432909,164432909,
MarcoFalke,2015-12-14T13:47:59Z,> Doesn't this simply work?\n\nFixed by #7209\n,https://github.com/bitcoin/bitcoin/pull/7068#issuecomment-164442439,164442439,
paveljanik,2015-11-20T13:08:47Z,Adding `-server` twice here? See changed line 219. Thanks @instagibbs.\n,https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45466622,45466622,qa/rpc-tests/test_framework/util.py
instagibbs,2015-11-20T13:21:12Z,_219_ I think you mean\n,https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45467521,45467521,qa/rpc-tests/test_framework/util.py
jonasschnelli,2015-11-20T13:59:09Z,Right. There was one to many. Fixed.\n,https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45470642,45470642,qa/rpc-tests/test_framework/util.py
MarcoFalke,2015-11-21T20:16:21Z,Any reason to do this? This will hinder executing `QT=1 ./qa/pull-tester/rpc-tests.py`?\n,https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45550146,45550146,qa/rpc-tests/test_framework/test_framework.py
MarcoFalke,2015-11-21T23:41:13Z,QT=0 also triggers?\n,https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45552584,45552584,qa/rpc-tests/test_framework/util.py
laanwj,2015-11-24T08:01:57Z,"I'd also prefer passing noshutdown, if desired, as an explicit option.\n",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45705627,45705627,qa/rpc-tests/test_framework/test_framework.py
jonasschnelli,2015-11-24T08:21:02Z,"The reason why I added the noshutdown=True is, because i think running a RPC test with the UI needs post-run user based verification (does the GUI looks like expected?). As long as there is no automatic screenshot creating (and maybe auto-comparing) I think the noshutdown flag is appropriate.\nThe `QT=1` env flag is a helper IMO. It's not really necessary because one could also pass the path to bi",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45706693,45706693,qa/rpc-tests/test_framework/test_framework.py
MarcoFalke,2015-11-24T08:47:20Z,"> I think the noshutdown flag is appropriate.\n\nStill, you could just pass it via the command line. On the other hand, there is no way to disable it, right now when using `QT=`.\n",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45708445,45708445,qa/rpc-tests/test_framework/test_framework.py
laanwj,2015-11-24T09:26:48Z,"Right. There is no `-shutdown` to override it the other way. I still think it's better not to conflate ""want to use GUI"" and ""don't want to shutdown"".\n",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45712066,45712066,qa/rpc-tests/test_framework/test_framework.py
jonasschnelli,2015-11-24T11:45:43Z,Yes. Agreed. This is a point.\nFixed.\n,https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45725081,45725081,qa/rpc-tests/test_framework/test_framework.py
jonasschnelli,2015-11-24T11:48:12Z,"Right. I used the same way than PYTHON_DEBUG is implemented. But i agree, maybe we should change both variables so that they only trigger if they are set with a non-0 value. \n",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45725273,45725273,qa/rpc-tests/test_framework/util.py
laanwj,2015-11-25T07:20:46Z,"~~bool(""0"") is True not False. Of strings (which are the only thing that can be returned from getenv), only empty strings evalutate to False. So this is correct.~~\nNever mind, that's what you meant\n",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r45835357,45835357,qa/rpc-tests/test_framework/util.py
laanwj,2015-12-14T11:15:53Z,"I would suggest changing the environment variable name. `QT` seems to be something that could be legitimately used by the toolkit itself, and defined otherwise. Why not `PYTHON_USE_QT` or so? (it's not that descriptive either but stays with the `PYTHON_DEBUG` pattern, and avoids accidental collisions.)\n",https://github.com/bitcoin/bitcoin/pull/7068#discussion_r47485883,47485883,qa/rpc-tests/test_framework/util.py
