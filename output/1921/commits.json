[
  {
    "sha": "22bb049011bc6957244bc61a8334da2a5db86d04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmJiMDQ5MDExYmM2OTU3MjQ0YmM2MWE4MzM0ZGEyYTVkYjg2ZDA0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-10-12T01:09:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-10-12T01:09:05Z"
      },
      "message": "Fix a use-after-free problem in initialization (#1920)\n\nDon't store the result of c_str().\n\nLuckily, this only affects logging, though it could crash or leak\nsensitive data to the log in rare cases.",
      "tree": {
        "sha": "b3ad9d646805e96d31f384a8a40586e2d5be5bb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3ad9d646805e96d31f384a8a40586e2d5be5bb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22bb049011bc6957244bc61a8334da2a5db86d04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22bb049011bc6957244bc61a8334da2a5db86d04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22bb049011bc6957244bc61a8334da2a5db86d04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22bb049011bc6957244bc61a8334da2a5db86d04/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16f3618c13c479b729349abc3b965df3f94342c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f3618c13c479b729349abc3b965df3f94342c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16f3618c13c479b729349abc3b965df3f94342c5"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8a928218b248ddd74d4d0c1bf4c9487b4062bea0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22bb049011bc6957244bc61a8334da2a5db86d04/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22bb049011bc6957244bc61a8334da2a5db86d04/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=22bb049011bc6957244bc61a8334da2a5db86d04",
        "patch": "@@ -440,15 +440,15 @@ bool AppInit2()\n \n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n-    const char* pszDataDir = GetDataDir().string().c_str();\n+    std::string strDataDir = GetDataDir().string();\n \n     // Make sure only a single Bitcoin process is using the data directory.\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n     static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n     if (!lock.try_lock())\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"), pszDataDir));\n+        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"), strDataDir.c_str()));\n \n #if !defined(WIN32) && !defined(QT_GUI)\n     if (fDaemon)\n@@ -480,7 +480,7 @@ bool AppInit2()\n     if (!fLogTimestamps)\n         printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n     printf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n-    printf(\"Used data directory %s\\n\", pszDataDir);\n+    printf(\"Used data directory %s\\n\", strDataDir.c_str());\n     std::ostringstream strErrors;\n \n     if (fDaemon)\n@@ -496,7 +496,7 @@ bool AppInit2()\n     {\n         string msg = strprintf(_(\"Error initializing database environment %s!\"\n                                  \" To recover, BACKUP THAT DIRECTORY, then remove\"\n-                                 \" everything from it except for wallet.dat.\"), pszDataDir);\n+                                 \" everything from it except for wallet.dat.\"), strDataDir.c_str());\n         return InitError(msg);\n     }\n \n@@ -515,7 +515,7 @@ bool AppInit2()\n             string msg = strprintf(_(\"Warning: wallet.dat corrupt, data salvaged!\"\n                                      \" Original wallet.dat saved as wallet.{timestamp}.bak in %s; if\"\n                                      \" your balance or transactions are incorrect you should\"\n-                                     \" restore from a backup.\"), pszDataDir);\n+                                     \" restore from a backup.\"), strDataDir.c_str());\n             uiInterface.ThreadSafeMessageBox(msg, _(\"Bitcoin\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n         }\n         if (r == CDBEnv::RECOVER_FAIL)\n@@ -634,7 +634,7 @@ bool AppInit2()\n     {\n         string msg = strprintf(_(\"Error initializing database environment %s!\"\n                                  \" To recover, BACKUP THAT DIRECTORY, then remove\"\n-                                 \" everything from it except for wallet.dat.\"), pszDataDir);\n+                                 \" everything from it except for wallet.dat.\"), strDataDir.c_str());\n         return InitError(msg);\n     }\n "
      }
    ]
  }
]