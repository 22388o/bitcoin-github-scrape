promag,2017-12-06T22:46:54Z,"> removes the special casing of blockhash.IsNull(), which makes no sense \n\nAgree, `ParseHashV` throws.",https://github.com/bitcoin/bitcoin/pull/11838#issuecomment-349800490,349800490,
kallewoof,2017-12-07T01:52:36Z,utACK fa4c16d2e72a8ec1032da49a68c9913c2595dbfe,https://github.com/bitcoin/bitcoin/pull/11838#issuecomment-349836439,349836439,
laanwj,2017-12-07T16:37:27Z,utACK fa4c16d,https://github.com/bitcoin/bitcoin/pull/11838#issuecomment-350023058,350023058,
promag,2017-12-06T22:57:50Z,"Nit, IMO this check is not really necessary in the context of this test (it's testing `reconsiderblock`worked). The same could be done above after `invalidateblock(block1)`.\n\nBut I guess you want to be sure the state is the same for the remaining script.",https://github.com/bitcoin/bitcoin/pull/11838#discussion_r155386628,155386628,test/functional/rawtransactions.py
jnewbery,2017-12-07T18:49:41Z,nit: suggest you add a comment here to say that `ParseHashV()` will throw if called with a string which isn't a 64 length hex strong.,https://github.com/bitcoin/bitcoin/pull/11838#discussion_r155607675,155607675,src/rpc/rawtransaction.cpp
jnewbery,2017-12-07T18:57:41Z,"nit: prefer `assert_raises_rpc_error(-5, ""Block hash not found"", self.nodes[0].getrawtransaction, tx, True, ""0"" * 64)` to make it clear that this is a valid length 64 hex string",https://github.com/bitcoin/bitcoin/pull/11838#discussion_r155609704,155609704,test/functional/rawtransactions.py
jnewbery,2017-12-07T19:02:08Z,"nit: slight preference for `assert not gottx['in_active_chain']`\n\nit'd also be nice to test the positive case (call `getrawtransaction` with a blockhash in the current chain and `assert gottx['in_active_chain']`",https://github.com/bitcoin/bitcoin/pull/11838#discussion_r155610882,155610882,test/functional/rawtransactions.py
