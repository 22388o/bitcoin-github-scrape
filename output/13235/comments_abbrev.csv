Empact,2018-05-15T01:41:33Z,Prompted by #13228,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389015400,389015400,
fanquake,2018-05-15T04:15:20Z,"Failures in bench_bitcoin in a few of the Travis builds:\n```\n  CXXLD    bench/bench_bitcoin\nlibbitcoin_wallet.a(libbitcoin_wallet_a-wallet.o): In function `CWalletTx::RelayWalletTransaction(CConnman*)':\nwallet.cpp:(.text+0x5cea): undefined reference to `CConnman::NodeFullyConnected(CNode const*)'\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [bench/bench_bitcoin] Error 1\n``",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389037507,389037507,
practicalswift,2018-05-15T07:19:09Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389068353,389068353,
laanwj,2018-05-15T07:35:01Z,I entertained the idea of creating a `shutdown.(cpp|h)` a few times as well. It seems we have too much non-initialization-related things in init. Concept ACK.,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389072431,389072431,
Empact,2018-05-15T20:02:26Z,"Based this on #13239, which fixes the linker issues.",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389295042,389295042,
jonasschnelli,2018-05-16T06:40:39Z,utACK f7033bf5767e674abfee2bd53cd6b9f5c3831482,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389411566,389411566,
practicalswift,2018-05-16T07:06:12Z,utACK f7033bf5767e674abfee2bd53cd6b9f5c3831482,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389417031,389417031,
Empact,2018-05-16T19:28:24Z,"* Declared `fRequestShutdown` static\n* Included shutdown.h in shutdown.cpp\n* Updated copyright years\n* Ran `clang-format` to sort includes\n\nThanks @promag / @MarcoFalke ",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389637705,389637705,
promag,2018-05-16T19:33:27Z,"Still has the following circular dependencies:\n```\nCircular dependency: init -> net_processing -> init\nCircular dependency: init -> validationinterface -> init\n```\nShould these be removed in this PR?",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389639222,389639222,
Empact,2018-05-16T19:52:00Z,@promag Added a commit to remove unused includes of init from 4 files. I'd looked into those before but left them out to narrow this PR.,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389644452,389644452,
promag,2018-05-16T19:52:35Z,@Empact needs rebase.,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389644580,389644580,
Empact,2018-05-16T20:12:04Z,Rebased,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-389650126,389650126,
Empact,2018-05-18T18:40:22Z,~~@jonasschnelli @practicalswift would you take a look at #13239? It's the necessary precondition for this.~~,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-390296569,390296569,
Empact,2018-06-06T09:35:29Z,"Rebased for #13191 - note this is WIP because I'm working on a Makefile-based solution to the `ld` failures (which unfortunately do not exist on mac), as an alternative to #13239.",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-395008123,395008123,
sipa,2018-06-14T07:23:55Z,@Empact Any progress here?,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397197923,397197923,
Empact,2018-06-14T07:46:02Z,"@sipa yeah what I need to do is install linux so that I can repro the build failures locally (unfortunately the only system they're not exhibiting on is Mac). The last commit 665bf42 is a half-finished effort to fix the build with feedback via CI but it would progress a lot faster if I had local failures to run against.\n\nI'll work on it a bit more in the same style, but failing that I'll have ",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397203317,397203317,
Empact,2018-06-14T07:56:27Z,I'm going to try again at a more focused intervention.,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397205952,397205952,
promag,2018-06-14T08:55:57Z,"> @sipa yeah what I need to do is install linux so that I can repro the build failures locally \n\n@Empact you could use docker instead.",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397222611,397222611,
Empact,2018-06-14T08:58:15Z,"@promag Good point! I think I'm close to reproing it on mac - the change I made in 44bda43 inverts the test failures, so that the mac build is failing now.\nhttps://travis-ci.org/bitcoin/bitcoin/builds/392143625?utm_source=github_status&utm_medium=notification",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397223298,397223298,
Empact,2018-06-14T10:02:45Z,"Ok, looks like an intermittent failure in 69b0e8a, ending in:\n```\nmake[1]: Entering directory '/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-apple-darwin11'\nmake[1]: Nothing to be done for 'all-am'.\nmake[1]: Leaving directory '/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-apple-darwin11'\nmake -C src qt/bitcoin-qt\nmake[1]: Entering directory '/home/travis/build/bitco",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397241815,397241815,
Empact,2018-06-14T10:19:51Z,~~Failure in 63cebe7 confirms that 57863ab is not a fix. Dropping and squashing.~~,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397246224,397246224,
Empact,2018-06-14T10:45:17Z,"Ok, I think this is ready for re-review. @sipa thanks for the instigation.\n\n`circular-dependencies.py` output before, with removals in after indicated with strikethrough:\n\n`src$ ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}`\n`Circular dependency: chainparamsbase -> util -> chainparamsbase`\n`Circular dependency: checkpoints -> validation -> checkpoints`\n~~`Circula",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-397252229,397252229,
Empact,2018-06-22T18:08:16Z,@jonasschnelli @practicalswift @promag @sipa take another look?,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-399530260,399530260,
DrahtBot,2018-06-24T14:20:05Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-399760097,399760097,
Empact,2018-06-25T04:23:29Z,Rebased for #13458,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-399826548,399826548,
ken2812221,2018-06-25T09:12:14Z,utACK 1fabd59e7e870fae73bfbcfb227dd7452de94726,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-399885209,399885209,
sipa,2018-06-27T00:22:40Z,"@Empact In your first commit you write ""These were entirely unused, as based on successful compilation"". That's not a sufficient argument - init.h could still be included indirectly through another header, while exported symbols from init.h are still used.\n\nThis doesn't mean it wrong to remove them, just that ""it compiles without them"" isn't a sufficient reason. Tools like `iwyu` can help with",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-400503720,400503720,
Empact,2018-06-27T00:32:32Z,@sipa thanks Iâ€™ll check that out,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-400505499,400505499,
Empact,2018-06-27T01:17:06Z,"Oh btw I did manually check using this grep:\n\n```\n  \bStartShutdown\(\)|\bShutdownRequested\(\)|\bInterrupt\(\)|\bShutdown\(\)|\bInitLogging\(\)|\bInitParameterInteraction\(\)|\bAppInitBasicSetup\(\)|\bAppInitParameterInteraction\(\)|\bAppInitSanityChecks\(\)|\bAppInitLockDataDirectory\(\)|\bAppInitMain\(\)|\bSetupServerArgs\(\)|\bLicenseInfo\(\)|g_wallet_init_interface|init.h\n```\n\nBut",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-400512087,400512087,
sipa,2018-06-27T01:26:52Z,"@Empact Oh, ignore my comment in that case. I just wanted to make sure you're not relying on indirect inclusions.",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-400513508,400513508,
sipa,2018-06-27T01:28:00Z,utACK 1fabd59e7e870fae73bfbcfb227dd7452de94726,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-400513668,400513668,
Empact,2018-07-01T19:19:08Z,"@practicalswift @jonasschnelli @promag could I get another look?\n\nAlternatively I could split this into 2 PRS, the removal of the unnecessary includes and the shutdown.h extraction, if that would make review easier.",https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-401627032,401627032,
laanwj,2018-07-04T13:28:09Z,utACK 1fabd59e7e870fae73bfbcfb227dd7452de94726,https://github.com/bitcoin/bitcoin/pull/13235#issuecomment-402479252,402479252,
promag,2018-05-16T11:47:03Z,"```cpp\nstatic std::atomic<bool> fRequestShutdown{false};\n```",https://github.com/bitcoin/bitcoin/pull/13235#discussion_r188594930,188594930,src/shutdown.cpp
promag,2018-05-16T11:47:19Z,2018.,https://github.com/bitcoin/bitcoin/pull/13235#discussion_r188594983,188594983,src/shutdown.h
promag,2018-05-16T11:47:35Z,Keep sorted.,https://github.com/bitcoin/bitcoin/pull/13235#discussion_r188595050,188595050,src/txdb.cpp
promag,2018-05-16T11:57:08Z,"nit, also `#include <shutdown.h>`?",https://github.com/bitcoin/bitcoin/pull/13235#discussion_r188597277,188597277,src/shutdown.cpp
MarcoFalke,2018-05-16T14:04:09Z,Note that you can install `clang-format` and run the https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy script which fixes all white space and sorting issues,https://github.com/bitcoin/bitcoin/pull/13235#discussion_r188637191,188637191,src/txdb.cpp
