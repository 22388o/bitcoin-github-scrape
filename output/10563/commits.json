[
  {
    "sha": "809519da9a912e8a1b7313d433a646f9fc371086",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDk1MTlkYTlhOTEyZThhMWI3MzEzZDQzM2E2NDZmOWZjMzcxMDg2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-05T19:48:58Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-05T19:48:58Z"
      },
      "message": "Remove Safe mode",
      "tree": {
        "sha": "a434bdf3db84a14c1ab13769fe3e912409c8a434",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a434bdf3db84a14c1ab13769fe3e912409c8a434"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/809519da9a912e8a1b7313d433a646f9fc371086",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/809519da9a912e8a1b7313d433a646f9fc371086",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/809519da9a912e8a1b7313d433a646f9fc371086",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/809519da9a912e8a1b7313d433a646f9fc371086/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba05971bf4e7b9647002aa39ceb384339995195e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba05971bf4e7b9647002aa39ceb384339995195e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba05971bf4e7b9647002aa39ceb384339995195e"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 4,
      "deletions": 67
    },
    "files": [
      {
        "sha": "dea656869d32323d370c8633c3524573239f725b",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -130,7 +130,6 @@ BITCOIN_CORE_H = \\\n   rpc/client.h \\\n   rpc/mining.h \\\n   rpc/protocol.h \\\n-  rpc/safemode.h \\\n   rpc/server.h \\\n   rpc/register.h \\\n   scheduler.h \\\n@@ -211,7 +210,6 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/misc.cpp \\\n   rpc/net.cpp \\\n   rpc/rawtransaction.cpp \\\n-  rpc/safemode.cpp \\\n   rpc/server.cpp \\\n   script/sigcache.cpp \\\n   script/ismine.cpp \\"
      },
      {
        "sha": "992c4dc1908f166d81ad5020ecdf1b9301ac273e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -30,7 +30,6 @@\n #include \"policy/policy.h\"\n #include \"rpc/server.h\"\n #include \"rpc/register.h\"\n-#include \"rpc/safemode.h\"\n #include \"rpc/blockchain.h\"\n #include \"script/standard.h\"\n #include \"script/sigcache.h\"\n@@ -432,8 +431,6 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. Also sets -checkmempool (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n-        strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n-        strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT));"
      },
      {
        "sha": "581de7f58fa0acb3626854dd36b891384d50ac2f",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -16,7 +16,6 @@\n #include \"policy/policy.h\"\n #include \"policy/rbf.h\"\n #include \"primitives/transaction.h\"\n-#include \"rpc/safemode.h\"\n #include \"rpc/server.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\"\n@@ -704,7 +703,6 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"signrawtransaction\", \"\\\"myhex\\\"\")\n         );\n \n-    ObserveSafeMode();\n #ifdef ENABLE_WALLET\n     LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : nullptr);\n #else\n@@ -910,7 +908,6 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK(cs_main);\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n "
      },
      {
        "sha": "24770ad47f073859d31167985f2ed2916f4dcb3e",
        "filename": "src/rpc/safemode.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba05971bf4e7b9647002aa39ceb384339995195e/src/rpc/safemode.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba05971bf4e7b9647002aa39ceb384339995195e/src/rpc/safemode.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/safemode.cpp?ref=ba05971bf4e7b9647002aa39ceb384339995195e",
        "patch": "@@ -1,14 +0,0 @@\n-#include \"safemode.h\"\n-\n-#include \"rpc/protocol.h\"\n-#include \"util.h\"\n-#include \"warnings.h\"\n-\n-void ObserveSafeMode()\n-{\n-    std::string warning = GetWarnings(\"rpc\");\n-    if (warning != \"\" && !gArgs.GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE)) {\n-        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, std::string(\"Safe mode: \") + warning);\n-    }\n-}\n-"
      },
      {
        "sha": "8466d6b2f975a7b5b39edd0480f6684f08ee54e8",
        "filename": "src/rpc/safemode.h",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba05971bf4e7b9647002aa39ceb384339995195e/src/rpc/safemode.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba05971bf4e7b9647002aa39ceb384339995195e/src/rpc/safemode.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/safemode.h?ref=ba05971bf4e7b9647002aa39ceb384339995195e",
        "patch": "@@ -1,12 +0,0 @@\n-// Copyright (c) 2017 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_RPC_SAFEMODE_H\n-#define BITCOIN_RPC_SAFEMODE_H\n-\n-static const bool DEFAULT_DISABLE_SAFEMODE = true;\n-\n-void ObserveSafeMode();\n-\n-#endif // BITCOIN_RPC_SAFEMODE_H"
      },
      {
        "sha": "4efb2dfc55e8d10fd988b39852a661c286acc6ae",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"base58.h\"\n #include \"chain.h\"\n-#include \"rpc/safemode.h\"\n #include \"rpc/server.h\"\n #include \"init.h\"\n #include \"validation.h\"\n@@ -62,7 +61,7 @@ std::string DecodeDumpString(const std::string &str) {\n     for (unsigned int pos = 0; pos < str.length(); pos++) {\n         unsigned char c = str[pos];\n         if (c == '%' && pos+2 < str.length()) {\n-            c = (((str[pos+1]>>6)*9+((str[pos+1]-'0')&15)) << 4) | \n+            c = (((str[pos+1]>>6)*9+((str[pos+1]-'0')&15)) << 4) |\n                 ((str[pos+2]>>6)*9+((str[pos+2]-'0')&15));\n             pos += 2;\n         }\n@@ -175,7 +174,6 @@ UniValue abortrescan(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"abortrescan\", \"\")\n         );\n \n-    ObserveSafeMode();\n     if (!pwallet->IsScanning() || pwallet->IsAbortingRescan()) return false;\n     pwallet->AbortRescan();\n     return true;\n@@ -641,7 +639,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     file << strprintf(\"#   mined on %s\\n\", EncodeDumpTime(chainActive.Tip()->GetBlockTime()));\n     file << \"\\n\";\n \n-    // add the base58check encoded extended master if the wallet uses HD \n+    // add the base58check encoded extended master if the wallet uses HD\n     CKeyID masterKeyID = pwallet->GetHDChain().masterKeyID;\n     if (!masterKeyID.IsNull())\n     {"
      },
      {
        "sha": "953a3661f01245e806fdbd024a2a21dd22a96877",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -16,7 +16,6 @@\n #include \"policy/policy.h\"\n #include \"policy/rbf.h\"\n #include \"rpc/mining.h\"\n-#include \"rpc/safemode.h\"\n #include \"rpc/server.h\"\n #include \"script/sign.h\"\n #include \"timedata.h\"\n@@ -451,7 +450,6 @@ UniValue sendtoaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     CBitcoinAddress address(request.params[0].get_str());\n@@ -528,7 +526,6 @@ UniValue listaddressgroupings(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listaddressgroupings\", \"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     UniValue jsonGroupings(UniValue::VARR);\n@@ -638,7 +635,6 @@ UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", 6\")\n        );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     // Bitcoin address\n@@ -699,7 +695,6 @@ UniValue getreceivedbyaccount(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getreceivedbyaccount\", \"\\\"tabby\\\", 6\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     // Minimum confirmations\n@@ -772,7 +767,6 @@ UniValue getbalance(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getbalance\", \"\\\"*\\\", 6\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     const UniValue& account_value = request.params[0];\n@@ -817,7 +811,6 @@ UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n                 \"getunconfirmedbalance\\n\"\n                 \"Returns the server's total unconfirmed balance\\n\");\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     return ValueFromAmount(pwallet->GetUnconfirmedBalance());\n@@ -852,7 +845,6 @@ UniValue movecmd(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"move\", \"\\\"timotei\\\", \\\"akiko\\\", 0.01, 6, \\\"happy birthday!\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strFrom = AccountFromValue(request.params[0]);\n@@ -911,7 +903,6 @@ UniValue sendfrom(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strAccount = AccountFromValue(request.params[0]);\n@@ -995,7 +986,6 @@ UniValue sendmany(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     if (pwallet->GetBroadcastTransactions() && !g_connman) {\n@@ -1413,7 +1403,6 @@ UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     return ListReceived(pwallet, request.params, false);\n@@ -1453,7 +1442,6 @@ UniValue listreceivedbyaccount(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listreceivedbyaccount\", \"6, true, true\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     return ListReceived(pwallet, request.params, true);\n@@ -1641,7 +1629,6 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listtransactions\", \"\\\"*\\\", 20, 100\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::string strAccount = \"*\";\n@@ -1735,7 +1722,6 @@ UniValue listaccounts(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listaccounts\", \"6\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     int nMinDepth = 1;\n@@ -1844,7 +1830,6 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listsinceblock\", \"\\\"000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad\\\", 6\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     const CBlockIndex* pindex = nullptr;    // Block index of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n@@ -1976,7 +1961,6 @@ UniValue gettransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     uint256 hash;\n@@ -2038,7 +2022,6 @@ UniValue abandontransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"abandontransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     uint256 hash;\n@@ -2471,7 +2454,6 @@ UniValue listlockunspent(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listlockunspent\", \"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     std::vector<COutPoint> vOutpts;\n@@ -2550,7 +2532,6 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getwalletinfo\", \"\")\n         );\n \n-    ObserveSafeMode();\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     UniValue obj(UniValue::VOBJ);\n@@ -2703,8 +2684,6 @@ UniValue listunspent(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"listunspent\", \"6, 9999999, [] , true, { \\\"minimumAmount\\\": 0.005 } \")\n         );\n \n-    ObserveSafeMode();\n-\n     int nMinDepth = 1;\n     if (!request.params[0].isNull()) {\n         RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n@@ -2866,7 +2845,6 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             + HelpExampleCli(\"sendrawtransaction\", \"\\\"signedtransactionhex\\\"\")\n                             );\n \n-    ObserveSafeMode();\n     RPCTypeCheck(request.params, {UniValue::VSTR});\n \n     CCoinControl coinControl;"
      },
      {
        "sha": "059dd7e58eb2129f9eebe0079e5be139b07fbcf0",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -51,9 +51,6 @@ std::string GetWarnings(const std::string& strFor)\n         strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n     }\n \n-    if (gArgs.GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n-        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n-\n     // Misc warnings like out of disk space and clock is wrong\n     if (strMiscWarning != \"\")\n     {"
      },
      {
        "sha": "c9f90b2e7fcf3df2b9b96ffda4f5a1ce2271fb5d",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -22,6 +22,4 @@ void SetfLargeWorkInvalidChainFound(bool flag);\n  */\n std::string GetWarnings(const std::string& strFor);\n \n-static const bool DEFAULT_TESTSAFEMODE = false;\n-\n #endif //  BITCOIN_WARNINGS_H"
      },
      {
        "sha": "00935d4df9d48c6655662211193990115702749e",
        "filename": "test/functional/pruning.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/809519da9a912e8a1b7313d433a646f9fc371086/test/functional/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/809519da9a912e8a1b7313d433a646f9fc371086/test/functional/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/pruning.py?ref=809519da9a912e8a1b7313d433a646f9fc371086",
        "patch": "@@ -128,7 +128,7 @@ def reorg_test(self):\n         # Reboot node 1 to clear its mempool (hopefully make the invalidate faster)\n         # Lower the block max size so we don't keep mining all our big mempool transactions (from disconnected blocks)\n         self.stop_node(1)\n-        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxsize=5000\", \"-checkblocks=5\", \"-disablesafemode\"])\n+        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxsize=5000\", \"-checkblocks=5\"])\n \n         height = self.nodes[1].getblockcount()\n         self.log.info(\"Current block height: %d\" % height)\n@@ -151,7 +151,7 @@ def reorg_test(self):\n \n         # Reboot node1 to clear those giant tx's from mempool\n         self.stop_node(1)\n-        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxsize=5000\", \"-checkblocks=5\", \"-disablesafemode\"])\n+        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxsize=5000\", \"-checkblocks=5\"])\n \n         self.log.info(\"Generating new longer chain of 300 more blocks\")\n         self.nodes[1].generate(300)"
      }
    ]
  }
]