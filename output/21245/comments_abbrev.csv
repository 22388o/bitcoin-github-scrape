DrahtBot,2021-02-20 14:23:44,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22689](https://github.com/bitcoin/bitcoin/pull/22689) (rpc: deprecate top-level fee fields in getmempool RPCs by josibak",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-782683416,782683416,
0xB10C,2021-02-23 21:21:02,Concept ACK. Thanks for picking this up! Will have a closer look and test this soon.,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-784520925,784520925,
luke-jr,2021-02-26 17:08:13,"Ideally, this should probably be 3 commits: one changing the bool to the class enum (with 2 values), one adding the new feature, and another adding tests.",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-786774158,786774158,
fyquah,2021-02-27 14:20:26,"> Ideally, this should probably be 3 commits\n\nDone\n\n",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-787079976,787079976,
fyquah,2021-03-01 20:40:53,"> Needs update for getblock docs\n> \n> ```\n> ""If verbosity is 3, returns an Object with information about block <hash> and information about each transaction, including prevout information for inputs (only for blocks in the current best chain).\n"",\n> ```\n\nDone, I added to the commit that implements this feature",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-788259972,788259972,
luke-jr,2021-03-01 20:48:18,(Could still be cleaner with the duplicate line removed https://github.com/bitcoin/bitcoin/pull/21245#discussion_r585016515),https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-788266052,788266052,
fyquah,2021-03-01 20:53:57,"> (Could still be cleaner with the duplicate line removed [#21245 (comment)](https://github.com/bitcoin/bitcoin/pull/21245#discussion_r585016515))\n\nshould be fixed this time ..",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-788270963,788270963,
0xB10C,2021-03-03 17:15:51,"ACK 7fc316e2c9f83cdab1b3b6cbd780c8d498f0bbb9.\n\n- tested that both the RPC and REST interface have a new `prevout` field in the `vin`'s\n- tested that the contents of the `getblock` RPC and `/rest/block/<hash>.json` are the same by piping them into `jq` and `diff`ing the results\n- tested that a random `vin` can be found on chain as a previous output and the `height`, `value`, `address`, `typ",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-789900487,789900487,
theStack,2021-07-14 20:49:42,"Concept ACK\nHappy to review after rebase",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-880199183,880199183,
kiminuo,2021-07-15 21:14:46,"I have rebased the PR here: #22463. In my testing each individual commit can be compiled and `make check` passed for me. If you like the work, please just use it. (No guaratees!)\n\nI plan to address review comments from this PR in #22463 in coming days, unless somebody beats me to it :)\n\nHopefully this effort will help move the needle.",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881018046,881018046,
fyquah,2021-07-15 23:27:29,"sorry for the delay getting back to this. I just rebased -- it ought to be passing tests, i'll take a look at some of the reviews..",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881072351,881072351,
fyquah,2021-07-15 23:52:05,@kiminuo  all your comments should been addressed now.,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881080152,881080152,
kiminuo,2021-07-16 07:23:02,"> @kiminuo all your comments should been addressed now.\n\nThank you! There are still open review comments from my side. I'm not sure if you have seen them or not. Mostly nits though.\n\nEdit: For example these ones:\n\n* https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630488523 \n* https://github.com/bitcoin/bitcoin/pull/21245#discussion_r633064565\n* https://github.com/bitcoin/",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881235411,881235411,
fyquah,2021-07-16 15:59:05,@kiminuo i think they should all be addressed now ..,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881552078,881552078,
kiminuo,2021-07-16 19:35:24,"@fyquah Thanks! \n\nIs this Luke's comment addressed: https://github.com/bitcoin/bitcoin/pull/21245#discussion_r585016515 ? I'm not sure. ü§∑‚Äç‚ôÇÔ∏è ",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881673314,881673314,
fyquah,2021-07-16 20:02:48,"> Is this Luke's comment addressed: #21245 (comment) ? I'm not sure. ü§∑‚Äç‚ôÇÔ∏è\n\nI don't think so. It has already been moved into the `if(calculate_fee)` block.",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881686715,881686715,
fyquah,2021-07-16 20:05:19,@kiminuo I think all but 2 remaining comments above are addressed.,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881688261,881688261,
fyquah,2021-07-16 21:42:49,"Maintainers: I believe all the reviews are addressed. Is there anything else blocking merge?\n\nOnce again, sorry for the delay getting back to this.",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-881734402,881734402,
fyquah,2021-08-03 22:11:07,@kiminuo i think your comments should be addressed now. Can you mark this as reviewed once this looks good?,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-892200107,892200107,
kiminuo,2021-08-05 09:30:53,"Currently `./bitcoin-cli -testnet getblock` prints:\n\n\n<details>\n  <summary>Console output</summary>\n\n```\nerror code: -1\nerror message:\ngetblock ""blockhash"" ( verbosity )\n\nIf verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'.\nIf verbosity is 1, returns an Object with information about block <hash>.\nIf verbosity is 2, returns an Object w",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-893310862,893310862,
kiminuo,2021-08-05 09:35:17,"The following examples may be worth adding to your [original post](https://github.com/bitcoin/bitcoin/pull/21245#issue-576925964):\n\nExamples of the `getblock` output with various verbose levels. Note that `000000000000001f682b188971cc1a121546be4e9d5baf22934fdc7f538288d5` contains only 2 transactions.\n\n## `bitcoin-cli`\n\n### Verbose level 0\n\n```bash\n./bitcoin-cli -testnet getblock ",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-893313612,893313612,
kiminuo,2021-08-08 20:53:31,"@fyquah I have attempted to address my comments above and add RPC help here: https://github.com/kiminuo/bitcoin/tree/feature/2021-08-08-verbosity-level-3-getblock-iteration-3:\n\n```bash\n./bitcoin-cli -testnet getblock\n```\n\nreports for me:\n\n<details>\n  <summary>Console output</summary>\n\n```\nerror code: -1\nerror message:\ngetblock ""blockhash"" ( verbosity )\n\nIf verbosity",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-894853784,894853784,
fyquah,2021-08-20 00:06:00,"Hi, sorry, I haven't been able to spend much time on this :(\n\nI like the suggestion to have @kiminuo 's follow-up PR addressing the non-blocking issues. Is there anything that is blocking merge at this point?\n\n(Tagging an arbitrary maintainer: @fanquake )\n",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-902332088,902332088,
fanquake,2021-08-25 01:34:18,"> Is there anything that is blocking merge at this point?\n\nThis has only been ACK'd by a single reviewer.",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-905099279,905099279,
luke-jr,2021-08-25 03:20:52,I would re-ACK except for https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684024088,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-905150806,905150806,
kiminuo,2021-08-25 07:59:54,"@fyquah I think https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684024088 is important so I would ACK once this is fixed. \n\nAlso, the work is actually done here https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-894853784 I believe (the last commit is extra and is for a follow-up PR).",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-905274210,905274210,
kiminuo,2021-09-06 20:20:20,"@fyquah Could you find a moment to address https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684024088?\n\n(PS: I'm willing to take over your PR to work on it if you are too busy. Anyway, it seems to me one little change is needed here, nothing time consuming.)",https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-913840141,913840141,
fanquake,2021-09-08 11:17:05,Closing this for now that #22918 is open.,https://github.com/bitcoin/bitcoin/pull/21245#issuecomment-915146664,915146664,
luke-jr,2021-02-24 03:15:59,"Where did ""height"" and ""generated"" go?",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r581587569,581587569,src/core_write.cpp
luke-jr,2021-02-24 03:18:36,no thx,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r581588425,581588425,src/rpc/blockchain.cpp
luke-jr,2021-02-24 03:20:55,Can we just use `BlockToJsonVerbosity` here? (Maybe rename it),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r581589321,581589321,src/core_io.h
fyquah,2021-02-24 20:36:30,"I renamed it to TxVerbosity, and moved it to src/core_io.h. Feels cleaner than passing bools.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582284150,582284150,src/core_io.h
fyquah,2021-02-24 20:36:38,"Removed, sorry :)",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582284273,582284273,src/rpc/blockchain.cpp
fyquah,2021-02-24 20:37:04,Added it back,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582284718,582284718,src/core_write.cpp
luke-jr,2021-02-24 22:16:17,"```suggestion\n                p.pushKV(""height"", uint64_t(prev_coin.nHeight));\n                p.pushKV(""generated"", bool(prev_coin.fCoinBase));\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582344514,582344514,src/core_write.cpp
luke-jr,2021-02-24 22:17:00,Why did you invert this? That is wrong?,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582344935,582344935,src/core_write.cpp
fyquah,2021-02-24 22:20:46,"i was confused as to what ""generated"" means. I will change this.\n\nWhy don't we just call that field ""coinbase"" though .. ?",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582347086,582347086,src/core_write.cpp
luke-jr,2021-02-24 22:42:50,The coinbase is the *input* to the generation transaction (height + 95 bytes arbitrary). The *outputs* (which are being spent in the input here) are simply generated coins.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582358642,582358642,src/core_write.cpp
fyquah,2021-02-24 22:53:38,"ah i see. this is fixed now, and i modified the tests to reflect this too.\n",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r582364092,582364092,src/core_write.cpp
0xB10C,2021-02-26 14:37:20,"nit: I find something like this cleaner\n\n```suggestion\nenum class TxVerbosity {\n    SHOW_TXID\n    SHOW_DETAILS,\n    SHOW_DETAILS_AND_PREV_OUT\n};\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r583682717,583682717,src/core_io.h
fyquah,2021-02-26 16:31:38,"done, adopted change.\n\nQuestion with code review like this, is it preferred to make a separate commit, or squash everything to a single commit ?",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r583763408,583763408,src/core_io.h
0xB10C,2021-02-26 20:56:54,"For small code review like the above 'Suggested change' through the GitHub web interface it's best to just fix it up locally, squash and then force push IMO. No reason to have it a separate commit (and I personally don't care about the co-author thing that GitHub does). ",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r583913359,583913359,src/core_io.h
luke-jr,2021-02-27 15:23:10,indentation is wrong,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584140902,584140902,src/rpc/blockchain.cpp
luke-jr,2021-02-27 15:34:36,Nit: This should be added in the later commit,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584142066,584142066,src/core_io.h
luke-jr,2021-02-27 15:35:52,"`const` doesn't do anything here, and is missing in the definition.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584142239,584142239,src/rpc/blockchain.h
luke-jr,2021-02-27 15:40:14,`SHOW_DETAILS` makes more sense as a default (`SHOW_TXID` isn't even supported by this function!),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584144982,584144982,src/core_io.h
luke-jr,2021-02-27 15:42:14,indentation is wrong,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584145181,584145181,src/rpc/blockchain.cpp
luke-jr,2021-02-27 15:42:30,nit: I'd drop the blank link,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584145203,584145203,src/rpc/blockchain.cpp
luke-jr,2021-02-27 15:53:37,We already have `prev_txout` above. Move `prev_coin` up there?,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584147273,584147273,src/core_write.cpp
luke-jr,2021-02-27 15:59:21,This could use a test,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584148920,584148920,src/rest.cpp
fyquah,2021-02-27 18:22:52,I added a test in 37f2c4e9e09d586e1c7d38332dc7fe7864245b97,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584170780,584170780,src/rest.cpp
fyquah,2021-02-27 18:23:08,Done,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584170795,584170795,src/core_write.cpp
luke-jr,2021-03-01 19:12:39,This is one commit too early (causing a build failure in that commit),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r584980336,584980336,src/core_io.h
fyquah,2021-03-01 20:07:08,Fixed. I moved the change in src/core_write.cpp from the previous commit to this one.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r585014241,585014241,src/core_io.h
luke-jr,2021-03-01 20:10:45,This is still here...,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r585016515,585016515,src/core_write.cpp
kiminuo,2021-05-11 19:28:36,Nit: It seems that people mostly write `prevout` as one word. Would it make sense to you to use `SHOW_DETAILS_AND_PREVOUT`?,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630462826,630462826,src/core_io.h
kiminuo,2021-05-11 19:37:29,"Nit: What about this way:\n\n```suggestion\n                    UniValue o_script_pub_key(UniValue::VOBJ);\n                    ScriptPubKeyToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* fIncludeHex */ true);\n\n                    UniValue p(UniValue::VOBJ);\n                    p.pushKV(""generated"", bool(prev_coin.fCoinBase));\n                    p.pushKV(""height"", uint64_t(prev_c",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630468041,630468041,src/core_write.cpp
kiminuo,2021-05-11 19:41:01,"I'm not sure if there is a reason for the trailing space:\n\n```suggestion\n                ""If verbosity is 2, returns an Object with information about block <hash> and information about each transaction.\n""\n```\n\nIs there?",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630470072,630470072,src/rpc/blockchain.cpp
kiminuo,2021-05-11 19:42:30,I would personally go with `==` instead of `<=` here.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630470973,630470973,src/rpc/blockchain.cpp
kiminuo,2021-05-11 19:44:33,"I would suggest:\n\n```suggestion\n    if (verbosity == 1) {\n```\n\nas it's easier to understand here.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630472266,630472266,src/rpc/blockchain.cpp
kiminuo,2021-05-11 19:49:48,It seems to me that the `TxVerbosity::SHOW_TXID` default value is not actually needed. Would it make sense to not having a default value here?,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630477831,630477831,src/rpc/blockchain.h
kiminuo,2021-05-11 19:56:42,"Should a note be added to the PR description to make sure it's clear that you modify an existing REST endpoint behavior (even though you just add more information)?\n\nI'm not sure whether this is something that is supposed to be mentioned in release notes too.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630488523,630488523,src/rest.cpp
kiminuo,2021-05-11 20:01:16,"Personally, I would use simple `if` here as it is shorter. Or is there any specific reason to use `switch`?",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630497819,630497819,src/core_write.cpp
kiminuo,2021-05-11 20:46:26,"This is suggested by clang formatter:\n\n```suggestion\n            const Coin& prev_coin = txundo->vprevout[i];\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630529304,630529304,src/core_write.cpp
kiminuo,2021-05-16 07:55:51,Maybe the function can be called `assert_fee_not_in_block`.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r633058166,633058166,test/functional/rpc_blockchain.py
kiminuo,2021-05-16 08:55:40,It would be great to introduce a constant for this value (similar to this ones https://github.com/bitcoin/bitcoin/pull/21245/files#diff-0b117a50ea1a4d205e8b5268d01f06b100c6d75ccc743628774b1f656077a0c3R23). I think that they could be re-used and code would be self-describing.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r633064256,633064256,test/functional/rpc_blockchain.py
kiminuo,2021-05-16 08:58:39,"The parameter is always `3` so it seems unnecessary.\n\nThe function does more than checking that prevouts are present. Maybe `{verify|assert}_level3_block`?",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r633064565,633064565,test/functional/rpc_blockchain.py
fyquah,2021-07-15 23:30:22,"personally think it's clearer to comprehend, compared to something like `verbosity == TxVerbosity::SHOW_TXID || verbosity == TxVerbosity::SHOW_DETAILS)`",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r670867840,670867840,src/core_write.cpp
fyquah,2021-07-15 23:40:37,Done,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r670871262,670871262,src/rpc/blockchain.cpp
fyquah,2021-07-15 23:41:24,I removed the trailing space.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r670871503,670871503,src/rpc/blockchain.cpp
fyquah,2021-07-15 23:49:51,"make sense, i removed it.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r670874255,670874255,src/rpc/blockchain.h
kiminuo,2021-07-16 07:21:03,"But here it would be `if (verbosity == TxVerbosity::SHOW_DETAILS_AND_PREVOUT) { /* compute something */ }`. Seems very straightforward and Bitcoin Core does not use switches instead of simple if statements by default.\n\nObviously, this is rather a nit. So I don't want to waste your time with this. Feel free to resolve this suggestion if you are happy with the code as it is.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671024143,671024143,src/core_write.cpp
kiminuo,2021-07-16 07:31:44,"Please mark this as resolved. üôè \n\n(For some reason I can't do it and it's harder for me to track what is done, what is not done and what was rejected as a suggestion.)",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671029842,671029842,src/rpc/blockchain.cpp
kiminuo,2021-07-16 07:32:46,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671030383,671030383,src/rpc/blockchain.cpp
kiminuo,2021-07-16 07:33:05,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671030561,671030561,src/rpc/blockchain.h
kiminuo,2021-07-16 07:34:32,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671031376,671031376,src/core_write.cpp
kiminuo,2021-07-16 07:35:44,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671032054,671032054,src/rpc/blockchain.cpp
kiminuo,2021-07-16 07:36:07,(Done; Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671032275,671032275,src/core_io.h
kiminuo,2021-07-16 07:38:02,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671033336,671033336,src/core_write.cpp
kiminuo,2021-07-16 07:38:35,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671033597,671033597,src/rpc/blockchain.cpp
kiminuo,2021-07-16 07:39:55,(Seems done; please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671034310,671034310,src/rpc/blockchain.cpp
kiminuo,2021-07-16 07:42:22,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671035746,671035746,src/core_io.h
kiminuo,2021-07-16 07:44:41,"The convention seems to be:\n\n```suggestion\n                    ScriptPubKeyToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* fIncludeHex */ true, /* include_addresses */ true);\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671037006,671037006,src/core_write.cpp
kiminuo,2021-07-16 07:46:30,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671038029,671038029,src/core_io.h
kiminuo,2021-07-16 07:46:41,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671038117,671038117,src/core_write.cpp
kiminuo,2021-07-16 07:47:25,(`const` was removed; please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671038545,671038545,src/rpc/blockchain.h
kiminuo,2021-07-16 07:48:29,(Please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671039181,671039181,src/core_io.h
kiminuo,2021-07-16 07:49:16,(Looks correct to me now; please mark as resolved üôè ),https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671039642,671039642,src/rpc/blockchain.cpp
kiminuo,2021-07-16 07:56:17,Is this still relevant?,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671043926,671043926,src/core_write.cpp
fyquah,2021-07-16 15:29:11,"i disagree -- i think what we are asserting here is that level 1 verbosity does not have fee in block,  level 2 & 3 does etc.. a constant for the value would probably make the test intention less clear.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671343803,671343803,test/functional/rpc_blockchain.py
fyquah,2021-07-16 15:33:54,"I renamed the prefix to assert. The pattern i was going for was: `assert_<some-expected-behaviour>(verbosity_level)`, which is consistent with the other assertion helpers in this test. I think i'd prefer leaving it as such.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671347160,671347160,test/functional/rpc_blockchain.py
fyquah,2021-07-16 15:58:36,"good point. I added a commit with changes to the release notes, please have a look!",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671363784,671363784,src/rest.cpp
kiminuo,2021-07-16 19:40:03,"Maybe:\n\n```suggestion\n- The `getblock` RPC command now supports verbose level 3 containing transaction inputs'\n```\n(naming based on https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.15.0.md) ",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671485932,671485932,doc/release-notes.md
kiminuo,2021-07-16 20:40:47,ok,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r671514162,671514162,test/functional/rpc_blockchain.py
theStack,2021-07-19 10:35:44,"nit: should probably also check here that for coinbase txs, ""prevout"" is _not_ set. Could also add a check `assert ""prevout"" in vin` before accessing, to avoid a KeyError thrown if this ever would fail in the future",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r672184180,672184180,test/functional/interface_rest.py
kiminuo,2021-07-19 11:39:24,L233: `calculate_fee` may be called `have_undo` now as this code block now is not only about calculating fees.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r672221707,672221707,src/core_write.cpp
kiminuo,2021-07-19 12:01:09,"Nit:\n```suggestion\n                const CTxUndo* txundo = (have_undo && i > 0) ? &blockUndo.vtxundo.at(i - 1) : nullptr;\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r672235127,672235127,src/rpc/blockchain.cpp
kiminuo,2021-07-19 12:06:02,"FMI: ""only for blocks in the current best chain"" - Is this precisely worded with regard to how pruning works? ",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r672238121,672238121,src/rpc/blockchain.cpp
fyquah,2021-08-03 22:10:13,"iiuc, txundo will not be looked up for pruned blocks. I reworded this from ""only for blocks"" to ""only for unpruned blocks"".",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r682135386,682135386,src/rpc/blockchain.cpp
kiminuo,2021-08-06 06:50:12,"nit: The name `block_to_json_verbosity` seems long and it does not add any more meaning than just `tx_verbosity`, imho.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r683990173,683990173,src/rpc/blockchain.cpp
kiminuo,2021-08-06 06:55:51,Some `enum class`es have these nice doxygen comments: https://github.com/bitcoin/bitcoin/blob/d67330d11245b11fbdd5e2dd5343ee451186931e/src/consensus/validation.h#L63 Maybe it is worth adding here too.,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r683992940,683992940,src/core_io.h
kiminuo,2021-08-06 07:10:10,"nit:\n```suggestion\n        # Verify that the non-coinbase tx has ""prevout"" key set\n```\nA Python dictionary is a set of key-value pairs.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684000150,684000150,test/functional/interface_rest.py
kiminuo,2021-08-06 07:14:52,"Given that `prevout` variable is used just once, it may be shorter and actually easier to read:\n\n```suggestion\n                    assert_equal(vin[""prevout""][""generated""], False)\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684002671,684002671,test/functional/interface_rest.py
kiminuo,2021-08-06 07:37:39,"I believe this should be more like:\n\n```suggestion\n            total_vin = Decimal(""0.00000000"")\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684017368,684017368,test/functional/rpc_blockchain.py
kiminuo,2021-08-06 07:42:17,"nit:\n```suggestion\n                // coinbase transaction (i.e. i == 0) doesn't have undo data\n```",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684020203,684020203,src/rpc/blockchain.cpp
kiminuo,2021-08-06 07:48:51,"Question: There is `include_addresses` parameter which is not used here. `true` is passed instead. Is that correct or should it look like:\n\n```suggestion\n                    ScriptPubKeyToUniv(prev_txout.scriptPubKey, o_script_pub_key, /* includeHex */ true, include_addresses);\n```\n\nIt looks to me that `include_addresses = true` is deprecated actually.\n\nEdit: This PR will be most l",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r684024088,684024088,src/core_write.cpp
luke-jr,2021-08-25 16:29:16,"Since this is adding new output, I think it should probably just be a constant `false` here, actually.",https://github.com/bitcoin/bitcoin/pull/21245#discussion_r695919260,695919260,src/core_write.cpp
jaysonmald35,2021-09-06 20:33:55,Thank u,https://github.com/bitcoin/bitcoin/pull/21245#discussion_r703064174,703064174,src/rpc/blockchain.cpp
