[
  {
    "sha": "6f2c26a457d279138d23d0f321edf55cd6b1f72f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjJjMjZhNDU3ZDI3OTEzOGQyM2QwZjMyMWVkZjU1Y2Q2YjFmNzJm",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-07T03:58:19Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-14T16:34:38Z"
      },
      "message": "Closely track mempool byte total. Add \"getmempoolinfo\" RPC.\n\nGoal:  Gain live insight into the mempool.  Groundwork for future work\nthat caps mempool size.",
      "tree": {
        "sha": "ce209c55c8ede839f538481135bf6949523db5cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce209c55c8ede839f538481135bf6949523db5cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f2c26a457d279138d23d0f321edf55cd6b1f72f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f2c26a457d279138d23d0f321edf55cd6b1f72f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f2c26a457d279138d23d0f321edf55cd6b1f72f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f2c26a457d279138d23d0f321edf55cd6b1f72f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7accb7dbad6bef0c98dc436d164f27189294eaf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7accb7dbad6bef0c98dc436d164f27189294eaf5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7accb7dbad6bef0c98dc436d164f27189294eaf5"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e511fe4222d1b6f06639b1a7f40e07d8b10d0b79",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=6f2c26a457d279138d23d0f321edf55cd6b1f72f",
        "patch": "@@ -531,3 +531,27 @@ Value getchaintips(const Array& params, bool fHelp)\n \n     return res;\n }\n+\n+Value getmempoolinfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getmempoolinfo\\n\"\n+            \"\\nReturns details on the active state of the TX memory pool.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"size\\\": xxxxx                (numeric) Current tx count\\n\"\n+            \"  \\\"bytes\\\": xxxxx               (numeric) Sum of all tx sizes\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getmempoolinfo\", \"\")\n+            + HelpExampleRpc(\"getmempoolinfo\", \"\")\n+        );\n+\n+    Object ret;\n+    ret.push_back(Pair(\"size\", (int64_t) mempool.size()));\n+    ret.push_back(Pair(\"bytes\", (int64_t) mempool.GetTotalTxSize()));\n+\n+    return ret;\n+}\n+"
      },
      {
        "sha": "3b51c91e7cb384a91d63055fd481525494430c5d",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=6f2c26a457d279138d23d0f321edf55cd6b1f72f",
        "patch": "@@ -256,6 +256,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"blockchain\",         \"getblockhash\",           &getblockhash,           true,      false,      false },\n     { \"blockchain\",         \"getchaintips\",           &getchaintips,           true,      false,      false },\n     { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true,      false,      false },\n+    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true,      true,       false },\n     { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },"
      },
      {
        "sha": "b850d15d4ef36084def16134a640f18aba861bd6",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=6f2c26a457d279138d23d0f321edf55cd6b1f72f",
        "patch": "@@ -200,6 +200,7 @@ extern json_spirit::Value getblockcount(const json_spirit::Array& params, bool f\n extern json_spirit::Value getbestblockhash(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getdifficulty(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value settxfee(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getmempoolinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getrawmempool(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getblockhash(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getblock(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "80cae6824480b203c6d7350bbdcadbb3fc000de5",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=6f2c26a457d279138d23d0f321edf55cd6b1f72f",
        "patch": "@@ -402,6 +402,7 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry)\n         for (unsigned int i = 0; i < tx.vin.size(); i++)\n             mapNextTx[tx.vin[i].prevout] = CInPoint(&tx, i);\n         nTransactionsUpdated++;\n+        totalTxSize += entry.GetTxSize();\n     }\n     return true;\n }\n@@ -426,6 +427,8 @@ void CTxMemPool::remove(const CTransaction &tx, std::list<CTransaction>& removed\n             removed.push_front(tx);\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)\n                 mapNextTx.erase(txin.prevout);\n+\n+            totalTxSize -= mapTx[hash].GetTxSize();\n             mapTx.erase(hash);\n             nTransactionsUpdated++;\n         }\n@@ -477,6 +480,7 @@ void CTxMemPool::clear()\n     LOCK(cs);\n     mapTx.clear();\n     mapNextTx.clear();\n+    totalTxSize = 0;\n     ++nTransactionsUpdated;\n }\n \n@@ -487,9 +491,12 @@ void CTxMemPool::check(CCoinsViewCache *pcoins) const\n \n     LogPrint(\"mempool\", \"Checking mempool with %u transactions and %u inputs\\n\", (unsigned int)mapTx.size(), (unsigned int)mapNextTx.size());\n \n+    uint64_t checkTotal = 0;\n+\n     LOCK(cs);\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         unsigned int i = 0;\n+        checkTotal += it->second.GetTxSize();\n         const CTransaction& tx = it->second.GetTx();\n         BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             // Check that every mempool transaction's inputs refer to available coins, or other mempool tx's.\n@@ -518,6 +525,8 @@ void CTxMemPool::check(CCoinsViewCache *pcoins) const\n         assert(tx.vin.size() > it->second.n);\n         assert(it->first == it->second.ptx->vin[it->second.n].prevout);\n     }\n+\n+    assert(totalTxSize == checkTotal);\n }\n \n void CTxMemPool::queryHashes(vector<uint256>& vtxid)"
      },
      {
        "sha": "2577397bce7b4496f4b293184c3683f418eed08e",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f2c26a457d279138d23d0f321edf55cd6b1f72f/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=6f2c26a457d279138d23d0f321edf55cd6b1f72f",
        "patch": "@@ -68,6 +68,7 @@ class CTxMemPool\n     CMinerPolicyEstimator* minerPolicyEstimator;\n \n     CFeeRate minRelayFee; // Passed to constructor to avoid dependency on main\n+    uint64_t totalTxSize; // sum of all mempool tx' byte sizes\n \n public:\n     mutable CCriticalSection cs;\n@@ -108,6 +109,11 @@ class CTxMemPool\n         LOCK(cs);\n         return mapTx.size();\n     }\n+    uint64_t GetTotalTxSize()\n+    {\n+        LOCK(cs);\n+        return totalTxSize;\n+    }\n \n     bool exists(uint256 hash)\n     {"
      }
    ]
  }
]