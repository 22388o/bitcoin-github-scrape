[
  {
    "sha": "5d262052728acdaa2d108a35ba9921a23b3d761a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDI2MjA1MjcyOGFjZGFhMmQxMDhhMzViYTk5MjFhMjNiM2Q3NjFh",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-01-25T21:33:21Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-04-26T14:01:45Z"
      },
      "message": "doc: explain AcceptToMemoryPoolWorker's coins_to_uncache",
      "tree": {
        "sha": "beb10f26d1a49e9b9a2b79908a008d5e215dd48e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/beb10f26d1a49e9b9a2b79908a008d5e215dd48e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d262052728acdaa2d108a35ba9921a23b3d761a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d262052728acdaa2d108a35ba9921a23b3d761a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d262052728acdaa2d108a35ba9921a23b3d761a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d262052728acdaa2d108a35ba9921a23b3d761a/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "975fbb19456ceebc1d20550ff44ff67f7c0bdaa9",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d262052728acdaa2d108a35ba9921a23b3d761a/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d262052728acdaa2d108a35ba9921a23b3d761a/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=5d262052728acdaa2d108a35ba9921a23b3d761a",
        "patch": "@@ -294,6 +294,10 @@ class CCoinsViewCache : public CCoinsViewBacked\n     bool HaveInputs(const CTransaction& tx) const;\n \n private:\n+    /**\n+     * @note this is marked const, but may actually append to `cacheCoins`, increasing\n+     * memory usage.\n+     */\n     CCoinsMap::iterator FetchCoin(const COutPoint &outpoint) const;\n };\n "
      },
      {
        "sha": "aec878891dcfa9407e164c3812095ae70c503f2f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d262052728acdaa2d108a35ba9921a23b3d761a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d262052728acdaa2d108a35ba9921a23b3d761a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5d262052728acdaa2d108a35ba9921a23b3d761a",
        "patch": "@@ -565,6 +565,13 @@ static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationSt\n     return CheckInputs(tx, state, view, true, flags, cacheSigStore, true, txdata);\n }\n \n+/**\n+ * @param[out] coins_to_uncache   Return any outpoints which were not previously present in the\n+ *                                coins cache, but were added as a result of validating the tx\n+ *                                for mempool acceptance. This allows the caller to optionally\n+ *                                remove the cache additions if the associated transaction ends\n+ *                                up being rejected by the mempool.\n+ */\n static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool& pool, CValidationState& state, const CTransactionRef& ptx,\n                               bool* pfMissingInputs, int64_t nAcceptTime, std::list<CTransactionRef>* plTxnReplaced,\n                               bool bypass_limits, const CAmount& nAbsurdFee, std::vector<COutPoint>& coins_to_uncache, bool test_accept) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n@@ -660,6 +667,10 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             if (!pcoinsTip->HaveCoinInCache(txin.prevout)) {\n                 coins_to_uncache.push_back(txin.prevout);\n             }\n+\n+            // Note: this call may add txin.prevout to the coins cache\n+            // (pcoinsTip.cacheCoins) by way of FetchCoin(). It should be removed\n+            // later (via coins_to_uncache) if this tx turns out to be invalid.\n             if (!view.HaveCoin(txin.prevout)) {\n                 // Are inputs missing because we already have the tx?\n                 for (size_t out = 0; out < tx.vout.size(); out++) {\n@@ -981,6 +992,11 @@ static bool AcceptToMemoryPoolWithTime(const CChainParams& chainparams, CTxMemPo\n     std::vector<COutPoint> coins_to_uncache;\n     bool res = AcceptToMemoryPoolWorker(chainparams, pool, state, tx, pfMissingInputs, nAcceptTime, plTxnReplaced, bypass_limits, nAbsurdFee, coins_to_uncache, test_accept);\n     if (!res) {\n+        // Remove coins that were not present in the coins cache before calling ATMPW;\n+        // this is to prevent memory DoS in case we receive a large number of\n+        // invalid transactions that attempt to overrun the in-memory coins cache\n+        // (`CCoinsViewCache::cacheCoins`).\n+\n         for (const COutPoint& hashTx : coins_to_uncache)\n             pcoinsTip->Uncache(hashTx);\n     }"
      }
    ]
  }
]