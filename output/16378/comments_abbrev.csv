DrahtBot,2019-07-12 16:18:07,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18788 (tests: Update more tests to work with descriptor wallets by achow101)\n\nIf you consider this pull request importa",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-510946416,510946416,
luke-jr,2019-08-20 00:05:04,"Suggest moving ""inputs"" to a field on ""options"", and removing PSBT output from `send` (there is already a RPC for it, as you note).",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-522799652,522799652,
Sjors,2019-08-21 08:56:06,"@luke-jr agree about moving the inputs. That also makes it easier to rebase on #11413 (explicit fee rate) and have a syntax like `send 0.001 BTC bc1... 1 sat/B`.\n\nThe reason I added PSBT output is to make multisig easier. When used with a descriptor wallet #15764 you simply call `send` and it will sign its own part and give you a PSBT to give to the other party (haven't tested this yet though)",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-523364668,523364668,
Sjors,2019-08-26 10:34:14,"Closing in favor of tweaking `sendmany` / `sendtoaddress`:\n* #11413 adds fee rate support (`1 sat/b`) without the need for an options JSON\n* @luke-jr suggested moving coin selection into an options JSON (it's a more advanced feature than fee selection, so that's fine by me)\n* PSBT output can be added when we need it, same for the option to avoid committing transaction to wallet",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-524810407,524810407,
Sjors,2020-02-24 21:28:48,"And we're back! I tried to make the simplest use case, sending coins to a single address with a manual fee in satoshi per byte, easy for `bitcoin-cli` users. This means you can set `conf_target` and `estimate_mode` either in the options dictionary or as a positional argument.\n\n```\nbitcoin-cli -regtest send '{""ADDRESS"": 0.1}' 1 sat/b\n```\n\nIdeally I'd also get rid of the JSON encoding, b",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-590557710,590557710,
Sjors,2020-03-02 17:37:53,"This now has enough test coverage that I consider it review worthy, but note that it depends on 3 other pull requests.",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-593523577,593523577,
promag,2020-03-15 15:07:30,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-599222476,599222476,
Sjors,2020-06-25 19:01:07,"Rebased after #16377 and #11413, it should be easier to review now. ",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-649761160,649761160,
Sjors,2020-08-07 15:37:06,"Rebased and tests should pass now. Some things that I think are worth discussing:\n\n1. `CommitTransaction()` happily accepts transactions with `nLockTime` in the future. It's not clear to me if those eventually get broadcast; in the functional test I had to re-submit it manually. This could be tackled in another PR though.\n2. We return a transaction hash or a PSBT, in part depending on magic.",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-670577529,670577529,
Sjors,2020-08-31 11:56:06,Rebased after #18244 landed.,https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-683733694,683733694,
ShaunApps,2020-09-10 13:14:42,"ACK.\n\nRan functional tests. Played w/ command in cli. Left a nit",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-690279475,690279475,
meshcollider,2020-09-15 02:51:18,"Nits can be left for followup, let's get this in to move #16546 forward ðŸš€ ",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-692430345,692430345,
Sjors,2020-09-17 13:31:41,"Nits addressed in #19969, where I'm also declaring this RPC experimental.",https://github.com/bitcoin/bitcoin/pull/16378#issuecomment-694236447,694236447,
instagibbs,2019-07-12 14:15:37,"as noted in my other PR, I think `broadcast` is the wrong word here. It's moreso that we do not commit it to the wallet, which also broadcasts it",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r303001240,303001240,src/wallet/rpcwallet.cpp
Sjors,2019-07-12 14:28:18,"I'm open to other terms, maybe `commit`? But that seems less clear.\n\nThe background motivation here is that an RPC consumer may need certainty about whether the transaction failed or succeeded. For example this should even work if the RPC connection gets cut before the call returns.\n\nJust retrying is unsafe. So right now the only option is to check if the wallet contains transactions to th",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r303007096,303007096,src/wallet/rpcwallet.cpp
instagibbs,2019-07-12 14:49:10,"""broadcast"" already has meaning to users unfortunately e.g., `walletbroadcast` startup arg",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r303016671,303016671,src/wallet/rpcwallet.cpp
Sjors,2019-07-13 15:25:27,That's a rather scary startup option imo; forget it once and everything gets broadcast?,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r303209033,303209033,src/wallet/rpcwallet.cpp
laanwj,2019-08-01 12:51:53,"> That's a rather scary startup option imo; forget it once and everything gets broadcast?\n\nThis is definitely an option, like the proxy configuration, one'd want to have in the `bitcoin.conf` and not on the command line!\n\nBut also, not necessarily: the idea is that when you have it enabled, you broadcast wallet transactions manually (e.g. by pasting them into the transaction broadcast of a",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r309679500,309679500,src/wallet/rpcwallet.cpp
Sjors,2019-08-01 17:04:50,The option I introduce here doesn't even add the transaction to the wallet; it only returns the hex. So it goes beyond `walletbroadcast=0` afaik.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r309802778,309802778,src/wallet/rpcwallet.cpp
Sjors,2019-08-02 16:34:34,I renamed `broadcast` to `add_to_wallet` and explained it a bit better in the docs. ,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r310209218,310209218,src/wallet/rpcwallet.cpp
MarcoFalke,2020-08-14 12:21:36,Might use the non-deprecated constructor. E.g. #19528  ,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r470590536,470590536,src/wallet/rpcwallet.cpp
MarcoFalke,2020-08-14 12:22:09,"```suggestion\n                    ""The fee will be equally deducted from the amount of each specified output.\n""\n```\n\nNo need for the whitespace",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r470590770,470590770,src/wallet/rpcwallet.cpp
MarcoFalke,2020-08-14 12:22:53,"As the previous line already checks for nullptr, this can be a reference.\n```suggestion\n    CWallet& wallet = pwallet.get();\n```",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r470591098,470591098,src/wallet/rpcwallet.cpp
Sjors,2020-08-28 16:06:00,Do you mean `const CWallet& pwallet = wallet.get();` ? This creates a `const` mess when calling `FundTransaction` (which I'd rather not refactor in this PR).,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r479398807,479398807,src/wallet/rpcwallet.cpp
Sjors,2020-08-28 16:19:33,I switched to the fancy new thing.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r479406129,479406129,src/wallet/rpcwallet.cpp
meshcollider,2020-09-07 00:33:53,"Because these are Optional::OMITTED, the ""default"" is actually the description string, so the only output is:\n```\n2. conf_target                           (numeric) wallet default\n3. estimate_mode                         (string) unset\n```",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r484135309,484135309,src/wallet/rpcwallet.cpp
meshcollider,2020-09-07 00:36:46,nit: unnecessary newline,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r484135676,484135676,src/wallet/rpcwallet.cpp
Sjors,2020-09-07 18:57:07,"I dropped the `Optional::OMITTED` bit, not super intuitive... (cc @MarcoFalke)\n\n```\n2. conf_target                           (numeric, optional, default=wallet default) Confirmation target (in blocks), or fee rate (for BTC/kB or sat/B estimate modes)\n3. estimate_mode                         (string, optional, default=unset) The fee estimate mode, must be one of (case insensitive):\n      ",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r484545963,484545963,src/wallet/rpcwallet.cpp
meshcollider,2020-09-10 02:41:18,Why is this check so much more involved than just if exists() and get_bool() like you do with add_to_wallet below?,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r486028808,486028808,src/wallet/rpcwallet.cpp
Sjors,2020-09-10 11:44:47,"Because I blindly copied it from `walletcreatefundedpsbt` :-)\n\nReplaced with simpler version.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r486271735,486271735,src/wallet/rpcwallet.cpp
ShaunApps,2020-09-10 13:13:44,"nit: parenthesis ')' in wrong place, enclosing HelpExampleCli and next example string",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r486325092,486325092,src/wallet/rpcwallet.cpp
achow101,2020-09-15 00:44:30,nit: Extra trailing comma,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488315345,488315345,src/wallet/rpcwallet.cpp
achow101,2020-09-15 01:06:56,nit: s/out/our,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488321814,488321814,src/wallet/rpcwallet.cpp
achow101,2020-09-15 01:08:59,"Seems like this serialization should only occur if we are actually going to return the psbt, so move it inside the next if block?",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488322349,488322349,src/wallet/rpcwallet.cpp
achow101,2020-09-15 01:10:34,"nit: spaces after each arg, here and below",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488322773,488322773,test/functional/wallet_send.py
achow101,2020-09-15 01:15:11,Seems like it would be better to call this `broadcast` rather than `add_to_wallet`.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488323964,488323964,src/wallet/rpcwallet.cpp
achow101,2020-09-15 01:21:17,"I think that's supposed to be 0.1, not 1.000",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488325666,488325666,test/functional/wallet_send.py
kallewoof,2020-09-15 02:19:01,"`[rpc] walletcreatefundedpsbt: allow inputs to be null`:\n\nStyle-nit: add `{}` while at it, since you're touching this line.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488342027,488342027,src/rpc/rawtransaction_util.cpp
kallewoof,2020-09-15 02:19:44,"`[rpc] walletcreatefundedpsbt: allow inputs to be null`:\n\nAdd `{}`s.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488342222,488342222,src/rpc/rawtransaction_util.cpp
kallewoof,2020-09-15 02:36:39,`RPCArg::Type::AMOUNT` is not a key-value pair. I think you mean `RPCArg::Type::OBJ`.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488347026,488347026,src/wallet/rpcwallet.cpp
kallewoof,2020-09-15 02:38:27,`RPCArg::Type::STR_HEX` is not a key-value pair either. I think you mean `RPCArg::Type::OBJ` here too.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488347536,488347536,src/wallet/rpcwallet.cpp
kallewoof,2020-09-15 02:40:23,Why are there two conf_target and estimate_mode parameters?,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488348105,488348105,src/wallet/rpcwallet.cpp
kallewoof,2020-09-15 02:44:23,"Alternative:\n```C++\nbool add_to_wallet = !options.exists(""add_to_wallet"") || options[""add_to_wallet""].get_bool();\n```\n",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488349241,488349241,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 13:58:26,Would be more robust to throw an error if both options are set.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488690111,488690111,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 14:01:49,"nit: JSON, Capitalize A",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488692783,488692783,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 14:04:15,nit: JSON,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488694616,488694616,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 14:05:19,nit: JSON,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488695442,488695442,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 14:09:12,"This seems like an bug? s/""add_to_wallet""/""replaceable""/",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488698235,488698235,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 14:12:55,"nit: Maybe this and comparable sections could be compressed with ternaries as well\n```\nconst bool rbf = options.exists(""replaceable"") ? options[""add_to_wallet""].get_bool() : pwallet->m_signal_rbf;\n```\n\nEDIT: or see kalle's suggestion...",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488701017,488701017,src/wallet/rpcwallet.cpp
fjahr,2020-09-15 14:26:43,"The assert if the replaceable option was actually set is only done if the tx is added to the wallet, so I think these tests can not fail.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488711853,488711853,test/functional/wallet_send.py
fjahr,2020-09-15 14:29:23,micro-nit: spacing before `add_to_wallet`,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r488714069,488714069,test/functional/wallet_send.py
Sjors,2020-09-17 12:58:53,"Thanks, adding fix to followup PR.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490222969,490222969,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 12:59:58,"Thanks, fixing nits in followup.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490223692,490223692,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:13:28,"`,[a-zA-Z0-9]+` found a bunch more",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490232799,490232799,test/functional/wallet_send.py
Sjors,2020-09-17 13:14:34,"Maybe, but this also works when `walletbroadcast` is off",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490233578,490233578,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:17:37,"Will change in the followup in a separate commit, in case people think it's too late to touch.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490235723,490235723,src/rpc/rawtransaction_util.cpp
Sjors,2020-09-17 13:20:24,For convenience; setting the fee rate is so common I'd rather not have to use the options field.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490237857,490237857,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:20:48,I'll leave this to your #19957 ,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490238141,490238141,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:21:08,I believe that's covered in #19957,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490238402,490238402,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:22:29,I'll address nits in the followup PR,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490239407,490239407,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:23:50,Hopefully addressed in #19957?,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490240636,490240636,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 13:28:27,"Added the check here in two other places just in case, though `test_send` should probably be refactored to check this unless it's explicitly expected to fail.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490244843,490244843,test/functional/wallet_send.py
fjahr,2020-09-17 16:32:03,"Not that I see... I am not sure if I am missing something or if you missed the point of my initial (non-nit) comment :) But now I seem to be able to make code suggestions again (didn't work before for some reason), this is what I meant with ""this seems like a bug"":\n\n```suggestion\n                rbf = options[""replaceable""].get_bool();\n```",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490400099,490400099,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 18:42:48,I think I got distracted by your second comment. Will fix in #19969 ,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490477215,490477215,src/wallet/rpcwallet.cpp
Sjors,2020-09-17 19:23:58,"I think the type is correct, see also `walletcreatefundedpsbt`, but it's confusing (in the code) that the wrapping object is described next to the `data` field. cc @achow101 / @MarcoFalke thoughts?",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490500686,490500686,src/wallet/rpcwallet.cpp
achow101,2020-09-17 19:34:06,The type is correct because it is describing the type of the value in this key-value pair. The weirdness is that this output specification is the almost the only place where the key is not fixed but user defined.,https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490511521,490511521,src/wallet/rpcwallet.cpp
kallewoof,2020-09-18 00:12:43,"Feels out of scope for #19957, and not a big deal anyway so leaving it be.",https://github.com/bitcoin/bitcoin/pull/16378#discussion_r490628950,490628950,src/wallet/rpcwallet.cpp
