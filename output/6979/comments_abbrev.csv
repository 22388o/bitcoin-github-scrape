laanwj,2015-11-10T14:04:44Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155428562,155428562,
paveljanik,2015-11-10T14:10:02Z,Can you please change Mempool in the above screenshot to Memory pool?\nNice. utACK. Will test later.\n\nI'd like to see also the graph of the memory pool - similar to the Network Traffic tab...\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155430751,155430751,
jonasschnelli,2015-11-10T14:15:57Z,@paveljanik: thanks for the review. Yes. The mempool chart is also on my list of things i'd like to do (... and that list is already very large).\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155432042,155432042,
fanquake,2015-11-10T14:19:46Z,conceptACK\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155432846,155432846,
jonasschnelli,2015-11-10T14:33:13Z,Nit's addressed with two squashme commits.\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155435876,155435876,
fanquake,2015-11-10T15:55:27Z,OS X screenshot that includes the latest changes.\n![memory pool](https://cloud.githubusercontent.com/assets/863730/11067198/6444bafe-8806-11e5-8288-50e6d421c27a.png)\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155461934,155461934,
sipa,2015-11-10T15:57:11Z,"Random suggestion: under ""Block chain"", put a "" Database cache siE"" entry\nthat is pcoinsTip->GetDynamicUsage()"" ?\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155462859,155462859,
jonasschnelli,2015-11-10T16:02:01Z,"@sipa: good point. But because of the window height (I try not to enlarge), maybe the database cache size fits better in a new ""limits"" (or ""usage"") screen/graph. There i could imaging a mempool size/memusage chart as well as the database-cache (chart and current value).\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155464936,155464936,
sipa,2015-11-10T16:03:09Z,"Fair enough, keep the pull request as-is then.\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155465411,155465411,
MarcoFalke,2015-11-10T16:15:41Z,"Looks good, Concept ACK.\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155468906,155468906,
paveljanik,2015-11-10T17:08:01Z,"Compile log compared to the master:\n\n```\n+qt/forms/debugwindow.ui: Warning: The name 'label_10' (QLabel) is already in use, defaulting to 'label_101'.\n+qt/forms/debugwindow.ui: Warning: The name 'label_3' (QLabel) is already in use, defaulting to 'label_31'.\n+qt/forms/debugwindow.ui: Warning: The name 'label_11' (QLabel) is already in use, defaulting to 'label_111'.\n+qt/forms/debugwindow.ui:",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155489309,155489309,
jonasschnelli,2015-11-10T19:02:02Z,@paveljanik: these warning are well known and they are unrelated to this PR. Have also plans to fix the qt id/name conflicts (warnings) soon.\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155532275,155532275,
jonasschnelli,2015-11-10T19:10:49Z,Switched to MB / SI units (1000^2 for MB).\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155534583,155534583,
paveljanik,2015-11-10T19:24:18Z,@jonasschnelli I compared the log of the master with the log of the master with this PR. I do not see such warnings in the master builds... I have not investigated from where they come though.\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155538710,155538710,
jonasschnelli,2015-11-11T08:12:31Z,"Right. There where QT name/id conflicts (some introduced over this PR), although, Qt auto-increments conflicting IDs and because we don't access them through the code, it wouldn't be a problem.\nBut it's ugly, agreed.\n\nAdded a squashme-commit with a fix.\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-155700315,155700315,
jonasschnelli,2015-11-18T21:20:53Z,Here are the binaries if someone likes to test this: https://bitcoin.jonasschnelli.ch/pulls/6979/\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157867063,157867063,
paveljanik,2015-11-18T21:39:24Z,"Memory usage is continuously updated here, but always ends with `.00 KB` (on testnet). I have never seen any decimal number there. Do we need these two decimal zeroes?\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157873327,157873327,
jonasschnelli,2015-11-18T21:42:15Z,"@paveljanik: if the memory usage is grater than 1000000 bytes it will use ""MB"" and there the precision of two decimal places make sense IMO.\n",https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157874088,157874088,
jonasschnelli,2015-11-18T22:25:37Z,Fixed the size_t to float conversion. I accidentally dropped the 1000**.0**/1000000**.0** in the arithmetic.\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157884433,157884433,
paveljanik,2015-11-19T08:34:16Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157988887,157988887,
paveljanik,2015-11-19T08:34:46Z,I was wondering how you get the first screenshot :+1: \n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157989001,157989001,
jonasschnelli,2015-11-19T08:44:53Z,> I was wondering how you get the first screenshot \n\nI think somewhere the `.0` was lost during implementation of the KB/MB switch logic (and the screenshots was done before that). But this does not explain @fanquake 's screen. ?! Maybe on osx `QString::number()` does somehow evaluate the division always as float?\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157990851,157990851,
paveljanik,2015-11-19T08:47:45Z,I do not think so (division is evaluated first). Maybe his screenshot is from the same code from which you did the screenshot.\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-157991431,157991431,
MarcoFalke,2015-11-19T20:00:28Z,utACK c197798\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-158179174,158179174,
MarcoFalke,2015-11-20T13:12:13Z,Teseted ACK c197798. Code looks clean.\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-158399078,158399078,
laanwj,2015-11-20T13:34:13Z,Tested ACK\n,https://github.com/bitcoin/bitcoin/pull/6979#issuecomment-158404557,158404557,
laanwj,2015-11-10T14:04:00Z,Current _number_ of transactions\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44408741,44408741,src/qt/forms/debugwindow.ui
laanwj,2015-11-10T14:04:24Z,I'd leave out 'dynamic'\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44408790,44408790,src/qt/forms/debugwindow.ui
paveljanik,2015-11-10T14:07:31Z,amount -> number\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44409125,44409125,src/qt/rpcconsole.h
MarcoFalke,2015-11-10T16:15:15Z,"I don't like all those MB, MiB inconsistencies. At least make it consistent with the parameter which sets the mempool size. (Which is _not_ MiB iirc)\n",https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44426151,44426151,src/qt/rpcconsole.cpp
laanwj,2015-11-10T16:42:37Z,We should be using MB (1e6 bytes) unless there is a convincing reason to use MiB (2^20 bytes).\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44430403,44430403,src/qt/rpcconsole.cpp
MarcoFalke,2015-11-10T16:51:51Z,"Some people refer to 2^20 bytes as ""MB"", so at least MiB is clear what it does.\n",https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44431693,44431693,src/qt/rpcconsole.cpp
MarcoFalke,2015-11-10T16:53:40Z,"But it's used less commonly, so MB is fine as well. Just be consistent, which is what the NIT is complaining about. You can't parse the command line in MB (1e6) and then display MB (10^20)\n",https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44431956,44431956,src/qt/rpcconsole.cpp
laanwj,2015-11-10T17:01:01Z,"In bitcoin core we stick to SI units and use MB, which is defined as 1000000, not 1024*1024, MiB, etc if we do that that's a mistake.\n",https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44433008,44433008,src/qt/rpcconsole.cpp
sipa,2015-11-10T17:04:28Z,"Technically, B in SI means bel. B as byte is defined by IEEE 1541 (which\nalso defined b to mean bit).\n",https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44433461,44433461,src/qt/rpcconsole.cpp
MarcoFalke,2015-11-10T20:13:23Z,As pointed out by @paveljanik `label_11` seems already in use: C.f. `$ grep -r 'label_11' src/qt/`\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44458443,44458443,src/qt/forms/debugwindow.ui
MarcoFalke,2015-11-10T20:14:43Z,Generally speaking: Is it encouraged to use `(name)_i++` for references? I'd prefer something like `label_memp_whatever`.\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44458595,44458595,src/qt/forms/debugwindow.ui
jonasschnelli,2015-11-11T08:10:22Z,Right. Agree with that. It was already named `label_11` before this PR. The diff looks a bit strange. But i have fixed this now.\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r44509682,44509682,src/qt/forms/debugwindow.ui
MarcoFalke,2015-11-19T19:23:07Z,Nit: Isn't this `long`?\n,https://github.com/bitcoin/bitcoin/pull/6979#discussion_r45387194,45387194,src/qt/clientmodel.cpp
jonasschnelli,2015-11-19T19:45:40Z,"Thanks! Right, .. the map's size() itself is `size_t`, but the CTxMempool uses `long size()` in its interface.\nFixed.\n",https://github.com/bitcoin/bitcoin/pull/6979#discussion_r45390475,45390475,src/qt/clientmodel.cpp
