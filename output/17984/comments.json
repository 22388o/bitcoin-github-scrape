[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577697064",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17984#issuecomment-577697064",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17984",
    "id": 577697064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzY5NzA2NA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-23T14:09:42Z",
    "updated_at": "2020-01-23T14:09:42Z",
    "author_association": "MEMBER",
    "body": "Rebased, fixed travis, and made the commit hash start with `aaaa` to represent the pain I endured when writing the test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577697064/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 3,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580284444",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17984#issuecomment-580284444",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17984",
    "id": 580284444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDI4NDQ0NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T14:40:35Z",
    "updated_at": "2020-01-30T14:40:35Z",
    "author_association": "MEMBER",
    "body": "ACK aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580284444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370386949",
    "pull_request_review_id": 347649178,
    "id": 370386949,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4Njk0OQ==",
    "diff_hunk": "@@ -83,6 +97,41 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=noban@127.0.0.1:230\"], \"Invalid netmask specified in\", match=ErrorMatch.PARTIAL_REGEX)\n         self.nodes[1].assert_start_raises_init_error([\"-whitebind=noban@127.0.0.1/10\"], \"Cannot resolve -whitebind address\", match=ErrorMatch.PARTIAL_REGEX)\n \n+    def check_tx_relay(self):\n+        block_op_true = self.nodes[0].getblock(self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n+        self.sync_all()\n+\n+        self.log.debug(\"Create a connection from a whitelisted wallet that rebroadcasts raw txs\")\n+        # A python mininode is needed to send the raw transaction directly. If a full node was used, it could only\n+        # rebroadcast via the inv-getdata mechanism. However, even for whitelisted connections, a full node would\n+        # currently not request a txid that is already in the mempool.\n+        self.restart_node(1, extra_args=[\"-whitelist=forcerelay@127.0.0.1\"])\n+        p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())\n+\n+        self.log.debug(\"Send a tx from the wallet initially\")\n+        tx = FromHex(\n+            CTransaction(),\n+            self.nodes[0].createrawtransaction(\n+                inputs=[{\n+                    'txid': block_op_true['tx'][0],\n+                    'vout': 0,\n+                }], outputs=[{\n+                    ADDRESS_BCRT1_P2WSH_OP_TRUE: 5,\n+                }]),\n+        )\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        txid = tx.rehash()\n+\n+        self.log.debug(\"Wait until tx is in node[1]'s mempool\")\n+        p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+\n+        self.log.debug(\"Check that node[1] will send the tx to node[0] even though it is already in the mempool\")\n+        connect_nodes(self.nodes[1], 0)\n+        with self.nodes[1].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\n+            p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+            wait_until(lambda: txid in self.nodes[0].getrawmempool())",
    "path": "test/functional/p2p_permissions.py",
    "position": 86,
    "original_position": 74,
    "commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "original_commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "user": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this what we really want? If the tx is already in node 0's mempool, wouldn't this always return right away?",
    "created_at": "2020-01-23T22:23:24Z",
    "updated_at": "2020-01-23T22:24:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370386949",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370386949"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370386949"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370386949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 133,
    "original_line": 133,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370402576",
    "pull_request_review_id": 347668184,
    "id": 370402576,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMjU3Ng==",
    "diff_hunk": "@@ -83,6 +97,41 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=noban@127.0.0.1:230\"], \"Invalid netmask specified in\", match=ErrorMatch.PARTIAL_REGEX)\n         self.nodes[1].assert_start_raises_init_error([\"-whitebind=noban@127.0.0.1/10\"], \"Cannot resolve -whitebind address\", match=ErrorMatch.PARTIAL_REGEX)\n \n+    def check_tx_relay(self):\n+        block_op_true = self.nodes[0].getblock(self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n+        self.sync_all()\n+\n+        self.log.debug(\"Create a connection from a whitelisted wallet that rebroadcasts raw txs\")\n+        # A python mininode is needed to send the raw transaction directly. If a full node was used, it could only\n+        # rebroadcast via the inv-getdata mechanism. However, even for whitelisted connections, a full node would\n+        # currently not request a txid that is already in the mempool.\n+        self.restart_node(1, extra_args=[\"-whitelist=forcerelay@127.0.0.1\"])\n+        p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())\n+\n+        self.log.debug(\"Send a tx from the wallet initially\")\n+        tx = FromHex(\n+            CTransaction(),\n+            self.nodes[0].createrawtransaction(\n+                inputs=[{\n+                    'txid': block_op_true['tx'][0],\n+                    'vout': 0,\n+                }], outputs=[{\n+                    ADDRESS_BCRT1_P2WSH_OP_TRUE: 5,\n+                }]),\n+        )\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        txid = tx.rehash()\n+\n+        self.log.debug(\"Wait until tx is in node[1]'s mempool\")\n+        p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+\n+        self.log.debug(\"Check that node[1] will send the tx to node[0] even though it is already in the mempool\")\n+        connect_nodes(self.nodes[1], 0)\n+        with self.nodes[1].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\n+            p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+            wait_until(lambda: txid in self.nodes[0].getrawmempool())",
    "path": "test/functional/p2p_permissions.py",
    "position": 86,
    "original_position": 74,
    "commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "original_commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, I think my comment is unclear. It refers to node[1]'s mempool.\r\n\r\nSo node[1] will rebroadcast the tx from the wallet even though it is already in node[1]'s mempool",
    "created_at": "2020-01-23T23:08:02Z",
    "updated_at": "2020-01-23T23:08:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370402576",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370402576"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370402576"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370402576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 133,
    "original_line": 133,
    "side": "RIGHT",
    "in_reply_to_id": 370386949
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370403445",
    "pull_request_review_id": 347669251,
    "id": 370403445,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMzQ0NQ==",
    "diff_hunk": "@@ -83,6 +97,41 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=noban@127.0.0.1:230\"], \"Invalid netmask specified in\", match=ErrorMatch.PARTIAL_REGEX)\n         self.nodes[1].assert_start_raises_init_error([\"-whitebind=noban@127.0.0.1/10\"], \"Cannot resolve -whitebind address\", match=ErrorMatch.PARTIAL_REGEX)\n \n+    def check_tx_relay(self):\n+        block_op_true = self.nodes[0].getblock(self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n+        self.sync_all()\n+\n+        self.log.debug(\"Create a connection from a whitelisted wallet that rebroadcasts raw txs\")\n+        # A python mininode is needed to send the raw transaction directly. If a full node was used, it could only\n+        # rebroadcast via the inv-getdata mechanism. However, even for whitelisted connections, a full node would\n+        # currently not request a txid that is already in the mempool.\n+        self.restart_node(1, extra_args=[\"-whitelist=forcerelay@127.0.0.1\"])\n+        p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())\n+\n+        self.log.debug(\"Send a tx from the wallet initially\")\n+        tx = FromHex(\n+            CTransaction(),\n+            self.nodes[0].createrawtransaction(\n+                inputs=[{\n+                    'txid': block_op_true['tx'][0],\n+                    'vout': 0,\n+                }], outputs=[{\n+                    ADDRESS_BCRT1_P2WSH_OP_TRUE: 5,\n+                }]),\n+        )\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        txid = tx.rehash()\n+\n+        self.log.debug(\"Wait until tx is in node[1]'s mempool\")\n+        p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+\n+        self.log.debug(\"Check that node[1] will send the tx to node[0] even though it is already in the mempool\")\n+        connect_nodes(self.nodes[1], 0)\n+        with self.nodes[1].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\n+            p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+            wait_until(lambda: txid in self.nodes[0].getrawmempool())",
    "path": "test/functional/p2p_permissions.py",
    "position": 86,
    "original_position": 74,
    "commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "original_commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "user": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ah! that makes a lot more sense.",
    "created_at": "2020-01-23T23:10:50Z",
    "updated_at": "2020-01-23T23:10:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370403445",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370403445"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370403445"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370403445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 133,
    "original_line": 133,
    "side": "RIGHT",
    "in_reply_to_id": 370386949
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511004321",
    "pull_request_review_id": 515829607,
    "id": 511004321,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwNDMyMQ==",
    "diff_hunk": "@@ -13,6 +13,8 @@\n \n ADDRESS_BCRT1_UNSPENDABLE = 'bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj'\n ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR = 'addr(bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj)#juyq9d97'\n+# Coins sent to this address can be spent with a witness stack of just OP_TRUE\n+ADDRESS_BCRT1_P2WSH_OP_TRUE = 'bcrt1qft5p2uhsdcdc3l2ua4ap5qqfg4pjaqlp250x7us7a8qqhrxrxfsqseac85'",
    "path": "test/functional/test_framework/address.py",
    "position": 5,
    "original_position": 5,
    "commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "original_commit_id": "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
    "user": {
      "login": "decryp2kanon",
      "id": 60179867,
      "node_id": "MDQ6VXNlcjYwMTc5ODY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/60179867?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decryp2kanon",
      "html_url": "https://github.com/decryp2kanon",
      "followers_url": "https://api.github.com/users/decryp2kanon/followers",
      "following_url": "https://api.github.com/users/decryp2kanon/following{/other_user}",
      "gists_url": "https://api.github.com/users/decryp2kanon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decryp2kanon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decryp2kanon/subscriptions",
      "organizations_url": "https://api.github.com/users/decryp2kanon/orgs",
      "repos_url": "https://api.github.com/users/decryp2kanon/repos",
      "events_url": "https://api.github.com/users/decryp2kanon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decryp2kanon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "how did you create this address? just curios :smile: ",
    "created_at": "2020-10-23T16:33:54Z",
    "updated_at": "2020-10-23T16:33:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r511004321",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511004321"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r511004321"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511004321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 17,
    "original_line": 17,
    "side": "RIGHT"
  }
]