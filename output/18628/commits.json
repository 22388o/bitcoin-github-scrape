[
  {
    "sha": "fa4c29bc1d2425f861845bae4f3816d9817e622a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTRjMjliYzFkMjQyNWY4NjE4NDViYWU0ZjM4MTZkOTgxN2U2MjJh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-14T01:39:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-14T01:38:29Z"
      },
      "message": "test: Add various low-level p2p tests",
      "tree": {
        "sha": "f4ee69845cafc999f6a8ab5ab5d1c3c8007fe17d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4ee69845cafc999f6a8ab5ab5d1c3c8007fe17d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4c29bc1d2425f861845bae4f3816d9817e622a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhA3wwArXjc0IPH9+yfFx/JNVO/czWsNIrttbR1hixfX6wzKjV7fz6N7vHl+RM1\nVSJku5qcMpTPmlA2Ep66vOiOuN89PAGhGuIJrQKc/F5d2Yz2rwOiBlNk/jkiz1BQ\nkJl8pmePZ4sC4yOZaLPRHdW3qKRKLMAmq6mSMdd3NTEOG2EEuuJcFR9u/pwwJRuQ\nwwkCMSw+Qg0IeEsfgbHqep9hguPwimHQiPHxcT+/fhLl/txbW6+7val/1H17Cb7q\nfG2t3QQm5s/Vjw+nVabdkbl9oxl/Za/8W11rB6NuF5tNnsL94ZZVxJkSQuzuHcgb\n7b86dx9I3oaCed0mKVGRV3RNesAegyG9ORsdfytTLYX0HJc6Aolq2BBn0KofKYCW\nyA1BepQ961ScHXQz41UPTLLnS2KVqYSVf1Ek59XpMQ9GeyPu+4VlCz04cUWBdPRI\n/mg38dPxfMlgKrraiweEiqru+uQebX0pgc0OlwaIM3i1vGprpKyON2mc4J4Y0krH\nahKj7dzM\n=5rWh\n-----END PGP SIGNATURE-----",
        "payload": "tree f4ee69845cafc999f6a8ab5ab5d1c3c8007fe17d\nparent 6ef45bc9688412da9e13218e08f802125bf589c0\nauthor MarcoFalke <falke.marco@gmail.com> 1586828359 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1586828309 -0400\n\ntest: Add various low-level p2p tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4c29bc1d2425f861845bae4f3816d9817e622a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4c29bc1d2425f861845bae4f3816d9817e622a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4c29bc1d2425f861845bae4f3816d9817e622a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ef45bc9688412da9e13218e08f802125bf589c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ef45bc9688412da9e13218e08f802125bf589c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ef45bc9688412da9e13218e08f802125bf589c0"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 63,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2eeb03bfaaa537fd7a036f283dfb85ff19f56221",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=fa4c29bc1d2425f861845bae4f3816d9817e622a",
        "patch": "@@ -60,8 +60,13 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        self.log.info('Add filtered P2P connection to the node')\n         filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+\n+        self.log.info('Check that too large filter is rejected')\n+        with self.nodes[0].assert_debug_log(['Misbehaving']):\n+            filter_node.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=51, nTweak=0, nFlags=1))\n+\n+        self.log.info('Add filtered P2P connection to the node')\n         filter_node.send_and_ping(filter_node.watch_filter_init)\n         filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n "
      },
      {
        "sha": "eaecaeeb3693847d8150f3d85eb5db7bde8ca3c7",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=fa4c29bc1d2425f861845bae4f3816d9817e622a",
        "patch": "@@ -8,7 +8,11 @@\n import sys\n \n from test_framework import messages\n-from test_framework.mininode import P2PDataStore, NetworkThread\n+from test_framework.mininode import (\n+    NetworkThread,\n+    P2PDataStore,\n+    P2PInterface,\n+)\n from test_framework.test_framework import BitcoinTestFramework\n \n \n@@ -47,6 +51,7 @@ def run_test(self):\n         self.test_checksum()\n         self.test_size()\n         self.test_command()\n+        self.test_large_inv()\n \n         node = self.nodes[0]\n         self.node = node\n@@ -198,6 +203,19 @@ def test_command(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n+    def test_large_inv(self):\n+        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n+            msg = messages.msg_inv([messages.CInv(1, 1)] * 50001)\n+            conn.send_and_ping(msg)\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n+            msg = messages.msg_getdata([messages.CInv(1, 1)] * 50001)\n+            conn.send_and_ping(msg)\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n+            msg = messages.msg_headers([messages.CBlockHeader()] * 2001)\n+            conn.send_and_ping(msg)\n+        self.nodes[0].disconnect_p2ps()\n+\n     def _tweak_msg_data_size(self, message, wrong_size):\n         \"\"\"\n         Return a raw message based on another message but with an incorrect data size in"
      },
      {
        "sha": "c904c57c96851c5b6445284552a2810124a036c8",
        "filename": "test/functional/p2p_invalid_tx.py",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_invalid_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_invalid_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_tx.py?ref=fa4c29bc1d2425f861845bae4f3816d9817e622a",
        "patch": "@@ -118,6 +118,7 @@ def run_test(self):\n         tx_orphan_2_invalid = CTransaction()\n         tx_orphan_2_invalid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 2)))\n         tx_orphan_2_invalid.vout.append(CTxOut(nValue=11 * COIN, scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\n+        tx_orphan_2_invalid.calc_sha256()\n \n         self.log.info('Send the orphans ... ')\n         # Send valid orphan txs from p2ps[0]\n@@ -148,6 +149,22 @@ def run_test(self):\n         wait_until(lambda: 1 == len(node.getpeerinfo()), timeout=12)  # p2ps[1] is no longer connected\n         assert_equal(expected_mempool, set(node.getrawmempool()))\n \n+        self.log.info('Test orphan pool overflow')\n+        orphan_tx_pool = [CTransaction() for _ in range(101)]\n+        for i in range(len(orphan_tx_pool)):\n+            orphan_tx_pool[i].vin.append(CTxIn(outpoint=COutPoint(i, 333)))\n+            orphan_tx_pool[i].vout.append(CTxOut(nValue=11 * COIN, scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\n+\n+        with node.assert_debug_log(['mapOrphan overflow, removed 1 tx']):\n+            node.p2p.send_txs_and_test(orphan_tx_pool, node, success=False)\n+\n+        rejected_parent = CTransaction()\n+        rejected_parent.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_2_invalid.sha256, 0)))\n+        rejected_parent.vout.append(CTxOut(nValue=11 * COIN, scriptPubKey=SCRIPT_PUB_KEY_OP_TRUE))\n+        rejected_parent.rehash()\n+        with node.assert_debug_log(['not keeping orphan with rejected parents {}'.format(rejected_parent.hash)]):\n+            node.p2p.send_txs_and_test([rejected_parent], node, success=False)\n+\n \n if __name__ == '__main__':\n     InvalidTxRequestTest().main()"
      },
      {
        "sha": "76f33574a2de97d2ac39720b4532fdbe56a3f9d3",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=fa4c29bc1d2425f861845bae4f3816d9817e622a",
        "patch": "@@ -12,7 +12,12 @@\n \n import time\n \n-from test_framework.messages import msg_getaddr, msg_ping, msg_verack\n+from test_framework.messages import (\n+    msg_getaddr,\n+    msg_ping,\n+    msg_verack,\n+    msg_version,\n+)\n from test_framework.mininode import mininode_lock, P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n@@ -147,6 +152,15 @@ def run_test(self):\n         assert_equal(ver.nStartingHeight, 201)\n         assert_equal(ver.nRelay, 1)\n \n+        self.log.info('Check that old nodes are disconnected')\n+        p2p_old_node = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n+        old_version_msg = msg_version()\n+        old_version_msg.nVersion = 31799\n+        wait_until(lambda: p2p_old_node.is_connected)\n+        with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):\n+            p2p_old_node.send_message(old_version_msg)\n+            p2p_old_node.wait_for_disconnect()\n+\n \n if __name__ == '__main__':\n     P2PLeakTest().main()"
      },
      {
        "sha": "1d74c757d7fc646b86e790664f7188c2bdeda4f4",
        "filename": "test/functional/p2p_tx_download.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_tx_download.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4c29bc1d2425f861845bae4f3816d9817e622a/test/functional/p2p_tx_download.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_tx_download.py?ref=fa4c29bc1d2425f861845bae4f3816d9817e622a",
        "patch": "@@ -152,6 +152,10 @@ def test_in_flight_max(self):\n         wait_until(lambda: p.tx_getdata_count == MAX_GETDATA_IN_FLIGHT + 2)\n         self.nodes[0].setmocktime(0)\n \n+    def test_spurious_notfound(self):\n+        self.log.info('Check that spurious notfound is ignored')\n+        self.nodes[0].p2ps[0].send_message(msg_notfound(vec=[CInv(1, 1)]))\n+\n     def run_test(self):\n         # Setup the p2p connections\n         self.peers = []\n@@ -161,6 +165,8 @@ def run_test(self):\n \n         self.log.info(\"Nodes are setup with {} incoming connections each\".format(NUM_INBOUND))\n \n+        self.test_spurious_notfound()\n+\n         # Test the in-flight max first, because we want no transactions in\n         # flight ahead of this test.\n         self.test_in_flight_max()"
      }
    ]
  }
]