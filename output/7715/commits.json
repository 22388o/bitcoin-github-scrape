[
  {
    "sha": "68d4282774d6a60c609301cddad0b652f16df4d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGQ0MjgyNzc0ZDZhNjBjNjA5MzAxY2RkYWQwYjY1MmYxNmRmNGQ5",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-03-17T16:48:05Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-03-18T13:56:30Z"
      },
      "message": "Fix calculation of balances and available coins.\n\nNo longer consider coins which aren't in our mempool.\n\nAdd test for regression in abandonconflict.py",
      "tree": {
        "sha": "52c259063edbf9d2b0666ff053962a4931599268",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52c259063edbf9d2b0666ff053962a4931599268"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68d4282774d6a60c609301cddad0b652f16df4d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68d4282774d6a60c609301cddad0b652f16df4d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68d4282774d6a60c609301cddad0b652f16df4d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68d4282774d6a60c609301cddad0b652f16df4d9/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f034bced269c4859809d320dcfbdc4b008191b85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f034bced269c4859809d320dcfbdc4b008191b85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f034bced269c4859809d320dcfbdc4b008191b85"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 13,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a83aa97fcd80632b60994510dbe1ec83a1c21ed5",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68d4282774d6a60c609301cddad0b652f16df4d9/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68d4282774d6a60c609301cddad0b652f16df4d9/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=68d4282774d6a60c609301cddad0b652f16df4d9",
        "patch": "@@ -83,6 +83,12 @@ def run_test(self):\n         # inputs are still spent, but change not received\n         newbalance = self.nodes[0].getbalance()\n         assert(newbalance == balance - Decimal(\"24.9996\"))\n+        # Unconfirmed received funds that are not in mempool, also shouldn't show\n+        # up in unconfirmed balance\n+        unconfbalance = self.nodes[0].getunconfirmedbalance() + self.nodes[0].getbalance()\n+        assert(unconfbalance == newbalance)\n+        # Also shouldn't show up in listunspent\n+        assert(not txABC2 in [utxo[\"txid\"] for utxo in self.nodes[0].listunspent(0)])\n         balance = newbalance\n \n         # Abandon original transaction and verify inputs are available again"
      },
      {
        "sha": "f1e61c710f288e3d88b9101c0d709e1369ca84f9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68d4282774d6a60c609301cddad0b652f16df4d9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68d4282774d6a60c609301cddad0b652f16df4d9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=68d4282774d6a60c609301cddad0b652f16df4d9",
        "patch": "@@ -1578,7 +1578,7 @@ CAmount CWallet::GetUnconfirmedBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (!CheckFinalTx(*pcoin) || (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0))\n+            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n                 nTotal += pcoin->GetAvailableCredit();\n         }\n     }\n@@ -1623,7 +1623,7 @@ CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (!CheckFinalTx(*pcoin) || (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0))\n+            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n                 nTotal += pcoin->GetAvailableWatchOnlyCredit();\n         }\n     }\n@@ -1668,6 +1668,11 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n             if (nDepth < 0)\n                 continue;\n \n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !pcoin->InMempool())\n+                continue;\n+\n             for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n                 isminetype mine = IsMine(pcoin->vout[i]);\n                 if (!(IsSpent(wtxid, i)) && mine != ISMINE_NO &&"
      }
    ]
  }
]