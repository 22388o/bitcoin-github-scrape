[
  {
    "sha": "6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWIzYWFkOWE1MWNjNWU5N2E4ZTJhZTdkYmQ1MDgyMjcyMTYzYzMw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-18T14:54:39Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-24T19:29:49Z"
      },
      "message": "[gui] send dialog: split on_sendButton_clicked\n\nThis commit does not change behavior.",
      "tree": {
        "sha": "b257b63a93d50b9244402e6e46973d2c2c5c52b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b257b63a93d50b9244402e6e46973d2c2c5c52b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl56X60ACgkQV/+b28ww\nEAlurxAAkKAMl/i+D5LdY/jO2Ky2qB6pNKjV4JC8NoAHPDet81M0G6YFjwVB3DQ1\nXgj9zACFFBoVe3ihJ8g1KNx3NDEOIpJa6EFP9AweaMXX29L9gAwLP28m2YGCogXy\nUSGVARi+TSz2bm9a99i8IfcOCrAy3K06Kzw3Uk2fYlnFpqEXLtfkIuATPVrDWxrj\nhLDKGZAh8PHykURx3XayOt8mamqKm35308kQloLh0h52U1RD6LvLule0a0JoWL0+\nZaf0qbs1rHEDVQ/2yenKYwuzKq98VktU8V6j/3ZCfojHEiIyIx60zFWVgq4xrc2W\nuAPQrMAv43SRxqVf0z1FulLTPfeNEbXSqMP/CAQelH8i9HN4zymyl/tB2UkI5T8Z\nZ4REmGC9BazDAgQMYTZKm6nG8ni5pJJgqV7UM0Hh8LrM4rerOZk6ficUiQI4CiXi\nUK7V6F9bWkqTI68HZGpNkvcZhNbOShNif0MYkaXkMVjlzbS2LvvhfehsL5vPipo+\ngbYLWkSCfMjUkanF7tpxrrVq8avgpHfQH5LamMdN8jArvSWZbBm2X2qYaJC95Tse\nUXVK6OaOVxvbJDPUixm0ASRoE+NdlowXHNBVbnMKhSa5LUhcL7WUNalnVo4fVfpn\nZlp6Qrz/xtz2vleUh+/ThkNKC0nEJ4dPiQNqDZv+tBT3y3nZuhM=\n=QX0y\n-----END PGP SIGNATURE-----",
        "payload": "tree b257b63a93d50b9244402e6e46973d2c2c5c52b2\nparent 5236b2e267a58870239673c7ec85e5df0cb8fc8e\nauthor Sjors Provoost <sjors@sprovoost.nl> 1574088879 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1585078189 +0100\n\n[gui] send dialog: split on_sendButton_clicked\n\nThis commit does not change behavior.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5236b2e267a58870239673c7ec85e5df0cb8fc8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5236b2e267a58870239673c7ec85e5df0cb8fc8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5236b2e267a58870239673c7ec85e5df0cb8fc8e"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 52,
      "deletions": 44
    },
    "files": [
      {
        "sha": "75c300584f957017880d91873b5cf62f8aa039ed",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 44,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
        "patch": "@@ -219,11 +219,8 @@ SendCoinsDialog::~SendCoinsDialog()\n     delete ui;\n }\n \n-void SendCoinsDialog::on_sendButton_clicked()\n+bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informative_text, QString& detailed_text)\n {\n-    if(!model || !model->getOptionsModel())\n-        return;\n-\n     QList<SendCoinsRecipient> recipients;\n     bool valid = true;\n \n@@ -246,7 +243,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     if(!valid || recipients.isEmpty())\n     {\n-        return;\n+        return false;\n     }\n \n     fNewRecipientAllowed = false;\n@@ -255,11 +252,11 @@ void SendCoinsDialog::on_sendButton_clicked()\n     {\n         // Unlock wallet was cancelled\n         fNewRecipientAllowed = true;\n-        return;\n+        return false;\n     }\n \n     // prepare transaction for getting txFee earlier\n-    WalletModelTransaction currentTransaction(recipients);\n+    m_current_transaction = MakeUnique<WalletModelTransaction>(recipients);\n     WalletModel::SendCoinsReturn prepareStatus;\n \n     // Always use a CCoinControl instance, use the CoinControlDialog instance if CoinControl has been enabled\n@@ -269,22 +266,20 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     updateCoinControlState(ctrl);\n \n-    prepareStatus = model->prepareTransaction(currentTransaction, ctrl);\n+    prepareStatus = model->prepareTransaction(*m_current_transaction, ctrl);\n \n     // process prepareStatus and on error generate message shown to user\n     processSendCoinsReturn(prepareStatus,\n-        BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), currentTransaction.getTransactionFee()));\n+        BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), m_current_transaction->getTransactionFee()));\n \n     if(prepareStatus.status != WalletModel::OK) {\n         fNewRecipientAllowed = true;\n-        return;\n+        return false;\n     }\n \n-    CAmount txFee = currentTransaction.getTransactionFee();\n-\n-    // Format confirmation message\n+    CAmount txFee = m_current_transaction->getTransactionFee();\n     QStringList formatted;\n-    for (const SendCoinsRecipient &rcp : currentTransaction.getRecipients())\n+    for (const SendCoinsRecipient &rcp : m_current_transaction->getRecipients())\n     {\n         // generate amount string with wallet name in case of multiwallet\n         QString amount = BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n@@ -311,72 +306,82 @@ void SendCoinsDialog::on_sendButton_clicked()\n         formatted.append(recipientElement);\n     }\n \n-    QString questionString;\n     if (model->wallet().privateKeysDisabled()) {\n-        questionString.append(tr(\"Do you want to draft this transaction?\"));\n+        question_string.append(tr(\"Do you want to draft this transaction?\"));\n     } else {\n-        questionString.append(tr(\"Are you sure you want to send?\"));\n+        question_string.append(tr(\"Are you sure you want to send?\"));\n     }\n \n-    questionString.append(\"<br /><span style='font-size:10pt;'>\");\n+    question_string.append(\"<br /><span style='font-size:10pt;'>\");\n     if (model->wallet().privateKeysDisabled()) {\n-        questionString.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+        question_string.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n     } else {\n-        questionString.append(tr(\"Please, review your transaction.\"));\n+        question_string.append(tr(\"Please, review your transaction.\"));\n     }\n-    questionString.append(\"</span>%1\");\n+    question_string.append(\"</span>%1\");\n \n     if(txFee > 0)\n     {\n         // append fee string if a fee is required\n-        questionString.append(\"<hr /><b>\");\n-        questionString.append(tr(\"Transaction fee\"));\n-        questionString.append(\"</b>\");\n+        question_string.append(\"<hr /><b>\");\n+        question_string.append(tr(\"Transaction fee\"));\n+        question_string.append(\"</b>\");\n \n         // append transaction size\n-        questionString.append(\" (\" + QString::number((double)currentTransaction.getTransactionSize() / 1000) + \" kB): \");\n+        question_string.append(\" (\" + QString::number((double)m_current_transaction->getTransactionSize() / 1000) + \" kB): \");\n \n         // append transaction fee value\n-        questionString.append(\"<span style='color:#aa0000; font-weight:bold;'>\");\n-        questionString.append(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n-        questionString.append(\"</span><br />\");\n+        question_string.append(\"<span style='color:#aa0000; font-weight:bold;'>\");\n+        question_string.append(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n+        question_string.append(\"</span><br />\");\n \n         // append RBF message according to transaction's signalling\n-        questionString.append(\"<span style='font-size:10pt; font-weight:normal;'>\");\n+        question_string.append(\"<span style='font-size:10pt; font-weight:normal;'>\");\n         if (ui->optInRBF->isChecked()) {\n-            questionString.append(tr(\"You can increase the fee later (signals Replace-By-Fee, BIP-125).\"));\n+            question_string.append(tr(\"You can increase the fee later (signals Replace-By-Fee, BIP-125).\"));\n         } else {\n-            questionString.append(tr(\"Not signalling Replace-By-Fee, BIP-125.\"));\n+            question_string.append(tr(\"Not signalling Replace-By-Fee, BIP-125.\"));\n         }\n-        questionString.append(\"</span>\");\n+        question_string.append(\"</span>\");\n     }\n \n     // add total amount in all subdivision units\n-    questionString.append(\"<hr />\");\n-    CAmount totalAmount = currentTransaction.getTotalTransactionAmount() + txFee;\n+    question_string.append(\"<hr />\");\n+    CAmount totalAmount = m_current_transaction->getTotalTransactionAmount() + txFee;\n     QStringList alternativeUnits;\n     for (const BitcoinUnits::Unit u : BitcoinUnits::availableUnits())\n     {\n         if(u != model->getOptionsModel()->getDisplayUnit())\n             alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n     }\n-    questionString.append(QString(\"<b>%1</b>: <b>%2</b>\").arg(tr(\"Total Amount\"))\n+    question_string.append(QString(\"<b>%1</b>: <b>%2</b>\").arg(tr(\"Total Amount\"))\n         .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount)));\n-    questionString.append(QString(\"<br /><span style='font-size:10pt; font-weight:normal;'>(=%1)</span>\")\n+    question_string.append(QString(\"<br /><span style='font-size:10pt; font-weight:normal;'>(=%1)</span>\")\n         .arg(alternativeUnits.join(\" \" + tr(\"or\") + \" \")));\n \n-    QString informative_text;\n-    QString detailed_text;\n     if (formatted.size() > 1) {\n-        questionString = questionString.arg(\"\");\n+        question_string = question_string.arg(\"\");\n         informative_text = tr(\"To review recipient list click \\\"Show Details...\\\"\");\n         detailed_text = formatted.join(\"\\n\\n\");\n     } else {\n-        questionString = questionString.arg(\"<br /><br />\" + formatted.at(0));\n+        question_string = question_string.arg(\"<br /><br />\" + formatted.at(0));\n     }\n+\n+    return true;\n+}\n+\n+void SendCoinsDialog::on_sendButton_clicked()\n+{\n+    if(!model || !model->getOptionsModel())\n+        return;\n+\n+    QString question_string, informative_text, detailed_text;\n+    if (!PrepareSendText(question_string, informative_text, detailed_text)) return;\n+    assert(m_current_transaction);\n+\n     const QString confirmation = model->wallet().privateKeysDisabled() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n     const QString confirmButtonText = model->wallet().privateKeysDisabled() ? tr(\"Copy PSBT to clipboard\") : tr(\"Send\");\n-    SendConfirmationDialog confirmationDialog(confirmation, questionString, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n+    SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n \n@@ -388,7 +393,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     bool send_failure = false;\n     if (model->wallet().privateKeysDisabled()) {\n-        CMutableTransaction mtx = CMutableTransaction{*(currentTransaction.getWtx())};\n+        CMutableTransaction mtx = CMutableTransaction{*(m_current_transaction->getWtx())};\n         PartiallySignedTransaction psbtx(mtx);\n         bool complete = false;\n         const TransactionError err = model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete);\n@@ -401,12 +406,12 @@ void SendCoinsDialog::on_sendButton_clicked()\n         Q_EMIT message(tr(\"PSBT copied\"), \"Copied to clipboard\", CClientUIInterface::MSG_INFORMATION);\n     } else {\n         // now send the prepared transaction\n-        WalletModel::SendCoinsReturn sendStatus = model->sendCoins(currentTransaction);\n+        WalletModel::SendCoinsReturn sendStatus = model->sendCoins(*m_current_transaction);\n         // process sendStatus and on error generate message shown to user\n         processSendCoinsReturn(sendStatus);\n \n         if (sendStatus.status == WalletModel::OK) {\n-            Q_EMIT coinsSent(currentTransaction.getWtx()->GetHash());\n+            Q_EMIT coinsSent(m_current_transaction->getWtx()->GetHash());\n         } else {\n             send_failure = true;\n         }"
      },
      {
        "sha": "36bc2a846bb4a7c5857a04c9a7839ef18e7f4a74",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
        "patch": "@@ -60,6 +60,7 @@ public Q_SLOTS:\n     Ui::SendCoinsDialog *ui;\n     ClientModel *clientModel;\n     WalletModel *model;\n+    std::unique_ptr<WalletModelTransaction> m_current_transaction;\n     bool fNewRecipientAllowed;\n     bool fFeeMinimized;\n     const PlatformStyle *platformStyle;\n@@ -69,6 +70,8 @@ public Q_SLOTS:\n     // Additional parameter msgArg can be used via .arg(msgArg).\n     void processSendCoinsReturn(const WalletModel::SendCoinsReturn &sendCoinsReturn, const QString &msgArg = QString());\n     void minimizeFeeSection(bool fMinimize);\n+    // Format confirmation message\n+    bool PrepareSendText(QString& question_string, QString& informative_text, QString& detailed_text);\n     void updateFeeMinimizedLabel();\n     // Update the passed in CCoinControl with state from the GUI\n     void updateCoinControlState(CCoinControl& ctrl);"
      }
    ]
  },
  {
    "sha": "86e22d23bb90383971a68ead0666f225ddd632fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NmUyMmQyM2JiOTAzODM5NzFhNjhlYWQwNjY2ZjIyNWRkZDYzMmZi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-20T10:41:11Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-24T19:29:49Z"
      },
      "message": "[util] GetFileSize",
      "tree": {
        "sha": "b873b47e7ae092584765278fa8320b2b2ac2728b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b873b47e7ae092584765278fa8320b2b2ac2728b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86e22d23bb90383971a68ead0666f225ddd632fb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl56X60ACgkQV/+b28ww\nEAlmDQ//dvXisox0xMRGBK6T7VOTxCGQ4GB6D6hYFCUk/gpNx3dWh7Tks6RT0yCv\n6KH7eJzYGV8u/g/H/ahXIn5srekmoRKHOGMAPUvvwLn8xphOYS4BZQzP/K5G8m9V\nAScC9BopwELeSfQw9kCQxCIfx0pUCbNpLSfruUWbcXC56gI83cVEeRI4/AsvE30p\n3KW53GtnuLy9+zLa2C4sy67Vjma5sOl2+furul/CLDJmbxEmKk2iSMbKucRtlfiL\nCu5bi6QgEim1Bv2TjFORRwBzZO585gt1rz5iuDAhtA9Yxt1mQYgJyfEZSgVflo+l\nQMyhwmIcgNgi4hfDmnwOxh6XpBu9Fk1xL3NvcfFI+c+wRqwnqOpckE23OACxFUR/\nCacte00nX8pkbfL6bjhh0NHGGpWYQU1/jHjbSJ6vaL0eZcE5UGQh6rYZ50udhpbr\npTAJjoNy1yxIeE07s6qA1+QCHq2KNa/pLIr+scKRZe816YjCuBcpDsuInp9NM7h/\n25lShSu5mB4TlfYDuOt3Wthmaq2KICOEMXkFJ0z7pEcm0sVVFoqo3FaUW8ShljBj\nTc4+YQQsvgVzwoAi+DwV10Vac4n2S7AfA92pM1pKI6lkXQNAGov9ynVtmi38ZN9s\nPCbtixhMiQNi+I948GXfuGuGyNRLYYp/UENKaBfA5QD/HyrHwi4=\n=3hkk\n-----END PGP SIGNATURE-----",
        "payload": "tree b873b47e7ae092584765278fa8320b2b2ac2728b\nparent 6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30\nauthor Sjors Provoost <sjors@sprovoost.nl> 1584700871 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1585078189 +0100\n\n[util] GetFileSize\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86e22d23bb90383971a68ead0666f225ddd632fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/86e22d23bb90383971a68ead0666f225ddd632fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86e22d23bb90383971a68ead0666f225ddd632fb/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ab3aad9a51cc5e97a8e2ae7dbd5082272163c30"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5921378a76f13439fbf76d46b4d6074de63df163",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86e22d23bb90383971a68ead0666f225ddd632fb/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86e22d23bb90383971a68ead0666f225ddd632fb/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=86e22d23bb90383971a68ead0666f225ddd632fb",
        "patch": "@@ -141,6 +141,12 @@ bool CheckDiskSpace(const fs::path& dir, uint64_t additional_bytes)\n     return free_bytes_available >= min_disk_space + additional_bytes;\n }\n \n+std::streampos GetFileSize(const char* path, std::streamsize max) {\n+    std::ifstream file(path, std::ios::binary);\n+    file.ignore(max);\n+    return file.gcount();\n+}\n+\n /**\n  * Interpret a string argument as a boolean.\n  *"
      },
      {
        "sha": "61fd611aca56545cb9a0331d2056b41ea4ed347a",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86e22d23bb90383971a68ead0666f225ddd632fb/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86e22d23bb90383971a68ead0666f225ddd632fb/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=86e22d23bb90383971a68ead0666f225ddd632fb",
        "patch": "@@ -63,6 +63,14 @@ void UnlockDirectory(const fs::path& directory, const std::string& lockfile_name\n bool DirIsWritable(const fs::path& directory);\n bool CheckDiskSpace(const fs::path& dir, uint64_t additional_bytes = 0);\n \n+/** Get the size of a file by scanning it.\n+ *\n+ * @param[in] path The file path\n+ * @param[in] max Stop seeking beyond this limit\n+ * @return The file size or max\n+ */\n+std::streampos GetFileSize(const char* path, std::streamsize max = std::numeric_limits<std::streamsize>::max());\n+\n /** Release all directory locks. This is used for unit testing only, at runtime\n  * the global destructor will take care of the locks.\n  */"
      }
    ]
  },
  {
    "sha": "1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDA1YTlkODBiMTIxMWI0N2FmNDY1YmE2OTU4YjBlYzVhOGMzM2Fi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-26T10:20:15Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-27T13:58:39Z"
      },
      "message": "Move DEFAULT_MAX_RAW_TX_FEE_RATE to node/transaction.h\n\nSo it can be used in the GUI.",
      "tree": {
        "sha": "785b8c6c2c59c022b5ff7763e31f6a6bbe0b5ac4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/785b8c6c2c59c022b5ff7763e31f6a6bbe0b5ac4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5+BrcACgkQV/+b28ww\nEAmkIQ//Rzv2CkWD3yuE3xHmwrCCsZJ2oq7IwdhyQSpDVAermQ39GqMFybx+O9OR\ndtsMbSh/4XCz3fYv8k4mhzs4ZVtxBYb6Rhnunkm4Npf98+/ZQ1ZT8q6R+kzpEwWp\n15yx8Yxn5IJzIhZkupbbebKzZilevNha8ka0OqSFeOqQrCbLQ89YgORPUzFFUfdF\nQIddi8o3ck86OdA3OU0yXPUtpF8RhHAnQH/288U+6gL2S56kbn9am2wYbh0H6pkc\nCVvSRUya1uvYMLccu8UDFqHy23MCLK1YRkwgMB+O+h/FjNcKVhnSK+qhzsWG87h+\nhfzr+14Hi/UrehuhiXf4vZFbakS9x03PFXcB1C3PAwhdo0ujrwwPzgSFABhszdZE\nFQ2/cLa1cpJvpeAQbIopEdw7WiksSAwQLMgpzIz0C6bTo2cV/HdFou0fYE+J2YcP\nkWXW9Yl6c04XnYBMCqTbQSkN1tMbP4gbkvkDXSNaBBUT9GaU3Zr5iBUaVgp3HN6d\n3Sb6rLNbX96h9wXKVewHbZX8OxA/86UvoXw+GAQrL28y7bJrXNw7ve0dMcNJiCnQ\nF/gotfbZzN8VT8KjPa3Zxnwu9NJZlpxBsftEH0rSngk/3fU6+JPWovedOTEYuoCO\nzAggD7Wi+UcOt7igLWbvx2p/fmJ2pN9U/nnYe3OGep018HnBt+Q=\n=CcQu\n-----END PGP SIGNATURE-----",
        "payload": "tree 785b8c6c2c59c022b5ff7763e31f6a6bbe0b5ac4\nparent 86e22d23bb90383971a68ead0666f225ddd632fb\nauthor Sjors Provoost <sjors@sprovoost.nl> 1585218015 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1585317519 +0100\n\nMove DEFAULT_MAX_RAW_TX_FEE_RATE to node/transaction.h\n\nSo it can be used in the GUI.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86e22d23bb90383971a68ead0666f225ddd632fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86e22d23bb90383971a68ead0666f225ddd632fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86e22d23bb90383971a68ead0666f225ddd632fb"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "649625ded1b5666959a4d06b56071cac0d4ba6d3",
        "filename": "src/node/transaction.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab/src/node/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab/src/node/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.h?ref=1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
        "patch": "@@ -6,11 +6,19 @@\n #define BITCOIN_NODE_TRANSACTION_H\n \n #include <attributes.h>\n+#include <policy/feerate.h>\n #include <primitives/transaction.h>\n #include <util/error.h>\n \n struct NodeContext;\n \n+/** Maximum fee rate for sendrawtransaction and testmempoolaccept RPC calls.\n+ * Also used by the GUI when broadcasting a completed PSBT.\n+ * By default, a transaction with a fee rate higher than this will be rejected\n+ * by these RPCs and the GUI. This can be overridden with the maxfeerate argument.\n+ */\n+static const CFeeRate DEFAULT_MAX_RAW_TX_FEE_RATE{COIN / 10};\n+\n /**\n  * Submit a transaction to the mempool and (optionally) relay it to all P2P peers.\n  *"
      },
      {
        "sha": "c0e42356c1b8c6e409ad9e362bbefea4d71a52f8",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
        "patch": "@@ -39,12 +39,6 @@\n \n #include <univalue.h>\n \n-/** Maximum fee rate for sendrawtransaction and testmempoolaccept.\n- * By default, a transaction with a fee rate higher than this will be rejected\n- * by the RPCs. This can be overridden with the maxfeerate argument.\n- */\n-static const CFeeRate DEFAULT_MAX_RAW_TX_FEE_RATE{COIN / 10};\n-\n static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n {\n     // Call into TxToUniv() in bitcoin-common to decode the transaction hex."
      }
    ]
  },
  {
    "sha": "f6895301f768220f3ea70231d5cc5b45ecbf4488",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjg5NTMwMWY3NjgyMjBmM2VhNzAyMzFkNWNjNWI0NWVjYmY0NDg4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-18T15:43:57Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-27T13:59:19Z"
      },
      "message": "[gui] save PSBT to file\n\nco-authored-by: Glenn Willen <gwillen@nerdnet.org>",
      "tree": {
        "sha": "f65409565e1c778feed8b579582c6ebd8c2c9bb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f65409565e1c778feed8b579582c6ebd8c2c9bb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6895301f768220f3ea70231d5cc5b45ecbf4488",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5+BrcACgkQV/+b28ww\nEAnQmQ/+MuO227hSqnknHVyApC54yS874bLZ5ebroZygqnuzjRP+9r6P5wDBbSVB\nx7vgjI5lby4oCWA6j73NH4YiRrlb1ovnua/Pg/tUe1wBkbfgMMC0vUIeStr8UO/j\nrcXD8X+k9gyiqOfKlP9NXgNRO/VHQ997nsf17E+BICagOqnXKbLf2DzjheSpf3U0\nvINsvDr0Ri2gfZBAFf1Wugj8mTCT03UWbAT4WUWDm9dV2k0Y94LseJlge8oeUYTu\nsfyPju//luI3H4pC3KaCPE3ZB86cDX5EB7pGE+E877LTxvlA5I3zXz81FjS+b8yO\nq63mEbdhuD35+P0tyDi23ZNqwJIuk6E9j3fQr+di5NJX8IMlpgwzYEOW767GbFEU\nlMI8zoUD3z5B8Ks9D/lTks6482Gxrwtrap1PD7DKIAENeQCx8VSyHEVCq04P8AzZ\nDpxcaHMxnpY0vC/198ZwdWzoFWPK5pTdsMp+d5s/u0/0fCykCap9dMlovr/tvqao\nK83UiuPRSqP3FunAYvklN55vkfBoqfmOABqSesJkCsJNGxvxBuVj6WNsJGI6KsZf\nidJP1oJDhJedmzSHHOmFEZDGGgB3MbUSDBFpZVlxvRFs2VoewZ+SEffdWdUTfZMf\nmViI+IqTNHwX3ajEd6t5c12zNx3TFuKRvTAr1nhs+HNuKCdE0mY=\n=mN7J\n-----END PGP SIGNATURE-----",
        "payload": "tree f65409565e1c778feed8b579582c6ebd8c2c9bb5\nparent 1d05a9d80b1211b47af465ba6958b0ec5a8c33ab\nauthor Sjors Provoost <sjors@sprovoost.nl> 1574091837 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1585317559 +0100\n\n[gui] save PSBT to file\n\nco-authored-by: Glenn Willen <gwillen@nerdnet.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6895301f768220f3ea70231d5cc5b45ecbf4488",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6895301f768220f3ea70231d5cc5b45ecbf4488",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6895301f768220f3ea70231d5cc5b45ecbf4488/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d05a9d80b1211b47af465ba6958b0ec5a8c33ab"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 42,
      "deletions": 3
    },
    "files": [
      {
        "sha": "018f237d5e11f368131d7bedcf787c9214689537",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 3,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6895301f768220f3ea70231d5cc5b45ecbf4488/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6895301f768220f3ea70231d5cc5b45ecbf4488/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=f6895301f768220f3ea70231d5cc5b45ecbf4488",
        "patch": "@@ -314,7 +314,7 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n \n     question_string.append(\"<br /><span style='font-size:10pt;'>\");\n     if (model->wallet().privateKeysDisabled()) {\n-        question_string.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+        question_string.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n     } else {\n         question_string.append(tr(\"Please, review your transaction.\"));\n     }\n@@ -380,7 +380,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     assert(m_current_transaction);\n \n     const QString confirmation = model->wallet().privateKeysDisabled() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n-    const QString confirmButtonText = model->wallet().privateKeysDisabled() ? tr(\"Copy PSBT to clipboard\") : tr(\"Send\");\n+    const QString confirmButtonText = model->wallet().privateKeysDisabled() ? tr(\"Create Unsigned\") : tr(\"Send\");\n     SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n@@ -403,7 +403,43 @@ void SendCoinsDialog::on_sendButton_clicked()\n         CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n         ssTx << psbtx;\n         GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n-        Q_EMIT message(tr(\"PSBT copied\"), \"Copied to clipboard\", CClientUIInterface::MSG_INFORMATION);\n+        QMessageBox msgBox;\n+        msgBox.setText(\"Unsigned Transaction\");\n+        msgBox.setInformativeText(\"The PSBT has been copied to the clipboard. You can also save it.\");\n+        msgBox.setStandardButtons(QMessageBox::Save | QMessageBox::Discard);\n+        msgBox.setDefaultButton(QMessageBox::Discard);\n+        switch (msgBox.exec()) {\n+        case QMessageBox::Save: {\n+            QString selectedFilter;\n+            QString fileNameSuggestion = \"\";\n+            bool first = true;\n+            for (const SendCoinsRecipient &rcp : m_current_transaction->getRecipients()) {\n+                if (!first) {\n+                    fileNameSuggestion.append(\" - \");\n+                }\n+                QString labelOrAddress = rcp.label.isEmpty() ? rcp.address : rcp.label;\n+                QString amount = BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n+                fileNameSuggestion.append(labelOrAddress + \"-\" + amount);\n+                first = false;\n+            }\n+            fileNameSuggestion.append(\".psbt\");\n+            QString filename = GUIUtil::getSaveFileName(this,\n+                tr(\"Save Transaction Data\"), fileNameSuggestion,\n+                tr(\"Partially Signed Transaction (Binary) (*.psbt)\"), &selectedFilter);\n+            if (filename.isEmpty()) {\n+                return;\n+            }\n+            std::ofstream out(filename.toLocal8Bit().data());\n+            out << ssTx.str();\n+            out.close();\n+            Q_EMIT message(tr(\"PSBT saved\"), \"PSBT saved to disk\", CClientUIInterface::MSG_INFORMATION);\n+            break;\n+        }\n+        case QMessageBox::Discard:\n+            break;\n+        default:\n+            assert(false);\n+        }\n     } else {\n         // now send the prepared transaction\n         WalletModel::SendCoinsReturn sendStatus = model->sendCoins(*m_current_transaction);\n@@ -422,10 +458,13 @@ void SendCoinsDialog::on_sendButton_clicked()\n         coinControlUpdateLabels();\n     }\n     fNewRecipientAllowed = true;\n+    m_current_transaction.reset();\n }\n \n void SendCoinsDialog::clear()\n {\n+    m_current_transaction.reset();\n+\n     // Clear coin control settings\n     CoinControlDialog::coinControl()->UnSelectAll();\n     ui->checkBoxCoinControlChange->setChecked(false);"
      }
    ]
  },
  {
    "sha": "1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2Q4ZGMyNTU2Yjg0N2UxMWEyMzhiOWU2OTQ5M2NkOGZiZWVjYzZj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-01-04T13:13:04Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-27T13:59:19Z"
      },
      "message": "[gui] load PSBT\n\nco-authored-by: Glenn Willen <gwillen@nerdnet.org>",
      "tree": {
        "sha": "da770f0772fbbe5b3a11261a3c0448481c34353c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da770f0772fbbe5b3a11261a3c0448481c34353c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5+BrcACgkQV/+b28ww\nEAlQWA//fuOC2ioDUszoLS2kbgOdtXcjkNQwjKP9ztE8otiymlbwEGiD7fW7qoBa\nil0Nway09nCIn7VE+Bsdi779ZE3lXXMGvRiLKC0RwQAZ85cPqRjlnkuPMhbhcZ8B\nSHZ7EW3GL/uhGuZDZ80h5JoTqIgnNO45j5EhUMYZnls05lN/fFNm0UtC0C/oZokc\n5xsfy/OhYTrpmPKFCmZWRMdp4pZnOC3J/A5kmX//S/3uzY/2eLGhuLCt1w4op9jJ\nUTKhjGp9Oq1lx1qtFp3fl3/Bmdgssm5gSVu4MfeFD+Cf+nzctZOXITLdK+LimPzq\nWSWIzKiWJ8ZzIGtbt03sNmxck47uFVoZZOIlMk2PSODv5ahqI491uE1tHporZVge\ntedLQjhkju+ZnHL6iwUQ3+vkXp4PI2SYDK5lOqAxoCYKT9Y5+ycw4NB+f9EB4fKW\nsFZhnBNYAr40U08zVb3NMKuHIbJ27xiU5BNJJsXB9pQhYznY0+VNrmCTCZ5HWTvI\nvQiSG0zqCX2wOyn/Pjx5ffhA8N/A6KCQo4v4FU/rFm8GMoMv1XA+pweN3V/Jc1mo\n1M7Gv9g2LazWjJCobph2cvdEiEc9ifmxq4dkRqyqgQyMkWhq5bQ5B3nCKFecb+Cp\nRWziCMqfHc7162nupgXzTrxnnnfLOqQJHXHmfRpPjUR9HGc0K1I=\n=nGmA\n-----END PGP SIGNATURE-----",
        "payload": "tree da770f0772fbbe5b3a11261a3c0448481c34353c\nparent f6895301f768220f3ea70231d5cc5b45ecbf4488\nauthor Sjors Provoost <sjors@sprovoost.nl> 1578143584 +0800\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1585317559 +0100\n\n[gui] load PSBT\n\nco-authored-by: Glenn Willen <gwillen@nerdnet.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6895301f768220f3ea70231d5cc5b45ecbf4488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6895301f768220f3ea70231d5cc5b45ecbf4488",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6895301f768220f3ea70231d5cc5b45ecbf4488"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 102,
      "deletions": 0
    },
    "files": [
      {
        "sha": "370c5da9d058a811244d0413ccc316f4bf18505c",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "patch": "@@ -317,6 +317,8 @@ void BitcoinGUI::createActions()\n     signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n     verifyMessageAction = new QAction(tr(\"&Verify message...\"), this);\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n+    m_load_psbt_action = new QAction(tr(\"Load PSBT...\"), this);\n+    m_load_psbt_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction\"));\n \n     openRPCConsoleAction = new QAction(tr(\"Node window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open node debugging and diagnostic console\"));\n@@ -366,6 +368,7 @@ void BitcoinGUI::createActions()\n         connect(changePassphraseAction, &QAction::triggered, walletFrame, &WalletFrame::changePassphrase);\n         connect(signMessageAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n         connect(signMessageAction, &QAction::triggered, [this]{ gotoSignMessageTab(); });\n+        connect(m_load_psbt_action, &QAction::triggered, [this]{ gotoLoadPSBT(); });\n         connect(verifyMessageAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n         connect(verifyMessageAction, &QAction::triggered, [this]{ gotoVerifyMessageTab(); });\n         connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n@@ -438,6 +441,7 @@ void BitcoinGUI::createMenuBar()\n         file->addAction(backupWalletAction);\n         file->addAction(signMessageAction);\n         file->addAction(verifyMessageAction);\n+        file->addAction(m_load_psbt_action);\n         file->addSeparator();\n     }\n     file->addAction(quitAction);\n@@ -854,6 +858,10 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }\n+void BitcoinGUI::gotoLoadPSBT()\n+{\n+    if (walletFrame) walletFrame->gotoLoadPSBT();\n+}\n #endif // ENABLE_WALLET\n \n void BitcoinGUI::updateNetworkState()"
      },
      {
        "sha": "5592770d360b2c18a2af5dc5c56e07e1e588eb32",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "patch": "@@ -135,6 +135,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* usedReceivingAddressesAction = nullptr;\n     QAction* signMessageAction = nullptr;\n     QAction* verifyMessageAction = nullptr;\n+    QAction* m_load_psbt_action = nullptr;\n     QAction* aboutAction = nullptr;\n     QAction* receiveCoinsAction = nullptr;\n     QAction* receiveCoinsMenuAction = nullptr;\n@@ -270,6 +271,8 @@ public Q_SLOTS:\n     void gotoSignMessageTab(QString addr = \"\");\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n+    /** Show load Partially Signed Bitcoin Transaction dialog */\n+    void gotoLoadPSBT();\n \n     /** Show open dialog */\n     void openClicked();"
      },
      {
        "sha": "02a9583ae9d3c87a7fa345531b0b8e13e7dd042f",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "patch": "@@ -163,6 +163,14 @@ void WalletFrame::gotoVerifyMessageTab(QString addr)\n         walletView->gotoVerifyMessageTab(addr);\n }\n \n+void WalletFrame::gotoLoadPSBT()\n+{\n+    WalletView *walletView = currentWalletView();\n+    if (walletView) {\n+        walletView->gotoLoadPSBT();\n+    }\n+}\n+\n void WalletFrame::encryptWallet(bool status)\n {\n     WalletView *walletView = currentWalletView();"
      },
      {
        "sha": "d90ade5005effd349f5f984c540da514d5df93e9",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "patch": "@@ -78,6 +78,9 @@ public Q_SLOTS:\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n \n+    /** Load Partially Signed Bitcoin Transaction */\n+    void gotoLoadPSBT();\n+\n     /** Encrypt the wallet */\n     void encryptWallet(bool status);\n     /** Backup the wallet */"
      },
      {
        "sha": "d0eca1a25b81286790151113fe77f1e26f3c4428",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "patch": "@@ -4,6 +4,9 @@\n \n #include <qt/walletview.h>\n \n+#include <node/psbt.h>\n+#include <node/transaction.h>\n+#include <policy/policy.h>\n #include <qt/addressbookpage.h>\n #include <qt/askpassphrasedialog.h>\n #include <qt/clientmodel.h>\n@@ -20,6 +23,7 @@\n \n #include <interfaces/node.h>\n #include <ui_interface.h>\n+#include <util/strencodings.h>\n \n #include <QAction>\n #include <QActionGroup>\n@@ -197,6 +201,80 @@ void WalletView::gotoVerifyMessageTab(QString addr)\n         signVerifyMessageDialog->setAddress_VM(addr);\n }\n \n+void WalletView::gotoLoadPSBT()\n+{\n+    QString filename = GUIUtil::getOpenFileName(this,\n+        tr(\"Load Transaction Data\"), QString(),\n+        tr(\"Partially Signed Transaction (*.psbt)\"), nullptr);\n+    if (filename.isEmpty()) return;\n+    if (GetFileSize(filename.toLocal8Bit().data(), MAX_FILE_SIZE_PSBT) == MAX_FILE_SIZE_PSBT) {\n+        Q_EMIT message(tr(\"Error\"), tr(\"PSBT file must be smaller than 100 MiB\"), CClientUIInterface::MSG_ERROR);\n+        return;\n+    }\n+    std::ifstream in(filename.toLocal8Bit().data(), std::ios::binary);\n+    std::string data(std::istreambuf_iterator<char>{in}, {});\n+\n+    std::string error;\n+    PartiallySignedTransaction psbtx;\n+    if (!DecodeRawPSBT(psbtx, data, error)) {\n+        Q_EMIT message(tr(\"Error\"), tr(\"Unable to decode PSBT file\") + \"\\n\" + QString::fromStdString(error), CClientUIInterface::MSG_ERROR);\n+        return;\n+    }\n+\n+    CMutableTransaction mtx;\n+    bool complete = false;\n+    PSBTAnalysis analysis = AnalyzePSBT(psbtx);\n+    QMessageBox msgBox;\n+    msgBox.setText(\"PSBT\");\n+    switch (analysis.next) {\n+    case PSBTRole::CREATOR:\n+    case PSBTRole::UPDATER:\n+        msgBox.setInformativeText(\"PSBT is incomplete. Copy to clipboard for manual inspection?\");\n+        break;\n+    case PSBTRole::SIGNER:\n+        msgBox.setInformativeText(\"Transaction needs more signatures. Copy to clipboard?\");\n+        break;\n+    case PSBTRole::FINALIZER:\n+    case PSBTRole::EXTRACTOR:\n+        complete = FinalizeAndExtractPSBT(psbtx, mtx);\n+        if (complete) {\n+            msgBox.setInformativeText(tr(\"Would you like to send this transaction?\"));\n+        } else {\n+            // The analyzer missed something, e.g. if there are final_scriptSig/final_scriptWitness\n+            // but with invalid signatures.\n+            msgBox.setInformativeText(tr(\"There was an unexpected problem processing the PSBT. Copy to clipboard for manual inspection?\"));\n+        }\n+    }\n+\n+    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::Cancel);\n+    switch (msgBox.exec()) {\n+    case QMessageBox::Yes: {\n+        if (complete) {\n+            std::string err_string;\n+            CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+            TransactionError result = BroadcastTransaction(*clientModel->node().context(), tx, err_string, DEFAULT_MAX_RAW_TX_FEE_RATE.GetFeePerK(), /* relay */ true, /* wait_callback */ false);\n+            if (result == TransactionError::OK) {\n+                Q_EMIT message(tr(\"Success\"), tr(\"Broadcasted transaction sucessfully.\"), CClientUIInterface::MSG_INFORMATION | CClientUIInterface::MODAL);\n+            } else {\n+                Q_EMIT message(tr(\"Error\"), QString::fromStdString(err_string), CClientUIInterface::MSG_ERROR);\n+            }\n+        } else {\n+            // Serialize the PSBT\n+            CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+            ssTx << psbtx;\n+            GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n+            Q_EMIT message(tr(\"PSBT copied\"), \"Copied to clipboard\", CClientUIInterface::MSG_INFORMATION);\n+            return;\n+        }\n+    }\n+    case QMessageBox::Cancel:\n+        break;\n+    default:\n+        assert(false);\n+    }\n+}\n+\n bool WalletView::handlePaymentRequest(const SendCoinsRecipient& recipient)\n {\n     return sendCoinsPage->handlePaymentRequest(recipient);"
      },
      {
        "sha": "00a95eeec58cfa0d4d1e6a39b10190972511f8d4",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "patch": "@@ -83,6 +83,8 @@ public Q_SLOTS:\n     void gotoSignMessageTab(QString addr = \"\");\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n+    /** Load Partially Signed Bitcoin Transaction */\n+    void gotoLoadPSBT();\n \n     /** Show incoming transaction notification for new transactions.\n "
      }
    ]
  },
  {
    "sha": "764bfe4cba35c24f7627cc425d9e7eba56e98964",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjRiZmU0Y2JhMzVjMjRmNzYyN2NjNDI1ZDllN2ViYTU2ZTk4OTY0",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-26T10:18:52Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-03-27T13:59:19Z"
      },
      "message": "[psbt] add file size limit",
      "tree": {
        "sha": "ba28bee5ce038c9b3e40805cd07d1caffe26322d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba28bee5ce038c9b3e40805cd07d1caffe26322d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/764bfe4cba35c24f7627cc425d9e7eba56e98964",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5+BrcACgkQV/+b28ww\nEAk/Lw/+NUomoH+HZguH1O4iYUVCBoZEsPuPN11XxGd7v+E4wjGmoO3DfQAprtx4\nJB5pV98/3MkNL+tOUpJJONYIejBN45Ib7ih7VtnSYEZpmpJNK8EtnkUsrBbKSpSd\nlTjBdjm+DWNgGr9j6RB2tKP4a0lkRZkTGA5XMLoU3LAvNp9p6ID21hJ3FvoTOFNP\nd9ojsxgHgwAvGaCrJ0JLqPDZy9r1REbihsi1OcmeE7Of5OOAjaGRGh7jgFq3VT9s\nEk8/NW6jIa6t8Y0Kd1wc9Q/q6OLIpyYYVMa18+zpCjQApX6r8B1fDwp6uIHiFdm0\nTpUV0edOMDnr7gCzZCJODCG3ofy66WkpBtdDemuZVD4znFeksRY8w8EMZu27G32L\nBK2n4CEXj5k03pgGQ/MhJbXA+jKUoOp3ts4uSowqDv93VWDBKZJuIxjsPWZNcmpO\n60y2qpd6InOvNHOsy+V6yhyjXXgVq+9MOzMMY0ZN9UUQYwO52anomYpPkbwcPChp\nybAYvKNTEcOTjLZ5djWmzopsSbXMmSGTgu3ukpVkA0rf0VvWfoP6K0Zm0Mj4/wA1\nJDvUlN0TqE5KXOflMU5G0THdSNTBdk/cFc9r8jJhBpZSGWBTJeSpkVnzLpuRFnnX\nPZqWt5UbOQ5KuyiKytSmMdd4U5pW07eunBkth6CVd8OlpLVMC30=\n=stRm\n-----END PGP SIGNATURE-----",
        "payload": "tree ba28bee5ce038c9b3e40805cd07d1caffe26322d\nparent 1cd8dc2556b847e11a238b9e69493cd8fbeecc6c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1585217932 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1585317559 +0100\n\n[psbt] add file size limit\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/764bfe4cba35c24f7627cc425d9e7eba56e98964",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/764bfe4cba35c24f7627cc425d9e7eba56e98964",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/764bfe4cba35c24f7627cc425d9e7eba56e98964/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cd8dc2556b847e11a238b9e69493cd8fbeecc6c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7ea06b38f7c300a8e9c62428a6d318fa73f5f3f8",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/764bfe4cba35c24f7627cc425d9e7eba56e98964/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/764bfe4cba35c24f7627cc425d9e7eba56e98964/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=764bfe4cba35c24f7627cc425d9e7eba56e98964",
        "patch": "@@ -40,6 +40,10 @@ static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n // as a 0 length key which indicates that this is the separator. The separator has no value.\n static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n \n+// BIP 174 does not specify a maximum file size, but we set a limit anyway\n+// to prevent reading a stream indefinately and running out of memory.\n+const std::streamsize MAX_FILE_SIZE_PSBT = 100000000; // 100 MiB\n+\n /** A structure for PSBTs which contain per-input information */\n struct PSBTInput\n {"
      }
    ]
  }
]