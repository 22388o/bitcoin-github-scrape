paveljanik,2016-08-24T17:03:11Z,Do you have some numbers? It would be nice to see some benchmarks added first and then comparing ++them with++ üëç \n,https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242137754,242137754,
dcousens,2016-08-24T23:44:07Z,"utACK fa18923,  but I really doubt this will be measurable.\n",https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242242061,242242061,
MarcoFalke,2016-08-25T14:09:07Z,"This was suggested in https://github.com/bitcoin/bitcoin/pull/7656#discussion-diff-56476755, but apparently for base58 this has 0 effect, the bench binaries are identical. :laughing: \n\nSome other hunks did not produce identical binaries, so in theory there could be a performance difference. Though, I don't think the performance gain matters in those other places.\n",https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242399860,242399860,
UdjinM6,2016-08-25T14:19:25Z,Not sure about specific cases here but in general performance gain could be quite significant: http://stackoverflow.com/a/9519095\nAlso it might simply be a good practice to use prefix operators by default and postfix only when needed imo.\n,https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242403670,242403670,
sipa,2016-08-25T14:21:57Z,"In practice I expect this to have very little effect for containers with 'simple' iterators (where the iterator essentially consists of a single pointer). This is the case for `std::vector`, `std::list`, `std::set`, `std::map`, `std::multimap` (but not for `std::vector<bool>` or `std::deque`). In this case, technically a copy is made before returning, but the compiler will just optimize it away if",https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242404680,242404680,
paveljanik,2016-08-25T18:07:47Z,Thank you for testing this Marco!\n,https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242486260,242486260,
laanwj,2016-08-26T10:36:44Z,"> Some other hunks did not produce identical binaries, so in theory there could be a performance difference. Though, I don't think the performance gain matters in those other places.\n\nEven is changing it retroactively is not deemed worth it, let's try to encourage `++x` iso `x++` usage in new code, that's pretty uncontroversial.\n",https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242696167,242696167,
sipa,2016-08-26T10:41:10Z,"> Even is changing it retroactively is not deemed worth it, let's try to encourage ++x iso x++ usage in new code, that's pretty uncontroversial.\n\nAgree. Let's add that to `doc/developer-notes.md`.\n",https://github.com/bitcoin/bitcoin/pull/8579#issuecomment-242697261,242697261,
