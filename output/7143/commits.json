[
  {
    "sha": "6da12dff287ac08c1d8aa847794abb8e582d606c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGExMmRmZjI4N2FjMDhjMWQ4YWE4NDc3OTRhYmI4ZTU4MmQ2MDZj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-12-01T10:45:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-12-01T10:55:10Z"
      },
      "message": "qt: use QMetaObject::invokeMethod for cross-thread signaling in clientmodel\n\nIt's surprising to me that Q_EMIT even worked for this.\n\nBut it doesn't build in Qt4, so switch back to\n`QMetaObject::invokeMethod`. Fixes #7138.",
      "tree": {
        "sha": "a2a412aa2bdb8b6549036ba58c7c36ada4a3d5aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2a412aa2bdb8b6549036ba58c7c36ada4a3d5aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6da12dff287ac08c1d8aa847794abb8e582d606c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6da12dff287ac08c1d8aa847794abb8e582d606c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6da12dff287ac08c1d8aa847794abb8e582d606c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6da12dff287ac08c1d8aa847794abb8e582d606c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6abf6eb7bb777a5c4f22e9db6d4544281277378f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6abf6eb7bb777a5c4f22e9db6d4544281277378f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6abf6eb7bb777a5c4f22e9db6d4544281277378f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8149dfdf5a8791f5b20307e4b47d6f5fabaf9591",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6da12dff287ac08c1d8aa847794abb8e582d606c/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6da12dff287ac08c1d8aa847794abb8e582d606c/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=6da12dff287ac08c1d8aa847794abb8e582d606c",
        "patch": "@@ -253,7 +253,10 @@ static void BlockTipChanged(ClientModel *clientmodel, bool initialSync, const CB\n     // if we are in-sync, update the UI regardless of last update time\n     if (!initialSync || now - nLastBlockTipUpdateNotification > MODEL_UPDATE_DELAY) {\n         //pass a async signal to the UI thread\n-        Q_EMIT clientmodel->numBlocksChanged(pIndex->nHeight, QDateTime::fromTime_t(pIndex->GetBlockTime()), clientmodel->getVerificationProgress(pIndex));\n+        QMetaObject::invokeMethod(clientmodel, \"numBlocksChanged\", Qt::QueuedConnection,\n+                                  Q_ARG(int, pIndex->nHeight),\n+                                  Q_ARG(QDateTime, QDateTime::fromTime_t(pIndex->GetBlockTime())),\n+                                  Q_ARG(double, clientmodel->getVerificationProgress(pIndex)));\n         nLastBlockTipUpdateNotification = now;\n     }\n }"
      }
    ]
  }
]