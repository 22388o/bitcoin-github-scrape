[
  {
    "sha": "ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTJkMTBiNWQ1Y2U3ZjRkMGY5Y2Y3ZjFiZDI5M2UyNTJmYTczY2Fh",
    "commit": {
      "author": {
        "name": "DesWurstes",
        "email": "DesWurstes@users.noreply.github.com",
        "date": "2019-01-03T21:09:01Z"
      },
      "committer": {
        "name": "DesWurstes",
        "email": "DesWurstes@users.noreply.github.com",
        "date": "2019-01-03T21:25:06Z"
      },
      "message": "Revert \"Check if sys/random.h is required for getentropy on OSX.\"\n\nThis reverts commit ee2d10a.",
      "tree": {
        "sha": "1cfd38da267df8f53146542ae379b2f1c188a30c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1cfd38da267df8f53146542ae379b2f1c188a30c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa/comments",
    "author": {
      "login": "DesWurstes",
      "id": 23437045,
      "node_id": "MDQ6VXNlcjIzNDM3MDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23437045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DesWurstes",
      "html_url": "https://github.com/DesWurstes",
      "followers_url": "https://api.github.com/users/DesWurstes/followers",
      "following_url": "https://api.github.com/users/DesWurstes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DesWurstes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DesWurstes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DesWurstes/subscriptions",
      "organizations_url": "https://api.github.com/users/DesWurstes/orgs",
      "repos_url": "https://api.github.com/users/DesWurstes/repos",
      "events_url": "https://api.github.com/users/DesWurstes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DesWurstes/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "DesWurstes",
      "id": 23437045,
      "node_id": "MDQ6VXNlcjIzNDM3MDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23437045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DesWurstes",
      "html_url": "https://github.com/DesWurstes",
      "followers_url": "https://api.github.com/users/DesWurstes/followers",
      "following_url": "https://api.github.com/users/DesWurstes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DesWurstes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DesWurstes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DesWurstes/subscriptions",
      "organizations_url": "https://api.github.com/users/DesWurstes/orgs",
      "repos_url": "https://api.github.com/users/DesWurstes/repos",
      "events_url": "https://api.github.com/users/DesWurstes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DesWurstes/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c64278e1a723bdc34598d0d83e56f1e74ea39bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c64278e1a723bdc34598d0d83e56f1e74ea39bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c64278e1a723bdc34598d0d83e56f1e74ea39bb"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 1,
      "deletions": 21
    },
    "files": [
      {
        "sha": "f55e653a0f3f1fab798a32618f4bb442c2b1946f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa",
        "patch": "@@ -846,14 +846,6 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n-AC_MSG_CHECKING(for getentropy via random.h)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n- #include <sys/random.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],"
      },
      {
        "sha": "1423e3aadb21efcf3e8eb1e3cff7c9712e21a831",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=ee2d10b5d5ce7f4d0f9cf7f1bd293e252fa73caa",
        "patch": "@@ -28,12 +28,9 @@\n #include <sys/syscall.h>\n #include <linux/random.h>\n #endif\n-#if defined(HAVE_GETENTROPY) || (defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX))\n+#ifdef HAVE_GETENTROPY\n #include <unistd.h>\n #endif\n-#if defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX)\n-#include <sys/random.h>\n-#endif\n #ifdef HAVE_SYSCTL_ARND\n #include <util/strencodings.h> // for ARRAYLEN\n #include <sys/sysctl.h>\n@@ -242,15 +239,6 @@ void GetOSRand(unsigned char *ent32)\n     if (getentropy(ent32, NUM_OS_RANDOM_BYTES) != 0) {\n         RandFailure();\n     }\n-#elif defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX)\n-    // We need a fallback for OSX < 10.12\n-    if (&getentropy != nullptr) {\n-        if (getentropy(ent32, NUM_OS_RANDOM_BYTES) != 0) {\n-            RandFailure();\n-        }\n-    } else {\n-        GetDevURandom(ent32);\n-    }\n #elif defined(HAVE_SYSCTL_ARND)\n     /* FreeBSD and similar. It is possible for the call to return less\n      * bytes than requested, so need to read in a loop."
      }
    ]
  }
]