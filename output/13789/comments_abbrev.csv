DrahtBot,2018-07-28T19:52:40Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-408631149,408631149,
laanwj,2018-07-31T18:14:05Z,"Not sure this is the right way to go about it. IMO passing the correct compilation flags is something that needs to be fixed in the build system, not worked around with compiler-specific pragmas in the code.",https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-409317356,409317356,
sipa,2018-07-31T18:33:03Z,"`crypto/sha256_sse4.cpp` doesn't actually need this, as it's written using inline assembly rather than compiler intrinsics. The assembly is passed through to the assembler without the compiler interpreting or understanding.",https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-409323279,409323279,
MarcoFalke,2019-04-08T15:40:03Z,@luke-jr Is this still relevant after the recent discussion?,https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-480885376,480885376,
DrahtBot,2020-03-09T20:35:34Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 316 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-596765993,596765993,
DrahtBot,2020-04-22T14:14:36Z,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-617805302,617805302,
luke-jr,2020-05-14T04:04:11Z,"I haven't seen anything that would make this irrelevant.\n\nRebased",https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-628373207,628373207,
sipa,2020-05-14T04:35:15Z,"Concept ACK, I think this is cleaner than doing it in the build system, actually. Maybe it makes sense to add a macro in a util/ file so no compiler-specific code is needed here.\n\nsha256_sse4.cpp does not need this, as it's written using inline assembly, not intrinsics.",https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-628380855,628380855,
luke-jr,2020-05-14T05:26:38Z,"> sha256_sse4.cpp does not need this, as it's written using inline assembly, not intrinsics.\n\nConfirmed with `-mno-sse4` and fixed/removed",https://github.com/bitcoin/bitcoin/pull/13789#issuecomment-628395200,628395200,
