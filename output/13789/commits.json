[
  {
    "sha": "14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDMzN2QwZDgwYjVhNGNiMjY3NGE4YTNhNDRkZmI3YjMwMzcwYzcw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-07-28T19:32:41Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-05-14T05:24:30Z"
      },
      "message": "crypto/sha256: Use pragmas to enforce necessary intrinsics for GCC and Clang\n\nThis avoids problems when the user specifies CXXFLAGS explicitly disabling the relevant optimisations.",
      "tree": {
        "sha": "fef37c7a22ef6fb468c15273fe0cf2712ef0a166",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fef37c7a22ef6fb468c15273fe0cf2712ef0a166"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04c09553d89809cf6328679d7535ecaa0070485d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04c09553d89809cf6328679d7535ecaa0070485d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04c09553d89809cf6328679d7535ecaa0070485d"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "adddf4338a713bf17356b9efe209f3d97a8470c4",
        "filename": "src/crypto/sha256_avx2.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/src/crypto/sha256_avx2.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/src/crypto/sha256_avx2.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_avx2.cpp?ref=14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
        "patch": "@@ -9,6 +9,12 @@\n \n #include <crypto/common.h>\n \n+#if defined(__clang__)\n+#pragma clang attribute push(__attribute__((__target__(\"avx,avx2\"))), apply_to = function)\n+#elif defined(__GNUC__)\n+#pragma GCC target (\"avx,avx2\")\n+#endif\n+\n namespace sha256d64_avx2 {\n namespace {\n \n@@ -325,4 +331,8 @@ void Transform_8way(unsigned char* out, const unsigned char* in)\n \n }\n \n+#if defined(__clang__)\n+#pragma clang attribute pop\n+#endif\n+\n #endif"
      },
      {
        "sha": "42957a9e1e351b9fb6dbcf6371486edc45fbed3e",
        "filename": "src/crypto/sha256_shani.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/src/crypto/sha256_shani.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/src/crypto/sha256_shani.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_shani.cpp?ref=14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
        "patch": "@@ -11,6 +11,12 @@\n #include <stdint.h>\n #include <immintrin.h>\n \n+#if defined(__clang__)\n+#pragma clang attribute push(__attribute__((__target__(\"sse4,sha\"))), apply_to = function)\n+#elif defined(__GNUC__)\n+#pragma GCC target (\"sse4,sha\")\n+#endif\n+\n namespace {\n \n alignas(__m128i) const uint8_t MASK[16] = {0x03, 0x02, 0x01, 0x00, 0x07, 0x06, 0x05, 0x04, 0x0b, 0x0a, 0x09, 0x08, 0x0f, 0x0e, 0x0d, 0x0c};\n@@ -353,4 +359,8 @@ void Transform_2way(unsigned char* out, const unsigned char* in)\n \n }\n \n+#if defined(__clang__)\n+#pragma clang attribute pop\n+#endif\n+\n #endif"
      },
      {
        "sha": "000132fcf6f239adefa40ef693c95dae86279ac7",
        "filename": "src/crypto/sha256_sse41.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/src/crypto/sha256_sse41.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14337d0d80b5a4cb2674a8a3a44dfb7b30370c70/src/crypto/sha256_sse41.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_sse41.cpp?ref=14337d0d80b5a4cb2674a8a3a44dfb7b30370c70",
        "patch": "@@ -9,6 +9,12 @@\n \n #include <crypto/common.h>\n \n+#if defined(__clang__)\n+#pragma clang attribute push(__attribute__((__target__(\"sse4.1\"))), apply_to = function)\n+#elif defined(__GNUC__)\n+#pragma GCC target (\"sse4.1\")\n+#endif\n+\n namespace sha256d64_sse41 {\n namespace {\n \n@@ -317,4 +323,8 @@ void Transform_4way(unsigned char* out, const unsigned char* in)\n \n }\n \n+#if defined(__clang__)\n+#pragma clang attribute pop\n+#endif\n+\n #endif"
      }
    ]
  }
]