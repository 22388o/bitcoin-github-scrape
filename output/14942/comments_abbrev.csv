DrahtBot,2018-12-13T02:02:24Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18278 (interfaces: Describe and follow some code conventions by ryanofsky)\n* #17954 (wallet: Remove calls to Chain::Lock",https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-446814922,446814922,
Empact,2019-01-31T01:18:05Z,"Rebased and substantially refocused this PR to:\n* Return `ScanResult` from `RescanFromTime`\n* Add `ScanResult::FailedTime` to report the best non-failing time - beneficial also because most callers are uninterested in the time\n* Drop ~`IsScanning` and~ `IsAbortingRescan` from `CWallet`, as all scan/abort status is now returned as results from specific operations.",https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-459176579,459176579,
Empact,2019-04-14T03:59:00Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-482917807,482917807,
jb55,2019-05-14T06:46:46Z,"looks like a nice refactor\n\nutACK 4b4cf7cc28347b2d537be89a412093dbd62ea83e",https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-492101141,492101141,
Empact,2019-05-17T03:02:56Z,"Rebased, and restored `IsScanning` as it's needed for d3e8458365",https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-493301763,493301763,
jb55,2019-05-17T16:28:58Z,"not sure why github tends to screw up range-diffs sometimes but here's the last one:\n\n```\n$ git range-diff 4b4cf7c~2..4b4cf7c 469117d~2..469117d\n```\n```diff\n1:  99a72728a6 = 1:  c82f6c7806 Return ScanResult from CWallet::RescanFromTime\n2:  4b4cf7cc28 ! 2:  469117d55c Make scan / abort status private to CWallet\n@@ -2,7 +2,7 @@\n \n     Make scan / abort status private to CWallet\",https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-493516037,493516037,
DrahtBot,2020-03-23T22:03:45Z,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-602880803,602880803,
laanwj,2021-09-09T12:36:18Z,"Any plans for this? It's needed rebase for more than a year, no other activity.",https://github.com/bitcoin/bitcoin/pull/14942#issuecomment-916052202,916052202,
practicalswift,2019-01-05T09:49:25Z,"This is a dead store since `nTimeBegin` is unconditionally written to on L573.\n\nPerhaps you could drop the dead store and instead move the `nTimeBegin = chainActive.Tip()->GetBlockTime();` to the line after `LOCK(pwallet->cs_wallet);`?",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r245472896,245472896,src/wallet/rpcdump.cpp
Empact,2019-01-07T08:53:23Z,"`nTimeBegin` is used outside that block for the rescan, line 646.\nI prefer to leave this as it seems harmless. Alternative is leaving it uninitialized.",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r245582684,245582684,src/wallet/rpcdump.cpp
practicalswift,2019-01-07T09:07:23Z,"What I meant is that the current code is:\n\n```c++\nint64_t nTimeBegin = TIMESTAMP_MIN;\n{\n    nTimeBegin = chainActive.Tip()->GetBlockTime();\n}\nRescanWallet(*pwallet, reserver, nTimeBegin, false /* update */);\n```\n\nThus the first assignment is redundant since it is overwritten in all possible execution paths.\n\nThere are no execution paths where dropping the first assignment w",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r245585901,245585901,src/wallet/rpcdump.cpp
Empact,2019-01-07T09:29:07Z,"Gotcha, I'd rather leave as is, as the change is pretty well orthogonal.",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r245591707,245591707,src/wallet/rpcdump.cpp
theStack,2020-02-07T12:26:10Z,"Now that this method doesn't return a timestamp (`int64_t`) anymore, this Doxygen comment needs to be updated.",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r376364906,376364906,src/wallet/wallet.cpp
Empact,2020-03-09T18:16:48Z,"Updated, thanks!",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r389874188,389874188,src/wallet/wallet.cpp
kallewoof,2020-03-10T02:56:18Z,Tiny preference of `switch (result.status)` versus `if`'ing over enums (e.g. it gives compiler warnings when new fields are added).,https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390068923,390068923,src/wallet/rpcdump.cpp
kallewoof,2020-03-10T03:02:28Z,"Add empty (` *`) line before @ return. (See ""Coding Style (Doxygen-compatible comments)"" in developer.nodes.md)",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390070700,390070700,src/wallet/wallet.h
kallewoof,2020-03-10T03:05:11Z,"This feels weird to me, and feels like it should have a new `ORPHAN_CHAIN` `ScanResult`, even if this is handled the same way as `SUCCESS` everywhere right now.",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390071332,390071332,src/wallet/wallet.h
kallewoof,2020-03-10T04:56:04Z,"This differs from the original code, where `scannedTime` was set to the last block time + `TIMESTAMP_WINDOW + 1`. Won't this result in missed scans below, as `scannedTime` will be low?",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390095224,390095224,src/wallet/rpcdump.cpp
promag,2020-03-10T08:23:02Z,Looks like you could have a race in this method?,https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390152303,390152303,src/wallet/wallet.cpp
Empact,2020-03-10T12:15:17Z,"I don't see the difference in behavior - see the original location for comparison: https://github.com/bitcoin/bitcoin/pull/14942/commits/f059899fe3ca88204d9dda4f83c4f8c4548743ea#diff-b2bb174788c7409b671c46ccc86034bdL1607-L1611\n\nCould you call out what you're referring to any more explicitly, in terms of what has changed?",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390271905,390271905,src/wallet/rpcdump.cpp
kallewoof,2020-03-10T12:51:27Z,"No, sorry, you're right. I missed the passing of `scannedTime` on L#1427. It looks identical.",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390289830,390289830,src/wallet/rpcdump.cpp
promag,2020-03-10T14:24:20Z,Why does it matter the return value? Isn't even documented.,https://github.com/bitcoin/bitcoin/pull/14942#discussion_r390351049,390351049,src/wallet/rpcdump.cpp
Empact,2020-03-11T18:14:24Z,"It's a bit convoluted, but I think it's handled gracefully: if `fScanningWallet` is set to `false` as `fAbortRescan` is being set to `true` (i.e. at the end of a scan), there is no issue as `ScanForWalletTransactions` sets `fAbortRescan` to `false` at its start.\n\nBTW this behavior is unchanged - here's the prior implementation: https://github.com/bitcoin/bitcoin/pull/14942/files#diff-522490d83",https://github.com/bitcoin/bitcoin/pull/14942#discussion_r391169996,391169996,src/wallet/wallet.cpp
