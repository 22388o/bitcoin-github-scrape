[
  {
    "sha": "c7ea12d098ee292b78274671b698202c6551b075",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2VhMTJkMDk4ZWUyOTJiNzgyNzQ2NzFiNjk4MjAyYzY1NTFiMDc1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-14T16:38:36Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-07T13:39:25Z"
      },
      "message": "tests: Add key_io fuzzing harness",
      "tree": {
        "sha": "f433dfe6810be7ed9af9d0f1e7cba9761e311c5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f433dfe6810be7ed9af9d0f1e7cba9761e311c5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7ea12d098ee292b78274671b698202c6551b075",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7ea12d098ee292b78274671b698202c6551b075",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7ea12d098ee292b78274671b698202c6551b075",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7ea12d098ee292b78274671b698202c6551b075/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d28c886f077ce22fb7755fe9ec1f4e08d3d4a62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d28c886f077ce22fb7755fe9ec1f4e08d3d4a62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d28c886f077ce22fb7755fe9ec1f4e08d3d4a62"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 56,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ce9aa733dc0fd907e7291852978db4a10bb1f611",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7ea12d098ee292b78274671b698202c6551b075/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7ea12d098ee292b78274671b698202c6551b075/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=c7ea12d098ee292b78274671b698202c6551b075",
        "patch": "@@ -36,6 +36,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/integer \\\n   test/fuzz/inv_deserialize \\\n   test/fuzz/key \\\n+  test/fuzz/key_io \\\n   test/fuzz/key_origin_info_deserialize \\\n   test/fuzz/locale \\\n   test/fuzz/merkle_block_deserialize \\\n@@ -438,6 +439,12 @@ test_fuzz_key_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_key_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_key_SOURCES = $(FUZZ_SUITE) test/fuzz/key.cpp\n \n+test_fuzz_key_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_key_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_key_io_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_key_io_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_key_io_SOURCES = $(FUZZ_SUITE) test/fuzz/key_io.cpp\n+\n test_fuzz_key_origin_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DKEY_ORIGIN_INFO_DESERIALIZE=1\n test_fuzz_key_origin_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_key_origin_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "f44628b0f8dec260f486825a1c9cb1a48eaadf83",
        "filename": "src/test/fuzz/key_io.cpp",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7ea12d098ee292b78274671b698202c6551b075/src/test/fuzz/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7ea12d098ee292b78274671b698202c6551b075/src/test/fuzz/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/key_io.cpp?ref=c7ea12d098ee292b78274671b698202c6551b075",
        "patch": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <key_io.h>\n+#include <rpc/util.h>\n+#include <script/signingprovider.h>\n+#include <script/standard.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string random_string(buffer.begin(), buffer.end());\n+\n+    const CKey key = DecodeSecret(random_string);\n+    if (key.IsValid()) {\n+        assert(key == DecodeSecret(EncodeSecret(key)));\n+    }\n+\n+    const CExtKey ext_key = DecodeExtKey(random_string);\n+    if (ext_key.key.size() == 32) {\n+        assert(ext_key == DecodeExtKey(EncodeExtKey(ext_key)));\n+    }\n+\n+    const CExtPubKey ext_pub_key = DecodeExtPubKey(random_string);\n+    if (ext_pub_key.pubkey.size() == CPubKey::COMPRESSED_SIZE) {\n+        assert(ext_pub_key == DecodeExtPubKey(EncodeExtPubKey(ext_pub_key)));\n+    }\n+\n+    const CTxDestination tx_destination = DecodeDestination(random_string);\n+    (void)DescribeAddress(tx_destination);\n+    (void)GetKeyForDestination(/* store */ {}, tx_destination);\n+    (void)GetScriptForDestination(tx_destination);\n+    (void)IsValidDestination(tx_destination);\n+\n+    (void)IsValidDestinationString(random_string);\n+}"
      },
      {
        "sha": "25005e531a58bf7cb666ba5708b18fded36d835e",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7ea12d098ee292b78274671b698202c6551b075/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7ea12d098ee292b78274671b698202c6551b075/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=c7ea12d098ee292b78274671b698202c6551b075",
        "patch": "@@ -27,6 +27,7 @@\n     \"flat_file_pos_deserialize\",\n     \"float\",\n     \"hex\",\n+    \"key_io\",\n     \"integer\",\n     \"key\",\n     \"key_origin_info_deserialize\","
      }
    ]
  },
  {
    "sha": "4fe4de6364b05d2abde196b486b6e3f254d18026",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmU0ZGU2MzY0YjA1ZDJhYmRlMTk2YjQ4NmI2ZTNmMjU0ZDE4MDI2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-14T16:39:23Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-07T13:39:25Z"
      },
      "message": "tests: Fuzz additional functions in the hex fuzzing harness",
      "tree": {
        "sha": "4c87297eb02076e8c90f764ee419068c23423f37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c87297eb02076e8c90f764ee419068c23423f37"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fe4de6364b05d2abde196b486b6e3f254d18026",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fe4de6364b05d2abde196b486b6e3f254d18026",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fe4de6364b05d2abde196b486b6e3f254d18026",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fe4de6364b05d2abde196b486b6e3f254d18026/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7ea12d098ee292b78274671b698202c6551b075",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7ea12d098ee292b78274671b698202c6551b075",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7ea12d098ee292b78274671b698202c6551b075"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 15,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2de6100d7b64c23dd9a0bc2441c751f86ec39713",
        "filename": "src/test/fuzz/hex.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fe4de6364b05d2abde196b486b6e3f254d18026/src/test/fuzz/hex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fe4de6364b05d2abde196b486b6e3f254d18026/src/test/fuzz/hex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/hex.cpp?ref=4fe4de6364b05d2abde196b486b6e3f254d18026",
        "patch": "@@ -2,8 +2,12 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <core_io.h>\n+#include <primitives/block.h>\n+#include <rpc/util.h>\n #include <test/fuzz/fuzz.h>\n-\n+#include <uint256.h>\n+#include <univalue.h>\n #include <util/strencodings.h>\n \n #include <cassert>\n@@ -19,4 +23,14 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     if (IsHex(random_hex_string)) {\n         assert(ToLower(random_hex_string) == hex_data);\n     }\n+    (void)IsHexNumber(random_hex_string);\n+    uint256 result;\n+    (void)ParseHashStr(random_hex_string, result);\n+    (void)uint256S(random_hex_string);\n+    try {\n+        (void)HexToPubKey(random_hex_string);\n+    } catch (const UniValue&) {\n+    }\n+    CBlockHeader block_header;\n+    (void)DecodeHexBlockHeader(block_header, random_hex_string);\n }"
      }
    ]
  },
  {
    "sha": "1d324ce92229f3557f6bb38a63873dea1677240e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDMyNGNlOTIyMjlmMzU1N2Y2YmIzOGE2Mzg3M2RlYTE2NzcyNDBl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-07T13:38:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-07T13:40:19Z"
      },
      "message": "tests: Fuzz additional functions in the integer fuzzing harness",
      "tree": {
        "sha": "8f8492ecdd01866f10dddf509be89ea29d312f26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f8492ecdd01866f10dddf509be89ea29d312f26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d324ce92229f3557f6bb38a63873dea1677240e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d324ce92229f3557f6bb38a63873dea1677240e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d324ce92229f3557f6bb38a63873dea1677240e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d324ce92229f3557f6bb38a63873dea1677240e/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fe4de6364b05d2abde196b486b6e3f254d18026",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fe4de6364b05d2abde196b486b6e3f254d18026",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fe4de6364b05d2abde196b486b6e3f254d18026"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "350d3d33319b654f28d9403057b76bebff3c30c2",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d324ce92229f3557f6bb38a63873dea1677240e/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d324ce92229f3557f6bb38a63873dea1677240e/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=1d324ce92229f3557f6bb38a63873dea1677240e",
        "patch": "@@ -23,6 +23,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <uint256.h>\n+#include <util/moneystr.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n #include <util/time.h>\n@@ -76,11 +77,19 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)DecompressAmount(u64);\n     (void)FormatISO8601Date(i64);\n     (void)FormatISO8601DateTime(i64);\n+    // FormatMoney(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    if (i64 != std::numeric_limits<int64_t>::min()) {\n+        int64_t parsed_money;\n+        if (ParseMoney(FormatMoney(i64), parsed_money)) {\n+            assert(parsed_money == i64);\n+        }\n+    }\n     (void)GetSizeOfCompactSize(u64);\n     (void)GetSpecialScriptSize(u32);\n     // (void)GetVirtualTransactionSize(i64, i64); // function defined only for a subset of int64_t inputs\n     // (void)GetVirtualTransactionSize(i64, i64, u32); // function defined only for a subset of int64_t/uint32_t inputs\n     (void)HexDigit(ch);\n+    (void)MoneyRange(i64);\n     (void)i64tostr(i64);\n     (void)IsDigit(ch);\n     (void)IsSpace(ch);\n@@ -106,6 +115,14 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)SipHashUint256(u64, u64, u256);\n     (void)SipHashUint256Extra(u64, u64, u256, u32);\n     (void)ToLower(ch);\n+    (void)ToUpper(ch);\n+    // ValueFromAmount(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    if (i64 != std::numeric_limits<int64_t>::min()) {\n+        int64_t parsed_money;\n+        if (ParseMoney(ValueFromAmount(i64).getValStr(), parsed_money)) {\n+            assert(parsed_money == i64);\n+        }\n+    }\n \n     const arith_uint256 au256 = UintToArith256(u256);\n     assert(ArithToUint256(au256) == u256);"
      }
    ]
  },
  {
    "sha": "5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmMxMGYzY2I1OTkxNjg0ZjEwYzU4OWZhNWNjZjJkNjk0ZmZhMzJh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-15T21:53:25Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-07T14:35:49Z"
      },
      "message": "tests: Fuzz additional functions in the transaction fuzzing harness",
      "tree": {
        "sha": "58d6343a35bee31fb8eaf1e1bbaefd1fcd9f6d83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58d6343a35bee31fb8eaf1e1bbaefd1fcd9f6d83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d324ce92229f3557f6bb38a63873dea1677240e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d324ce92229f3557f6bb38a63873dea1677240e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d324ce92229f3557f6bb38a63873dea1677240e"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 24,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1ec69cc23d525145117de2f1597a2cd6f70f4878",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <coins.h>\n #include <consensus/tx_check.h>\n #include <consensus/tx_verify.h>\n@@ -13,12 +14,18 @@\n #include <primitives/transaction.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/rbf.h>\n #include <validation.h>\n #include <version.h>\n \n #include <cassert>\n \n+void initialize()\n+{\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n@@ -85,4 +92,21 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)IsStandardTx(tx, reason);\n     (void)RecursiveDynamicUsage(tx);\n     (void)SignalsOptInRBF(tx);\n+\n+    CCoinsView coins_view;\n+    const CCoinsViewCache coins_view_cache(&coins_view);\n+    (void)AreInputsStandard(tx, coins_view_cache);\n+    (void)IsWitnessStandard(tx, coins_view_cache);\n+\n+    UniValue u(UniValue::VOBJ);\n+    // ValueFromAmount(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    bool skip_tx_to_univ = false;\n+    for (const CTxOut& txout : tx.vout) {\n+        if (txout.nValue == std::numeric_limits<int64_t>::min()) {\n+            skip_tx_to_univ = true;\n+        }\n+    }\n+    if (!skip_tx_to_univ) {\n+        TxToUniv(tx, /* hashBlock */ {}, u);\n+    }\n }"
      }
    ]
  },
  {
    "sha": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmZlZDY5NmQyNTFkYzM4MjExZWIyZmE3ZjE0NGI2YTk4OWRkNDc5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-15T23:37:27Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-07T14:35:49Z"
      },
      "message": "tests: Fuzz additional functions in the script fuzzing harness",
      "tree": {
        "sha": "aad1021fe8df5a9d09b82da6bf3fe0add98a987f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aad1021fe8df5a9d09b82da6bf3fe0add98a987f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52fed696d251dc38211eb2fa7f144b6a989dd479",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52fed696d251dc38211eb2fa7f144b6a989dd479",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52fed696d251dc38211eb2fa7f144b6a989dd479",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52fed696d251dc38211eb2fa7f144b6a989dd479/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc10f3cb5991684f10c589fa5ccf2d694ffa32a"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 30,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ed4fe21957f0f58c387fee267c0d5062575a8c4d",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 1,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52fed696d251dc38211eb2fa7f144b6a989dd479/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52fed696d251dc38211eb2fa7f144b6a989dd479/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=52fed696d251dc38211eb2fa7f144b6a989dd479",
        "patch": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);\n+    }\n+\n+    for (unsigned int size = 0; size < 6; ++size) {\n+        std::vector<unsigned char> vch(GetSpecialScriptSize(size), 0x00);\n+        vch.insert(vch.end(), buffer.begin(), buffer.end());\n+        CScript decompressed_script;\n+        (void)DecompressScript(decompressed_script, size, vch);\n+    }\n \n     CTxDestination address;\n     (void)ExtractDestination(script, address);\n@@ -61,4 +77,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)script.IsPushOnly();\n     (void)script.IsUnspendable();\n     (void)script.GetSigOpCount(/* fAccurate= */ false);\n+\n+    (void)FormatScript(script);\n+    (void)ScriptToAsmStr(script, false);\n+    (void)ScriptToAsmStr(script, true);\n+\n+    UniValue o1(UniValue::VOBJ);\n+    ScriptPubKeyToUniv(script, o1, true);\n+    UniValue o2(UniValue::VOBJ);\n+    ScriptPubKeyToUniv(script, o2, false);\n+    UniValue o3(UniValue::VOBJ);\n+    ScriptToUniv(script, o3, true);\n+    UniValue o4(UniValue::VOBJ);\n+    ScriptToUniv(script, o4, false);\n }"
      }
    ]
  }
]