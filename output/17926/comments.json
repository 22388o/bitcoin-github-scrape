[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574473383",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#issuecomment-574473383",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17926",
    "id": 574473383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDQ3MzM4Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T03:00:39Z",
    "updated_at": "2020-02-11T20:07:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17972 (tests: Add fuzzing harness for CKey and key related functions by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574473383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/576648729",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#issuecomment-576648729",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17926",
    "id": 576648729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjY0ODcyOQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-21T11:55:10Z",
    "updated_at": "2020-01-21T11:55:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/576648729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596089826",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#issuecomment-596089826",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17926",
    "id": 596089826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA4OTgyNg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-07T13:42:22Z",
    "updated_at": "2020-03-07T13:42:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke Thanks for great feedback. All feedback addressed. Please re-review :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596089826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388510232",
    "pull_request_review_id": 369847190,
    "id": 388510232,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMDIzMg==",
    "diff_hunk": "@@ -65,11 +67,16 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)DecompressAmount(u64);\n     (void)FormatISO8601Date(i64);\n     (void)FormatISO8601DateTime(i64);\n+    // FormatMoney(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    if (i64 != std::numeric_limits<int64_t>::min()) {\n+        (void)FormatMoney(i64);",
    "path": "src/test/fuzz/integer.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can test a roundtrip of `FormatMoney<->ParseMoney`?",
    "created_at": "2020-03-05T19:22:36Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388510232",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388510232"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388510232"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388510232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388511843",
    "pull_request_review_id": 369847190,
    "id": 388511843,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMTg0Mw==",
    "diff_hunk": "@@ -95,6 +102,11 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)SipHashUint256(u64, u64, u256);\n     (void)SipHashUint256Extra(u64, u64, u256, u32);\n     (void)ToLower(ch);\n+    (void)ToUpper(ch);\n+    // ValueFromAmount(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    if (i64 != std::numeric_limits<int64_t>::min()) {\n+        (void)ValueFromAmount(i64);",
    "path": "src/test/fuzz/integer.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\r\n\r\nCan test a roundtrip of `ValueFromAmount.getValStr<->ParseMoney`?\r\n",
    "created_at": "2020-03-05T19:25:25Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388511843",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388511843"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388511843"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388511843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 108,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388513087",
    "pull_request_review_id": 369847190,
    "id": 388513087,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMzA4Nw==",
    "diff_hunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <key_io.h>\n+#include <rpc/util.h>\n+#include <script/signingprovider.h>\n+#include <script/standard.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string random_string(buffer.begin(), buffer.end());\n+\n+    const CKey key = DecodeSecret(random_string);\n+    if (key.IsValid()) {\n+        assert(key == DecodeSecret(EncodeSecret(key)));\n+    }\n+\n+    const CExtKey ext_key = DecodeExtKey(random_string);\n+    if (ext_key.key.size() == 32) {\n+        assert(ext_key == DecodeExtKey(EncodeExtKey(ext_key)));\n+    }\n+\n+    const CExtPubKey ext_pub_key = DecodeExtPubKey(random_string);\n+    if (ext_pub_key.pubkey.size() == CPubKey::COMPRESSED_SIZE) {\n+        assert(ext_pub_key == DecodeExtPubKey(EncodeExtPubKey(ext_pub_key)));\n+    }\n+\n+    const CTxDestination tx_destination = DecodeDestination(random_string);\n+    (void)DescribeAddress(tx_destination);\n+    (void)GetKeyForDestination({}, tx_destination);",
    "path": "src/test/fuzz/key_io.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    (void)GetKeyForDestination(/* store */ {}, tx_destination);\r\n```",
    "created_at": "2020-03-05T19:27:35Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388513087",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388513087"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388513087"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388513087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388513651",
    "pull_request_review_id": 369847190,
    "id": 388513651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMzY1MQ==",
    "diff_hunk": "@@ -85,4 +92,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)IsStandardTx(tx, reason);\n     (void)RecursiveDynamicUsage(tx);\n     (void)SignalsOptInRBF(tx);\n+\n+    CCoinsView coins_view;\n+    const CCoinsViewCache coins_view_cache(&coins_view);\n+    (void)AreInputsStandard(tx, coins_view_cache);\n+    (void)IsWitnessStandard(tx, coins_view_cache);\n+\n+    UniValue u(UniValue::VOBJ);\n+    TxToUniv(tx, {}, u);",
    "path": "src/test/fuzz/transaction.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    TxToUniv(tx, /* hashBlock */ {}, u);\r\n```",
    "created_at": "2020-03-05T19:28:38Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388513651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388513651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r388513651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388513651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255464",
    "pull_request_review_id": 370744576,
    "id": 389255464,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NTQ2NA==",
    "diff_hunk": "@@ -65,11 +67,16 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)DecompressAmount(u64);\n     (void)FormatISO8601Date(i64);\n     (void)FormatISO8601DateTime(i64);\n+    // FormatMoney(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    if (i64 != std::numeric_limits<int64_t>::min()) {\n+        (void)FormatMoney(i64);",
    "path": "src/test/fuzz/integer.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Very good idea! Thanks for the suggestion. Now added :)",
    "created_at": "2020-03-07T13:41:25Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255464",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255464"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255464"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 388510232
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255485",
    "pull_request_review_id": 370744583,
    "id": 389255485,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NTQ4NQ==",
    "diff_hunk": "@@ -95,6 +102,11 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)SipHashUint256(u64, u64, u256);\n     (void)SipHashUint256Extra(u64, u64, u256, u32);\n     (void)ToLower(ch);\n+    (void)ToUpper(ch);\n+    // ValueFromAmount(i) not defined when i == std::numeric_limits<int64_t>::min()\n+    if (i64 != std::numeric_limits<int64_t>::min()) {\n+        (void)ValueFromAmount(i64);",
    "path": "src/test/fuzz/integer.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Another very good idea! Thanks! Now added :)",
    "created_at": "2020-03-07T13:41:37Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255485",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255485"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255485"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 108,
    "side": "RIGHT",
    "in_reply_to_id": 388511843
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255497",
    "pull_request_review_id": 370744591,
    "id": 389255497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NTQ5Nw==",
    "diff_hunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <key_io.h>\n+#include <rpc/util.h>\n+#include <script/signingprovider.h>\n+#include <script/standard.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string random_string(buffer.begin(), buffer.end());\n+\n+    const CKey key = DecodeSecret(random_string);\n+    if (key.IsValid()) {\n+        assert(key == DecodeSecret(EncodeSecret(key)));\n+    }\n+\n+    const CExtKey ext_key = DecodeExtKey(random_string);\n+    if (ext_key.key.size() == 32) {\n+        assert(ext_key == DecodeExtKey(EncodeExtKey(ext_key)));\n+    }\n+\n+    const CExtPubKey ext_pub_key = DecodeExtPubKey(random_string);\n+    if (ext_pub_key.pubkey.size() == CPubKey::COMPRESSED_SIZE) {\n+        assert(ext_pub_key == DecodeExtPubKey(EncodeExtPubKey(ext_pub_key)));\n+    }\n+\n+    const CTxDestination tx_destination = DecodeDestination(random_string);\n+    (void)DescribeAddress(tx_destination);\n+    (void)GetKeyForDestination({}, tx_destination);",
    "path": "src/test/fuzz/key_io.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2020-03-07T13:41:43Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 388513087
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255504",
    "pull_request_review_id": 370744596,
    "id": 389255504,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NTUwNA==",
    "diff_hunk": "@@ -85,4 +92,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)IsStandardTx(tx, reason);\n     (void)RecursiveDynamicUsage(tx);\n     (void)SignalsOptInRBF(tx);\n+\n+    CCoinsView coins_view;\n+    const CCoinsViewCache coins_view_cache(&coins_view);\n+    (void)AreInputsStandard(tx, coins_view_cache);\n+    (void)IsWitnessStandard(tx, coins_view_cache);\n+\n+    UniValue u(UniValue::VOBJ);\n+    TxToUniv(tx, {}, u);",
    "path": "src/test/fuzz/transaction.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "1d9c554c5ed7c13473ce3e7663f248c3c4aea361",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2020-03-07T13:41:49Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255504",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255504"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389255504"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389255504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT",
    "in_reply_to_id": 388513651
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389257830",
    "pull_request_review_id": 370746366,
    "id": 389257830,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NzgzMA==",
    "diff_hunk": "@@ -85,4 +92,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)IsStandardTx(tx, reason);\n     (void)RecursiveDynamicUsage(tx);\n     (void)SignalsOptInRBF(tx);\n+\n+    CCoinsView coins_view;\n+    const CCoinsViewCache coins_view_cache(&coins_view);\n+    (void)AreInputsStandard(tx, coins_view_cache);\n+    (void)IsWitnessStandard(tx, coins_view_cache);\n+\n+    UniValue u(UniValue::VOBJ);\n+    TxToUniv(tx, /* hashBlock */ {}, u);",
    "path": "src/test/fuzz/transaction.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "4813d41447e1c96d93372855e79d67849ade0d36",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\ncore_write.cpp:21:29: runtime error: negation of -9223372036854775808 cannot be represented in type 'CAmount' (aka 'long'); cast to an unsigned type to negate this value to itself\r\n\r\n    #0 0x5603b409bffb in ValueFromAmount(long const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/core_write.cpp:21:29\r\n\r\n    #1 0x5603b40a7304 in TxToUniv(CTransaction const&, uint256 const&, UniValue&, bool, int) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/core_write.cpp:220:29\r\n\r\n    #2 0x5603b3fcb99e in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction.cpp:102:5\r\n\r\n    #3 0x5603b3fbf42a in LLVMFuzzerTestOneInput /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz.cpp:38:5\r\n\r\n    #4 0x5603b3ec510a in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f5510a)\r\n\r\n    #5 0x5603b3ec4905 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f54905)\r\n\r\n    #6 0x5603b3ec73ce in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f573ce)\r\n\r\n    #7 0x5603b3ec7965 in fuzzer::Fuzzer::Loop(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f57965)\r\n\r\n    #8 0x5603b3eba420 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f4a420)\r\n\r\n    #9 0x5603b3ee1342 in main (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f71342)\r\n\r\n    #10 0x7ff8c3d4cb96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\r\n\r\n    #11 0x5603b3eb2e29 in _start (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/transaction+0x1f42e29)",
    "created_at": "2020-03-07T14:19:43Z",
    "updated_at": "2020-03-07T14:36:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389257830",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389257830"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389257830"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389257830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389258961",
    "pull_request_review_id": 370747224,
    "id": 389258961,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1ODk2MQ==",
    "diff_hunk": "@@ -85,4 +92,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)IsStandardTx(tx, reason);\n     (void)RecursiveDynamicUsage(tx);\n     (void)SignalsOptInRBF(tx);\n+\n+    CCoinsView coins_view;\n+    const CCoinsViewCache coins_view_cache(&coins_view);\n+    (void)AreInputsStandard(tx, coins_view_cache);\n+    (void)IsWitnessStandard(tx, coins_view_cache);\n+\n+    UniValue u(UniValue::VOBJ);\n+    TxToUniv(tx, /* hashBlock */ {}, u);",
    "path": "src/test/fuzz/transaction.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "4813d41447e1c96d93372855e79d67849ade0d36",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. Now fixed. Happened to rebase on `master` too -- blaming muscle memory :)",
    "created_at": "2020-03-07T14:37:58Z",
    "updated_at": "2020-03-07T14:37:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389258961",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389258961"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389258961"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389258961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT",
    "in_reply_to_id": 389257830
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389262151",
    "pull_request_review_id": 370749626,
    "id": 389262151,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjE1MQ==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);",
    "path": "src/test/fuzz/script.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could also assert the roundtrip `decompressed == script`?",
    "created_at": "2020-03-07T15:29:26Z",
    "updated_at": "2020-03-07T15:35:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389262151",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389262151"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389262151"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389262151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389262172",
    "pull_request_review_id": 370749626,
    "id": 389262172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjE3Mg==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);\n+    }\n+\n+    for (unsigned int size = 0; size < 6; ++size) {\n+        std::vector<unsigned char> vch(GetSpecialScriptSize(size), 0x00);\n+        vch.insert(vch.end(), buffer.begin(), buffer.end());\n+        CScript decompressed_script;\n+        (void)DecompressScript(decompressed_script, size, vch);\n+    }",
    "path": "src/test/fuzz/script.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Looks like you accidentally added a unit test here? This does not depend on any fuzz input.",
    "created_at": "2020-03-07T15:29:52Z",
    "updated_at": "2020-03-07T15:35:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389262172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389262172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389262172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389262172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389263340",
    "pull_request_review_id": 370750493,
    "id": 389263340,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MzM0MA==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);\n+    }\n+\n+    for (unsigned int size = 0; size < 6; ++size) {\n+        std::vector<unsigned char> vch(GetSpecialScriptSize(size), 0x00);\n+        vch.insert(vch.end(), buffer.begin(), buffer.end());\n+        CScript decompressed_script;\n+        (void)DecompressScript(decompressed_script, size, vch);\n+    }",
    "path": "src/test/fuzz/script.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@MarcoFalke Are you sure about that? `vch` is built from `buffer` which is built from fuzz input, no? :)",
    "created_at": "2020-03-07T15:46:40Z",
    "updated_at": "2020-03-07T15:46:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389263340",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389263340"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389263340"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389263340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 389262172
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389264128",
    "pull_request_review_id": 370751072,
    "id": 389264128,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2NDEyOA==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);",
    "path": "src/test/fuzz/script.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm afraid not since that assertion is not guaranteed to hold :)\r\n\r\nCounter-example:\r\n\r\n```\r\n$ xxd -p -r <<< \"210220acacacffff6010b472a266d0bd89c13706a4132ccfb16f7c3b9fcbacacacacac\" > counter-example\r\n$ src/test/fuzz/script counter-example\r\n\u2026\r\nscript: test/fuzz/script.cpp:40: void test_one_input(const std::vector<uint8_t> &): Assertion `script == decompressed_script' failed.\r\n\u2026\r\n```",
    "created_at": "2020-03-07T15:58:51Z",
    "updated_at": "2020-03-07T15:58:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389264128",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389264128"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389264128"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389264128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT",
    "in_reply_to_id": 389262151
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389315249",
    "pull_request_review_id": 370791308,
    "id": 389315249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNTI0OQ==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);",
    "path": "src/test/fuzz/script.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am pretty sure that if it was not guaranteed to hold, we would be running into consensus failures pretty soon. Please take a look at #18292 ",
    "created_at": "2020-03-07T22:00:00Z",
    "updated_at": "2020-03-07T22:00:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389315249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389315249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389315249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389315249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT",
    "in_reply_to_id": 389262151
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389315385",
    "pull_request_review_id": 370791379,
    "id": 389315385,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNTM4NQ==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);\n+    }\n+\n+    for (unsigned int size = 0; size < 6; ++size) {\n+        std::vector<unsigned char> vch(GetSpecialScriptSize(size), 0x00);\n+        vch.insert(vch.end(), buffer.begin(), buffer.end());\n+        CScript decompressed_script;\n+        (void)DecompressScript(decompressed_script, size, vch);\n+    }",
    "path": "src/test/fuzz/script.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`buffer` is only *appened* to `vch`, but pratically never read. Only the beginning of `vch` (20 or 32 bytes) are read, and they are all constant (zero). So this does never read any fuzz input, except for copying into the vector.\r\n\r\nI suggest to remove this for loop and content.",
    "created_at": "2020-03-07T22:01:56Z",
    "updated_at": "2020-03-07T22:01:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389315385",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389315385"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389315385"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389315385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 389262172
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389320820",
    "pull_request_review_id": 370795075,
    "id": 389320820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyMDgyMA==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);",
    "path": "src/test/fuzz/script.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With #18292 it all makes sense. Thanks!",
    "created_at": "2020-03-07T23:44:45Z",
    "updated_at": "2020-03-07T23:44:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389320820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389320820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389320820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389320820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT",
    "in_reply_to_id": 389262151
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389760804",
    "pull_request_review_id": 371276168,
    "id": 389760804,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc2MDgwNA==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);\n+    }\n+\n+    for (unsigned int size = 0; size < 6; ++size) {\n+        std::vector<unsigned char> vch(GetSpecialScriptSize(size), 0x00);\n+        vch.insert(vch.end(), buffer.begin(), buffer.end());\n+        CScript decompressed_script;\n+        (void)DecompressScript(decompressed_script, size, vch);\n+    }",
    "path": "src/test/fuzz/script.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ping @practicalswift ",
    "created_at": "2020-03-09T15:19:45Z",
    "updated_at": "2020-03-09T15:19:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389760804",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389760804"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389760804"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389760804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 389262172
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389764032",
    "pull_request_review_id": 371280329,
    "id": 389764032,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc2NDAzMg==",
    "diff_hunk": "@@ -15,20 +15,36 @@\n #include <script/standard.h>\n #include <streams.h>\n #include <test/fuzz/fuzz.h>\n+#include <univalue.h>\n #include <util/memory.h>\n \n void initialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+\n+    SelectParams(CBaseChainParams::REGTEST);\n }\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     const CScript script(buffer.begin(), buffer.end());\n \n     std::vector<unsigned char> compressed;\n-    (void)CompressScript(script, compressed);\n+    if (CompressScript(script, compressed)) {\n+        const unsigned int size = compressed[0];\n+        assert(size >= 0 && size <= 5);\n+        CScript decompressed_script;\n+        const bool ok = DecompressScript(decompressed_script, size, compressed);\n+        assert(ok);\n+    }\n+\n+    for (unsigned int size = 0; size < 6; ++size) {\n+        std::vector<unsigned char> vch(GetSpecialScriptSize(size), 0x00);\n+        vch.insert(vch.end(), buffer.begin(), buffer.end());\n+        CScript decompressed_script;\n+        (void)DecompressScript(decompressed_script, size, vch);\n+    }",
    "path": "src/test/fuzz/script.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "original_commit_id": "52fed696d251dc38211eb2fa7f144b6a989dd479",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'll fix. Thanks for the ping :)",
    "created_at": "2020-03-09T15:24:15Z",
    "updated_at": "2020-03-09T15:24:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389764032",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389764032"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17926#discussion_r389764032"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389764032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 389262172
  }
]