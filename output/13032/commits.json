[
  {
    "sha": "1accfbcf465db19a9482d2ba129a66ded316f46e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWNjZmJjZjQ2NWRiMTlhOTQ4MmQyYmExMjlhNjZkZWQzMTZmNDZl",
    "commit": {
      "author": {
        "name": "Kristaps Kaupe",
        "email": "kristaps@blogiem.lv",
        "date": "2018-04-19T23:47:13Z"
      },
      "committer": {
        "name": "Kristaps Kaupe",
        "email": "kristaps@blogiem.lv",
        "date": "2018-04-19T23:47:13Z"
      },
      "message": "Output values for \"min relay fee not met\" error",
      "tree": {
        "sha": "21bf44804ddc14562cc177a4a42a09670e8408f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21bf44804ddc14562cc177a4a42a09670e8408f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1accfbcf465db19a9482d2ba129a66ded316f46e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1accfbcf465db19a9482d2ba129a66ded316f46e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1accfbcf465db19a9482d2ba129a66ded316f46e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1accfbcf465db19a9482d2ba129a66ded316f46e/comments",
    "author": {
      "login": "kristapsk",
      "id": 4500994,
      "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kristapsk",
      "html_url": "https://github.com/kristapsk",
      "followers_url": "https://api.github.com/users/kristapsk/followers",
      "following_url": "https://api.github.com/users/kristapsk/following{/other_user}",
      "gists_url": "https://api.github.com/users/kristapsk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
      "organizations_url": "https://api.github.com/users/kristapsk/orgs",
      "repos_url": "https://api.github.com/users/kristapsk/repos",
      "events_url": "https://api.github.com/users/kristapsk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kristapsk/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kristapsk",
      "id": 4500994,
      "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kristapsk",
      "html_url": "https://github.com/kristapsk",
      "followers_url": "https://api.github.com/users/kristapsk/followers",
      "following_url": "https://api.github.com/users/kristapsk/following{/other_user}",
      "gists_url": "https://api.github.com/users/kristapsk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
      "organizations_url": "https://api.github.com/users/kristapsk/orgs",
      "repos_url": "https://api.github.com/users/kristapsk/repos",
      "events_url": "https://api.github.com/users/kristapsk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kristapsk/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a8b7b4b33c9d78574627fc606267e2d8955cd1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a8b7b4b33c9d78574627fc606267e2d8955cd1c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a8b7b4b33c9d78574627fc606267e2d8955cd1c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0ad61ca7299a2d960fd720742ec26dc8d0f77e7a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1accfbcf465db19a9482d2ba129a66ded316f46e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1accfbcf465db19a9482d2ba129a66ded316f46e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1accfbcf465db19a9482d2ba129a66ded316f46e",
        "patch": "@@ -720,7 +720,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n         // No transactions are allowed below minRelayTxFee except from disconnected blocks\n         if (!bypass_limits && nModifiedFees < ::minRelayTxFee.GetFee(nSize)) {\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\");\n+            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\", false, strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n         }\n \n         if (nAbsurdFee && nFees > nAbsurdFee)"
      },
      {
        "sha": "b433f11aa50810809effa16df5b9e8a29c4ce613",
        "filename": "test/functional/mining_prioritisetransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1accfbcf465db19a9482d2ba129a66ded316f46e/test/functional/mining_prioritisetransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1accfbcf465db19a9482d2ba129a66ded316f46e/test/functional/mining_prioritisetransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_prioritisetransaction.py?ref=1accfbcf465db19a9482d2ba129a66ded316f46e",
        "patch": "@@ -120,7 +120,7 @@ def run_test(self):\n         tx_id = self.nodes[0].decoderawtransaction(tx_hex)[\"txid\"]\n \n         # This will raise an exception due to min relay fee not being met\n-        assert_raises_rpc_error(-26, \"min relay fee not met (code 66)\", self.nodes[0].sendrawtransaction, tx_hex)\n+        assert_raises_rpc_error(-26, \"min relay fee not met, 0 < 134 (code 66)\", self.nodes[0].sendrawtransaction, tx_hex)\n         assert(tx_id not in self.nodes[0].getrawmempool())\n \n         # This is a less than 1000-byte transaction, so just set the fee"
      }
    ]
  }
]