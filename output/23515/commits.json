[
  {
    "sha": "fa62207737657e76ba45d5bf826fc0ccac658df6",
    "node_id": "C_kwDOABII59oAKGZhNjIyMDc3Mzc2NTdlNzZiYTQ1ZDViZjgyNmZjMGNjYWM2NThkZjY",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-15T12:19:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-15T12:10:37Z"
      },
      "message": "test: Return the largest utxo in MiniWallet.get_utxo",
      "tree": {
        "sha": "3c1bcfd1d7f5e9cd597dc1ffedffad05c582b6fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c1bcfd1d7f5e9cd597dc1ffedffad05c582b6fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa62207737657e76ba45d5bf826fc0ccac658df6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg11Qv/QQP4Yo43nNTCfJS09/JA9WgM03bXNjhYJK2yLu4hJkWU9QpDcTSCBQpt\nAuh6X+DNBkxHrjB4UPfL0yBe28QCQ24fY0pgq414OHOCd+MEk7BcAvkgjbO0QzOk\nR0/NqHF5A/iLgsjJku0MjH48PfflVEBMyuatHfi4r3dRsjtLkM3224T56+92varb\n4v/jJS/bcncOxOhlkLfZfwa54TVDJ8FzAvuM1cowToIgN+QQ9ytS/xu7Np+hwwG0\nIZ6B460b+1SjMpkNqIhe/XF8dBLdfGfUB4IP7xk4Sdd2+WpTNVqwGd3hyseo9pvk\nobcQQUuUErG0b2WmURYuI9ENiNaVAs9O3x4VM4ivUqx+Hr3vcAfbOg/dVjcRDMHD\ndowgE3+6N20RGUZkTD0w4vsyffDanHDq31cRkJnURhAeavhPmHhd4nOnI5yHjXhi\norSiwYn4bNfeq7BsvTZCASMTXVCeqUsHhjESbT3N5Mj9ysvAPcDIj6RBQhwbx799\nEYVpRKvm\n=sPWB\n-----END PGP SIGNATURE-----",
        "payload": "tree 3c1bcfd1d7f5e9cd597dc1ffedffad05c582b6fe\nparent 41a1b5f58ca59d2177dcadf834efd187fa3fba52\nauthor MarcoFalke <falke.marco@gmail.com> 1636978798 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1636978237 +0100\n\ntest: Return the largest utxo in MiniWallet.get_utxo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa62207737657e76ba45d5bf826fc0ccac658df6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa62207737657e76ba45d5bf826fc0ccac658df6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa62207737657e76ba45d5bf826fc0ccac658df6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41a1b5f58ca59d2177dcadf834efd187fa3fba52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41a1b5f58ca59d2177dcadf834efd187fa3fba52",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41a1b5f58ca59d2177dcadf834efd187fa3fba52"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2aa3301b89f52b289db84b72610f57bde0ef6c77",
        "filename": "test/functional/rpc_txoutproof.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa62207737657e76ba45d5bf826fc0ccac658df6/test/functional/rpc_txoutproof.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa62207737657e76ba45d5bf826fc0ccac658df6/test/functional/rpc_txoutproof.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_txoutproof.py?ref=fa62207737657e76ba45d5bf826fc0ccac658df6",
        "patch": "@@ -53,7 +53,7 @@ def run_test(self):\n         assert_equal(self.nodes[0].verifytxoutproof(self.nodes[0].gettxoutproof([txid1, txid2])), txlist)\n         assert_equal(self.nodes[0].verifytxoutproof(self.nodes[0].gettxoutproof([txid1, txid2], blockhash)), txlist)\n \n-        txin_spent = miniwallet.get_utxo()  # Get the change from txid2\n+        txin_spent = miniwallet.get_utxo(txid=txid2)  # Get the change from txid2\n         tx3 = miniwallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=txin_spent)\n         txid3 = tx3['txid']\n         self.generate(self.nodes[0], 1)"
      },
      {
        "sha": "5f0b573c6ea226e4da02f9fd7fd4643ff36248ea",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa62207737657e76ba45d5bf826fc0ccac658df6/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa62207737657e76ba45d5bf826fc0ccac658df6/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=fa62207737657e76ba45d5bf826fc0ccac658df6",
        "patch": "@@ -133,10 +133,9 @@ def get_utxo(self, *, txid: Optional[str]='', mark_as_spent=True):\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n-\n-        Note: Can be used to get the change output immediately after a send_self_transfer\n         \"\"\"\n         index = -1  # by default the last utxo\n+        self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n         if txid:\n             utxo = next(filter(lambda utxo: txid == utxo['txid'], self._utxos))\n             index = self._utxos.index(utxo)\n@@ -172,8 +171,7 @@ def send_to(self, *, from_node, scriptPubKey, amount, fee=1000):\n \n     def create_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, mempool_valid=True, locktime=0, sequence=0):\n         \"\"\"Create and return a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n-        self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))\n-        utxo_to_spend = utxo_to_spend or self._utxos.pop()  # Pick the largest utxo (if none provided) and hope it covers the fee\n+        utxo_to_spend = utxo_to_spend or self.get_utxo()\n         if self._priv_key is None:\n             vsize = Decimal(104)  # anyone-can-spend\n         else:"
      }
    ]
  }
]