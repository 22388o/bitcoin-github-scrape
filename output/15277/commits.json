[
  {
    "sha": "3e80ec3ea9691c7c89173de922a113e643fe976b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTgwZWMzZWE5NjkxYzdjODkxNzNkZTkyMmExMTNlNjQzZmU5NzZi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T04:28:29Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T04:48:39Z"
      },
      "message": "contrib: Add deterministic Guix builds.",
      "tree": {
        "sha": "43471d987257b5b4dbd487f59cab197273c9ea42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43471d987257b5b4dbd487f59cab197273c9ea42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e80ec3ea9691c7c89173de922a113e643fe976b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0oESkACgkQDMUhUxl5\nkaVNkxAAvc8svZdz96FER2/svvUllpZ/zVhBMcfmBh7B/ABAqA2B0cczMukz63aD\nlwzM6ek7P1YL8bjIgBtaxa3shEHs2lDzChThVd1LM0REhdD8mQZ4w3lWk3EoTeS8\njKadwwjJot7AB8SAv0K4CDnNxHd3mYzU3VrzGG2cMtlQG6QMT17HipMOWVExh6ad\nclCF2YwFOMPWP0OuPrm3ohQeA4EphLMiOYNq12woqm7cWlaI4GgJg6SPJ5uYnhIt\nMC9pCRDV+V7XcPnnQk4zdlvOYXh6gdEuYpsMvuieM2rIjFZJjVvslfpwVnojSTyP\n5XwwS7wJSFdFm4R8c5yProdhgCmMBT1HxiCkpjS9qJkaCapDLsSNSzH8RuvLp6MZ\nXC1eF5YR8DQv/I32Ja38RWWRG0giP58nsYyhqo2WkmOnSNAvvNuaDOXDcvFPQdJh\nshyO9SCBrAwmy7CBdTQTC9UtoOGTZCUEq8X2bS8wE8HmD66W/fT5BDBdulwxQFX4\nM+NzVZjIyQJgQS00N6bcGXo0u7wZQ7JwzuygllhW4kHZE21wCUAaSzy7p4mC8DJ5\ntI/vqjjErAjYUDmYSc2t6nBcda/h7dXSuVm4oqMgPLCvyEsf2Hj70dWWFJiwj0A9\nOFF3xAprTX40IqLxjP5eBVHCp1oXZBpCmyluxOcRJfx9GkWjLoc=\n=Fmj2\n-----END PGP SIGNATURE-----",
        "payload": "tree 43471d987257b5b4dbd487f59cab197273c9ea42\nparent 735d6b57e795503d4ce7354225b599ce97e236b8\nauthor Carl Dong <contact@carldong.me> 1562905709 -0400\ncommitter Carl Dong <contact@carldong.me> 1562906919 -0400\n\ncontrib: Add deterministic Guix builds.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e80ec3ea9691c7c89173de922a113e643fe976b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e80ec3ea9691c7c89173de922a113e643fe976b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e80ec3ea9691c7c89173de922a113e643fe976b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "735d6b57e795503d4ce7354225b599ce97e236b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/735d6b57e795503d4ce7354225b599ce97e236b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/735d6b57e795503d4ce7354225b599ce97e236b8"
      }
    ],
    "stats": {
      "total": 605,
      "additions": 604,
      "deletions": 1
    },
    "files": [
      {
        "sha": "383c623b2ccd2c70964a70fddf8edb322de4723c",
        "filename": "contrib/guix/README.md",
        "status": "added",
        "additions": 202,
        "deletions": 0,
        "changes": 202,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=3e80ec3ea9691c7c89173de922a113e643fe976b",
        "patch": "@@ -0,0 +1,202 @@\n+# Bootstrappable Bitcoin Core Builds\n+\n+This directory contains the files necessary to perform bootstrappable Bitcoin\n+Core builds.\n+\n+[Bootstrappability][b17e] furthers our binary security guarantees by allowing us\n+to _audit and reproduce_ our toolchain instead of blindly _trusting_ binary\n+downloads.\n+\n+We achieve bootstrappability by using Guix as a functional package manager.\n+\n+## Requirements\n+\n+Conservatively, a x86_64 machine with:\n+\n+- 2 or more logical cores\n+- 4GB of free disk space on the partition that /gnu/store will reside in\n+- 24GB of free disk space on the partition that the bitcoin repository resides in\n+\n+> Note: these requirements are slightly less onerous than those of Gitian builds\n+\n+## Setup\n+\n+**If you're just testing this out, you can use the\n+[Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n+your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n+Should you choose to use the Dockerfile, you can skip this section.**\n+\n+Otherwise, follow the [Guix installation guide][guix/bin-install].\n+\n+> Note: For those who like to keep their filesystems clean, Guix is designed to\n+> be very standalone and _will not_ conflict with your system's package\n+> manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n+> `~/.config/guix`.\n+\n+After installation, you may want to consider [adding substitute\n+servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n+that fits your security model. (skippable if you're using the\n+[Dockerfile][fanquake/guix-docker])\n+\n+Once Guix is installed, deploy our patched version into your current Guix\n+profile. The changes there are slowly being upstreamed.\n+\n+```sh\n+guix pull --url=https://github.com/dongcarl/guix.git \\\n+          --branch=2019-05-bitcoin-staging \\\n+          --max-jobs=4 # change accordingly\n+```\n+\n+Make sure that you are using your current profile. (You are prompted to do this\n+at the end of the `guix pull`)\n+\n+```bash\n+export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n+```\n+\n+> Note: There is ongoing work to eliminate this `guix pull` step using Guix\n+> [inferiors][guix/inferiors] and [channels][guix/channels].\n+\n+## Usage\n+\n+### As a Development Environment\n+\n+For a Bitcoin Core depends development environment, simply invoke\n+\n+```sh\n+guix environment --manifest=contrib/guix/manifest.scm\n+```\n+\n+And you'll land back in your shell with all the build dependencies required for\n+a `depends` build injected into your environment.\n+\n+### As a Tool for Deterministic Builds\n+\n+From the top of a clean Bitcoin Core repository:\n+\n+```sh\n+./contrib/guix/guix-build.sh\n+```\n+\n+After the build finishes successfully (check the status code please), compare\n+hashes:\n+\n+```sh\n+find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n+```\n+\n+#### Recognized environment variables\n+\n+* _**HOSTS**_\n+\n+  Override the space-separated list of platform triples for which to perform a\n+  bootstrappable build. _(defaults to \"i686-linux-gnu x86\\_64-linux-gnu\n+  arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n+\n+  > Windows and OS X platform triplet support are WIP.\n+\n+* _**SOURCES_PATH**_\n+\n+  Set the depends tree download cache for sources. This is passed through to the\n+  depends tree. Setting this to the same directory across multiple builds of the\n+  depends tree can eliminate unnecessary redownloading of package sources.\n+\n+* _**MAX_JOBS**_\n+\n+  Override the maximum number of jobs to run simultaneously, you might want to\n+  do so on a memory-limited machine. This may be passed to `make` as in `make\n+  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n+  value of `nproc` outside the container)_\n+\n+* _**SOURCE_DATE_EPOCH**_\n+\n+  Override the reference timestamp used for bit-for-bit reproducibility, the\n+  variable name conforms to [standard][r12e/source-date-epoch]. _(defaults to\n+  the output of `$(git log --format=%at -1)`)_\n+\n+* _**V**_\n+\n+  If non-empty, will pass `V=1` to all `make` invocations, making `make` output\n+  verbose.\n+\n+* _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n+\n+  Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n+  build, set this to `--bootstrap --no-substitutes`. Note that a\n+  fully-bootstrapped build will take quite a long time on the first run.\n+\n+## Tips and Tricks\n+\n+### Speeding up builds with substitute servers\n+\n+_This whole section is automatically done in the convenience\n+[Dockerfiles][fanquake/guix-docker]_\n+\n+For those who are used to life in the fast _(and trustful)_ lane, you can use\n+[substitute servers][guix/substitutes] to enable binary downloads of packages.\n+\n+> For those who only want to use substitutes from the official Guix build farm\n+> and have authorized the build farm's signing key during Guix's installation,\n+> you don't need to do anything.\n+\n+#### Authorize the signing keys\n+\n+For the official Guix build farm at https://ci.guix.gnu.org, run as root:\n+\n+```\n+guix archive --authorize < ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub\n+```\n+\n+For dongcarl's substitute server at https://guix.carldong.io, run as root:\n+\n+```sh\n+wget -qO- 'https://guix.carldong.io/signing-key.pub' | guix archive --authorize\n+```\n+\n+#### Use the substitute servers\n+\n+The official Guix build farm at https://ci.guix.gnu.org is automatically used\n+unless the `--no-substitutes` flag is supplied.\n+\n+This can be overridden for all `guix` invocations by passing the\n+`--substitute-urls` option to your invocation of `guix-daemon`. This can also be\n+overridden on a call-by-call basis by passing the same `--substitute-urls`\n+option to client tools such at `guix environment`.\n+\n+To use dongcarl's substitute server for Bitcoin Core builds after having\n+[authorized his signing key](#authorize-the-signing-keys):\n+\n+```\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--substitute-urls=\"https://guix.carldong.io https://ci.guix.gnu.org\"'\n+```\n+\n+## FAQ\n+\n+### How can I trust the binary installation?\n+\n+As mentioned at the bottom of [this manual page][guix/bin-install]:\n+\n+> The binary installation tarballs can be (re)produced and verified simply by\n+> running the following command in the Guix source tree:\n+>\n+>     make guix-binary.x86_64-linux.tar.xz\n+\n+### When will Guix be packaged in debian?\n+\n+Vagrant Cascadian has been making good progress on this\n+[here][debian/guix-package]. We have all the pieces needed to put up an APT\n+repository and will likely put one up soon.\n+\n+[b17e]: http://bootstrappable.org/\n+[r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n+\n+[guix/install.sh]: https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n+[guix/bin-install]: https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html\n+[guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n+[guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n+[guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n+[guix/inferiors]: https://www.gnu.org/software/guix/manual/en/html_node/Inferiors.html\n+[guix/channels]: https://www.gnu.org/software/guix/manual/en/html_node/Channels.html\n+\n+[debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n+[fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "6ca4d45acfe432125f2476da691e8773c8d3c624",
        "filename": "contrib/guix/guix-build.sh",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=3e80ec3ea9691c7c89173de922a113e643fe976b",
        "patch": "@@ -0,0 +1,39 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Determine the maximum number of jobs to run simultaneously (overridable by\n+# environment)\n+MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n+\n+# Download the depends sources now as we won't have internet access in the build\n+# container\n+make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n+\n+# Determine the reference time used for determinism (overridable by environment)\n+SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n+\n+# Deterministically build Bitcoin Core for HOSTs (overriable by environment)\n+for host in ${HOSTS=i686-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu}; do\n+\n+    # Display proper warning when the user interrupts the build\n+    trap 'echo \"** INT received while building ${host}, you may want to clean up the relevant output and distsrc-* directories before rebuilding\"' INT\n+\n+    # Run the build script 'contrib/guix/build.sh' in the build container\n+    # specified by 'contrib/guix/manifest.scm'\n+    # shellcheck disable=SC2086\n+    guix environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                     --container \\\n+                     --pure \\\n+                     --no-cwd \\\n+                     --share=\"$PWD\"=/bitcoin \\\n+                     ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                     ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                     -- env HOST=\"$host\" \\\n+                            MAX_JOBS=\"$MAX_JOBS\" \\\n+                            SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                            ${V:+V=1} \\\n+                            ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                          bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+\n+done"
      },
      {
        "sha": "56b972a5cbbb8a14a65f624339bd51085d311814",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "added",
        "additions": 206,
        "deletions": 0,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=3e80ec3ea9691c7c89173de922a113e643fe976b",
        "patch": "@@ -0,0 +1,206 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Check that environment variables assumed to be set by the environment are set\n+echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n+echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n+\n+#####################\n+# Environment Setup #\n+#####################\n+\n+# The depends folder also serves as a base-prefix for depends packages for\n+# $HOSTs after successfully building.\n+BASEPREFIX=\"${PWD}/depends\"\n+\n+# Setup an output directory for our build\n+OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n+[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n+\n+# Setup the directory where our Bitcoin Core build for HOST will occur\n+DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n+if [ -e \"$DISTSRC\" ]; then\n+    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n+    exit 1\n+else\n+    mkdir -p \"$DISTSRC\"\n+fi\n+\n+# Given a package name and an output name, return the path of that output in our\n+# current guix environment\n+store_path() {\n+    grep --extended-regexp \"/[^-]{32}-${1}-cross-${HOST}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+        | head --lines=1 \\\n+        | sed --expression='s|^[[:space:]]*\"||' \\\n+              --expression='s|\"[[:space:]]*$||'\n+}\n+\n+# Determine output paths to use in CROSS_* environment variables\n+CROSS_GLIBC=\"$(store_path glibc)\"\n+CROSS_GLIBC_STATIC=\"$(store_path glibc static)\"\n+CROSS_KERNEL=\"$(store_path linux-libre-headers)\"\n+CROSS_GCC=\"$(store_path gcc)\"\n+\n+# Set environment variables to point Guix's cross-toolchain to the right\n+# includes/libs for $HOST\n+export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+export CROSS_LIBRARY_PATH=\"${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib:${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_KERNEL}/lib\"\n+\n+# Disable Guix ld auto-rpath behavior\n+export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n+\n+# Make /usr/bin if it doesn't exist\n+[ -e /usr/bin ] || mkdir -p /usr/bin\n+\n+# Symlink file and env to a conventional path\n+[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n+[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n+\n+# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n+glibc_dynamic_linker=$(\n+    case \"$HOST\" in\n+        i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n+        x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n+        arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n+        aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n+        riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+        *)                   exit 1 ;;\n+    esac\n+)\n+\n+# Environment variables for determinism\n+export QT_RCC_TEST=1\n+export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n+export TZ=\"UTC\"\n+\n+####################\n+# Depends Building #\n+####################\n+\n+# Build the depends tree, overriding variables that assume multilib gcc\n+make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n+                                   ${V:+V=1} \\\n+                                   ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                   i686_linux_CC=i686-linux-gnu-gcc \\\n+                                   i686_linux_CXX=i686-linux-gnu-g++ \\\n+                                   i686_linux_AR=i686-linux-gnu-ar \\\n+                                   i686_linux_RANLIB=i686-linux-gnu-ranlib \\\n+                                   i686_linux_NM=i686-linux-gnu-nm \\\n+                                   i686_linux_STRIP=i686-linux-gnu-strip \\\n+                                   x86_64_linux_CC=x86_64-linux-gnu-gcc \\\n+                                   x86_64_linux_CXX=x86_64-linux-gnu-g++ \\\n+                                   x86_64_linux_AR=x86_64-linux-gnu-ar \\\n+                                   x86_64_linux_RANLIB=x86_64-linux-gnu-ranlib \\\n+                                   x86_64_linux_NM=x86_64-linux-gnu-nm \\\n+                                   x86_64_linux_STRIP=x86_64-linux-gnu-strip \\\n+                                   qt_config_opts_i686_linux='-platform linux-g++ -xplatform bitcoin-linux-g++'\n+\n+\n+###########################\n+# Source Tarball Building #\n+###########################\n+\n+# Create the source tarball and move it to \"${OUTDIR}/src\" if not already there\n+if [ -z \"$(find \"${OUTDIR}/src\" -name 'bitcoin-*.tar.gz')\" ]; then\n+    ./autogen.sh\n+    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" ./configure --prefix=/\n+    make dist GZIP_ENV='-9n' ${V:+V=1}\n+    mkdir -p \"${OUTDIR}/src\"\n+    mv \"$(find \"${PWD}\" -name 'bitcoin-*.tar.gz')\" \"${OUTDIR}/src/\"\n+fi\n+\n+# Determine the full path to our source tarball\n+SOURCEDIST=\"$(find \"${OUTDIR}/src\" -name 'bitcoin-*.tar.gz')\"\n+# Determine our distribution name (e.g. bitcoin-0.18.0)\n+DISTNAME=\"$(basename \"$SOURCEDIST\" '.tar.gz')\"\n+\n+###########################\n+# Binary Tarball Building #\n+###########################\n+\n+# Create a spec file to normalize ssp linking behaviour\n+spec_file=\"$(mktemp)\"\n+cat << EOF > \"$spec_file\"\n+*link_ssp:\n+%{fstack-protector|fstack-protector-all|fstack-protector-strong|fstack-protector-explicit:}\n+EOF\n+\n+# Similar flags to Gitian\n+CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+HOST_CFLAGS=\"-O2 -g -specs=${spec_file} -ffile-prefix-map=${PWD}=.\"\n+HOST_CXXFLAGS=\"-O2 -g -specs=${spec_file} -ffile-prefix-map=${PWD}=.\"\n+HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++\"\n+\n+# Make $HOST-specific native binaries from depends available in $PATH\n+export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n+(\n+    cd \"$DISTSRC\"\n+\n+    # Extract the source tarball\n+    tar --strip-components=1 -xf \"${SOURCEDIST}\"\n+\n+    # Configure this DISTSRC for $HOST\n+    # shellcheck disable=SC2086\n+    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" \\\n+        ./configure --prefix=/ \\\n+                    --disable-ccache \\\n+                    --disable-maintainer-mode \\\n+                    --disable-dependency-tracking \\\n+                    ${CONFIGFLAGS} \\\n+                    CFLAGS=\"${HOST_CFLAGS}\" \\\n+                    CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n+                    LDFLAGS=\"${HOST_LDFLAGS}\"\n+\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n+\n+    # Build Bitcoin Core\n+    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n+\n+    # Perform basic ELF security checks on a series of executables.\n+    make -C src --jobs=1 check-security ${V:+V=1}\n+    # Check that executables only contain allowed gcc, glibc and libstdc++\n+    # version symbols for Linux distro back-compatibility.\n+    make -C src --jobs=1 check-symbols  ${V:+V=1}\n+\n+    # Setup the directory where our Bitcoin Core build for HOST will be\n+    # installed. This directory will also later serve as the input for our\n+    # binary tarballs.\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p \"${INSTALLPATH}\"\n+    # Install built Bitcoin Core to $INSTALLPATH\n+    make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n+    (\n+        cd installed\n+\n+        # Prune libtool and object archives\n+        find . -name \"lib*.la\" -delete\n+        find . -name \"lib*.a\" -delete\n+\n+        # Prune pkg-config files\n+        rm -r \"${DISTNAME}/lib/pkgconfig\"\n+\n+        # Split binaries and libraries from their debug symbols\n+        {\n+            find \"${DISTNAME}/bin\" -type f -executable -print0\n+            find \"${DISTNAME}/lib\" -type f -print0\n+        } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n+\n+        cp \"${DISTSRC}/doc/README.md\" \"${DISTNAME}/\"\n+\n+        # Finally, deterministically produce {non-,}debug binary tarballs ready\n+        # for release\n+        find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+            | sort --zero-terminated \\\n+            | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+            | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n+            || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n+        find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+            | sort --zero-terminated \\\n+            | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+            | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n+            || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n+    )\n+)"
      },
      {
        "sha": "e661480cd8eeacaf6aa39555c7ec6d2f6b4e9435",
        "filename": "contrib/guix/manifest.scm",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e80ec3ea9691c7c89173de922a113e643fe976b/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=3e80ec3ea9691c7c89173de922a113e643fe976b",
        "patch": "@@ -0,0 +1,155 @@\n+(define-module (bitcoin)\n+  #:use-module (gnu)\n+  #:use-module (gnu packages)\n+  #:use-module (gnu packages autotools)\n+  #:use-module (gnu packages base)\n+  #:use-module (gnu packages bash)\n+  #:use-module (gnu packages check)\n+  #:use-module (gnu packages commencement)\n+  #:use-module (gnu packages compression)\n+  #:use-module (gnu packages cross-base)\n+  #:use-module (gnu packages file)\n+  #:use-module (gnu packages gawk)\n+  #:use-module (gnu packages gcc)\n+  #:use-module (gnu packages linux)\n+  #:use-module (gnu packages perl)\n+  #:use-module (gnu packages pkg-config)\n+  #:use-module (gnu packages python)\n+  #:use-module (gnu packages shells)\n+  #:use-module (guix build-system trivial)\n+  #:use-module (guix gexp)\n+  #:use-module (guix packages)\n+  #:use-module (guix profiles)\n+  #:use-module (guix utils))\n+\n+(define (make-ssp-fixed-gcc xgcc)\n+  \"Given a XGCC package, return a modified package that uses the SSP function\n+from glibc instead of from libssp.so. Taken from:\n+http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:make-flags flags)\n+       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n+\n+(define (make-gcc-rpath-link xgcc)\n+  \"Given a XGCC package, return a modified package that replace each instance of\n+-rpath in the default system spec that's inserted by Guix with -rpath-link\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:phases phases)\n+       `(modify-phases ,phases\n+          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n+            (lambda _\n+              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n+                                 (find-files \"gcc/config\"\n+                                             \"^gnu-user.*\\\\.h$\"))\n+                ((\"-rpath=\") \"-rpath-link=\"))\n+              #t))))))))\n+\n+(define (make-cross-toolchain target\n+                              base-gcc-for-libc\n+                              base-kernel-headers\n+                              base-libc\n+                              base-gcc)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         ;; 1. Build a cross-compiling gcc without targeting any libc, derived\n+         ;; from BASE-GCC-FOR-LIBC\n+         (xgcc-sans-libc (cross-gcc target\n+                                    #:xgcc base-gcc-for-libc\n+                                    #:xbinutils xbinutils))\n+         ;; 2. Build cross-compiled kernel headers with XGCC-SANS-LIBC, derived\n+         ;; from BASE-KERNEL-HEADERS\n+         (xkernel (cross-kernel-headers target\n+                                        base-kernel-headers\n+                                        xgcc-sans-libc\n+                                        xbinutils))\n+         ;; 3. Build a cross-compiled libc with XGCC-SANS-LIBC and XKERNEL,\n+         ;; derived from BASE-LIBC\n+         (xlibc (cross-libc target\n+                            base-libc\n+                            xgcc-sans-libc\n+                            xbinutils\n+                            xkernel))\n+         ;; 4. Build a cross-compiling gcc targeting XLIBC, derived from\n+         ;; BASE-GCC\n+         (xgcc (cross-gcc target\n+                          #:xgcc base-gcc\n+                          #:xbinutils xbinutils\n+                          #:libc xlibc)))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-toolchain\"))\n+      (version (package-version xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,xlibc)\n+         (\"libc:static\" ,xlibc \"static\")\n+         (\"gcc\" ,xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page xgcc))\n+      (license (package-license xgcc)))))\n+\n+(define* (make-bitcoin-cross-toolchain target\n+                                  #:optional\n+                                  (base-gcc-for-libc gcc-5)\n+                                  (base-kernel-headers linux-libre-headers-4.19)\n+                                  (base-libc glibc-2.27)\n+                                  (base-gcc (make-gcc-rpath-link\n+                                             (make-ssp-fixed-gcc gcc-9))))\n+  \"Convienience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+desirable for building Bitcoin Core release binaries.\"\n+  (make-cross-toolchain target\n+                   base-gcc-for-libc\n+                   base-kernel-headers\n+                   base-libc\n+                   base-gcc))\n+\n+(packages->manifest\n+ (list ;; The Basics\n+       bash\n+       tcsh\n+       which\n+       coreutils\n+       util-linux\n+       ;; File(system) inspection\n+       file\n+       grep\n+       diffutils\n+       findutils\n+       ;; File transformation\n+       patch\n+       gawk\n+       sed\n+       ;; Compression and archiving\n+       tar\n+       bzip2\n+       gzip\n+       xz\n+       zlib\n+       ;; Build tools\n+       gnu-make\n+       libtool\n+       autoconf\n+       automake\n+       pkg-config\n+       ;; Scripting\n+       perl\n+       python\n+       ;; Toolchains\n+       (make-gcc-toolchain gcc-9 glibc-2.27)\n+       (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\" gcc-8)\n+       (make-bitcoin-cross-toolchain \"x86_64-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"i686-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"aarch64-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"arm-linux-gnueabihf\" gcc-6)))"
      },
      {
        "sha": "7c7081eaba324690218efccebeb01002e9388eab",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e80ec3ea9691c7c89173de922a113e643fe976b/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e80ec3ea9691c7c89173de922a113e643fe976b/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=3e80ec3ea9691c7c89173de922a113e643fe976b",
        "patch": "@@ -160,7 +160,8 @@ define $(package)_preprocess_cmds\n   echo \"QMAKE_LINK_OBJECT_SCRIPT = object_script\" >> qtbase/mkspecs/win32-g++/qmake.conf &&\\\n   sed -i.old \"s|QMAKE_CFLAGS            = |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n   sed -i.old \"s|QMAKE_LFLAGS            = |!host_build: QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CXXFLAGS          = |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n+  sed -i.old \"s|QMAKE_CXXFLAGS          = |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s/LIBRARY_PATH/(CROSS_)?\\0/g\" qtbase/mkspecs/features/toolchain.prf\n endef\n \n define $(package)_config_cmds"
      }
    ]
  },
  {
    "sha": "8dff3e48a9e03299468ed3b342642f01f70da9db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGZmM2U0OGE5ZTAzMjk5NDY4ZWQzYjM0MjY0MmYwMWY3MGRhOWRi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T15:42:09Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T15:42:09Z"
      },
      "message": "contrib: guix: Clarify SOURCE_DATE_EPOCH.",
      "tree": {
        "sha": "f8b71ef88ab1480cd8ac212b991823995763e807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8b71ef88ab1480cd8ac212b991823995763e807"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dff3e48a9e03299468ed3b342642f01f70da9db",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0oqmEACgkQDMUhUxl5\nkaWR7A/+NanSTUT4DySt6tdOEnEIxGkO70j+/Pz5q89AFpX1JIrWMcgkg1H7qhXy\nUrDLKCnPfTNJP64W23TeINZ+7ptwRLik0kTcV7n7N0Ffkf0T/fOF4IETJ92iS3/9\nQcP18DiD7l54uZoyvx/1GlIYt8NHtxmTP6KLogb1A5YeHCngQMrlbeqG9Mxzi2Fz\nWOtU1xtIQPkbvfDvRevEUX8jM+ldFe6VM+Xl3STUAr2FbNm7BHwSmYWC+9x4VIeN\n4PoGS0l2GrsECpR6zkGaQZ5Y7VRx8t43nFcdWoQB/1fKlvoa1WRhD3WxvOadjyNL\nFfPu7NxyNjmOtCAglwZRc+0jDo1insLpQ8XRCKsIvzS/wbVivwYjoTpEuBY5VFEI\nhaUNzeAHo4hQUdcosK7l3dDye1oDirh1xKQ8ZQ6gHfDPdwWwHkHeEPIWagspzsPe\nFcpAoVr+fmXSQqGJyPFlQiwfr67OjDUXviFWPAT36cXJpMifpr+pOaFINTz4KA0l\nUKExgA2rdHXxtRcUVnwA8lG98lVgbJcWxUKBqERnp7I6xf3Z97ewuvKrDVtq/6gs\njgO+11yiH7KbkorsiLlNCMa0CelZ3vQQm7bmFAuGrX88KGiiB+Uh8JwMqcJGRtxH\nfnBWdNbutCmcTs/QRMPD4Hl50eKUi3pDJ+0YUhiCpqVwgiFTDww=\n=sApt\n-----END PGP SIGNATURE-----",
        "payload": "tree f8b71ef88ab1480cd8ac212b991823995763e807\nparent 3e80ec3ea9691c7c89173de922a113e643fe976b\nauthor Carl Dong <contact@carldong.me> 1562946129 -0400\ncommitter Carl Dong <contact@carldong.me> 1562946129 -0400\n\ncontrib: guix: Clarify SOURCE_DATE_EPOCH.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dff3e48a9e03299468ed3b342642f01f70da9db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8dff3e48a9e03299468ed3b342642f01f70da9db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dff3e48a9e03299468ed3b342642f01f70da9db/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e80ec3ea9691c7c89173de922a113e643fe976b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e80ec3ea9691c7c89173de922a113e643fe976b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e80ec3ea9691c7c89173de922a113e643fe976b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3e2fc53c8ea8748d16b2ef9bb4fb844c968c550a",
        "filename": "contrib/guix/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dff3e48a9e03299468ed3b342642f01f70da9db/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dff3e48a9e03299468ed3b342642f01f70da9db/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=8dff3e48a9e03299468ed3b342642f01f70da9db",
        "patch": "@@ -110,9 +110,9 @@ find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n \n * _**SOURCE_DATE_EPOCH**_\n \n-  Override the reference timestamp used for bit-for-bit reproducibility, the\n-  variable name conforms to [standard][r12e/source-date-epoch]. _(defaults to\n-  the output of `$(git log --format=%at -1)`)_\n+  Override the reference UNIX timestamp used for bit-for-bit reproducibility,\n+  the variable name conforms to [standard][r12e/source-date-epoch]. _(defaults\n+  to the output of `$(git log --format=%at -1)`)_\n \n * _**V**_\n "
      }
    ]
  },
  {
    "sha": "cd3e947f50db7cfe05c05b368c25742193729a62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDNlOTQ3ZjUwZGI3Y2ZlMDVjMDViMzY4YzI1NzQyMTkzNzI5YTYy",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T15:42:36Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T15:42:36Z"
      },
      "message": "contrib: guix: Various improvements.\n\n- Clearer and more accurate prose\n- Pin `guix pull' to commit rather than branch\n- Just use `use-module' instead of `define-module'\n- Use `bash-minimal' instead of `bash'\n- Remove unneeded `tcsh' from manifest\n- Explicitly use `python-3.7'\n- Add comments about how {native,cross}-toolchains are produced and\n  why",
      "tree": {
        "sha": "831c7bceeaa702cbbb2e6ce094d072637df78d2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/831c7bceeaa702cbbb2e6ce094d072637df78d2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd3e947f50db7cfe05c05b368c25742193729a62",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0oq1YACgkQDMUhUxl5\nkaXgaRAAxlnEwFb5aPYNX0V/yBaP7YdJxcvWJUVUosOB4om7ndlJXCY7wjw/uoDl\nuBGPu2OSCclE+gKCV5NHaEW4MDCL7Pv8v3lOT8YWqjTD4L1rV+LHIkA1jfdO5Vo/\nKKc9yITBlyMFuxCZ0vT2XMW1RxjjqpFEzWdpTmVcV67F6MK49+OWG5KWfBUXDHEt\nf26UPdNovgl0502DRxkI11f6NqbuoiPKmdAAKgwMkeMSsHmzDqSVFHz41HgYzzln\ny6JWbrFUO4gW67AWClPITwSvIAQw9uh3Ljj8uwKRQ6ZD0XXtvDQ3lj5ZdCJyXsHy\nACPeaMV32y7jUW5jd8gsS8Jbf5W7yvFagYHV1Nkiway5Qul9mM8CYyxfAS1CmMIo\nz/+kkR1lxd5pPBJZ5Oaxvh7EpU/a7gp7hBbft6ENlfXPMCMN0B+ezhlVNoCmB78A\nS9gQINkS3S7Wj2POiPTihOJDqQE43P8IREAWx0vFELUlkufCZL/M+huvTkOQuBc5\nCgiplxORI9jESveLr6zdObqP86Y6wd8Ea/UTap8U/upfZgNrWdQ3nAsLUXs1tEMK\ncxbSMLobFYY0kYnSB1NqqenzO9wVZKZteoyOID3qveXa1sHKf4Bx/dN9fg2p2NNY\nzm8Sy3LgB0EbiKA1g6WpQsTkkbLloAZnM9UjOktHZiXWqHWOWVQ=\n=D52x\n-----END PGP SIGNATURE-----",
        "payload": "tree 831c7bceeaa702cbbb2e6ce094d072637df78d2c\nparent 8dff3e48a9e03299468ed3b342642f01f70da9db\nauthor Carl Dong <contact@carldong.me> 1562946156 -0400\ncommitter Carl Dong <contact@carldong.me> 1562946156 -0400\n\ncontrib: guix: Various improvements.\n\n- Clearer and more accurate prose\n- Pin `guix pull' to commit rather than branch\n- Just use `use-module' instead of `define-module'\n- Use `bash-minimal' instead of `bash'\n- Remove unneeded `tcsh' from manifest\n- Explicitly use `python-3.7'\n- Add comments about how {native,cross}-toolchains are produced and\n  why\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd3e947f50db7cfe05c05b368c25742193729a62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd3e947f50db7cfe05c05b368c25742193729a62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd3e947f50db7cfe05c05b368c25742193729a62/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8dff3e48a9e03299468ed3b342642f01f70da9db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dff3e48a9e03299468ed3b342642f01f70da9db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8dff3e48a9e03299468ed3b342642f01f70da9db"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 39,
      "deletions": 35
    },
    "files": [
      {
        "sha": "70edb72f37d6c9c2e96264df20120784d96fc502",
        "filename": "contrib/guix/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd3e947f50db7cfe05c05b368c25742193729a62/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd3e947f50db7cfe05c05b368c25742193729a62/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=cd3e947f50db7cfe05c05b368c25742193729a62",
        "patch": "@@ -15,7 +15,8 @@ Conservatively, a x86_64 machine with:\n \n - 2 or more logical cores\n - 4GB of free disk space on the partition that /gnu/store will reside in\n-- 24GB of free disk space on the partition that the bitcoin repository resides in\n+- 24GB of free disk space on the partition that the Bitcoin Core git repository\n+  resides in\n \n > Note: these requirements are slightly less onerous than those of Gitian builds\n \n@@ -43,7 +44,7 @@ profile. The changes there are slowly being upstreamed.\n \n ```sh\n guix pull --url=https://github.com/dongcarl/guix.git \\\n-          --branch=2019-05-bitcoin-staging \\\n+          --commit=82c77e52b8b46e0a3aad2cb12307c2e30547deec \\\n           --max-jobs=4 # change accordingly\n ```\n "
      },
      {
        "sha": "f8ba8c7ed2ad46277deb1b8d25ad0b2cf2f506a0",
        "filename": "contrib/guix/guix-build.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd3e947f50db7cfe05c05b368c25742193729a62/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd3e947f50db7cfe05c05b368c25742193729a62/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=cd3e947f50db7cfe05c05b368c25742193729a62",
        "patch": "@@ -19,8 +19,8 @@ for host in ${HOSTS=i686-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-\n     # Display proper warning when the user interrupts the build\n     trap 'echo \"** INT received while building ${host}, you may want to clean up the relevant output and distsrc-* directories before rebuilding\"' INT\n \n-    # Run the build script 'contrib/guix/build.sh' in the build container\n-    # specified by 'contrib/guix/manifest.scm'\n+    # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+    # container specified by 'contrib/guix/manifest.scm'\n     # shellcheck disable=SC2086\n     guix environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n                      --container \\"
      },
      {
        "sha": "ca11d7a0f00a21217927398fb955b456169f3296",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 34,
        "deletions": 31,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd3e947f50db7cfe05c05b368c25742193729a62/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd3e947f50db7cfe05c05b368c25742193729a62/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=cd3e947f50db7cfe05c05b368c25742193729a62",
        "patch": "@@ -1,26 +1,25 @@\n-(define-module (bitcoin)\n-  #:use-module (gnu)\n-  #:use-module (gnu packages)\n-  #:use-module (gnu packages autotools)\n-  #:use-module (gnu packages base)\n-  #:use-module (gnu packages bash)\n-  #:use-module (gnu packages check)\n-  #:use-module (gnu packages commencement)\n-  #:use-module (gnu packages compression)\n-  #:use-module (gnu packages cross-base)\n-  #:use-module (gnu packages file)\n-  #:use-module (gnu packages gawk)\n-  #:use-module (gnu packages gcc)\n-  #:use-module (gnu packages linux)\n-  #:use-module (gnu packages perl)\n-  #:use-module (gnu packages pkg-config)\n-  #:use-module (gnu packages python)\n-  #:use-module (gnu packages shells)\n-  #:use-module (guix build-system trivial)\n-  #:use-module (guix gexp)\n-  #:use-module (guix packages)\n-  #:use-module (guix profiles)\n-  #:use-module (guix utils))\n+(use-modules (gnu)\n+             (gnu packages)\n+             (gnu packages autotools)\n+             (gnu packages base)\n+             (gnu packages bash)\n+             (gnu packages check)\n+             (gnu packages commencement)\n+             (gnu packages compression)\n+             (gnu packages cross-base)\n+             (gnu packages file)\n+             (gnu packages gawk)\n+             (gnu packages gcc)\n+             (gnu packages linux)\n+             (gnu packages perl)\n+             (gnu packages pkg-config)\n+             (gnu packages python)\n+             (gnu packages shells)\n+             (guix build-system trivial)\n+             (guix gexp)\n+             (guix packages)\n+             (guix profiles)\n+             (guix utils))\n \n (define (make-ssp-fixed-gcc xgcc)\n   \"Given a XGCC package, return a modified package that uses the SSP function\n@@ -101,7 +100,7 @@ chain for \" target \" development.\"))\n       (license (package-license xgcc)))))\n \n (define* (make-bitcoin-cross-toolchain target\n-                                  #:optional\n+                                  #:key\n                                   (base-gcc-for-libc gcc-5)\n                                   (base-kernel-headers linux-libre-headers-4.19)\n                                   (base-libc glibc-2.27)\n@@ -117,8 +116,7 @@ desirable for building Bitcoin Core release binaries.\"\n \n (packages->manifest\n  (list ;; The Basics\n-       bash\n-       tcsh\n+       bash-minimal\n        which\n        coreutils\n        util-linux\n@@ -145,11 +143,16 @@ desirable for building Bitcoin Core release binaries.\"\n        pkg-config\n        ;; Scripting\n        perl\n-       python\n-       ;; Toolchains\n+       python-3.7\n+       ;; Native gcc 9 toolchain targeting glibc 2.27\n        (make-gcc-toolchain gcc-9 glibc-2.27)\n-       (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\" gcc-8)\n-       (make-bitcoin-cross-toolchain \"x86_64-linux-gnu\")\n+       ;; Cross gcc 9 toolchains targeting glibc 2.27\n        (make-bitcoin-cross-toolchain \"i686-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"x86_64-linux-gnu\")\n        (make-bitcoin-cross-toolchain \"aarch64-linux-gnu\")\n-       (make-bitcoin-cross-toolchain \"arm-linux-gnueabihf\" gcc-6)))\n+       (make-bitcoin-cross-toolchain \"arm-linux-gnueabihf\")\n+       ;; The glibc 2.27 for riscv64 needs gcc 7 to successfully build (see:\n+       ;; https://www.gnu.org/software/gcc/gcc-7/changes.html#riscv). The final\n+       ;; toolchain is still a gcc 9 toolchain targeting glibc 2.27.\n+       (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n+                                     #:base-gcc-for-libc gcc-7)))"
      }
    ]
  },
  {
    "sha": "751549b52a9a4cd27389d807ae67f02bbb39cd7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTE1NDliNTJhOWE0Y2QyNzM4OWQ4MDdhZTY3ZjAyYmJiMzljZDdm",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T16:22:17Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-12T16:31:55Z"
      },
      "message": "contrib: guix: Additional clarifications re: substitutes",
      "tree": {
        "sha": "d22981442779242776184ea764752991312ace69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d22981442779242776184ea764752991312ace69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/751549b52a9a4cd27389d807ae67f02bbb39cd7f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0otf0ACgkQDMUhUxl5\nkaUbPRAAxnlbbZ97stxO/Z8zkY/RYAUih1JK2P9CIt24/hZxEfTPpRlHkQ44TCGW\nptFJlEQQz6naCg89ZucgmfiOwZWWjixyPjaCG5oONsdrmiB0up07T2kqwCEyH40I\nLm9GCtMzlz1mOpSeBqFjlWQrJ0eAkyhjW6lZHDpoZJEHap94mKVw/EsaU+ZupRm9\nec+I9snvilXhVHQYYwid7pUk7TmM+2ocotsQTVT6k3c/qCeGq4gexqoXos5N/RoA\nKKLlKmtxKPUpNVrMSTaAr4v1nzAHv20o4G1ELvq2pDctcWZQGZqv841DjhIgDee0\nv95ozLs4axF2rQtmqbYOlJ3HC7RgpN51gl7zXgKuK3CULFWYvQpT3yelsxNkvRlc\nWQlTRD+yzqpUWR8PrpVFHB9/dFzJM1uCi6nN5GYwKDwHItw0h4WHSgCUDpCORlPR\nY6rDp5FVGSYMSXTnxiw2u53CPwV+mo5THo8Y+8Z8HemDEYc0PuKMvD5hhDCaaRKS\nz3zAm53Rj+sFwsUn8L7ExpJDZznNv+X04/MjbQBM0AbE6e+Q95wtvLej2hVzUKRx\nehwRHjt75LIc/8Iu7wNJnfaucspXbKahwcgFysrCmbbMtFVlIzd6KdMxm9zLLjEX\ntQnUZ5ntJhV2V37TZt6F8tdVc9yerdlthbHM/RdOegOAXwoB7r0=\n=MvYr\n-----END PGP SIGNATURE-----",
        "payload": "tree d22981442779242776184ea764752991312ace69\nparent cd3e947f50db7cfe05c05b368c25742193729a62\nauthor Carl Dong <contact@carldong.me> 1562948537 -0400\ncommitter Carl Dong <contact@carldong.me> 1562949115 -0400\n\ncontrib: guix: Additional clarifications re: substitutes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/751549b52a9a4cd27389d807ae67f02bbb39cd7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/751549b52a9a4cd27389d807ae67f02bbb39cd7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/751549b52a9a4cd27389d807ae67f02bbb39cd7f/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd3e947f50db7cfe05c05b368c25742193729a62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd3e947f50db7cfe05c05b368c25742193729a62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd3e947f50db7cfe05c05b368c25742193729a62"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 32,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4dfa1729a599a1345c460a1ce6160c8c2828062d",
        "filename": "contrib/guix/README.md",
        "status": "modified",
        "additions": 32,
        "deletions": 6,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/751549b52a9a4cd27389d807ae67f02bbb39cd7f/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/751549b52a9a4cd27389d807ae67f02bbb39cd7f/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=751549b52a9a4cd27389d807ae67f02bbb39cd7f",
        "patch": "@@ -22,10 +22,13 @@ Conservatively, a x86_64 machine with:\n \n ## Setup\n \n-**If you're just testing this out, you can use the\n+### Installing Guix\n+\n+If you're just testing this out, you can use the\n [Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n-Should you choose to use the Dockerfile, you can skip this section.**\n+If you don't want this behaviour, refer to the [next\n+section](#choosing-your-security-model).\n \n Otherwise, follow the [Guix installation guide][guix/bin-install].\n \n@@ -34,10 +37,32 @@ Otherwise, follow the [Guix installation guide][guix/bin-install].\n > manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n > `~/.config/guix`.\n \n+### Choosing your security model\n+\n+Guix allows us to achieve better binary security by using our CPU time to build\n+everything from scratch. However, it doesn't sacrifice user choice in pursuit of\n+this: users can decide whether or not to bootstrap and to use substitutes.\n+\n After installation, you may want to consider [adding substitute\n servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n-that fits your security model. (skippable if you're using the\n-[Dockerfile][fanquake/guix-docker])\n+that fits your security model (say, if you're just testing that this works).\n+This is skippable if you're using the [Dockerfile][fanquake/guix-docker].\n+\n+If you prefer not to use any substitutes, make sure to set\n+`ADDITIONAL_GUIX_ENVIRONMENT_FLAGS` like the following snippet. The first build\n+will take a while, but the resulting packages will be cached for future builds.\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--no-substitutes'\n+```\n+\n+Likewise, to perform a bootstrapped build (takes even longer):\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n+```\n+\n+### Using the right Guix\n \n Once Guix is installed, deploy our patched version into your current Guix\n profile. The changes there are slowly being upstreamed.\n@@ -55,7 +80,7 @@ at the end of the `guix pull`)\n export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n ```\n \n-> Note: There is ongoing work to eliminate this `guix pull` step using Guix\n+> Note: There is ongoing work to eliminate this entire section using Guix\n > [inferiors][guix/inferiors] and [channels][guix/channels].\n \n ## Usage\n@@ -123,7 +148,8 @@ find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n * _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n \n   Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n-  build, set this to `--bootstrap --no-substitutes`. Note that a\n+  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n+  model section](#choosing-your-security-model) for more details). Note that a\n   fully-bootstrapped build will take quite a long time on the first run.\n \n ## Tips and Tricks"
      }
    ]
  }
]