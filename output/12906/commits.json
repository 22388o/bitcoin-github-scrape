[
  {
    "sha": "17780d6f35a3951f649c3b7766b9283d9c18e39f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzc4MGQ2ZjM1YTM5NTFmNjQ5YzNiNzc2NmI5MjgzZDljMThlMzlm",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-04-07T07:42:02Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-04-07T07:42:02Z"
      },
      "message": "scripted-diff: Avoid `interface` keyword to fix windows gitian build\n\nRename `interface` to `interfaces`\n\nBuild failure reported by Chun Kuan Lee <ken2812221@gmail.com>\nhttps://github.com/bitcoin/bitcoin/pull/10244#issuecomment-379434756\n\n-BEGIN VERIFY SCRIPT-\n\ngit mv src/interface src/interfaces\nren() { git grep -l \"$1\" | xargs sed -i \"s,$1,$2,g\"; }\nren interface/            interfaces/\nren interface::           interfaces::\nren BITCOIN_INTERFACE_    BITCOIN_INTERFACES_\nren \"namespace interface\" \"namespace interfaces\"\n\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "c858c2d92b028d96118983415f40da5b3a0c48e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c858c2d92b028d96118983415f40da5b3a0c48e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17780d6f35a3951f649c3b7766b9283d9c18e39f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17780d6f35a3951f649c3b7766b9283d9c18e39f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17780d6f35a3951f649c3b7766b9283d9c18e39f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17780d6f35a3951f649c3b7766b9283d9c18e39f/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f0c6a7b0e47e03f848dc992d37fe209dd9c6975"
      }
    ],
    "stats": {
      "total": 422,
      "additions": 211,
      "deletions": 211
    },
    "files": [
      {
        "sha": "f8134c3aa3eafb93a52757204a3006aa8fe005b9",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -626,7 +626,7 @@ GUI\n     holds: try to not directly access core data structures from Views.\n \n - Avoid adding slow or blocking code in the GUI thread. In particular do not\n-  add new `interface::Node` and `interface::Wallet` method calls, even if they\n+  add new `interfaces::Node` and `interfaces::Wallet` method calls, even if they\n   may be fast now, in case they are changed to lock or communicate across\n   processes in the future.\n "
      },
      {
        "sha": "2c6ba6a6e6085901387965c3868ad499ce9bc19f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -105,9 +105,9 @@ BITCOIN_CORE_H = \\\n   httpserver.h \\\n   indirectmap.h \\\n   init.h \\\n-  interface/handler.h \\\n-  interface/node.h \\\n-  interface/wallet.h \\\n+  interfaces/handler.h \\\n+  interfaces/node.h \\\n+  interfaces/wallet.h \\\n   key.h \\\n   key_io.h \\\n   keystore.h \\\n@@ -249,7 +249,7 @@ endif\n libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_wallet_a_SOURCES = \\\n-  interface/wallet.cpp \\\n+  interfaces/wallet.cpp \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/feebumper.cpp \\\n@@ -362,8 +362,8 @@ libbitcoin_util_a_SOURCES = \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n   fs.cpp \\\n-  interface/handler.cpp \\\n-  interface/node.cpp \\\n+  interfaces/handler.cpp \\\n+  interfaces/node.cpp \\\n   random.cpp \\\n   rpc/protocol.cpp \\\n   rpc/util.cpp \\"
      },
      {
        "sha": "e93b91d23ceadcc929bd720a5a612cf10aec845e",
        "filename": "src/interfaces/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/README.md?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "previous_filename": "src/interface/README.md"
      },
      {
        "sha": "1443fe9f18ff5297a36b7b0af2636eb81e4cdbaf",
        "filename": "src/interfaces/handler.cpp",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/handler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/handler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,15 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <interface/handler.h>\n+#include <interfaces/handler.h>\n \n #include <util.h>\n \n #include <boost/signals2/connection.hpp>\n #include <memory>\n #include <utility>\n \n-namespace interface {\n+namespace interfaces {\n namespace {\n \n class HandlerImpl : public Handler\n@@ -30,4 +30,4 @@ std::unique_ptr<Handler> MakeHandler(boost::signals2::connection connection)\n     return MakeUnique<HandlerImpl>(std::move(connection));\n }\n \n-} // namespace interface\n+} // namespace interfaces",
        "previous_filename": "src/interface/handler.cpp"
      },
      {
        "sha": "c4c674cac5aebcb842585cf163bdd2a31f0424c9",
        "filename": "src/interfaces/handler.h",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/handler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/handler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_INTERFACE_HANDLER_H\n-#define BITCOIN_INTERFACE_HANDLER_H\n+#ifndef BITCOIN_INTERFACES_HANDLER_H\n+#define BITCOIN_INTERFACES_HANDLER_H\n \n #include <memory>\n \n@@ -13,7 +13,7 @@ class connection;\n } // namespace signals2\n } // namespace boost\n \n-namespace interface {\n+namespace interfaces {\n \n //! Generic interface for managing an event handler or callback function\n //! registered with another interface. Has a single disconnect method to cancel\n@@ -30,6 +30,6 @@ class Handler\n //! Return handler wrapping a boost signal connection.\n std::unique_ptr<Handler> MakeHandler(boost::signals2::connection connection);\n \n-} // namespace interface\n+} // namespace interfaces\n \n-#endif // BITCOIN_INTERFACE_HANDLER_H\n+#endif // BITCOIN_INTERFACES_HANDLER_H",
        "previous_filename": "src/interface/handler.h"
      },
      {
        "sha": "919748f94225d50df783e72e9d13a16505803441",
        "filename": "src/interfaces/node.cpp",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,15 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n \n #include <addrdb.h>\n #include <amount.h>\n #include <chain.h>\n #include <chainparams.h>\n #include <init.h>\n-#include <interface/handler.h>\n-#include <interface/wallet.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n #include <net.h>\n #include <net_processing.h>\n #include <netaddress.h>\n@@ -43,7 +43,7 @@\n #include <boost/thread/thread.hpp>\n #include <univalue.h>\n \n-namespace interface {\n+namespace interfaces {\n namespace {\n \n class NodeImpl : public Node\n@@ -305,4 +305,4 @@ class NodeImpl : public Node\n \n std::unique_ptr<Node> MakeNode() { return MakeUnique<NodeImpl>(); }\n \n-} // namespace interface\n+} // namespace interfaces",
        "previous_filename": "src/interface/node.cpp"
      },
      {
        "sha": "f375af2f1959b14ee785bcb78126a8ba55e8ec2a",
        "filename": "src/interfaces/node.h",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_INTERFACE_NODE_H\n-#define BITCOIN_INTERFACE_NODE_H\n+#ifndef BITCOIN_INTERFACES_NODE_H\n+#define BITCOIN_INTERFACES_NODE_H\n \n #include <addrdb.h>     // For banmap_t\n #include <amount.h>     // For CAmount\n@@ -29,7 +29,7 @@ class proxyType;\n enum class FeeReason;\n struct CNodeStateStats;\n \n-namespace interface {\n+namespace interfaces {\n \n class Handler;\n class Wallet;\n@@ -254,6 +254,6 @@ class Node\n //! Return implementation of Node interface.\n std::unique_ptr<Node> MakeNode();\n \n-} // namespace interface\n+} // namespace interfaces\n \n-#endif // BITCOIN_INTERFACE_NODE_H\n+#endif // BITCOIN_INTERFACES_NODE_H",
        "previous_filename": "src/interface/node.h"
      },
      {
        "sha": "0244fe70f5903ef57497392d54e6bacbee8c26a5",
        "filename": "src/interfaces/wallet.cpp",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,12 +2,12 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <interface/wallet.h>\n+#include <interfaces/wallet.h>\n \n #include <amount.h>\n #include <chain.h>\n #include <consensus/validation.h>\n-#include <interface/handler.h>\n+#include <interfaces/handler.h>\n #include <net.h>\n #include <policy/policy.h>\n #include <primitives/transaction.h>\n@@ -24,7 +24,7 @@\n \n #include <memory>\n \n-namespace interface {\n+namespace interfaces {\n namespace {\n \n class PendingWalletTxImpl : public PendingWalletTx\n@@ -283,7 +283,7 @@ class WalletImpl : public Wallet\n         return result;\n     }\n     bool tryGetTxStatus(const uint256& txid,\n-        interface::WalletTxStatus& tx_status,\n+        interfaces::WalletTxStatus& tx_status,\n         int& num_blocks,\n         int64_t& adjusted_time) override\n     {\n@@ -438,4 +438,4 @@ class WalletImpl : public Wallet\n \n std::unique_ptr<Wallet> MakeWallet(CWallet& wallet) { return MakeUnique<WalletImpl>(wallet); }\n \n-} // namespace interface\n+} // namespace interfaces",
        "previous_filename": "src/interface/wallet.cpp"
      },
      {
        "sha": "3e27242c2c724ad8f12c18502b1f3c9810acfd40",
        "filename": "src/interfaces/wallet.h",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_INTERFACE_WALLET_H\n-#define BITCOIN_INTERFACE_WALLET_H\n+#ifndef BITCOIN_INTERFACES_WALLET_H\n+#define BITCOIN_INTERFACES_WALLET_H\n \n #include <amount.h>                    // For CAmount\n #include <pubkey.h>                    // For CTxDestination (CKeyID and CScriptID)\n@@ -27,7 +27,7 @@ class CWallet;\n enum class OutputType;\n struct CRecipient;\n \n-namespace interface {\n+namespace interfaces {\n \n class Handler;\n class PendingWalletTx;\n@@ -347,6 +347,6 @@ struct WalletTxOut\n //! in builds where ENABLE_WALLET is false.\n std::unique_ptr<Wallet> MakeWallet(CWallet& wallet);\n \n-} // namespace interface\n+} // namespace interfaces\n \n-#endif // BITCOIN_INTERFACE_WALLET_H\n+#endif // BITCOIN_INTERFACES_WALLET_H",
        "previous_filename": "src/interface/wallet.h"
      },
      {
        "sha": "1e3acd75c01339ab0eaa7bc6760c0b2b3dc682c2",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -7,7 +7,7 @@\n #include <qt/guiutil.h>\n #include <qt/walletmodel.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <key_io.h>\n #include <wallet/wallet.h>\n \n@@ -74,7 +74,7 @@ class AddressTablePriv\n     AddressTablePriv(AddressTableModel *_parent):\n         parent(_parent) {}\n \n-    void refreshAddressTable(interface::Wallet& wallet)\n+    void refreshAddressTable(interfaces::Wallet& wallet)\n     {\n         cachedAddressTable.clear();\n         {"
      },
      {
        "sha": "d7aeda9d8e2bd0de3fc6e09cbf6a2993107d1464",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,7 +13,7 @@ enum class OutputType;\n class AddressTablePriv;\n class WalletModel;\n \n-namespace interface {\n+namespace interfaces {\n class Wallet;\n }\n "
      },
      {
        "sha": "26cb03c2c7e4b4635b280f7c5e141868c9e16712",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -8,7 +8,7 @@\n #include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <sync.h>\n #include <utiltime.h>\n \n@@ -46,7 +46,7 @@ class BanTablePriv\n     Qt::SortOrder sortOrder;\n \n     /** Pull a full list of banned nodes from CNode into our cache */\n-    void refreshBanlist(interface::Node& node)\n+    void refreshBanlist(interfaces::Node& node)\n     {\n         banmap_t banMap;\n         node.getBanned(banMap);\n@@ -82,7 +82,7 @@ class BanTablePriv\n     }\n };\n \n-BanTableModel::BanTableModel(interface::Node& node, ClientModel *parent) :\n+BanTableModel::BanTableModel(interfaces::Node& node, ClientModel *parent) :\n     QAbstractTableModel(parent),\n     m_node(node),\n     clientModel(parent)"
      },
      {
        "sha": "d6c8dbf6dd3b39529b7ac964c30030d728e521a1",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -15,7 +15,7 @@\n class ClientModel;\n class BanTablePriv;\n \n-namespace interface {\n+namespace interfaces {\n     class Node;\n }\n \n@@ -45,7 +45,7 @@ class BanTableModel : public QAbstractTableModel\n     Q_OBJECT\n \n public:\n-    explicit BanTableModel(interface::Node& node, ClientModel *parent = 0);\n+    explicit BanTableModel(interfaces::Node& node, ClientModel *parent = 0);\n     ~BanTableModel();\n     void startAutoRefresh();\n     void stopAutoRefresh();\n@@ -71,7 +71,7 @@ public Q_SLOTS:\n     void refresh();\n \n private:\n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n     ClientModel *clientModel;\n     QStringList columns;\n     std::unique_ptr<BanTablePriv> priv;"
      },
      {
        "sha": "db60ec9885a84a098f2cda0ae3af26df7e08b96a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -27,8 +27,8 @@\n #endif\n \n #include <init.h>\n-#include <interface/handler.h>\n-#include <interface/node.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n #include <rpc/server.h>\n #include <ui_interface.h>\n #include <uint256.h>\n@@ -182,7 +182,7 @@ class BitcoinCore: public QObject\n {\n     Q_OBJECT\n public:\n-    explicit BitcoinCore(interface::Node& node);\n+    explicit BitcoinCore(interfaces::Node& node);\n \n public Q_SLOTS:\n     void initialize();\n@@ -197,15 +197,15 @@ public Q_SLOTS:\n     /// Pass fatal exception message to UI thread\n     void handleRunawayException(const std::exception *e);\n \n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n };\n \n /** Main Bitcoin application object */\n class BitcoinApplication: public QApplication\n {\n     Q_OBJECT\n public:\n-    explicit BitcoinApplication(interface::Node& node, int &argc, char **argv);\n+    explicit BitcoinApplication(interfaces::Node& node, int &argc, char **argv);\n     ~BitcoinApplication();\n \n #ifdef ENABLE_WALLET\n@@ -246,7 +246,7 @@ public Q_SLOTS:\n \n private:\n     QThread *coreThread;\n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n     OptionsModel *optionsModel;\n     ClientModel *clientModel;\n     BitcoinGUI *window;\n@@ -264,7 +264,7 @@ public Q_SLOTS:\n \n #include <qt/bitcoin.moc>\n \n-BitcoinCore::BitcoinCore(interface::Node& node) :\n+BitcoinCore::BitcoinCore(interfaces::Node& node) :\n     QObject(), m_node(node)\n {\n }\n@@ -304,7 +304,7 @@ void BitcoinCore::shutdown()\n     }\n }\n \n-BitcoinApplication::BitcoinApplication(interface::Node& node, int &argc, char **argv):\n+BitcoinApplication::BitcoinApplication(interfaces::Node& node, int &argc, char **argv):\n     QApplication(argc, argv),\n     coreThread(0),\n     m_node(node),\n@@ -535,7 +535,7 @@ int main(int argc, char *argv[])\n {\n     SetupEnvironment();\n \n-    std::unique_ptr<interface::Node> node = interface::MakeNode();\n+    std::unique_ptr<interfaces::Node> node = interfaces::MakeNode();\n \n     /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n@@ -687,7 +687,7 @@ int main(int argc, char *argv[])\n     app.createOptionsModel(gArgs.GetBoolArg(\"-resetguisettings\", false));\n \n     // Subscribe to global signals from core\n-    std::unique_ptr<interface::Handler> handler = node->handleInitMessage(InitMessage);\n+    std::unique_ptr<interfaces::Handler> handler = node->handleInitMessage(InitMessage);\n \n     if (gArgs.GetBoolArg(\"-splash\", DEFAULT_SPLASHSCREEN) && !gArgs.GetBoolArg(\"-min\", false))\n         app.createSplashScreen(networkStyle.data());"
      },
      {
        "sha": "bfa8844a09a6a884f0bbc1dbae241a8aae170407",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -30,8 +30,8 @@\n \n #include <chainparams.h>\n #include <init.h>\n-#include <interface/handler.h>\n-#include <interface/node.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n #include <ui_interface.h>\n #include <util.h>\n \n@@ -74,7 +74,7 @@ const std::string BitcoinGUI::DEFAULT_UIPLATFORM =\n #endif\n         ;\n \n-BitcoinGUI::BitcoinGUI(interface::Node& node, const PlatformStyle *_platformStyle, const NetworkStyle *networkStyle, QWidget *parent) :\n+BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformStyle, const NetworkStyle *networkStyle, QWidget *parent) :\n     QMainWindow(parent),\n     enableWallet(false),\n     m_node(node),"
      },
      {
        "sha": "e59c71cd4f41481c17f653945b5e2243e18004d2",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -33,7 +33,7 @@ class WalletModel;\n class HelpMessageDialog;\n class ModalOverlay;\n \n-namespace interface {\n+namespace interfaces {\n class Handler;\n class Node;\n }\n@@ -56,7 +56,7 @@ class BitcoinGUI : public QMainWindow\n public:\n     static const std::string DEFAULT_UIPLATFORM;\n \n-    explicit BitcoinGUI(interface::Node& node, const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent = 0);\n+    explicit BitcoinGUI(interfaces::Node& node, const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent = 0);\n     ~BitcoinGUI();\n \n     /** Set the client model.\n@@ -83,9 +83,9 @@ class BitcoinGUI : public QMainWindow\n     bool eventFilter(QObject *object, QEvent *event);\n \n private:\n-    interface::Node& m_node;\n-    std::unique_ptr<interface::Handler> m_handler_message_box;\n-    std::unique_ptr<interface::Handler> m_handler_question;\n+    interfaces::Node& m_node;\n+    std::unique_ptr<interfaces::Handler> m_handler_message_box;\n+    std::unique_ptr<interfaces::Handler> m_handler_question;\n     ClientModel *clientModel;\n     WalletFrame *walletFrame;\n "
      },
      {
        "sha": "37fd06ccc91f5bc948f7d8bd9baf8646e2b36eb2",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,8 +13,8 @@\n #include <chainparams.h>\n #include <checkpoints.h>\n #include <clientversion.h>\n-#include <interface/handler.h>\n-#include <interface/node.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n #include <validation.h>\n #include <net.h>\n #include <txmempool.h>\n@@ -32,7 +32,7 @@ class CBlockIndex;\n static int64_t nLastHeaderTipUpdateNotification = 0;\n static int64_t nLastBlockTipUpdateNotification = 0;\n \n-ClientModel::ClientModel(interface::Node& node, OptionsModel *_optionsModel, QObject *parent) :\n+ClientModel::ClientModel(interfaces::Node& node, OptionsModel *_optionsModel, QObject *parent) :\n     QObject(parent),\n     m_node(node),\n     optionsModel(_optionsModel),"
      },
      {
        "sha": "a609222f7db46b1ba8ea35d071992c29378078ee",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -17,7 +17,7 @@ class PeerTableModel;\n \n class CBlockIndex;\n \n-namespace interface {\n+namespace interfaces {\n class Handler;\n class Node;\n }\n@@ -46,10 +46,10 @@ class ClientModel : public QObject\n     Q_OBJECT\n \n public:\n-    explicit ClientModel(interface::Node& node, OptionsModel *optionsModel, QObject *parent = 0);\n+    explicit ClientModel(interfaces::Node& node, OptionsModel *optionsModel, QObject *parent = 0);\n     ~ClientModel();\n \n-    interface::Node& node() const { return m_node; }\n+    interfaces::Node& node() const { return m_node; }\n     OptionsModel *getOptionsModel();\n     PeerTableModel *getPeerTableModel();\n     BanTableModel *getBanTableModel();\n@@ -75,14 +75,14 @@ class ClientModel : public QObject\n     mutable std::atomic<int64_t> cachedBestHeaderTime;\n \n private:\n-    interface::Node& m_node;\n-    std::unique_ptr<interface::Handler> m_handler_show_progress;\n-    std::unique_ptr<interface::Handler> m_handler_notify_num_connections_changed;\n-    std::unique_ptr<interface::Handler> m_handler_notify_network_active_changed;\n-    std::unique_ptr<interface::Handler> m_handler_notify_alert_changed;\n-    std::unique_ptr<interface::Handler> m_handler_banned_list_changed;\n-    std::unique_ptr<interface::Handler> m_handler_notify_block_tip;\n-    std::unique_ptr<interface::Handler> m_handler_notify_header_tip;\n+    interfaces::Node& m_node;\n+    std::unique_ptr<interfaces::Handler> m_handler_show_progress;\n+    std::unique_ptr<interfaces::Handler> m_handler_notify_num_connections_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_notify_network_active_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_notify_alert_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_banned_list_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_notify_block_tip;\n+    std::unique_ptr<interfaces::Handler> m_handler_notify_header_tip;\n     OptionsModel *optionsModel;\n     PeerTableModel *peerTableModel;\n     BanTableModel *banTableModel;"
      },
      {
        "sha": "601a77fc85b6f442e696bffba81b61d2eb0eed9b",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -14,7 +14,7 @@\n #include <qt/walletmodel.h>\n \n #include <wallet/coincontrol.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <key_io.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n@@ -648,7 +648,7 @@ void CoinControlDialog::updateView()\n         int nChildren = 0;\n         for (const auto& outpair : coins.second) {\n             const COutPoint& output = std::get<0>(outpair);\n-            const interface::WalletTxOut& out = std::get<1>(outpair);\n+            const interfaces::WalletTxOut& out = std::get<1>(outpair);\n             nSum += out.txout.nValue;\n             nChildren++;\n "
      },
      {
        "sha": "c76fc4ca6dfe0d1ba905c08055f12ef7c32076e4",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,7 +13,7 @@\n #include <chainparams.h>\n #include <primitives/transaction.h>\n #include <key_io.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <policy/policy.h>\n #include <protocol.h>\n #include <script/script.h>\n@@ -232,7 +232,7 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n     return ret;\n }\n \n-bool isDust(interface::Node& node, const QString& address, const CAmount& amount)\n+bool isDust(interfaces::Node& node, const QString& address, const CAmount& amount)\n {\n     CTxDestination dest = DecodeDestination(address.toStdString());\n     CScript script = GetScriptForDestination(dest);"
      },
      {
        "sha": "4a269640981dfab2a3134483e378e86c1096bee5",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -20,7 +20,7 @@\n class QValidatedLineEdit;\n class SendCoinsRecipient;\n \n-namespace interface\n+namespace interfaces\n {\n     class Node;\n }\n@@ -54,7 +54,7 @@ namespace GUIUtil\n     QString formatBitcoinURI(const SendCoinsRecipient &info);\n \n     // Returns true if given address+amount meets \"dust\" definition\n-    bool isDust(interface::Node& node, const QString& address, const CAmount& amount);\n+    bool isDust(interfaces::Node& node, const QString& address, const CAmount& amount);\n \n     // HTML escaping for rich text controls\n     QString HtmlEscape(const QString& str, bool fMultiLine=false);"
      },
      {
        "sha": "8c00ca036378791582f54d37b31a3f38a262095b",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -12,7 +12,7 @@\n \n #include <qt/guiutil.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <util.h>\n \n #include <QFileDialog>\n@@ -187,7 +187,7 @@ QString Intro::getDefaultDataDirectory()\n     return GUIUtil::boostPathToQString(GetDefaultDataDir());\n }\n \n-bool Intro::pickDataDirectory(interface::Node& node)\n+bool Intro::pickDataDirectory(interfaces::Node& node)\n {\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings"
      },
      {
        "sha": "b0937aedcb3d0a457d1fa7de51290b9fd1705812",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,7 +13,7 @@ static const bool DEFAULT_CHOOSE_DATADIR = false;\n \n class FreespaceChecker;\n \n-namespace interface {\n+namespace interfaces {\n     class Node;\n }\n \n@@ -45,7 +45,7 @@ class Intro : public QDialog\n      * @note do NOT call global GetDataDir() before calling this function, this\n      * will cause the wrong path to be cached.\n      */\n-    static bool pickDataDirectory(interface::Node& node);\n+    static bool pickDataDirectory(interfaces::Node& node);\n \n     /**\n      * Determine default data directory for operating system."
      },
      {
        "sha": "c0ddb89b404ed7255b9f09c23dd2f3ff62e0a39c",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,7 +13,7 @@\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <validation.h> // for DEFAULT_SCRIPTCHECK_THREADS and MAX_SCRIPTCHECK_THREADS\n #include <netbase.h>\n #include <txdb.h> // for -dbcache defaults"
      },
      {
        "sha": "30c8124c5898931cf4d75d1782dfc1013ac51976",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -11,7 +11,7 @@\n #include <qt/bitcoinunits.h>\n #include <qt/guiutil.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <validation.h> // For DEFAULT_SCRIPTCHECK_THREADS\n #include <net.h>\n #include <netbase.h>\n@@ -24,7 +24,7 @@\n \n const char *DEFAULT_GUI_PROXY_HOST = \"127.0.0.1\";\n \n-OptionsModel::OptionsModel(interface::Node& node, QObject *parent, bool resetSettings) :\n+OptionsModel::OptionsModel(interfaces::Node& node, QObject *parent, bool resetSettings) :\n     QAbstractListModel(parent), m_node(node)\n {\n     Init(resetSettings);"
      },
      {
        "sha": "fc1d119a710fad0011044a3ecd88b7daa486e955",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -9,7 +9,7 @@\n \n #include <QAbstractListModel>\n \n-namespace interface {\n+namespace interfaces {\n class Node;\n }\n \n@@ -31,7 +31,7 @@ class OptionsModel : public QAbstractListModel\n     Q_OBJECT\n \n public:\n-    explicit OptionsModel(interface::Node& node, QObject *parent = 0, bool resetSettings = false);\n+    explicit OptionsModel(interfaces::Node& node, QObject *parent = 0, bool resetSettings = false);\n \n     enum OptionID {\n         StartAtStartup,         // bool\n@@ -79,10 +79,10 @@ class OptionsModel : public QAbstractListModel\n     void setRestartRequired(bool fRequired);\n     bool isRestartRequired() const;\n \n-    interface::Node& node() const { return m_node; }\n+    interfaces::Node& node() const { return m_node; }\n \n private:\n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n     /* Qt-only settings */\n     bool fHideTrayIcon;\n     bool fMinimizeToTray;"
      },
      {
        "sha": "8e8788dad3aafd3cd1eb63ff4a4fbcbb86e48913",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -21,7 +21,7 @@\n #define DECORATION_SIZE 54\n #define NUM_ITEMS 5\n \n-Q_DECLARE_METATYPE(interface::WalletBalances)\n+Q_DECLARE_METATYPE(interfaces::WalletBalances)\n \n class TxViewDelegate : public QAbstractItemDelegate\n {\n@@ -157,7 +157,7 @@ OverviewPage::~OverviewPage()\n     delete ui;\n }\n \n-void OverviewPage::setBalance(const interface::WalletBalances& balances)\n+void OverviewPage::setBalance(const interfaces::WalletBalances& balances)\n {\n     int unit = walletModel->getOptionsModel()->getDisplayUnit();\n     m_balances = balances;\n@@ -224,10 +224,10 @@ void OverviewPage::setWalletModel(WalletModel *model)\n         ui->listTransactions->setModelColumn(TransactionTableModel::ToAddress);\n \n         // Keep up to date with wallet\n-        interface::Wallet& wallet = model->wallet();\n-        interface::WalletBalances balances = wallet.getBalances();\n+        interfaces::Wallet& wallet = model->wallet();\n+        interfaces::WalletBalances balances = wallet.getBalances();\n         setBalance(balances);\n-        connect(model, SIGNAL(balanceChanged(interface::WalletBalances)), this, SLOT(setBalance(interface::WalletBalances)));\n+        connect(model, SIGNAL(balanceChanged(interfaces::WalletBalances)), this, SLOT(setBalance(interfaces::WalletBalances)));\n \n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n "
      },
      {
        "sha": "d519eca43a379a7265d60cca247b16c5362d78d2",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_OVERVIEWPAGE_H\n #define BITCOIN_QT_OVERVIEWPAGE_H\n \n-#include <interface/wallet.h>\n+#include <interfaces/wallet.h>\n \n #include <QWidget>\n #include <memory>\n@@ -38,7 +38,7 @@ class OverviewPage : public QWidget\n     void showOutOfSyncWarning(bool fShow);\n \n public Q_SLOTS:\n-    void setBalance(const interface::WalletBalances& balances);\n+    void setBalance(const interfaces::WalletBalances& balances);\n \n Q_SIGNALS:\n     void transactionClicked(const QModelIndex &index);\n@@ -48,7 +48,7 @@ public Q_SLOTS:\n     Ui::OverviewPage *ui;\n     ClientModel *clientModel;\n     WalletModel *walletModel;\n-    interface::WalletBalances m_balances;\n+    interfaces::WalletBalances m_balances;\n \n     TxViewDelegate *txdelegate;\n     std::unique_ptr<TransactionFilterProxy> filter;"
      },
      {
        "sha": "70cdb3361c3c782e45401abc397c4488c0da31f5",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -9,7 +9,7 @@\n #include <qt/optionsmodel.h>\n \n #include <chainparams.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <policy/policy.h>\n #include <key_io.h>\n #include <ui_interface.h>\n@@ -201,7 +201,7 @@ void PaymentServer::LoadRootCAs(X509_STORE* _store)\n // Warning: ipcSendCommandLine() is called early in init,\n // so don't use \"Q_EMIT message()\", but \"QMessageBox::\"!\n //\n-void PaymentServer::ipcParseCommandLine(interface::Node& node, int argc, char* argv[])\n+void PaymentServer::ipcParseCommandLine(interfaces::Node& node, int argc, char* argv[])\n {\n     for (int i = 1; i < argc; i++)\n     {\n@@ -760,7 +760,7 @@ void PaymentServer::handlePaymentACK(const QString& paymentACKMsg)\n     Q_EMIT message(tr(\"Payment acknowledged\"), paymentACKMsg, CClientUIInterface::ICON_INFORMATION | CClientUIInterface::MODAL);\n }\n \n-bool PaymentServer::verifyNetwork(interface::Node& node, const payments::PaymentDetails& requestDetails)\n+bool PaymentServer::verifyNetwork(interfaces::Node& node, const payments::PaymentDetails& requestDetails)\n {\n     bool fVerified = requestDetails.network() == node.getNetwork();\n     if (!fVerified) {"
      },
      {
        "sha": "511fc5bd6ee9fbd3e885fd710e0e6bda84502022",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -60,7 +60,7 @@ class PaymentServer : public QObject\n public:\n     // Parse URIs on command line\n     // Returns false on error\n-    static void ipcParseCommandLine(interface::Node& node, int argc, char *argv[]);\n+    static void ipcParseCommandLine(interfaces::Node& node, int argc, char *argv[]);\n \n     // Returns true if there were URIs on the command line\n     // which were successfully sent to an already-running\n@@ -87,7 +87,7 @@ class PaymentServer : public QObject\n     void setOptionsModel(OptionsModel *optionsModel);\n \n     // Verify that the payment request network matches the client network\n-    static bool verifyNetwork(interface::Node& node, const payments::PaymentDetails& requestDetails);\n+    static bool verifyNetwork(interfaces::Node& node, const payments::PaymentDetails& requestDetails);\n     // Verify if the payment request is expired\n     static bool verifyExpired(const payments::PaymentDetails& requestDetails);\n     // Verify the payment request size is valid as per BIP70"
      },
      {
        "sha": "7e318e3035aac309862f04ebdbc4c6080a42062d",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -8,7 +8,7 @@\n #include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <validation.h> // for cs_main\n #include <sync.h>\n \n@@ -57,12 +57,12 @@ class PeerTablePriv\n     std::map<NodeId, int> mapNodeRows;\n \n     /** Pull a full list of peers from vNodes into our cache */\n-    void refreshPeers(interface::Node& node)\n+    void refreshPeers(interfaces::Node& node)\n     {\n         {\n             cachedNodeStats.clear();\n \n-            interface::Node::NodesStats nodes_stats;\n+            interfaces::Node::NodesStats nodes_stats;\n             node.getNodesStats(nodes_stats);\n #if QT_VERSION >= 0x040700\n             cachedNodeStats.reserve(nodes_stats.size());\n@@ -102,7 +102,7 @@ class PeerTablePriv\n     }\n };\n \n-PeerTableModel::PeerTableModel(interface::Node& node, ClientModel *parent) :\n+PeerTableModel::PeerTableModel(interfaces::Node& node, ClientModel *parent) :\n     QAbstractTableModel(parent),\n     m_node(node),\n     clientModel(parent),"
      },
      {
        "sha": "69c9744c8fb1ecc2e8149ac2a20c52da3c5635bc",
        "filename": "src/qt/peertablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/peertablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/peertablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -16,7 +16,7 @@\n class ClientModel;\n class PeerTablePriv;\n \n-namespace interface {\n+namespace interfaces {\n class Node;\n }\n \n@@ -51,7 +51,7 @@ class PeerTableModel : public QAbstractTableModel\n     Q_OBJECT\n \n public:\n-    explicit PeerTableModel(interface::Node& node, ClientModel *parent = 0);\n+    explicit PeerTableModel(interfaces::Node& node, ClientModel *parent = 0);\n     ~PeerTableModel();\n     const CNodeCombinedStats *getNodeStats(int idx);\n     int getRowByNodeId(NodeId nodeid);\n@@ -82,7 +82,7 @@ public Q_SLOTS:\n     void refresh();\n \n private:\n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n     ClientModel *clientModel;\n     QStringList columns;\n     std::unique_ptr<PeerTablePriv> priv;"
      },
      {
        "sha": "5122bab36f9843c42105425e993d23758e32b3ca",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -14,7 +14,7 @@\n #include <qt/platformstyle.h>\n #include <qt/walletmodel.h>\n #include <chainparams.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <netbase.h>\n #include <rpc/server.h>\n #include <rpc/client.h>\n@@ -85,7 +85,7 @@ class RPCExecutor : public QObject\n {\n     Q_OBJECT\n public:\n-    RPCExecutor(interface::Node& node) : m_node(node) {}\n+    RPCExecutor(interfaces::Node& node) : m_node(node) {}\n \n public Q_SLOTS:\n     void request(const QString &command, const QString &walletID);\n@@ -94,7 +94,7 @@ public Q_SLOTS:\n     void reply(int category, const QString &command);\n \n private:\n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n };\n \n /** Class for handling RPC timers\n@@ -153,7 +153,7 @@ class QtRPCTimerInterface: public RPCTimerInterface\n  * @param[out]   pstrFilteredOut  Command line, filtered to remove any sensitive data\n  */\n \n-bool RPCConsole::RPCParseCommandLine(interface::Node* node, std::string &strResult, const std::string &strCommand, const bool fExecute, std::string * const pstrFilteredOut, const std::string *walletID)\n+bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strResult, const std::string &strCommand, const bool fExecute, std::string * const pstrFilteredOut, const std::string *walletID)\n {\n     std::vector< std::vector<std::string> > stack;\n     stack.push_back(std::vector<std::string>());\n@@ -451,7 +451,7 @@ void RPCExecutor::request(const QString &command, const QString &walletID)\n     }\n }\n \n-RPCConsole::RPCConsole(interface::Node& node, const PlatformStyle *_platformStyle, QWidget *parent) :\n+RPCConsole::RPCConsole(interfaces::Node& node, const PlatformStyle *_platformStyle, QWidget *parent) :\n     QWidget(parent),\n     m_node(node),\n     ui(new Ui::RPCConsole),\n@@ -575,7 +575,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         setNumConnections(model->getNumConnections());\n         connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        interface::Node& node = clientModel->node();\n+        interfaces::Node& node = clientModel->node();\n         setNumBlocks(node.getNumBlocks(), QDateTime::fromTime_t(node.getLastBlockTime()), node.getVerificationProgress(), false);\n         connect(model, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n "
      },
      {
        "sha": "a9a60d09f10a48721314bc3175bed757db03a1d9",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -19,7 +19,7 @@ class PlatformStyle;\n class RPCTimerInterface;\n class WalletModel;\n \n-namespace interface {\n+namespace interfaces {\n     class Node;\n }\n \n@@ -38,11 +38,11 @@ class RPCConsole: public QWidget\n     Q_OBJECT\n \n public:\n-    explicit RPCConsole(interface::Node& node, const PlatformStyle *platformStyle, QWidget *parent);\n+    explicit RPCConsole(interfaces::Node& node, const PlatformStyle *platformStyle, QWidget *parent);\n     ~RPCConsole();\n \n-    static bool RPCParseCommandLine(interface::Node* node, std::string &strResult, const std::string &strCommand, bool fExecute, std::string * const pstrFilteredOut = nullptr, const std::string *walletID = nullptr);\n-    static bool RPCExecuteCommandLine(interface::Node& node, std::string &strResult, const std::string &strCommand, std::string * const pstrFilteredOut = nullptr, const std::string *walletID = nullptr) {\n+    static bool RPCParseCommandLine(interfaces::Node* node, std::string &strResult, const std::string &strCommand, bool fExecute, std::string * const pstrFilteredOut = nullptr, const std::string *walletID = nullptr);\n+    static bool RPCExecuteCommandLine(interfaces::Node& node, std::string &strResult, const std::string &strCommand, std::string * const pstrFilteredOut = nullptr, const std::string *walletID = nullptr) {\n         return RPCParseCommandLine(&node, strResult, strCommand, true, pstrFilteredOut, walletID);\n     }\n \n@@ -144,7 +144,7 @@ public Q_SLOTS:\n \n     };\n \n-    interface::Node& m_node;\n+    interfaces::Node& m_node;\n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n     QStringList history;"
      },
      {
        "sha": "0874a0ada49ee02c2b6ae003c77c5b2f75452e86",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -15,7 +15,7 @@\n #include <qt/sendcoinsentry.h>\n \n #include <chainparams.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <key_io.h>\n #include <wallet/coincontrol.h>\n #include <ui_interface.h>\n@@ -149,9 +149,9 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n             }\n         }\n \n-        interface::WalletBalances balances = _model->wallet().getBalances();\n+        interfaces::WalletBalances balances = _model->wallet().getBalances();\n         setBalance(balances);\n-        connect(_model, SIGNAL(balanceChanged(interface::WalletBalances)), this, SLOT(setBalance(interface::WalletBalances)));\n+        connect(_model, SIGNAL(balanceChanged(interfaces::WalletBalances)), this, SLOT(setBalance(interfaces::WalletBalances)));\n         connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n         updateDisplayUnit();\n \n@@ -515,7 +515,7 @@ bool SendCoinsDialog::handlePaymentRequest(const SendCoinsRecipient &rv)\n     return true;\n }\n \n-void SendCoinsDialog::setBalance(const interface::WalletBalances& balances)\n+void SendCoinsDialog::setBalance(const interfaces::WalletBalances& balances)\n {\n     if(model && model->getOptionsModel())\n     {"
      },
      {
        "sha": "40a1d10c2bbd01874eb4be7dc01b7c207fc9641e",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -51,7 +51,7 @@ public Q_SLOTS:\n     void accept();\n     SendCoinsEntry *addEntry();\n     void updateTabsAndLabels();\n-    void setBalance(const interface::WalletBalances& balances);\n+    void setBalance(const interfaces::WalletBalances& balances);\n \n Q_SIGNALS:\n     void coinsSent(const uint256& txid);"
      },
      {
        "sha": "977425f7e367168b2dc8a6c6da5fd0d763ec9895",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -127,7 +127,7 @@ void SendCoinsEntry::useAvailableBalanceClicked()\n     Q_EMIT useAvailableBalance(this);\n }\n \n-bool SendCoinsEntry::validate(interface::Node& node)\n+bool SendCoinsEntry::validate(interfaces::Node& node)\n {\n     if (!model)\n         return false;"
      },
      {
        "sha": "76f96c61e087d4446669f9c7c9837ca2cd8030e9",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -30,7 +30,7 @@ class SendCoinsEntry : public QStackedWidget\n     ~SendCoinsEntry();\n \n     void setModel(WalletModel *model);\n-    bool validate(interface::Node& node);\n+    bool validate(interfaces::Node& node);\n     SendCoinsRecipient getValue();\n \n     /** Return whether the entry is still empty and unedited */"
      },
      {
        "sha": "4d972b431cf5ece4b4825dd685570c4fff4bac92",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -12,9 +12,9 @@\n \n #include <clientversion.h>\n #include <init.h>\n-#include <interface/handler.h>\n-#include <interface/node.h>\n-#include <interface/wallet.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <interfaces/wallet.h>\n #include <util.h>\n #include <ui_interface.h>\n #include <version.h>\n@@ -25,7 +25,7 @@\n #include <QPainter>\n #include <QRadialGradient>\n \n-SplashScreen::SplashScreen(interface::Node& node, Qt::WindowFlags f, const NetworkStyle *networkStyle) :\n+SplashScreen::SplashScreen(interfaces::Node& node, Qt::WindowFlags f, const NetworkStyle *networkStyle) :\n     QWidget(0, f), curAlignment(0), m_node(node)\n {\n     // set reference point, paddings\n@@ -177,7 +177,7 @@ static void ShowProgress(SplashScreen *splash, const std::string &title, int nPr\n             strprintf(\"\\n%d\", nProgress) + \"%\");\n }\n #ifdef ENABLE_WALLET\n-void SplashScreen::ConnectWallet(std::unique_ptr<interface::Wallet> wallet)\n+void SplashScreen::ConnectWallet(std::unique_ptr<interfaces::Wallet> wallet)\n {\n     m_connected_wallet_handlers.emplace_back(wallet->handleShowProgress(boost::bind(ShowProgress, this, _1, _2, false)));\n     m_connected_wallets.emplace_back(std::move(wallet));\n@@ -190,7 +190,7 @@ void SplashScreen::subscribeToCoreSignals()\n     m_handler_init_message = m_node.handleInitMessage(boost::bind(InitMessage, this, _1));\n     m_handler_show_progress = m_node.handleShowProgress(boost::bind(ShowProgress, this, _1, _2, _3));\n #ifdef ENABLE_WALLET\n-    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interface::Wallet> wallet) { ConnectWallet(std::move(wallet)); });\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) { ConnectWallet(std::move(wallet)); });\n #endif\n }\n "
      },
      {
        "sha": "9ef19675d82788823cf67618604a5f066bdbc5e8",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -12,7 +12,7 @@\n \n class NetworkStyle;\n \n-namespace interface {\n+namespace interfaces {\n class Handler;\n class Node;\n class Wallet;\n@@ -29,7 +29,7 @@ class SplashScreen : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit SplashScreen(interface::Node& node, Qt::WindowFlags f, const NetworkStyle *networkStyle);\n+    explicit SplashScreen(interfaces::Node& node, Qt::WindowFlags f, const NetworkStyle *networkStyle);\n     ~SplashScreen();\n \n protected:\n@@ -52,19 +52,19 @@ public Q_SLOTS:\n     /** Disconnect core signals to splash screen */\n     void unsubscribeFromCoreSignals();\n     /** Connect wallet signals to splash screen */\n-    void ConnectWallet(std::unique_ptr<interface::Wallet> wallet);\n+    void ConnectWallet(std::unique_ptr<interfaces::Wallet> wallet);\n \n     QPixmap pixmap;\n     QString curMessage;\n     QColor curColor;\n     int curAlignment;\n \n-    interface::Node& m_node;\n-    std::unique_ptr<interface::Handler> m_handler_init_message;\n-    std::unique_ptr<interface::Handler> m_handler_show_progress;\n-    std::unique_ptr<interface::Handler> m_handler_load_wallet;\n-    std::list<std::unique_ptr<interface::Wallet>> m_connected_wallets;\n-    std::list<std::unique_ptr<interface::Handler>> m_connected_wallet_handlers;\n+    interfaces::Node& m_node;\n+    std::unique_ptr<interfaces::Handler> m_handler_init_message;\n+    std::unique_ptr<interfaces::Handler> m_handler_show_progress;\n+    std::unique_ptr<interfaces::Handler> m_handler_load_wallet;\n+    std::list<std::unique_ptr<interfaces::Wallet>> m_connected_wallets;\n+    std::list<std::unique_ptr<interfaces::Handler>> m_connected_wallet_handlers;\n };\n \n #endif // BITCOIN_QT_SPLASHSCREEN_H"
      },
      {
        "sha": "83484b5ce700a2dc6ae96224912a5c4e7df9b444",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -9,7 +9,7 @@\n \n #include <amount.h>\n #include <chainparams.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <random.h>\n #include <script/script.h>\n #include <script/standard.h>\n@@ -67,7 +67,7 @@ static SendCoinsRecipient handleRequest(PaymentServer* server, std::vector<unsig\n void PaymentServerTests::paymentServerTests()\n {\n     SelectParams(CBaseChainParams::MAIN);\n-    auto node = interface::MakeNode();\n+    auto node = interfaces::MakeNode();\n     OptionsModel optionsModel(*node);\n     PaymentServer* server = new PaymentServer(nullptr, false);\n     X509_STORE* caStore = X509_STORE_new();"
      },
      {
        "sha": "974e7831c45e4c0c47d711e0f9ae5b1d44a61a97",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -7,7 +7,7 @@\n #include <chainparams.h>\n #include <consensus/validation.h>\n #include <fs.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <validation.h>\n #include <rpc/register.h>\n #include <rpc/server.h>\n@@ -46,7 +46,7 @@ void RPCNestedTests::rpcNestedTests()\n     std::string result;\n     std::string result2;\n     std::string filtered;\n-    auto node = interface::MakeNode();\n+    auto node = interfaces::MakeNode();\n     RPCConsole::RPCExecuteCommandLine(*node, result, \"getblockchaininfo()[chain]\", &filtered); //simple result filtering with path\n     QVERIFY(result==\"main\");\n     QVERIFY(filtered == \"getblockchaininfo()[chain]\");"
      },
      {
        "sha": "fb86cf5ec9716da0bbc4bcd7b34badb078f66d3b",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -1,6 +1,6 @@\n #include <qt/test/wallettests.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <qt/bitcoinamountfield.h>\n #include <qt/callback.h>\n #include <qt/optionsmodel.h>\n@@ -178,7 +178,7 @@ void TestGUI()\n     std::unique_ptr<const PlatformStyle> platformStyle(PlatformStyle::instantiate(\"other\"));\n     SendCoinsDialog sendCoinsDialog(platformStyle.get());\n     TransactionView transactionView(platformStyle.get());\n-    auto node = interface::MakeNode();\n+    auto node = interfaces::MakeNode();\n     OptionsModel optionsModel(*node);\n     vpwallets.insert(vpwallets.begin(), &wallet);\n     WalletModel walletModel(std::move(node->getWallets()[0]), *node, platformStyle.get(), &optionsModel);"
      },
      {
        "sha": "5a3b645f651a558966afb1a6b47fbb2c4b399811",
        "filename": "src/qt/trafficgraphwidget.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/trafficgraphwidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/trafficgraphwidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/trafficgraphwidget.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <qt/trafficgraphwidget.h>\n #include <qt/clientmodel.h>\n "
      },
      {
        "sha": "f316c3ca452645733ca56f61ca5406ac2ca161b2",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -10,7 +10,7 @@\n #include <qt/transactionrecord.h>\n \n #include <consensus/consensus.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <key_io.h>\n #include <validation.h>\n #include <script/script.h>\n@@ -23,7 +23,7 @@\n #include <stdint.h>\n #include <string>\n \n-QString TransactionDesc::FormatTxStatus(const interface::WalletTx& wtx, const interface::WalletTxStatus& status, bool inMempool, int numBlocks, int64_t adjustedTime)\n+QString TransactionDesc::FormatTxStatus(const interfaces::WalletTx& wtx, const interfaces::WalletTxStatus& status, bool inMempool, int numBlocks, int64_t adjustedTime)\n {\n     if (!status.is_final)\n     {\n@@ -48,14 +48,14 @@ QString TransactionDesc::FormatTxStatus(const interface::WalletTx& wtx, const in\n     }\n }\n \n-QString TransactionDesc::toHTML(interface::Node& node, interface::Wallet& wallet, TransactionRecord *rec, int unit)\n+QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wallet, TransactionRecord *rec, int unit)\n {\n     int numBlocks;\n     int64_t adjustedTime;\n-    interface::WalletTxStatus status;\n-    interface::WalletOrderForm orderForm;\n+    interfaces::WalletTxStatus status;\n+    interfaces::WalletOrderForm orderForm;\n     bool inMempool;\n-    interface::WalletTx wtx = wallet.getWalletTxDetails(rec->hash, status, orderForm, inMempool, numBlocks, adjustedTime);\n+    interfaces::WalletTx wtx = wallet.getWalletTxDetails(rec->hash, status, orderForm, inMempool, numBlocks, adjustedTime);\n \n     QString strHTML;\n "
      },
      {
        "sha": "cb8453cb81e95f9a51a45abb027686675d0525ea",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -10,7 +10,7 @@\n \n class TransactionRecord;\n \n-namespace interface {\n+namespace interfaces {\n class Node;\n class Wallet;\n struct WalletTx;\n@@ -24,12 +24,12 @@ class TransactionDesc: public QObject\n     Q_OBJECT\n \n public:\n-    static QString toHTML(interface::Node& node, interface::Wallet& wallet, TransactionRecord *rec, int unit);\n+    static QString toHTML(interfaces::Node& node, interfaces::Wallet& wallet, TransactionRecord *rec, int unit);\n \n private:\n     TransactionDesc() {}\n \n-    static QString FormatTxStatus(const interface::WalletTx& wtx, const interface::WalletTxStatus& status, bool inMempool, int numBlocks, int64_t adjustedTime);\n+    static QString FormatTxStatus(const interfaces::WalletTx& wtx, const interfaces::WalletTxStatus& status, bool inMempool, int numBlocks, int64_t adjustedTime);\n };\n \n #endif // BITCOIN_QT_TRANSACTIONDESC_H"
      },
      {
        "sha": "b6ed66ad96eae913a3031c76021e46b72c3ac6db",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -5,7 +5,7 @@\n #include <qt/transactionrecord.h>\n \n #include <consensus/consensus.h>\n-#include <interface/wallet.h>\n+#include <interfaces/wallet.h>\n #include <key_io.h>\n #include <timedata.h>\n #include <validation.h>\n@@ -25,7 +25,7 @@ bool TransactionRecord::showTransaction()\n /*\n  * Decompose CWallet transaction to model transaction records.\n  */\n-QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface::WalletTx& wtx)\n+QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interfaces::WalletTx& wtx)\n {\n     QList<TransactionRecord> parts;\n     int64_t nTime = wtx.time;\n@@ -158,7 +158,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     return parts;\n }\n \n-void TransactionRecord::updateStatus(const interface::WalletTxStatus& wtx, int numBlocks, int64_t adjustedTime)\n+void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks, int64_t adjustedTime)\n {\n     // Determine transaction status\n "
      },
      {
        "sha": "62961434edb3d5202b4bebb2e299eb7ab3e23d37",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -11,7 +11,7 @@\n #include <QList>\n #include <QString>\n \n-namespace interface {\n+namespace interfaces {\n class Node;\n class Wallet;\n struct WalletTx;\n@@ -111,7 +111,7 @@ class TransactionRecord\n     /** Decompose CWallet transaction to model transaction records.\n      */\n     static bool showTransaction();\n-    static QList<TransactionRecord> decomposeTransaction(const interface::WalletTx& wtx);\n+    static QList<TransactionRecord> decomposeTransaction(const interfaces::WalletTx& wtx);\n \n     /** @name Immutable transaction attributes\n       @{*/\n@@ -140,7 +140,7 @@ class TransactionRecord\n \n     /** Update status from core wallet tx.\n      */\n-    void updateStatus(const interface::WalletTxStatus& wtx, int numBlocks, int64_t adjustedTime);\n+    void updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks, int64_t adjustedTime);\n \n     /** Return whether a status update is needed.\n      */"
      },
      {
        "sha": "46169a91d14ed48d7cf45d68218697e2bbd31b0e",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -14,8 +14,8 @@\n #include <qt/walletmodel.h>\n \n #include <core_io.h>\n-#include <interface/handler.h>\n-#include <interface/node.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n #include <validation.h>\n #include <sync.h>\n #include <uint256.h>\n@@ -73,7 +73,7 @@ class TransactionTablePriv\n \n     /* Query entire wallet anew from core.\n      */\n-    void refreshWallet(interface::Wallet& wallet)\n+    void refreshWallet(interfaces::Wallet& wallet)\n     {\n         qDebug() << \"TransactionTablePriv::refreshWallet\";\n         cachedWallet.clear();\n@@ -91,7 +91,7 @@ class TransactionTablePriv\n \n        Call with transaction that was added, removed or changed.\n      */\n-    void updateWallet(interface::Wallet& wallet, const uint256 &hash, int status, bool showTransaction)\n+    void updateWallet(interfaces::Wallet& wallet, const uint256 &hash, int status, bool showTransaction)\n     {\n         qDebug() << \"TransactionTablePriv::updateWallet: \" + QString::fromStdString(hash.ToString()) + \" \" + QString::number(status);\n \n@@ -127,7 +127,7 @@ class TransactionTablePriv\n             if(showTransaction)\n             {\n                 // Find transaction in wallet\n-                interface::WalletTx wtx = wallet.getWalletTx(hash);\n+                interfaces::WalletTx wtx = wallet.getWalletTx(hash);\n                 if(!wtx.tx)\n                 {\n                     qWarning() << \"TransactionTablePriv::updateWallet: Warning: Got CT_NEW, but transaction is not in wallet\";\n@@ -176,7 +176,7 @@ class TransactionTablePriv\n         return cachedWallet.size();\n     }\n \n-    TransactionRecord *index(interface::Wallet& wallet, int idx)\n+    TransactionRecord *index(interfaces::Wallet& wallet, int idx)\n     {\n         if(idx >= 0 && idx < cachedWallet.size())\n         {\n@@ -189,7 +189,7 @@ class TransactionTablePriv\n             // If a status update is needed (blocks came in since last check),\n             //  update the status of this transaction from the wallet. Otherwise,\n             // simply re-use the cached status.\n-            interface::WalletTxStatus wtx;\n+            interfaces::WalletTxStatus wtx;\n             int numBlocks;\n             int64_t adjustedTime;\n             if (wallet.tryGetTxStatus(rec->hash, wtx, numBlocks, adjustedTime) && rec->statusUpdateNeeded(numBlocks)) {\n@@ -200,12 +200,12 @@ class TransactionTablePriv\n         return 0;\n     }\n \n-    QString describe(interface::Node& node, interface::Wallet& wallet, TransactionRecord *rec, int unit)\n+    QString describe(interfaces::Node& node, interfaces::Wallet& wallet, TransactionRecord *rec, int unit)\n     {\n         return TransactionDesc::toHTML(node, wallet, rec, unit);\n     }\n \n-    QString getTxHex(interface::Wallet& wallet, TransactionRecord *rec)\n+    QString getTxHex(interfaces::Wallet& wallet, TransactionRecord *rec)\n     {\n         auto tx = wallet.getTx(rec->hash);\n         if (tx) {"
      },
      {
        "sha": "8b029be5f546d74b3254761c1491c4a39908ce1a",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -12,7 +12,7 @@\n \n #include <memory>\n \n-namespace interface {\n+namespace interfaces {\n class Handler;\n }\n \n@@ -85,8 +85,8 @@ class TransactionTableModel : public QAbstractTableModel\n \n private:\n     WalletModel *walletModel;\n-    std::unique_ptr<interface::Handler> m_handler_transaction_changed;\n-    std::unique_ptr<interface::Handler> m_handler_show_progress;\n+    std::unique_ptr<interfaces::Handler> m_handler_transaction_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_show_progress;\n     QStringList columns;\n     TransactionTablePriv *priv;\n     bool fProcessingQueuedTransactions;"
      },
      {
        "sha": "d5b98486ae563e2a409b2cfdae5acd3670f82f30",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -19,7 +19,7 @@\n \n #include <clientversion.h>\n #include <init.h>\n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <util.h>\n \n #include <stdio.h>\n@@ -32,7 +32,7 @@\n #include <QVBoxLayout>\n \n /** \"Help message\" or \"About\" dialog box */\n-HelpMessageDialog::HelpMessageDialog(interface::Node& node, QWidget *parent, bool about) :\n+HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bool about) :\n     QDialog(parent),\n     ui(new Ui::HelpMessageDialog)\n {"
      },
      {
        "sha": "f5c8af43626ecbc0f6b03a02485467bef2bdf9c9",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -10,7 +10,7 @@\n \n class BitcoinGUI;\n \n-namespace interface {\n+namespace interfaces {\n     class Node;\n }\n \n@@ -24,7 +24,7 @@ class HelpMessageDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit HelpMessageDialog(interface::Node& node, QWidget *parent, bool about);\n+    explicit HelpMessageDialog(interfaces::Node& node, QWidget *parent, bool about);\n     ~HelpMessageDialog();\n \n     void printToConsole();"
      },
      {
        "sha": "00b98901c0932b47821f40f8b8bc32b73e05bec4",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -12,8 +12,8 @@\n #include <qt/sendcoinsdialog.h>\n #include <qt/transactiontablemodel.h>\n \n-#include <interface/handler.h>\n-#include <interface/node.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n #include <key_io.h>\n #include <ui_interface.h>\n #include <util.h> // for GetBoolArg\n@@ -28,7 +28,7 @@\n #include <QTimer>\n \n \n-WalletModel::WalletModel(std::unique_ptr<interface::Wallet> wallet, interface::Node& node, const PlatformStyle *platformStyle, OptionsModel *_optionsModel, QObject *parent) :\n+WalletModel::WalletModel(std::unique_ptr<interfaces::Wallet> wallet, interfaces::Node& node, const PlatformStyle *platformStyle, OptionsModel *_optionsModel, QObject *parent) :\n     QObject(parent), m_wallet(std::move(wallet)), m_node(node), optionsModel(_optionsModel), addressTableModel(0),\n     transactionTableModel(0),\n     recentRequestsTableModel(0),\n@@ -70,7 +70,7 @@ void WalletModel::pollBalanceChanged()\n     // avoids the GUI from getting stuck on periodical polls if the core is\n     // holding the locks for a longer time - for example, during a wallet\n     // rescan.\n-    interface::WalletBalances new_balances;\n+    interfaces::WalletBalances new_balances;\n     int numBlocks = -1;\n     if (!m_wallet->tryGetBalances(new_balances, numBlocks)) {\n         return;\n@@ -89,7 +89,7 @@ void WalletModel::pollBalanceChanged()\n     }\n }\n \n-void WalletModel::checkBalanceChanged(const interface::WalletBalances& new_balances)\n+void WalletModel::checkBalanceChanged(const interfaces::WalletBalances& new_balances)\n {\n     if(new_balances.balanceChanged(m_cached_balances)) {\n         m_cached_balances = new_balances;"
      },
      {
        "sha": "e5ed5b4e82b93ff1c2f175b4dc4cfe2ff0a287bf",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,7 +13,7 @@\n #include <qt/paymentrequestplus.h>\n #include <qt/walletmodeltransaction.h>\n \n-#include <interface/wallet.h>\n+#include <interfaces/wallet.h>\n #include <support/allocators/secure.h>\n \n #include <map>\n@@ -37,9 +37,9 @@ class COutput;\n class CPubKey;\n class uint256;\n \n-namespace interface {\n+namespace interfaces {\n class Node;\n-} // namespace interface\n+} // namespace interfaces\n \n QT_BEGIN_NAMESPACE\n class QTimer;\n@@ -111,7 +111,7 @@ class WalletModel : public QObject\n     Q_OBJECT\n \n public:\n-    explicit WalletModel(std::unique_ptr<interface::Wallet> wallet, interface::Node& node, const PlatformStyle *platformStyle, OptionsModel *optionsModel, QObject *parent = 0);\n+    explicit WalletModel(std::unique_ptr<interfaces::Wallet> wallet, interfaces::Node& node, const PlatformStyle *platformStyle, OptionsModel *optionsModel, QObject *parent = 0);\n     ~WalletModel();\n \n     enum StatusCode // Returned by sendCoins\n@@ -198,20 +198,20 @@ class WalletModel : public QObject\n \n     static bool isWalletEnabled();\n \n-    interface::Node& node() const { return m_node; }\n-    interface::Wallet& wallet() const { return *m_wallet; }\n+    interfaces::Node& node() const { return m_node; }\n+    interfaces::Wallet& wallet() const { return *m_wallet; }\n \n     QString getWalletName() const;\n \n     bool isMultiwallet();\n private:\n-    std::unique_ptr<interface::Wallet> m_wallet;\n-    std::unique_ptr<interface::Handler> m_handler_status_changed;\n-    std::unique_ptr<interface::Handler> m_handler_address_book_changed;\n-    std::unique_ptr<interface::Handler> m_handler_transaction_changed;\n-    std::unique_ptr<interface::Handler> m_handler_show_progress;\n-    std::unique_ptr<interface::Handler> m_handler_watch_only_changed;\n-    interface::Node& m_node;\n+    std::unique_ptr<interfaces::Wallet> m_wallet;\n+    std::unique_ptr<interfaces::Handler> m_handler_status_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_address_book_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_transaction_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_show_progress;\n+    std::unique_ptr<interfaces::Handler> m_handler_watch_only_changed;\n+    interfaces::Node& m_node;\n \n     bool fHaveWatchOnly;\n     bool fForceCheckBalanceChanged;\n@@ -225,19 +225,19 @@ class WalletModel : public QObject\n     RecentRequestsTableModel *recentRequestsTableModel;\n \n     // Cache some values to be able to detect changes\n-    interface::WalletBalances m_cached_balances;\n+    interfaces::WalletBalances m_cached_balances;\n     EncryptionStatus cachedEncryptionStatus;\n     int cachedNumBlocks;\n \n     QTimer *pollTimer;\n \n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();\n-    void checkBalanceChanged(const interface::WalletBalances& new_balances);\n+    void checkBalanceChanged(const interfaces::WalletBalances& new_balances);\n \n Q_SIGNALS:\n     // Signal that balance in wallet changed\n-    void balanceChanged(const interface::WalletBalances& balances);\n+    void balanceChanged(const interfaces::WalletBalances& balances);\n \n     // Encryption status of wallet changed\n     void encryptionStatusChanged();"
      },
      {
        "sha": "d5187d6634e87d8061e603483135159a55f3bdc6",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -4,7 +4,7 @@\n \n #include <qt/walletmodeltransaction.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <policy/policy.h>\n \n WalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &_recipients) :\n@@ -18,7 +18,7 @@ QList<SendCoinsRecipient> WalletModelTransaction::getRecipients() const\n     return recipients;\n }\n \n-std::unique_ptr<interface::PendingWalletTx>& WalletModelTransaction::getWtx()\n+std::unique_ptr<interfaces::PendingWalletTx>& WalletModelTransaction::getWtx()\n {\n     return wtx;\n }"
      },
      {
        "sha": "9f9132610998d648c4ead4c878676d8aabba02f1",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -13,7 +13,7 @@\n \n class SendCoinsRecipient;\n \n-namespace interface {\n+namespace interfaces {\n class Node;\n class PendingWalletTx;\n }\n@@ -26,7 +26,7 @@ class WalletModelTransaction\n \n     QList<SendCoinsRecipient> getRecipients() const;\n \n-    std::unique_ptr<interface::PendingWalletTx>& getWtx();\n+    std::unique_ptr<interfaces::PendingWalletTx>& getWtx();\n     unsigned int getTransactionSize();\n \n     void setTransactionFee(const CAmount& newFee);\n@@ -38,7 +38,7 @@ class WalletModelTransaction\n \n private:\n     QList<SendCoinsRecipient> recipients;\n-    std::unique_ptr<interface::PendingWalletTx> wtx;\n+    std::unique_ptr<interfaces::PendingWalletTx> wtx;\n     CAmount fee;\n };\n "
      },
      {
        "sha": "8b9b85c8c94cb80c66d07c9f65bb49a869d50476",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17780d6f35a3951f649c3b7766b9283d9c18e39f/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=17780d6f35a3951f649c3b7766b9283d9c18e39f",
        "patch": "@@ -19,7 +19,7 @@\n #include <qt/transactionview.h>\n #include <qt/walletmodel.h>\n \n-#include <interface/node.h>\n+#include <interfaces/node.h>\n #include <ui_interface.h>\n \n #include <QAction>"
      }
    ]
  }
]