laanwj,2014-05-23T09:41:32Z,"untested ACK, code changes OK\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-43989643,43989643,
sipa,2014-05-23T10:35:50Z,untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-43993583,43993583,
4tar,2014-05-23T12:15:54Z,"I did the testing locally, any thing I need to do for pushing the commit?\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44002054,44002054,
4tar,2014-05-24T04:21:56Z,"By using async getaddrinfo_a() instead of getaddrinfo() in netbase.cpp::LookupIntern(), the responsiveness issue of dnsseed thread is finally resolved.\n\nAnd to note:  With the 2nd commit in this pull request, the 1st one is not necessary now, although leaving it there would cause no problem.\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44077372,44077372,
fanquake,2014-05-24T04:34:02Z,@laanwj @sipa You'll need to re-review/re-ACK this pull.\n,https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44077550,44077550,
4tar,2014-05-24T10:55:49Z,"Sorry, the previous building error was caused by missing the libanl, added it in last commit.\n\nHave done a clean rebuilding and testing locally, please kindly have a review.  Thanks.\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44083982,44083982,
4tar,2014-05-24T17:26:17Z,"@theuni Thanks, done as you suggested in last commit.\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44093751,44093751,
4tar,2014-05-25T12:31:54Z,@laanwj Done.  Hope it is the last commit for this pull request. :)\n,https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44129807,44129807,
theuni,2014-05-26T18:51:01Z,"Does this launch a new thread for each resolve? If so, I think it would be necessary to do a quick probe at random times to see what the thread count looks like before/after this change. If it's a drastic change, this will need some sort of rate-limiting.\n\nAlso (not necessary for this PR), it might be beneficial to maintain a global resolve list in some class so that a single tight loop can be c",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44210655,44210655,
4tar,2014-05-27T05:22:09Z,"@theuni Yes, the getaddrinfo_a() call does kick off a new thread for resolving the name and poll on it in its own thread.  So when there is one resolving job, there would be one more thread than before this change.\n\nHowever, the real name resolving job happens mostly, if not only, in dnsseed thread.  To all other calls to the LookupIntern() function, they are generally kicked off by the construc",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44236856,44236856,
laanwj,2014-05-27T07:30:39Z,"@theuni, @4tar This is starting to be too complicated. Don't get too deep in this rabbit hole. I would accept this simple patch, but I don't want to merge a whole thread/job management system just so that interruption can happen sooner.\n\nWe already have boost::asio for that, if really necessary. No need to replicate its functionality.\n\nBut is the number of threads created by the async resolve ",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44243431,44243431,
4tar,2014-05-27T07:41:48Z,"Interesting, looks like the i586-mingw32msvc-g++ building env doesn't have inet_pton() defined.  Will submit a patch to AC_SEARCH_LIB for it.\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44244134,44244134,
4tar,2014-05-27T08:09:17Z,"@laanwj I agree with you that we don't really need an async resolver now, so I just add a inet_pton()/inet_addr() call in the LookupIntern() before issuing the getaddrinfo_a(), so that we can avoid kicking off a new resolving thread inside the latter, when the caller just want to convert an ip addr text to an ip addr structure, which, as we have discussed above, is the most cases that the LookupIn",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44246243,44246243,
theuni,2014-05-27T15:31:16Z,"@4tar: I'm not very familiar with the networking code, so I'll give your analysis the benefit of the doubt. Thanks for addressing my thread-count concern.\n\nAs for inet_pton, please add ""nsl resolv"" to the list of libs where it may be found (the empty 2nd param).\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44292179,44292179,
4tar,2014-05-27T16:28:54Z,@theuni Thanks for your review! Setting up a correct lib list is always a mystery to me...\n,https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44300126,44300126,
BitcoinPullTester,2014-05-27T16:58:29Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/978d2881b00fbc98789b64e8ed2ec4bd2e8fadc5 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44303832,44303832,
4tar,2014-05-29T04:11:40Z,"@laanwj Anything I can do to make this PR be merged a little bit soon?  It passed the test and I believe it is ready.\n\nThe reason I'm asking is that I made a mistake to commit directly on my master branch and send the PR, so the pending causes big issue on my branch management...\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44492691,44492691,
4tar,2014-05-30T12:51:54Z,"OK, I'm closing this RP and will re-submit it from another branch...\n",https://github.com/bitcoin/bitcoin/pull/4215#issuecomment-44646980,44646980,
theuni,2014-05-24T16:20:14Z,"Please tie this check to the function and not glibc's usage, in case other libc's (uclibc, musl, etc) implement it as part of libc itself:\n\n```\nAC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1,[Define this symbol if you have getaddrinfo_a])])\n```\n\nThen in code, use: `#if defined(HAVE_GETADDRINFO_A)`\n",https://github.com/bitcoin/bitcoin/pull/4215#discussion_r13026976,13026976,configure.ac
laanwj,2014-05-25T10:48:52Z,Is the `defined(_GNU_SOURCE)` necessary here? (i.e. isn't HAVE_GETADDRINFO_A in itself enough to know that the function exists?)\n,https://github.com/bitcoin/bitcoin/pull/4215#discussion_r13030203,13030203,src/netbase.cpp
4tar,2014-05-25T11:21:04Z,"Indeed, it's unnecessary in my dev environment, but I just added it for if someone was building with an older toolchain, although such a toolchain might fail to get HAVE_GETADDRINFO_A defined by configure script at the first place, but just in case.\n\nSure it should be pretty safe to remove the macro definition check, I'd like to do that if you think that is desired, but it could be even safer (o",https://github.com/bitcoin/bitcoin/pull/4215#discussion_r13030317,13030317,src/netbase.cpp
4tar,2014-05-25T12:20:20Z,"@laanwj Yes, I consider the situation for a while and come to agree on your point: we should remove the _GNU_SOURCE macro definition checking because someone might build it with another libc implementation, and in such a case, the _GNU_SOURCE was unlikely defined by the compiler but the getaddrinfo_a() could have been implemented in the c library itself.\n\nWill submit a commit immediately.  Thank",https://github.com/bitcoin/bitcoin/pull/4215#discussion_r13030544,13030544,src/netbase.cpp
