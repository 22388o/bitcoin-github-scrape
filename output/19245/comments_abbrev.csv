practicalswift,2020-06-11 12:54:11,Concept ACK: this will be nice to have in the future when we switch to C++17. Thanks for experimenting!,https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-642627284,642627284,
MarcoFalke,2020-06-11 15:26:55,"Would it make sense to split out the two `absolute()` commits, because they make sense even with C++11?",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-642735541,642735541,
kiminuo,2020-06-11 20:05:08,"> Would it make sense to split out the two `absolute()` commits, because they make sense even with C++11?\n\nI think so. Yes.",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-642900610,642900610,
laanwj,2020-06-12 10:50:30,Nice work.,https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-643207791,643207791,
DrahtBot,2020-06-16 22:48:03,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20586 (Fix Windows build with --enable-werror by hebasto)\n* #20487 (draft: Add syscall sandboxing using seccomp-bpf (Lin",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-645049970,645049970,
elichai,2020-07-26 09:02:52,Nice! Please ping me when it's ready for review :),https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-663961401,663961401,
elichai,2020-11-19 10:35:41,"@kiminuo Now that #20413 is merged, are you planning on rebasing this and getting it ready for review?",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-730282922,730282922,
kiminuo,2020-11-19 10:52:08,"> @kiminuo Now that #20413 is merged, are you planning on rebasing this and getting it ready for review?\n\nI will get to it (hopefully soon â„¢). However, @MarcoFalke mentioned on IRC briefly that `std::fs` is not available on some supported OSs even with C++17 enabled. I'm not sure I understood correctly. If true, it would delay this feature months or years.\n\nIf you want to work on this. No ",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-730291399,730291399,
MarcoFalke,2020-12-17 06:34:52,"Hi, catching up on the IRC log.\n\nI just wanted to say that this is blocked on #20460 and there is nothing you can do about this in this pull. Fixing #20460 will need build system and gitian/guix, as well as CI changes. This would be too much to do here.",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-747241900,747241900,
fanquake,2020-12-22 14:30:23,"Thanks for your work here so far @kiminuo. I've addressed the build system requirements, and combined this changes into #20744 (still attributed to you). However due to runtime and compiler requirements it's unlikely we'll be able to start using them just yet. I'm going to close this PR in favour of #20744 for now.",https://github.com/bitcoin/bitcoin/pull/19245#issuecomment-749567495,749567495,
MarcoFalke,2020-07-08 13:18:56,"I think all that boost does it pick 64 bits of randomness? Something along the lines of \n\n```suggestion\n    return g_insecure_rand_ctx_temp_path.rand256().ToString().substr(0, 16);\n```\n\nshould be identical.",https://github.com/bitcoin/bitcoin/pull/19245#discussion_r451537286,451537286,src/fs.cpp
kiminuo,2020-07-12 21:40:00,"Yes. I believe so too.\n\nHowever, using this leads to a new circular dependency ""fs -> random -> logging -> fs"": https://travis-ci.com/github/kiminuo/bitcoin/jobs/360282950#L466 (https://github.com/kiminuo/bitcoin/commit/333ab6ad421f1b25bf66bd2557cd3d0e4b60e0f6)\n\n`unique_path()` is used only twice but I don't know what is preferred solution here. Inline it? Move function somewhere else? Whe",https://github.com/bitcoin/bitcoin/pull/19245#discussion_r453366419,453366419,src/fs.cpp
MarcoFalke,2020-07-13 05:01:28,"I think there are two options:\n\n* Inline\n* or create a new header, e.g. `src/util/fs.h`",https://github.com/bitcoin/bitcoin/pull/19245#discussion_r453435661,453435661,src/fs.cpp
