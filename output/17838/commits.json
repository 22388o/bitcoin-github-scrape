[
  {
    "sha": "59d9b513e22588c02a7a39fbbbf8bc65cb2617be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWQ5YjUxM2UyMjU4OGMwMmE3YTM5ZmJiYmY4YmM2NWNiMjYxN2Jl",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-12-31T05:36:33Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-01-08T03:58:24Z"
      },
      "message": "test: test the >10 UTXO case for output groups",
      "tree": {
        "sha": "fadac4988aa945669a2d52d0c51700d38a374310",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fadac4988aa945669a2d52d0c51700d38a374310"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59d9b513e22588c02a7a39fbbbf8bc65cb2617be",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl4VU2AACgkQV692LbM1\nMyK1MA/+J4D8mDSF+d+Ey0+j5JifQY0HMdLbpBrJKBPaZC3D2dwG8owVrqjIvxqL\nQ6zMFquElbk7Iqo0rpWx/H+QK/y6U5Hlq2566oF3j/gzwKCVr5ilyAnjnAUKzLKr\nQQOc4nwRQA+ZNm0OBjanAUNCnH4tG41d+P4L4CxmseC8ieLtLy6rO4umVohgXlr4\nlHXAjA/x+odMYCY/TQVVqXAUbM80GyU6IU05Vv2xHQ2hPPmOi1e4cTcgWgOv/T9l\ng0Rm82S0SaQFOiVOAr2ZPdPMRNIVtX504CGUuknh24ToYa1Wq2LO0b47L9PjGNtw\nY/+cafgFiQrkSwmb/NrNxaj/saSz7rppkwfEUX/zFPbwX6I5E6t92Rbqy5nCGbH5\nyqGgIQwoj4Nfe3hISrUPD/FG6J7T+XaRR/rg7T9uAYqUcKgIlGFcUWquDt+PE3I5\nCmyB4AjObn2EaOOphlc9I5pnOB9Ex9KDBzsQH1VLywkk3Qw7n+WaRqyXEplIV5d3\nz4W5L4wd519W7tDmW/ToHRzSN24Zgk8gMlBzEJ0dRBptYytKxaR4wU+D2Fek+BxP\nTGoWp7HjhVrRZbyrZ1/1ioUnLyWGwSVNC8izzRNqyUT5F6QARWHJ4qivk8rmgwQX\n2lK3TmeW5+M2Ia7vB7lGWWe2AB91r8fnn9Cd2n3F2kNbbhE5kSk=\n=vPcB\n-----END PGP SIGNATURE-----",
        "payload": "tree fadac4988aa945669a2d52d0c51700d38a374310\nparent fcef6dbc15ef9630832697b9ebf80f05f20efda8\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1577770593 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1578455904 +0900\n\ntest: test the >10 UTXO case for output groups\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59d9b513e22588c02a7a39fbbbf8bc65cb2617be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59d9b513e22588c02a7a39fbbbf8bc65cb2617be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59d9b513e22588c02a7a39fbbbf8bc65cb2617be/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fcef6dbc15ef9630832697b9ebf80f05f20efda8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcef6dbc15ef9630832697b9ebf80f05f20efda8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fcef6dbc15ef9630832697b9ebf80f05f20efda8"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 43,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a21d5ddd728d6bebcd2fac958a9114fd08deb3cc",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 43,
        "deletions": 1,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59d9b513e22588c02a7a39fbbbf8bc65cb2617be/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59d9b513e22588c02a7a39fbbbf8bc65cb2617be/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=59d9b513e22588c02a7a39fbbbf8bc65cb2617be",
        "patch": "@@ -91,7 +91,8 @@ def run_test(self):\n         self.test_fund_send_fund_send(\"p2sh-segwit\")\n         reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n         self.test_fund_send_fund_send(\"bech32\")\n-\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_many_utxos_one_dest()\n \n     def test_persistence(self):\n         '''Test that wallet files persist the avoid_reuse flag.'''\n@@ -257,5 +258,46 @@ def test_fund_send_fund_send(self, second_addr_type):\n         assert_approx(self.nodes[1].getbalance(), 1, 0.001)\n         assert_approx(self.nodes[1].getbalance(avoid_reuse=False), 11, 0.001)\n \n+    def test_many_utxos_one_dest(self):\n+        '''\n+        Test the case where [1] generates a new address A, then\n+        [0] sends 1 BTC to A 30 times.\n+        [1] spends 11 BTC from A\n+        20 of the outputs in A should be used, leaving 10 intact.\n+        Those 10 should all be marked used.\n+        A single output of 9 btc should be the change output back to oneself,\n+        and should not be marked used.\n+        '''\n+        self.log.info(\"Test many utxos one destination\")\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        # send one bitcoin to the funding address 30 times\n+        for _ in range(30):\n+            self.nodes[0].sendtoaddress(fundaddr, 1)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # listunspent should show 30 unused 1 btc outputs\n+        assert_unspent(self.nodes[1], total_count=30, total_sum=30, reused_supported=True, reused_count=0)\n+        # getbalances should show no used, 30 btc trusted\n+        assert_balances(self.nodes[1], mine={\"used\": 0, \"trusted\": 30})\n+\n+        self.nodes[1].sendtoaddress(retaddr, 11)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # listunspent should show 11 unused outputs (you might expect 1 unused 9\n+        # btc output, and 10 used 1 btc outputs, but due to how things are set\n+        # up this requires a rescan by the user; this should probably be fixed).\n+        assert_unspent(self.nodes[1], total_count=11, total_sum=19, reused_supported=True, reused_count=10)\n+        assert_balances(self.nodes[1], mine={\"used\": 0, \"trusted\": 19})\n+\n+        # After -rescan, getbalances shows 1 unused 9 btc output, and 10 used 1 btc outputs.\n+        self.restart_node(1, extra_args=self.extra_args[1] + ['-rescan'])\n+        assert_unspent(self.nodes[1], total_count=11, total_sum=19, reused_supported=True, reused_count=10)\n+        assert_balances(self.nodes[1], mine={\"trusted\": 9, \"used\": 10})\n+\n if __name__ == '__main__':\n     AvoidReuseTest().main()"
      }
    ]
  }
]