[
  {
    "sha": "ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
    "node_id": "C_kwDOABII59oAKGFlNjM3MzcyZWJkN2FkM2RiZTVlNmQzNGMwZTBkYWI3M2JjZTFiNGI",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-20T14:58:44Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-02T14:54:54Z"
      },
      "message": "p2p: create AddrMan namespace, Address struct, Addresses type\n\nfor GetAddr(), CConnMan::GetAddresses() and RPC getnodeaddresses",
      "tree": {
        "sha": "e135b0d3569e0ba7b745f818231246120481b403",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e135b0d3569e0ba7b745f818231246120481b403"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFYcuIACgkQT1chs9Dj\nkh0yng/+OossCpZog/t/Y1YG3NwALSWP0CN6d9tE8i9m+r7lQjckXFT2WE60RLj8\nYvIu8GxPrz4tauViQOeC6fR84iWBKiwd6ZVKXXs3zyKMsI5/CcS9Tn0v9qsLLmZm\nfcvB3kDC43MA8P10WxBfUBMJgEo0D42xjiFdb1K8OC/Vo62TsoqXGIti42IQQamQ\nELt9JH7rpVb/TRNAe8ePxshZh1oj6mk205mf/dagccYMQie6AyrxE85XzT0TdXC5\nWpOjkcqsYcMkrgSLJpJVIeUxT+qCk0H+UoqrQ+El1wtNouWlem5ciGXNrhaBnDTn\nTL2j02tCfYJLhgegi7zza1kaRS5kKnk7LjITFjE6ljaKGV37Ui9U/HcdNZAoRTix\nvzAX4XUXhmUCHeDHZjEPRZ8/A/Cx8blzCeaCHoqYI6fiIq/88fPpfkzUZj5UUEhk\nNRk79y2PCZIMpibfkm2oY0BZPEYqDeM+dsNjtU7CqWJS5yPvTaj+sXMrJrkrLusB\nI6fJQaxvJQLPNcjyPvEcZpTB8v0Xpu0t66OWXGf2iakmmaj+5PMxdpzJfIwd9pN1\nGyAaGFgL+NDISGIeWSG60sT1wrJ/yhFg7GOZqR2ePadAfMBw9WzvejL4t0skKKZT\nOcVuWoHsdxnzsjEfp/t6CsZ4qv/t8Rx+xxDJRrpuQd9/ZJAJPmk=\n=lDH9\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILDxPADxQGMQ3etLSHOSpzy/rIPgC+bn2U5xjCMJvSxACP/wECWs74c6D5Pp\nyjevsTgAr5gI8QRhWHLk8Aj0G/0iMGoj4QCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEGZeHl9sRbIYjIgg3Hm6TJcI\n8QRhWHLk8AgJN8vwEFTP7gCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQj14vzb2isAe0b9DMrlRSKwjxBGFY\ncuTwCIdvI/Wt3D97AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t8BD5LRmap6d7pPNLurhwG3cqCPEEYVhy5fAIkbw0Ve+7ZeQAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e135b0d3569e0ba7b745f818231246120481b403\nparent 571bb94dfb5047c9be8fcbae5dae71de7256b86c\nauthor Jon Atack <jon@atack.com> 1632149924 +0200\ncommitter Jon Atack <jon@atack.com> 1633186494 +0200\n\np2p: create AddrMan namespace, Address struct, Addresses type\n\nfor GetAddr(), CConnMan::GetAddresses() and RPC getnodeaddresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "571bb94dfb5047c9be8fcbae5dae71de7256b86c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/571bb94dfb5047c9be8fcbae5dae71de7256b86c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/571bb94dfb5047c9be8fcbae5dae71de7256b86c"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0640ee3dbd00e1c24f831075c550d8dc95b00981",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
        "patch": "@@ -22,6 +22,16 @@\n /** Default for -checkaddrman */\n static constexpr int32_t DEFAULT_ADDRMAN_CONSISTENCY_CHECKS{0};\n \n+namespace AddrMan {\n+/** Statistics about a CAddress for RPC getnodeaddresses. */\n+struct Address : CAddress {\n+    int nRefCount{0};     //! reference count in new sets (memory only)\n+    bool fInTried{false}; //! in tried set? (memory only)\n+    Address(const CAddress& addr, int count, bool tried) : CAddress(addr), nRefCount(count), fInTried(tried){};\n+};\n+using Addresses = std::vector<Address>;\n+} // namespace AddrMan\n+\n /**\n  * Extended statistics about a CAddress\n  */"
      }
    ]
  },
  {
    "sha": "e3a3552a106bdad11bd4189a517927093d28203d",
    "node_id": "C_kwDOABII59oAKGUzYTM1NTJhMTA2YmRhZDExYmQ0MTg5YTUxNzkyNzA5M2QyODIwM2Q",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-20T11:24:35Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-02T14:55:34Z"
      },
      "message": "p2p: use AddrMan::Addresses in GetAddr/GetAddresses/getnodeaddresses",
      "tree": {
        "sha": "1eb2a84ccea77b37439ff78d242db197cbbeb006",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1eb2a84ccea77b37439ff78d242db197cbbeb006"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3a3552a106bdad11bd4189a517927093d28203d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFYcuYACgkQT1chs9Dj\nkh0+Uw/9H2zqwJ3YrF9DH4uy/3C/KURgSViR0lj4eVIp974mUFeowiUrc36CFsRV\nsmXk8MB4G2lGV1h/TeL+HI1SgMW6VbAj7AMH+vtIxUPPjMAyDCThzDPuA2QYOkNC\nvAAt+M4c67OecMjD4q73KQ0zNTpU0enjc7LB9QUqTu4059nMiHC/4qZ8GxtgvdkS\nm91/ShmDIedHeQw5VqI0gDXa4k4jNZxjD+V79x9KlksFkzncb75zvALi6T1yrJgr\nC1vNLJjk/UNb894zxCbdAyi/AQ8hxsdVEgphfnn0CwSI8RFxx7ToTCblYcXp6c2D\ndI1VRyt3fWjuiEsIPa4yIMCjMykLmJnm4ym2lIJpqH/1I+c08PrqK1DK1Svl+xe5\n5pqWv0qu45sqGB6kNI0S2C3C5V+7r76omrfzNnlVQzdYNgBoo1ArbIKUDY+jSeKI\n4ffV3sBI1dHdyPDYrORd4v7dCXkHz+JI0upPw1SJ/Yq7YtwA2EFvrjhsuSm6g9Uv\nCOcjUTABuj4vYE+a+Y4JimiU4PA13utaO4xQbFM+/lyXl7c3G4RfZaB8j1QS0mZo\nKumXLZ8X+ci2IduJfOhdUT9lv2bjUHdDvVYuubL35t0DXIciH3fT2ysiWzw6ln3S\nKf0q69/Nh73IwN50wGAKejamfxKCtETVts4loCaTIzlztGVmYto=\n=lyJp\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBZ5tBTzlmOft4Qndxsx5E+JnrHMZzOfiG/zSr4/wG2KCP/wEBbRRBrAhy67\nLLWJoOHVBYQI8SA2iqRMwfHdkQT2BpXpEIkJKcJTIDXnCI8seOl6r+liEwjwINO5\nXA1hzDJfGhXuDiRCKvoXlYamWvMDf36+N8Gjs/zOCPEEYVhy5/AIxofeloCGF4YA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb23/8BA8UIcNujNJD2FLiLv9LLUnCPEEYVhy6PAIlchJz3dm6GkAg9/jDS75DI4j\nImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23/8BBNlr7NCc/DvFmc\nfveVGZECCPAgCafYfZ1bibiVrz6yO1WyYTH/R+9Dw16I2Frz4j9Uhw8I8SDOie8c\nNN8jdcwTmzeFHydEPwY9vLGpgSV0cRdMIesEqAjxBGFYcujwCJIe0Xgqh227AIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmfwENa/G4vP5fRL08sziqKeVdsI8QRhWHLo8AhjdWVQnUaF0ACD3+MNLvkM\njiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 1eb2a84ccea77b37439ff78d242db197cbbeb006\nparent ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b\nauthor Jon Atack <jon@atack.com> 1632137075 +0200\ncommitter Jon Atack <jon@atack.com> 1633186534 +0200\n\np2p: use AddrMan::Addresses in GetAddr/GetAddresses/getnodeaddresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a3552a106bdad11bd4189a517927093d28203d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a3552a106bdad11bd4189a517927093d28203d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a3552a106bdad11bd4189a517927093d28203d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae637372ebd7ad3dbe5e6d34c0e0dab73bce1b4b"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "376a135022e1303af25ab0270de8a413d6e01a52",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -851,7 +851,7 @@ int CAddrMan::ForceCheckAddrman() const\n     return 0;\n }\n \n-void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n+void CAddrMan::GetAddr_(AddrMan::Addresses& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n {\n     AssertLockHeld(cs);\n \n@@ -882,7 +882,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size\n         // Filter for quality\n         if (ai.IsTerrible(now)) continue;\n \n-        vAddr.push_back(ai);\n+        vAddr.push_back({ai, ai.nRefCount, ai.fInTried});\n     }\n }\n "
      },
      {
        "sha": "f5d000aac6b07bcd67527c15b3a55d091ce3e63e",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -250,12 +250,12 @@ class CAddrMan\n      * @param[in] max_pct        Maximum percentage of addresses to return (0 = all).\n      * @param[in] network        Select only addresses of this network (nullopt = all).\n      */\n-    std::vector<CAddress> GetAddr(size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n+    AddrMan::Addresses GetAddr(size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n         EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         Check();\n-        std::vector<CAddress> vAddr;\n+        AddrMan::Addresses vAddr;\n         GetAddr_(vAddr, max_addresses, max_pct, network);\n         Check();\n         return vAddr;\n@@ -416,7 +416,7 @@ class CAddrMan\n      * @param[in] max_pct        Maximum percentage of addresses to return (0 = all).\n      * @param[in] network        Select only addresses of this network (nullopt = all).\n      */\n-    void GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    void GetAddr_(AddrMan::Addresses& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** We have successfully connected to this peer. Calling this function\n      *  updates the CAddress's nTime, which is used in our IsTerrible()"
      },
      {
        "sha": "7420c3ac83789e8a0fa466b7f407189fc157f5e6",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -2704,18 +2704,18 @@ CConnman::~CConnman()\n     Stop();\n }\n \n-std::vector<CAddress> CConnman::GetAddresses(size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n+AddrMan::Addresses CConnman::GetAddresses(size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n {\n-    std::vector<CAddress> addresses = addrman.GetAddr(max_addresses, max_pct, network);\n+    AddrMan::Addresses addresses = addrman.GetAddr(max_addresses, max_pct, network);\n     if (m_banman) {\n         addresses.erase(std::remove_if(addresses.begin(), addresses.end(),\n-                        [this](const CAddress& addr){return m_banman->IsDiscouraged(addr) || m_banman->IsBanned(addr);}),\n+                        [this](const auto& addr) { return m_banman->IsDiscouraged(addr) || m_banman->IsBanned(addr); }),\n                         addresses.end());\n     }\n     return addresses;\n }\n \n-std::vector<CAddress> CConnman::GetAddresses(CNode& requestor, size_t max_addresses, size_t max_pct)\n+AddrMan::Addresses CConnman::GetAddresses(CNode& requestor, size_t max_addresses, size_t max_pct)\n {\n     auto local_socket_bytes = requestor.addrBind.GetAddrBytes();\n     uint64_t cache_id = GetDeterministicRandomizer(RANDOMIZER_ID_ADDRCACHE)"
      },
      {
        "sha": "0be25a4d0b17dfb3e3a5a0932c3878672ee657dd",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -847,14 +847,14 @@ class CConnman\n      * @param[in] max_pct        Maximum percentage of addresses to return (0 = all).\n      * @param[in] network        Select only addresses of this network (nullopt = all).\n      */\n-    std::vector<CAddress> GetAddresses(size_t max_addresses, size_t max_pct, std::optional<Network> network) const;\n+    AddrMan::Addresses GetAddresses(size_t max_addresses, size_t max_pct, std::optional<Network> network) const;\n     /**\n      * Cache is used to minimize topology leaks, so it should\n      * be used for all non-trusted calls, for example, p2p.\n      * A non-malicious call (from RPC or a peer with addr permission) should\n      * call the function without a parameter to avoid using the cache.\n      */\n-    std::vector<CAddress> GetAddresses(CNode& requestor, size_t max_addresses, size_t max_pct);\n+    AddrMan::Addresses GetAddresses(CNode& requestor, size_t max_addresses, size_t max_pct);\n \n     // This allows temporarily exceeding m_max_outbound_full_relay, with the goal of finding\n     // a peer that is better than all our current peers.\n@@ -1067,7 +1067,7 @@ class CConnman\n      * with fresh timestamps (per self-announcement).\n      */\n     struct CachedAddrResponse {\n-        std::vector<CAddress> m_addrs_response_cache;\n+        AddrMan::Addresses m_addrs_response_cache;\n         std::chrono::microseconds m_cache_entry_expiration{0};\n     };\n "
      },
      {
        "sha": "2b329e42dd9b02b4657cb56f6ac53b09f8caff1e",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -3764,14 +3764,14 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         peer->m_getaddr_recvd = true;\n \n         peer->m_addrs_to_send.clear();\n-        std::vector<CAddress> vAddr;\n+        AddrMan::Addresses vAddr;\n         if (pfrom.HasPermission(NetPermissionFlags::Addr)) {\n             vAddr = m_connman.GetAddresses(MAX_ADDR_TO_SEND, MAX_PCT_ADDR_TO_SEND, /* network */ std::nullopt);\n         } else {\n             vAddr = m_connman.GetAddresses(pfrom, MAX_ADDR_TO_SEND, MAX_PCT_ADDR_TO_SEND);\n         }\n         FastRandomContext insecure_rand;\n-        for (const CAddress &addr : vAddr) {\n+        for (const auto& addr : vAddr) {\n             PushAddress(*peer, addr, insecure_rand);\n         }\n         return;"
      },
      {
        "sha": "c6e85d053c5bb3b8b8622ba37bbcce1c32c39009",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -897,10 +897,10 @@ static RPCHelpMan getnodeaddresses()\n     }\n \n     // returns a shuffled list of CAddress\n-    const std::vector<CAddress> vAddr{connman.GetAddresses(count, /* max_pct */ 0, network)};\n+    const AddrMan::Addresses addrs{connman.GetAddresses(count, /* max_pct */ 0, network)};\n     UniValue ret(UniValue::VARR);\n \n-    for (const CAddress& addr : vAddr) {\n+    for (const auto& addr : addrs) {\n         UniValue obj(UniValue::VOBJ);\n         obj.pushKV(\"time\", (int)addr.nTime);\n         obj.pushKV(\"services\", (uint64_t)addr.nServices);"
      },
      {
        "sha": "e3824336fb3d9a228e2518bafa5e187e473b944f",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a3552a106bdad11bd4189a517927093d28203d/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a3552a106bdad11bd4189a517927093d28203d/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=e3a3552a106bdad11bd4189a517927093d28203d",
        "patch": "@@ -434,7 +434,7 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n     // Test: Sanity check, GetAddr should never return anything if addrman\n     //  is empty.\n     BOOST_CHECK_EQUAL(addrman.size(), 0U);\n-    std::vector<CAddress> vAddr1 = addrman.GetAddr(/* max_addresses */ 0, /* max_pct */ 0, /* network */ std::nullopt);\n+    const AddrMan::Addresses vAddr1 = addrman.GetAddr(/* max_addresses */ 0, /* max_pct */ 0, /* network */ std::nullopt);\n     BOOST_CHECK_EQUAL(vAddr1.size(), 0U);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.250.2.1\", 8333), NODE_NONE);\n@@ -477,7 +477,7 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n         if (i % 8 == 0)\n             addrman.Good(addr);\n     }\n-    std::vector<CAddress> vAddr = addrman.GetAddr(/* max_addresses */ 2500, /* max_pct */ 23, /* network */ std::nullopt);\n+    const AddrMan::Addresses vAddr = addrman.GetAddr(/* max_addresses */ 2500, /* max_pct */ 23, /* network */ std::nullopt);\n \n     size_t percent23 = (addrman.size() * 23) / 100;\n     BOOST_CHECK_EQUAL(vAddr.size(), percent23);"
      }
    ]
  },
  {
    "sha": "1febfb90bf28b9365e37c05289d479f906970d18",
    "node_id": "C_kwDOABII59oAKDFmZWJmYjkwYmYyOGI5MzY1ZTM3YzA1Mjg5ZDQ3OWY5MDY5NzBkMTg",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-18T17:58:13Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-02T14:55:36Z"
      },
      "message": "rpc: expose tried and reference_count fields in getnodeaddresses",
      "tree": {
        "sha": "594dd651939ba736846d1106ed617884aacd5f13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/594dd651939ba736846d1106ed617884aacd5f13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1febfb90bf28b9365e37c05289d479f906970d18",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFYcugACgkQT1chs9Dj\nkh1euBAAnOpeV/Ipnzgjzsi5od/Ni9fieztEnXX7hCuFYegvYyIJtXdxNJDxbyDt\nghA0v2Z/+RzV2DgenuZk/tzkmUW3P/nei2UB8qAN45bYc4gAnDEDF9JDGwh90w3m\n8t4zY5CiSGdUARcqW8ygCQ3IkSMFeAUjVyLs3WMbl/iC1LLH8JQzBWc9jeqyeQoQ\n/ZL00EbF8xTugyQaVzcY+BNnmFSD4mtsD3h/TMIrJDeKQT0xv7jI6FzdynON+cq/\nuySJq4cQ2jHAtxO177XvZhKwBZqd1K527pNVIZbVFPlo3UewaZv+paYqRWqKWRuN\nqkaSgr3ra/lnTruUe6I+hoJ5jPR9KPAGzuPGGibCNYaARMEPboJR6jgoMRTSKITE\nvqHy4Ux8YUCUTivqPJH6fEG2oO58Q2Zg50sX/6QLW5QiIi/bA96PtrI464gWr/S3\ngh0B/utbEF9q6dI4mOrhR1Okr6e3sh8q5Rg1qqIDII9SdR4yYZHt7+HYAYVKeLJZ\nr03Avr+lT/sbkM1LaJALsQdPEzAQqdOwZJgt7mxcWoMWVDyrSBZ+Kkbz1hf52cHG\nYyp5sEGLCI+bO4sjvLSsqyfZCmVRLRUEsGldJ0RvxPcJjqzky5YukEA52K+uAahu\nieytH3CyV/njPkfh5lXU4o7Os6Gq7yDx03KlG+mK7N563oAVsQ0=\n=9Qys\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJlJm53bgKg1VtprNLCZvC3yYMYUdGI4lcd+2xdBKQJKCP/wEATXbUEGqRNk\nPzeuI9uzqBUI8CCfbCfwFrGgP68pkTkslrTD3hu5bFvkn2wzjKjwH5rxlgjxBGFY\ncu3wCJ5UELD0CA7/AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQOO1AjpEcvtWI9LA5ZLYyTwjxBGFYcuvwCLPhhqlH\nYGQZAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn//AQPVNMptjSt/YUYEgUQqLy8QjxBGFYcuvwCBoB5FTb9WhyAIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmfwEFtN728EhgPDzbJZiVQ+BOII8QRhWHLt8AipfqBhva/O9wCD3+MNLvkM\njiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 594dd651939ba736846d1106ed617884aacd5f13\nparent e3a3552a106bdad11bd4189a517927093d28203d\nauthor Jon Atack <jon@atack.com> 1631987893 +0200\ncommitter Jon Atack <jon@atack.com> 1633186536 +0200\n\nrpc: expose tried and reference_count fields in getnodeaddresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1febfb90bf28b9365e37c05289d479f906970d18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1febfb90bf28b9365e37c05289d479f906970d18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1febfb90bf28b9365e37c05289d479f906970d18/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3a3552a106bdad11bd4189a517927093d28203d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a3552a106bdad11bd4189a517927093d28203d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a3552a106bdad11bd4189a517927093d28203d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "68ce515044ce306dcb960d65ff186b6e0720dfd7",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1febfb90bf28b9365e37c05289d479f906970d18/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1febfb90bf28b9365e37c05289d479f906970d18/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=1febfb90bf28b9365e37c05289d479f906970d18",
        "patch": "@@ -873,6 +873,8 @@ static RPCHelpMan getnodeaddresses()\n                             {RPCResult::Type::STR, \"address\", \"The address of the node\"},\n                             {RPCResult::Type::NUM, \"port\", \"The port number of the node\"},\n                             {RPCResult::Type::STR, \"network\", \"The network (\" + Join(GetNetworkNames(), \", \") + \") the node connected through\"},\n+                            {RPCResult::Type::BOOL, \"tried\", \"Whether a connection to this node was successfully made and its address is in our addrman tried table\"},\n+                            {RPCResult::Type::NUM, \"reference_count\", /* optional */ true, \"The addrman new table reference count for the node address. Only returned if it is in our new table, i.e. \\\"tried\\\" is false\"},\n                         }},\n                     }\n                 },\n@@ -907,6 +909,10 @@ static RPCHelpMan getnodeaddresses()\n         obj.pushKV(\"address\", addr.ToStringIP());\n         obj.pushKV(\"port\", addr.GetPort());\n         obj.pushKV(\"network\", GetNetworkName(addr.GetNetClass()));\n+        obj.pushKV(\"tried\", addr.fInTried);\n+        if (!addr.fInTried) {\n+            obj.pushKV(\"reference_count\", addr.nRefCount);\n+        }\n         ret.push_back(obj);\n     }\n     return ret;"
      }
    ]
  },
  {
    "sha": "529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
    "node_id": "C_kwDOABII59oAKDUyOWU2M2Y3ZjY0YWZmMmViMzkyOWZkNTQwMDZiNTA3YWMwYjBhYjQ",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-18T19:25:06Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-02T14:55:41Z"
      },
      "message": "test: update coverage for getnodeaddresses, addpeeraddress\n\nwith the new getnodeaddresses \"tried\" and \"reference_count\" fields",
      "tree": {
        "sha": "8cd4695a5c0c0440e841656d7cd1c88366d54484",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8cd4695a5c0c0440e841656d7cd1c88366d54484"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFYcu4ACgkQT1chs9Dj\nkh0iHA//XdfL82BGkqQiLOSkJbR9XGUVLhcb4fRai8ST+6RbhG16nIx48mN9lohp\nsAUlelSZjK0Zc41GfENQ+TQOEf8GHhxvTEU6aOymoxGkcMSlRnByKMEY2E7olMTT\nMQYSwU0W8suiwhckGO1jveNpljZSOVHzAkxVYBASo3YJCETvj4KCk2soY64QoUjb\nuelgoLyaEojzOrYRWnTHAfqcustbSm57AOFzRrApcFIxpjXVJQeRanr2h96dkMhg\noj936HC6UzppElBTYohmULQNrbVIIcevH3dPsv+SN1EmV692Stp6/3+J+aX+Jyiw\nlcABc3nr7A2oJ18cer+lhv/TH6YZwn69g7JrAshrkx1+iNLmPz2/xwv80vPI7d8Z\nhoZvJ4QUgHxWvBoEW+imYGj3sFuNV+GKEYUEy5XOxY5gUhtEIVwImntzCgbA1AWg\no8NGluCNgkuMy/KssJARdnMR/NyogXKjgiA3wJ3I4kD0WR0C7DXgamFk9dRmj082\nW3K+kqvNyGJBYvrIuMDqAvsy0MNnRpn8kE+SsDCZMn/BZByvl4zI5pOhQgpV7wj/\nVg6GvwxF1mIdmJMU6Wf8ExoQbL76mg9v4wLOi4JLRFWGJpVxs1l+b/HhrCMljztW\n2g435uo2eqHqy/h1tcveP4mV4r4qt6IK2XJYUBPhiDiVrN9d3ds=\n=D01G\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAtnEYKHF0gSLPcafEipoV3Jge5tRurVU/vnLu1QfXSyCP/wEFa6Nwr2Gz2R\nwwUpSGyWfhcI8QRhWHLv8Ahs/h+SeGRDlACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQiZ0CQ/GvJes83t3V\n9/cY+QjxBGFYcu/wCMZMd3nIXgVlAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQs/vZ4MnbpPjKjkYTr80gFQjxBGFY\ncu/wCFvpk906pralAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BD7jXak6zYjvdIIIlzFU/ZYCPEEYVhy7/AINUvn\ni2tEbrgAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8cd4695a5c0c0440e841656d7cd1c88366d54484\nparent 1febfb90bf28b9365e37c05289d479f906970d18\nauthor Jon Atack <jon@atack.com> 1631993106 +0200\ncommitter Jon Atack <jon@atack.com> 1633186541 +0200\n\ntest: update coverage for getnodeaddresses, addpeeraddress\n\nwith the new getnodeaddresses \"tried\" and \"reference_count\" fields\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529e63f7f64aff2eb3929fd54006b507ac0b0ab4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1febfb90bf28b9365e37c05289d479f906970d18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1febfb90bf28b9365e37c05289d479f906970d18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1febfb90bf28b9365e37c05289d479f906970d18"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 20,
      "deletions": 15
    },
    "files": [
      {
        "sha": "2a560be46d23e2f48547f3c73b8997127efc11d9",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 20,
        "deletions": 15,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/529e63f7f64aff2eb3929fd54006b507ac0b0ab4/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/529e63f7f64aff2eb3929fd54006b507ac0b0ab4/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
        "patch": "@@ -41,6 +41,17 @@ def assert_net_servicesnames(servicesflag, servicenames):\n     assert servicesflag_generated == servicesflag\n \n \n+def assert_getnodeaddress(*, result, addr=None, net=\"ipv4\", tried=False, refcount=1):\n+    assert_equal(result[\"services\"], P2P_SERVICES)\n+    if addr:\n+        assert_equal(result[\"address\"], addr)\n+    assert_equal(result[\"port\"], 8333)\n+    assert_equal(result[\"network\"], net)\n+    assert_equal(result[\"tried\"], tried)\n+    if not tried:\n+        assert_equal(result[\"reference_count\"], refcount)\n+\n+\n class NetTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n@@ -215,18 +226,13 @@ def test_getnodeaddresses(self):\n         assert_greater_than(10000, len(node_addresses))\n         for a in node_addresses:\n             assert_greater_than(a[\"time\"], 1527811200)  # 1st June 2018\n-            assert_equal(a[\"services\"], P2P_SERVICES)\n             assert a[\"address\"] in imported_addrs\n-            assert_equal(a[\"port\"], 8333)\n-            assert_equal(a[\"network\"], \"ipv4\")\n+            assert_getnodeaddress(result=a)\n \n         # Test the IPv6 address.\n         res = self.nodes[0].getnodeaddresses(0, \"ipv6\")\n         assert_equal(len(res), 1)\n-        assert_equal(res[0][\"address\"], ipv6_addr)\n-        assert_equal(res[0][\"network\"], \"ipv6\")\n-        assert_equal(res[0][\"port\"], 8333)\n-        assert_equal(res[0][\"services\"], P2P_SERVICES)\n+        assert_getnodeaddress(result=res[0], addr=ipv6_addr, net=\"ipv6\")\n \n         # Test for the absence of onion and I2P addresses.\n         for network in [\"onion\", \"i2p\"]:\n@@ -260,11 +266,9 @@ def test_addpeeraddress(self):\n \n         self.log.debug(\"Test that adding a valid address to the tried table succeeds\")\n         assert_equal(node.addpeeraddress(address=\"1.2.3.4\", tried=True, port=8333), {\"success\": True})\n-        with node.assert_debug_log(expected_msgs=[\"Addrman checks started: new 0, tried 1, total 1\"]):\n-            addrs = node.getnodeaddresses(count=0)  # getnodeaddresses re-runs the addrman checks\n-            assert_equal(len(addrs), 1)\n-            assert_equal(addrs[0][\"address\"], \"1.2.3.4\")\n-            assert_equal(addrs[0][\"port\"], 8333)\n+        addrs = node.getnodeaddresses(count=0)\n+        assert_equal(len(addrs), 1)\n+        assert_getnodeaddress(result=addrs[0], addr=\"1.2.3.4\", tried=True)\n \n         self.log.debug(\"Test that adding an already-present tried address to the new and tried tables fails\")\n         for value in [True, False]:\n@@ -273,9 +277,10 @@ def test_addpeeraddress(self):\n \n         self.log.debug(\"Test that adding a second address, this time to the new table, succeeds\")\n         assert_equal(node.addpeeraddress(address=\"2.0.0.0\", port=8333), {\"success\": True})\n-        with node.assert_debug_log(expected_msgs=[\"Addrman checks started: new 1, tried 1, total 2\"]):\n-            addrs = node.getnodeaddresses(count=0)  # getnodeaddresses re-runs the addrman checks\n-            assert_equal(len(addrs), 2)\n+        addrs = sorted(node.getnodeaddresses(count=0), key=lambda k: k[\"address\"])\n+        assert_equal(len(addrs), 2)\n+        for n, addr, tried in [[0, \"1.2.3.4\", True], [1, \"2.0.0.0\", False]]:\n+            assert_getnodeaddress(result=addrs[n], addr=addr, tried=tried)\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "ad3c725a0c49d159b17067afc83f19e1ee463a3a",
    "node_id": "C_kwDOABII59oAKGFkM2M3MjVhMGM0OWQxNTliMTcwNjdhZmM4M2YxOWUxZWU0NjNhM2E",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-19T12:38:47Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-02T14:55:43Z"
      },
      "message": "test: improve asmap feature tests with getnodeaddresses#tried",
      "tree": {
        "sha": "ee3695564987b2a05c579c5481952954ca236a78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee3695564987b2a05c579c5481952954ca236a78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad3c725a0c49d159b17067afc83f19e1ee463a3a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFYcvAACgkQT1chs9Dj\nkh1UIA//enovYbB2SNUwjnRMO+++t3lIr7HnKzmXr4eY1Qo6NTr9iz3d9zb72lch\nSr+wXtqO9E1Nm2RkKp11WDj0eJtkPE80GGOvcOI29C2nKD6kTbwBDDqaDOqQvkmL\nKG5SpAiVvMEdA/ZQF8dCczbrtmH2l/dIV1pJimoJHIYroc+/uy5+7T4cpraqSIue\nIjxoat3QBAT6QsP/bifTHSipniA9MU1oN86FPinv29HBBRX1y3rAln6tBrpYG2hB\n77XAekeoXy7ghoq14/zelmdtCoX7AFRdYyY1FDQ1GzB640Ls4ZAJ3FFgMu5rZLx2\n2K27vZZrCMvp1YWpCfquEqD+tVImtY1EwtkMCS8RqZdey2ZZ0osYBpRwW2iiwWm5\n2DGqJ8jrgavEnHOI5oW7r8yNGW5NyVEBlwOi5Nd+g60m9k8CHhy7aIC3TAxgSFjV\nmrUzQuvs4pTU6yOSkN+4GlfPfJwBqT7lVpBc7oZWMsM+cLKDcXGHDukldszmhOKd\ny54hPcmg6pGagiy134h99alobFcAUsz02UFCjLhMdAV6FTQhoTqhljegZ7xCYoZ3\n4TQ/VKsK0RxveFLj9NWBF9wPKI/Dvhc5/Q6VHa6qenMSHSL2/9420A1ssMe7B4It\nbVdYZYMMCCascf7B7ARXxTLhoc3C92mej0rLgj6JRwOyXaeIGsY=\n=cUOw\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICH5Ci5hqQjHOtR1qADyJOAvHLN7In1HvZM6Fow0X8VoCP/wEEFRjFqG3Pdk\nve99zU7Dm5EI8QRhWHLx8AjbtXCiaEvfUQCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGqeGdLVBZuSEru4CVNU\nRKII8CBDYN/Jxh3PuUcwZzJ/bv30SQYhuc1LmmrjnlykirfzDAjxBGFYcvHwCGpd\nkOSgbptVAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BBvZpSExjiQgkX8fyzm588ZCPEguXMYbheScrcodzo0\ns+5lkCdAPs/joTKrkdkxBuldtwEI8CB9e9BRQIxa/DQXdwKTzZlvyEs5mIaPnBpl\nX3mYmQMjiQjxBGFYcvHwCFaezP9HMxNNAIPf4w0u+QyOKShodHRwczovL2Zpbm5l\neS5jYWxlbmRhci5ldGVybml0eXdhbGwuY29t8BD/x5mxZBxg7Uoe/vh2pI3kCPEE\nYVhy8fAIHUn0KL1/QusAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ee3695564987b2a05c579c5481952954ca236a78\nparent 529e63f7f64aff2eb3929fd54006b507ac0b0ab4\nauthor Jon Atack <jon@atack.com> 1632055127 +0200\ncommitter Jon Atack <jon@atack.com> 1633186543 +0200\n\ntest: improve asmap feature tests with getnodeaddresses#tried\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad3c725a0c49d159b17067afc83f19e1ee463a3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad3c725a0c49d159b17067afc83f19e1ee463a3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad3c725a0c49d159b17067afc83f19e1ee463a3a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529e63f7f64aff2eb3929fd54006b507ac0b0ab4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/529e63f7f64aff2eb3929fd54006b507ac0b0ab4"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "cd657ef0d4dca132a931dcbd3809e3665a6b4b24",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad3c725a0c49d159b17067afc83f19e1ee463a3a/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad3c725a0c49d159b17067afc83f19e1ee463a3a/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=ad3c725a0c49d159b17067afc83f19e1ee463a3a",
        "patch": "@@ -27,23 +27,28 @@\n import shutil\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n \n DEFAULT_ASMAP_FILENAME = 'ip_asn.map' # defined in src/init.cpp\n ASMAP = '../../src/test/data/asmap.raw' # path to unit test skeleton asmap\n VERSION = 'fec61fa21a9f46f3b17bdcd660d7f4cd90b966aad3aec593c99b35f0aca15853'\n+ADDRMAN = [[0, True], [1, False]]\n+\n \n def expected_messages(filename):\n     return [f'Opened asmap file \"{filename}\" (59 bytes) from disk',\n             f'Using asmap version {VERSION} for IP bucketing']\n \n+\n class AsmapTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [[\"-checkaddrman=1\"]]  # Do addrman checks on all operations.\n \n     def fill_addrman(self, node_id):\n         \"\"\"Add 1 tried address to the addrman, followed by 1 new address.\"\"\"\n-        for addr, tried in [[0, True], [1, False]]:\n+        for addr, tried in ADDRMAN:\n             self.nodes[node_id].addpeeraddress(address=f\"101.{addr}.0.0\", tried=tried, port=8333)\n \n     def test_without_asmap_arg(self):\n@@ -87,13 +92,11 @@ def test_asmap_interaction_with_addrman_containing_entries(self):\n         self.start_node(0, [\"-asmap\", \"-checkaddrman=1\"])\n         self.fill_addrman(node_id=0)\n         self.restart_node(0, [\"-asmap\", \"-checkaddrman=1\"])\n-        with self.node.assert_debug_log(\n-            expected_msgs=[\n-                \"Addrman checks started: new 1, tried 1, total 2\",\n-                \"Addrman checks completed successfully\",\n-            ]\n-        ):\n-            self.node.getnodeaddresses()  # getnodeaddresses re-runs the addrman checks\n+        addrs = sorted(self.node.getnodeaddresses(count=0), key=lambda k: k[\"address\"])\n+        assert_equal(len(addrs), 2)\n+        for n, tried in ADDRMAN:\n+            assert_equal(addrs[n][\"address\"], f\"101.{n}.0.0\")\n+            assert_equal(addrs[n][\"tried\"], tried)\n         os.remove(self.default_asmap)\n \n     def test_default_asmap_with_missing_file(self):"
      }
    ]
  }
]