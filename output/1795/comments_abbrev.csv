BitcoinPullTester,2012-09-08T04:32:03Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bd93f61c2abe5b19e77030fa5859bc370c789a3a for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-8384474,8384474,
gavinandresen,2012-09-18T23:19:32Z,Very exciting.\n\nDid you see this:\n  http://matthias.vallentin.net/blog/2011/06/a-garden-variety-of-bloom-filters/\n\nHe has a really interesting looking C++11 headers-only implementation here at github that might give you inspiration (e.g. I think he uses boost to do the hashing; he seems to get a ton done in a very small number of lines of code).\n   https://github.com/mavam/libbf\n,https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-8674203,8674203,
jgarzik,2012-09-27T01:09:24Z,"implementation ACK, I like it a lot.  This seems to match the initial sketch from @mikehearn and myself on IRC.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-8915356,8915356,
jgarzik,2012-10-03T21:25:09Z,"Poke, let's get some additional review on this.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-9122833,9122833,
mikehearn,2012-10-24T13:11:43Z,"Hey Matt, could you rebase this on top of ultraprune? I'm ready to start merging the bitcoinj side but want to test this with the latest code. Will do a review now-ish.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-9738630,9738630,
mikehearn,2012-10-24T13:45:47Z,ACK on this. Most of my comments are purely cosmetic except for the unit test commit being in the wrong place (it wouldn't compile in the order given).\n\nI guess we'll need a BIP? I'll start on one that documents what we've come up with.\n,https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-9739753,9739753,
TheBlueMatt,2012-11-02T20:45:28Z,"Thanks mike for the good review (as usual).  I updated the code to addresses most of the issues you mentioned.\nChanges:\n- many additional comments\n- filteradd is now limited to 1MB, any larger and the node gets a Misbehaving(100).\n- fRelayTxn now defaults to false - this means we will no longer relay tx inv message before receiving the remote peer's version message, if this irks anyone it can ",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10029681,10029681,
TheBlueMatt,2012-11-02T20:58:24Z,"@mikehearn there are a few comments which note what the protocol defines as spec (these are obviously up for discussion):\n- there is no formal definition for filter parameters for a filteradd command if no filter is loaded - it is up to the serving node (if the client doest care, why should the spec determine the parameters?)\n- as noted above, 1MB limit to filteradd\n- txes in MSG_FILTERED_BLOCK",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10030079,10030079,
BitcoinPullTester,2012-11-02T21:12:58Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/1860b72e356f0d4279b25bf1ca562ac00511eded for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10030478,10030478,
TheBlueMatt,2012-11-02T21:18:01Z,"@BitcoinPullTester hey, I wasnt done yet!\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10030614,10030614,
BitcoinPullTester,2012-11-03T11:23:12Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5be9d251b5901399c6f70b99f1c2bddc4e14e7ec for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10038439,10038439,
TheBlueMatt,2012-11-12T00:01:52Z,Added the requested nTweak value and merged sipa's work on partial merkle tree representations.  The BIP now needs rewritten and this is ready for second (third?) round reviews.\n,https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10274345,10274345,
sipa,2012-11-18T19:55:34Z,"Mostly ACK;\n- I'd prefer to have the Murmurhash3 implementation separate from CBloomFilter\n- The 0xFFFFFFFF/(n-1)_i seed value seems intended to result in large bit differences between the different hash function's seeds. Together with the tweak, however, the first and the last now get seeds tweak and tweak-1. I think something simpler like k1_i+k2*n+tweak is better (with k1 and k2 arbitrary lar",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10490567,10490567,
BitcoinPullTester,2012-11-27T18:56:58Z,"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/21e780e05c7b18ab318e57bd9e24961a34378e2d for test log.\n\nThis pull does not merge cleanly onto current master\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-10771393,10771393,
BitcoinPullTester,2012-12-18T09:09:34Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a5a72aa691296af6de92658ff998da120c4b34d8 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-11478680,11478680,
mikehearn,2013-01-09T14:34:34Z,"Can you add a new feature that lets clients opt out of auto-adding? Sipa points out that it's only necessary for wallets that contain outputs which don't require predictable data in the corresponding inputs, which (for now) is most of them. This should resolve the excessive expansion issues.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12046488,12046488,
gmaxwell,2013-01-09T14:47:26Z,"@mikehearn  Kind of an an unfortunate privacy loss for ones who do set it, and it still leaves the feature potentially useless for any who set it.  (But I agree on having the option, if for nothing else because it makes the load-balancing lark I suggested viable)\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12047118,12047118,
mikehearn,2013-01-09T15:11:28Z,"Well not really, you can still set the FP rate to whatever you want. If all\nyour outputs are pay-to-address then it's a no-op functionality-wise, the\nauto-adding didn't buy you anything. For the case where you have\npay-to-pubkey or other scripts, the client has to refresh the filter every\nso often .... it can be implemented in bcj later.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12048198,12048198,
gmaxwell,2013-01-09T18:09:18Z,"Setting that bit or not is still another anonymity set reduction, but I'm splitting hairs there ignore it.  I guess I don't have a good feel for how fast the filter fails and needs to be reset. If it's too fast periodic refreshes won't be sufficient (E.g. will the size of the refresh plus the unwanted data end up being more than just not using the filter).\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12058432,12058432,
mikehearn,2013-01-09T19:18:00Z,"I think we can explore different algorithms later. The exact choices will\ndepend on the users privacy preferences and device situation anyway.\n\nOn Wed, Jan 9, 2013 at 7:09 PM, Gregory Maxwell notifications@github.comwrote:\n\n> Setting that bit or not is still another anonymity set reduction, but I'm\n> splitting hairs there ignore it. I guess I don't have a good feel for how\n> fast the filter",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12061642,12061642,
TheBlueMatt,2013-01-11T03:44:02Z,Added a nFlags to let the peer pick how/when it wants the filter updated...also added a second two commits to make it possible to match an arbitrary script template as a discussion point (that second part is not yet tested).\nWould like comments.\n,https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12130821,12130821,
gavinandresen,2013-01-16T16:19:11Z,"Code review notes:\n\nI don't like the entire implementation of CPartialMerkleTree being stuffed into main.h, it should be its own .cpp/.h\n\nMessage handling looks good from a potential vulnerability point of view.\n\nNACK on the script.cpp / script.h changes -- they are unused (yes? I don't see where MatchesTemplate is used outside of script.cpp/.h) and I don't see unit tests for the new feature",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12326080,12326080,
TheBlueMatt,2013-01-16T16:58:49Z,"@gavinandresen Yes, after discussion I believe we are currently targeting skipping the 2 MatchesTemplate commits for 0.8 and maybe skipping those entirely depending on what we may need in the future.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12328294,12328294,
BitcoinPullTester,2013-01-16T19:49:05Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e1a4f3778cb90ba9f0d4e736752f78dad1703caa for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12336347,12336347,
TheBlueMatt,2013-01-16T19:52:54Z,"@gavinandresen moved it to main.cpp, is that ok for you?\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12336539,12336539,
gavinandresen,2013-01-16T20:59:45Z,"ACK, looks good.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-12339708,12339708,
rebroad,2013-03-27T09:45:37Z,So.. what was the BIP for these protocol changes? It would be nice if it could be referenced in the pull requests.\n,https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-15513639,15513639,
mikehearn,2013-03-27T10:26:33Z,"https://en.bitcoin.it/wiki/BIP_0037 as was discussed on the mailing list.  Regardless, this code was already merged and shipped months ago, it's a bit late to be commenting on it now. You can always open up new pull reqs if you want to change how the protocol works.\n",https://github.com/bitcoin/bitcoin/pull/1795#issuecomment-15515778,15515778,
mikehearn,2013-01-04T13:27:01Z,"If vData is too large, it will still be added to the filter. There needs to be an else block here.\n",https://github.com/bitcoin/bitcoin/pull/1795#discussion_r2549483,2549483,src/main.cpp
mikehearn,2013-01-04T13:27:16Z,Maybe a log message here would be appropriate?\n,https://github.com/bitcoin/bitcoin/pull/1795#discussion_r2549484,2549484,src/main.cpp
TheBlueMatt,2013-01-07T00:39:09Z,"yep, fixed.\n",https://github.com/bitcoin/bitcoin/pull/1795#discussion_r2561068,2561068,src/main.cpp
TheBlueMatt,2013-01-07T00:39:18Z,"Misbehaving already logs info on who/how much, it would be kinda nice to pass it a why/where in code param, but that should be in a separate pull.\n",https://github.com/bitcoin/bitcoin/pull/1795#discussion_r2561070,2561070,src/main.cpp
Diapolo,2013-01-11T19:28:47Z,Wouldn't it be nice if that 520 was a constant somewhere or a define? So it could be used for the `max size for a script data object` and in here.\n,https://github.com/bitcoin/bitcoin/pull/1795#discussion_r2622459,2622459,src/main.cpp
rebroad,2013-03-27T09:51:51Z,Somehow this doesn't feel like the best way to implement this....\n,https://github.com/bitcoin/bitcoin/pull/1795#discussion_r3547370,3547370,src/main.cpp
