Rspigler,2021-05-12 21:32:08,"Some thoughts:\n\nArguments in favor:\nMany people use HWWs. This will lead to an increase in Core full node use.\nGUI users don't self-compile (and shouldn't be expected to)\n~~Still opt-in for `bitcoind`~~\nAdvanced users can still compile GUI without\n\nArguments against:\nRequires boost::process\nMany security concerns were raised in this PR (https://github.com/bitcoin/bitcoin/pull/1",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-840110786,840110786,
DrahtBot,2021-05-13 02:56:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22100 (refactor: Clean up new wallet spend, receive files added #21207 by ryanofsky)\n* #21206 (refactor: Make CWalletTx ",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-840252802,840252802,
Sjors,2021-05-13 16:35:45,"The Win64 machine is failing to build the fuzz executable: `undefined reference to `ExternalSigner::GetDescriptors(int)'`. It's configured with `--disable-external-signer`, but that shouldn't matter...",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-840680585,840680585,
Sjors,2021-06-09 18:03:55,Rebased after  bitcoin-core/gui#4 was merged.,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-857923845,857923845,
fanquake,2021-06-10 01:38:53,"[Windows build failure](https://github.com/bitcoin/bitcoin/pull/21935/checks?check_run_id=2786475113):\n```bash\n/usr/bin/x86_64-w64-mingw32-ld: libbitcoin_wallet.a(libbitcoin_wallet_a-wallet.o):wallet.cpp:(.text+0x1011f): undefined reference to `ExternalSigner::GetDescriptors(int)'\n/usr/bin/x86_64-w64-mingw32-ld: libbitcoin_wallet.a(libbitcoin_wallet_a-external_signer_scriptpubkeyman.o):exter",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-858214155,858214155,
Sjors,2021-06-10 08:00:45,"@fanquake indeed. I was hoping a rebase would magically make it go away... https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-840680585\n\nI also haven't checked how this interacts with #22173.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-858403928,858403928,
achow101,2021-06-10 21:14:26,"> I also haven't checked how this interacts with #22173.\n\n#22173 can be reverted following the changes in this PR.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-859074650,859074650,
achow101,2021-06-10 22:29:08,The Windows linker error is because it is building without external signer enabled. I am able to replicate the same error on linux by using `--disable-external-signer`. I haven't been able to figure out why there's a linker error.,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-859123614,859123614,
hebasto,2021-06-11 01:42:14,"In the ""build: enable external signer by default"" commit all `--enable-external-signer` could be removed from CI tasks.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-859198704,859198704,
hebasto,2021-06-11 03:02:39,"The link error could be fixed with the following patch:\n```diff\n--- a/src/Makefile.am\n+++ b/src/Makefile.am\n@@ -399,6 +399,7 @@ endif\n libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(SQLITE_CFLAGS)\n libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_wallet_a_SOURCES = \\n+  external_signer.cpp \\n   wallet/coincontrol.cpp \\n   wallet/contex",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-859226912,859226912,
hebasto,2021-06-11 16:30:45,"Here is another possible fixup for the link error:\n```diff\n--- a/src/Makefile.test.include\n+++ b/src/Makefile.test.include\n@@ -160,7 +160,7 @@ BITCOIN_TESTS += \\n   wallet/test/scriptpubkeyman_tests.cpp\n \n FUZZ_SUITE_LD_COMMON +=\\n- $(LIBBITCOIN_WALLET) \\n+ $(LIBBITCOIN_WALLET) $(LIBBITCOIN_COMMON) \\n  $(SQLITE_LIBS) \\n  $(BDB_LIBS)\n \n```\n\nThe choice between two sugge",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-859701171,859701171,
Sjors,2021-06-13 17:22:59,"@hebasto I tried your second approach. The ExternalSigner class is independent of the wallet, e.g. `enumerate` can be used and later on we can support signing stuff without a wallet (similar to `signrawtransaction`)\n\nBut that change didn't help (`LIBBITCOIN_COMMON` is already part of `FUZZ_SUITE_LD_COMMON`).\n\nI'm able to reproduce on Linux as well, like @achow101. Using something like:\n",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-860244293,860244293,
hebasto,2021-06-13 17:54:17,"@Sjors \n\n> @hebasto I tried your second approach. The ExternalSigner class is independent of the wallet, e.g. `enumerate` can be used and later on we can support signing stuff without a wallet (similar to `signrawtransaction`)\n> \n> But that change didn't help (`LIBBITCOIN_COMMON` is already part of `FUZZ_SUITE_LD_COMMON`).\n\nIt is not about being a part, but about ordering.\n\n> I'm a",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-860247967,860247967,
Sjors,2021-06-13 19:25:23,"Odd, it indeed does work. Maybe I forgot to clean something the last time.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-860258577,860258577,
Sjors,2021-06-14 11:01:25,"Thanks. Will address the above comments if this needs rebase / touching.\n\n> Not related to this PR, but is there any reasons why `NetworkArg` and `m_chain` are not private in the `ExternalSigner` class?\n\nPossibly because in earlier iterations I would use them directly.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-860595584,860595584,
achow101,2021-06-14 19:38:26,ACK 718fdce93c83f971d5fc70fe53c74d8a2165381a,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-860941735,860941735,
Sjors,2021-06-15 14:21:17,"> Also, it looks like a bunch of review comments from #15382 were either just never implemented / followed up on. Any reason for that?\n\nI attempted to address several in #20614, but that was a dead end. Other things were done in master. Is there anything specific you're missing?\n\nI'll look into the above issues meanwhile. Some of that seems to have been missed in bitcoin-core/gui#4 , but n",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861541691,861541691,
Sjors,2021-06-15 15:00:13,Rebased and addressed some of the above comments. Will continue shortly with the `std::allocator` issue and the display address button.,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861573969,861573969,
Sjors,2021-06-15 16:08:34,"@promag I'm not sure what change you're proposing in https://github.com/bitcoin/bitcoin/pull/21935#pullrequestreview-682882043, but note that `model->node().externalSigners()` can be slow, since it calls `hwi.py enumerate` and the result is currently not cached.\n\n~@ryanofsky I'll add a clarification to the revert commit. Basically as of 9599db6 loading an external signer wallet will just work,",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861630857,861630857,
Sjors,2021-06-15 16:59:36,">> For manual bitcoind builds this feature is still opt-in.\n\n> Is this still true? It seems like external signer default is just changed from no to yes for the whole build. Is the option applied differently to different binaries somehow?\n\nYou're right, in an earlier incarnation of https://github.com/bitcoin-core/gui/pull/4 `configure.ac` would turn external signer support on by default if ",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861669953,861669953,
promag,2021-06-15 17:29:22,"> @promag I'm not sure what change you're proposing in [#21935 (review)](https://github.com/bitcoin/bitcoin/pull/21935#pullrequestreview-682882043), but note that `model->node().externalSigners()` can be slow, since it calls `hwi.py enumerate` and the result is currently not cached.\n\nRight! Anyway, not a problem now that #22173 is not reverted.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861691050,861691050,
Sjors,2021-06-15 17:38:38,"I added one commit that addresses a bunch of small issues raised in the GUI PR, mostly adding translation hints, and disabling some fields when support is not compiled.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861701869,861701869,
Rspigler,2021-06-15 23:42:15,Was [this](https://github.com/bitcoin/bitcoin/pull/15382#discussion_r464500701) ever fixed?,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-861903612,861903612,
Sjors,2021-06-16 08:27:19,"@Rspigler I attempted to in #20614, but got stuck. If someone can review that PR and provide some feedback, then I can rebase it and try again.\n\nI applied @achow101's [fuzz linker fix](https://github.com/bitcoin/bitcoin/pull/21935#discussion_r652117156) and moved that commit up.",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-862162030,862162030,
achow101,2021-06-16 16:46:41,ACK 2f5bdcbc31a2eeb7c11226a9e51c56f02ac807dd,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-862541942,862541942,
fanquake,2021-06-17 04:46:12,"Thanks @ryanofsky, @achow101, @hebasto, @promag, @Rspigler and everyone else for your input here.  ",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-862920494,862920494,
Rspigler,2021-06-21 04:05:06,Is there still a CI issue?,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-864708905,864708905,
jonatack,2021-06-21 13:19:38,"> Is there still a CI issue?\n\nNot sure it's related but the https://bitcoinbuilds.org Win64 job has been failing for a few days now with *configure: error: Boost::Process is required for external signer support, but not available!*",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-865027398,865027398,
Sjors,2021-06-21 13:29:57,@Rspigler @jonatack very likely related; the GUI build settings are hardcoded rather than using the config in ci: https://github.com/bitcoin-core/gui/pull/4#issuecomment-769859001 ,https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-865034728,865034728,
Rspigler,2021-06-21 21:34:29,"I don't know how I feel about this being merged when there is still an outstanding CI issue, it introduces a new circular dependency, and there are some serious upstream boost::process [issues](https://github.com/bitcoin/bitcoin/pull/15382#discussion_r465212138) and unresolved [followups](https://github.com/bitcoin/bitcoin/pull/20614)",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-865360599,865360599,
Sjors,2021-06-22 09:35:13,"@Rspigler the GUI CI is misconfigured, which is unrelated to this PR (and trivial to fix by whoever has access to it). It's caused problems with other commits that touch CI too, see e.g. https://github.com/bitcoin-core/gui/issues/327\n\nThe PR no longer introduces a circular dependency (see fc0eca31b33f87882e2aa329a3746d4e08af1985).\n\nIt makes sense to emphasise that this is still experimenta",https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-865823895,865823895,
ryanofsky,2021-05-12 20:54:54,"Would be nice to drop `#ifdef ENABLE_EXTERNAL_SIGNER` in the interface here and just return an empty vector in the implementation or throw a not-implemented exception. Cross-process interfaces are trying not to be conditional to avoid build complexity and fragile incompatibilities between builds.\n\nAlso maybe in general in this PR, preprocessor is a little more widely used that it needs to be. ",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r631393113,631393113,src/interfaces/node.h
Sjors,2021-05-13 13:35:47,"I added a commit to reduce `#ifdef ENABLE_EXTERNAL_SIGNER` usage, including in the interface. ",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r631814577,631814577,src/interfaces/node.h
meshcollider,2021-06-10 20:53:58,I think you should keep the comment for style,https://github.com/bitcoin/bitcoin/pull/21935#discussion_r649525144,649525144,src/wallet/external_signer_scriptpubkeyman.h
Sjors,2021-06-13 16:41:15,"I'm surprised the linter didn't pick that up, fixed.",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r650549771,650549771,src/wallet/external_signer_scriptpubkeyman.h
fanquake,2021-06-15 02:54:30,"yay for new circular dependencies 🙄. If this is going to be done, then this change should be in it's own commit, with an explanation of the issue, and why this is the fix. Not thrown in with f24268f5fbf37de8a3716bd862f86dd7b831e80d. Or, ideally, this code is fixed so that this isn't necessary.",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r651410470,651410470,src/Makefile.test.include
Sjors,2021-06-15 14:14:54,"All I can do here is split it into a separate commit and explain that I have no idea why it works. The [error messages](https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-858214155) that lead to this were utterly useless. I have no idea what code is broken, so no idea what needs repairing. I also never worked on fuzzer code, which doesn't help.",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r651835150,651835150,src/Makefile.test.include
ryanofsky,2021-06-15 14:36:38,"> All I can do here is split it into a separate commit and explain that I have no idea why it works. The [error messages](https://github.com/bitcoin/bitcoin/pull/21935#issuecomment-858214155) that lead to this were utterly useless. I have no idea what code is broken, so no idea what needs repairing. I also never worked on fuzzer code, which doesn't help.\n\nThis seems fine but I wonder what is c",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r651856666,651856666,src/Makefile.test.include
ryanofsky,2021-06-15 14:55:38,"In commit ""build: enable external signer by default"" (f24268f5fbf37de8a3716bd862f86dd7b831e80d)\n\nCould be nice to have a comment here explaining the return value. It seems unexpected that this would return an empty list instead of `std::optional<std::vector>` or maybe throwing an exception, because if this just returning an empty list the GUI doesn't seem to have a way to distinguish between n",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r651875760,651875760,src/node/interfaces.cpp
achow101,2021-06-15 20:11:57,"It looks like the linker error is simply due to the linking order. Everywhere else we have `LIBBITCOIN_WALLET`, it is always before `LIBBITCOIN_COMMON`. But if you go up to where `FUZZ_SUITE_LD_COMMON` is first set, you see that we will end up having `LIBBITCOIN_COMMON` set before `LIBBITCOIN_WALLET` which means that the linker will have problems linking things common things that the wallet uses. ",https://github.com/bitcoin/bitcoin/pull/21935#discussion_r652117156,652117156,src/Makefile.test.include
