laanwj,2017-09-06T20:36:58Z,"Concept ACK\n\n> 3. add a query string to the url ?debug=true which would cause RPCs to return additional debug information.\n\nI don't like adding query string arguments to the RPC mechanism. This would add yet another way of passing in arguments, which is confusing, IMO. If this is to be made optional, adding an optional debug argument to `get*info` seems to be a better way, as it works with",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-327605624,327605624,
TheBlueMatt,2017-09-06T20:50:44Z,utACK eb45b179abe2a79a990fb8c0a437654e8aa6b653,https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-327609017,327609017,
promag,2017-09-06T21:16:54Z,"Another approach is to create the generic read-only calls:\n- `liststates` returns an array of state names that can be queried;\n- `querystate state_name` returns the state value;\n- `waitstate state_name (timeout)` waits for state change or timeout and returns the state value;\n\nIn this case: `bitcoin-cli querystate initialblockdownload`.\n\nWell, just an approach as @jnewbery asked ðŸ˜„.",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-327615062,327615062,
laanwj,2017-09-06T21:30:51Z,"@promag The idea is ok, though one problem is that that creates cross-cutting RPC calls, whereas we've been moving to subsystem-specific ones for a while (this was one of the reasons to get rid of the generic `getinfo`).",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-327618020,327618020,
promag,2017-09-06T23:16:21Z,"> one problem is that that creates cross-cutting RPC calls\n\nI don't agree with that, it only forces the same RPC API for all states, but each subsystem deals with it's states, it's not like `getinfo` which is a mix of data.\n\nSo there would be a middleware where each subsystem must declare the available states and the RPC handler just delegates the state evaluation there.\n\nIn other word",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-327637723,327637723,
gmaxwell,2017-09-08T21:30:08Z,"Concept ACK but I'm somewhat concerned that IsInitialBlockDownload means something that is not equal to what the user means by ""in initial block download"". A node is unable to know if its caught up or not, and this is a somewhat reliable heuristic.  But for example, if you have a node partitioned off on some fork or something it may well return false here.   The concern might be addressable by jus",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328218570,328218570,
morcos,2017-09-11T18:31:49Z,"ACK eb45b17\n\nI agree slightly better to add some warning to the description of IBD, but that's a nit as far as I'm concerned",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328617996,328617996,
jnewbery,2017-09-12T15:09:55Z,"- Added wording ""The use and interpretation of this property may change between releases.""\n- added whitespace-only commit to fix up alignment for help text\n- rebased on master",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328882920,328882920,
MarcoFalke,2017-09-12T15:36:02Z,"Please remove the [WIP], when ready for review/merge",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328891324,328891324,
jnewbery,2017-09-12T16:33:13Z,"Ready for review/merge. PR title updated.\n\nTravis failed for `The command ""if [ -d ~/.bitcoin ]; then false; fi"" exited with 1.` Does the cache need to be cleared?",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328909171,328909171,
sipa,2017-09-12T16:40:05Z,@jnewbery Rebase to fix that.,https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328911284,328911284,
MarcoFalke,2017-09-12T16:41:33Z,This was already rebased and we have the rm -rf in travis' yaml. I think the issue needs more investigation. (Might want to revert from the travis' yaml temporarily).,https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328911733,328911733,
jnewbery,2017-10-26T15:58:34Z,"Rebased.\n\nI've updated the help text to:\n\n```""initialblockdownload"": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.```\n\nto address Greg's comment: https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-328218570\n\nNo functional changes.\n\nI think this is ready for merge.",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-339713882,339713882,
jnewbery,2017-10-26T16:12:15Z,Silent rebase conflict. Should be fixed now,https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-339717998,339717998,
luke-jr,2017-11-10T09:14:54Z,"The current commits only add comments to the functional test (claiming it tests it), but doesn't actually add any tests...?",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-343419358,343419358,
jnewbery,2017-11-10T17:53:28Z,">The current commits only add comments to the functional test (claiming it tests it), but doesn't actually add any tests...?\n\nhttps://github.com/bitcoin/bitcoin/pull/11258/files#diff-31748911f612ce1d09bc82d04f452592R62 adds `initialblockdownload` to the expected keys returned in `getblockchaininfo`",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-343541536,343541536,
promag,2017-11-10T18:45:26Z,Unless @luke-jr expects a test for the value.,https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-343554206,343554206,
jnewbery,2017-11-10T20:14:00Z,"> Unless @luke-jr expects a test for the value.\n\nAlmost none of the fields from `getblockchaininfo` are tested for value. PRs welcome to change that.\n\nIt's slightly frustrating that this is a minimal functionality PR that has been open for 2 months, ACK'ed by several people, rebased many times, and is now getting nitted because the test coverage for the new functionality doesn't exceed the",https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-343574538,343574538,
achow101,2017-11-10T20:16:37Z,utACK 11413646be2a6d0bf1c857753bfcec0af60c72b8,https://github.com/bitcoin/bitcoin/pull/11258#issuecomment-343575059,343575059,
MarcoFalke,2017-09-06T20:54:38Z,Maybe just mention that the meaning may change any time and it is only meant for debugging?,https://github.com/bitcoin/bitcoin/pull/11258#discussion_r137387393,137387393,src/rpc/blockchain.cpp
promag,2017-09-06T20:58:20Z,s/mode/state?,https://github.com/bitcoin/bitcoin/pull/11258#discussion_r137388493,137388493,src/rpc/blockchain.cpp
promag,2017-09-06T20:58:45Z,"Nit, align descriptions ðŸ™„.",https://github.com/bitcoin/bitcoin/pull/11258#discussion_r137388610,137388610,src/rpc/blockchain.cpp
promag,2017-09-06T21:01:22Z,"Instead of multiple `assert str in res`, how about `assert_equal(res.keys(), ...)`? This way if someone adds a new response field or changes the response, it must update this tests too.\n\nSo only assert known values, and exact keys.",https://github.com/bitcoin/bitcoin/pull/11258#discussion_r137389286,137389286,test/functional/blockchain.py
promag,2017-09-06T21:05:11Z,I think it is useful in general.,https://github.com/bitcoin/bitcoin/pull/11258#discussion_r137390175,137390175,src/rpc/blockchain.cpp
laanwj,2017-09-06T21:07:32Z,"I agree with @MarcoFalke, even though it might be useful in general this should mention that the interpretation (and possibly even use) of this is internal and subject to change.",https://github.com/bitcoin/bitcoin/pull/11258#discussion_r137390715,137390715,src/rpc/blockchain.cpp
