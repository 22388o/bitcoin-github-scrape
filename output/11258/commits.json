[
  {
    "sha": "bd9c18171dff394925acf7bbddf773780d1c66bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDljMTgxNzFkZmYzOTQ5MjVhY2Y3YmJkZGY3NzM3ODBkMWM2NmJj",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-09-06T18:05:28Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-10-26T16:11:09Z"
      },
      "message": "[rpc] Add initialblockdownload to getblockchaininfo",
      "tree": {
        "sha": "525062b9f6cf1c5dc22fa0d6cdd06854726a1888",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/525062b9f6cf1c5dc22fa0d6cdd06854726a1888"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd9c18171dff394925acf7bbddf773780d1c66bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd9c18171dff394925acf7bbddf773780d1c66bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd9c18171dff394925acf7bbddf773780d1c66bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd9c18171dff394925acf7bbddf773780d1c66bc/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57ee73990f1ce29916adfd99f93eae1ccea1a43b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57ee73990f1ce29916adfd99f93eae1ccea1a43b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57ee73990f1ce29916adfd99f93eae1ccea1a43b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "77504dd29e2f421b09b84525b67d460314460c90",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd9c18171dff394925acf7bbddf773780d1c66bc/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd9c18171dff394925acf7bbddf773780d1c66bc/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=bd9c18171dff394925acf7bbddf773780d1c66bc",
        "patch": "@@ -1135,6 +1135,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n             \"  \\\"mediantime\\\": xxxxxx,     (numeric) median time for the current best block\\n\"\n             \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n+            \"  \\\"initialblockdownload\\\": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n             \"  \\\"chainwork\\\": \\\"xxxx\\\"     (string) total amount of work in active chain, in hexadecimal\\n\"\n             \"  \\\"size_on_disk\\\": xxxxxx,   (numeric) the estimated size of the block and undo files on disk\\n\"\n             \"  \\\"pruned\\\": xx,             (boolean) if the blocks are subject to pruning\\n\"\n@@ -1183,6 +1184,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n     obj.push_back(Pair(\"mediantime\",            (int64_t)chainActive.Tip()->GetMedianTimePast()));\n     obj.push_back(Pair(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), chainActive.Tip())));\n+    obj.push_back(Pair(\"initialblockdownload\",  IsInitialBlockDownload()));\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     obj.push_back(Pair(\"size_on_disk\",          CalculateCurrentUsage()));\n     obj.push_back(Pair(\"pruned\",                fPruneMode));"
      },
      {
        "sha": "49fafbc9aa5de1aead0936a68fdf2cc4152688bb",
        "filename": "test/functional/blockchain.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd9c18171dff394925acf7bbddf773780d1c66bc/test/functional/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd9c18171dff394925acf7bbddf773780d1c66bc/test/functional/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/blockchain.py?ref=bd9c18171dff394925acf7bbddf773780d1c66bc",
        "patch": "@@ -5,6 +5,7 @@\n \"\"\"Test RPCs related to blockchainstate.\n \n Test the following RPCs:\n+    - getblockchaininfo\n     - gettxoutsetinfo\n     - getdifficulty\n     - getbestblockhash\n@@ -58,6 +59,7 @@ def _test_getblockchaininfo(self):\n             'chainwork',\n             'difficulty',\n             'headers',\n+            'initialblockdownload',\n             'mediantime',\n             'pruned',\n             'size_on_disk',"
      }
    ]
  },
  {
    "sha": "11413646be2a6d0bf1c857753bfcec0af60c72b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTQxMzY0NmJlMmE2ZDBiZjFjODU3NzUzYmZjZWMwYWY2MGM3MmI4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-09-12T15:07:42Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-10-26T16:11:13Z"
      },
      "message": "[trivial] (whitespace only) fix getblockchaininfo alignment",
      "tree": {
        "sha": "2756738c5857d9f4a7523c84d967789ab178da4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2756738c5857d9f4a7523c84d967789ab178da4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11413646be2a6d0bf1c857753bfcec0af60c72b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11413646be2a6d0bf1c857753bfcec0af60c72b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11413646be2a6d0bf1c857753bfcec0af60c72b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11413646be2a6d0bf1c857753bfcec0af60c72b8/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bd9c18171dff394925acf7bbddf773780d1c66bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd9c18171dff394925acf7bbddf773780d1c66bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd9c18171dff394925acf7bbddf773780d1c66bc"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 30,
      "deletions": 30
    },
    "files": [
      {
        "sha": "81e278fa124b39b43aaf21bd5c259393551fd49c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 30,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11413646be2a6d0bf1c857753bfcec0af60c72b8/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11413646be2a6d0bf1c857753bfcec0af60c72b8/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=11413646be2a6d0bf1c857753bfcec0af60c72b8",
        "patch": "@@ -1128,46 +1128,46 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"Returns an object containing various state info regarding blockchain processing.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,         (numeric) the current number of blocks processed in the server\\n\"\n-            \"  \\\"headers\\\": xxxxxx,        (numeric) the current number of headers we have validated\\n\"\n-            \"  \\\"bestblockhash\\\": \\\"...\\\", (string) the hash of the currently best block\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n-            \"  \\\"mediantime\\\": xxxxxx,     (numeric) median time for the current best block\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",              (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,             (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"headers\\\": xxxxxx,            (numeric) the current number of headers we have validated\\n\"\n+            \"  \\\"bestblockhash\\\": \\\"...\\\",       (string) the hash of the currently best block\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,         (numeric) the current difficulty\\n\"\n+            \"  \\\"mediantime\\\": xxxxxx,         (numeric) median time for the current best block\\n\"\n             \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n             \"  \\\"initialblockdownload\\\": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n-            \"  \\\"chainwork\\\": \\\"xxxx\\\"     (string) total amount of work in active chain, in hexadecimal\\n\"\n-            \"  \\\"size_on_disk\\\": xxxxxx,   (numeric) the estimated size of the block and undo files on disk\\n\"\n-            \"  \\\"pruned\\\": xx,             (boolean) if the blocks are subject to pruning\\n\"\n-            \"  \\\"pruneheight\\\": xxxxxx,    (numeric) lowest-height complete block stored (only present if pruning is enabled)\\n\"\n-            \"  \\\"automatic_pruning\\\": xx,  (boolean) whether automatic pruning is enabled (only present if pruning is enabled)\\n\"\n+            \"  \\\"chainwork\\\": \\\"xxxx\\\"           (string) total amount of work in active chain, in hexadecimal\\n\"\n+            \"  \\\"size_on_disk\\\": xxxxxx,       (numeric) the estimated size of the block and undo files on disk\\n\"\n+            \"  \\\"pruned\\\": xx,                 (boolean) if the blocks are subject to pruning\\n\"\n+            \"  \\\"pruneheight\\\": xxxxxx,        (numeric) lowest-height complete block stored (only present if pruning is enabled)\\n\"\n+            \"  \\\"automatic_pruning\\\": xx,      (boolean) whether automatic pruning is enabled (only present if pruning is enabled)\\n\"\n             \"  \\\"prune_target_size\\\": xxxxxx,  (numeric) the target size used by pruning (only present if automatic pruning is enabled)\\n\"\n-            \"  \\\"softforks\\\": [            (array) status of softforks in progress\\n\"\n+            \"  \\\"softforks\\\": [                (array) status of softforks in progress\\n\"\n             \"     {\\n\"\n-            \"        \\\"id\\\": \\\"xxxx\\\",        (string) name of softfork\\n\"\n-            \"        \\\"version\\\": xx,         (numeric) block version\\n\"\n-            \"        \\\"reject\\\": {            (object) progress toward rejecting pre-softfork blocks\\n\"\n-            \"           \\\"status\\\": xx,       (boolean) true if threshold reached\\n\"\n+            \"        \\\"id\\\": \\\"xxxx\\\",           (string) name of softfork\\n\"\n+            \"        \\\"version\\\": xx,          (numeric) block version\\n\"\n+            \"        \\\"reject\\\": {             (object) progress toward rejecting pre-softfork blocks\\n\"\n+            \"           \\\"status\\\": xx,        (boolean) true if threshold reached\\n\"\n             \"        },\\n\"\n             \"     }, ...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"bip9_softforks\\\": {          (object) status of BIP9 softforks in progress\\n\"\n-            \"     \\\"xxxx\\\" : {                (string) name of the softfork\\n\"\n-            \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n-            \"        \\\"bit\\\": xx,             (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n-            \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n-            \"        \\\"timeout\\\": xx,         (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n-            \"        \\\"since\\\": xx,           (numeric) height of the first block to which the status applies\\n\"\n-            \"        \\\"statistics\\\": {        (object) numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\\n\"\n-            \"           \\\"period\\\": xx,       (numeric) the length in blocks of the BIP9 signalling period \\n\"\n-            \"           \\\"threshold\\\": xx,    (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n-            \"           \\\"elapsed\\\": xx,      (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n-            \"           \\\"count\\\": xx,        (numeric) the number of blocks with the version bit set in the current period \\n\"\n-            \"           \\\"possible\\\": xx      (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n+            \"  \\\"bip9_softforks\\\": {           (object) status of BIP9 softforks in progress\\n\"\n+            \"     \\\"xxxx\\\" : {                 (string) name of the softfork\\n\"\n+            \"        \\\"status\\\": \\\"xxxx\\\",       (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n+            \"        \\\"bit\\\": xx,              (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n+            \"        \\\"startTime\\\": xx,        (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n+            \"        \\\"timeout\\\": xx,          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n+            \"        \\\"since\\\": xx,            (numeric) height of the first block to which the status applies\\n\"\n+            \"        \\\"statistics\\\": {         (object) numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\\n\"\n+            \"           \\\"period\\\": xx,        (numeric) the length in blocks of the BIP9 signalling period \\n\"\n+            \"           \\\"threshold\\\": xx,     (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n+            \"           \\\"elapsed\\\": xx,       (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n+            \"           \\\"count\\\": xx,         (numeric) the number of blocks with the version bit set in the current period \\n\"\n+            \"           \\\"possible\\\": xx       (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n             \"        }\\n\"\n             \"     }\\n\"\n             \"  }\\n\"\n-            \"  \\\"warnings\\\" : \\\"...\\\",         (string) any network and blockchain warnings.\\n\"\n+            \"  \\\"warnings\\\" : \\\"...\\\",           (string) any network and blockchain warnings.\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getblockchaininfo\", \"\")"
      }
    ]
  }
]