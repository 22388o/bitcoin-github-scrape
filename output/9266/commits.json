[
  {
    "sha": "df17fe046f11cf1d1dafa6d9bad9f84679611e83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjE3ZmUwNDZmMTFjZjFkMWRhZmE2ZDliYWQ5Zjg0Njc5NjExZTgz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-12-02T13:48:33Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-12-02T13:51:14Z"
      },
      "message": "Bugfix: Qt/RPCConsole: Put column enum in the right places\n\nQModelIndex::data argument is a role, not a column",
      "tree": {
        "sha": "e08cbadf99e3abf8de6ccb1495bf0c82a73e0832",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e08cbadf99e3abf8de6ccb1495bf0c82a73e0832"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df17fe046f11cf1d1dafa6d9bad9f84679611e83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df17fe046f11cf1d1dafa6d9bad9f84679611e83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df17fe046f11cf1d1dafa6d9bad9f84679611e83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df17fe046f11cf1d1dafa6d9bad9f84679611e83/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "addfdebe1a2ec45f718638f39a9ae3afb531805f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/addfdebe1a2ec45f718638f39a9ae3afb531805f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/addfdebe1a2ec45f718638f39a9ae3afb531805f"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f09f3e4181792ae777846711585ab5dc52bbb67d",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df17fe046f11cf1d1dafa6d9bad9f84679611e83/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df17fe046f11cf1d1dafa6d9bad9f84679611e83/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=df17fe046f11cf1d1dafa6d9bad9f84679611e83",
        "patch": "@@ -975,11 +975,11 @@ void RPCConsole::disconnectSelectedNode()\n         return;\n     \n     // Get selected peer addresses\n-    QList<QModelIndex> nodes = GUIUtil::getEntryData(ui->peerWidget, 0);\n+    QList<QModelIndex> nodes = GUIUtil::getEntryData(ui->peerWidget, PeerTableModel::NetNodeId);\n     for(int i = 0; i < nodes.count(); i++)\n     {\n         // Get currently selected peer address\n-        NodeId id = nodes.at(i).data(PeerTableModel::NetNodeId).toInt();\n+        NodeId id = nodes.at(i).data().toInt();\n         // Find the node, disconnect it and clear the selected node\n         if(g_connman->DisconnectNode(id))\n             clearSelectedNode();\n@@ -992,11 +992,11 @@ void RPCConsole::banSelectedNode(int bantime)\n         return;\n     \n     // Get selected peer addresses\n-    QList<QModelIndex> nodes = GUIUtil::getEntryData(ui->peerWidget, 0);\n+    QList<QModelIndex> nodes = GUIUtil::getEntryData(ui->peerWidget, PeerTableModel::NetNodeId);\n     for(int i = 0; i < nodes.count(); i++)\n     {\n         // Get currently selected peer address\n-        NodeId id = nodes.at(i).data(PeerTableModel::NetNodeId).toInt();\n+        NodeId id = nodes.at(i).data().toInt();\n \n \t// Get currently selected peer address\n \tint detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(id);\n@@ -1019,11 +1019,11 @@ void RPCConsole::unbanSelectedNode()\n         return;\n \n     // Get selected ban addresses\n-    QList<QModelIndex> nodes = GUIUtil::getEntryData(ui->banlistWidget, 0);\n+    QList<QModelIndex> nodes = GUIUtil::getEntryData(ui->banlistWidget, BanTableModel::Address);\n     for(int i = 0; i < nodes.count(); i++)\n     {\n         // Get currently selected ban address\n-        QString strNode = nodes.at(i).data(BanTableModel::Address).toString();\n+        QString strNode = nodes.at(i).data().toString();\n         CSubNet possibleSubnet;\n \n         LookupSubNet(strNode.toStdString().c_str(), possibleSubnet);"
      }
    ]
  }
]