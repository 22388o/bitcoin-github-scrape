DrahtBot,2019-06-21 15:05:53,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-504459832,504459832,
fanquake,2019-07-05 06:56:23,"@promag Can you rebase this on master; as it contains some bug fixes that would be nice to have when testing this PR, such as #16231.",https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508652311,508652311,
promag,2019-07-05 07:33:21,@fanquake done.,https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508661715,508661715,
hebasto,2019-07-05 15:02:44,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508786884,508786884,
fanquake,2019-07-06 02:24:50,"I had a quick test, and this PR on top of master (4f378ac30cf66178564620b4a8ca9cad7f031cc3) doesn't fix #15453.",https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508890460,508890460,
jonasschnelli,2019-07-17 09:17:22,Looks like the wallet encryption test fails... ,https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-512173628,512173628,
promag,2019-07-17 10:20:34,@jonasschnelli it was failing because of build timeouts.,https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-512195218,512195218,
promag,2019-09-06 00:43:06,@hebasto rebased and removed the unused declaration `std::vector<std::string> getWalletsAvailableToOpen() const;` - left over from other work.,https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-528661307,528661307,
promag,2019-06-21 15:07:43,"We can ditch these 500ms but I think it is ok.\n\nIf we decide to have 0ms then we can only replace `QTimer::singleShot(0, ` with `QMetaObject::invokeMethod` after bumping Qt to 5.10 - see https://doc.qt.io/qt-5/qmetaobject.html#invokeMethod-5.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r296276795,296276795,src/qt/walletcontroller.cpp
hebasto,2019-07-07 09:23:10,Same here.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300857815,300857815,src/qt/walletcontroller.cpp
hebasto,2019-07-07 09:23:17,"What is the point to pause?\nIf there is no clear and obvious rationale, `QTimer::singleShot()` should be avoided, IMO.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300857822,300857822,src/qt/walletcontroller.cpp
hebasto,2019-07-07 10:13:49,"```suggestion\nauto wallet = node().loadWallet(path, m_error_message, m_warning_message);\n```",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300859482,300859482,src/qt/walletcontroller.cpp
hebasto,2019-07-07 13:08:41,"Could naked `delete` be avoided in the new code? There are some techniques to achieve this.\nE.g., `m_activity_worker` could have a parent `QObject`, like `m_activity_thread` has.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300866345,300866345,src/qt/walletcontroller.cpp
hebasto,2019-07-07 13:09:04,Could naked `delete` be avoided in the new code?,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300866366,300866366,src/qt/walletcontroller.cpp
promag,2019-07-13 14:37:22,I prefer to have to have the type.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303207543,303207543,src/qt/walletcontroller.cpp
promag,2019-07-13 14:39:48,"No point, but not harm, can make it 0. The point is to call the lambda in the `worker()` thread.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303207597,303207597,src/qt/walletcontroller.cpp
hebasto,2019-07-13 19:58:26,"> The point is to call the lambda in the `worker()` thread.\n\nDid you consider [some other approaches](https://doc.qt.io/qt-5/qthread.html#details)?",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217128,303217128,src/qt/walletcontroller.cpp
hebasto,2019-07-13 20:08:18,"`OpenWalletActivity::finish()` could be inlined here.\n`OpenWalletActivity::open()` will remain small enough and readability will be improved, no?",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217394,303217394,src/qt/walletcontroller.cpp
promag,2019-07-13 20:10:56,"Yes, those require more QObject subclass,  signals and slots. IMO this approach is more clear.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217458,303217458,src/qt/walletcontroller.cpp
hebasto,2019-07-13 20:22:55,May I suggest to remove (make 0 ms) or comment 500 ms timeout?,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217751,303217751,src/qt/walletcontroller.cpp
promag,2019-07-13 21:34:58,No object could be `m_activity_worker` parent because it's the only object on its thread. Could connect `WalletController::destroyed` to its `deleteLater` or could use some smart pointer but honestly I think this is better.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219604,303219604,src/qt/walletcontroller.cpp
promag,2019-07-13 21:38:23,Ownership is given to `m_parent_widget` so that it shows up properly. If the activity finishes first then we delete it - note lines L174-L176 below.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219683,303219683,src/qt/walletcontroller.cpp
promag,2019-07-13 21:38:57,"Sure, I can make 0ms and leave a comment.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219697,303219697,src/qt/walletcontroller.cpp
promag,2019-07-13 21:43:58,"> OpenWalletActivity::finish() could be inlined here.\n\nAt the time I had 2 reasons to not do that:\n 1. `finish` could be called from multiple places, also initially it was a virtual method in the super class;\n 2. wanted to avoid nesting lambdas.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219788,303219788,src/qt/walletcontroller.cpp
hebasto,2019-07-14 05:08:37,"Could it be just\n```c++\n        finish();\n```\n?",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227669,303227669,src/qt/walletcontroller.cpp
hebasto,2019-07-14 05:20:40,"Could add\n```\n    connect(m_activity_thread, &QThread::finished, m_activity_worker, &QObject::deleteLater);\n```\nand remove following\n```\n   delete m_activity_worker;\n```\n?",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227866,303227866,src/qt/walletcontroller.cpp
hebasto,2019-07-14 05:25:12,You could use `QThread::finished` signal. See: https://github.com/bitcoin/bitcoin/pull/16261/files#r303227866,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227985,303227985,src/qt/walletcontroller.cpp
hebasto,2019-07-14 05:53:58,"Could add\n```\n    connect(this, &OpenWalletActivity::finished, m_progress_dialog, &QObject::deleteLater);\n```\nand remove above:\n```\n   delete m_progress_dialog;\n```\n?",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228603,303228603,src/qt/walletcontroller.cpp
hebasto,2019-07-14 05:55:18,Which cases require this line?,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228626,303228626,src/qt/walletcontroller.cpp
hebasto,2019-07-14 05:57:52,See: https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228603,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228671,303228671,src/qt/walletcontroller.cpp
promag,2019-07-14 09:11:53,"No, this `finish()` is not thread safe - it would be called from the worker thread.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303234807,303234807,src/qt/walletcontroller.cpp
hebasto,2019-07-14 09:39:34,">  ... this `finish()` is not thread safe - it would be called from the worker thread.\n\nRight. But thread safety is not required for `finish()`, IMO.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303235715,303235715,src/qt/walletcontroller.cpp
jonasschnelli,2019-07-16 15:46:55,Is there a benefit of using 500ms? Seems racy...,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303985639,303985639,src/qt/walletcontroller.cpp
promag,2019-07-16 16:57:38,Why? The thread is explicitly stopped (actually the event loop is stopped and the thread finishes) in `~WalletController()` so what better place to also delete the worker? I think explicit teardown is preferable.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304017833,304017833,src/qt/walletcontroller.cpp
promag,2019-07-16 17:26:59,Actually I think it's not required now. Initially I had `setAttribute(Qt::WA_DeleteOnClose)`. Removed.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304030521,304030521,src/qt/walletcontroller.cpp
hebasto,2019-07-18 07:11:38,"> Why?\n\nYour approach binds the life of `m_activity_worker` to the `WalletController` instance lifetime.\nIMO, as `m_activity_worker` lives in `m_activity_thread`, connecting to the `QThread::finished` signal seems more appropriate.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304764816,304764816,src/qt/walletcontroller.cpp
promag,2019-08-29 13:18:56,"Not really, I'll make 0 then.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319065010,319065010,src/qt/walletcontroller.cpp
promag,2019-08-29 13:36:27,"But it is, see `OpenWalletActivity::finish()`, it must be called on the GUI thread.",https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319073832,319073832,src/qt/walletcontroller.cpp
hebasto,2019-09-02 10:24:52,Correct.,https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319898628,319898628,src/qt/walletcontroller.cpp
