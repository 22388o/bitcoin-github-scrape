[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504459832",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-504459832",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 504459832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDQ1OTgzMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-21T15:05:53Z",
    "updated_at": "2019-09-06T01:49:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504459832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508652311",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508652311",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 508652311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODY1MjMxMQ==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-05T06:56:23Z",
    "updated_at": "2019-07-05T06:56:23Z",
    "author_association": "MEMBER",
    "body": "@promag Can you rebase this on master; as it contains some bug fixes that would be nice to have when testing this PR, such as #16231.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508652311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508661715",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508661715",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 508661715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODY2MTcxNQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-05T07:33:21Z",
    "updated_at": "2019-07-05T07:33:21Z",
    "author_association": "MEMBER",
    "body": "@fanquake done.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508661715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508786884",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508786884",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 508786884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODc4Njg4NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-05T15:02:44Z",
    "updated_at": "2019-07-05T15:02:44Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508786884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508890460",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-508890460",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 508890460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODg5MDQ2MA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-06T02:24:50Z",
    "updated_at": "2019-07-06T02:24:50Z",
    "author_association": "MEMBER",
    "body": "I had a quick test, and this PR on top of master (4f378ac30cf66178564620b4a8ca9cad7f031cc3) doesn't fix #15453.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508890460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512173628",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-512173628",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 512173628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE3MzYyOA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T09:17:22Z",
    "updated_at": "2019-07-17T09:17:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like the wallet encryption test fails... ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512173628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512195218",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-512195218",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 512195218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE5NTIxOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-17T10:20:34Z",
    "updated_at": "2019-07-17T10:20:46Z",
    "author_association": "MEMBER",
    "body": "@jonasschnelli it was failing because of build timeouts.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512195218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528661307",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#issuecomment-528661307",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16261",
    "id": 528661307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODY2MTMwNw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-06T00:43:06Z",
    "updated_at": "2019-09-06T00:43:06Z",
    "author_association": "MEMBER",
    "body": "@hebasto rebased and removed the unused declaration `std::vector<std::string> getWalletsAvailableToOpen() const;` - left over from other work.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528661307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296276795",
    "pull_request_review_id": 252878343,
    "id": 296276795,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjI3Njc5NQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We can ditch these 500ms but I think it is ok.\r\n\r\nIf we decide to have 0ms then we can only replace `QTimer::singleShot(0, ` with `QMetaObject::invokeMethod` after bumping Qt to 5.10 - see https://doc.qt.io/qt-5/qmetaobject.html#invokeMethod-5.",
    "created_at": "2019-06-21T15:07:43Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r296276795",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296276795"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r296276795"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296276795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300857815",
    "pull_request_review_id": 258617410,
    "id": 300857815,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg1NzgxNQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here.",
    "created_at": "2019-07-07T09:23:10Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300857815",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300857815"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300857815"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300857815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300857822",
    "pull_request_review_id": 258617410,
    "id": 300857822,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg1NzgyMg==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is the point to pause?\r\nIf there is no clear and obvious rationale, `QTimer::singleShot()` should be avoided, IMO.",
    "created_at": "2019-07-07T09:23:17Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300857822",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300857822"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300857822"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300857822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300859482",
    "pull_request_review_id": 258619035,
    "id": 300859482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg1OTQ4Mg==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);",
    "path": "src/qt/walletcontroller.cpp",
    "position": 125,
    "original_position": 129,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nauto wallet = node().loadWallet(path, m_error_message, m_warning_message);\r\n```",
    "created_at": "2019-07-07T10:13:49Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300859482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300859482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300859482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300859482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 192,
    "original_line": 192,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300866345",
    "pull_request_review_id": 258625965,
    "id": 300866345,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg2NjM0NQ==",
    "diff_hunk": "@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);\n+    m_activity_thread->start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n WalletController::~WalletController()\n {\n-    m_activity_thread.quit();\n-    m_activity_thread.wait();\n+    m_activity_thread->quit();\n+    m_activity_thread->wait();\n+    delete m_activity_worker;",
    "path": "src/qt/walletcontroller.cpp",
    "position": 39,
    "original_position": 39,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could naked `delete` be avoided in the new code? There are some techniques to achieve this.\r\nE.g., `m_activity_worker` could have a parent `QObject`, like `m_activity_thread` has.",
    "created_at": "2019-07-07T13:08:41Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300866345",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300866345"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300866345"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300866345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 46,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300866366",
    "pull_request_review_id": 258625965,
    "id": 300866366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg2NjM2Ng==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;",
    "path": "src/qt/walletcontroller.cpp",
    "position": 74,
    "original_position": 74,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could naked `delete` be avoided in the new code?",
    "created_at": "2019-07-07T13:09:04Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300866366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300866366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r300866366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300866366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 151,
    "original_line": 151,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303207543",
    "pull_request_review_id": 261543882,
    "id": 303207543,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIwNzU0Mw==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);",
    "path": "src/qt/walletcontroller.cpp",
    "position": 125,
    "original_position": 129,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I prefer to have to have the type.",
    "created_at": "2019-07-13T14:37:22Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303207543",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303207543"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303207543"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303207543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 192,
    "original_line": 192,
    "side": "RIGHT",
    "in_reply_to_id": 300859482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303207597",
    "pull_request_review_id": 261543882,
    "id": 303207597,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIwNzU5Nw==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No point, but not harm, can make it 0. The point is to call the lambda in the `worker()` thread.",
    "created_at": "2019-07-13T14:39:48Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303207597",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303207597"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303207597"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303207597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217128",
    "pull_request_review_id": 261554765,
    "id": 303217128,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxNzEyOA==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> The point is to call the lambda in the `worker()` thread.\r\n\r\nDid you consider [some other approaches](https://doc.qt.io/qt-5/qthread.html#details)?",
    "created_at": "2019-07-13T19:58:26Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217128",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217128"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217128"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217394",
    "pull_request_review_id": 261555038,
    "id": 303217394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxNzM5NA==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`OpenWalletActivity::finish()` could be inlined here.\r\n`OpenWalletActivity::open()` will remain small enough and readability will be improved, no?",
    "created_at": "2019-07-13T20:08:18Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217458",
    "pull_request_review_id": 261555104,
    "id": 303217458,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxNzQ1OA==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, those require more QObject subclass,  signals and slots. IMO this approach is more clear.",
    "created_at": "2019-07-13T20:10:56Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217458",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217458"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217458"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217751",
    "pull_request_review_id": 261555430,
    "id": 303217751,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxNzc1MQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "May I suggest to remove (make 0 ms) or comment 500 ms timeout?",
    "created_at": "2019-07-13T20:22:55Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217751",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217751"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303217751"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303217751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219604",
    "pull_request_review_id": 261557478,
    "id": 303219604,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxOTYwNA==",
    "diff_hunk": "@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);\n+    m_activity_thread->start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n WalletController::~WalletController()\n {\n-    m_activity_thread.quit();\n-    m_activity_thread.wait();\n+    m_activity_thread->quit();\n+    m_activity_thread->wait();\n+    delete m_activity_worker;",
    "path": "src/qt/walletcontroller.cpp",
    "position": 39,
    "original_position": 39,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No object could be `m_activity_worker` parent because it's the only object on its thread. Could connect `WalletController::destroyed` to its `deleteLater` or could use some smart pointer but honestly I think this is better.",
    "created_at": "2019-07-13T21:34:58Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219604",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219604"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219604"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 46,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 300866345
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219683",
    "pull_request_review_id": 261557583,
    "id": 303219683,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxOTY4Mw==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;",
    "path": "src/qt/walletcontroller.cpp",
    "position": 74,
    "original_position": 74,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ownership is given to `m_parent_widget` so that it shows up properly. If the activity finishes first then we delete it - note lines L174-L176 below.",
    "created_at": "2019-07-13T21:38:23Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219683",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219683"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219683"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 151,
    "original_line": 151,
    "side": "RIGHT",
    "in_reply_to_id": 300866366
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219697",
    "pull_request_review_id": 261557601,
    "id": 303219697,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxOTY5Nw==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sure, I can make 0ms and leave a comment.",
    "created_at": "2019-07-13T21:38:57Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219697",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219697"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219697"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219788",
    "pull_request_review_id": 261557711,
    "id": 303219788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIxOTc4OA==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> OpenWalletActivity::finish() could be inlined here.\r\n\r\nAt the time I had 2 reasons to not do that:\r\n 1. `finish` could be called from multiple places, also initially it was a virtual method in the super class;\r\n 2. wanted to avoid nesting lambdas.",
    "created_at": "2019-07-13T21:43:58Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303219788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303219788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227669",
    "pull_request_review_id": 261565635,
    "id": 303227669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIyNzY2OQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could it be just\r\n```c++\r\n        finish();\r\n```\r\n?",
    "created_at": "2019-07-14T05:08:37Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227866",
    "pull_request_review_id": 261565869,
    "id": 303227866,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIyNzg2Ng==",
    "diff_hunk": "@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);",
    "path": "src/qt/walletcontroller.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "b71017a295efb8f3602356e342bd8d68295027f2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could add\r\n```\r\n    connect(m_activity_thread, &QThread::finished, m_activity_worker, &QObject::deleteLater);\r\n```\r\nand remove following\r\n```\r\n   delete m_activity_worker;\r\n```\r\n?",
    "created_at": "2019-07-14T05:20:40Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227866",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227866"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227866"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227985",
    "pull_request_review_id": 261565977,
    "id": 303227985,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIyNzk4NQ==",
    "diff_hunk": "@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);\n+    m_activity_thread->start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n WalletController::~WalletController()\n {\n-    m_activity_thread.quit();\n-    m_activity_thread.wait();\n+    m_activity_thread->quit();\n+    m_activity_thread->wait();\n+    delete m_activity_worker;",
    "path": "src/qt/walletcontroller.cpp",
    "position": 39,
    "original_position": 39,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You could use `QThread::finished` signal. See: https://github.com/bitcoin/bitcoin/pull/16261/files#r303227866",
    "created_at": "2019-07-14T05:25:12Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227985",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227985"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303227985"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303227985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 46,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 300866345
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228603",
    "pull_request_review_id": 261566580,
    "id": 303228603,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIyODYwMw==",
    "diff_hunk": "@@ -150,23 +149,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+",
    "path": "src/qt/walletcontroller.cpp",
    "position": 90,
    "original_position": 90,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "b71017a295efb8f3602356e342bd8d68295027f2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could add\r\n```\r\n    connect(this, &OpenWalletActivity::finished, m_progress_dialog, &QObject::deleteLater);\r\n```\r\nand remove above:\r\n```\r\n   delete m_progress_dialog;\r\n```\r\n?",
    "created_at": "2019-07-14T05:53:58Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228603",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228603"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228603"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 157,
    "original_line": 157,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228626",
    "pull_request_review_id": 261566580,
    "id": 303228626,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIyODYyNg==",
    "diff_hunk": "@@ -150,23 +149,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 98,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "b71017a295efb8f3602356e342bd8d68295027f2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Which cases require this line?",
    "created_at": "2019-07-14T05:55:18Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228626",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228626"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228626"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 175,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228671",
    "pull_request_review_id": 261566660,
    "id": 303228671,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIyODY3MQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;",
    "path": "src/qt/walletcontroller.cpp",
    "position": 74,
    "original_position": 74,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See: https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228603",
    "created_at": "2019-07-14T05:57:52Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228671",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228671"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303228671"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303228671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 151,
    "original_line": 151,
    "side": "RIGHT",
    "in_reply_to_id": 300866366
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303234807",
    "pull_request_review_id": 261572967,
    "id": 303234807,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIzNDgwNw==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, this `finish()` is not thread safe - it would be called from the worker thread.",
    "created_at": "2019-07-14T09:11:53Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303234807",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303234807"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303234807"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303234807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303235715",
    "pull_request_review_id": 261573957,
    "id": 303235715,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIzNTcxNQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ">  ... this `finish()` is not thread safe - it would be called from the worker thread.\r\n\r\nRight. But thread safety is not required for `finish()`, IMO.",
    "created_at": "2019-07-14T09:39:34Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303235715",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303235715"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303235715"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303235715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303985639",
    "pull_request_review_id": 262514130,
    "id": 303985639,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzk4NTYzOQ==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there a benefit of using 500ms? Seems racy...",
    "created_at": "2019-07-16T15:46:55Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303985639",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303985639"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r303985639"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/303985639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304017833",
    "pull_request_review_id": 262554417,
    "id": 304017833,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDAxNzgzMw==",
    "diff_hunk": "@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);",
    "path": "src/qt/walletcontroller.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "b71017a295efb8f3602356e342bd8d68295027f2",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why? The thread is explicitly stopped (actually the event loop is stopped and the thread finishes) in `~WalletController()` so what better place to also delete the worker? I think explicit teardown is preferable.",
    "created_at": "2019-07-16T16:57:38Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304017833",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304017833"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304017833"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304017833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 303227866
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304030521",
    "pull_request_review_id": 262570153,
    "id": 304030521,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDAzMDUyMQ==",
    "diff_hunk": "@@ -150,23 +149,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 98,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "b71017a295efb8f3602356e342bd8d68295027f2",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually I think it's not required now. Initially I had `setAttribute(Qt::WA_DeleteOnClose)`. Removed.",
    "created_at": "2019-07-16T17:26:59Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304030521",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304030521"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304030521"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304030521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 175,
    "side": "RIGHT",
    "in_reply_to_id": 303228626
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304764816",
    "pull_request_review_id": 263465473,
    "id": 304764816,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDc2NDgxNg==",
    "diff_hunk": "@@ -29,15 +33,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n         getOrCreateWallet(std::move(wallet));\n     }\n \n-    m_activity_thread.start();\n+    m_activity_worker->moveToThread(m_activity_thread);",
    "path": "src/qt/walletcontroller.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "b71017a295efb8f3602356e342bd8d68295027f2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Why?\r\n\r\nYour approach binds the life of `m_activity_worker` to the `WalletController` instance lifetime.\r\nIMO, as `m_activity_worker` lives in `m_activity_thread`, connecting to the `QThread::finished` signal seems more appropriate.",
    "created_at": "2019-07-18T07:11:38Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304764816",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304764816"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r304764816"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304764816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 303227866
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319065010",
    "pull_request_review_id": 281451008,
    "id": 319065010,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTA2NTAxMA==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "a962b68ebfda1407a3fcb3239e4451934caaed21",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not really, I'll make 0 then.",
    "created_at": "2019-08-29T13:18:56Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319065010",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319065010"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319065010"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319065010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 205,
    "side": "RIGHT",
    "in_reply_to_id": 296276795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319073832",
    "pull_request_review_id": 281462614,
    "id": 319073832,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTA3MzgzMg==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But it is, see `OpenWalletActivity::finish()`, it must be called on the GUI thread.",
    "created_at": "2019-08-29T13:36:27Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319073832",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319073832"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319073832"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319073832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319898628",
    "pull_request_review_id": 282518365,
    "id": 319898628,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTg5ODYyOA==",
    "diff_hunk": "@@ -147,23 +146,64 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     delete wallet_model;\n }\n \n+WalletControllerActivity::WalletControllerActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : QObject(wallet_controller)\n+    , m_wallet_controller(wallet_controller)\n+    , m_parent_widget(parent_widget)\n+{\n+}\n \n-OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n-    : m_wallet_controller(wallet_controller)\n-    , m_name(name)\n-{}\n+WalletControllerActivity::~WalletControllerActivity()\n+{\n+    delete m_progress_dialog;\n+}\n \n-void OpenWalletActivity::open()\n+void WalletControllerActivity::showProgressDialog(const QString& label_text)\n {\n-    std::string error, warning;\n-    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n-    if (!warning.empty()) {\n-        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n-    }\n-    if (wallet) {\n-        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n-    } else {\n-        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    m_progress_dialog = new QProgressDialog(m_parent_widget);\n+\n+    m_progress_dialog->setLabelText(label_text);\n+    m_progress_dialog->setRange(0, 0);\n+    m_progress_dialog->setCancelButton(nullptr);\n+    m_progress_dialog->setWindowModality(Qt::ApplicationModal);\n+    GUIUtil::PolishProgressDialog(m_progress_dialog);\n+\n+    connect(m_progress_dialog, &QObject::destroyed, [this] {\n+        m_progress_dialog = nullptr;\n+    });\n+}\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+void OpenWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(m_warning_message));\n     }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n     Q_EMIT finished();\n }\n+\n+void OpenWalletActivity::open(const std::string& path)\n+{\n+    QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+\n+    QTimer::singleShot(500, worker(), [this, path] {\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+\n+        if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+        QTimer::singleShot(500, this, &OpenWalletActivity::finish);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "bc6d8a3662f0fb992073e5e80269a90a722d76e0",
    "original_commit_id": "5604d30a30a237160f06f647e151a8c425c6fde3",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Correct.",
    "created_at": "2019-09-02T10:24:52Z",
    "updated_at": "2019-09-05T23:05:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319898628",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319898628"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16261#discussion_r319898628"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16261"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319898628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 300857815
  }
]