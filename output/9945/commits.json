[
  {
    "sha": "6c1fb73dd1744b7281e5d506c14307daf1b72e1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzFmYjczZGQxNzQ0YjcyODFlNWQ1MDZjMTQzMDdkYWYxYjcyZTFm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-07T23:07:08Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-07T23:07:08Z"
      },
      "message": "Improve logging in bctest.py if there is a formatting mismatch",
      "tree": {
        "sha": "2af4e14054915d9ed6442fd3fb34480f86a5a303",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2af4e14054915d9ed6442fd3fb34480f86a5a303"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c1fb73dd1744b7281e5d506c14307daf1b72e1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c1fb73dd1744b7281e5d506c14307daf1b72e1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c1fb73dd1744b7281e5d506c14307daf1b72e1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c1fb73dd1744b7281e5d506c14307daf1b72e1f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47510ad3dd514e04caa364ff56ab2cc83569efb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47510ad3dd514e04caa364ff56ab2cc83569efb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47510ad3dd514e04caa364ff56ab2cc83569efb9"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c69f52afc3fec2702bc64a3426a37925312dc234",
        "filename": "src/test/bctest.py",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1fb73dd1744b7281e5d506c14307daf1b72e1f/src/test/bctest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1fb73dd1744b7281e5d506c14307daf1b72e1f/src/test/bctest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bctest.py?ref=6c1fb73dd1744b7281e5d506c14307daf1b72e1f",
        "patch": "@@ -10,6 +10,7 @@\n import binascii\n import difflib\n import logging\n+import pprint\n \n def parse_output(a, fmt):\n     \"\"\"Parse the output according to specified format.\n@@ -65,6 +66,7 @@ def bctest(testDir, testObj, exeext):\n         raise\n \n     if outputData:\n+        data_mismatch, formatting_mismatch = False, False\n         # Parse command output and expected output\n         try:\n             a_parsed = parse_output(outs[0], outputType)\n@@ -79,7 +81,7 @@ def bctest(testDir, testObj, exeext):\n         # Compare data\n         if a_parsed != b_parsed:\n             logging.error(\"Output data mismatch for \" + outputFn + \" (format \" + outputType + \")\")\n-            raise Exception\n+            data_mismatch = True\n         # Compare formatting\n         if outs[0] != outputData:\n             error_message = \"Output formatting mismatch for \" + outputFn + \":\\n\"\n@@ -88,7 +90,9 @@ def bctest(testDir, testObj, exeext):\n                                                           fromfile=outputFn,\n                                                           tofile=\"returned\"))\n             logging.error(error_message)\n-            raise Exception\n+            formatting_mismatch = True\n+\n+        assert not data_mismatch and not formatting_mismatch\n \n     # Compare the return code to the expected return code\n     wantRC = 0\n@@ -115,7 +119,9 @@ def bctester(testDir, input_basename, buildenv):\n             failed_testcases.append(testObj[\"description\"])\n \n     if failed_testcases:\n-        logging.error(\"FAILED TESTCASES: [\" + \", \".join(failed_testcases) + \"]\")\n+        error_message = \"FAILED_TESTCASES:\\n\"\n+        error_message += pprint.pformat(failed_testcases, width=400)\n+        logging.error(error_message)\n         sys.exit(1)\n     else:\n         sys.exit(0)"
      }
    ]
  }
]