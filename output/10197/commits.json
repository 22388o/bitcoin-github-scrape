[
  {
    "sha": "c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODViMDgwY2M3MDVmMzBmOTk2NjJhN2JlMmEyYTA0ZThlNWU1OGVl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-12T14:41:13Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-17T14:31:55Z"
      },
      "message": "[test] add warnings to test_runner",
      "tree": {
        "sha": "0b7f053f20192dc21d7ee190b54869b1efee6aa7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b7f053f20192dc21d7ee190b54869b1efee6aa7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c85b080cc705f30f99662a7be2a2a04e8e5e58ee/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b44adf92342ad4f9c343ba29c081a91687932936",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b44adf92342ad4f9c343ba29c081a91687932936",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b44adf92342ad4f9c343ba29c081a91687932936"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5db2088843170e0fe65fd08d81b443dddceb0a05",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c85b080cc705f30f99662a7be2a2a04e8e5e58ee/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c85b080cc705f30f99662a7be2a2a04e8e5e58ee/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
        "patch": "@@ -244,6 +244,17 @@ def main():\n     run_tests(test_list, config[\"environment\"][\"SRCDIR\"], config[\"environment\"][\"BUILDDIR\"], config[\"environment\"][\"EXEEXT\"], args.jobs, args.coverage, passon_args)\n \n def run_tests(test_list, src_dir, build_dir, exeext, jobs=1, enable_coverage=False, args=[]):\n+    # Warn if bitcoind is already running (unix only)\n+    try:\n+        if subprocess.check_output([\"pidof\", \"bitcoind\"]) is not None:\n+            print(\"%sWARNING!%s There is already a bitcoind process running on this system. Tests may fail unexpectedly due to resource contention!\" % (BOLD[1], BOLD[0]))\n+    except (OSError, subprocess.SubprocessError):\n+        pass\n+\n+    # Warn if there is a cache directory\n+    cache_dir = \"%s/test/cache\" % build_dir\n+    if os.path.isdir(cache_dir):\n+        print(\"%sWARNING!%s There is a cache directory here: %s. If tests fail unexpectedly, try deleting the cache directory.\" % (BOLD[1], BOLD[0], cache_dir))\n \n     #Set env vars\n     if \"BITCOIND\" not in os.environ:\n@@ -252,7 +263,7 @@ def run_tests(test_list, src_dir, build_dir, exeext, jobs=1, enable_coverage=Fal\n     tests_dir = src_dir + '/test/functional/'\n \n     flags = [\"--srcdir={}/src\".format(build_dir)] + args\n-    flags.append(\"--cachedir=%s/test/cache\" % build_dir)\n+    flags.append(\"--cachedir=%s\" % cache_dir)\n \n     if enable_coverage:\n         coverage = RPCCoverage()\n@@ -407,9 +418,10 @@ def check_script_list(src_dir):\n     python_files = set([t for t in os.listdir(script_dir) if t[-3:] == \".py\"])\n     missed_tests = list(python_files - set(map(lambda x: x.split()[0], ALL_SCRIPTS + NON_SCRIPTS)))\n     if len(missed_tests) != 0:\n-        print(\"The following scripts are not being run:\" + str(missed_tests))\n-        print(\"Check the test lists in test_runner.py\")\n-        sys.exit(1)\n+        print(\"%sWARNING!%s The following scripts are not being run: %s. Check the test lists in test_runner.py.\" % (BOLD[1], BOLD[0], str(missed_tests)))\n+        if os.getenv('TRAVIS') == 'true':\n+            # On travis this warning is an error to prevent merging incomplete commits into master\n+            sys.exit(1)\n \n class RPCCoverage(object):\n     \"\"\""
      }
    ]
  },
  {
    "sha": "08e51c1c03211caa363bc4c24a82440347988e56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGU1MWMxYzAzMjExY2FhMzYzYmM0YzI0YTgyNDQwMzQ3OTg4ZTU2",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-12T15:01:31Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-17T14:31:55Z"
      },
      "message": "[tests] Remove cache directory by default when running test_runner",
      "tree": {
        "sha": "d89343120e3c7dc69d1d9732722dc3eef4191187",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d89343120e3c7dc69d1d9732722dc3eef4191187"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08e51c1c03211caa363bc4c24a82440347988e56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e51c1c03211caa363bc4c24a82440347988e56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08e51c1c03211caa363bc4c24a82440347988e56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e51c1c03211caa363bc4c24a82440347988e56/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c85b080cc705f30f99662a7be2a2a04e8e5e58ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c85b080cc705f30f99662a7be2a2a04e8e5e58ee"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "394d62a85eecccaa0b0a0675fec828969d13217d",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08e51c1c03211caa363bc4c24a82440347988e56/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08e51c1c03211caa363bc4c24a82440347988e56/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=08e51c1c03211caa363bc4c24a82440347988e56",
        "patch": "@@ -163,6 +163,7 @@ def main():\n     parser.add_argument('--force', '-f', action='store_true', help='run tests even on platforms where they are disabled by default (e.g. windows).')\n     parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n     parser.add_argument('--jobs', '-j', type=int, default=4, help='how many test scripts to run in parallel. Default=4.')\n+    parser.add_argument('--keepcache', '-k', action='store_true', help='the default behavior is to flush the cache directory on startup. --keepcache retains the cache from the previous testrun.')\n     parser.add_argument('--quiet', '-q', action='store_true', help='only print results summary and failure logs')\n     parser.add_argument('--nozmq', action='store_true', help='do not run the zmq tests')\n     args, unknown_args = parser.parse_known_args()\n@@ -241,6 +242,9 @@ def main():\n \n     check_script_list(config[\"environment\"][\"SRCDIR\"])\n \n+    if not args.keepcache:\n+        shutil.rmtree(\"%s/test/cache\" % config[\"environment\"][\"BUILDDIR\"], ignore_errors=True)\n+\n     run_tests(test_list, config[\"environment\"][\"SRCDIR\"], config[\"environment\"][\"BUILDDIR\"], config[\"environment\"][\"EXEEXT\"], args.jobs, args.coverage, passon_args)\n \n def run_tests(test_list, src_dir, build_dir, exeext, jobs=1, enable_coverage=False, args=[]):"
      }
    ]
  }
]