[
  {
    "sha": "c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2QyYzAzNWZhNGFjY2Y2ZjA0ZTRjZTA4YmY3NDk3MmIwOGVkYjEz",
    "commit": {
      "author": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-04-06T07:29:13Z"
      },
      "committer": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-04-10T13:28:19Z"
      },
      "message": "Support Tor Single Onion Service",
      "tree": {
        "sha": "8f21ba9f15afbe6c490ce71c34eaf277e6a2033d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f21ba9f15afbe6c490ce71c34eaf277e6a2033d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/comments",
    "author": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7e73eafa139c29a38f73ab697e2e967a386908d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7e73eafa139c29a38f73ab697e2e967a386908d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7e73eafa139c29a38f73ab697e2e967a386908d"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 38,
      "deletions": 11
    },
    "files": [
      {
        "sha": "2a3de22c7b41a758029717c2c1b4c96abeabcb08",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
        "patch": "@@ -381,7 +381,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-externalip=<ip>\", _(\"Specify your own public address\"));\n     strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), DEFAULT_FORCEDNSSEED));\n     strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\"));\n-    strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Automatically create Tor hidden service (default: %d)\"), DEFAULT_LISTEN_ONION));\n+    strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Run Tor hidden service (0 - disabled, 1 - normal mode, 2 - single onion service, default: %s)\"), DEFAULT_LISTEN_ONION));\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n     strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXRECEIVEBUFFER));\n     strUsage += HelpMessageOpt(\"-maxsendbuffer=<n>\", strprintf(_(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXSENDBUFFER));\n@@ -761,7 +761,7 @@ void InitParameterInteraction()\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n         if (SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-listenonion\", false))\n+        if (SoftSetArg(\"-listenonion\", \"0\"))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -listenonion=0\\n\", __func__);\n     }\n \n@@ -1625,7 +1625,12 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     //// debug print\n     LogPrintf(\"mapBlockIndex.size() = %u\\n\",   mapBlockIndex.size());\n     LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n-    if (GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n+\n+    // Onion listen mode\n+    std::string listenOnion = GetArg(\"-listenonion\", DEFAULT_LISTEN_ONION);\n+    if (!(listenOnion == \"0\" || listenOnion == \"1\" || listenOnion == \"2\"))\n+        return InitError(\"listenonion mode should be 0 (disabled), 1 (normal) or 2 (non-anonymous).\");\n+    if (listenOnion != \"1\")\n         StartTorControl(threadGroup, scheduler);\n \n     Discover(threadGroup);"
      },
      {
        "sha": "309c002e1556b9c9e1cfe6ca15de960025fb92f9",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 7,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
        "patch": "@@ -31,6 +31,8 @@\n \n /** Default control port */\n const std::string DEFAULT_TOR_CONTROL = \"127.0.0.1:9051\";\n+/** Default listen mode */\n+const std::string DEFAULT_LISTEN_ONION = \"0\";\n /** Tor cookie size (from control-spec.txt) */\n static const int TOR_COOKIE_SIZE = 32;\n /** Size of client/server nonce for SAFECOOKIE */\n@@ -352,10 +354,17 @@ static bool WriteBinaryFile(const std::string &filename, const std::string &data\n /** Controller that connects to Tor control socket, authenticate, then create\n  * and maintain a ephemeral hidden service.\n  */\n+\n+enum ListenOnionMode {\n+    LISTEN_ONION_DISABLED,\n+    LISTEN_ONION_NORMAL,\n+    LISTEN_ONION_NON_ANONYMOUS\n+};\n+\n class TorController\n {\n public:\n-    TorController(struct event_base* base, const std::string& target);\n+    TorController(struct event_base* base, const std::string& target, ListenOnionMode mode);\n     ~TorController();\n \n     /** Get name fo file to store private key in */\n@@ -372,6 +381,8 @@ class TorController\n     bool reconnect;\n     struct event *reconnect_ev;\n     float reconnect_timeout;\n+    /** Flag for Single Onion Service */\n+    ListenOnionMode listen_onion_mode;\n     CService service;\n     /** Cookie for SAFECOOKIE auth */\n     std::vector<uint8_t> cookie;\n@@ -395,10 +406,11 @@ class TorController\n     static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n };\n \n-TorController::TorController(struct event_base* _base, const std::string& _target):\n+TorController::TorController(struct event_base* _base, const std::string& _target, ListenOnionMode mode):\n     base(_base),\n     target(_target), conn(base), reconnect(true), reconnect_ev(0),\n-    reconnect_timeout(RECONNECT_TIMEOUT_START)\n+    reconnect_timeout(RECONNECT_TIMEOUT_START),\n+    listen_onion_mode(mode)\n {\n     reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n     if (!reconnect_ev)\n@@ -475,8 +487,11 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n         // Request hidden service, redirect port.\n         // Note that the 'virtual' port doesn't have to be the same as our internal port, but this is just a convenient\n         // choice.  TODO; refactor the shutdown sequence some day.\n-        _conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, GetListenPort(), GetListenPort()),\n-            boost::bind(&TorController::add_onion_cb, this, _1, _2));\n+        std::string cmd =\n+            strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i %s\", private_key,\n+                      GetListenPort(), GetListenPort(),\n+                      (listen_onion_mode == LISTEN_ONION_NON_ANONYMOUS) ? \"flags=NonAnonymous\" : \"\");\n+        _conn.Command(cmd, boost::bind(&TorController::add_onion_cb, this, _1, _2));\n     } else {\n         LogPrintf(\"tor: Authentication failed\\n\");\n     }\n@@ -668,8 +683,15 @@ static boost::thread torControlThread;\n \n static void TorControlThread()\n {\n-    TorController ctrl(gBase, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n-\n+    std::string listen_onion_flag = GetArg(\"-listenonion\", DEFAULT_LISTEN_ONION);\n+    ListenOnionMode listen_onion_mode;\n+    if (listen_onion_flag == \"1\")\n+        listen_onion_mode = LISTEN_ONION_NORMAL;\n+    else if (listen_onion_flag == \"2\")\n+        listen_onion_mode = LISTEN_ONION_NON_ANONYMOUS;\n+    else\n+        listen_onion_mode = LISTEN_ONION_DISABLED;\n+    TorController ctrl(gBase, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL), listen_onion_mode);\n     event_base_dispatch(gBase);\n }\n "
      },
      {
        "sha": "1ac6611950c74701924bfa01fb99135720cdf4e2",
        "filename": "src/torcontrol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7d2c035fa4accf6f04e4ce08bf74972b08edb13/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
        "patch": "@@ -11,7 +11,7 @@\n #include \"scheduler.h\"\n \n extern const std::string DEFAULT_TOR_CONTROL;\n-static const bool DEFAULT_LISTEN_ONION = true;\n+extern const std::string DEFAULT_LISTEN_ONION;\n \n void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler);\n void InterruptTorControl();"
      }
    ]
  },
  {
    "sha": "1d25dd7744ab13d3cecf9908fb62d726c29ae4d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDI1ZGQ3NzQ0YWIxM2QzY2VjZjk5MDhmYjYyZDcyNmMyOWFlNGQ1",
    "commit": {
      "author": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-04-07T21:25:31Z"
      },
      "committer": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-04-10T13:28:19Z"
      },
      "message": "Document listenonion flag modes",
      "tree": {
        "sha": "4046d2ed4d9f00f62d53755391bb00edf5d94cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4046d2ed4d9f00f62d53755391bb00edf5d94cb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d25dd7744ab13d3cecf9908fb62d726c29ae4d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d25dd7744ab13d3cecf9908fb62d726c29ae4d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d25dd7744ab13d3cecf9908fb62d726c29ae4d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d25dd7744ab13d3cecf9908fb62d726c29ae4d5/comments",
    "author": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7d2c035fa4accf6f04e4ce08bf74972b08edb13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7d2c035fa4accf6f04e4ce08bf74972b08edb13"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "67443660953421ed0e34856fe19d5944c3841937",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d25dd7744ab13d3cecf9908fb62d726c29ae4d5/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d25dd7744ab13d3cecf9908fb62d726c29ae4d5/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=1d25dd7744ab13d3cecf9908fb62d726c29ae4d5",
        "patch": "@@ -102,7 +102,9 @@ affect the number of available .onion nodes.\n This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n-To show verbose debugging information, pass `-debug=tor`.\n+To show verbose debugging information, pass `-debug=tor`. Hidden service can also be\n+run in Single Onion Service mode which was introduced in Tor version 0.2.9.8 and exchanges\n+service anonymity for connection speed up. This can be enabled with `-listenonion=2`.\n \n Connecting to Tor's control socket API requires one of two authentication methods to be \n configured. For cookie authentication the user running bitcoind must have write access "
      }
    ]
  }
]