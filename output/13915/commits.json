[
  {
    "sha": "fa85c985edbfd297aefb613445deab37c8769753",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTg1Yzk4NWVkYmZkMjk3YWVmYjYxMzQ0NWRlYWIzN2M4NzY5NzUz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-08T15:24:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-10T18:09:19Z"
      },
      "message": "qa: Add p2p_invalid_locator test",
      "tree": {
        "sha": "9aba137a23638c981dc0a509b592b60a4974cebe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9aba137a23638c981dc0a509b592b60a4974cebe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa85c985edbfd297aefb613445deab37c8769753",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbbdTPAAoJEM4rdWl+aaVI/aML/29Lf+eikM/cbb0DOkE+011v\n/JbESaIumXmiE1CaUoBa8D1v94gntV5PSwI6Pcftg3OwrkBTDG8Q8v97aZnGmbLh\nqT6bdU6F9xhh+G8x/WnBBnUdAhE/nMUYAVeHRKz8yKIsxN1K2zowCUYU1QiQecnU\nBVKg7VF2Td69NjlTroEeyYB2LZEPB+TsE2prjMooL+mFYuoX8QjGm5ZnG+VAf7h0\n1If14lA/gSxN4AYBUm69SrCZzyWValNUSM0a2KOghkMGJaNZEuTKzuWeS7e1n4NZ\nVjTMp5I9HxBaErdRP9Ugt9jFnX0rsOkhAqVHwGBDH55G3vQoq1Cif7kf4EnJ23Ae\nGDMsJbJMaFH5DTnQXjYS2Xu4xapDtjVMWkpUP0Vy53BQnWxu87XcXo5Fp6d/cJVe\n47fM4k64q7ArVopp9pvIeC1cMnClo08IdRyXgDpk6ObZZArrONeNmkCUcaBa4Q76\nzrocBkCZ06vlh/wGtkj3Op5P3Sh3UPs1+Xm2oVrFEg==\n=jP8q\n-----END PGP SIGNATURE-----",
        "payload": "tree 9aba137a23638c981dc0a509b592b60a4974cebe\nparent e254ff5d53b79bee29203b965fca572f218bff54\nauthor MarcoFalke <falke.marco@gmail.com> 1533741899 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1533924559 -0400\n\nqa: Add p2p_invalid_locator test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa85c985edbfd297aefb613445deab37c8769753",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa85c985edbfd297aefb613445deab37c8769753",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa85c985edbfd297aefb613445deab37c8769753/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e254ff5d53b79bee29203b965fca572f218bff54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e254ff5d53b79bee29203b965fca572f218bff54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e254ff5d53b79bee29203b965fca572f218bff54"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 54,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3b1654f920775cf8b6488f2272d302b507cf7acc",
        "filename": "test/functional/p2p_invalid_locator.py",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa85c985edbfd297aefb613445deab37c8769753/test/functional/p2p_invalid_locator.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa85c985edbfd297aefb613445deab37c8769753/test/functional/p2p_invalid_locator.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_locator.py?ref=fa85c985edbfd297aefb613445deab37c8769753",
        "patch": "@@ -0,0 +1,43 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node responses to invalid locators.\n+\"\"\"\n+\n+from test_framework.messages import msg_getheaders, msg_getblocks, MAX_LOCATOR_SZ\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class InvalidLocatorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = False\n+\n+    def run_test(self):\n+        node = self.nodes[0]  # convenience reference to the node\n+        node.generate(1)  # Get node out of IBD\n+\n+        self.log.info('Test max locator size')\n+        block_count = node.getblockcount()\n+        for msg in [msg_getheaders(), msg_getblocks()]:\n+            self.log.info('Wait for disconnect when sending {} hashes in locator'.format(MAX_LOCATOR_SZ + 1))\n+            node.add_p2p_connection(P2PInterface())\n+            msg.locator.vHave = [int(node.getblockhash(i - 1), 16) for i in range(block_count, block_count - (MAX_LOCATOR_SZ + 1), -1)]\n+            node.p2p.send_message(msg)\n+            node.p2p.wait_for_disconnect()\n+            node.disconnect_p2ps()\n+\n+            self.log.info('Wait for response when sending {} hashes in locator'.format(MAX_LOCATOR_SZ))\n+            node.add_p2p_connection(P2PInterface())\n+            msg.locator.vHave = [int(node.getblockhash(i - 1), 16) for i in range(block_count, block_count - (MAX_LOCATOR_SZ), -1)]\n+            node.p2p.send_message(msg)\n+            if type(msg) == msg_getheaders:\n+                node.p2p.wait_for_header(int(node.getbestblockhash(), 16))\n+            else:\n+                node.p2p.wait_for_block(int(node.getbestblockhash(), 16))\n+\n+\n+if __name__ == '__main__':\n+    InvalidLocatorTest().main()"
      },
      {
        "sha": "557ba6092e70e8d3652148dc6fd3c8283ecda824",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa85c985edbfd297aefb613445deab37c8769753/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa85c985edbfd297aefb613445deab37c8769753/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=fa85c985edbfd297aefb613445deab37c8769753",
        "patch": "@@ -32,6 +32,7 @@\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n MAX_INV_SZ = 50000\n+MAX_LOCATOR_SZ = 101\n MAX_BLOCK_BASE_SIZE = 1000000\n \n COIN = 100000000  # 1 btc in satoshis"
      },
      {
        "sha": "b32d3edcc08a31d50a15a6d1b03127f6602893ef",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa85c985edbfd297aefb613445deab37c8769753/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa85c985edbfd297aefb613445deab37c8769753/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=fa85c985edbfd297aefb613445deab37c8769753",
        "patch": "@@ -332,6 +332,15 @@ def wait_for_block(self, blockhash, timeout=60):\n         test_function = lambda: self.last_message.get(\"block\") and self.last_message[\"block\"].block.rehash() == blockhash\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n+    def wait_for_header(self, blockhash, timeout=60):\n+        def test_function():\n+            last_headers = self.last_message.get('headers')\n+            if not last_headers:\n+                return False\n+            return last_headers.headers[0].rehash() == blockhash\n+\n+        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n+\n     def wait_for_getdata(self, timeout=60):\n         \"\"\"Waits for a getdata message.\n "
      },
      {
        "sha": "1fe173f3cf67acb6481e855db73025cdbb79856c",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa85c985edbfd297aefb613445deab37c8769753/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa85c985edbfd297aefb613445deab37c8769753/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=fa85c985edbfd297aefb613445deab37c8769753",
        "patch": "@@ -115,6 +115,7 @@\n     'wallet_keypool.py',\n     'p2p_mempool.py',\n     'mining_prioritisetransaction.py',\n+    'p2p_invalid_locator.py',\n     'p2p_invalid_block.py',\n     'p2p_invalid_tx.py',\n     'rpc_createmultisig.py',"
      }
    ]
  }
]