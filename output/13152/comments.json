[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385970579",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-385970579",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 385970579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk3MDU3OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T13:04:43Z",
    "updated_at": "2018-05-02T13:04:59Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, this would indeed be useful.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385970579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385973503",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-385973503",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 385973503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk3MzUwMw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T13:14:45Z",
    "updated_at": "2018-05-02T13:14:45Z",
    "author_association": "MEMBER",
    "body": "> Please advise me on the best approach for writing an automated test\r\n\r\nAt least it can test arguments (valid and invalid) and result format and fields (their presence and types).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385973503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385975827",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-385975827",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 385975827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk3NTgyNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T13:23:14Z",
    "updated_at": "2018-05-02T13:23:32Z",
    "author_association": "MEMBER",
    "body": "I think this call should be called differently. `getaddress` is too easy to confuse with a bitcoin address (e.g. `getnewaddress`). Maybe `getnodeaddresses`?\r\n\r\n> Why not extend getpeerinfo?\r\n\r\nYou misunderstand what this does. It doesn't return currently conneced nodes, but potentially connectable addresses.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385975827/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385993137",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-385993137",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 385993137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk5MzEzNw==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T14:16:54Z",
    "updated_at": "2018-05-02T15:34:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Renamed to `getnodeaddresses` and fixed nits.\r\n\r\nLooks like something went wrong with the rebase and now other people's commits are involved too. Does anyone know how I can fix this. (edit: fixed)\r\n\r\n> At least it can test arguments (valid and invalid) and result format and fields (their presence and types).\r\n\r\nI think in the test suite the node won't know about any other addresses, so this RPC will return an empty json object, so it can't be tested. What would be the best way around this? Maybe to populate the `vAddr` somehow.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385993137/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386020149",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386020149",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386020149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAyMDE0OQ==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T15:32:49Z",
    "updated_at": "2018-05-02T15:35:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed git weirdness (thanks to viasil).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386020149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386030266",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386030266",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386030266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAzMDI2Ng==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T16:02:54Z",
    "updated_at": "2018-05-02T16:02:54Z",
    "author_association": "MEMBER",
    "body": "Please rename PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386030266/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386111315",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386111315",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386111315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjExMTMxNQ==",
    "user": {
      "login": "MasterGrad17",
      "id": 38924981,
      "node_id": "MDQ6VXNlcjM4OTI0OTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/38924981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MasterGrad17",
      "html_url": "https://github.com/MasterGrad17",
      "followers_url": "https://api.github.com/users/MasterGrad17/followers",
      "following_url": "https://api.github.com/users/MasterGrad17/following{/other_user}",
      "gists_url": "https://api.github.com/users/MasterGrad17/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MasterGrad17/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MasterGrad17/subscriptions",
      "organizations_url": "https://api.github.com/users/MasterGrad17/orgs",
      "repos_url": "https://api.github.com/users/MasterGrad17/repos",
      "events_url": "https://api.github.com/users/MasterGrad17/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MasterGrad17/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T20:32:11Z",
    "updated_at": "2018-05-02T20:39:16Z",
    "author_association": "NONE",
    "body": "Does getnodeaddresses command return a list of reachable nodes in the network known by a node? like the result of getaddr message? is getaddress/getnodeaddresses RPC command currently available in v0.16.0rc4?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386111315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386112718",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386112718",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386112718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjExMjcxOA==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T20:37:13Z",
    "updated_at": "2018-05-02T20:45:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MasterGrad17 Yes the result is very similar as from the p2p getaddr method. The addresses come from gossiping between nodes, so the IP address _may_ be reachable but that isn't guaranteed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386112718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386127499",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386127499",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386127499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjEyNzQ5OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T21:29:32Z",
    "updated_at": "2018-05-02T21:29:32Z",
    "author_association": "MEMBER",
    "body": "@MasterGrad17 You're commenting on the request to get it merged into Bitcoin Core, so obviously no.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386127499/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 1,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386208397",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386208397",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386208397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIwODM5Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T07:09:52Z",
    "updated_at": "2018-05-03T07:09:52Z",
    "author_association": "MEMBER",
    "body": "@jonasschnelli `listpeeraddresses` sounds like it's somehow exhaustive, or at least a complete specific subset of addresses. It's just giving a bunch of random ones; `getpeeraddresses` sounds clearer to me. Am i missing something?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386208397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386209598",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386209598",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386209598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIwOTU5OA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T07:16:34Z",
    "updated_at": "2018-05-03T07:16:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> listpeeraddresses sounds like it's somehow exhaustive, or at least a complete specific subset of addresses. It's just giving a bunch of random ones; getpeeraddresses sounds clearer to me. Am I missing something?\r\n\r\nGood point.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386209598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386236963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386236963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386236963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIzNjk2Mw==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T09:20:58Z",
    "updated_at": "2018-05-03T09:20:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "`peer` implies it returns addresses of peers you're actually connected to. Like how `getpeerinfo` gives information only about connected peers. How about `getpossiblepeeraddresses`? It's a bit of a mouthful admittedly. Other options could be `getgossipedpeeraddresses` or `getpotentialpeeraddresses`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386236963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386243960",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386243960",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386243960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI0Mzk2MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T09:50:54Z",
    "updated_at": "2018-05-03T09:51:49Z",
    "author_association": "MEMBER",
    "body": "Yes, I intentionally avoided 'peer' in my suggested name for that reason, as it's easy to confuse and a lot of people confused it already. Also let's stop asking the guy to rename his RPC call :)\r\nI think `getnodeaddresses` is fine, just make sure that the documentation explains the functionality.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386243960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386288017",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-386288017",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 386288017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI4ODAxNw==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T13:03:26Z",
    "updated_at": "2018-05-03T13:03:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed nit",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386288017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390706895",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-390706895",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 390706895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDcwNjg5NQ==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T16:27:43Z",
    "updated_at": "2018-05-21T16:27:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed nits and created a test in `rpc_net.py`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390706895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390756258",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-390756258",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 390756258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc1NjI1OA==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T19:25:03Z",
    "updated_at": "2018-05-21T19:25:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed nits, thanks for reviewing @jnewbery.\r\n\r\nbitcoind modifies the timestamp so it's complicated to check whether the time was equal. That's not the point of the RPC or the test anyway so the test only checks whether the \"time\" field exists.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390756258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390782744",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-390782744",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 390782744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc4Mjc0NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T21:06:04Z",
    "updated_at": "2018-05-21T21:06:04Z",
    "author_association": "MEMBER",
    "body": "@jonasschnelli - can you remove your 'changes requested' status?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390782744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407196489",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-407196489",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 407196489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE5NjQ4OQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T20:50:07Z",
    "updated_at": "2018-07-23T20:50:07Z",
    "author_association": "MEMBER",
    "body": "Needs rebase. The `rpc_net.py` functional test is failing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407196489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413502869",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-413502869",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 413502869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUwMjg2OQ==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T10:44:22Z",
    "updated_at": "2018-08-16T10:44:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `rpc_net.py` test looks like it just needs the references to `network_thread_start` removed, in line with #13517 ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413502869/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413601307",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-413601307",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 413601307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYwMTMwNw==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T16:15:41Z",
    "updated_at": "2018-08-16T16:15:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed the broken test",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413601307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413818278",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-413818278",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 413818278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzgxODI3OA==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T09:58:52Z",
    "updated_at": "2018-08-17T09:58:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 316201485933b4fcdf8d4005d823effdfc4b913b",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413818278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416391452",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-416391452",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 416391452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjM5MTQ1Mg==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-27T22:37:17Z",
    "updated_at": "2018-08-27T22:37:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased.\r\n\r\nThe test has failed but works when I run it locally.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416391452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416392569",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-416392569",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 416392569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjM5MjU2OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-27T22:42:41Z",
    "updated_at": "2018-08-27T22:42:41Z",
    "author_association": "MEMBER",
    "body": "Unrelated build error:\r\n```\r\n...\r\nGet:17 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [389 kB]\r\nGet:18 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [2807 B]\r\nFetched 25.9 MB in 8min 28s (50.9 kB/s)\r\nReading package lists...\r\nNo output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\r\nCheck the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received\r\n```\r\nRestarted job.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416392569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417652226",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-417652226",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 417652226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzY1MjIyNg==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T12:43:58Z",
    "updated_at": "2018-08-31T12:43:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the review @promag. I have created the release notes entry in the style of the release-notes-0.15.0 file.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417652226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421116309",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-421116309",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 421116309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTExNjMwOQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T19:01:42Z",
    "updated_at": "2018-09-13T19:01:42Z",
    "author_association": "MEMBER",
    "body": "Looks good to me, utACK 8b96ebe.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421116309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422313133",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-422313133",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 422313133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjMxMzEzMw==",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T08:57:38Z",
    "updated_at": "2018-09-18T08:57:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed those nits",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422313133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422392982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-422392982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 422392982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjM5Mjk4Mg==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T13:28:01Z",
    "updated_at": "2018-09-18T13:28:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK a2eb6f540538d32725aecf678301a96247db6fd9",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422392982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422561264",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-422561264",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 422561264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjU2MTI2NA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T21:25:26Z",
    "updated_at": "2018-09-18T21:25:26Z",
    "author_association": "MEMBER",
    "body": "utACK a2eb6f540538d32725aecf678301a96247db6fd9",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422561264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422562897",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#issuecomment-422562897",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13152",
    "id": 422562897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjU2Mjg5Nw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T21:30:56Z",
    "updated_at": "2018-09-18T21:30:56Z",
    "author_association": "MEMBER",
    "body": "utACK a2eb6f5. Please fix PR description: \"New getaddress call gives ...\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422562897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185489034",
    "pull_request_review_id": 116887034,
    "id": 185489034,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTQ4OTAzNA==",
    "diff_hunk": "@@ -624,6 +624,58 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getaddress ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"\n+            \"    \\\"servicesHex\\\": \\\"xxxxxxxxxxxxxxxx\\\",  (string) The hex string of services offered\\n\"\n+            \"    \\\"addr\\\": \\\"host\\\",                     (string) The IP address of the peer\\n\"\n+            \"    \\\"port\\\": n                           (numeric) The port of the peer\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddress\", \"8\")\n+            + HelpExampleRpc(\"getaddress\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+    }\n+\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();\n+    UniValue ret(UniValue::VARR);\n+\n+    int address_return_count = std::min(count, (int)vAddr.size());\n+    for(int i = 0; i < address_return_count; ++i) {",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "a5e0fc8eafcffa8b77e80e88ec9bd02f0c77900c",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, space after `for`.",
    "created_at": "2018-05-02T13:08:29Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185489034",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185489034"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185489034"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185489034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185489689",
    "pull_request_review_id": 116887034,
    "id": 185489689,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTQ4OTY4OQ==",
    "diff_hunk": "@@ -624,6 +624,58 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getaddress ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "a5e0fc8eafcffa8b77e80e88ec9bd02f0c77900c",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not return all?",
    "created_at": "2018-05-02T13:10:50Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185489689",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185489689"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185489689"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185489689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 634,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185540844",
    "pull_request_review_id": 116950728,
    "id": 185540844,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTU0MDg0NA==",
    "diff_hunk": "@@ -624,6 +624,58 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getaddress ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "a5e0fc8eafcffa8b77e80e88ec9bd02f0c77900c",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Returning all would typically result in a massive json array with thousands of entries, about 2500 or so depending. Normally applications only need to connect to a few nodes, they don't need anywhere near that many.",
    "created_at": "2018-05-02T15:35:37Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185540844",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185540844"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185540844"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185540844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 634,
    "side": "RIGHT",
    "in_reply_to_id": 185489689
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185708979",
    "pull_request_review_id": 117151380,
    "id": 185708979,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTcwODk3OQ==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"\n+            \"    \\\"servicesHex\\\": \\\"xxxxxxxxxxxxxxxx\\\",  (string) The hex string of services offered\\n\"\n+            \"    \\\"addr\\\": \\\"host\\\",                     (string) The IP address of the peer\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "c83ccf76b0df2aceedddc23c8e081e877e5a878d",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: could also be a tor address",
    "created_at": "2018-05-03T06:58:03Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185708979",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185708979"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185708979"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185708979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 641,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185709516",
    "pull_request_review_id": 117151965,
    "id": 185709516,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTcwOTUxNg==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"\n+            \"    \\\"servicesHex\\\": \\\"xxxxxxxxxxxxxxxx\\\",  (string) The hex string of services offered\\n\"\n+            \"    \\\"addr\\\": \\\"host\\\",                     (string) The IP address of the peer\\n\"\n+            \"    \\\"port\\\": n                           (numeric) The port of the peer\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+    }\n+\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();\n+    UniValue ret(UniValue::VARR);\n+\n+    int address_return_count = std::min(count, (int)vAddr.size());\n+    for (int i = 0; i < address_return_count; ++i) {\n+        UniValue obj(UniValue::VOBJ);\n+        CAddress addr = vAddr[i];\n+        obj.pushKV(\"time\", (int)addr.nTime);\n+        obj.pushKV(\"services\", addr.nServices);\n+        obj.pushKV(\"servicesHex\", strprintf(\"%016x\", addr.nServices));",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "c83ccf76b0df2aceedddc23c8e081e877e5a878d",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "would be handy to have a string representation here. Like (`\"NODE_NETWORK | NODE_NETWORK_LIMITED |\u00a0NODE_BLOOM\"`, etc.). But can be done later.",
    "created_at": "2018-05-03T07:01:30Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185709516",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185709516"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185709516"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185709516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185885253",
    "pull_request_review_id": 117365749,
    "id": 185885253,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTg4NTI1Mw==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should document that the maximum number of nodes to return is:\r\n- 2500 (due to `ADDRMAN_GETADDR_MAX` in `CAddrMan::GetAddr_()`); or\r\n- 23% of all known nodes.\r\n(whichever is smaller)",
    "created_at": "2018-05-03T17:50:32Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185885253",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185885253"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185885253"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185885253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 634,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185886489",
    "pull_request_review_id": 117365749,
    "id": 185886489,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTg4NjQ4OQ==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What does 'address timestamp' mean here?",
    "created_at": "2018-05-03T17:54:38Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185886489",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185886489"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185886489"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185886489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 638,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185887440",
    "pull_request_review_id": 117365749,
    "id": 185887440,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTg4NzQ0MA==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"\n+            \"    \\\"servicesHex\\\": \\\"xxxxxxxxxxxxxxxx\\\",  (string) The hex string of services offered\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "return fields should be named in camel_case",
    "created_at": "2018-05-03T17:57:44Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185887440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185887440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185887440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185887440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 640,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185887516",
    "pull_request_review_id": 117365749,
    "id": 185887516,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTg4NzUxNg==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"\n+            \"    \\\"servicesHex\\\": \\\"xxxxxxxxxxxxxxxx\\\",  (string) The hex string of services offered\\n\"\n+            \"    \\\"addr\\\": \\\"host\\\",                     (string) The address of the peer\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "prefer to name this `address`. No need to save characters!",
    "created_at": "2018-05-03T17:58:00Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185887516",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185887516"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185887516"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185887516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 641,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185901257",
    "pull_request_review_id": 117365749,
    "id": 185901257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTkwMTI1Nw==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this is useful. Services is a bitfield. Displaying it as an int doesn't give any useful information to the user. Just display the hex version.",
    "created_at": "2018-05-03T18:46:29Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185901257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185901257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r185901257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185901257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 639,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186398872",
    "pull_request_review_id": 117967330,
    "id": 186398872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjM5ODg3Mg==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Depends on what 'the user' is. Programmatic RPC users will want the int, not have to do an additional step of parsing a hex string (though I don't care deeply in this case, just be mindful that manual command-line users are not the only clients of the RPC interface).",
    "created_at": "2018-05-07T11:43:36Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r186398872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186398872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r186398872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186398872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 639,
    "side": "RIGHT",
    "in_reply_to_id": 185901257
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186414329",
    "pull_request_review_id": 117985838,
    "id": 186414329,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQxNDMyOQ==",
    "diff_hunk": "@@ -624,6 +624,57 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return, if available (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                        (numeric) Address timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"    \\\"services\\\": n,                      (numeric) The services offered\\n\"",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "9e6cac24db67617df56c564408e9f57f06cc6c2d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> be mindful that manual command-line users are not the only clients of the RPC interface\r\n\r\nYes good point. In general though, I think we should avoid RPCs returning the same data in multiple formats.",
    "created_at": "2018-05-07T12:56:03Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r186414329",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186414329"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r186414329"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186414329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 639,
    "side": "RIGHT",
    "in_reply_to_id": 185901257
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189650820",
    "pull_request_review_id": 121871442,
    "id": 189650820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY1MDgyMA==",
    "diff_hunk": "@@ -624,6 +624,55 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+UniValue getnodeaddresses(const JSONRPCRequest& request)",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "dd7e1e6f19e9873fce1ff74525ac30753cf502f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: should be `static`",
    "created_at": "2018-05-21T17:01:08Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189650820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189650820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189650820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189650820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 627,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189654039",
    "pull_request_review_id": 121871442,
    "id": 189654039,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY1NDAzOQ==",
    "diff_hunk": "@@ -16,6 +17,8 @@\n     p2p_port,\n     wait_until,\n )\n+from test_framework.mininode import P2PInterface, network_thread_start",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 12,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "dd7e1e6f19e9873fce1ff74525ac30753cf502f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: sort imports (in PEP-8 ordering)",
    "created_at": "2018-05-21T17:13:36Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189654039",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189654039"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189654039"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189654039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189657575",
    "pull_request_review_id": 121871442,
    "id": 189657575,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY1NzU3NQ==",
    "diff_hunk": "@@ -96,5 +100,29 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['addrbind'], peer_info[1][0]['addr'])\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        network_thread_start()\n+        self.nodes[0].p2p.wait_for_verack()\n+\n+        # send some addresses to the node via the p2p message addr\n+        imported_addrs = set([\"123.123.\" + str(i//255) + \".\" + str(i%255) for i in range(1000)])\n+        now = int(time.time())\n+        msg = msg_addr()\n+        for a in imported_addrs:\n+            addr = CAddress()\n+            addr.time = now\n+            addr.services = NODE_NETWORK | NODE_WITNESS",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 41,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "dd7e1e6f19e9873fce1ff74525ac30753cf502f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be `nServices`",
    "created_at": "2018-05-21T17:27:27Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189657575",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189657575"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189657575"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189657575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 115,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189658422",
    "pull_request_review_id": 121871442,
    "id": 189658422,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY1ODQyMg==",
    "diff_hunk": "@@ -96,5 +100,29 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['addrbind'], peer_info[1][0]['addr'])\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        network_thread_start()\n+        self.nodes[0].p2p.wait_for_verack()\n+\n+        # send some addresses to the node via the p2p message addr\n+        imported_addrs = set([\"123.123.\" + str(i//255) + \".\" + str(i%255) for i in range(1000)])",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 35,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "dd7e1e6f19e9873fce1ff74525ac30753cf502f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: move this into the range loop below and use string formatters rather than concatenation:\r\n\r\n```python\r\n        # send some addresses to the node via the p2p message addr\r\n        now = int(time.time())\r\n        msg = msg_addr()\r\n        imported_addrs = []\r\n        for i in range(1000):\r\n            a = \"123.123.{}.{}\".format(i // 255, i % 256)\r\n            imported_addrs.append(a)\r\n            addr = CAddress()\r\n            ...\r\n```",
    "created_at": "2018-05-21T17:30:49Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189658422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189658422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189658422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189658422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 109,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189658929",
    "pull_request_review_id": 121871442,
    "id": 189658929,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY1ODkyOQ==",
    "diff_hunk": "@@ -96,5 +100,29 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['addrbind'], peer_info[1][0]['addr'])\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        network_thread_start()\n+        self.nodes[0].p2p.wait_for_verack()\n+\n+        # send some addresses to the node via the p2p message addr\n+        imported_addrs = set([\"123.123.\" + str(i//255) + \".\" + str(i%255) for i in range(1000)])\n+        now = int(time.time())\n+        msg = msg_addr()\n+        for a in imported_addrs:\n+            addr = CAddress()\n+            addr.time = now\n+            addr.services = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they are a subset\n+        NODE_ADDRESSES_REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(NODE_ADDRESSES_REQUEST_COUNT)\n+        assert len(node_addresses) == NODE_ADDRESSES_REQUEST_COUNT\n+        assert set([addr[\"address\"] for addr in node_addresses]).issubset(imported_addrs)",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 51,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "dd7e1e6f19e9873fce1ff74525ac30753cf502f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: drop the set comparisons, loop over the return items and test all fields, eg:\r\n\r\n```python\r\n        for a in node_addresses:\r\n            assert a[\"address\"] in imported_addrs\r\n            assert_equal(a[\"services\"], NODE_NETWORK | NODE_WITNESS)\r\n            assert_equal(a[\"time\"], now)\r\n            assert_equal(a[\"port\"], 8333)\r\n```",
    "created_at": "2018-05-21T17:32:50Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189658929",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189658929"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189658929"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189658929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 125,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189661118",
    "pull_request_review_id": 121883993,
    "id": 189661118,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY2MTExOA==",
    "diff_hunk": "@@ -6,6 +6,7 @@\n \n Tests correspond to code in rpc/net.cpp.\n \"\"\"\n+import time",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 4,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "dd7e1e6f19e9873fce1ff74525ac30753cf502f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: You're only using `time` to set the time field in the ADDR message. As long as the `CAddress`'s time is greater than             100000000, it'll be accepted. You can avoid this import by just setting time to `100000000 + i` or similar",
    "created_at": "2018-05-21T17:41:20Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189661118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189661118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189661118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189661118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 9,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189710592",
    "pull_request_review_id": 121943454,
    "id": 189710592,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTcxMDU5Mg==",
    "diff_hunk": "@@ -96,5 +98,35 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['addrbind'], peer_info[1][0]['addr'])\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        network_thread_start()\n+        self.nodes[0].p2p.wait_for_verack()\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(1000):\n+            a = \"123.123.{}.{}\".format(i // 255, i % 256)",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 38,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "21f7a190870240b0e1b74c5c1ae9e3b7dd58b82d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note that you'll only ever be able to get a maximum of 64 entries into the new addresses buckets by doing this. All of these addresses are in the same /16 address range, which means that addrman will place them into the same new bucket, and start evicting addresses once there are 64 entries (see the comment in addrman.h).\r\n\r\nYou may wish to simplify this to just send 256 addresses:\r\n\r\n```python\r\n        for i in range(256):\r\n            a = \"123.123.123.{}\".format(i)\r\n```",
    "created_at": "2018-05-21T20:53:01Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189710592",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189710592"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r189710592"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189710592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 110,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213055190",
    "pull_request_review_id": 149809863,
    "id": 213055190,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzA1NTE5MA==",
    "diff_hunk": "@@ -96,5 +98,34 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['addrbind'], peer_info[1][0]['addr'])\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.nodes[0].p2p.wait_for_verack()",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 31,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "316201485933b4fcdf8d4005d823effdfc4b913b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is no longer required (`add_p2p_connection()` calls `wait_for_verack()` now)",
    "created_at": "2018-08-27T17:40:47Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213055190",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213055190"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213055190"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213055190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 103,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213138110",
    "pull_request_review_id": 149911539,
    "id": 213138110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzODExMA==",
    "diff_hunk": "@@ -626,6 +626,55 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();",
    "path": "src/rpc/net.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should validate `count > 0`? Also, should have a maximum value?",
    "created_at": "2018-08-27T22:44:18Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213138110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213138110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213138110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213138110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 659,
    "original_line": 659,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213138867",
    "pull_request_review_id": 149911539,
    "id": 213138867,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzODg2Nw==",
    "diff_hunk": "@@ -101,5 +104,33 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        NODE_ADDRESSES_REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(NODE_ADDRESSES_REQUEST_COUNT)",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 40,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use named arguments instead of long and verbose variables? Then ditch `NODE_ADDRESSES_REQUEST_COUNT`.",
    "created_at": "2018-08-27T22:48:23Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213138867",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213138867"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213138867"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213138867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139240",
    "pull_request_review_id": 149911539,
    "id": 213139240,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzOTI0MA==",
    "diff_hunk": "@@ -101,5 +104,33 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        NODE_ADDRESSES_REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(NODE_ADDRESSES_REQUEST_COUNT)",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 40,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could also test that the result is limited by the existing addressed, not by the requested count.",
    "created_at": "2018-08-27T22:50:34Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139240",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139240"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139240"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 213138867
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139359",
    "pull_request_review_id": 149911539,
    "id": 213139359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzOTM1OQ==",
    "diff_hunk": "@@ -626,6 +626,55 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();\n+    UniValue ret(UniValue::VARR);\n+\n+    int address_return_count = std::min(count, (int)vAddr.size());\n+    for (int i = 0; i < address_return_count; ++i) {\n+        UniValue obj(UniValue::VOBJ);\n+        CAddress addr = vAddr[i];",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`const CAddress&`?",
    "created_at": "2018-08-27T22:51:05Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 668,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139433",
    "pull_request_review_id": 149911539,
    "id": 213139433,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzOTQzMw==",
    "diff_hunk": "@@ -626,6 +626,55 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();",
    "path": "src/rpc/net.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, could have a test for for invalid argument.",
    "created_at": "2018-08-27T22:51:33Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139433",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139433"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139433"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 659,
    "original_line": 659,
    "side": "RIGHT",
    "in_reply_to_id": 213138110
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139916",
    "pull_request_review_id": 149911539,
    "id": 213139916,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEzOTkxNg==",
    "diff_hunk": "@@ -101,5 +104,33 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        NODE_ADDRESSES_REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(NODE_ADDRESSES_REQUEST_COUNT)\n+        assert_equal(len(node_addresses), NODE_ADDRESSES_REQUEST_COUNT)\n+        for a in node_addresses:\n+            # the timestamps are usually offset by a few hours, so only check existance",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 43,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But could check that value is greater than some value?",
    "created_at": "2018-08-27T22:54:06Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139916",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139916"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213139916"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213139916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213140019",
    "pull_request_review_id": 149911539,
    "id": 213140019,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzE0MDAxOQ==",
    "diff_hunk": "@@ -626,6 +626,55 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();\n+    UniValue ret(UniValue::VARR);\n+\n+    int address_return_count = std::min(count, (int)vAddr.size());",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why the cast? Could inline std::min below.",
    "created_at": "2018-08-27T22:54:37Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213140019",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213140019"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r213140019"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213140019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214337749",
    "pull_request_review_id": 151374560,
    "id": 214337749,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDMzNzc0OQ==",
    "diff_hunk": "@@ -101,5 +104,33 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        NODE_ADDRESSES_REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(NODE_ADDRESSES_REQUEST_COUNT)",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 40,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "668e433211b47bfe8d2f608c756d9a487cb4979f",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unless I'm missing something, that verbose variable is still needed for the assert_equal check in the line after. It seems a better way than having magic numbers. I've reduced the length of the variable name though.\r\n\r\nI haven't put a max value check because it depends on the size of `g_connman->GetAddresses` at that time. How that max value works is explained in the docs.",
    "created_at": "2018-08-31T12:32:03Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214337749",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214337749"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214337749"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214337749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 213138867
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214343173",
    "pull_request_review_id": 151381346,
    "id": 214343173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDM0MzE3Mw==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense to pass the max here?",
    "created_at": "2018-08-31T12:52:50Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214343173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214343173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214343173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214343173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214345349",
    "pull_request_review_id": 151384041,
    "id": 214345349,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDM0NTM0OQ==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you rephrase this, I didn't understand? What would be done with the max? The count parameter is already a bit like a max?",
    "created_at": "2018-08-31T13:00:33Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214345349",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214345349"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214345349"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214345349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT",
    "in_reply_to_id": 214343173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214346345",
    "pull_request_review_id": 151385386,
    "id": 214346345,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDM0NjM0NQ==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I mean, GetAddresses could return count addresses instead.",
    "created_at": "2018-08-31T13:04:28Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214346345",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214346345"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214346345"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214346345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT",
    "in_reply_to_id": 214343173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214348687",
    "pull_request_review_id": 151388452,
    "id": 214348687,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDM0ODY4Nw==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How? GetAddresses doesn't accept a parameter",
    "created_at": "2018-08-31T13:13:12Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214348687",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214348687"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214348687"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214348687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT",
    "in_reply_to_id": 214343173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214548899",
    "pull_request_review_id": 151628967,
    "id": 214548899,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU0ODg5OQ==",
    "diff_hunk": "@@ -101,5 +105,42 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(REQUEST_COUNT)\n+        assert_equal(len(node_addresses), REQUEST_COUNT)\n+        for a in node_addresses:\n+            # the timestamps are usually offset by a few hours, so only check existance",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 49,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Typo found by `codespell`: existance",
    "created_at": "2018-09-02T18:18:26Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214548899",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214548899"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r214548899"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214548899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215444608",
    "pull_request_review_id": 152712242,
    "id": 215444608,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTQ0NDYwOA==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, I'm asking if it makes sense to add that parameter.",
    "created_at": "2018-09-05T22:26:08Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r215444608",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215444608"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r215444608"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215444608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT",
    "in_reply_to_id": 214343173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215613108",
    "pull_request_review_id": 152914051,
    "id": 215613108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTYxMzEwOA==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah I see! I think it doesn't make sense, because GetAddresses is used in a few other places and that change would go against the principle of each PR only doing one thing.",
    "created_at": "2018-09-06T12:53:35Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r215613108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215613108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r215613108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215613108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT",
    "in_reply_to_id": 214343173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215614238",
    "pull_request_review_id": 152915473,
    "id": 215614238,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTYxNDIzOA==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "e6a6cea8c8a4428741ff20910ce5eb7b9c118aa3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sounds reasonable.",
    "created_at": "2018-09-06T12:57:03Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r215614238",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215614238"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r215614238"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215614238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 665,
    "side": "RIGHT",
    "in_reply_to_id": 214343173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216695213",
    "pull_request_review_id": 154236296,
    "id": 216695213,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjY5NTIxMw==",
    "diff_hunk": "@@ -101,5 +105,42 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(REQUEST_COUNT)\n+        assert_equal(len(node_addresses), REQUEST_COUNT)\n+        for a in node_addresses:\n+            # the timestamps are usually offset by a few hours, so only check existence\n+            assert \"time\" in a\n+            assert_greater_than(a[\"time\"], 1527811200) #1st June 2018",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 51,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "a3fd87909b571db1cb248a7cda6ae347b57f883f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A very small nit, but to please PEP-8 consider fixing this:\r\n\r\n```\r\n./test/functional/rpc_net.py:132:56: E262 inline comment should start with '# '\r\n```",
    "created_at": "2018-09-11T14:40:59Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r216695213",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216695213"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r216695213"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216695213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 132,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217382459",
    "pull_request_review_id": 155079821,
    "id": 217382459,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzM4MjQ1OQ==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();\n+    UniValue ret(UniValue::VARR);\n+\n+    int address_return_count = std::min<int>(count, vAddr.size());\n+    for (int i = 0; i < address_return_count; ++i) {\n+        UniValue obj(UniValue::VOBJ);\n+        const CAddress& addr = vAddr[i];\n+        obj.pushKV(\"time\", (int)addr.nTime);\n+        obj.pushKV(\"services\", addr.nServices);",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "b3512ba706e6d703905fb413152a00b2b3264cd5",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Appveyor error:\r\n```\r\nc:\\projects\\bitcoin\\src\\rpc\\net.cpp(672): error C2668: 'UniValue::pushKV': ambiguous call to overloaded function\r\n```\r\nMaybe make it an explicit type?\r\n ```cpp\r\nobj.pushKV(\"services\", (uint64_t)addr.nServices);",
    "created_at": "2018-09-13T13:27:25Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217382459",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217382459"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217382459"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217382459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 672,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217485172",
    "pull_request_review_id": 155209201,
    "id": 217485172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzQ4NTE3Mg==",
    "diff_hunk": "@@ -101,5 +105,42 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(REQUEST_COUNT)\n+        assert_equal(len(node_addresses), REQUEST_COUNT)\n+        for a in node_addresses:\n+            # the timestamps are usually offset by a few hours, so only check existence\n+            assert \"time\" in a\n+            assert_greater_than(a[\"time\"], 1527811200) #1st June 2018",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 51,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "a3fd87909b571db1cb248a7cda6ae347b57f883f",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2018-09-13T18:17:29Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217485172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217485172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217485172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217485172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 132,
    "side": "RIGHT",
    "in_reply_to_id": 216695213
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217531835",
    "pull_request_review_id": 155269454,
    "id": 217531835,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzUzMTgzNQ==",
    "diff_hunk": "@@ -626,6 +626,57 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"getnodeaddresses ( count )\\n\"\n+            \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "8b96ebe5e15259c2b90e95757363a924c47af639",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm really sorry to code-style nit when this PR has been through so much review, but all then clauses should be in braces or on the same line (https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c)",
    "created_at": "2018-09-13T20:57:39Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217531835",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217531835"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217531835"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217531835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 661,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217536637",
    "pull_request_review_id": 155275445,
    "id": 217536637,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzUzNjYzNw==",
    "diff_hunk": "@@ -101,5 +105,42 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n \n+    def _test_getnodeaddresses(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # send some addresses to the node via the p2p message addr\n+        msg = msg_addr()\n+        imported_addrs = []\n+        for i in range(256):\n+            a = \"123.123.123.{}\".format(i)\n+            imported_addrs.append(a)\n+            addr = CAddress()\n+            addr.time = 100000000\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = a\n+            addr.port = 8333\n+            msg.addrs.append(addr)\n+        self.nodes[0].p2p.send_and_ping(msg)\n+\n+        # obtain addresses via rpc call and check they were ones sent in before\n+        REQUEST_COUNT = 10\n+        node_addresses = self.nodes[0].getnodeaddresses(REQUEST_COUNT)\n+        assert_equal(len(node_addresses), REQUEST_COUNT)\n+        for a in node_addresses:\n+            # the timestamps are usually offset by a few hours, so only check existence\n+            assert \"time\" in a",
    "path": "test/functional/rpc_net.py",
    "position": null,
    "original_position": 50,
    "commit_id": "a2eb6f540538d32725aecf678301a96247db6fd9",
    "original_commit_id": "8b96ebe5e15259c2b90e95757363a924c47af639",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, can be removed \u2014 since @jnewbery nit'ed :trollface: ",
    "created_at": "2018-09-13T21:14:34Z",
    "updated_at": "2018-09-17T21:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217536637",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217536637"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13152#discussion_r217536637"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13152"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217536637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 131,
    "side": "RIGHT"
  }
]