[
  {
    "sha": "61374410240f1f53447d3efcec57395218da6303",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTM3NDQxMDI0MGYxZjUzNDQ3ZDNlZmNlYzU3Mzk1MjE4ZGE2MzAz",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-02-06T04:06:34Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-02-06T04:06:34Z"
      },
      "message": "Ama\n\nKl",
      "tree": {
        "sha": "98920c25ddb672835af9ea61cebe36e6acd73c5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98920c25ddb672835af9ea61cebe36e6acd73c5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61374410240f1f53447d3efcec57395218da6303",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHhXKCRBK7hj4Ov3rIwAAdHIIAFzauAySYXPPK+11yZZT+aae\nHET0KO+1lrCnbCUaH112mRJH+0hq1O3WRxHesAeytbBHYZTn7BIJHAXqZ9iGiAKt\ndyXOsY9o+DbUm31pz/BfApGXT5G7r6OF+i1IUvIXlBs9zBTjY/c2r+8v9MX0DzAv\nP7stTVUVhOTBpo1E428GFQGwuL9Wc2vKTfANJxW3WP30yzA+Du05lgGu7nHD9hNV\nnHfN5mqcOAAE9aNaZoln2/C6TwtGdjXLN+a/CVrha0uMYVXCKQUnc89FmHSKrare\naQ/xXwxJh62ucK4oKJ74LxcsJZXnJnL+AYNCgMkCU6vxJeeb0LDeWG+AZMF7w+E=\n=EJzI\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 98920c25ddb672835af9ea61cebe36e6acd73c5e\nparent 6c6140846f37de8c132b3b6abf09f3d7940554a7\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1612584394 -0300\ncommitter GitHub <noreply@github.com> 1612584394 -0300\n\nAma\n\nKl"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61374410240f1f53447d3efcec57395218da6303",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61374410240f1f53447d3efcec57395218da6303",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61374410240f1f53447d3efcec57395218da6303/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6140846f37de8c132b3b6abf09f3d7940554a7"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "819b3cef772a02abd4d9eb70bd12e1997d80bfac",
        "filename": "AmancioJSilvJr/CryptoGraphyBTC",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61374410240f1f53447d3efcec57395218da6303/AmancioJSilvJr/CryptoGraphyBTC",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61374410240f1f53447d3efcec57395218da6303/AmancioJSilvJr/CryptoGraphyBTC",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AmancioJSilvJr/CryptoGraphyBTC?ref=61374410240f1f53447d3efcec57395218da6303",
        "patch": "@@ -0,0 +1,17 @@\n+2021-01-29 16:24:06 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) \n+You rolled 26 so you won 2 tokens Client\n+seed 1b08b782 Server seed 1480c1003409b86810c64e8fc565a970 Server seed hash f0eaa47b858dbf8e543102edea22a554003c8203995c99e79bdfdcfab9704d9c 2021-01-29 16:24:05 UTC Roll 000-499 to win 2 times your stake of \n+1 token (50% win chance) You rolled 168 so you won 2 tokens Client seed 5de92f4d Server seed f0089d8329291ecaed4ff0af7eaf455a Server seed hash 82bc4919731f9ed282a802326f7d11a75399f08d6b24acdee5eecef75f04a956 2021-01-29 16:24:05 UTC Roll 000-499 to win 2 times your stake of \n+1 token (50% win chance) You rolled 116 so you won 2 tokens Client seed da0f7ff3 Server seed f7760a888a8e59605818fac719b113f4 Server seed hash c4d80ade8461b2ab605cf022b39be33b22dca8f431bf229d3de1af90e1cc2b9a 2021-01-29 16:24:04 UTC Roll 000-499 to win 2 times your\n+stake of 1 token (50% win chance) You rolled 701 so you did not win Client seed b088acf2 Server seed 042895a82b5168ac3b00eff0b4a1031b Server seed hash ff760b96e64137d0c43aab15b6372fa6081812c442ef0801ea792ff602e3e31d 2021-01-29 16:24:04 UTC Roll 000-499 to win \n+2 times your stake of 1 token (50% win chance) \n+You rolled 968 so you did not win Client seed d96fb53e Server seed b5d063a89a446ab9eaa8842e1bcd29de Server seed hash c99be15ee350dc9599807ac25a981e33990f7a3e03df63b6e540f61253dcbe76 \n+2021-01-29 16:24:03 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 384 so you won 2 tokens Client seed 11a50d45 Server seed 677c4d365c9910d0f509ded08ab01e05 Server seed hash e0838e7fdf84e3bdcb20ad0d3581fd0651b0fb6a256757a17831a9ea80425836 \n+2021-01-29 16:24:02 UTC \n+Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 105 so you won 2 tokens Client seed ce947dc1 Server seed 09391dbf75905f1eb4756fffb3003245 Server \n+seed hash 99224a9ae86a294ff51ec2849f341b9f9e7a17b2e1bb4a7283579eaaf5ed086c 2021-01-29 16:24:01 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 699 so you did not win Client seed a805585d Server seed \n+e4172d4fc120deea5546b233abf7fad3 \n+Server seed hash d9e8e46c79b69aeab73b455b69bfc8b026b6f4d5d413946848e7d31d782f2967 2021-01-29 16:24:00 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 51 so you won 2 tokensClient seed 67fa2158 Server seed 1af2a4b2c08f2132756cf4789ecd34b3 Server seed hash 8e096ff879bd0e2fca9ceda9afccd06093459f3077d13e6c3021a007bb6cfde9 2021-01-29 16:23:59 UTC Roll 000-499 to win\n+2 times your stake of 1 token (50% win chance) You rolled 737 so you did not win\n+Client seed ae29d1e3 Server seed 60ed5ce28bb78f366bead03e2690553e Server seed hash\n+13d77242c5abc82c40fb067712bad8d47cba67b06f23d096930bc4e34bf9cba6"
      }
    ]
  },
  {
    "sha": "302bbcfe0df4365e05b55c029f2860817d3db7f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDJiYmNmZTBkZjQzNjVlMDViNTVjMDI5ZjI4NjA4MTdkM2RiN2Y2",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-03-23T10:49:02Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-03-23T10:49:02Z"
      },
      "message": "Create TRTL",
      "tree": {
        "sha": "8d297b891bf754bcb72e56af032d29a7ed5b0e20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d297b891bf754bcb72e56af032d29a7ed5b0e20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/302bbcfe0df4365e05b55c029f2860817d3db7f6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWceeCRBK7hj4Ov3rIwAAdHIIAEQXXAJqHkRRbbFCxYYKMWHB\nyMaHeNlSwBIHHK00kipJKdKJcjJeZOTc0XCAiQ90uecMHbicBbG0L3GnQrXZwthh\n60f/84cigjAs0ykjbWNg3P3LVHGlZNCxPBIIAY/XaWKJwf3/CJrB8yI56kLgELSt\n4fmwg71fgncuOoGjMNllEYywsBBA4vsRR+8LWmeY/JHvLBJqTpnWBqRvXlJFoMmm\nK2cRCRivrm1YC+oK0KpmFvvgZuZNbc9iXc9FCgZnK/ANYpDGTtBh/gcdmNjoje9L\n7HXyJtK6IvxBjdOpwY1rb+YO34U2DS3JDs6cyTcmwd12d2Lk7IOB0Mgyn88Oz+Y=\n=nLvl\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8d297b891bf754bcb72e56af032d29a7ed5b0e20\nparent 6c6140846f37de8c132b3b6abf09f3d7940554a7\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1616496542 -0300\ncommitter GitHub <noreply@github.com> 1616496542 -0300\n\nCreate TRTL"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/302bbcfe0df4365e05b55c029f2860817d3db7f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/302bbcfe0df4365e05b55c029f2860817d3db7f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/302bbcfe0df4365e05b55c029f2860817d3db7f6/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6140846f37de8c132b3b6abf09f3d7940554a7"
      }
    ],
    "stats": {
      "total": 98,
      "additions": 98,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3f39324ec21a49b7a7a3b4bfd11f6e6b414be0f3",
        "filename": "Bitcoin/TRTL",
        "status": "added",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/302bbcfe0df4365e05b55c029f2860817d3db7f6/Bitcoin/TRTL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/302bbcfe0df4365e05b55c029f2860817d3db7f6/Bitcoin/TRTL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin/TRTL?ref=302bbcfe0df4365e05b55c029f2860817d3db7f6",
        "patch": "@@ -0,0 +1,98 @@\n+ \n+/ * Copiado do reposit\u00f3rio principal da TurtleCoin em https://github.com/TurtleCoin/TurtleCoin * /\n+\n+const  { promisify }  =  require ( 'util' ) ;\n+const  childProcess  =  require ( 'child_process' ) ;\n+const  fs  =  require ( 'fs' ) ;\n+\n+const  access  =  promisify ( fs . access ) ;\n+const  readdir  =  promisify ( fs . readdir ) ;\n+const  stat  =  promisify ( fs . stat ) ;\n+const  exec  =  promisify ( childProcess . exec ) ;\n+\n+/ * Os diret\u00f3rios para executar nossa formata\u00e7\u00e3o, recursivamente * /\n+const  directoryToFormat  =  [ 'src' ] ;\n+\n+/ * Tipos de arquivos para executar o formatador * /\n+const  fileTypes  =  [ '.h' ,  '.cpp' ,  '.c' ] ;\n+\n+/ * O nome do bin\u00e1rio de formato clang. Em algumas distros, isso tem a vers\u00e3o\n+   anexado. * /\n+const  binaryName  =  'formato-clang' ;\n+\n+( ass\u00edncrono  ( )  =>  {\n+     sucesso  const =  espera  main ( ) ;\n+\n+    if  ( sucesso )  {\n+        console . log ( '\\ nFormata\u00e7\u00e3o completa.' ) ;\n+    }  else  {\n+        console . log ( '\\ nFormata\u00e7\u00e3o abortada.' ) ;\n+    }\n+} ) ( ) ;\n+\n+ fun\u00e7\u00e3o  ass\u00edncrona main  ( )  {\n+    / * Verifique se estamos na pasta certa e se os diret\u00f3rios existem * /\n+    for  ( const  diret\u00f3rio  de  diret\u00f3riosToFormat )  {\n+        tente  {\n+            aguardar  acesso ( diret\u00f3rio ) ;\n+        }  catch  ( errar )  {\n+            console . log ( `Falha ao encontrar o diret\u00f3rio $ { diret\u00f3rio } , provavelmente na pasta errada` ) ;\n+            console . log ( 'Certifique-se de executar a partir da pasta raiz, como: node scripts / format.js' ) ;\n+            return  false ;\n+        }\n+    }\n+\n+    deixe  filePaths  =  [ ] ;\n+\n+    / * Re\u00fana os arquivos * /\n+    for  ( const  diret\u00f3rio  de  diret\u00f3riosToFormat )  {\n+         arquivos  const =  espera  getFiles ( diret\u00f3rio ) ;\n+        filePaths  =  filePaths . concat ( arquivos ) ;\n+    }\n+\n+    / * Filtrar arquivos n\u00e3o codificados * /\n+    filePaths  =  filePaths . filtro ( ( arquivo )  =>  {\n+        return  fileTypes . algum ( ( extens\u00e3o )  =>  arquivo . termina com ( extens\u00e3o ) ) ;\n+    } ) ;\n+\n+    console . log ( arquivos `encontrados $ { filePaths . length } para formatar!` ) ;\n+\n+    / * Formate cada arquivo * /\n+    for  ( arquivo const  de filePaths ) {   \n+        aguardar  formatFile ( arquivo ) ;\n+    }\n+\n+    return  true ;\n+}\n+\n+ getFiles fun\u00e7\u00e3o  ass\u00edncrona ( diret\u00f3rio ) {  \n+    const  directoryContents  =  Await  readdir ( direct\u00f3rio ) ;\n+\n+    deixe  allFiles  =  [ ] ;\n+\n+    for  ( arquivo const  de directoryContents ) {   \n+        const  fullPath  =  diret\u00f3rio  +  '/'  +  arquivo ;\n+\n+        const  fileStats  =  Await  estat\u00edstica ( fullPath ) ;\n+\n+        / * Este \u00e9 um diret\u00f3rio, vamos recursar * /\n+        if  ( fileStats . isDirectory ( ) )  {\n+            const  moreFiles  =  Await  getfiles ( fullPath ) ;\n+            allFiles  =  allFiles . concat ( moreFiles ) ;\n+        }  else  {\n+            allFiles . push ( fullPath ) ;\n+        }\n+    }\n+\n+    return  allFiles ;\n+}\n+\n+ fun\u00e7\u00e3o  ass\u00edncrona formatFile  ( filePath )  {\n+    tente  {\n+        console . log ( `Formatando $ { filePath } ` ) ;\n+\n+        esperar  exec ( ` $ { binaryName } -i $ { filePath } ` ) ;\n+    }  catch  ( errar )  {\n+        console . log ( `Erro de formata\u00e7\u00e3o $ { filePath } : $ { err } ` ) ;\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "5dce0be023513aefa8844f4ee6e798abbd50fe70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGNlMGJlMDIzNTEzYWVmYTg4NDRmNGVlNmU3OThhYmJkNTBmZTcw",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-04-22T12:45:55Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-04-22T12:45:55Z"
      },
      "message": "TRTL/Bitcoin 13hfeo831hods\n\nheiwj71639jfppqerj79173.    *#67#",
      "tree": {
        "sha": "f74a93e5452fdba01bd8d5ee1980588144090d10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f74a93e5452fdba01bd8d5ee1980588144090d10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5dce0be023513aefa8844f4ee6e798abbd50fe70",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggXADCRBK7hj4Ov3rIwAAXiYIAEGmfThrrT34dDP43v/Zp8az\nWy7DT64W8l7z0TB7YYiw3BPZgjxulcbXea3USWNl5IyjzfGnPPjvgY2rNP2dXC2J\nqt2CQ9B8+NLGuD9+FquLsOM8X539cZqs9S3B60qIni2+A5M9t6xIx0R04WagaOMz\nOIAPgk2ogRHsgRWp1O0UWDs4TySHI0Nyi/ifxiUc89rSQ9/mi8m8IP33ZBHjxZRG\nGTPryBw1MTQ8nnlvPE5pvfESHpMKXU/fEr+fSQRP+Wm082bfkaBzwFPSL0MDaUP/\niPCAAxhxL0G0wbEdupe8wI8mUWRq4tovnCwTlvp1vQcgckjBHMZMA43wRQ3jczE=\n=bNtb\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f74a93e5452fdba01bd8d5ee1980588144090d10\nparent 302bbcfe0df4365e05b55c029f2860817d3db7f6\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1619095555 -0300\ncommitter GitHub <noreply@github.com> 1619095555 -0300\n\nTRTL/Bitcoin 13hfeo831hods\n\nheiwj71639jfppqerj79173.    *#67#"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dce0be023513aefa8844f4ee6e798abbd50fe70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5dce0be023513aefa8844f4ee6e798abbd50fe70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dce0be023513aefa8844f4ee6e798abbd50fe70/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "302bbcfe0df4365e05b55c029f2860817d3db7f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/302bbcfe0df4365e05b55c029f2860817d3db7f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/302bbcfe0df4365e05b55c029f2860817d3db7f6"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b1a297cfc743006c63d469ed436a1a9c4596bcff",
        "filename": "Bitcoin/TRTL",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dce0be023513aefa8844f4ee6e798abbd50fe70/Bitcoin/TRTL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dce0be023513aefa8844f4ee6e798abbd50fe70/Bitcoin/TRTL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin/TRTL?ref=5dce0be023513aefa8844f4ee6e798abbd50fe70",
        "patch": "@@ -29,6 +29,20 @@ const  binaryName  =  'formato-clang' ;\n         console . log ( '\\ nFormata\u00e7\u00e3o abortada.' ) ;\n     }\n } ) ( ) ;\n+<? xml version = \" 1.0 \" encoding = \" utf-8 \" ?>\n+< Project  xmlns = \" http://schemas.microsoft.com/developer/msbuild/2003 \" >\n+\n+  < PropertyGroup  Label = \" QtGlobals \" >\n+    < QtBaseDir > C: \\ Qt5.12.10_x64_static_vs2019_1694 </ QtBaseDir >\n+    < QtPluginsLibraryDir > $ (QtBaseDir) \\ plugins </ QtPluginsLibraryDir >\n+    < QtLibraryDir > $ (QtBaseDir) \\ lib </ QtLibraryDir >\n+    < QtIncludeDir > $ (QtBaseDir) \\ include </ QtIncludeDir >\n+    < QtIncludes > $ (QtIncludeDir); $ (QtIncludeDir) \\ QtNetwork; $ (QtIncludeDir) \\ QtCore; $ (QtIncludeDir) \\ QtWidgets; $ (QtIncludeDir) \\ QtGui; </ QtIncludes >\n+    < GeneratedFilesOutDir >. \\ QtGeneratedFiles \\ qt </ GeneratedFilesOutDir >\n+    < QtToolsDir > $ (QtBaseDir) \\ bin </ QtToolsDir >\n+    < QtReleaseLibraries > $ (QtPluginsLibraryDir) \\ plataformas \\ qminimal.lib; $ (QtPluginsLibraryDir) \\ plataformas \\ qwindows.lib; $ (QtLibraryDir) \\ Qt5WindowsUIAutomationSupport.lib; $ (QtLibraryDir) \\ qtibreetype) lib; $ (QtLibraryDir) \\ qtlibpng.lib; $ (QtLibraryDir) \\ qtpcre2.lib; $ (QtLibraryDir) \\ Qt5AccessibilitySupport.lib; $ (QtLibraryDir) \\ Qt5Core.libDir; $ (QtLibraryDir) \\ Qt5Conurrent ) \\ Qt5EventDispatcherSupport.lib; $ (QtLibraryDir) \\ Qt5FontDatabaseSupport.lib; $ (QtLibraryDir) \\ Qt5Gui.lib; $ (QtLibraryDir) \\ Qt5Network.lib; $ (Qt5FontDatabaseSupport.lib) $ (QtLibraryDir) \\ Qt5Gui.lib; $ (QtLibraryDir) \\ Qt5Network.lib; $ (QtLibraryDir) \\ Qt5PlatformSupport. ; $ (QtLibraryDir) \\ Qt5Widgets.lib; $ (QtLibraryDir) \\ Qt5WinExtras.lib; $ (QtLibraryDir) \\ qtmain.lib; Wtsapi32.lib; userenv.lib; netapi32.lib; imm32.lib; Dwmapi.lib; version. lib; winmm.lib; UxTheme.lib </Bibliotecas QtRelease >\n+    < QtDebugLibraries > $ (QtPluginsLibraryDir) \\ plataformas \\ qwindowsd.lib; $ (QtPluginsLibraryDir) \\ plataformas \\ qminimald.lib; $ (QtLibraryDir) \\ * d.lib; Wtsapi32.lib; crypt32.lib; userenv.lib; netapi32.lib; ; imm32.lib; Dwmapi.lib; version.lib; winmm.lib; UxTheme.lib </ QtDebugLibraries >\n+  </ PropertyGroup >\n \n  fun\u00e7\u00e3o  ass\u00edncrona main  ( )  {\n     / * Verifique se estamos na pasta certa e se os diret\u00f3rios existem * /"
      }
    ]
  },
  {
    "sha": "db554802c468d2045be815887c9c3bb77d6da40d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjU1NDgwMmM0NjhkMjA0NWJlODE1ODg3YzljM2JiNzdkNmRhNDBk",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-05-03T20:18:33Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-05-03T20:18:33Z"
      },
      "message": "Merge pull request #1 from amanciojsilvjr/amanciojsilvjr-patch-1\n\nBTCCryptoGraphyCTB",
      "tree": {
        "sha": "39bb7c2dfbbabe8535b1f04b8bede84df42366e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39bb7c2dfbbabe8535b1f04b8bede84df42366e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db554802c468d2045be815887c9c3bb77d6da40d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgkFqZCRBK7hj4Ov3rIwAAhzIIAJsICsppUBUWY/ePu9KJqOHG\nYbn6b85bFkHmzMRqYKHcujJwpN3RdnXog4KRpcyu65ymOHZqYaXPH6Y0wfPEJ9Ug\n0cvu8ypp5ou6oM7+ray+uMhyETGOdrF/WOMOAIpbKeHULniGuNZVdEA4pnbxvqBe\nZ2KZjpp3EUg5cS3HdXYo5Zta+Tw0v2+ORxE57sSRJh+kKStBdeJ43R1RYjIvTV65\nVsTFczb9Oii2HwFbuKZBGo69Uma7dql/1yuDR+qDb3wTmjCfqpgzVdpKxq1knYy+\nNdLVJBqnRHP1h+21cQliuBJT63xcGwjBErv2cPYe/yBPlZdueE6yBqIWU0Fohp4=\n=rsrH\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 39bb7c2dfbbabe8535b1f04b8bede84df42366e2\nparent 5dce0be023513aefa8844f4ee6e798abbd50fe70\nparent 61374410240f1f53447d3efcec57395218da6303\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1620073113 -0300\ncommitter GitHub <noreply@github.com> 1620073113 -0300\n\nMerge pull request #1 from amanciojsilvjr/amanciojsilvjr-patch-1\n\nBTCCryptoGraphyCTB"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db554802c468d2045be815887c9c3bb77d6da40d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db554802c468d2045be815887c9c3bb77d6da40d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db554802c468d2045be815887c9c3bb77d6da40d/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5dce0be023513aefa8844f4ee6e798abbd50fe70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dce0be023513aefa8844f4ee6e798abbd50fe70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5dce0be023513aefa8844f4ee6e798abbd50fe70"
      },
      {
        "sha": "61374410240f1f53447d3efcec57395218da6303",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61374410240f1f53447d3efcec57395218da6303",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/61374410240f1f53447d3efcec57395218da6303"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "819b3cef772a02abd4d9eb70bd12e1997d80bfac",
        "filename": "AmancioJSilvJr/CryptoGraphyBTC",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db554802c468d2045be815887c9c3bb77d6da40d/AmancioJSilvJr/CryptoGraphyBTC",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db554802c468d2045be815887c9c3bb77d6da40d/AmancioJSilvJr/CryptoGraphyBTC",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AmancioJSilvJr/CryptoGraphyBTC?ref=db554802c468d2045be815887c9c3bb77d6da40d",
        "patch": "@@ -0,0 +1,17 @@\n+2021-01-29 16:24:06 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) \n+You rolled 26 so you won 2 tokens Client\n+seed 1b08b782 Server seed 1480c1003409b86810c64e8fc565a970 Server seed hash f0eaa47b858dbf8e543102edea22a554003c8203995c99e79bdfdcfab9704d9c 2021-01-29 16:24:05 UTC Roll 000-499 to win 2 times your stake of \n+1 token (50% win chance) You rolled 168 so you won 2 tokens Client seed 5de92f4d Server seed f0089d8329291ecaed4ff0af7eaf455a Server seed hash 82bc4919731f9ed282a802326f7d11a75399f08d6b24acdee5eecef75f04a956 2021-01-29 16:24:05 UTC Roll 000-499 to win 2 times your stake of \n+1 token (50% win chance) You rolled 116 so you won 2 tokens Client seed da0f7ff3 Server seed f7760a888a8e59605818fac719b113f4 Server seed hash c4d80ade8461b2ab605cf022b39be33b22dca8f431bf229d3de1af90e1cc2b9a 2021-01-29 16:24:04 UTC Roll 000-499 to win 2 times your\n+stake of 1 token (50% win chance) You rolled 701 so you did not win Client seed b088acf2 Server seed 042895a82b5168ac3b00eff0b4a1031b Server seed hash ff760b96e64137d0c43aab15b6372fa6081812c442ef0801ea792ff602e3e31d 2021-01-29 16:24:04 UTC Roll 000-499 to win \n+2 times your stake of 1 token (50% win chance) \n+You rolled 968 so you did not win Client seed d96fb53e Server seed b5d063a89a446ab9eaa8842e1bcd29de Server seed hash c99be15ee350dc9599807ac25a981e33990f7a3e03df63b6e540f61253dcbe76 \n+2021-01-29 16:24:03 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 384 so you won 2 tokens Client seed 11a50d45 Server seed 677c4d365c9910d0f509ded08ab01e05 Server seed hash e0838e7fdf84e3bdcb20ad0d3581fd0651b0fb6a256757a17831a9ea80425836 \n+2021-01-29 16:24:02 UTC \n+Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 105 so you won 2 tokens Client seed ce947dc1 Server seed 09391dbf75905f1eb4756fffb3003245 Server \n+seed hash 99224a9ae86a294ff51ec2849f341b9f9e7a17b2e1bb4a7283579eaaf5ed086c 2021-01-29 16:24:01 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 699 so you did not win Client seed a805585d Server seed \n+e4172d4fc120deea5546b233abf7fad3 \n+Server seed hash d9e8e46c79b69aeab73b455b69bfc8b026b6f4d5d413946848e7d31d782f2967 2021-01-29 16:24:00 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 51 so you won 2 tokensClient seed 67fa2158 Server seed 1af2a4b2c08f2132756cf4789ecd34b3 Server seed hash 8e096ff879bd0e2fca9ceda9afccd06093459f3077d13e6c3021a007bb6cfde9 2021-01-29 16:23:59 UTC Roll 000-499 to win\n+2 times your stake of 1 token (50% win chance) You rolled 737 so you did not win\n+Client seed ae29d1e3 Server seed 60ed5ce28bb78f366bead03e2690553e Server seed hash\n+13d77242c5abc82c40fb067712bad8d47cba67b06f23d096930bc4e34bf9cba6"
      }
    ]
  },
  {
    "sha": "5a35edf9053b74defb28fe3f3b73b289e746253a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTM1ZWRmOTA1M2I3NGRlZmIyOGZlM2YzYjczYjI4OWU3NDYyNTNh",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:38:48Z"
      },
      "committer": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:38:48Z"
      },
      "message": "Set up CI with Azure Pipelines\n\nNuclear Robotic solution and defense [skip ci]",
      "tree": {
        "sha": "987ef84ea7db352a4fa2d0e6613f0f2e5340584f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/987ef84ea7db352a4fa2d0e6613f0f2e5340584f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a35edf9053b74defb28fe3f3b73b289e746253a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a35edf9053b74defb28fe3f3b73b289e746253a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a35edf9053b74defb28fe3f3b73b289e746253a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a35edf9053b74defb28fe3f3b73b289e746253a/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db554802c468d2045be815887c9c3bb77d6da40d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db554802c468d2045be815887c9c3bb77d6da40d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db554802c468d2045be815887c9c3bb77d6da40d"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5c0b64e461223f55e2b3c6d124c67d2f004a276e",
        "filename": "azure-pipelines.yml",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a35edf9053b74defb28fe3f3b73b289e746253a/azure-pipelines.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a35edf9053b74defb28fe3f3b73b289e746253a/azure-pipelines.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/azure-pipelines.yml?ref=5a35edf9053b74defb28fe3f3b73b289e746253a",
        "patch": "@@ -0,0 +1,27 @@\n+ok# Xamarin.Android\n+# Build a Xamarin.Android project.\n+# Add steps that test, sign, and distribute an app, save build artifacts, and more:\n+# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin\n+\n+trigger:\n+- master\n+\n+pool:\n+  vmImage: 'macos-latest'\n+\n+variables:\n+  buildConfiguration: 'Release'\n+  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'\n+\n+steps:\n+- task: NuGetToolInstaller@1\n+\n+- task: NuGetCommand@2\n+  inputs:\n+    restoreSolution: '**/*.sln'\n+\n+- task: XamarinAndroid@1\n+  inputs:\n+    projectFile: '**/*droid*.csproj'\n+    outputDirectory: '$(outputDirectory)'\n+    configuration: '$(buildConfiguration)'"
      }
    ]
  },
  {
    "sha": "071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzFjMWFhYzk1ZGNhYzNjOTZhZTJlOTYxYjBjZmM4YWVmM2QzYWEw",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:40:40Z"
      },
      "committer": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:40:40Z"
      },
      "message": "Set up CI with Azure Pipelines\n\nNuclear system protection and robotics self destruction earthly [skip ci]",
      "tree": {
        "sha": "d54b4ca51fa2712d14173f127fcbe2613f90d7f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d54b4ca51fa2712d14173f127fcbe2613f90d7f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a35edf9053b74defb28fe3f3b73b289e746253a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a35edf9053b74defb28fe3f3b73b289e746253a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a35edf9053b74defb28fe3f3b73b289e746253a"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "deae50e2b56deb10b8d17f691709302af558197b",
        "filename": "azure-pipelines-1.yml",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0/azure-pipelines-1.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0/azure-pipelines-1.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/azure-pipelines-1.yml?ref=071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
        "patch": "@@ -0,0 +1,27 @@\n+# Xamarin.Android\n+# Build a Xamarin.Android project.\n+# Add steps that test, sign, and distribute an app, save build artifacts, and more:\n+# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin\n+\n+trigger:\n+- master\n+\n+pool:\n+  vmImage: 'macos-latest'\n+\n+variables:\n+  buildConfiguration: 'Release'\n+  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'\n+\n+steps:\n+- task: NuGetToolInstaller@1\n+\n+- task: NuGetCommand@2\n+  inputs:\n+    restoreSolution: '**/*.sln'\n+\n+- task: XamarinAndroid@1\n+  inputs:\n+    projectFile: '**/*droid*.csproj'\n+    outputDirectory: '$(outputDirectory)'\n+    configuration: '$(buildConfiguration)'"
      }
    ]
  },
  {
    "sha": "de5a18c0a675baa4103910e5f16f6db0f171ccbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTVhMThjMGE2NzViYWE0MTAzOTEwZTVmMTZmNmRiMGYxNzFjY2Jl",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:44:33Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-06-21T18:44:33Z"
      },
      "message": "Update CryptoGraphyBTC\n\n.",
      "tree": {
        "sha": "9b917c1565df37221d5803e479acce65ed4802ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b917c1565df37221d5803e479acce65ed4802ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de5a18c0a675baa4103910e5f16f6db0f171ccbe",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0N4RCRBK7hj4Ov3rIwAAQTYIAERpWPKjbOR76Ujez2GT1jGe\nOL+uKz+bGX7+XhihwYq1wJxO6eJeWon2h6+QHwD08D7/taq1p5+RMp8gUTSaaO6j\nRRPhgeF0Xc4sUwxAwQkc8ZbBWK9cHa435Q3+f2Kx1c95Zd5PCZExTcxawkOoGCIO\natcHKohF7sLhrWA8z6PmchAl7gTeLp2mZRrwmRAjqv0JnuI8AUMmSK8vKu91TYmV\nSp1mqG0kr6dVYxBPFjUJBDGH3i2E6OLHa2mR74OPz1LIDDFJl7MLwIwn2DpCkSw+\nXT8J4psaxIRrKK91YlWX5eN7tQtbqOykdHImpc24ywnedQ5R2AoZBS+t/fs7D1c=\n=dYYG\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 9b917c1565df37221d5803e479acce65ed4802ec\nparent 071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1624301073 -0300\ncommitter GitHub <noreply@github.com> 1624301073 -0300\n\nUpdate CryptoGraphyBTC\n\n."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de5a18c0a675baa4103910e5f16f6db0f171ccbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de5a18c0a675baa4103910e5f16f6db0f171ccbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de5a18c0a675baa4103910e5f16f6db0f171ccbe/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/071c1aac95dcac3c96ae2e961b0cfc8aef3d3aa0"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2bfa449e582638f39126f24c196bb585fc3f58ff",
        "filename": "AmancioJSilvJr/CryptoGraphyBTC",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de5a18c0a675baa4103910e5f16f6db0f171ccbe/AmancioJSilvJr/CryptoGraphyBTC",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de5a18c0a675baa4103910e5f16f6db0f171ccbe/AmancioJSilvJr/CryptoGraphyBTC",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AmancioJSilvJr/CryptoGraphyBTC?ref=de5a18c0a675baa4103910e5f16f6db0f171ccbe",
        "patch": "@@ -1,3 +1,32 @@\n+\n+\n+\n+\n+trigger:\n+  branches:\n+    include:\n+    - master\n+variables:\n+- name: buildConfiguration\n+  value: 'Release'\n+- name: outputDirectory\n+  value: '$(build.binariesDirectory)/$(buildConfiguration)'\n+stages:\n+- stage: __default\n+  jobs:\n+  - job: Job\n+    pool:\n+      vmImage: 'macos-latest'\n+    steps:\n+    - task: NuGetToolInstaller@1\n+    - task: NuGetCommand@2\n+      inputs:\n+        restoreSolution: '**/*.sln'\n+    - task: XamarinAndroid@1\n+      inputs:\n+        projectFile: '**/*droid*.csproj'\n+        outputDirectory: '$(outputDirectory)'\n+        configuration: '$(buildConfiguration\n 2021-01-29 16:24:06 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) \n You rolled 26 so you won 2 tokens Client\n seed 1b08b782 Server seed 1480c1003409b86810c64e8fc565a970 Server seed hash f0eaa47b858dbf8e543102edea22a554003c8203995c99e79bdfdcfab9704d9c 2021-01-29 16:24:05 UTC Roll 000-499 to win 2 times your stake of "
      }
    ]
  },
  {
    "sha": "cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGYzYzljOTRkZGU2MWJiNjFkOGQ5NDI0ZTRiODVlYjgyYWU1MTQx",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:45:11Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-06-21T18:45:11Z"
      },
      "message": "Update CryptoGraphyBTC\n\n.",
      "tree": {
        "sha": "f33d754c31702d99e36af4ee3739a55ab5ba30ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f33d754c31702d99e36af4ee3739a55ab5ba30ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0N43CRBK7hj4Ov3rIwAAvoQIADK3Pn0iON4qjUYXbqRlvP/d\n9BimcBj260nxWahJCue2hxBMfbQ77Mpt6dRifk1ftk20tWD1a6Try+iPr116o/ME\nCFvLaA+gA/VYfBgbeMJbaCOUvqbCzPBVr2KCHM4VKnNheiHek7GaGB/cP0rohvtu\ng4sndsd+v570K1nmX10ygJx5AzQpqpTmdpBZY4ReDGnOId0d/DapdkZXzlJKTMD5\nEtw8RhHMfmvuxR+0UoUTQMCiTpy0gonRcsCQu9PeKXEw50YgnrjqSF9ljIIN+okR\nGxkAUwWbJZUkrsg/hQ1MN+aZi5cdXk6FIpcEjfqSwRPLwvOoxCGLhPtVgkZx4Os=\n=s4D2\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f33d754c31702d99e36af4ee3739a55ab5ba30ac\nparent de5a18c0a675baa4103910e5f16f6db0f171ccbe\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1624301111 -0300\ncommitter GitHub <noreply@github.com> 1624301111 -0300\n\nUpdate CryptoGraphyBTC\n\n."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de5a18c0a675baa4103910e5f16f6db0f171ccbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de5a18c0a675baa4103910e5f16f6db0f171ccbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de5a18c0a675baa4103910e5f16f6db0f171ccbe"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "054bf55582f68dbf55c64116ad13e4f24d43f009",
        "filename": "AmancioJSilvJr/CryptoGraphyBTC",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141/AmancioJSilvJr/CryptoGraphyBTC",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141/AmancioJSilvJr/CryptoGraphyBTC",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AmancioJSilvJr/CryptoGraphyBTC?ref=cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
        "patch": "@@ -37,10 +37,36 @@ stake of 1 token (50% win chance) You rolled 701 so you did not win Client seed\n You rolled 968 so you did not win Client seed d96fb53e Server seed b5d063a89a446ab9eaa8842e1bcd29de Server seed hash c99be15ee350dc9599807ac25a981e33990f7a3e03df63b6e540f61253dcbe76 \n 2021-01-29 16:24:03 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 384 so you won 2 tokens Client seed 11a50d45 Server seed 677c4d365c9910d0f509ded08ab01e05 Server seed hash e0838e7fdf84e3bdcb20ad0d3581fd0651b0fb6a256757a17831a9ea80425836 \n 2021-01-29 16:24:02 UTC \n+\n Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 105 so you won 2 tokens Client seed ce947dc1 Server seed 09391dbf75905f1eb4756fffb3003245 Server \n seed hash 99224a9ae86a294ff51ec2849f341b9f9e7a17b2e1bb4a7283579eaaf5ed086c 2021-01-29 16:24:01 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 699 so you did not win Client seed a805585d Server seed \n e4172d4fc120deea5546b233abf7fad3 \n Server seed hash d9e8e46c79b69aeab73b455b69bfc8b026b6f4d5d413946848e7d31d782f2967 2021-01-29 16:24:00 UTC Roll 000-499 to win 2 times your stake of 1 token (50% win chance) You rolled 51 so you won 2 tokensClient seed 67fa2158 Server seed 1af2a4b2c08f2132756cf4789ecd34b3 Server seed hash 8e096ff879bd0e2fca9ceda9afccd06093459f3077d13e6c3021a007bb6cfde9 2021-01-29 16:23:59 UTC Roll 000-499 to win\n 2 times your stake of 1 token (50% win chance) You rolled 737 so you did not win\n Client seed ae29d1e3 Server seed 60ed5ce28bb78f366bead03e2690553e Server seed hash\n 13d77242c5abc82c40fb067712bad8d47cba67b06f23d096930bc4e34bf9cba6\n+trigger:\n+  branches:\n+    include:\n+    - master\n+variables:\n+- name: buildConfiguration\n+  value: 'Release'\n+- name: outputDirectory\n+  value: '$(build.binariesDirectory)/$(buildConfiguration)'\n+stages:\n+- stage: __default\n+  jobs:\n+  - job: Job\n+    pool:\n+      vmImage: 'macos-latest'\n+    steps:\n+    - task: NuGetToolInstaller@1\n+    - task: NuGetCommand@2\n+      inputs:\n+        restoreSolution: '**/*.sln'\n+    - task: XamarinAndroid@1\n+      inputs:\n+        projectFile: '**/*droid*.csproj'\n+        outputDirectory: '$(outputDirectory)'\n+        configuration: '$(buildConfiguration"
      }
    ]
  },
  {
    "sha": "3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjUyZmZjNWNhMjRhNDk2ZmUyZDNjMTA3MjBjYTU0OWJmYjEwZmM2",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:48:15Z"
      },
      "committer": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:48:15Z"
      },
      "message": "Set up CI with Azure Pipelines\n\nL [skip ci]",
      "tree": {
        "sha": "a957804cdca76e3069da0022527b4bd026712629",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a957804cdca76e3069da0022527b4bd026712629"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdf3c9c94dde61bb61d8d9424e4b85eb82ae5141"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 34,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6d417832f3d3d8d27dd5b650b9174f8c7cf5f4f3",
        "filename": "azure-pipelines-2.yml",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6/azure-pipelines-2.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6/azure-pipelines-2.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/azure-pipelines-2.yml?ref=3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
        "patch": "@@ -0,0 +1,34 @@\n+# ASP.NET\n+# Build and test ASP.NET projects.\n+# Add steps that publish symbols, save build artifacts, deploy, and more:\n+# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4\n+\n+trigger:\n+- master\n+\n+pool:\n+  vmImage: 'windows-latest'\n+\n+variables:\n+  solution: '**/*.sln'\n+  buildPlatform: 'Any CPU'\n+  buildConfiguration: 'Release'\n+\n+steps:\n+- task: NuGetToolInstaller@1\n+\n+- task: NuGetCommand@2\n+  inputs:\n+    restoreSolution: '$(solution)'\n+\n+- task: VSBuild@1\n+  inputs:\n+    solution: '$(solution)'\n+    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactStagingDirectory)\"'\n+    platform: '$(buildPlatform)'\n+    configuration: '$(buildConfiguration)'\n+\n+- task: VSTest@2\n+  inputs:\n+    platform: '$(buildPlatform)'\n+    configuration: '$(buildConfiguration)'"
      }
    ]
  },
  {
    "sha": "05ac3bc6cb8fdfa7706d23d7a337470876df5074",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWFjM2JjNmNiOGZkZmE3NzA2ZDIzZDdhMzM3NDcwODc2ZGY1MDc0",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:51:34Z"
      },
      "committer": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:51:34Z"
      },
      "message": "Set up CI with Azure Pipelines\n\n. [skip ci]",
      "tree": {
        "sha": "04b4a4a8885fbfcf4f20c3487cc0d4d9b93f1a42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04b4a4a8885fbfcf4f20c3487cc0d4d9b93f1a42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05ac3bc6cb8fdfa7706d23d7a337470876df5074",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05ac3bc6cb8fdfa7706d23d7a337470876df5074",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05ac3bc6cb8fdfa7706d23d7a337470876df5074",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05ac3bc6cb8fdfa7706d23d7a337470876df5074/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3652ffc5ca24a496fe2d3c10720ca549bfb10fc6"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 34,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6d417832f3d3d8d27dd5b650b9174f8c7cf5f4f3",
        "filename": "azure-pipelines-3.yml",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05ac3bc6cb8fdfa7706d23d7a337470876df5074/azure-pipelines-3.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05ac3bc6cb8fdfa7706d23d7a337470876df5074/azure-pipelines-3.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/azure-pipelines-3.yml?ref=05ac3bc6cb8fdfa7706d23d7a337470876df5074",
        "patch": "@@ -0,0 +1,34 @@\n+# ASP.NET\n+# Build and test ASP.NET projects.\n+# Add steps that publish symbols, save build artifacts, deploy, and more:\n+# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4\n+\n+trigger:\n+- master\n+\n+pool:\n+  vmImage: 'windows-latest'\n+\n+variables:\n+  solution: '**/*.sln'\n+  buildPlatform: 'Any CPU'\n+  buildConfiguration: 'Release'\n+\n+steps:\n+- task: NuGetToolInstaller@1\n+\n+- task: NuGetCommand@2\n+  inputs:\n+    restoreSolution: '$(solution)'\n+\n+- task: VSBuild@1\n+  inputs:\n+    solution: '$(solution)'\n+    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactStagingDirectory)\"'\n+    platform: '$(buildPlatform)'\n+    configuration: '$(buildConfiguration)'\n+\n+- task: VSTest@2\n+  inputs:\n+    platform: '$(buildPlatform)'\n+    configuration: '$(buildConfiguration)'"
      }
    ]
  },
  {
    "sha": "4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzkzZmQ3ZGEwN2Y0ZTZmNjkzZDBhZjVhZDcwZTA0YmQ4MzJjYzU0",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T18:55:49Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-06-21T18:55:49Z"
      },
      "message": "CryptoGraphyBTC>c\u00f3d<defense\n\n.",
      "tree": {
        "sha": "4a81f54fad965541653bd44d147e50596ac6a272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a81f54fad965541653bd44d147e50596ac6a272"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0OC1CRBK7hj4Ov3rIwAAJR8IADb+H3cdcGQFG00q7JfGY+uI\nK/01XLSuawbUCAf3AjbqquxoZ9lBOVVMvReKp6Qnlq6rEGv8eAlkM/IB6xaJAPuD\n6YBZN63cLUgmF79zO29CHZoAd0rLKxUWyi7JMK8rOlxDmq7cUcnv046ZBJyagrIb\nT/5Z95p0FhjNEbAqwe1WZ0hYHtF+yyUwVTjLkHYymfxQSU8uaAl8bQxro6nA0qSu\nBHQGxO7Wa/KZb+XOmWPN3LWHMLEcn0AbCzXOGSFYau9ZNbqwIODejvxdBCEx5iBd\nE5II8OfsoHTXHgKh175gtZnohI5sREinu5N4B3/RkGWPSVoyauEO99QQZSPa37A=\n=Huct\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 4a81f54fad965541653bd44d147e50596ac6a272\nparent 05ac3bc6cb8fdfa7706d23d7a337470876df5074\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1624301749 -0300\ncommitter GitHub <noreply@github.com> 1624301749 -0300\n\nCryptoGraphyBTC>c\u00f3d<defense\n\n."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05ac3bc6cb8fdfa7706d23d7a337470876df5074",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05ac3bc6cb8fdfa7706d23d7a337470876df5074",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05ac3bc6cb8fdfa7706d23d7a337470876df5074"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 32,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1692217ff2e6d96001cc0bca292dcbf4c61029eb",
        "filename": "AmancioJSilvJr/CryptoGraphyBTC",
        "status": "modified",
        "additions": 32,
        "deletions": 1,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/AmancioJSilvJr/CryptoGraphyBTC",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/AmancioJSilvJr/CryptoGraphyBTC",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AmancioJSilvJr/CryptoGraphyBTC?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,5 +1,36 @@\n \n-\n+trigger:\n+  branches:\n+    include:\n+    - master\n+variables:\n+- name: solution\n+  value: '**/*.sln'\n+- name: buildPlatform\n+  value: 'Any CPU'\n+- name: buildConfiguration\n+  value: 'Release'\n+stages:\n+- stage: __default\n+  jobs:\n+  - job: Job\n+    pool:\n+      vmImage: 'windows-latest'\n+    steps:\n+    - task: NuGetToolInstaller@1\n+    - task: NuGetCommand@2\n+      inputs:\n+        restoreSolution: '$(solution)'\n+    - task: VSBuild@1\n+      inputs:\n+        solution: '$(solution)'\n+        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactStagingDirectory)\"'\n+        platform: '$(buildPlatform)'\n+        configuration: '$(buildConfiguration)'\n+    - task: VSTest@2\n+      inputs:\n+        platform: '$(buildPlatform)'\n+        configuration: '$(buildConfiguration\n \n \n trigger:"
      }
    ]
  },
  {
    "sha": "fd6205f6136cf260d0a857f09d8b80d77fca7a81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDYyMDVmNjEzNmNmMjYwZDBhODU3ZjA5ZDhiODBkNzdmY2E3YTgx",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T19:05:01Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-06-21T19:05:01Z"
      },
      "message": "Merge branch 'bitcoin:master' into master",
      "tree": {
        "sha": "272ea0ad624460e12b25eff395002bbcbc213b81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/272ea0ad624460e12b25eff395002bbcbc213b81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd6205f6136cf260d0a857f09d8b80d77fca7a81",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0OLeCRBK7hj4Ov3rIwAAGJYIAClYCOqK/ZElw/AyijCeKENw\nB6ITRgXBaN5Y6g13FTBZvV741M2Xq6lkVwKd3cJIqNikNHGJjnMVu2uLyZlN4xvT\nM4DbCOZxQZn5yEv2pgl5hwtFE15rFij+ggXWC+rGmQs4IvzFWTPHa4hs01B88bDS\n7sEJ79HOOKmQQuSmtHgMquWORWCh9xDpjI+E4lo4dUzxPmq8oVdEomsqemMVcOoA\nMhclcFM/RXAITX87kw0Q2QKcitgjrOgmmKSPee1YXt26MdAaswn7Gvv+uL6wMKgF\nCiEvZo+1/oqwfvdYBu5s7B2n/UqB4oybq1FTcX/hR2DlR36t5lpJD1OIXEpe31E=\n=fcTx\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 272ea0ad624460e12b25eff395002bbcbc213b81\nparent 4793fd7da07f4e6f693d0af5ad70e04bd832cc54\nparent 398dd678338971d2189934713c83c184742f293f\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1624302301 -0300\ncommitter GitHub <noreply@github.com> 1624302301 -0300\n\nMerge branch 'bitcoin:master' into master\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6205f6136cf260d0a857f09d8b80d77fca7a81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd6205f6136cf260d0a857f09d8b80d77fca7a81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6205f6136cf260d0a857f09d8b80d77fca7a81/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4793fd7da07f4e6f693d0af5ad70e04bd832cc54"
      },
      {
        "sha": "398dd678338971d2189934713c83c184742f293f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/398dd678338971d2189934713c83c184742f293f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/398dd678338971d2189934713c83c184742f293f"
      }
    ],
    "stats": {
      "total": 68896,
      "additions": 47315,
      "deletions": 21581
    },
    "files": [
      {
        "sha": "3ca7818ecad24cdb4937763142a5ff746aa92605",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,10 +7,10 @@ clone_depth: 5\n environment:\n   PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n   PYTHONUTF8: 1\n-  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/qt598x64_vs2019_v1681/qt598_x64_vs2019_1681.zip'\n-  QT_DOWNLOAD_HASH: '00cf7327818c07d74e0b1a4464ffe987c2728b00d49d4bf333065892af0515c3'\n-  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-  VCPKG_TAG: '2020.11-1'\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/qt51211x64_static_vs2019_16101/Qt5.12.11_x64_static_vs2019_16101.zip'\n+  QT_DOWNLOAD_HASH: 'cf1b58107fadbf0d9a957d14dab16cde6b6eb6936a1908472da1f967dda34a3a'\n+  QT_LOCAL_PATH: 'C:\\Qt5.12.11_x64_static_vs2019_16101'\n+  VCPKG_TAG: '75522bb1f2e7d863078bcd06322348f053a9e33f'\n install:\n # Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n # - cmd: pip install zmq"
      },
      {
        "sha": "26bd27754f10eab3cc37e96aeacc54cd6c3e3bac",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 66,
        "deletions": 27,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,10 +3,19 @@\n env:\n   PACKAGE_MANAGER_INSTALL: \"apt-get update && apt-get install -y\"\n   MAKEJOBS: \"-j4\"\n-  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n   TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n   CCACHE_SIZE: \"200M\"\n   CCACHE_DIR: \"/tmp/ccache_dir\"\n+  CCACHE_NOHASHDIR: \"1\"  # Debug info might contain a stale path if the build dir changes, but this is fine\n+\n+cirrus_ephemeral_worker_template_env: &CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n+  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n+\n+persistent_worker_template_env: &PERSISTENT_WORKER_TEMPLATE_ENV\n+  RESTART_CI_DOCKER_BEFORE_RUN: \"1\"\n+\n+persistent_worker_template: &PERSISTENT_WORKER_TEMPLATE\n+  persistent_worker: {}  # https://cirrus-ci.org/guide/persistent-workers/\n \n # https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks\n base_template: &BASE_TEMPLATE\n@@ -28,18 +37,17 @@ global_task_template: &GLOBAL_TASK_TEMPLATE\n     # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel\n     cpu: 2\n     memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers\n-    kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093\n   ccache_cache:\n     folder: \"/tmp/ccache_dir\"\n   depends_built_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/built\"\n-  depends_sdk_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n-  depends_releases_cache:\n-    folder: \"/tmp/cirrus-ci-build/releases\"\n+    folder: \"depends/built\"\n   ci_script:\n     - ./ci/test_run_all.sh\n \n+depends_sdk_cache_template: &DEPENDS_SDK_CACHE_TEMPLATE\n+  depends_sdk_cache:\n+    folder: \"depends/sdk-sources\"\n+\n compute_credits_template: &CREDITS_TEMPLATE\n   # https://cirrus-ci.org/pricing/#compute-credits\n   # Only use credits for pull requests to the main repo\n@@ -72,21 +80,25 @@ task:\n   << : *CREDITS_TEMPLATE\n   lint_script:\n     - ./ci/lint_run_all.sh\n+  env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n \n task:\n   name: 'ARM [unit tests, no functional tests] [buster]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n     image: debian:buster\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_arm.sh\"\n \n task:\n-  name: 'Win64 [unit tests, no gui tests, no boost::process, no functional tests] [bionic]'\n+  name: 'Win64 [unit tests, no gui tests, no boost::process, no functional tests] [focal]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n-    image: ubuntu:bionic\n+    image: ubuntu:focal\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_win64.sh\"\n \n task:\n@@ -95,27 +107,29 @@ task:\n   container:\n     image: centos:8\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     PACKAGE_MANAGER_INSTALL: \"yum install -y\"\n     FILE_ENV: \"./ci/test/00_setup_env_i686_centos.sh\"\n \n task:\n-  name: '[previous releases, uses qt5 dev package and some depends packages] [unsigned char] [bionic]'\n-  # For faster CI feedback, immediately schedule a task that compiles most modules\n-  << : *CREDITS_TEMPLATE\n+  name: '[previous releases, uses qt5 dev package and some depends packages, DEBUG] [unsigned char] [bionic]'\n+  previous_releases_cache:\n+    folder: \"releases\"\n   << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:bionic\n+  << : *PERSISTENT_WORKER_TEMPLATE\n   env:\n+    << : *PERSISTENT_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_native_qt5.sh\"\n \n task:\n-  name: '[depends, sanitizers: thread (TSan), no gui] [focal]'\n+  name: '[depends, sanitizers: thread (TSan), no gui] [hirsute]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n-    image: ubuntu:focal\n-    cpu: 4  # Double CPU and increase Memory to avoid timeout\n+    image: ubuntu:hirsute\n+    cpu: 6  # Increase CPU and Memory to avoid timeout\n     memory: 24G\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     MAKEJOBS: \"-j8\"\n     FILE_ENV: \"./ci/test/00_setup_env_native_tsan.sh\"\n \n@@ -125,30 +139,40 @@ task:\n   container:\n     image: ubuntu:focal\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_native_msan.sh\"\n \n task:\n-  name: '[no depends, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer] [focal]'\n+  name: '[no depends, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer] [hirsute]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n-    image: ubuntu:focal\n+    image: ubuntu:hirsute\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_native_asan.sh\"\n \n task:\n   name: '[no depends, sanitizers: fuzzer,address,undefined,integer] [focal]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n     image: ubuntu:focal\n+    cpu: 4  # Increase CPU and memory to avoid timeout\n+    memory: 16G\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n+    MAKEJOBS: \"-j8\"\n     FILE_ENV: \"./ci/test/00_setup_env_native_fuzz.sh\"\n \n task:\n-  name: '[multiprocess] [focal]'\n+  name: '[multiprocess, DEBUG] [focal]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n     image: ubuntu:focal\n+    cpu: 4\n+    memory: 16G  # The default memory is sometimes just a bit too small, so double everything\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n+    MAKEJOBS: \"-j8\"\n     FILE_ENV: \"./ci/test/00_setup_env_native_multiprocess.sh\"\n \n task:\n@@ -157,26 +181,41 @@ task:\n   container:\n     image: ubuntu:bionic\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_native_nowallet.sh\"\n \n task:\n-  name: 'macOS 10.14 [gui, no tests] [bionic]'\n+  name: 'macOS 10.14 [gui, no tests] [focal]'\n+  << : *DEPENDS_SDK_CACHE_TEMPLATE\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n-    image: ubuntu:bionic\n+    image: ubuntu:focal\n   env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_mac.sh\"\n \n task:\n-  name: 'macOS 10.15 native [gui] [no depends]'\n-  macos_brew_addon_script:\n-    - brew install boost libevent berkeley-db4 qt miniupnpc libnatpmp ccache zeromq qrencode sqlite libtool automake pkg-config gnu-getopt\n+  name: 'macOS 11 native [gui] [no depends]'\n+  brew_install_script:\n+    - brew install boost libevent berkeley-db4 qt@5 miniupnpc libnatpmp ccache zeromq qrencode sqlite libtool automake pkg-config gnu-getopt\n   << : *GLOBAL_TASK_TEMPLATE\n   osx_instance:\n     # Use latest image, but hardcode version to avoid silent upgrades (and breaks)\n-    image: catalina-xcode-12.1  # https://cirrus-ci.org/guide/macOS\n+    image: big-sur-xcode-12.5  # https://cirrus-ci.org/guide/macOS\n   env:\n-    DANGER_RUN_CI_ON_HOST: \"true\"\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     CI_USE_APT_INSTALL: \"no\"\n     PACKAGE_MANAGER_INSTALL: \"echo\"  # Nothing to do\n     FILE_ENV: \"./ci/test/00_setup_env_mac_host.sh\"\n+\n+task:\n+  name: 'ARM64 Android APK [focal]'\n+  << : *DEPENDS_SDK_CACHE_TEMPLATE\n+  depends_sources_cache:\n+    folder: \"depends/sources\"\n+  << : *GLOBAL_TASK_TEMPLATE\n+  container:\n+    image: ubuntu:focal\n+  env:\n+    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n+    FILE_ENV: \"./ci/test/00_setup_env_android.sh\""
      },
      {
        "sha": "4967e675f642f9877f91a41e2635fc9424c58cda",
        "filename": ".editorconfig",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.editorconfig",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.editorconfig",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.editorconfig?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,26 @@\n+# This is the top-most EditorConfig file.\n+root = true\n+\n+# For all files.\n+[*]\n+charset = utf-8\n+end_of_line = lf\n+indent_style = space\n+insert_final_newline = true\n+trim_trailing_whitespace = true\n+\n+# Source code files\n+[*.{h,cpp,py,sh}]\n+indent_size = 4\n+\n+# .cirrus.yml, .appveyor.yml, .fuzzbuzz.yml, etc.\n+[*.yml]\n+indent_size = 2\n+\n+# Makefiles\n+[{*.am,Makefile.*.include}]\n+indent_style = tab\n+\n+# Autoconf scripts\n+[configure.ac]\n+indent_size = 2"
      },
      {
        "sha": "be9a1cd4e12e893e36c491ce060b688bbb182b72",
        "filename": ".fuzzbuzz.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/.fuzzbuzz.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/.fuzzbuzz.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.fuzzbuzz.yml?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,16 +0,0 @@\n-base: ubuntu:16.04\n-language: c++\n-engine: libFuzzer\n-environment:\n-  - CXXFLAGS=-fcoverage-mapping -fno-omit-frame-pointer -fprofile-instr-generate -gline-tables-only -O1\n-setup:\n-  - sudo apt-get update\n-  - sudo apt-get install -y autoconf bsdmainutils clang git libboost-all-dev libc++1 libc++abi1 libc++abi-dev libc++-dev libclang1 libclang-dev libdb5.3++ libevent-dev libllvm-ocaml-dev libomp5 libomp-dev libqt5core5a libqt5dbus5 libqt5gui5 libtool llvm llvm-dev llvm-runtime pkg-config qttools5-dev qttools5-dev-tools software-properties-common\n-  - ./autogen.sh\n-  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined --enable-danger-fuzz-link-all\n-  - make\n-  - git clone https://github.com/bitcoin-core/qa-assets\n-auto_targets:\n-  find_targets_command: find src/test/fuzz/ -executable -type f ! -name \"*.cpp\" ! -name \"*.h\"\n-  base_corpus_dir: qa-assets/fuzz_seed_corpus/\n-  memory_limit: none"
      },
      {
        "sha": "b76864cc381fae6e61f6b4e045f7ed3a2a7f094d",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -10,8 +10,7 @@ src/bitcoin-node\n src/bitcoin-tx\n src/bitcoin-util\n src/bitcoin-wallet\n-src/test/fuzz/*\n-!src/test/fuzz/*.*\n+src/test/fuzz/fuzz\n src/test/test_bitcoin\n src/qt/test/test_bitcoin-qt\n \n@@ -62,7 +61,7 @@ src/qt/bitcoin-qt.includes\n .dirstamp\n .libs\n .*.swp\n-*.*~*\n+*~\n *.bak\n *.rej\n *.orig\n@@ -150,3 +149,5 @@ db4/\n osx_volname\n dist/\n *.background.tiff\n+\n+/guix-build-*"
      },
      {
        "sha": "232d481e1879886ca913715d37b369164142f023",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-021x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n+[bitcoin.qt-translation-022x]\n+file_filter = src/qt/locale/bitcoin_<lang>.xlf\n+source_file = src/qt/locale/bitcoin_en.xlf\n source_lang = en"
      },
      {
        "sha": "5cd4715ef0e54a646e704fe15a56e963b27c3b63",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -57,8 +57,8 @@ Communication Channels\n ----------------------\n \n Most communication about Bitcoin Core development happens on IRC, in the\n-`#bitcoin-core-dev` channel on Freenode. The easiest way to participate on IRC is\n-with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n+`#bitcoin-core-dev` channel on Libera Chat. The easiest way to participate on IRC is\n+with the web client, [web.libera.chat](https://web.libera.chat/#bitcoin-core-dev). Chat\n history logs can be found\n on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n@@ -197,7 +197,7 @@ Note: Code review is a burdensome but important part of the development process,\n \n If your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\n commits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\n-before it will be merged. The basic squashing workflow is shown below.\n+before it will be reviewed. The basic squashing workflow is shown below.\n \n     git checkout your_branch_name\n     git rebase -i HEAD~n"
      },
      {
        "sha": "d84dab184275708849bdcf03c631650a1a2d8938",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,7 +4,7 @@\n \n # Pattern rule to print variables, e.g. make print-top_srcdir\n print-%:\n-\t@echo $* = $($*)\n+\t@echo '$*'='$($*)'\n \n ACLOCAL_AMFLAGS = -I build-aux/m4\n SUBDIRS = src\n@@ -78,6 +78,7 @@ COVERAGE_INFO = $(COV_TOOL_WRAPPER) baseline.info \\\n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n+if TARGET_WINDOWS\n $(BITCOIN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n@@ -90,6 +91,10 @@ $(BITCOIN_WIN_INSTALLER): all-recursive\n \t  echo error: could not build $@\n \t@echo built $@\n \n+deploy: $(BITCOIN_WIN_INSTALLER)\n+endif\n+\n+if TARGET_DARWIN\n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)\n \t@echo \"APPL????\" > $@\n@@ -133,7 +138,7 @@ $(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.\n \ttiffutil -cathidpicheck $^ -out $@\n \n deploydir: $(OSX_DMG)\n-else\n+else !BUILD_DARWIN\n APP_DIST_DIR=$(top_builddir)/dist\n APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n \n@@ -144,7 +149,7 @@ $(APP_DIST_DIR)/Applications:\n $(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n \n $(OSX_TEMP_ISO): $(APP_DIST_EXTRAS)\n-\t$(XORRISOFS) -D -l -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -o $@ dist -- $(if $(SOURCE_DATE_EPOCH),-volume_date all_file_dates =$(SOURCE_DATE_EPOCH))\n+\t$(XORRISOFS) -D -l -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -o $@ $(APP_DIST_DIR) -- $(if $(SOURCE_DATE_EPOCH),-volume_date all_file_dates =$(SOURCE_DATE_EPOCH))\n \n $(OSX_DMG): $(OSX_TEMP_ISO)\n \t$(DMG) dmg \"$<\" \"$@\"\n@@ -160,15 +165,11 @@ $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PAC\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL) OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) $(OSX_VOLNAME) -translations-dir=$(QT_TRANSLATION_DIR)\n \n deploydir: $(APP_DIST_EXTRAS)\n-endif\n+endif !BUILD_DARWIN\n \n-if TARGET_DARWIN\n appbundle: $(OSX_APP_BUILT)\n deploy: $(OSX_DMG)\n endif\n-if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n \n $(BITCOIN_QT_BIN): FORCE\n \t$(MAKE) -C src qt/$(@F)"
      },
      {
        "sha": "56132d7496d425993a2cbe6350e7bab404893f12",
        "filename": "README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,6 +3,11 @@ Bitcoin Core integration/staging tree\n \n https://bitcoincore.org\n \n+For an immediately usable, binary version of the Bitcoin Core software, see\n+https://bitcoincore.org/en/download/.\n+\n+Further information about Bitcoin Core is available in the [doc folder](/doc).\n+\n What is Bitcoin?\n ----------------\n \n@@ -12,9 +17,7 @@ with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n-For more information, as well as an immediately usable, binary version of\n-the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+For more information read the original Bitcoin whitepaper.\n \n License\n -------\n@@ -53,7 +56,7 @@ submit new unit tests for old code. Unit tests can be compiled and run\n and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n \n There are also [regression and integration tests](/test), written\n-in Python, that are run automatically on the build server.\n+in Python.\n These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n The CI (Continuous Integration) systems make sure that every pull request is built for Windows, Linux, and macOS,\n@@ -77,5 +80,3 @@ Translations are periodically pulled from Transifex and merged into the git repo\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "e048036e4236d8f7f321eea8501fd12af3ed78ce",
        "filename": "REVIEWERS",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/REVIEWERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/REVIEWERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/REVIEWERS?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -19,6 +19,7 @@\n \n # Maintainers\n #   @fanquake\n+#   @hebasto\n #   @jonasschnelli\n #   @laanwj\n #   @marcofalke\n@@ -56,14 +57,17 @@\n /src/util/settings.*                        @ryanofsky\n \n # Fuzzing\n-/src/test/fuzz/                             @practicalswift\n-/doc/fuzzing.md                             @practicalswift\n \n-# Test framework\n+# Tests\n+/src/test/net_peer_eviction_tests.cpp       @jonatack\n /test/functional/mempool_updatefromblock.py @hebasto\n /test/functional/feature_asmap.py           @jonatack\n /test/functional/interface_bitcoin_cli.py   @jonatack\n-/test/functional/tool_wallet.py             @jonatack\n+\n+# Backwards compatibility tests\n+*_compatibility.py                          @sjors\n+/test/functional/wallet_upgradewallet.py    @sjors @achow101\n+/test/get_previous_releases.py              @sjors\n \n # Translations\n /src/util/translation.h                     @hebasto\n@@ -98,16 +102,19 @@\n # Descriptors\n *descriptor*                                @achow101 @sipa\n \n+# External signer\n+*external_signer*                           @sjors\n+/doc/external-signer.md                     @sjors\n+*signer.py                                  @sjors\n+\n # Interfaces\n /src/interfaces/                            @ryanofsky\n \n # DB\n /src/txdb.*                                 @jamesob\n /src/dbwrapper.*                            @jamesob\n \n-# Scripts/Linter\n-*.sh                                        @practicalswift\n-/test/lint/                                 @practicalswift\n+# Linter\n /test/lint/lint-shell.sh                    @hebasto\n \n # Bech32"
      },
      {
        "sha": "7aac53c8155f1938a6bbed5fb407b573f85f81b8",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -11,7 +11,7 @@\n #   Test for the Boost C++ libraries of a particular version (or newer)\n #\n #   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   under /usr, /usr/local, /opt, /opt/local and /opt/homebrew and evaluates the\n #   $BOOST_ROOT environment variable. Further documentation is available at\n #   <http://randspringer.de/boost/index.html>.\n #\n@@ -151,7 +151,7 @@ AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n         else\n             search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n         fi\n-        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local /opt/homebrew/; do\n             if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n                 for libsubdir in $search_libsubdirs ; do\n                     if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n@@ -227,7 +227,7 @@ AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n             fi\n         else\n             if test \"x$cross_compiling\" != \"xyes\" ; then\n-                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n+                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local /opt/homebrew ; do\n                     if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n                         for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n                             _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`"
      },
      {
        "sha": "5d20e67464fcde6ee00f2582607e59f0759115b8",
        "filename": "build-aux/m4/ax_boost_process.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/build-aux/m4/ax_boost_process.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/build-aux/m4/ax_boost_process.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_process.m4?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROCESS\n-#\n-# DESCRIPTION\n-#\n-#   Test for Process library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROCESS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROCESS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_BOOST_PROCESS],\n-[\n-\tAC_ARG_WITH([boost-process],\n-\tAS_HELP_STRING([--with-boost-process@<:@=special-lib@:>@],\n-                   [use the Process library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-process=boost_process-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost_process=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost_process=\"yes\"\n-            ax_boost_user_process_lib=\"\"\n-        else\n-\t\t    want_boost_process=\"yes\"\n-\t\tax_boost_user_process_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost_process=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost_process\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Process library is available,\n-\t\t\t\t\t   ax_cv_boost_process,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/process.hpp>]],\n-                [[boost::process::child* child = new boost::process::child; delete child;]])],\n-                ax_cv_boost_process=yes, ax_cv_boost_process=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_process\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_PROCESS,,[define if the Boost::Process library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_process_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_process* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                 [link_process=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_process\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_process* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                 [link_process=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_process_lib boost_process-$ax_boost_user_process_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n-                                   [link_process=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Process library!)\n-            fi\n-\t\t\tif test \"x$link_process\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "75e80e6e75aa9f6c22387d0dabce11e5fce9526b",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 187,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,187 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 33\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-    AC_ARG_WITH([boost-thread],\n-    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost -\n-                    it is possible to specify a certain library for the linker\n-                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"$withval\"\n-        fi\n-        ],\n-        [want_boost=\"yes\"]\n-    )\n-\n-    if test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-\n-        LDFLAGS_SAVED=\"$LDFLAGS\"\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-                       ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-             CXXFLAGS_SAVE=$CXXFLAGS\n-\n-             case \"x$host_os\" in\n-                 xsolaris )\n-                     CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-                     break;\n-                     ;;\n-                 xmingw32 )\n-                     CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-                     break;\n-                     ;;\n-                 *android* )\n-                     break;\n-                     ;;\n-                 * )\n-                     CXXFLAGS=\"-pthread $CXXFLAGS\"\n-                     break;\n-                     ;;\n-             esac\n-\n-             AC_COMPILE_IFELSE([\n-                 AC_LANG_PROGRAM(\n-                     [[@%:@include <boost/thread/thread.hpp>]],\n-                     [[boost::thread_group thrds;\n-                       return 0;]])],\n-                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-             CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-        ])\n-        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-            case \"x$host_os\" in\n-                xsolaris )\n-                    BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-                xmingw32 )\n-                    BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-                *android* )\n-                    break;\n-                    ;;\n-                * )\n-                    BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-                    break;\n-                    ;;\n-            esac\n-\n-            AC_SUBST(BOOST_CPPFLAGS)\n-\n-            AC_DEFINE(HAVE_BOOST_THREAD,,\n-                      [define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            LDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-                    AC_CHECK_LIB($ax_lib, exit,\n-                                 [link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-                done\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-                    AC_CHECK_LIB($ax_lib, exit,\n-                                 [link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-                done\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-                      AC_CHECK_LIB($ax_lib, exit,\n-                                   [link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n-            fi\n-            if test \"x$link_thread\" = \"xno\"; then\n-                AC_MSG_ERROR(Could not link against $ax_lib !)\n-            else\n-                BOOST_THREAD_LIB=\"-l$ax_lib\"\n-                case \"x$host_os\" in\n-                    *bsd* )\n-                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                        break;\n-                        ;;\n-                    xsolaris )\n-                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n-                        break;\n-                        ;;\n-                    xmingw32 )\n-                        break;\n-                        ;;\n-                    *android* )\n-                        break;\n-                        ;;\n-                    * )\n-                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n-                        break;\n-                        ;;\n-                esac\n-                AC_SUBST(BOOST_THREAD_LIB)\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-    fi\n-])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 223,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,223 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    constructor_priority for constructor attribute with priority\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 3\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor_priority], [\n-                    int foo( void ) __attribute__((__constructor__(65535/2)));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                    int foo_int( void ) __attribute__(($1(\"internal\")));\n-                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "5b5a8ed16e252844d88785da1ab26facc8e3b27f",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 110,
        "deletions": 68,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -64,6 +64,13 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n     ],\n     [bitcoin_qt_want_version=auto])\n \n+  AS_IF([test \"x$with_gui\" = xqt5_debug],\n+        [AS_CASE([$host],\n+                 [*darwin*], [qt_lib_suffix=_debug],\n+                 [*mingw*], [qt_lib_suffix=d],\n+                 [qt_lib_suffix= ]); bitcoin_qt_want_version=qt5],\n+        [qt_lib_suffix= ])\n+\n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n   AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n   AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n@@ -101,37 +108,61 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS])\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl For Qt5, we can check a header to find out whether Qt is build\n-  dnl statically. When Qt is built statically, some plugins must be linked into\n-  dnl the final binary as well.\n-  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n-  dnl added.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n+  dnl We check a header to find out whether Qt is built statically.\n+  dnl When Qt is built statically, some plugins must be linked into\n+  dnl the final binary as well. _BITCOIN_QT_CHECK_STATIC_PLUGIN does\n+  dnl a quick link-check and appends the results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   _BITCOIN_QT_IS_STATIC\n   if test \"x$bitcoin_cv_static_qt\" = xyes; then\n-    _BITCOIN_QT_FIND_STATIC_PLUGINS\n+    _BITCOIN_QT_CHECK_STATIC_LIBS\n+\n+    if test \"x$qt_plugin_path\" != x; then\n+      if test -d \"$qt_plugin_path/platforms\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      fi\n+      if test -d \"$qt_plugin_path/styles\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/styles\"\n+      fi\n+      if test -d \"$qt_plugin_path/accessible\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      fi\n+      if test -d \"$qt_plugin_path/platforms/android\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n+      fi\n+    fi\n+\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n     if test \"x$TARGET_OS\" != xandroid; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGIN([QMinimalIntegrationPlugin], [-lqminimal])\n       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n     fi\n     if test \"x$TARGET_OS\" = xwindows; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+      dnl Linking against wtsapi32 is required. See #17749 and\n+      dnl https://bugreports.qt.io/browse/QTBUG-27097.\n+      AX_CHECK_LINK_FLAG([-lwtsapi32], [QT_LIBS=\"$QT_LIBS -lwtsapi32\"], [AC_MSG_ERROR([could not link against -lwtsapi32])])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGIN([QWindowsIntegrationPlugin], [-lqwindows])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGIN([QWindowsVistaStylePlugin], [-lqwindowsvistastyle])\n       AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n     elif test \"x$TARGET_OS\" = xlinux; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+      dnl workaround for https://bugreports.qt.io/browse/QTBUG-74874\n+      AX_CHECK_LINK_FLAG([-lxcb-shm], [QT_LIBS=\"$QT_LIBS -lxcb-shm\"], [AC_MSG_ERROR([could not link against -lxcb-shm])])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGIN([QXcbIntegrationPlugin], [-lqxcb])\n       AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n     elif test \"x$TARGET_OS\" = xdarwin; then\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+      AX_CHECK_LINK_FLAG([[-framework Carbon]],[QT_LIBS=\"$QT_LIBS -framework Carbon\"],[AC_MSG_ERROR(could not link against Carbon framework)])\n+      AX_CHECK_LINK_FLAG([[-framework IOSurface]],[QT_LIBS=\"$QT_LIBS -framework IOSurface\"],[AC_MSG_ERROR(could not link against IOSurface framework)])\n+      AX_CHECK_LINK_FLAG([[-framework Metal]],[QT_LIBS=\"$QT_LIBS -framework Metal\"],[AC_MSG_ERROR(could not link against Metal framework)])\n+      AX_CHECK_LINK_FLAG([[-framework QuartzCore]],[QT_LIBS=\"$QT_LIBS -framework QuartzCore\"],[AC_MSG_ERROR(could not link against QuartzCore framework)])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGIN([QCocoaIntegrationPlugin], [-lqcocoa])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGIN([QMacStylePlugin], [-lqmacstyle])\n       AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n     elif test \"x$TARGET_OS\" = xandroid; then\n-      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n+      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype $QT_LIBS\"\n       AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n     fi\n   fi\n@@ -140,7 +171,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n \n   if test \"x$qt_bin_path\" = x; then\n-    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n+    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins ${qt_lib_prefix}Core 2>/dev/null`\"\n   fi\n \n   if test \"x$use_hardening\" != xno; then\n@@ -195,6 +226,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n+  BITCOIN_QT_PATH_PROGS([LCONVERT], [lconvert-qt5 lconvert5 lconvert], $qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n@@ -228,7 +260,10 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n     fi\n     if test \"x$LUPDATE\" = x; then\n-      AC_MSG_WARN([lupdate is required to update qt translations])\n+      AC_MSG_WARN([lupdate tool is required to update Qt translations.])\n+    fi\n+    if test \"x$LCONVERT\" = x; then\n+      AC_MSG_WARN([lconvert tool is required to update Qt translations.])\n     fi\n   ],[\n     bitcoin_enable_qt=no\n@@ -251,12 +286,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(MOC_DEFS)\n ])\n \n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n+dnl All macros below are internal and should _not_ be used from configure.ac.\n \n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5.\n+dnl Internal. Check if the linked version of Qt was built statically.\n+dnl\n+dnl _BITCOIN_QT_IS_STATIC\n+dnl ---------------------\n+dnl\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Output: bitcoin_cv_static_qt=yes|no\n AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n@@ -277,78 +313,84 @@ AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n     ])\n ])\n \n-dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Internal. Check if the link-requirements for a static plugin are met.\n+dnl\n+dnl _BITCOIN_QT_CHECK_STATIC_PLUGIN(PLUGIN, LIBRARIES)\n+dnl --------------------------------------------------\n+dnl\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $1: A static plugin name.\n dnl Inputs: $2: The libraries that resolve $1.\n dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGIN], [\n+  AC_MSG_CHECKING([for $1 ($2)])\n   CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  LIBS=\"$2${qt_lib_suffix} $QT_LIBS $LIBS\"\n   AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+      #include <QtPlugin>\n+      Q_IMPORT_PLUGIN($1)\n+    ]])],\n+    [AC_MSG_RESULT([yes]); QT_LIBS=\"$2${qt_lib_suffix} $QT_LIBS\"],\n+    [AC_MSG_RESULT([no]); BITCOIN_QT_FAIL([$1 not found.])])\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n \n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-    if test \"x$qt_plugin_path\" != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-      if test -d \"$qt_plugin_path/accessible\"; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      fi\n-      if test -d \"$qt_plugin_path/platforms/android\"; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n-      fi\n-      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n-      if test \"x$TARGET_OS\" = xlinux; then\n-        PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-      elif test \"x$TARGET_OS\" = xdarwin; then\n-        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n-      fi\n-    fi\n+dnl Internal. Check Qt static libs with PKG_CHECK_MODULES.\n+dnl\n+dnl _BITCOIN_QT_CHECK_STATIC_LIBS\n+dnl -----------------------------\n+dnl\n+dnl Outputs: QT_LIBS is prepended.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_LIBS], [\n+  PKG_CHECK_MODULES([QT_ACCESSIBILITY], [${qt_lib_prefix}AccessibilitySupport${qt_lib_suffix}], [QT_LIBS=\"$QT_ACCESSIBILITY_LIBS $QT_LIBS\"])\n+  PKG_CHECK_MODULES([QT_DEVICEDISCOVERY], [${qt_lib_prefix}DeviceDiscoverySupport${qt_lib_suffix}], [QT_LIBS=\"$QT_DEVICEDISCOVERY_LIBS $QT_LIBS\"])\n+  PKG_CHECK_MODULES([QT_EDID], [${qt_lib_prefix}EdidSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_EDID_LIBS $QT_LIBS\"])\n+  PKG_CHECK_MODULES([QT_EVENTDISPATCHER], [${qt_lib_prefix}EventDispatcherSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_EVENTDISPATCHER_LIBS $QT_LIBS\"])\n+  PKG_CHECK_MODULES([QT_FB], [${qt_lib_prefix}FbSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_FB_LIBS $QT_LIBS\"])\n+  PKG_CHECK_MODULES([QT_FONTDATABASE], [${qt_lib_prefix}FontDatabaseSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_FONTDATABASE_LIBS $QT_LIBS\"])\n+  PKG_CHECK_MODULES([QT_THEME], [${qt_lib_prefix}ThemeSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_THEME_LIBS $QT_LIBS\"])\n+  if test \"x$TARGET_OS\" = xlinux; then\n+    PKG_CHECK_MODULES([QT_INPUT], [${qt_lib_prefix}XcbQpa], [QT_LIBS=\"$QT_INPUT_LIBS $QT_LIBS\"])\n+    PKG_CHECK_MODULES([QT_SERVICE], [${qt_lib_prefix}ServiceSupport], [QT_LIBS=\"$QT_SERVICE_LIBS $QT_LIBS\"])\n+    PKG_CHECK_MODULES([QT_XCBQPA], [${qt_lib_prefix}XcbQpa], [QT_LIBS=\"$QT_XCBQPA_LIBS $QT_LIBS\"])\n+  elif test \"x$TARGET_OS\" = xdarwin; then\n+    PKG_CHECK_MODULES([QT_CLIPBOARD], [${qt_lib_prefix}ClipboardSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_CLIPBOARD_LIBS $QT_LIBS\"])\n+    PKG_CHECK_MODULES([QT_GRAPHICS], [${qt_lib_prefix}GraphicsSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_GRAPHICS_LIBS $QT_LIBS\"])\n+    PKG_CHECK_MODULES([QT_SERVICE], [${qt_lib_prefix}ServiceSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_SERVICE_LIBS $QT_LIBS\"])\n+  elif test \"x$TARGET_OS\" = xwindows; then\n+    PKG_CHECK_MODULES([QT_WINDOWSUIAUTOMATION], [${qt_lib_prefix}WindowsUIAutomationSupport${qt_lib_suffix}], [QT_LIBS=\"$QT_WINDOWSUIAUTOMATION_LIBS $QT_LIBS\"])\n+  elif test \"x$TARGET_OS\" = xandroid; then\n+    PKG_CHECK_MODULES([QT_EGL], [${qt_lib_prefix}EglSupport], [QT_LIBS=\"$QT_EGL_LIBS $QT_LIBS\"])\n+  fi\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n+dnl\n+dnl _BITCOIN_QT_FIND_LIBS\n+dnl ---------------------\n+dnl\n dnl Outputs: All necessary QT_* variables are set.\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS],[\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core${qt_lib_suffix} $qt_version], [QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_INCLUDES\" QT_LIBS=\"$QT_CORE_LIBS $QT_LIBS\"],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core${qt_lib_suffix} $qt_version not found])])\n   ])\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui${qt_lib_suffix} $qt_version], [QT_INCLUDES=\"$QT_GUI_CFLAGS $QT_INCLUDES\" QT_LIBS=\"$QT_GUI_LIBS $QT_LIBS\"],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui${qt_lib_suffix} $qt_version not found])])\n   ])\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets${qt_lib_suffix} $qt_version], [QT_INCLUDES=\"$QT_WIDGETS_CFLAGS $QT_INCLUDES\" QT_LIBS=\"$QT_WIDGETS_LIBS $QT_LIBS\"],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets${qt_lib_suffix} $qt_version not found])])\n   ])\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network${qt_lib_suffix} $qt_version], [QT_INCLUDES=\"$QT_NETWORK_CFLAGS $QT_INCLUDES\" QT_LIBS=\"$QT_NETWORK_LIBS $QT_LIBS\"],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network${qt_lib_suffix} $qt_version not found])])\n   ])\n-  QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_GUI_CFLAGS $QT_WIDGETS_CFLAGS $QT_NETWORK_CFLAGS\"\n-  QT_LIBS=\"$QT_CORE_LIBS $QT_GUI_LIBS $QT_WIDGETS_LIBS $QT_NETWORK_LIBS\"\n \n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test${qt_lib_suffix} $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n     if test \"x$use_dbus\" != xno; then\n       PKG_CHECK_MODULES([QT_DBUS], [${qt_lib_prefix}DBus $qt_version], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n     fi"
      },
      {
        "sha": "40639dfe618e585ca81bab1e387c8c44280a62e4",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,11 +12,17 @@ dnl warranty.\n m4_define([_CHECK_ATOMIC_testbody], [[\n   #include <atomic>\n   #include <cstdint>\n+  #include <chrono>\n+\n+  using namespace std::chrono_literals;\n \n   int main() {\n     std::atomic<bool> lock{true};\n     std::atomic_exchange(&lock, false);\n \n+    std::atomic<std::chrono::seconds> t{0s};\n+    t.store(2s);\n+\n     std::atomic<int64_t> a{};\n \n     int64_t v = 5;"
      },
      {
        "sha": "38923a98fc966a932118c550e05ad3de91bf2cb2",
        "filename": "build-aux/m4/l_socket.m4",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/l_socket.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build-aux/m4/l_socket.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_socket.m4?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,36 @@\n+# Illumos/SmartOS requires linking with -lsocket if\n+# using getifaddrs & freeifaddrs\n+\n+m4_define([_CHECK_SOCKET_testbody], [[\n+  #include <sys/types.h>\n+  #include <ifaddrs.h>\n+\n+  int main() {\n+    struct ifaddrs *ifaddr;\n+    getifaddrs(&ifaddr);\n+    freeifaddrs(ifaddr);\n+  }\n+]])\n+\n+AC_DEFUN([CHECK_SOCKET], [\n+\n+  AC_LANG_PUSH(C++)\n+\n+  AC_MSG_CHECKING([whether ifaddrs funcs can be used without link library])\n+\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_SOCKET_testbody])],[\n+      AC_MSG_RESULT([yes])\n+    ],[\n+      AC_MSG_RESULT([no])\n+      LIBS=\"$LIBS -lsocket\"\n+      AC_MSG_CHECKING([whether getifaddrs needs -lsocket])\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_SOCKET_testbody])],[\n+          AC_MSG_RESULT([yes])\n+        ],[\n+          AC_MSG_RESULT([no])\n+          AC_MSG_FAILURE([cannot figure out how to use getifaddrs])\n+        ])\n+    ])\n+\n+  AC_LANG_POP\n+])"
      },
      {
        "sha": "88a05644a73a71ed0ade296ff19dfcb0fe6967d9",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 30,
        "deletions": 10,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,7 +3,7 @@ Building Bitcoin Core with Visual Studio\n \n Introduction\n ---------------------\n-Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2017 and 2019.\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2019 (building with earlier versions of Visual Studio should not be expected to work).\n \n Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n \n@@ -27,11 +27,15 @@ Options for installing the dependencies in a Visual Studio compatible manner are\n - Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n - Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n \n-The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. The `msbuild` project files are configured to automatically install the `vcpkg` dependencies.\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. To ensure `msbuild` project files automatically install the `vcpkg` dependencies use:\n+\n+```\n+vcpkg integrate install\n+```\n \n Qt\n ---------------------\n-In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n+In order to build Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v142) and platform type (x86 or x64) must also match.\n \n Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n \n@@ -53,19 +57,13 @@ PS >py -3 msvc-autogen.py\n \n - An optional step is to adjust the settings in the `build_msvc` directory and the `common.init.vcxproj` file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n \n-- To build from the command line with the Visual Studio 2017 toolchain use:\n-\n-```\n-msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n-```\n-\n - To build from the command line with the Visual Studio 2019 toolchain use:\n \n ```\n msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n ```\n \n-- Alternatively open the `build_msvc/bitcoin.sln` file in Visual Studio.\n+- Alternatively, open the `build_msvc/bitcoin.sln` file in Visual Studio 2019.\n \n AppVeyor\n ---------------------\n@@ -77,3 +75,25 @@ For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options\n     #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n     #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n ```\n+\n+Security\n+---------------------\n+[Base address randomization](https://docs.microsoft.com/en-us/cpp/build/reference/dynamicbase-use-address-space-layout-randomization?view=msvc-160) is used to make Bitcoin Core more secure. When building Bitcoin using the `build_msvc` process base address randomization can be disabled by editing `common.init.vcproj` to change `RandomizedBaseAddress` from `true` to `false` and then rebuilding the project.\n+\n+To check if `bitcoind` has `RandomizedBaseAddress` enabled or disabled run\n+\n+```\n+.\\dumpbin.exe /headers src/bitcoind.exe\n+```\n+\n+If is it enabled then in the output `Dynamic base` will be listed in the `DLL characteristics` under `OPTIONAL HEADER VALUES` as shown below\n+\n+```\n+            8160 DLL characteristics\n+                   High Entropy Virtual Addresses\n+                   Dynamic base\n+                   NX compatible\n+                   Terminal Server Aware\n+```\n+\n+This may not disable all stack randomization as versions of windows employ additional stack randomization protections. These protections must be turned off in the OS configuration.\n\\ No newline at end of file"
      },
      {
        "sha": "a697c1dfb68cd0921f5e85e92e773692193eb34e",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -55,6 +55,7 @@\n       <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n+      <SubSystem>Windows</SubSystem>\n       <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n       <AdditionalOptions>/ignore:4206 /LTCG:OFF</AdditionalOptions>\n     </Link>"
      },
      {
        "sha": "aba5607eb60279c9bb0663673b6c1e0f71d10bc9",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -50,15 +50,12 @@\n /* define if the Boost::Filesystem library is available */\n #define HAVE_BOOST_FILESYSTEM /**/\n \n-/* define if the Boost::Process library is available */\n-#define HAVE_BOOST_PROCESS /**/\n+/* define if external signer support is enabled (requires Boost::Process) */\n+#define ENABLE_EXTERNAL_SIGNER /**/\n \n /* define if the Boost::System library is available */\n #define HAVE_BOOST_SYSTEM /**/\n \n-/* define if the Boost::Thread library is available */\n-#define HAVE_BOOST_THREAD /**/\n-\n /* define if the Boost::Unit_Test_Framework library is available */\n #define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n \n@@ -95,9 +92,9 @@\n    don't. */\n #define HAVE_DECL_BSWAP_64 0\n \n-/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+/* Define to 1 if you have the declaration of `fork', and to 0 if you don't.\n    */\n-#define HAVE_DECL_DAEMON 0\n+#define HAVE_DECL_FORK 0\n \n /* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n    don't. */\n@@ -135,6 +132,10 @@\n    don't. */\n #define HAVE_DECL_LE64TOH 0\n \n+/* Define to 1 if you have the declaration of `setsid', and to 0 if you don't.\n+   */\n+#define HAVE_DECL_SETSID 0\n+\n /* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n    don't. */\n #define HAVE_DECL_STRERROR_R 0\n@@ -180,9 +181,6 @@\n /* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n #define HAVE_MINIUPNPC_MINIUPNPC_H 1\n \n-/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n-#define HAVE_MINIUPNPC_MINIWGET_H 1\n-\n /* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n #define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n "
      },
      {
        "sha": "c2c32af8380801513340bc9b154ad9e4862cb4f1",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -10,6 +10,9 @@\n   </PropertyGroup>\n   <ItemGroup>\n     <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\init\\bitcoind.cpp\">\n+      <ObjectFileName>$(IntDir)init_bitcoind.obj</ObjectFileName>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">"
      },
      {
        "sha": "6ea018d8463dca3e38c5205f8d6357004078033a",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -96,15 +96,16 @@\n     <ClCompile>\n       <WarningLevel>Level3</WarningLevel>\n       <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <AdditionalOptions>/utf-8 /std:c++17 %(AdditionalOptions)</AdditionalOptions>\n-      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n+      <AdditionalOptions>/utf-8 /Zc:__cplusplus /std:c++17 %(AdditionalOptions)</AdditionalOptions>\n+      <DisableSpecificWarnings>4018;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n       <TreatWarningAsError>true</TreatWarningAsError>\n       <PreprocessorDefinitions>_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING;_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING;ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;_WIN32_IE=0x0501;WIN32_LEAN_AND_MEAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n       <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <RandomizedBaseAddress>true</RandomizedBaseAddress>\n     </Link>\n     <Lib>\n       <AdditionalOptions>/ignore:4221</AdditionalOptions>"
      },
      {
        "sha": "ce66a7ab34b95fc6e5692fecb568090a2122fa72",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2,15 +2,15 @@\n <Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n \n   <PropertyGroup Label=\"QtGlobals\">\n-    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n+    <QtBaseDir>C:\\Qt5.12.11_x64_static_vs2019_16101</QtBaseDir>\n     <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n     <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n     <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n     <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n     <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n     <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n-    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n-    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n+    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtPluginsLibraryDir)\\styles\\qwindowsvistastyle.lib;$(QtLibraryDir)\\Qt5WindowsUIAutomationSupport.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;Wtsapi32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n+    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtPluginsLibraryDir)\\styles\\qwindowsvistastyled.lib;$(QtLibraryDir)\\*d.lib;Wtsapi32.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n   </PropertyGroup>\n \n </Project>"
      },
      {
        "sha": "96bb5843758b3db65e5987f261e949cef447ba5e",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -34,6 +34,7 @@\n     <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\peertablesortproxy.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\psbtoperationsdialog.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n@@ -87,6 +88,7 @@\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablesortproxy.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_psbtoperationsdialog.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />"
      },
      {
        "sha": "009be30decbf11fb95aafbcc935809706b6cd186",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -51,7 +51,7 @@\n   <ItemDefinitionGroup>\n      <ClCompile>\n        <PreprocessorDefinitions>HAVE_CRC32C=0;HAVE_SNAPPY=0;__STDC_LIMIT_MACROS;LEVELDB_IS_BIG_ENDIAN=0;_UNICODE;UNICODE;_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-       <DisableSpecificWarnings>4244;4267;4312;4722;</DisableSpecificWarnings>\n+       <DisableSpecificWarnings>4244;4267</DisableSpecificWarnings>\n        <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      </ClCompile>\n   </ItemDefinitionGroup>"
      },
      {
        "sha": "f9b0a7975cb9198dc0a1b6375b5fffd46663ac76",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -10,13 +10,14 @@\n   <ItemGroup>\n     <ClCompile Include=\"..\\..\\src\\secp256k1\\src\\secp256k1.c\" />\n   </ItemGroup>\n-    <ItemDefinitionGroup>\n+  <ItemDefinitionGroup>\n     <ClCompile>\n       <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;ENABLE_MODULE_EXTRAKEYS;ENABLE_MODULE_SCHNORRSIG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-       <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-     </ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <DisableSpecificWarnings>4146;4244;4267;4334</DisableSpecificWarnings>\n+    </ClCompile>\n   </ItemDefinitionGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <Import Project=\"..\\common.vcxproj\" />\n-</Project>\n\\ No newline at end of file\n+</Project>"
      },
      {
        "sha": null,
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "1d2c86b7ace65877b5cfa70e3c73df570f67dd2b",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -11,7 +11,6 @@\n     <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n@@ -20,7 +19,6 @@\n     <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n-    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n@@ -89,7 +87,6 @@\n   <ItemGroup>\n     <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n     <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n-    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n     <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n     <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n     <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />"
      },
      {
        "sha": "f3c8517130b34b0d25af88724b77e178faf0e768",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -45,7 +45,7 @@ int main()\n     stream << vanillaSpendTx;\n \n     bitcoinconsensus_error err;\n-    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n+    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, stream.data(), stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n     std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n \n     getchar();"
      },
      {
        "sha": "42b9a5d16fc0f91956fe0bdbb50cd3a6603e5d73",
        "filename": "build_msvc/vcpkg.json",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,7 +8,6 @@\n     \"boost-process\",\n     \"boost-signals2\",\n     \"boost-test\",\n-    \"boost-thread\",\n     \"sqlite3\",\n     \"double-conversion\",\n     {"
      },
      {
        "sha": "2c63a9efac8acfb828d408b08505d60426c0ed20",
        "filename": "ci/lint/04_install.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -15,7 +15,8 @@ ${CI_RETRY_EXE} pip3 install codespell==2.0.0\n ${CI_RETRY_EXE} pip3 install flake8==3.8.3\n ${CI_RETRY_EXE} pip3 install yq\n ${CI_RETRY_EXE} pip3 install mypy==0.781\n+${CI_RETRY_EXE} pip3 install vulture==2.3\n \n-SHELLCHECK_VERSION=v0.7.1\n+SHELLCHECK_VERSION=v0.7.2\n curl -sL \"https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "fa4d0410fa1b78b508f2c33c234e422dc6f53993",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -11,6 +11,12 @@ export LC_ALL=C.UTF-8\n # This is where the depends build is done.\n BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n export BASE_ROOT_DIR\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n+export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n \n echo \"Setting specific values in env\"\n if [ -n \"${FILE_ENV}\" ]; then\n@@ -22,9 +28,6 @@ fi\n echo \"Fallback to default values in env (if not yet set)\"\n # The number of parallel jobs to pass down to make and test_runner.py\n export MAKEJOBS=${MAKEJOBS:--j4}\n-# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n-# This folder only exists on the ci host.\n-export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n # What host to compile for. See also ./depends/README.md\n # Tests that need cross-compilation export the appropriate HOST.\n # Tests that run natively guess the host\n@@ -56,16 +59,13 @@ export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n # The cache dir.\n # This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n-# The depends dir.\n-# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n-export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n # Folder where the build result is put (bin and lib).\n export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n # Folder where the build is done (dist and out-of-tree build).\n export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_SCRATCH_DIR/build}\n export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n-export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps bison}\n export GOAL=${GOAL:-install}\n export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH"
      },
      {
        "sha": "f78a84eeac47dde651ba6cb7fbbe62e84024722f",
        "filename": "ci/test/00_setup_env_android.sh",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_android.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_android.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_android.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=aarch64-linux-android\n+export PACKAGES=\"clang llvm unzip openjdk-8-jdk gradle\"\n+export CONTAINER_NAME=ci_android\n+export DOCKER_NAME_TAG=\"ubuntu:focal\"\n+\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+\n+export ANDROID_API_LEVEL=28\n+export ANDROID_BUILD_TOOLS_VERSION=28.0.3\n+export ANDROID_NDK_VERSION=21.1.6352462\n+export ANDROID_TOOLS_URL=https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip\n+export ANDROID_HOME=\"${DEPENDS_DIR}/SDKs/android\"\n+export ANDROID_NDK_HOME=\"${ANDROID_HOME}/ndk/${ANDROID_NDK_VERSION}\"\n+export DEP_OPTS=\"ANDROID_SDK=${ANDROID_HOME} ANDROID_NDK=${ANDROID_NDK_HOME} ANDROID_API_LEVEL=${ANDROID_API_LEVEL} ANDROID_TOOLCHAIN_BIN=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/\"\n+\n+export BITCOIN_CONFIG=\"--disable-ccache\""
      },
      {
        "sha": "8d2b70e549c9af0435891eff2b2f7ed19d2684d9",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -25,4 +25,4 @@ export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"install\"\n # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n # This could be removed once the ABI change warning does not show up by default\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\""
      },
      {
        "sha": "2ddb93290706e0aa52503dbcc4bbb29108016e5c",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -9,8 +9,8 @@ export LC_ALL=C.UTF-8\n export HOST=i686-pc-linux-gnu\n export CONTAINER_NAME=ci_i686_centos_8\n export DOCKER_NAME_TAG=centos:8\n-export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python3-zmq which patch lbzip2 dash rsync coreutils\"\n+export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python3-zmq which patch lbzip2 dash rsync coreutils bison\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports\"\n export CONFIG_SHELL=\"/bin/dash\"\n export TEST_RUNNER_ENV=\"LC_ALL=en_US.UTF-8\""
      },
      {
        "sha": "73ac09c1de1c6199e5f90cefd969db15b49dce96",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,12 +7,12 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_macos_cross\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to macos (bionic is used in the gitian build as well)\n+export DOCKER_NAME_TAG=ubuntu:20.04  # Check that Focal can cross-compile to macos (Focal is used in the gitian build as well)\n export HOST=x86_64-apple-darwin18\n-export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools xorriso\"\n-export XCODE_VERSION=11.3.1\n-export XCODE_BUILD_ID=11C505\n+export PACKAGES=\"cmake imagemagick librsvg2-bin libz-dev libtiff-tools libtinfo5 python3-setuptools xorriso\"\n+export XCODE_VERSION=12.1\n+export XCODE_BUILD_ID=12A7403\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --with-boost-process\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports\""
      },
      {
        "sha": "c0d951a04171535372a71cda362d8c3427fd9d24",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,12 +7,11 @@\n export LC_ALL=C.UTF-8\n \n export HOST=x86_64-apple-darwin18\n-export PIP_PACKAGES=\"zmq\"\n+export PIP_PACKAGES=\"zmq lief\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --with-boost-process\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports\"\n export CI_OS_NAME=\"macos\"\n export NO_DEPENDS=1\n export OSX_SDK=\"\"\n export CCACHE_SIZE=300M\n-\n export RUN_SECURITY_TESTS=\"true\""
      },
      {
        "sha": "ab185b6e7142f98fa44792677d5e6aa9760db532",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,8 +7,8 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n-export DOCKER_NAME_TAG=ubuntu:20.04\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n+export DOCKER_NAME_TAG=ubuntu:hirsute\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "58388fa92882193ffc8559009bf660d0392acd4a",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,11 +8,11 @@ export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n export CONTAINER_NAME=ci_native_fuzz\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\"\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined,integer CC=clang CXX=clang++ --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined,integer CC=clang CXX=clang++\"\n export CCACHE_SIZE=200M"
      },
      {
        "sha": "d5b28ca5cf02b50723eb83fae386980a9c282ef6",
        "filename": "ci/test/00_setup_env_native_fuzz_with_msan.sh",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_fuzz_with_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_fuzz_with_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_msan.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,24 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+LIBCXX_DIR=\"${BASE_SCRATCH_DIR}/msan/build/\"\n+export MSAN_FLAGS=\"-fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -g -O1 -fno-optimize-sibling-calls\"\n+LIBCXX_FLAGS=\"-nostdinc++ -stdlib=libc++ -L${LIBCXX_DIR}lib -lc++abi -I${LIBCXX_DIR}include -I${LIBCXX_DIR}include/c++/v1 -lpthread -Wl,-rpath,${LIBCXX_DIR}lib -Wno-unused-command-line-argument\"\n+export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n+\n+export CONTAINER_NAME=\"ci_native_msan\"\n+export PACKAGES=\"clang-9 llvm-9 cmake\"\n+export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++17 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' libevent_cflags='${MSAN_FLAGS}' zeromq_cxxflags='-std=c++17 ${MSAN_AND_LIBCXX_FLAGS}'\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,memory --with-asm=no --prefix=${DEPENDS_DIR}/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+export USE_MEMORY_SANITIZER=\"true\"\n+export RUN_UNIT_TESTS=\"false\"\n+export RUN_FUNCTIONAL_TESTS=\"false\"\n+export RUN_FUZZ_TESTS=true\n+export CCACHE_SIZE=250M"
      },
      {
        "sha": "2cf672b91ee894975ba0c274a786d29bab42eabb",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n export CONTAINER_NAME=ci_native_fuzz_valgrind\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev valgrind\"\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev valgrind\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "7bcf9f23a2b96622157d459a3613d6db381120fb",
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,17 +7,17 @@\n export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n-LIBCXX_DIR=\"${BASE_ROOT_DIR}/ci/scratch/msan/build/\"\n+LIBCXX_DIR=\"${BASE_SCRATCH_DIR}/msan/build/\"\n export MSAN_FLAGS=\"-fsanitize=memory -fsanitize-memory-track-origins=2 -fno-omit-frame-pointer -g -O1 -fno-optimize-sibling-calls\"\n LIBCXX_FLAGS=\"-nostdinc++ -stdlib=libc++ -L${LIBCXX_DIR}lib -lc++abi -I${LIBCXX_DIR}include -I${LIBCXX_DIR}include/c++/v1 -lpthread -Wl,-rpath,${LIBCXX_DIR}lib -Wno-unused-command-line-argument\"\n export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n export BDB_PREFIX=\"${BASE_ROOT_DIR}/db4\"\n \n export CONTAINER_NAME=\"ci_native_msan\"\n export PACKAGES=\"clang-9 llvm-9 cmake\"\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++17 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++17 ${MSAN_AND_LIBCXX_FLAGS}'\"\n+export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++17 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' libevent_cflags='${MSAN_FLAGS}' sqlite_cflags='${MSAN_FLAGS}' zeromq_cxxflags='-std=c++17 ${MSAN_AND_LIBCXX_FLAGS}'\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${BASE_ROOT_DIR}/depends/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n+export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${DEPENDS_DIR}/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n export USE_MEMORY_SANITIZER=\"true\"\n export RUN_FUNCTIONAL_TESTS=\"false\"\n export CCACHE_SIZE=250M"
      },
      {
        "sha": "1418dfbc513b3642847f892b20c24308040761f6",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,8 +8,10 @@ export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_multiprocess\n export DOCKER_NAME_TAG=ubuntu:20.04\n-export PACKAGES=\"cmake python3\"\n-export DEP_OPTS=\"MULTIPROCESS=1\"\n+export PACKAGES=\"cmake python3 python3-pip llvm clang\"\n+export DEP_OPTS=\"DEBUG=1 MULTIPROCESS=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-debug CC=clang CXX=clang++\"  # Use clang to avoid OOM\n export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\"\n+export RUN_SECURITY_TESTS=\"true\"\n+export PIP_PACKAGES=\"lief\""
      },
      {
        "sha": "d167c9198ad29d96bf97dda37c5efdaeeecbddd5",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -11,4 +11,4 @@ export DOCKER_NAME_TAG=ubuntu:18.04  # Use bionic to have one config run the tes\n export PACKAGES=\"python3-zmq clang-5.0 llvm-5.0\"  # Use clang-5 to test C++17 compatibility, see doc/dependencies.md\n export DEP_OPTS=\"NO_WALLET=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-5.0 CXX=clang++-5.0 --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-5.0 CXX=clang++-5.0\""
      },
      {
        "sha": "9c57eba62ad943f2087d6f5ffcf62a051783a9b2",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -11,9 +11,9 @@ export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic gcc-7 can compile our c\n export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 NO_NATPMP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-export RUN_SECURITY_TESTS=\"true\"\n export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports\n+--enable-debug --disable-fuzz-binary  CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\""
      },
      {
        "sha": "a5082bdaab37c2c5ece085944fb873dbba6c2e51",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,8 +7,8 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_tsan\n-export DOCKER_NAME_TAG=ubuntu:20.04\n+export DOCKER_NAME_TAG=ubuntu:hirsute\n export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++'\""
      },
      {
        "sha": "e079a7057c87e0cbdefc6aaf5df5a246cbb30d5f",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n export USE_VALGRIND=1\n export NO_DEPENDS=1\n export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547"
      },
      {
        "sha": "51a0fd9117d865d57a3ae6f369d804125f5aeb9f",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -23,4 +23,4 @@ export RUN_UNIT_TESTS=true\n export TEST_RUNNER_ENV=\"LC_ALL=C\"\n export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\""
      },
      {
        "sha": "4d5bde13fddac6ec8a4756dd6d70c5bfc48052cd",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,13 +7,13 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_win64\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic can cross-compile to win64 (bionic is used in the gitian build as well)\n+export DOCKER_NAME_TAG=ubuntu:20.04  # Check that Focal can cross-compile to win64 (Focal is used in the gitian build as well)\n export HOST=x86_64-w64-mingw32\n-export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64 file\"\n+export DPKG_ADD_ARCH=\"i386\"\n+export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64 wine32 file\"\n export RUN_FUNCTIONAL_TESTS=false\n-export RUN_SECURITY_TESTS=\"true\"\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --disable-external-signer\"\n \n # Compiler for MinGW-w64 causes false -Wreturn-type warning.\n # See https://sourceforge.net/p/mingw-w64/bugs/306/"
      },
      {
        "sha": "01dbfe221b0dc002c6e173f54863e7044b4722c6",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -33,7 +33,12 @@ if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n   echo \"Creating $DOCKER_NAME_TAG container to run in\"\n   ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n \n-  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n+  if [ -n \"${RESTART_CI_DOCKER_BEFORE_RUN}\" ] ; then\n+    echo \"Restart docker before run to stop and clear all containers started with --rm\"\n+    systemctl restart docker\n+  fi\n+\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN --rm --interactive --detach --tty \\\n                   --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n                   --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n                   --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n@@ -62,6 +67,9 @@ if [[ $DOCKER_NAME_TAG == centos* ]]; then\n elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+  if [ -n \"$PIP_PACKAGES\" ]; then\n+    ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n+  fi\n fi\n \n if [ \"$CI_OS_NAME\" == \"macos\" ]; then\n@@ -87,7 +95,7 @@ if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n   DOCKER_EXEC \"update-alternatives --install /usr/bin/clang++ clang++ \\$(which clang++-9) 100\"\n   DOCKER_EXEC \"update-alternatives --install /usr/bin/clang clang \\$(which clang-9) 100\"\n   DOCKER_EXEC \"mkdir -p ${BASE_SCRATCH_DIR}/msan/build/\"\n-  DOCKER_EXEC \"git clone --depth=1 https://github.com/llvm/llvm-project -b llvmorg-10.0.0 ${BASE_SCRATCH_DIR}/msan/llvm-project\"\n+  DOCKER_EXEC \"git clone --depth=1 https://github.com/llvm/llvm-project -b llvmorg-12.0.0 ${BASE_SCRATCH_DIR}/msan/llvm-project\"\n   DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && cmake -DLLVM_ENABLE_PROJECTS='libcxx;libcxxabi' -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Memory -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLLVM_TARGETS_TO_BUILD=X86 ../llvm-project/llvm/\"\n   DOCKER_EXEC \"cd ${BASE_SCRATCH_DIR}/msan/build/ && make $MAKEJOBS cxx\"\n fi"
      },
      {
        "sha": "8dd489d7f8fec6b2142b561a3d1507230a96e3f6",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -19,7 +19,16 @@ OSX_SDK_BASENAME=\"Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-li\n OSX_SDK_PATH=\"${DEPENDS_DIR}/sdk-sources/${OSX_SDK_BASENAME}\"\n \n if [ -n \"$XCODE_VERSION\" ] && [ ! -f \"$OSX_SDK_PATH\" ]; then\n-  curl --location --fail \"${SDK_URL}/${OSX_SDK_BASENAME}\" -o \"$OSX_SDK_PATH\"\n+  DOCKER_EXEC curl --location --fail \"${SDK_URL}/${OSX_SDK_BASENAME}\" -o \"$OSX_SDK_PATH\"\n+fi\n+\n+if [ -n \"$ANDROID_TOOLS_URL\" ]; then\n+  ANDROID_TOOLS_PATH=$DEPENDS_DIR/sdk-sources/android-tools.zip\n+\n+  DOCKER_EXEC curl --location --fail \"${ANDROID_TOOLS_URL}\" -o \"$ANDROID_TOOLS_PATH\"\n+  DOCKER_EXEC mkdir -p \"${ANDROID_HOME}/cmdline-tools\"\n+  DOCKER_EXEC unzip -o \"$ANDROID_TOOLS_PATH\" -d \"${ANDROID_HOME}/cmdline-tools\"\n+  DOCKER_EXEC \"yes | ${ANDROID_HOME}/cmdline-tools/tools/bin/sdkmanager --install \\\"build-tools;${ANDROID_BUILD_TOOLS_VERSION}\\\" \\\"platform-tools\\\" \\\"platforms;android-${ANDROID_API_LEVEL}\\\" \\\"ndk;${ANDROID_NDK_VERSION}\\\"\"\n fi\n \n if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then"
      },
      {
        "sha": "a42cd6cee1430ae5f13ec9162d06c2b15f6c9606",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -6,6 +6,14 @@\n \n export LC_ALL=C.UTF-8\n \n+if [ -n \"$ANDROID_TOOLS_URL\" ]; then\n+  DOCKER_EXEC make distclean || true\n+  DOCKER_EXEC ./autogen.sh\n+  DOCKER_EXEC ./configure $BITCOIN_CONFIG --prefix=$DEPENDS_DIR/aarch64-linux-android || ( (DOCKER_EXEC cat config.log) && false)\n+  DOCKER_EXEC \"cd src/qt && make $MAKEJOBS && ANDROID_HOME=${ANDROID_HOME} ANDROID_NDK_HOME=${ANDROID_NDK_HOME} make apk\"\n+  exit 0\n+fi\n+\n BITCOIN_CONFIG_ALL=\"--enable-suppress-external-warnings --disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n if [ -z \"$NO_WERROR\" ]; then\n   BITCOIN_CONFIG_ALL=\"${BITCOIN_CONFIG_ALL} --enable-werror\""
      },
      {
        "sha": "82964897e133f4e6459665382983ea88319c930a",
        "filename": "ci/test/wrap-wine.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/wrap-wine.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/ci/test/wrap-wine.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-wine.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -13,7 +13,7 @@ for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,\n         echo \"Wrap $b ...\"\n         mv \"$b\" \"${b}_orig\"\n         echo '#!/usr/bin/env bash' > \"$b\"\n-        echo \"wine64 \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+        echo \"( wine \\\"${b}_orig\\\" \\\"\\$@\\\" ) || ( sleep 1 && wine \\\"${b}_orig\\\" \\\"\\$@\\\" )\" >> \"$b\"\n         chmod +x \"$b\"\n       fi\n     done"
      },
      {
        "sha": "8cfa2d39e1323c1080477cc5b3d6a019c9a67113",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 197,
        "deletions": 120,
        "changes": 317,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -184,15 +184,15 @@ AC_ARG_ENABLE([extended-functional-tests],\n \n AC_ARG_ENABLE([fuzz],\n     AS_HELP_STRING([--enable-fuzz],\n-    [enable building of fuzz targets (default no). enabling this will disable all other targets]),\n+    [build for fuzzing (default no). enabling this will disable all other targets and override --{enable,disable}-fuzz-binary]),\n     [enable_fuzz=$enableval],\n     [enable_fuzz=no])\n \n-AC_ARG_ENABLE([danger_fuzz_link_all],\n-    AS_HELP_STRING([--enable-danger-fuzz-link-all],\n-    [Danger! Modifies source code. Needs git and gnu sed installed. Link each fuzz target (default no).]),\n-    [enable_danger_fuzz_link_all=$enableval],\n-    [enable_danger_fuzz_link_all=no])\n+AC_ARG_ENABLE([fuzz-binary],\n+    AS_HELP_STRING([--enable-fuzz-binary],\n+    [enable building of fuzz binary (default yes).]),\n+    [enable_fuzz_binary=$enableval],\n+    [enable_fuzz_binary=yes])\n \n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n@@ -332,6 +332,11 @@ AC_ARG_ENABLE([werror],\n     [enable_werror=$enableval],\n     [enable_werror=no])\n \n+AC_ARG_ENABLE([external-signer],\n+    [AS_HELP_STRING([--enable-external-signer],[compile external signer support (default is yes, requires Boost::Process)])],\n+    [use_external_signer=$enableval],\n+    [use_external_signer=yes])\n+\n AC_LANG_PUSH([C++])\n \n dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n@@ -428,6 +433,10 @@ if test \"x$enable_werror\" = \"xyes\"; then\n                         [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n   AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=mismatched-tags], [ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=mismatched-tags\"], [], [$CXXFLAG_WERROR])\n+\n+  if test x$suppress_external_warnings != xno ; then\n+    AX_CHECK_COMPILE_FLAG([-Werror=documentation],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=documentation\"],,[[$CXXFLAG_WERROR]])\n+  fi\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n@@ -455,15 +464,20 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n                         [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n   AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n \n+  if test x$suppress_external_warnings != xno ; then\n+    AX_CHECK_COMPILE_FLAG([-Wdocumentation],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdocumentation\"],,[[$CXXFLAG_WERROR]])\n+  fi\n+\n   dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n   dnl set the -Wno-foo case if it works.\n   AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+  if test x$suppress_external_warnings != xyes ; then\n+    AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+  fi\n fi\n \n dnl Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n@@ -651,7 +665,7 @@ case $host in\n        AC_MSG_ERROR(\"windres not found\")\n      fi\n \n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN\"\n \n      dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n      dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n@@ -723,6 +737,21 @@ case $host in\n    *android*)\n      dnl make sure android stays above linux for hosts like *linux-android*\n      TARGET_OS=android\n+     case $host in\n+       *x86_64*)\n+          ANDROID_ARCH=x86_64\n+          ;;\n+        *aarch64*)\n+          ANDROID_ARCH=arm64-v8a\n+          ;;\n+        *armv7a*)\n+          ANDROID_ARCH=armeabi-v7a\n+          ;;\n+        *i686*)\n+          ANDROID_ARCH=i686\n+          ;;\n+        *) AC_MSG_ERROR(\"Could not determine Android arch\") ;;\n+      esac\n      ;;\n    *linux*)\n      TARGET_OS=linux\n@@ -807,10 +836,6 @@ if test x$ac_cv_sys_large_files != x &&\n   CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n fi\n \n-AX_GCC_FUNC_ATTRIBUTE([visibility])\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\n-\n if test x$use_glibc_compat != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n@@ -854,13 +879,21 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_COMPILE_FLAG([-fcf-protection=full],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fcf-protection=full\"])\n+  dnl -fcf-protection used with Clang 7 causes ld to emit warnings:\n+  dnl ld: error: ... <corrupt x86 feature size: 0x8>\n+  dnl Use CHECK_LINK_FLAG & --fatal-warnings to ensure we won't use the flag in this case.\n+  AX_CHECK_LINK_FLAG([-fcf-protection=full],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fcf-protection=full\"],, [[$LDFLAG_WERROR]])\n+\n+  case $host in\n+    *mingw*)\n+      dnl stack-clash-protection doesn't currently work, and likely should just be skipped for Windows.\n+      dnl See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+      ;;\n+    *)\n+      AX_CHECK_COMPILE_FLAG([-fstack-clash-protection], [HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-clash-protection\"], [], [$CXXFLAG_WERROR])\n+      ;;\n+  esac\n \n-  dnl stack-clash-protection does not work properly when building for Windows.\n-  dnl We use the test case from https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458\n-  dnl to determine if it can be enabled.\n-  AX_CHECK_COMPILE_FLAG([-fstack-clash-protection],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-clash-protection\"],[],[\"-O0\"],\n-    [AC_LANG_SOURCE([[class D {public: unsigned char buf[32768];}; int main() {D d; return 0;}]])])\n \n   dnl When enable_debug is yes, all optimizations are disabled.\n   dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n@@ -906,14 +939,17 @@ fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n \n-AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n+AC_CHECK_DECLS([getifaddrs, freeifaddrs],[CHECK_SOCKET],,\n     [#include <sys/types.h>\n     #include <ifaddrs.h>]\n )\n AC_CHECK_DECLS([strnlen])\n \n-dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n-AC_CHECK_DECLS([daemon])\n+dnl These are used for daemonization in bitcoind\n+AC_CHECK_DECLS([fork])\n+AC_CHECK_DECLS([setsid])\n+\n+AC_CHECK_DECLS([pipe2])\n \n AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n \t\t[#if HAVE_ENDIAN_H\n@@ -975,13 +1011,13 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n  [ AC_MSG_RESULT(no)]\n )\n \n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n+AC_MSG_CHECKING([for default visibility attribute])\n+AC_COMPILE_IFELSE([AC_LANG_SOURCE([\n+  int foo(void) __attribute__((visibility(\"default\")));\n   int main(){}\n   ])],\n   [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_DEFINE(HAVE_DEFAULT_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n     AC_MSG_RESULT(yes)\n   ],\n   [\n@@ -992,6 +1028,18 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+AC_MSG_CHECKING([for dllexport attribute])\n+AC_COMPILE_IFELSE([AC_LANG_SOURCE([\n+  __declspec(dllexport) int foo(void);\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_DLLEXPORT_ATTRIBUTE,1,[Define if the dllexport attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [AC_MSG_RESULT(no)]\n+)\n+\n dnl thread_local is currently disabled when building with glibc back compat.\n dnl Our minimum supported glibc is 2.17, however support for thread_local\n dnl did not arrive in glibc until 2.18.\n@@ -1127,6 +1175,7 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n  [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n  [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n )\n+AC_DEFINE_UNQUOTED([HAVE_O_CLOEXEC], [$HAVE_O_CLOEXEC], [Define to 1 if O_CLOEXEC flag is available.])\n \n dnl crc32c platform checks\n AC_MSG_CHECKING(for __builtin_prefetch)\n@@ -1174,12 +1223,6 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n  [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n )\n \n-dnl Check for reduced exports\n-if test x$use_reduce_exports = xyes; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n-fi\n-\n AC_MSG_CHECKING([for std::system])\n AC_LINK_IFELSE(\n     [ AC_LANG_PROGRAM(\n@@ -1224,7 +1267,7 @@ AC_DEFUN([SUPPRESS_WARNINGS],\n \n dnl enable-fuzz should disable all other targets\n if test \"x$enable_fuzz\" = \"xyes\"; then\n-  AC_MSG_WARN(enable-fuzz will disable all other targets)\n+  AC_MSG_WARN(enable-fuzz will disable all other targets and force --enable-fuzz-binary=yes)\n   build_bitcoin_utils=no\n   build_bitcoin_cli=no\n   build_bitcoin_tx=no\n@@ -1237,18 +1280,20 @@ if test \"x$enable_fuzz\" = \"xyes\"; then\n   bitcoin_enable_qt_dbus=no\n   enable_wallet=no\n   use_bench=no\n+  use_external_signer=no\n   use_upnp=no\n   use_natpmp=no\n   use_zmq=no\n+  enable_fuzz_binary=yes\n \n   AX_CHECK_PREPROC_FLAG([-DABORT_ON_FAILED_ASSUME],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DABORT_ON_FAILED_ASSUME\"]],,[[$CXXFLAG_WERROR]])\n \n-  AC_MSG_CHECKING([whether main function is needed])\n+  AC_MSG_CHECKING([whether main function is needed for fuzz binary])\n   AX_CHECK_LINK_FLAG(\n     [[-fsanitize=$use_sanitizers]],\n     [AC_MSG_RESULT([no])],\n     [AC_MSG_RESULT([yes])\n-     CPPFLAGS=\"$CPPFLAGS -DPROVIDE_MAIN_FUNCTION\"],\n+     CPPFLAGS=\"$CPPFLAGS -DPROVIDE_FUZZ_MAIN_FUNCTION\"],\n     [],\n     [AC_LANG_PROGRAM([[\n       #include <cstdint>\n@@ -1262,7 +1307,7 @@ else\n   BITCOIN_QT_INIT\n \n   dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-  BITCOIN_QT_CONFIGURE([5.5.1])\n+  BITCOIN_QT_CONFIGURE([5.9.5])\n \n   dnl Keep a copy of the original $QT_INCLUDES and use it when invoking qt's moc\n   QT_INCLUDES_UNSUPPRESSED=$QT_INCLUDES\n@@ -1271,13 +1316,17 @@ else\n     QT_DBUS_INCLUDES=SUPPRESS_WARNINGS($QT_DBUS_INCLUDES)\n     QT_TEST_INCLUDES=SUPPRESS_WARNINGS($QT_TEST_INCLUDES)\n   fi\n+\n+  CPPFLAGS=\"$CPPFLAGS -DPROVIDE_FUZZ_MAIN_FUNCTION\"\n fi\n \n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n-    if test x$suppress_external_warnings != xno ; then\n+    if test \"x$use_bdb\" != \"xno\"; then\n+      BITCOIN_FIND_BDB48\n+      if test x$suppress_external_warnings != xno ; then\n         BDB_CPPFLAGS=SUPPRESS_WARNINGS($BDB_CPPFLAGS)\n+      fi\n     fi\n \n     dnl Check for sqlite3\n@@ -1310,19 +1359,21 @@ if test x$enable_wallet != xno; then\n fi\n \n if test x$use_ebpf != xno; then\n-  AC_CHECK_HEADER([sys/sdt.h], [have_sdt=yes], [have_sdt=no])\n-else\n-  have_sdt=no\n-fi\n-\n-if test x$have_sdt = xyes; then\n-  AC_DEFINE([ENABLE_TRACING], [1], [Define to 1 to enable eBPF user static defined tracepoints])\n+  AC_MSG_CHECKING([whether eBPF tracepoints are supported])\n+  AC_COMPILE_IFELSE([\n+    AC_LANG_PROGRAM(\n+      [#include <sys/sdt.h>],\n+      [DTRACE_PROBE(\"context\", \"event\");]\n+    )],\n+    [AC_MSG_RESULT(yes); have_sdt=yes; AC_DEFINE([ENABLE_TRACING], [1], [Define to 1 to enable eBPF user static defined tracepoints])],\n+    [AC_MSG_RESULT(no); have_sdt=no;]\n+  )\n fi\n \n dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n   AC_CHECK_HEADERS(\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n     [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n     [have_miniupnpc=no]\n   )\n@@ -1356,43 +1407,52 @@ if test \"x$use_natpmp\" != xno; then\n fi\n \n if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n-    use_boost=no\n+  use_boost=no\n else\n-    use_boost=yes\n+  use_boost=yes\n fi\n \n if test x$use_boost = xyes; then\n \n-dnl Minimum required Boost version\n-define(MINIMUM_REQUIRED_BOOST, 1.58.0)\n-\n-dnl Check for Boost libs\n-AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n-if test x$want_boost = xno; then\n+  dnl Check for Boost headers\n+  AX_BOOST_BASE([1.58.0],[],[AC_MSG_ERROR([Boost is not available!])])\n+  if test x$want_boost = xno; then\n     AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-AX_BOOST_THREAD\n-\n-dnl Opt-in to boost-process\n-AS_IF([ test x$with_boost_process != x ], [ AX_BOOST_PROCESS ], [ ax_cv_boost_process=no ] )\n+  fi\n+  AX_BOOST_SYSTEM\n+  AX_BOOST_FILESYSTEM\n+\n+  dnl Opt-in to Boost Process if external signer support is requested\n+  if test \"x$use_external_signer\" != xno; then\n+    AC_MSG_CHECKING(for Boost Process)\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <boost/process.hpp>]],\n+     [[ boost::process::child* child = new boost::process::child; delete child; ]])],\n+     [ AC_MSG_RESULT(yes)\n+     AC_DEFINE([ENABLE_EXTERNAL_SIGNER],,[define if external signer support is enabled])\n+     ],\n+     [ AC_MSG_ERROR([Boost::Process is required for external signer support, but not available!])]\n+    )\n+  fi\n \n-if test x$suppress_external_warnings != xno; then\n+  if test x$suppress_external_warnings != xno; then\n     BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n-fi\n+  fi\n \n-dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n-dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n-m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n-BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n+  dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+  dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+  m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+  BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB\"\n+  BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB\"\n fi\n \n+AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER], [test \"x$use_external_signer\" = \"xyes\"])\n+\n+dnl Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[CXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"],\n+  [AC_MSG_ERROR([Cannot set hidden symbol visibility. Use --disable-reduce-exports.])],[[$CXXFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]],[RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],,[[$LDFLAG_WERROR]])\n fi\n \n if test x$use_tests = xyes; then\n@@ -1403,25 +1463,25 @@ if test x$use_tests = xyes; then\n \n   if test x$use_boost = xyes; then\n \n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+    AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+    dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+    AC_MSG_CHECKING([for dynamic linked boost test])\n+    TEMP_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    AC_LINK_IFELSE([AC_LANG_SOURCE([\n+         #define BOOST_TEST_DYN_LINK\n+         #define BOOST_TEST_MAIN\n+          #include <boost/test/unit_test.hpp>\n+\n+         ])],\n+      [AC_MSG_RESULT(yes)]\n+      [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+      [AC_MSG_RESULT(no)])\n+    LIBS=\"$TEMP_LIBS\"\n+    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n   fi\n fi\n@@ -1433,6 +1493,10 @@ if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench\n   if test x$TARGET_OS != xwindows; then\n     PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads >= 2.0.21],, [AC_MSG_ERROR([libevent_pthreads version 2.0.21 or greater not found.])])\n   fi\n+\n+  if test x$suppress_external_warnings != xno; then\n+    EVENT_CFLAGS=SUPPRESS_WARNINGS($EVENT_CFLAGS)\n+  fi\n fi\n \n dnl QR Code encoding library check\n@@ -1576,6 +1640,10 @@ if test \"x$use_ccache\" != \"xno\"; then\n     CXX=\"$ac_cv_path_CCACHE $CXX\"\n   fi\n   AC_MSG_RESULT($use_ccache)\n+  if test \"x$use_ccache\" = \"xyes\"; then\n+    AX_CHECK_COMPILE_FLAG([-fdebug-prefix-map=A=B],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -fdebug-prefix-map=\\$(abs_srcdir)=.\"],,[[$CXXFLAG_WERROR]])\n+    AX_CHECK_PREPROC_FLAG([-fmacro-prefix-map=A=B],[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -fmacro-prefix-map=\\$(abs_srcdir)=.\"],,[[$CXXFLAG_WERROR]])\n+  fi\n fi\n \n dnl enable wallet\n@@ -1637,6 +1705,9 @@ else\n     fi\n     AC_MSG_RESULT($use_natpmp_default)\n     AC_DEFINE_UNQUOTED([USE_NATPMP], [$natpmp_setting], [NAT-PMP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+    if test x$TARGET_OS = xwindows; then\n+      NATPMP_CPPFLAGS=\"-DSTATICLIB -DNATPMP_STATICLIB\"\n+    fi\n   else\n     AC_MSG_RESULT([no])\n   fi\n@@ -1716,7 +1787,7 @@ AM_CONDITIONAL([USE_BDB], [test \"x$use_bdb\" = \"xyes\"])\n AM_CONDITIONAL([ENABLE_TRACING],[test x$have_sdt = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n-AM_CONDITIONAL([ENABLE_FUZZ_LINK_ALL],[test x$enable_danger_fuzz_link_all = xyes])\n+AM_CONDITIONAL([ENABLE_FUZZ_BINARY],[test x$enable_fuzz_binary = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n@@ -1732,6 +1803,8 @@ AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n AM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\n AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n AM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n+AM_CONDITIONAL([USE_NATPMP],[test x$use_natpmp = xyes])\n+AM_CONDITIONAL([USE_UPNP],[test x$use_upnp = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1783,13 +1856,15 @@ AC_SUBST(ARM_CRC_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_SQLITE)\n AC_SUBST(USE_BDB)\n+AC_SUBST(ENABLE_EXTERNAL_SIGNER)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)\n AC_SUBST(SQLITE_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(NATPMP_CPPFLAGS)\n AC_SUBST(NATPMP_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n@@ -1803,6 +1878,7 @@ AC_SUBST(HAVE_BUILTIN_PREFETCH)\n AC_SUBST(HAVE_MM_PREFETCH)\n AC_SUBST(HAVE_STRONG_GETAUXVAL)\n AC_SUBST(HAVE_WEAK_GETAUXVAL)\n+AC_SUBST(ANDROID_ARCH)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n@@ -1843,7 +1919,7 @@ if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n@@ -1858,42 +1934,43 @@ esac\n \n echo\n echo \"Options used to compile and link:\"\n-echo \"  boost process = $ax_cv_boost_process\"\n-echo \"  multiprocess  = $build_multiprocess\"\n-echo \"  with wallet   = $enable_wallet\"\n+echo \"  external signer = $use_external_signer\"\n+echo \"  multiprocess    = $build_multiprocess\"\n+echo \"  with libs       = $build_bitcoin_libs\"\n+echo \"  with wallet     = $enable_wallet\"\n if test \"x$enable_wallet\" != \"xno\"; then\n-    echo \"    with sqlite = $use_sqlite\"\n-    echo \"    with bdb    = $use_bdb\"\n+    echo \"    with sqlite   = $use_sqlite\"\n+    echo \"    with bdb      = $use_bdb\"\n fi\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n+echo \"  with gui / qt   = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n-    echo \"    with qr     = $use_qr\"\n+    echo \"    with qr       = $use_qr\"\n fi\n-echo \"  with zmq      = $use_zmq\"\n+echo \"  with zmq        = $use_zmq\"\n if test x$enable_fuzz == xno; then\n-    echo \"  with test     = $use_tests\"\n+    echo \"  with test       = $use_tests\"\n else\n-    echo \"  with test     = not building test_bitcoin because fuzzing is enabled\"\n-    echo \"    with fuzz   = $enable_fuzz\"\n+    echo \"  with test       = not building test_bitcoin because fuzzing is enabled\"\n+    echo \"    with fuzz     = $enable_fuzz\"\n fi\n-echo \"  with bench    = $use_bench\"\n-echo \"  with upnp     = $use_upnp\"\n-echo \"  with natpmp   = $use_natpmp\"\n-echo \"  use asm       = $use_asm\"\n-echo \"  ebpf tracing  = $have_sdt\"\n-echo \"  sanitizers    = $use_sanitizers\"\n-echo \"  debug enabled = $enable_debug\"\n-echo \"  gprof enabled = $enable_gprof\"\n-echo \"  werror        = $enable_werror\"\n+echo \"  with bench      = $use_bench\"\n+echo \"  with upnp       = $use_upnp\"\n+echo \"  with natpmp     = $use_natpmp\"\n+echo \"  use asm         = $use_asm\"\n+echo \"  ebpf tracing    = $have_sdt\"\n+echo \"  sanitizers      = $use_sanitizers\"\n+echo \"  debug enabled   = $enable_debug\"\n+echo \"  gprof enabled   = $enable_gprof\"\n+echo \"  werror          = $enable_werror\"\n echo\n-echo \"  target os     = $TARGET_OS\"\n-echo \"  build os      = $build_os\"\n+echo \"  target os       = $TARGET_OS\"\n+echo \"  build os        = $build_os\"\n echo\n-echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $PTHREAD_CFLAGS $CFLAGS\"\n-echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n-echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n-echo \"  LDFLAGS       = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n-echo \"  ARFLAGS       = $ARFLAGS\"\n+echo \"  CC              = $CC\"\n+echo \"  CFLAGS          = $PTHREAD_CFLAGS $CFLAGS\"\n+echo \"  CPPFLAGS        = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n+echo \"  CXX             = $CXX\"\n+echo \"  CXXFLAGS        = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS         = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  ARFLAGS         = $ARFLAGS\"\n echo"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,22 +0,0 @@\n-FORMS += \\\n-    ../src/qt/forms/aboutdialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/coincontroldialog.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/helpmessagedialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/openuridialog.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/receivecoinsdialog.ui \\\n-    ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/debugwindow.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-    ../src/qt/forms/createwalletdialog.ui\n-\n-RESOURCES += \\\n-    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "6d23f600c39b7b8082606fa2d6bbab8a78a45049",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,7 +1,7 @@\n Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n+ irc://#bitcoin-core-dev@libera.chat\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n@@ -87,6 +87,10 @@ Files: src/qt/res/icons/proxy.png\n Copyright: Cristian Mircea Messel\n License: public-domain\n \n+Files: src/qt/res/fonts/RobotoMono-Bold.ttf\n+License: Apache-2.0\n+Comment: Site: https://fonts.google.com/specimen/Roboto+Mono\n+\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -144,3 +148,14 @@ Comment:\n \n License: public-domain\n  This work is in the public domain.\n+\n+License: Apache-2.0\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+ http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License."
      },
      {
        "sha": "1fa850af1a7cf5902bc1993334d3f56b7be59dcf",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,7 +7,8 @@ clang-format-diff.py\n \n A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n \n-Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS.\n+Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS,\n+or `sudo apt install clang-format` on Debian/Ubuntu.\n \n For instance, to format the last commit with 0 lines of context,\n the script should be called from the git root folder as follows."
      },
      {
        "sha": "64660968ad255886df97501115de636ae8873a73",
        "filename": "contrib/devtools/pixie.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/pixie.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/pixie.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/pixie.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -217,7 +217,7 @@ def _parse_verneed(section: Section, strings: bytes, eh: ELFHeader) -> Dict[int,\n     result = {}\n     while True:\n         verneed = Verneed(data, ofs, eh)\n-        aofs = verneed.vn_aux\n+        aofs = ofs + verneed.vn_aux\n         while True:\n             vernaux = Vernaux(data, aofs, eh, strings)\n             result[vernaux.vna_other] = vernaux.name"
      },
      {
        "sha": "0b59d8eada682c7d84313cfdb110ef9b85892f33",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 50,
        "deletions": 97,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -6,22 +6,13 @@\n Perform basic security checks on a series of executables.\n Exit status will be 0 if successful, and the program will be silent.\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `objdump` (for PE) and `otool` (for MACHO).\n '''\n-import subprocess\n import sys\n-import os\n from typing import List, Optional\n \n+import lief\n import pixie\n \n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n-\n-def run_command(command) -> str:\n-    p = subprocess.run(command, stdout=subprocess.PIPE, check=True, universal_newlines=True)\n-    return p.stdout\n-\n def check_ELF_PIE(executable) -> bool:\n     '''\n     Check for position independent executable (PIE), allowing for address space randomization.\n@@ -143,112 +134,72 @@ def check_ELF_separate_code(executable):\n                 return False\n     return True\n \n-def get_PE_dll_characteristics(executable) -> int:\n-    '''Get PE DllCharacteristics bits'''\n-    stdout = run_command([OBJDUMP_CMD, '-x',  executable])\n-\n-    bits = 0\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            bits = int(tokens[1],16)\n-    return bits\n-\n-IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n-IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n-IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n-\n def check_PE_DYNAMIC_BASE(executable) -> bool:\n     '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE) == IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n+    binary = lief.parse(executable)\n+    return lief.PE.DLL_CHARACTERISTICS.DYNAMIC_BASE in binary.optional_header.dll_characteristics_lists\n \n # Must support high-entropy 64-bit address space layout randomization\n # in addition to DYNAMIC_BASE to have secure ASLR.\n def check_PE_HIGH_ENTROPY_VA(executable) -> bool:\n     '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA) == IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n+    binary = lief.parse(executable)\n+    return lief.PE.DLL_CHARACTERISTICS.HIGH_ENTROPY_VA in binary.optional_header.dll_characteristics_lists\n \n def check_PE_RELOC_SECTION(executable) -> bool:\n     '''Check for a reloc section. This is required for functional ASLR.'''\n-    stdout = run_command([OBJDUMP_CMD, '-h',  executable])\n+    binary = lief.parse(executable)\n+    return binary.has_relocations\n \n-    for line in stdout.splitlines():\n-        if '.reloc' in line:\n-            return True\n-    return False\n-\n-def check_PE_NX(executable) -> bool:\n-    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    bits = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n-\n-def get_MACHO_executable_flags(executable) -> List[str]:\n-    stdout = run_command([OTOOL_CMD, '-vh', executable])\n+def check_MACHO_NOUNDEFS(executable) -> bool:\n+    '''\n+    Check for no undefined references.\n+    '''\n+    binary = lief.parse(executable)\n+    return binary.header.has(lief.MachO.HEADER_FLAGS.NOUNDEFS)\n \n-    flags: List[str] = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        # filter first two header lines\n-        if 'magic' in tokens or 'Mach' in tokens:\n-            continue\n-        # filter ncmds and sizeofcmds values\n-        flags += [t for t in tokens if not t.isdigit()]\n-    return flags\n+def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n+    '''\n+    Check for no lazy bindings.\n+    We don't use or check for MH_BINDATLOAD. See #18295.\n+    '''\n+    binary = lief.parse(executable)\n+    return binary.dyld_info.lazy_bind == (0,0)\n \n-def check_MACHO_PIE(executable) -> bool:\n+def check_MACHO_Canary(executable) -> bool:\n     '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n+    Check for use of stack canary\n     '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'PIE' in flags:\n-        return True\n-    return False\n+    binary = lief.parse(executable)\n+    return binary.has_symbol('___stack_chk_fail')\n \n-def check_MACHO_NOUNDEFS(executable) -> bool:\n+def check_PIE(executable) -> bool:\n     '''\n-    Check for no undefined references.\n+    Check for position independent executable (PIE),\n+    allowing for address space randomization.\n     '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'NOUNDEFS' in flags:\n-        return True\n-    return False\n+    binary = lief.parse(executable)\n+    return binary.is_pie\n \n-def check_MACHO_NX(executable) -> bool:\n+def check_NX(executable) -> bool:\n     '''\n     Check for no stack execution\n     '''\n-    flags = get_MACHO_executable_flags(executable)\n-    if 'ALLOW_STACK_EXECUTION' in flags:\n-        return False\n-    return True\n+    binary = lief.parse(executable)\n+    return binary.has_nx\n \n-def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n+def check_control_flow(executable) -> bool:\n     '''\n-    Check for no lazy bindings.\n-    We don't use or check for MH_BINDATLOAD. See #18295.\n+    Check for control flow instrumentation\n     '''\n-    stdout = run_command([OTOOL_CMD, '-l', executable])\n+    binary = lief.parse(executable)\n \n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if 'lazy_bind_off' in tokens or 'lazy_bind_size' in tokens:\n-            if tokens[1] != '0':\n-                return False\n-    return True\n+    content = binary.get_content_from_virtual_address(binary.entrypoint, 4, lief.Binary.VA_TYPES.AUTO)\n \n-def check_MACHO_Canary(executable) -> bool:\n-    '''\n-    Check for use of stack canary\n-    '''\n-    stdout = run_command([OTOOL_CMD, '-Iv', executable])\n+    if content == [243, 15, 30, 250]: # endbr64\n+        return True\n+    return False\n \n-    ok = False\n-    for line in stdout.splitlines():\n-        if '___stack_chk_fail' in line:\n-            ok = True\n-    return ok\n \n CHECKS = {\n 'ELF': [\n@@ -259,17 +210,19 @@ def check_MACHO_Canary(executable) -> bool:\n     ('separate_code', check_ELF_separate_code),\n ],\n 'PE': [\n+    ('PIE', check_PIE),\n     ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n     ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX),\n+    ('NX', check_NX),\n     ('RELOC_SECTION', check_PE_RELOC_SECTION)\n ],\n 'MACHO': [\n-    ('PIE', check_MACHO_PIE),\n+    ('PIE', check_PIE),\n     ('NOUNDEFS', check_MACHO_NOUNDEFS),\n-    ('NX', check_MACHO_NX),\n+    ('NX', check_NX),\n     ('LAZY_BINDINGS', check_MACHO_LAZY_BINDINGS),\n-    ('Canary', check_MACHO_Canary)\n+    ('Canary', check_MACHO_Canary),\n+    ('CONTROL_FLOW', check_control_flow),\n ]\n }\n \n@@ -285,24 +238,24 @@ def identify_executable(executable) -> Optional[str]:\n     return None\n \n if __name__ == '__main__':\n-    retval = 0\n+    retval: int = 0\n     for filename in sys.argv[1:]:\n         try:\n             etype = identify_executable(filename)\n             if etype is None:\n-                print('%s: unknown format' % filename)\n+                print(f'{filename}: unknown format')\n                 retval = 1\n                 continue\n \n-            failed = []\n+            failed: List[str] = []\n             for (name, func) in CHECKS[etype]:\n                 if not func(filename):\n                     failed.append(name)\n             if failed:\n-                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                print(f'{filename}: failed {\" \".join(failed)}')\n                 retval = 1\n         except IOError:\n-            print('%s: cannot open' % filename)\n+            print(f'{filename}: cannot open')\n             retval = 1\n     sys.exit(retval)\n "
      },
      {
        "sha": "56e4313d78f020636680f17b5267b4e3560fd71f",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 60,
        "deletions": 47,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -15,6 +15,7 @@\n import os\n from typing import List, Optional\n \n+import lief\n import pixie\n \n # Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n@@ -40,8 +41,16 @@\n #\n MAX_VERSIONS = {\n 'GCC':       (4,8,0),\n-'GLIBC':     (2,17),\n-'LIBATOMIC': (1,0)\n+'GLIBC': {\n+    pixie.EM_386:    (2,17),\n+    pixie.EM_X86_64: (2,17),\n+    pixie.EM_ARM:    (2,17),\n+    pixie.EM_AARCH64:(2,17),\n+    pixie.EM_PPC64:  (2,17),\n+    pixie.EM_RISCV:  (2,27),\n+},\n+'LIBATOMIC': (1,0),\n+'V':         (0,5,0),  # xkb (bitcoin-qt only)\n }\n # See here for a description of _IO_stdin_used:\n # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n@@ -52,8 +61,6 @@\n 'environ', '_environ', '__environ',\n }\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n \n # Allowed NEEDED libraries\n ELF_ALLOWED_LIBRARIES = {\n@@ -73,18 +80,12 @@\n 'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n # bitcoin-qt only\n 'libxcb.so.1', # part of X11\n+'libxkbcommon.so.0', # keyboard keymapping\n+'libxkbcommon-x11.so.0', # keyboard keymapping\n 'libfontconfig.so.1', # font support\n 'libfreetype.so.6', # font parsing\n 'libdl.so.2' # programming interface to dynamic linker\n }\n-ARCH_MIN_GLIBC_VER = {\n-pixie.EM_386:    (2,1),\n-pixie.EM_X86_64: (2,2,5),\n-pixie.EM_ARM:    (2,4),\n-pixie.EM_AARCH64:(2,17),\n-pixie.EM_PPC64:  (2,17),\n-pixie.EM_RISCV:  (2,27)\n-}\n \n MACHO_ALLOWED_LIBRARIES = {\n # bitcoind and bitcoin-qt\n@@ -98,10 +99,15 @@\n 'CoreGraphics', # 2D rendering\n 'CoreServices', # operating system services\n 'CoreText', # interface for laying out text and handling fonts.\n+'CoreVideo', # video processing\n 'Foundation', # base layer functionality for apps/frameworks\n 'ImageIO', # read and write image file formats.\n 'IOKit', # user-space access to hardware devices and drivers.\n+'IOSurface', # cross process image/drawing buffers\n 'libobjc.A.dylib', # Objective-C runtime library\n+'Metal', # 3D graphics\n+'Security', # access control and authentication\n+'QuartzCore', # animation\n }\n \n PE_ALLOWED_LIBRARIES = {\n@@ -116,12 +122,15 @@\n 'dwmapi.dll', # desktop window manager\n 'GDI32.dll', # graphics device interface\n 'IMM32.dll', # input method editor\n+'NETAPI32.dll',\n 'ole32.dll', # component object model\n 'OLEAUT32.dll', # OLE Automation API\n 'SHLWAPI.dll', # light weight shell API\n+'USERENV.dll',\n 'UxTheme.dll',\n 'VERSION.dll', # version checking\n 'WINMM.dll', # WinMM audio API\n+'WTSAPI32.dll',\n }\n \n class CPPFilt(object):\n@@ -152,7 +161,10 @@ def check_version(max_versions, version, arch) -> bool:\n     ver = tuple([int(x) for x in ver.split('.')])\n     if not lib in max_versions:\n         return False\n-    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n+    if isinstance(max_versions[lib], tuple):\n+        return ver <= max_versions[lib]\n+    else:\n+        return ver <= max_versions[lib][arch]\n \n def check_imported_symbols(filename) -> bool:\n     elf = pixie.load(filename)\n@@ -193,58 +205,59 @@ def check_ELF_libraries(filename) -> bool:\n             ok = False\n     return ok\n \n-def macho_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens) == 1: # skip executable name\n-            continue\n-        libraries.append(tokens[0].split('/')[-1])\n-    return libraries\n-\n def check_MACHO_libraries(filename) -> bool:\n     ok: bool = True\n-    for dylib in macho_read_libraries(filename):\n-        if dylib not in MACHO_ALLOWED_LIBRARIES:\n-            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+    binary = lief.parse(filename)\n+    for dylib in binary.libraries:\n+        split = dylib.name.split('/')\n+        if split[-1] not in MACHO_ALLOWED_LIBRARIES:\n+            print(f'{split[-1]} is not in ALLOWED_LIBRARIES!')\n             ok = False\n     return ok\n \n-def pe_read_libraries(filename) -> List[str]:\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        if 'DLL Name:' in line:\n-            tokens = line.split(': ')\n-            libraries.append(tokens[1])\n-    return libraries\n+def check_MACHO_min_os(filename) -> bool:\n+    binary = lief.parse(filename)\n+    if binary.build_version.minos == [10,14,0]:\n+        return True\n+    return False\n+\n+def check_MACHO_sdk(filename) -> bool:\n+    binary = lief.parse(filename)\n+    if binary.build_version.sdk == [10, 15, 6]:\n+        return True\n+    return False\n \n def check_PE_libraries(filename) -> bool:\n     ok: bool = True\n-    for dylib in pe_read_libraries(filename):\n+    binary = lief.parse(filename)\n+    for dylib in binary.libraries:\n         if dylib not in PE_ALLOWED_LIBRARIES:\n-            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            print(f'{dylib} is not in ALLOWED_LIBRARIES!')\n             ok = False\n     return ok\n \n+def check_PE_subsystem_version(filename) -> bool:\n+    binary = lief.parse(filename)\n+    major: int = binary.optional_header.major_subsystem_version\n+    minor: int = binary.optional_header.minor_subsystem_version\n+    if major == 6 and minor == 1:\n+        return True\n+    return False\n+\n CHECKS = {\n 'ELF': [\n     ('IMPORTED_SYMBOLS', check_imported_symbols),\n     ('EXPORTED_SYMBOLS', check_exported_symbols),\n     ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n ],\n 'MACHO': [\n-    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n+    ('DYNAMIC_LIBRARIES', check_MACHO_libraries),\n+    ('MIN_OS', check_MACHO_min_os),\n+    ('SDK', check_MACHO_sdk),\n ],\n 'PE' : [\n-    ('DYNAMIC_LIBRARIES', check_PE_libraries)\n+    ('DYNAMIC_LIBRARIES', check_PE_libraries),\n+    ('SUBSYSTEM_VERSION', check_PE_subsystem_version),\n ]\n }\n \n@@ -265,7 +278,7 @@ def identify_executable(executable) -> Optional[str]:\n         try:\n             etype = identify_executable(filename)\n             if etype is None:\n-                print('{}: unknown format'.format(filename))\n+                print(f'{filename}: unknown format')\n                 retval = 1\n                 continue\n \n@@ -274,9 +287,9 @@ def identify_executable(executable) -> Optional[str]:\n                 if not func(filename):\n                     failed.append(name)\n             if failed:\n-                print('{}: failed {}'.format(filename, ' '.join(failed)))\n+                print(f'{filename}: failed {\" \".join(failed)}')\n                 retval = 1\n         except IOError:\n-            print('{}: cannot open'.format(filename))\n+            print(f'{filename}: cannot open')\n             retval = 1\n     sys.exit(retval)"
      },
      {
        "sha": "c079fe5b4d11e6bd6c7d0a367c54aff6b1fd821a",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -5,6 +5,7 @@\n '''\n Test script for security-check.py\n '''\n+import os\n import subprocess\n import unittest\n \n@@ -19,6 +20,10 @@ def write_testcode(filename):\n     }\n     ''')\n \n+def clean_files(source, executable):\n+    os.remove(source)\n+    os.remove(executable)\n+\n def call_security_check(cc, source, executable, options):\n     subprocess.run([cc,source,'-o',executable] + options, check=True)\n     p = subprocess.run(['./contrib/devtools/security-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n@@ -44,6 +49,8 @@ def test_ELF(self):\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE', '-Wl,-z,separate-code']),\n                 (0, ''))\n \n+        clean_files(source, executable)\n+\n     def test_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n@@ -61,25 +68,31 @@ def test_PE(self):\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n             (0, ''))\n \n+        clean_files(source, executable)\n+\n     def test_MACHO(self):\n         source = 'test1.c'\n         executable = 'test1'\n         cc = 'clang'\n         write_testcode(source)\n \n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n-            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary'))\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary CONTROL_FLOW'))\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fstack-protector-all']),\n-            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS'))\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS CONTROL_FLOW'))\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-fstack-protector-all']),\n-            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS'))\n+            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS CONTROL_FLOW'))\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-fstack-protector-all']),\n-            (1, executable+': failed PIE LAZY_BINDINGS'))\n+            (1, executable+': failed PIE LAZY_BINDINGS CONTROL_FLOW'))\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (1, executable+': failed PIE CONTROL_FLOW'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all', '-fcf-protection=full']),\n             (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all', '-fcf-protection=full']),\n             (0, ''))\n \n+        clean_files(source, executable)\n+\n if __name__ == '__main__':\n     unittest.main()\n "
      },
      {
        "sha": "6ce2fa356039cf23954879b6c2f8878010c310b3",
        "filename": "contrib/devtools/test-symbol-check.py",
        "status": "modified",
        "additions": 42,
        "deletions": 19,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/test-symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/devtools/test-symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-symbol-check.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -5,47 +5,43 @@\n '''\n Test script for symbol-check.py\n '''\n+import os\n import subprocess\n import unittest\n \n def call_symbol_check(cc, source, executable, options):\n     subprocess.run([cc,source,'-o',executable] + options, check=True)\n     p = subprocess.run(['./contrib/devtools/symbol-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n+    os.remove(source)\n+    os.remove(executable)\n     return (p.returncode, p.stdout.rstrip())\n \n-def get_machine(cc):\n-    p = subprocess.run([cc,'-dumpmachine'], stdout=subprocess.PIPE, universal_newlines=True)\n-    return p.stdout.rstrip()\n-\n class TestSymbolChecks(unittest.TestCase):\n     def test_ELF(self):\n         source = 'test1.c'\n         executable = 'test1'\n         cc = 'gcc'\n \n-        # there's no way to do this test for RISC-V at the moment; bionic's libc is 2.27\n-        # and we allow all symbols from 2.27.\n-        if 'riscv' in get_machine(cc):\n-            self.skipTest(\"test not available for RISC-V\")\n-\n-        # memfd_create was introduced in GLIBC 2.27, so is newer than the upper limit of\n-        # all but RISC-V but still available on bionic\n+        # renameat2 was introduced in GLIBC 2.28, so is newer than the upper limit\n+        # of glibc for all platforms\n         with open(source, 'w', encoding=\"utf8\") as f:\n             f.write('''\n                 #define _GNU_SOURCE\n-                #include <sys/mman.h>\n+                #include <stdio.h>\n+                #include <linux/fs.h>\n \n-                int memfd_create(const char *name, unsigned int flags);\n+                int renameat2(int olddirfd, const char *oldpath,\n+                    int newdirfd, const char *newpath, unsigned int flags);\n \n                 int main()\n                 {\n-                    memfd_create(\"test\", 0);\n+                    renameat2(0, \"test\", 0, \"test_\", RENAME_EXCHANGE);\n                     return 0;\n                 }\n         ''')\n \n         self.assertEqual(call_symbol_check(cc, source, executable, []),\n-                (1, executable + ': symbol memfd_create from unsupported version GLIBC_2.27\\n' +\n+                (1, executable + ': symbol renameat2 from unsupported version GLIBC_2.28\\n' +\n                     executable + ': failed IMPORTED_SYMBOLS'))\n \n         # -lutil is part of the libc6 package so a safe bet that it's installed\n@@ -102,7 +98,7 @@ def test_MACHO(self):\n \n         self.assertEqual(call_symbol_check(cc, source, executable, ['-lexpat']),\n             (1, 'libexpat.1.dylib is not in ALLOWED_LIBRARIES!\\n' +\n-                executable + ': failed DYNAMIC_LIBRARIES'))\n+                f'{executable}: failed DYNAMIC_LIBRARIES MIN_OS SDK'))\n \n         source = 'test2.c'\n         executable = 'test2'\n@@ -118,7 +114,20 @@ def test_MACHO(self):\n         ''')\n \n         self.assertEqual(call_symbol_check(cc, source, executable, ['-framework', 'CoreGraphics']),\n-                (0, ''))\n+                (1, f'{executable}: failed MIN_OS SDK'))\n+\n+        source = 'test3.c'\n+        executable = 'test3'\n+        with open(source, 'w', encoding=\"utf8\") as f:\n+            f.write('''\n+                int main()\n+                {\n+                    return 0;\n+                }\n+        ''')\n+\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-mmacosx-version-min=10.14']),\n+                (1, f'{executable}: failed SDK'))\n \n     def test_PE(self):\n         source = 'test1.c'\n@@ -136,12 +145,26 @@ def test_PE(self):\n                 }\n         ''')\n \n-        self.assertEqual(call_symbol_check(cc, source, executable, ['-lpdh']),\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-lpdh', '-Wl,--major-subsystem-version', '-Wl,6', '-Wl,--minor-subsystem-version', '-Wl,1']),\n             (1, 'pdh.dll is not in ALLOWED_LIBRARIES!\\n' +\n                  executable + ': failed DYNAMIC_LIBRARIES'))\n \n         source = 'test2.c'\n         executable = 'test2.exe'\n+\n+        with open(source, 'w', encoding=\"utf8\") as f:\n+            f.write('''\n+                int main()\n+                {\n+                    return 0;\n+                }\n+        ''')\n+\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-Wl,--major-subsystem-version', '-Wl,9', '-Wl,--minor-subsystem-version', '-Wl,9']),\n+            (1, executable + ': failed SUBSYSTEM_VERSION'))\n+\n+        source = 'test3.c'\n+        executable = 'test3.exe'\n         with open(source, 'w', encoding=\"utf8\") as f:\n             f.write('''\n                 #include <windows.h>\n@@ -153,7 +176,7 @@ def test_PE(self):\n                 }\n         ''')\n \n-        self.assertEqual(call_symbol_check(cc, source, executable, ['-lole32']),\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-lole32', '-Wl,--major-subsystem-version', '-Wl,6', '-Wl,--minor-subsystem-version', '-Wl,1']),\n                 (0, ''))\n \n "
      },
      {
        "sha": "5df87d9e70cb79ae65f4d13a492a95fac71980cf",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -35,14 +35,14 @@ def setup():\n     if not os.path.isdir('bitcoin'):\n         subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n     os.chdir('gitian-builder')\n-    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n+    make_image_prog = ['bin/make-base-vm', '--suite', 'focal', '--arch', 'amd64']\n     if args.docker:\n         make_image_prog += ['--docker']\n     elif not args.kvm:\n-        make_image_prog += ['--lxc']\n+        make_image_prog += ['--lxc', '--disksize', '13000']\n     subprocess.check_call(make_image_prog)\n     os.chdir(workdir)\n-    if args.is_bionic and not args.kvm and not args.docker:\n+    if args.is_focal and not args.kvm and not args.docker:\n         subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n         print('Reboot is required')\n         sys.exit(0)\n@@ -176,7 +176,7 @@ def main():\n     args = parser.parse_args()\n     workdir = os.getcwd()\n \n-    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n+    args.is_focal = b'focal' in subprocess.check_output(['lsb_release', '-cs'])\n \n     if args.kvm and args.docker:\n         raise Exception('Error: cannot have both kvm and docker')\n@@ -210,7 +210,7 @@ def main():\n     args.macos = 'm' in args.os\n \n     # Disable for MacOS if no SDK found\n-    if args.macos and not os.path.isfile('gitian-builder/inputs/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz'):\n+    if args.macos and not os.path.isfile('gitian-builder/inputs/Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz'):\n         print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n         args.macos = False\n "
      },
      {
        "sha": "330fbc041b31ac8f1a828f7eccca76f866cc51b7",
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,7 +4,7 @@\n #\n # A helper script to be sourced into the gitian descriptors\n \n-if RECENT_TAG=\"$(git describe --exact-match HEAD)\"; then\n+if RECENT_TAG=\"$(git describe --exact-match HEAD 2> /dev/null)\"; then\n     VERSION=\"${RECENT_TAG#v}\"\n else\n     VERSION=\"$(git rev-parse --short=12 HEAD)\""
      },
      {
        "sha": "e6dce7a8c664fc102b06f281eb1fc33a75670992",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,23 +3,27 @@ name: \"bitcoin-core-linux-22\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n-- \"bionic\"\n+- \"focal\"\n architectures:\n - \"amd64\"\n packages:\n # Common dependencies.\n - \"autoconf\"\n - \"automake\"\n - \"binutils\"\n+- \"bison\"\n - \"bsdmainutils\"\n - \"ca-certificates\"\n - \"curl\"\n - \"faketime\"\n+- \"g++-8\"\n+- \"gcc-8\"\n - \"git\"\n - \"libtool\"\n - \"patch\"\n - \"pkg-config\"\n - \"python3\"\n+- \"python3-pip\"\n # Cross compilation HOSTS:\n #  - arm-linux-gnueabihf\n - \"binutils-arm-linux-gnueabihf\"\n@@ -45,15 +49,13 @@ script: |\n \n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu powerpc64-linux-gnu powerpc64le-linux-gnu riscv64-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests --disable-fuzz-binary\"\n   FAKETIME_HOST_PROGS=\"gcc g++\"\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n   HOST_LDFLAGS_BASE=\"-static-libstdc++ -Wl,-O2\"\n \n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n   export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n@@ -97,6 +99,8 @@ script: |\n   done\n   }\n \n+  pip3 install lief==0.11.5\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n@@ -107,7 +111,7 @@ script: |\n   BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\" CC=${i}-gcc-8 CXX=${i}-g++-8\n   done\n \n   # Faketime for binaries\n@@ -130,7 +134,7 @@ script: |\n   # Extract the git archive into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    if [ \"${i}\" = \"riscv64-linux-gnu\" ] || [ \"${i}\" = \"powerpc64-linux-gnu\" ] || [ \"${i}\" = \"powerpc64le-linux-gnu\" ]; then\n+    if [ \"${i}\" = \"powerpc64-linux-gnu\" ]; then\n       # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n       # TODO: remove this when no longer needed\n       HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n@@ -144,7 +148,7 @@ script: |\n     tar --strip-components=1 -xf \"${GIT_ARCHIVE}\"\n \n     ./autogen.sh\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\" CC=${i}-gcc-8 CXX=${i}-g++-8\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n     make ${MAKEOPTS} -C src check-symbols"
      },
      {
        "sha": "addad0a5d27a0320a5384894e9a7f09aa97c8e1c",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2,7 +2,7 @@\n name: \"bitcoin-dmg-signer\"\n distro: \"ubuntu\"\n suites:\n-- \"bionic\"\n+- \"focal\"\n architectures:\n - \"amd64\"\n packages:\n@@ -14,7 +14,7 @@ remotes:\n   \"dir\": \"signature\"\n - \"url\": \"https://github.com/achow101/signapple.git\"\n   \"dir\": \"signapple\"\n-  \"commit\": \"c7e73aa27a7615ac9506559173f787e2906b25eb\"\n+  \"commit\": \"b084cbbf44d5330448ffce0c7d118f75781b64bd\"\n files:\n - \"bitcoin-osx-unsigned.tar.gz\"\n script: |"
      },
      {
        "sha": "a39618adb78d5c3403c9f47e0b58111a6811bbec",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,7 +3,7 @@ name: \"bitcoin-core-osx-22\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n-- \"bionic\"\n+- \"focal\"\n architectures:\n - \"amd64\"\n packages:\n@@ -21,30 +21,27 @@ packages:\n - \"bsdmainutils\"\n - \"cmake\"\n - \"imagemagick\"\n-- \"libcap-dev\"\n - \"libz-dev\"\n-- \"libbz2-dev\"\n - \"python3\"\n-- \"python3-dev\"\n+- \"python3-pip\"\n - \"python3-setuptools\"\n - \"fonts-tuffy\"\n - \"xorriso\"\n+- \"libtinfo5\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\"\n+- \"Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz\"\n script: |\n   set -e -o pipefail\n \n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin18\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests XORRISOFS=${WRAP_DIR}/xorrisofs DMG=${WRAP_DIR}/dmg\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests --disable-fuzz-binary XORRISOFS=${WRAP_DIR}/xorrisofs DMG=${WRAP_DIR}/dmg\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg xorrisofs\"\n \n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n   export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n@@ -81,6 +78,8 @@ script: |\n   done\n   }\n \n+  pip3 install lief==0.11.5\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n@@ -91,7 +90,7 @@ script: |\n   BASEPREFIX=\"${PWD}/depends\"\n \n   mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz\n \n   # Build dependencies for each host\n   for i in $HOSTS; do"
      },
      {
        "sha": "c13c24c3cc332316c044fcf3a1a41227894fa1b2",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2,7 +2,7 @@\n name: \"bitcoin-win-signer\"\n distro: \"ubuntu\"\n suites:\n-- \"bionic\"\n+- \"focal\"\n architectures:\n - \"amd64\"\n packages:"
      },
      {
        "sha": "ffe228a032e6dd72af86ea2187c3737f3783e1f8",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,7 +3,7 @@ name: \"bitcoin-core-win-22\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n-- \"bionic\"\n+- \"focal\"\n architectures:\n - \"amd64\"\n packages:\n@@ -22,6 +22,7 @@ packages:\n - \"zip\"\n - \"ca-certificates\"\n - \"python3\"\n+- \"python3-pip\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n@@ -31,14 +32,12 @@ script: |\n \n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests --disable-fuzz-binary\"\n   FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n   HOST_CFLAGS=\"-O2 -g -fno-ident\"\n   HOST_CXXFLAGS=\"-O2 -g -fno-ident\"\n \n-  export QT_RCC_TEST=1\n-  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n   export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n@@ -87,6 +86,8 @@ script: |\n   done\n   }\n \n+  pip3 install lief==0.11.5\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\""
      },
      {
        "sha": "e604b370e37084a4854a454dda7ac40a9b2cbe36",
        "filename": "contrib/guix/README.md",
        "status": "modified",
        "additions": 130,
        "deletions": 22,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -13,11 +13,9 @@ We achieve bootstrappability by using Guix as a functional package manager.\n \n Conservatively, a x86_64 machine with:\n \n-- 4GB of free disk space on the partition that /gnu/store will reside in\n-- 24GB of free disk space on the partition that the Bitcoin Core git repository\n-  resides in\n-\n-> Note: these requirements are slightly less onerous than those of Gitian builds\n+- 16GB of free disk space on the partition that /gnu/store will reside in\n+- 8GB of free disk space per platform triple you're planning on building (see\n+  the `HOSTS` environment variable description)\n \n ## Setup\n \n@@ -82,14 +80,58 @@ at the end of the `guix pull`)\n export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n ```\n \n+### Controlling the number of threads used by `guix` build commands\n+\n+By default, the scripts under `./contrib/guix` will invoke all `guix` build\n+commands with `--cores=\"$JOBS\"`. Note that `$JOBS` defaults to `$(nproc)` if not\n+specified. However, astute manual readers will also notice that there is a\n+`--max-jobs=` flag (which defaults to 1 if unspecified).\n+\n+Here is the difference between `--cores=` and `--max-jobs=`:\n+\n+> Note: When I say \"derivation,\" think \"package\"\n+\n+`--cores=`\n+\n+  - controls the number of CPU cores to build each derivation. This is the value\n+    passed to `make`'s `--jobs=` flag.\n+\n+`--max-jobs=`\n+\n+  - controls how many derivations can be built in parallel\n+  - defaults to 1\n+\n+Therefore, the default is for `guix` build commands to build one derivation at a\n+time, utilizing `$JOBS` threads.\n+\n+Specifying the `$JOBS` environment variable will only modify `--cores=`, but you\n+can also modify the value for `--max-jobs=` by specifying\n+`$ADDITIONAL_GUIX_COMMON_FLAGS`. For example, if you have a LOT of memory, you\n+may want to set:\n+\n+```sh\n+export ADDITIONAL_GUIX_COMMON_FLAGS='--max-jobs=8'\n+```\n+\n+Which allows for a maximum of 8 derivations to be built at the same time, each\n+utilizing `$JOBS` threads.\n+\n+Or, if you'd like to avoid spurious build failures caused by issues with\n+parallelism within a single package, but would still like to build multiple\n+packages when the dependency graph allows for it, you may want to try:\n+\n+```sh\n+export JOBS=1 ADDITIONAL_GUIX_COMMON_FLAGS='--max-jobs=8'\n+```\n+\n ## Usage\n \n ### As a Tool for Deterministic Builds\n \n From the top of a clean Bitcoin Core repository:\n \n ```sh\n-./contrib/guix/guix-build.sh\n+./contrib/guix/guix-build\n ```\n \n After the build finishes successfully (check the status code please), compare\n@@ -105,21 +147,38 @@ find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n \n   Override the space-separated list of platform triples for which to perform a\n   bootstrappable build. _(defaults to \"x86\\_64-linux-gnu arm-linux-gnueabihf\n-  aarch64-linux-gnu riscv64-linux-gnu x86_64-w64-mingw32\n-  x86_64-apple-darwin18\")_\n+  aarch64-linux-gnu riscv64-linux-gnu powerpc64-linux-gnu powerpc64le-linux-gnu\n+  x86\\_64-w64-mingw32 x86\\_64-apple-darwin18\")_\n \n * _**SOURCES_PATH**_\n \n   Set the depends tree download cache for sources. This is passed through to the\n   depends tree. Setting this to the same directory across multiple builds of the\n   depends tree can eliminate unnecessary redownloading of package sources.\n \n-* _**MAX_JOBS**_\n+* _**BASE_CACHE**_\n+\n+  Set the depends tree cache for built packages. This is passed through to the\n+  depends tree. Setting this to the same directory across multiple builds of the\n+  depends tree can eliminate unnecessary building of packages.\n+\n+* _**SDK_PATH**_\n+\n+  Set the path where _extracted_ SDKs can be found. This is passed through to\n+  the depends tree. Note that this is should be set to the _parent_ directory of\n+  the actual SDK (e.g. SDK_PATH=$HOME/Downloads/macOS-SDKs instead of\n+  $HOME/Downloads/macOS-SDKs/Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers).\n \n-  Override the maximum number of jobs to run simultaneously, you might want to\n-  do so on a memory-limited machine. This may be passed to `make` as in `make\n-  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n-  value of `nproc` outside the container)_\n+* _**JOBS**_\n+\n+  Override the number of jobs to run simultaneously, you might want to do so on\n+  a memory-limited machine. This may be passed to:\n+\n+  - `guix` build commands as in `guix environment --cores=\"$JOBS\"`\n+  - `make` as in `make --jobs=\"$JOBS\"`\n+  - `xargs` as in `xargs -P\"$JOBS\"`\n+\n+  _(defaults to the value of `nproc` outside the container)_\n \n * _**SOURCE_DATE_EPOCH**_\n \n@@ -146,10 +205,7 @@ find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n \n * _**ADDITIONAL_GUIX_COMMON_FLAGS**_\n \n-  Additional flags to be passed to all `guix` commands. For a fully-bootstrapped\n-  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n-  model section](#choosing-your-security-model) for more details). Note that a\n-  fully-bootstrapped build will take quite a long time on the first run.\n+  Additional flags to be passed to all `guix` commands.\n \n * _**ADDITIONAL_GUIX_TIMEMACHINE_FLAGS**_\n \n@@ -206,6 +262,57 @@ To use dongcarl's substitute server for Bitcoin Core builds after having\n export SUBSTITUTE_URLS='https://guix.carldong.io https://ci.guix.gnu.org'\n ```\n \n+## Troubleshooting\n+\n+### Derivation failed to build\n+\n+When you see a build failure like below:\n+\n+```\n+building /gnu/store/...-foo-3.6.12.drv...\n+/ 'check' phasenote: keeping build directory `/tmp/guix-build-foo-3.6.12.drv-0'\n+builder for `/gnu/store/...-foo-3.6.12.drv' failed with exit code 1\n+build of /gnu/store/...-foo-3.6.12.drv failed\n+View build log at '/var/log/guix/drvs/../...-foo-3.6.12.drv.bz2'.\n+cannot build derivation `/gnu/store/...-qux-7.69.1.drv': 1 dependencies couldn't be built\n+cannot build derivation `/gnu/store/...-bar-3.16.5.drv': 1 dependencies couldn't be built\n+cannot build derivation `/gnu/store/...-baz-2.0.5.drv': 1 dependencies couldn't be built\n+guix time-machine: error: build of `/gnu/store/...-baz-2.0.5.drv' failed\n+```\n+\n+It means that `guix` failed to build a package named `foo`, which was a\n+dependency of `qux`, `bar`, and `baz`. Importantly, note that the last \"failed\"\n+line is not necessarily the root cause, the first \"failed\" line is.\n+\n+Most of the time, the build failure is due to a spurious test failure or the\n+package's build system/test suite breaking when running multi-threaded. To\n+rebuild _just_ this derivation in a single-threaded fashion:\n+\n+```sh\n+$ guix build --cores=1 /gnu/store/...-foo-3.6.12.drv\n+```\n+\n+If the single-threaded rebuild did not succeed, you may need to dig deeper.\n+You may view `foo`'s build logs in `less` like so (please replace paths with the\n+path you see in the build failure output):\n+\n+```sh\n+$ bzcat /var/log/guix/drvs/../...-foo-3.6.12.drv.bz2 | less\n+```\n+\n+`foo`'s build directory is also preserved and available at\n+`/tmp/guix-build-foo-3.6.12.drv-0`. However, if you fail to build `foo` multiple\n+times, it may be `/tmp/...drv-1` or `/tmp/...drv-2`. Always consult the build\n+failure output for the most accurate, up-to-date information.\n+\n+#### python(-minimal): [Errno 84] Invalid or incomplete multibyte or wide character\n+\n+This error occurs when your `$TMPDIR` (default: /tmp) exists on a filesystem\n+which rejects characters not present in the UTF-8 character code set. An example\n+is ZFS with the utf8only=on option set.\n+\n+More information: https://bugs.python.org/issue37584\n+\n ## FAQ\n \n ### How can I trust the binary installation?\n@@ -217,11 +324,11 @@ As mentioned at the bottom of [this manual page][guix/bin-install]:\n >\n >     make guix-binary.x86_64-linux.tar.xz\n \n-### When will Guix be packaged in debian?\n+### Is Guix packaged in my operating system?\n \n-Thanks to Vagrant Cascadian's diligent work, Guix is now [in debian\n-experimental][debian/guix-experimental]! Hopefully it will make its way into a\n-release soon.\n+Guix is shipped starting with [Debian Bullseye][debian/guix-bullseye] and\n+[Ubuntu 21.04 \"Hirsute Hippo\"][ubuntu/guix-hirsute]. Other operating systems\n+are working on packaging Guix as well.\n \n [b17e]: http://bootstrappable.org/\n [r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n@@ -233,5 +340,6 @@ release soon.\n [guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n [guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n \n-[debian/guix-experimental]: https://packages.debian.org/experimental/guix\n+[debian/guix-bullseye]: https://packages.debian.org/bullseye/guix\n+[ubuntu/guix-hirsute]: https://packages.ubuntu.com/hirsute/guix\n [fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "c8cf73d40011ad8d9a438044a441cab8520d2778",
        "filename": "contrib/guix/guix-attest",
        "status": "added",
        "additions": 240,
        "deletions": 0,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-attest",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-attest",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-attest?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,240 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find\n+if [ -z \"$NO_SIGN\" ]; then\n+    check_tools gpg\n+fi\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if [ -z \"$NO_SIGN\" ] && ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output SHA256SUMS fragments in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+sha256sum_fragments=( \"$OUTDIR_BASE\"/*/SHA256SUMS.part ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+noncodesigned_fragments=()\n+codesigned_fragments=()\n+\n+if (( ${#sha256sum_fragments[@]} )); then\n+    echo \"Found build output SHA256SUMS fragments:\"\n+    for outdir in \"${sha256sum_fragments[@]}\"; do\n+        echo \"    '$outdir'\"\n+        case \"$outdir\" in\n+            \"$OUTDIR_BASE\"/*-codesigned/SHA256SUMS.part)\n+                codesigned_fragments+=(\"$outdir\")\n+                ;;\n+            *)\n+                noncodesigned_fragments+=(\"$outdir\")\n+                ;;\n+        esac\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output SHA256SUMS fragments in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$(dirname \"$1\")\"\n+}\n+\n+shasum_already_exists() {\n+cat <<EOF\n+--\n+\n+ERR: An ${1} file already exists for '${VERSION}' and attests\n+     differently. You likely previously attested to a partial build (e.g. one\n+     where you specified the HOST environment variable).\n+\n+     See the diff above for more context.\n+\n+Hint: You may wish to remove the existing attestations and their signatures by\n+      invoking:\n+\n+          rm '${PWD}/${1}'{,.asc}\n+\n+      Then try running this script again.\n+\n+EOF\n+}\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+outsigdir=\"$GUIX_SIGS_REPO/$VERSION/$signer_name\"\n+mkdir -p \"$outsigdir\"\n+(\n+    cd \"$outsigdir\"\n+\n+    temp_noncodesigned=\"$(mktemp)\"\n+    trap 'rm -rf -- \"$temp_noncodesigned\"' EXIT\n+\n+    if (( ${#noncodesigned_fragments[@]} )); then\n+        cat \"${noncodesigned_fragments[@]}\" \\\n+            | sort -u \\\n+            | sort -k2 \\\n+                   > \"$temp_noncodesigned\"\n+        if [ -e noncodesigned.SHA256SUMS ]; then\n+            # The SHA256SUMS already exists, make sure it's exactly what we\n+            # expect, error out if not\n+            if diff -u noncodesigned.SHA256SUMS \"$temp_noncodesigned\"; then\n+                echo \"A noncodesigned.SHA256SUMS file already exists for '${VERSION}' and is up-to-date.\"\n+            else\n+                shasum_already_exists noncodesigned.SHA256SUMS\n+                exit 1\n+            fi\n+        else\n+            mv \"$temp_noncodesigned\" noncodesigned.SHA256SUMS\n+        fi\n+    else\n+        echo \"ERR: No noncodesigned outputs found for '${VERSION}', exiting...\"\n+        exit 1\n+    fi\n+\n+    temp_codesigned=\"$(mktemp)\"\n+    trap 'rm -rf -- \"$temp_codesigned\"' EXIT\n+\n+    if (( ${#codesigned_fragments[@]} )); then\n+        # Note: all.SHA256SUMS attests to all of $sha256sum_fragments, but is\n+        #       not needed if there are no $codesigned_fragments\n+        cat \"${sha256sum_fragments[@]}\" \\\n+            | sort -u \\\n+            | sort -k2 \\\n+                   > \"$temp_codesigned\"\n+        if [ -e codesigned.SHA256SUMS ]; then\n+            # The SHA256SUMS already exists, make sure it's exactly what we\n+            # expect, error out if not\n+            if diff -u all.SHA256SUMS \"$temp_codesigned\"; then\n+                echo \"An all.SHA256SUMS file already exists for '${VERSION}' and is up-to-date.\"\n+            else\n+                shasum_already_exists all.SHA256SUMS\n+                exit 1\n+            fi\n+        else\n+            mv \"$temp_codesigned\" codesigned.SHA256SUMS\n+        fi\n+    else\n+        # It is fine to have the codesigned outputs be missing (perhaps the\n+        # detached codesigs have not been published yet), just print a log\n+        # message instead of erroring out\n+        echo \"INFO: No codesigned outputs found for '${VERSION}', skipping...\"\n+    fi\n+\n+    if [ -z \"$NO_SIGN\" ]; then\n+        echo \"Signing SHA256SUMS to produce SHA256SUMS.asc\"\n+        for i in *.SHA256SUMS; do\n+            if [ ! -e \"$i\".asc ]; then\n+                gpg --detach-sign \\\n+                    --local-user \"$gpg_key_name\" \\\n+                    --armor \\\n+                    --output \"$i\".asc \"$i\"\n+            else\n+                echo \"Signature already there\"\n+            fi\n+        done\n+    else\n+        echo \"Not signing SHA256SUMS as \\$NO_SIGN is not empty\"\n+    fi\n+    echo \"\"\n+)"
      },
      {
        "sha": "29d6701b253624c575a0da30d20a37be83758c12",
        "filename": "contrib/guix/guix-build",
        "status": "added",
        "additions": 454,
        "deletions": 0,
        "changes": 454,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-build",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-build",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,454 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## SANITY CHECKS ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invocable\n+################\n+\n+check_tools cat mkdir make git guix\n+\n+################\n+# GUIX_BUILD_OPTIONS should be empty\n+################\n+#\n+# GUIX_BUILD_OPTIONS is an environment variable recognized by guix commands that\n+# can perform builds. This seems like what we want instead of\n+# ADDITIONAL_GUIX_COMMON_FLAGS, but the value of GUIX_BUILD_OPTIONS is actually\n+# _appended_ to normal command-line options. Meaning that they will take\n+# precedence over the command-specific ADDITIONAL_GUIX_<CMD>_FLAGS.\n+#\n+# This seems like a poor user experience. Thus we check for GUIX_BUILD_OPTIONS's\n+# existence here and direct users of this script to use our (more flexible)\n+# custom environment variables.\n+if [ -n \"$GUIX_BUILD_OPTIONS\" ]; then\n+cat << EOF\n+Error: Environment variable GUIX_BUILD_OPTIONS is not empty:\n+  '$GUIX_BUILD_OPTIONS'\n+\n+Unfortunately this script is incompatible with GUIX_BUILD_OPTIONS, please unset\n+GUIX_BUILD_OPTIONS and use ADDITIONAL_GUIX_COMMON_FLAGS to set build options\n+across guix commands or ADDITIONAL_GUIX_<CMD>_FLAGS to set build options for a\n+specific guix command.\n+\n+See contrib/guix/README.md for more details.\n+EOF\n+exit 1\n+fi\n+\n+################\n+# The git worktree should not be dirty\n+################\n+\n+if ! git diff-index --quiet HEAD -- && [ -z \"$FORCE_DIRTY_WORKTREE\" ]; then\n+cat << EOF\n+ERR: The current git worktree is dirty, which may lead to broken builds.\n+\n+     Aborting...\n+\n+Hint: To make your git worktree clean, You may want to:\n+      1. Commit your changes,\n+      2. Stash your changes, or\n+      3. Set the 'FORCE_DIRTY_WORKTREE' environment variable if you insist on\n+         using a dirty worktree\n+EOF\n+exit 1\n+fi\n+\n+mkdir -p \"$VERSION_BASE\"\n+\n+################\n+# Build directories should not exist\n+################\n+\n+# Default to building for all supported HOSTs (overridable by environment)\n+export HOSTS=\"${HOSTS:-x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu powerpc64-linux-gnu powerpc64le-linux-gnu\n+                       x86_64-w64-mingw32\n+                       x86_64-apple-darwin18}\"\n+\n+# Usage: distsrc_for_host HOST\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+distsrc_for_host() {\n+    echo \"${DISTSRC_BASE}/distsrc-${VERSION}-${1}\"\n+}\n+\n+# Accumulate a list of build directories that already exist...\n+hosts_distsrc_exists=\"\"\n+for host in $HOSTS; do\n+    if [ -e \"$(distsrc_for_host \"$host\")\" ]; then\n+        hosts_distsrc_exists+=\" ${host}\"\n+    fi\n+done\n+\n+if [ -n \"$hosts_distsrc_exists\" ]; then\n+# ...so that we can print them out nicely in an error message\n+cat << EOF\n+ERR: Build directories for this commit already exist for the following platform\n+     triples you're attempting to build, probably because of previous builds.\n+     Please remove, or otherwise deal with them prior to starting another build.\n+\n+     Aborting...\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ ./contrib/guix/guix-clean\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory, the depends download cache, the depends built\n+packages cache, the garbage collector roots for Guix environments, and the\n+output directory.\n+EOF\n+for host in $hosts_distsrc_exists; do\n+    echo \"     ${host} '$(distsrc_for_host \"$host\")'\"\n+done\n+exit 1\n+else\n+    mkdir -p \"$DISTSRC_BASE\"\n+fi\n+\n+################\n+# When building for darwin, the macOS SDK should exists\n+################\n+\n+for host in $HOSTS; do\n+    case \"$host\" in\n+        *darwin*)\n+            OSX_SDK=\"$(make -C \"${PWD}/depends\" --no-print-directory HOST=\"$host\" print-OSX_SDK | sed 's@^[^=]\\+=@@g')\"\n+            if [ -e \"$OSX_SDK\" ]; then\n+                echo \"Found macOS SDK at '${OSX_SDK}', using...\"\n+            else\n+                echo \"macOS SDK does not exist at '${OSX_SDK}', please place the extracted, untarred SDK there to perform darwin builds, exiting...\"\n+                exit 1\n+            fi\n+            ;;\n+    esac\n+done\n+\n+################\n+# VERSION_BASE should have enough space\n+################\n+\n+avail_KiB=\"$(df -Pk \"$VERSION_BASE\" | sed 1d | tr -s ' ' | cut -d' ' -f4)\"\n+total_required_KiB=0\n+for host in $HOSTS; do\n+    case \"$host\" in\n+        *darwin*) required_KiB=440000 ;;\n+        *mingw*)  required_KiB=7600000 ;;\n+        *)        required_KiB=6400000 ;;\n+    esac\n+    total_required_KiB=$((total_required_KiB+required_KiB))\n+done\n+\n+if (( total_required_KiB > avail_KiB )); then\n+    total_required_GiB=$((total_required_KiB / 1048576))\n+    avail_GiB=$((avail_KiB / 1048576))\n+    echo \"Performing a Bitcoin Core Guix build for the selected HOSTS requires ${total_required_GiB} GiB, however, only ${avail_GiB} GiB is available. Please free up some disk space before performing the build.\"\n+    exit 1\n+fi\n+\n+################\n+# Check that we can connect to the guix-daemon\n+################\n+\n+cat << EOF\n+Checking that we can connect to the guix-daemon...\n+\n+Hint: If this hangs, you may want to try turning your guix-daemon off and on\n+      again.\n+\n+EOF\n+if ! guix gc --list-failures > /dev/null; then\n+cat << EOF\n+\n+ERR: Failed to connect to the guix-daemon, please ensure that one is running and\n+     reachable.\n+EOF\n+exit 1\n+fi\n+\n+# Developer note: we could use `guix repl` for this check and run:\n+#\n+#     (import (guix store)) (close-connection (open-connection))\n+#\n+# However, the internal API is likely to change more than the CLI invocation\n+\n+\n+#########\n+# SETUP #\n+#########\n+\n+# Determine the maximum number of jobs to run simultaneously (overridable by\n+# environment)\n+JOBS=\"${JOBS:-$(nproc)}\"\n+\n+# Usage: host_to_commonname HOST\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+host_to_commonname() {\n+    case \"$1\" in\n+        *darwin*) echo osx ;;\n+        *mingw*)  echo win ;;\n+        *linux*)  echo linux ;;\n+        *)        exit 1 ;;\n+    esac\n+}\n+\n+# Determine the reference time used for determinism (overridable by environment)\n+SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n+\n+# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n+# across time.\n+time-machine() {\n+    # shellcheck disable=SC2086\n+    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n+                      --commit=490e39ff303f4f6873a04bfb8253755bdae1b29c \\\n+                      --cores=\"$JOBS\" \\\n+                      --keep-failed \\\n+                      --fallback \\\n+                      ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n+                      ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_TIMEMACHINE_FLAGS} \\\n+                      -- \"$@\"\n+}\n+\n+\n+# Precious directories are those which should not be cleaned between successive\n+# guix builds\n+depends_precious_dir_names='SOURCES_PATH BASE_CACHE SDK_PATH'\n+precious_dir_names=\"${depends_precious_dir_names} OUTDIR_BASE PROFILES_BASE\"\n+\n+# Usage: contains IFS-SEPARATED-LIST ITEM\n+contains() {\n+    for i in ${1}; do\n+        if [ \"$i\" = \"${2}\" ]; then\n+            return 0  # Found!\n+        fi\n+    done\n+    return 1\n+}\n+\n+# If the user explicitly specified a precious directory, create it so we\n+# can map it into the container\n+for precious_dir_name in $precious_dir_names; do\n+    precious_dir_path=\"${!precious_dir_name}\"\n+    if [ -n \"$precious_dir_path\" ]; then\n+        if [ ! -e \"$precious_dir_path\" ]; then\n+            mkdir -p \"$precious_dir_path\"\n+        elif [ -L \"$precious_dir_path\" ]; then\n+            echo \"ERR: ${precious_dir_name} cannot be a symbolic link\"\n+            exit 1\n+        elif [ ! -d \"$precious_dir_path\" ]; then\n+            echo \"ERR: ${precious_dir_name} must be a directory\"\n+            exit 1\n+        fi\n+    fi\n+done\n+\n+mkdir -p \"$VAR_BASE\"\n+\n+# Record the _effective_ values of precious directories such that guix-clean can\n+# avoid clobbering them if appropriate.\n+#\n+# shellcheck disable=SC2046,SC2086\n+{\n+    # Get depends precious dir definitions from depends\n+    make -C \"${PWD}/depends\" \\\n+         --no-print-directory \\\n+         -- $(printf \"print-%s\\n\" $depends_precious_dir_names)\n+\n+    # Get remaining precious dir definitions from the environment\n+    for precious_dir_name in $precious_dir_names; do\n+        precious_dir_path=\"${!precious_dir_name}\"\n+        if ! contains \"$depends_precious_dir_names\" \"$precious_dir_name\"; then\n+            echo \"${precious_dir_name}=${precious_dir_path}\"\n+        fi\n+    done\n+} > \"${VAR_BASE}/precious_dirs\"\n+\n+# Make sure an output directory exists for our builds\n+OUTDIR_BASE=\"${OUTDIR_BASE:-${VERSION_BASE}/output}\"\n+mkdir -p \"$OUTDIR_BASE\"\n+\n+# Download the depends sources now as we won't have internet access in the build\n+# container\n+for host in $HOSTS; do\n+    make -C \"${PWD}/depends\" -j\"$JOBS\" download-\"$(host_to_commonname \"$host\")\" ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n+done\n+\n+# Usage: outdir_for_host HOST SUFFIX\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+outdir_for_host() {\n+    echo \"${OUTDIR_BASE}/${1}${2:+-${2}}\"\n+}\n+\n+# Usage: profiledir_for_host HOST SUFFIX\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+profiledir_for_host() {\n+    echo \"${PROFILES_BASE}/${1}${2:+-${2}}\"\n+}\n+\n+\n+#########\n+# BUILD #\n+#########\n+\n+# Function to be called when building for host ${1} and the user interrupts the\n+# build\n+int_trap() {\n+cat << EOF\n+** INT received while building ${1}, you may want to clean up the relevant\n+   work directories (e.g. distsrc-*) before rebuilding\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ ./contrib/guix/guix-clean\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory, the depends download cache, the depends built\n+packages cache, the garbage collector roots for Guix environments, and the\n+output directory.\n+EOF\n+}\n+\n+# Deterministically build Bitcoin Core\n+# shellcheck disable=SC2153\n+for host in $HOSTS; do\n+\n+    # Display proper warning when the user interrupts the build\n+    trap 'int_trap ${host}' INT\n+\n+    (\n+        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n+        # for the particular $HOST we're building for\n+        export HOST=\"$host\"\n+\n+        # shellcheck disable=SC2030\n+cat << EOF\n+INFO: Building ${VERSION:?not set} for platform triple ${HOST:?not set}:\n+      ...using reference timestamp: ${SOURCE_DATE_EPOCH:?not set}\n+      ...running at most ${JOBS:?not set} jobs\n+      ...from worktree directory: '${PWD}'\n+          ...bind-mounted in container to: '/bitcoin'\n+      ...in build directory: '$(distsrc_for_host \"$HOST\")'\n+          ...bind-mounted in container to: '$(DISTSRC_BASE=/distsrc-base && distsrc_for_host \"$HOST\")'\n+      ...outputting in: '$(outdir_for_host \"$HOST\")'\n+          ...bind-mounted in container to: '$(OUTDIR_BASE=/outdir-base && outdir_for_host \"$HOST\")'\n+EOF\n+\n+        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+        # container specified by 'contrib/guix/manifest.scm'.\n+        #\n+        # Explanation of `guix environment` flags:\n+        #\n+        #   --container        run command within an isolated container\n+        #\n+        #     Running in an isolated container minimizes build-time differences\n+        #     between machines and improves reproducibility\n+        #\n+        #   --pure             unset existing environment variables\n+        #\n+        #     Same rationale as --container\n+        #\n+        #   --no-cwd           do not share current working directory with an\n+        #                      isolated container\n+        #\n+        #     When --container is specified, the default behavior is to share\n+        #     the current working directory with the isolated container at the\n+        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n+        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n+        #     container becomes a source of irreproducibility. --no-cwd disables\n+        #     this behaviour.\n+        #\n+        #   --share=SPEC       for containers, share writable host file system\n+        #                      according to SPEC\n+        #\n+        #   --share=\"$PWD\"=/bitcoin\n+        #\n+        #                     maps our current working directory to /bitcoin\n+        #                     inside the isolated container, which we later cd\n+        #                     into.\n+        #\n+        #     While we don't want to map our current working directory to the\n+        #     same exact path (as this introduces irreproducibility), we do want\n+        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n+        #     container so that we have something to build. '/bitcoin' was\n+        #     chosen arbitrarily.\n+        #\n+        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n+        #\n+        #                     make the downloaded depends sources path available\n+        #                     inside the isolated container\n+        #\n+        #     The isolated container has no network access as it's in a\n+        #     different network namespace from the main machine, so we have to\n+        #     make the downloaded depends sources available to it. The sources\n+        #     should have been downloaded prior to this invocation.\n+        #\n+        #   --keep-failed     keep build tree of failed builds\n+        #\n+        #     When builds of the Guix environment itself (not Bitcoin Core)\n+        #     fail, it is useful for the build tree to be kept for debugging\n+        #     purposes.\n+        #\n+        #  ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"}\n+        #\n+        #                     fetch substitute from SUBSTITUTE_URLS if they are\n+        #                     authorized\n+        #\n+        #    Depending on the user's security model, it may be desirable to use\n+        #    substitutes (pre-built packages) from servers that the user trusts.\n+        #    Please read the README.md in the same directory as this file for\n+        #    more information.\n+        #\n+        # shellcheck disable=SC2086,SC2031\n+        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                                 --container \\\n+                                 --pure \\\n+                                 --no-cwd \\\n+                                 --share=\"$PWD\"=/bitcoin \\\n+                                 --share=\"$DISTSRC_BASE\"=/distsrc-base \\\n+                                 --share=\"$OUTDIR_BASE\"=/outdir-base \\\n+                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n+                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                                 ${BASE_CACHE:+--share=\"$BASE_CACHE\"} \\\n+                                 ${SDK_PATH:+--share=\"$SDK_PATH\"} \\\n+                                 --cores=\"$JOBS\" \\\n+                                 --keep-failed \\\n+                                 --fallback \\\n+                                 --link-profile \\\n+                                 --root=\"$(profiledir_for_host \"${HOST}\")\" \\\n+                                 ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n+                                 ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                                 -- env HOST=\"$host\" \\\n+                                        DISTNAME=\"$DISTNAME\" \\\n+                                        JOBS=\"$JOBS\" \\\n+                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                                        ${V:+V=1} \\\n+                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                        ${BASE_CACHE:+BASE_CACHE=\"$BASE_CACHE\"} \\\n+                                        ${SDK_PATH:+SDK_PATH=\"$SDK_PATH\"} \\\n+                                        DISTSRC=\"$(DISTSRC_BASE=/distsrc-base && distsrc_for_host \"$HOST\")\" \\\n+                                        OUTDIR=\"$(OUTDIR_BASE=/outdir-base && outdir_for_host \"$HOST\")\" \\\n+                                        DIST_ARCHIVE_BASE=/outdir-base/dist-archive \\\n+                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+    )\n+\n+done"
      },
      {
        "sha": "9fa17191e80888902f52b30dcca16fd37adbf0cd",
        "filename": "contrib/guix/guix-clean",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-clean",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-clean",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-clean?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat mkdir make git guix\n+\n+\n+#############\n+##  Clean  ##\n+#############\n+\n+# Usage: under_dir MAYBE_PARENT MAYBE_CHILD\n+#\n+# If MAYBE_CHILD is a subdirectory of MAYBE_PARENT, print the relative path\n+# from MAYBE_PARENT to MAYBE_CHILD. Otherwise, return 1 as the error code.\n+#\n+# NOTE: This does not perform any symlink-resolving or path canonicalization.\n+#\n+under_dir() {\n+    local path_residue\n+    path_residue=\"${2##${1}}\"\n+    if [ -z \"$path_residue\" ] || [ \"$path_residue\" = \"$2\" ]; then\n+        return 1\n+    else\n+        echo \"$path_residue\"\n+    fi\n+}\n+\n+# Usage: dir_under_git_root MAYBE_CHILD\n+#\n+# If MAYBE_CHILD is under the current git repository and exists, print the\n+# relative path from the git repository's top-level directory to MAYBE_CHILD,\n+# otherwise, exit with an error code.\n+#\n+dir_under_git_root() {\n+    local rv\n+    rv=\"$(under_dir \"$(git_root)\" \"$1\")\"\n+    [ -n \"$rv\" ] && echo \"$rv\"\n+}\n+\n+shopt -s nullglob\n+found_precious_dirs_files=( \"${version_base_prefix}\"*/\"${var_base_basename}/precious_dirs\" ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+exclude_flags=()\n+\n+for precious_dirs_file in \"${found_precious_dirs_files[@]}\"; do\n+    # Make sure the precious directories (e.g. SOURCES_PATH, BASE_CACHE, SDK_PATH)\n+    # are excluded from git-clean\n+    echo \"Found precious_dirs file: '${precious_dirs_file}'\"\n+\n+    # Exclude the precious_dirs file itself\n+    if dirs_file_exclude_fragment=$(dir_under_git_root \"$(dirname \"$precious_dirs_file\")\"); then\n+        exclude_flags+=( --exclude=\"${dirs_file_exclude_fragment}/precious_dirs\" )\n+    fi\n+\n+    # Read each 'name=dir' pair from the precious_dirs file\n+    while IFS='=' read -r name dir; do\n+        # Add an exclusion flag if the precious directory is under the git root.\n+        if under=$(dir_under_git_root \"$dir\"); then\n+            echo \"Avoiding ${name}: ${under}\"\n+            exclude_flags+=( --exclude=\"$under\" )\n+        fi\n+    done < \"$precious_dirs_file\"\n+done\n+\n+git clean -xdff \"${exclude_flags[@]}\""
      },
      {
        "sha": "62853dbf4da888022555cc0d9baa8ed3cd3ee0f1",
        "filename": "contrib/guix/guix-codesign",
        "status": "renamed",
        "additions": 166,
        "deletions": 64,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-codesign",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-codesign",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-codesign?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2,22 +2,45 @@\n export LC_ALL=C\n set -e -o pipefail\n \n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n ###################\n-## Sanity Checks ##\n+## SANITY CHECKS ##\n ###################\n \n ################\n-# Check 1: Make sure that we can invoke required tools\n+# Required non-builtin commands should be invocable\n+################\n+\n+check_tools cat mkdir git guix\n+\n+################\n+# Required env vars should be non-empty\n ################\n-for cmd in git make guix cat mkdir; do\n-    if ! command -v \"$cmd\" > /dev/null 2>&1; then\n-        echo \"ERR: This script requires that '$cmd' is installed and available in your \\$PATH\"\n-        exit 1\n-    fi\n-done\n+\n+cmd_usage() {\n+    cat <<EOF\n+Synopsis:\n+\n+    env DETACHED_SIGS_REPO=<path/to/bitcoin-detached-sigs> \\\\\n+      ./contrib/guix/guix-codesign\n+\n+EOF\n+}\n+\n+if [ -z \"$DETACHED_SIGS_REPO\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n \n ################\n-# Check 2: Make sure GUIX_BUILD_OPTIONS is empty\n+# GUIX_BUILD_OPTIONS should be empty\n ################\n #\n # GUIX_BUILD_OPTIONS is an environment variable recognized by guix commands that\n@@ -45,11 +68,12 @@ exit 1\n fi\n \n ################\n-# Check 3: Make sure that we're not in a dirty worktree\n+# The codesignature git worktree should not be dirty\n ################\n-if ! git diff-index --quiet HEAD -- && [ -z \"$FORCE_DIRTY_WORKTREE\" ]; then\n-cat << EOF\n-ERR: The current git worktree is dirty, which may lead to broken builds.\n+\n+if ! git -C \"$DETACHED_SIGS_REPO\" diff-index --quiet HEAD -- && [ -z \"$FORCE_DIRTY_WORKTREE\" ]; then\n+    cat << EOF\n+ERR: The DETACHED CODESIGNATURE git worktree is dirty, which may lead to broken builds.\n \n      Aborting...\n \n@@ -59,28 +83,22 @@ Hint: To make your git worktree clean, You may want to:\n       3. Set the 'FORCE_DIRTY_WORKTREE' environment variable if you insist on\n          using a dirty worktree\n EOF\n-exit 1\n-else\n-    GIT_COMMIT=$(git rev-parse --short=12 HEAD)\n+    exit 1\n fi\n \n ################\n-# Check 4: Make sure that build directories do not exist\n+# Build directories should not exist\n ################\n \n # Default to building for all supported HOSTs (overridable by environment)\n-export HOSTS=\"${HOSTS:-x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\n-                       x86_64-w64-mingw32\n-                       x86_64-apple-darwin18}\"\n-\n-DISTSRC_BASE=\"${DISTSRC_BASE:-${PWD}}\"\n+export HOSTS=\"${HOSTS:-x86_64-w64-mingw32 x86_64-apple-darwin18}\"\n \n # Usage: distsrc_for_host HOST\n #\n #   HOST: The current platform triple we're building for\n #\n distsrc_for_host() {\n-    echo \"${DISTSRC_BASE}/distsrc-${GIT_COMMIT}-${1}\"\n+    echo \"${DISTSRC_BASE}/distsrc-${VERSION}-${1}-codesigned\"\n }\n \n # Accumulate a list of build directories that already exist...\n@@ -100,45 +118,106 @@ ERR: Build directories for this commit already exist for the following platform\n \n      Aborting...\n \n+Hint: To blow everything away, you may want to use:\n+\n+  $ ./contrib/guix/guix-clean\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory, the depends download cache, the depends built\n+packages cache, the garbage collector roots for Guix environments, and the\n+output directory.\n EOF\n for host in $hosts_distsrc_exists; do\n     echo \"     ${host} '$(distsrc_for_host \"$host\")'\"\n done\n exit 1\n else\n-\n     mkdir -p \"$DISTSRC_BASE\"\n fi\n \n+\n ################\n-# Check 5: When building for darwin, make sure that the macOS SDK exists\n+# Unsigned tarballs SHOULD exist\n ################\n \n-for host in $HOSTS; do\n-    case \"$host\" in\n+# Usage: outdir_for_host HOST SUFFIX\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+outdir_for_host() {\n+    echo \"${OUTDIR_BASE}/${1}${2:+-${2}}\"\n+}\n+\n+\n+unsigned_tarball_for_host() {\n+    case \"$1\" in\n+        *mingw*)\n+            echo \"$(outdir_for_host \"$1\")/${DISTNAME}-win-unsigned.tar.gz\"\n+            ;;\n         *darwin*)\n-            OSX_SDK=\"$(make -C \"${PWD}/depends\" --no-print-directory HOST=\"$host\" print-OSX_SDK | sed 's@^[^=]\\+=[[:space:]]\\+@@g')\"\n-            if [ -e \"$OSX_SDK\" ]; then\n-                echo \"Found macOS SDK at '${OSX_SDK}', using...\"\n-            else\n-                echo \"macOS SDK does not exist at '${OSX_SDK}', please place the extracted, untarred SDK there to perform darwin builds, exiting...\"\n-                exit 1\n-            fi\n+            echo \"$(outdir_for_host \"$1\")/${DISTNAME}-osx-unsigned.tar.gz\"\n+            ;;\n+        *)\n+            exit 1\n             ;;\n     esac\n+}\n+\n+# Accumulate a list of build directories that already exist...\n+hosts_unsigned_tarball_missing=\"\"\n+for host in $HOSTS; do\n+    if [ ! -e \"$(unsigned_tarball_for_host \"$host\")\" ]; then\n+        hosts_unsigned_tarball_missing+=\" ${host}\"\n+    fi\n done\n \n+if [ -n \"$hosts_unsigned_tarball_missing\" ]; then\n+    # ...so that we can print them out nicely in an error message\n+    cat << EOF\n+ERR: Unsigned tarballs do not exist\n+...\n+\n+EOF\n+for host in $hosts_unsigned_tarball_missing; do\n+    echo \"     ${host} '$(unsigned_tarball_for_host \"$host\")'\"\n+done\n+exit 1\n+fi\n+\n+################\n+# Check that we can connect to the guix-daemon\n+################\n+\n+cat << EOF\n+Checking that we can connect to the guix-daemon...\n+\n+Hint: If this hangs, you may want to try turning your guix-daemon off and on\n+      again.\n+\n+EOF\n+if ! guix gc --list-failures > /dev/null; then\n+    cat << EOF\n+\n+ERR: Failed to connect to the guix-daemon, please ensure that one is running and\n+     reachable.\n+EOF\n+    exit 1\n+fi\n+\n+# Developer note: we could use `guix repl` for this check and run:\n+#\n+#     (import (guix store)) (close-connection (open-connection))\n+#\n+# However, the internal API is likely to change more than the CLI invocation\n+\n+\n #########\n-# Setup #\n+# SETUP #\n #########\n \n # Determine the maximum number of jobs to run simultaneously (overridable by\n # environment)\n-MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n-\n-# Download the depends sources now as we won't have internet access in the build\n-# container\n-make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n+JOBS=\"${JOBS:-$(nproc)}\"\n \n # Determine the reference time used for determinism (overridable by environment)\n SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n@@ -148,35 +227,46 @@ SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n time-machine() {\n     # shellcheck disable=SC2086\n     guix time-machine --url=https://github.com/dongcarl/guix.git \\\n-                      --commit=b066c25026f21fb57677aa34692a5034338e7ee3 \\\n-                      --max-jobs=\"$MAX_JOBS\" \\\n-                      ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n-                      ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_TIMEMACHINE_FLAGS} \\\n-                      -- \"$@\"\n+         --commit=490e39ff303f4f6873a04bfb8253755bdae1b29c \\\n+         --cores=\"$JOBS\" \\\n+         --keep-failed \\\n+         --fallback \\\n+         ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n+         ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_TIMEMACHINE_FLAGS} \\\n+         -- \"$@\"\n }\n \n # Make sure an output directory exists for our builds\n-OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n-[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n+OUTDIR_BASE=\"${OUTDIR_BASE:-${VERSION_BASE}/output}\"\n+mkdir -p \"$OUTDIR_BASE\"\n+\n+# Usage: profiledir_for_host HOST SUFFIX\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+profiledir_for_host() {\n+    echo \"${PROFILES_BASE}/${1}${2:+-${2}}\"\n+}\n \n #########\n-# Build #\n+# BUILD #\n #########\n \n-# Function to be called when building for host ${1} and the user interrupts the\n-# build\n+# Function to be called when codesigning for host ${1} and the user interrupts\n+# the codesign\n int_trap() {\n cat << EOF\n-** INT received while building ${1}, you may want to clean up the relevant\n-   output, deploy, and distsrc-* directories before rebuilding\n+** INT received while codesigning ${1}, you may want to clean up the relevant\n+   work directories (e.g. distsrc-*) before recodesigning\n \n Hint: To blow everything away, you may want to use:\n \n-  $ git clean -xdff --exclude='/depends/SDKs/*'\n+  $ ./contrib/guix/guix-clean\n \n Specifically, this will remove all files without an entry in the index,\n-excluding the SDK directory. Practically speaking, this means that all ignored\n-and untracked files and directories will be wiped, allowing you to start anew.\n+excluding the SDK directory, the depends download cache, the depends built\n+packages cache, the garbage collector roots for Guix environments, and the\n+output directory.\n EOF\n }\n \n@@ -194,17 +284,19 @@ for host in $HOSTS; do\n \n         # shellcheck disable=SC2030\n cat << EOF\n-INFO: Building commit ${GIT_COMMIT:?not set} for platform triple ${HOST:?not set}:\n+INFO: Codesigning ${VERSION:?not set} for platform triple ${HOST:?not set}:\n       ...using reference timestamp: ${SOURCE_DATE_EPOCH:?not set}\n-      ...running at most ${MAX_JOBS:?not set} jobs\n       ...from worktree directory: '${PWD}'\n           ...bind-mounted in container to: '/bitcoin'\n       ...in build directory: '$(distsrc_for_host \"$HOST\")'\n           ...bind-mounted in container to: '$(DISTSRC_BASE=/distsrc-base && distsrc_for_host \"$HOST\")'\n-      ...outputting in: '${OUTDIR:?not set}'\n-          ...bind-mounted in container to: '/outdir'\n+      ...outputting in: '$(outdir_for_host \"$HOST\" codesigned)'\n+          ...bind-mounted in container to: '$(OUTDIR_BASE=/outdir-base && outdir_for_host \"$HOST\" codesigned)'\n+      ...using detached signatures in: '${DETACHED_SIGS_REPO:?not set}'\n+          ...bind-mounted in container to: '/detached-sigs'\n EOF\n \n+\n         # Run the build script 'contrib/guix/libexec/build.sh' in the build\n         # container specified by 'contrib/guix/manifest.scm'.\n         #\n@@ -271,20 +363,30 @@ EOF\n                                  --no-cwd \\\n                                  --share=\"$PWD\"=/bitcoin \\\n                                  --share=\"$DISTSRC_BASE\"=/distsrc-base \\\n-                                 --share=\"$OUTDIR\"=/outdir \\\n+                                 --share=\"$OUTDIR_BASE\"=/outdir-base \\\n+                                 --share=\"$DETACHED_SIGS_REPO\"=/detached-sigs \\\n                                  --expose=\"$(git rev-parse --git-common-dir)\" \\\n+                                 --expose=\"$(git -C \"$DETACHED_SIGS_REPO\" rev-parse --git-common-dir)\" \\\n                                  ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n-                                 --max-jobs=\"$MAX_JOBS\" \\\n+                                 --cores=\"$JOBS\" \\\n+                                 --keep-failed \\\n+                                 --fallback \\\n+                                 --link-profile \\\n+                                 --root=\"$(profiledir_for_host \"${HOST}\" codesigned)\" \\\n                                  ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n                                  ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n                                  -- env HOST=\"$host\" \\\n-                                        MAX_JOBS=\"$MAX_JOBS\" \\\n+                                        DISTNAME=\"$DISTNAME\" \\\n+                                        JOBS=\"$JOBS\" \\\n                                         SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n                                         ${V:+V=1} \\\n                                         ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n                                         DISTSRC=\"$(DISTSRC_BASE=/distsrc-base && distsrc_for_host \"$HOST\")\" \\\n-                                        OUTDIR=/outdir \\\n-                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+                                        OUTDIR=\"$(OUTDIR_BASE=/outdir-base && outdir_for_host \"$HOST\" codesigned)\" \\\n+                                        DIST_ARCHIVE_BASE=/outdir-base/dist-archive \\\n+                                        DETACHED_SIGS_REPO=/detached-sigs \\\n+                                        UNSIGNED_TARBALL=\"$(OUTDIR_BASE=/outdir-base && unsigned_tarball_for_host \"$HOST\")\" \\\n+                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/codesign.sh\"\n     )\n \n done",
        "previous_filename": "contrib/guix/guix-build.sh"
      },
      {
        "sha": "a6e2c4065ecc4c6d154dc768b3af403169898061",
        "filename": "contrib/guix/guix-verify",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-verify",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/guix-verify",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-verify?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,142 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat diff gpg\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> ./contrib/guix/guix-verify\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+##############\n+##  Verify  ##\n+##############\n+\n+OUTSIGDIR_BASE=\"${GUIX_SIGS_REPO}/${VERSION}\"\n+echo \"Looking for signature directories in '${OUTSIGDIR_BASE}'\"\n+echo \"\"\n+\n+# Usage: verify compare_manifest current_manifest\n+verify() {\n+    local compare_manifest=\"$1\"\n+    local current_manifest=\"$2\"\n+    if ! gpg --quiet --batch --verify \"$current_manifest\".asc \"$current_manifest\" 1>&2; then\n+        echo \"ERR: Failed to verify GPG signature in '${current_manifest}'\"\n+        echo \"\"\n+        echo \"Hint: Either the signature is invalid or the public key is missing\"\n+        echo \"\"\n+    elif ! diff --report-identical \"$compare_manifest\" \"$current_manifest\" 1>&2; then\n+        echo \"ERR: The SHA256SUMS attestation in these two directories differ:\"\n+        echo \"    '${compare_manifest}'\"\n+        echo \"    '${current_manifest}'\"\n+        echo \"\"\n+    else\n+        echo \"Verified: '${current_manifest}'\"\n+        echo \"\"\n+    fi\n+}\n+\n+shopt -s nullglob\n+all_noncodesigned=( \"$OUTSIGDIR_BASE\"/*/noncodesigned.SHA256SUMS )\n+shopt -u nullglob\n+\n+echo \"--------------------\"\n+echo \"\"\n+if (( ${#all_noncodesigned[@]} )); then\n+    compare_noncodesigned=\"${all_noncodesigned[0]}\"\n+\n+    for current_manifest in \"${all_noncodesigned[@]}\"; do\n+        verify \"$compare_noncodesigned\" \"$current_manifest\"\n+    done\n+\n+    echo \"DONE: Checking output signatures for noncodesigned.SHA256SUMS\"\n+    echo \"\"\n+else\n+    echo \"WARN: No signature directories with noncodesigned.SHA256SUMS found\"\n+    echo \"\"\n+fi\n+\n+shopt -s nullglob\n+all_all=( \"$OUTSIGDIR_BASE\"/*/all.SHA256SUMS )\n+shopt -u nullglob\n+\n+echo \"--------------------\"\n+echo \"\"\n+if (( ${#all_all[@]} )); then\n+    compare_all=\"${all_all[0]}\"\n+\n+    for current_manifest in \"${all_all[@]}\"; do\n+        verify \"$compare_all\" \"$current_manifest\"\n+    done\n+\n+    # Sanity check: there should be no entries that exist in\n+    # noncodesigned.SHA256SUMS that doesn't exist in all.SHA256SUMS\n+    if [[ \"$(comm -23 <(sort \"$compare_noncodesigned\") <(sort \"$compare_all\") | wc -c)\" -ne 0 ]]; then\n+        echo \"ERR: There are unique lines in noncodesigned.SHA256SUMS which\"\n+        echo \"     do not exist in all.SHA256SUMS, something went very wrong.\"\n+        exit 1\n+    fi\n+\n+    echo \"DONE: Checking output signatures for all.SHA256SUMS\"\n+    echo \"\"\n+else\n+    echo \"WARN: No signature directories with all.SHA256SUMS found\"\n+    echo \"\"\n+fi\n+\n+echo \"====================\"\n+echo \"\"\n+if (( ${#all_noncodesigned[@]} + ${#all_all[@]} == 0 )); then\n+    echo \"ERR: Unable to perform any verifications as no signature directories\"\n+    echo \"     were found\"\n+    echo \"\"\n+    exit 1\n+fi"
      },
      {
        "sha": "6741328473dd5cc73d0e75dc12853ab30208c776",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "modified",
        "additions": 105,
        "deletions": 55,
        "changes": 160,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,6 +3,16 @@ export LC_ALL=C\n set -e -o pipefail\n export TZ=UTC\n \n+# Although Guix _does_ set umask when building its own packages (in our case,\n+# this is all packages in manifest.scm), it does not set it for `guix\n+# environment`. It does make sense for at least `guix environment --container`\n+# to set umask, so if that change gets merged upstream and we bump the\n+# time-machine to a commit which includes the aforementioned change, we can\n+# remove this line.\n+#\n+# This line should be placed before any commands which creates files.\n+umask 0022\n+\n if [ -n \"$V\" ]; then\n     # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n     # read from this file.\n@@ -14,13 +24,18 @@ fi\n # Check that required environment variables are set\n cat << EOF\n Required environment variables as seen inside the container:\n+    DIST_ARCHIVE_BASE: ${DIST_ARCHIVE_BASE:?not set}\n+    DISTNAME: ${DISTNAME:?not set}\n     HOST: ${HOST:?not set}\n     SOURCE_DATE_EPOCH: ${SOURCE_DATE_EPOCH:?not set}\n-    MAX_JOBS: ${MAX_JOBS:?not set}\n+    JOBS: ${JOBS:?not set}\n     DISTSRC: ${DISTSRC:?not set}\n     OUTDIR: ${OUTDIR:?not set}\n EOF\n \n+ACTUAL_OUTDIR=\"${OUTDIR}\"\n+OUTDIR=\"${DISTSRC}/output\"\n+\n #####################\n # Environment Setup #\n #####################\n@@ -42,21 +57,36 @@ store_path() {\n # Set environment variables to point the NATIVE toolchain to the right\n # includes/libs\n NATIVE_GCC=\"$(store_path gcc-toolchain)\"\n-export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64\"\n-export CPATH=\"${NATIVE_GCC}/include\"\n+NATIVE_GCC_STATIC=\"$(store_path gcc-toolchain static)\"\n+\n+unset LIBRARY_PATH\n+unset CPATH\n+unset C_INCLUDE_PATH\n+unset CPLUS_INCLUDE_PATH\n+unset OBJC_INCLUDE_PATH\n+unset OBJCPLUS_INCLUDE_PATH\n+\n+export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64:${NATIVE_GCC_STATIC}/lib:${NATIVE_GCC_STATIC}/lib64\"\n+export C_INCLUDE_PATH=\"${NATIVE_GCC}/include\"\n+export CPLUS_INCLUDE_PATH=\"${NATIVE_GCC}/include/c++:${NATIVE_GCC}/include\"\n+export OBJC_INCLUDE_PATH=\"${NATIVE_GCC}/include\"\n+export OBJCPLUS_INCLUDE_PATH=\"${NATIVE_GCC}/include/c++:${NATIVE_GCC}/include\"\n+\n+prepend_to_search_env_var() {\n+    export \"${1}=${2}${!1:+:}${!1}\"\n+}\n+\n case \"$HOST\" in\n     *darwin*)\n-        # When targeting darwin, some native tools built by depends require\n-        # native packages not incorporated in depends\n-        #\n-        # libcap       required by native_cdrkit/wodim\n-        # zlib, bzip2  required by native_cdrkit/genisoimage\n-        for native_pkg in libcap zlib bzip2; do\n-            native_pkg_store_path=$(store_path \"$native_pkg\")\n-            export LIBRARY_PATH=\"${native_pkg_store_path}/lib:${LIBRARY_PATH}\"\n-            export CPATH=\"${native_pkg_store_path}/include:${CPATH}\"\n-        done\n-        ;;\n+        # When targeting darwin, zlib is required by native_libdmg-hfsplus.\n+        zlib_store_path=$(store_path \"zlib\")\n+        zlib_static_store_path=$(store_path \"zlib\" static)\n+\n+        prepend_to_search_env_var LIBRARY_PATH \"${zlib_static_store_path}/lib:${zlib_store_path}/lib\"\n+        prepend_to_search_env_var C_INCLUDE_PATH \"${zlib_store_path}/include\"\n+        prepend_to_search_env_var CPLUS_INCLUDE_PATH \"${zlib_store_path}/include\"\n+        prepend_to_search_env_var OBJC_INCLUDE_PATH \"${zlib_store_path}/include\"\n+        prepend_to_search_env_var OBJCPLUS_INCLUDE_PATH \"${zlib_store_path}/include\"\n esac\n \n # Set environment variables to point the CROSS toolchain to the right\n@@ -66,7 +96,8 @@ case \"$HOST\" in\n         # Determine output paths to use in CROSS_* environment variables\n         CROSS_GLIBC=\"$(store_path \"mingw-w64-x86_64-winpthreads\")\"\n         CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n-        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB_STORE=\"$(store_path \"gcc-cross-${HOST}\" lib)\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC_LIB_STORE}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n         CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n \n         # The search path ordering is generally:\n@@ -75,7 +106,7 @@ case \"$HOST\" in\n         #    2. kernel-header-related search paths (not applicable to mingw-w64 hosts)\n         export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include\"\n         export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n-        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC_LIB_STORE}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n         ;;\n     *darwin*)\n         # The CROSS toolchain for darwin uses the SDK and ignores environment variables.\n@@ -86,12 +117,13 @@ case \"$HOST\" in\n         CROSS_GLIBC_STATIC=\"$(store_path \"glibc-cross-${HOST}\" static)\"\n         CROSS_KERNEL=\"$(store_path \"linux-libre-headers-cross-${HOST}\")\"\n         CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n-        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB_STORE=\"$(store_path \"gcc-cross-${HOST}\" lib)\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC_LIB_STORE}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n         CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n \n         export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n         export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n-        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC_LIB_STORE}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n         ;;\n     *)\n         exit 1 ;;\n@@ -132,20 +164,20 @@ case \"$HOST\" in\n     *linux*)\n         glibc_dynamic_linker=$(\n             case \"$HOST\" in\n-                i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n-                x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n-                arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n-                aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n-                riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n-                *)                   exit 1 ;;\n+                i686-linux-gnu)        echo /lib/ld-linux.so.2 ;;\n+                x86_64-linux-gnu)      echo /lib64/ld-linux-x86-64.so.2 ;;\n+                arm-linux-gnueabihf)   echo /lib/ld-linux-armhf.so.3 ;;\n+                aarch64-linux-gnu)     echo /lib/ld-linux-aarch64.so.1 ;;\n+                riscv64-linux-gnu)     echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+                powerpc64-linux-gnu)   echo /lib/ld64.so.1;;\n+                powerpc64le-linux-gnu) echo /lib/ld64.so.2;;\n+                *)                     exit 1 ;;\n             esac\n         )\n         ;;\n esac\n \n # Environment variables for determinism\n-export QT_RCC_TEST=1\n-export QT_RCC_SOURCE_DATE_OVERRIDE=1\n export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n export TZ=\"UTC\"\n case \"$HOST\" in\n@@ -164,9 +196,11 @@ esac\n ####################\n \n # Build the depends tree, overriding variables that assume multilib gcc\n-make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n+make -C depends --jobs=\"$JOBS\" HOST=\"$HOST\" \\\n                                    ${V:+V=1} \\\n                                    ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                   ${BASE_CACHE+BASE_CACHE=\"$BASE_CACHE\"} \\\n+                                   ${SDK_PATH+SDK_PATH=\"$SDK_PATH\"} \\\n                                    i686_linux_CC=i686-linux-gnu-gcc \\\n                                    i686_linux_CXX=i686-linux-gnu-g++ \\\n                                    i686_linux_AR=i686-linux-gnu-ar \\\n@@ -187,24 +221,23 @@ make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n # Source Tarball Building #\n ###########################\n \n-# Define DISTNAME variable.\n-# shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n-source contrib/gitian-descriptors/assign_DISTNAME\n-\n-GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+GIT_ARCHIVE=\"${DIST_ARCHIVE_BASE}/${DISTNAME}.tar.gz\"\n \n # Create the source tarball if not already there\n if [ ! -e \"$GIT_ARCHIVE\" ]; then\n     mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+    touch \"${DIST_ARCHIVE_BASE}\"/SKIPATTEST.TAG\n     git archive --prefix=\"${DISTNAME}/\" --output=\"$GIT_ARCHIVE\" HEAD\n fi\n \n+mkdir -p \"$OUTDIR\"\n+\n ###########################\n # Binary Tarball Building #\n ###########################\n \n # CONFIGFLAGS\n-CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests --disable-fuzz-binary\"\n case \"$HOST\" in\n     *linux*) CONFIGFLAGS+=\" --enable-glibc-back-compat\" ;;\n esac\n@@ -226,6 +259,10 @@ case \"$HOST\" in\n     *mingw*)  HOST_LDFLAGS=\"-Wl,--no-insert-timestamp\" ;;\n esac\n \n+case \"$HOST\" in\n+    powerpc64-linux-*|riscv64-linux-*) HOST_LDFLAGS=\"${HOST_LDFLAGS} -Wl,-z,noexecstack\" ;;\n+esac\n+\n # Make $HOST-specific native binaries from depends available in $PATH\n export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n mkdir -p \"$DISTSRC\"\n@@ -252,14 +289,16 @@ mkdir -p \"$DISTSRC\"\n     sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n \n     # Build Bitcoin Core\n-    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n+    make --jobs=\"$JOBS\" ${V:+V=1}\n \n     # Perform basic ELF security checks on a series of executables.\n     make -C src --jobs=1 check-security ${V:+V=1}\n     # Check that executables only contain allowed gcc, glibc and libstdc++\n     # version symbols for Linux distro back-compatibility.\n     make -C src --jobs=1 check-symbols  ${V:+V=1}\n \n+    mkdir -p \"$OUTDIR\"\n+\n     # Make the os-specific installers\n     case \"$HOST\" in\n         *mingw*)\n@@ -291,9 +330,6 @@ mkdir -p \"$DISTSRC\"\n                 osx_volname \\\n                 contrib/macdeploy/detached-sig-{apply,create}.sh \\\n                 \"${BASEPREFIX}/${HOST}\"/native/bin/dmg\n-            for util in codesign_allocate pagestuff; do\n-                cp --no-target-directory {\"${BASEPREFIX}/${HOST}/native/bin/${HOST}-\",\"unsigned-app-${HOST}/\"}\"$util\"\n-            done\n             mv --target-directory=\"unsigned-app-${HOST}\" dist\n             (\n                 cd \"unsigned-app-${HOST}\"\n@@ -329,7 +365,7 @@ mkdir -p \"$DISTSRC\"\n                 {\n                     find \"${DISTNAME}/bin\" -type f -executable -print0\n                     find \"${DISTNAME}/lib\" -type f -print0\n-                } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n+                } | xargs -0 -n1 -P\"$JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n                 ;;\n         esac\n \n@@ -379,21 +415,35 @@ mkdir -p \"$DISTSRC\"\n                     || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-apple-darwin18/osx64}.tar.gz\" && exit 1 )\n                 ;;\n         esac\n-    )\n-)\n+    )  # $DISTSRC/installed\n \n-case \"$HOST\" in\n-    *mingw*)\n-        cp -rf --target-directory=. contrib/windeploy\n-        (\n-            cd ./windeploy\n-            mkdir unsigned\n-            cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n-            find . -print0 \\\n-                | sort --zero-terminated \\\n-                | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-                | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n-                || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n-        )\n-        ;;\n-esac\n+    case \"$HOST\" in\n+        *mingw*)\n+            cp -rf --target-directory=. contrib/windeploy\n+            (\n+                cd ./windeploy\n+                mkdir -p unsigned\n+                cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+                find . -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n+            )\n+            ;;\n+    esac\n+)  # $DISTSRC\n+\n+rm -rf \"$ACTUAL_OUTDIR\"\n+mv --no-target-directory \"$OUTDIR\" \"$ACTUAL_OUTDIR\" \\\n+    || ( rm -rf \"$ACTUAL_OUTDIR\" && exit 1 )\n+\n+(\n+    cd /outdir-base\n+    {\n+        echo \"$GIT_ARCHIVE\"\n+        find \"$ACTUAL_OUTDIR\" -type f\n+    } | xargs realpath --relative-base=\"$PWD\" \\\n+      | xargs sha256sum \\\n+      | sponge \"$ACTUAL_OUTDIR\"/SHA256SUMS.part\n+)"
      },
      {
        "sha": "b1eec686ecf056e52662dd0c9082dc04ec43c4d8",
        "filename": "contrib/guix/libexec/codesign.sh",
        "status": "added",
        "additions": 112,
        "deletions": 0,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/libexec/codesign.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/libexec/codesign.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/codesign.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+export TZ=UTC\n+\n+# Although Guix _does_ set umask when building its own packages (in our case,\n+# this is all packages in manifest.scm), it does not set it for `guix\n+# environment`. It does make sense for at least `guix environment --container`\n+# to set umask, so if that change gets merged upstream and we bump the\n+# time-machine to a commit which includes the aforementioned change, we can\n+# remove this line.\n+#\n+# This line should be placed before any commands which creates files.\n+umask 0022\n+\n+if [ -n \"$V\" ]; then\n+    # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n+    # read from this file.\n+    set -vx\n+    # Set VERBOSE for CMake-based builds\n+    export VERBOSE=\"$V\"\n+fi\n+\n+# Check that required environment variables are set\n+cat << EOF\n+Required environment variables as seen inside the container:\n+    UNSIGNED_TARBALL: ${UNSIGNED_TARBALL:?not set}\n+    DETACHED_SIGS_REPO: ${DETACHED_SIGS_REPO:?not set}\n+    DIST_ARCHIVE_BASE: ${DIST_ARCHIVE_BASE:?not set}\n+    DISTNAME: ${DISTNAME:?not set}\n+    HOST: ${HOST:?not set}\n+    SOURCE_DATE_EPOCH: ${SOURCE_DATE_EPOCH:?not set}\n+    DISTSRC: ${DISTSRC:?not set}\n+    OUTDIR: ${OUTDIR:?not set}\n+EOF\n+\n+ACTUAL_OUTDIR=\"${OUTDIR}\"\n+OUTDIR=\"${DISTSRC}/output\"\n+\n+git_head_version() {\n+    local recent_tag\n+    if recent_tag=\"$(git -C \"$1\" describe --exact-match HEAD 2> /dev/null)\"; then\n+        echo \"${recent_tag#v}\"\n+    else\n+        git -C \"$1\" rev-parse --short=12 HEAD\n+    fi\n+}\n+\n+CODESIGNATURE_GIT_ARCHIVE=\"${DIST_ARCHIVE_BASE}/${DISTNAME}-codesignatures-$(git_head_version \"$DETACHED_SIGS_REPO\").tar.gz\"\n+\n+# Create the codesignature tarball if not already there\n+if [ ! -e \"$CODESIGNATURE_GIT_ARCHIVE\" ]; then\n+    mkdir -p \"$(dirname \"$CODESIGNATURE_GIT_ARCHIVE\")\"\n+    git -C \"$DETACHED_SIGS_REPO\" archive --output=\"$CODESIGNATURE_GIT_ARCHIVE\" HEAD\n+fi\n+\n+mkdir -p \"$OUTDIR\"\n+\n+mkdir -p \"$DISTSRC\"\n+(\n+    cd \"$DISTSRC\"\n+\n+    tar -xf \"$UNSIGNED_TARBALL\"\n+\n+    mkdir -p codesignatures\n+    tar -C codesignatures -xf \"$CODESIGNATURE_GIT_ARCHIVE\"\n+\n+    case \"$HOST\" in\n+        *mingw*)\n+            find \"$PWD\" -name \"*-unsigned.exe\" | while read -r infile; do\n+                infile_base=\"$(basename \"$infile\")\"\n+\n+                # Codesigned *-unsigned.exe and output to OUTDIR\n+                osslsigncode attach-signature \\\n+                                 -in \"$infile\" \\\n+                                 -out \"${OUTDIR}/${infile_base/-unsigned}\" \\\n+                                 -sigin codesignatures/win/\"$infile_base\".pem\n+            done\n+            ;;\n+        *darwin*)\n+            # Apply detached codesignatures to dist/ (in-place)\n+            signapple apply dist/Bitcoin-Qt.app codesignatures/osx/dist\n+\n+            # Make an uncompressed DMG from dist/\n+            xorrisofs -D -l -V \"$(< osx_volname)\" -no-pad -r -dir-mode 0755 \\\n+                      -o uncompressed.dmg \\\n+                      dist \\\n+                      -- -volume_date all_file_dates =\"$SOURCE_DATE_EPOCH\"\n+\n+            # Compress uncompressed.dmg and output to OUTDIR\n+            ./dmg dmg uncompressed.dmg \"${OUTDIR}/${DISTNAME}-osx-signed.dmg\"\n+            ;;\n+        *)\n+            exit 1\n+            ;;\n+    esac\n+)  # $DISTSRC\n+\n+rm -rf \"$ACTUAL_OUTDIR\"\n+mv --no-target-directory \"$OUTDIR\" \"$ACTUAL_OUTDIR\" \\\n+    || ( rm -rf \"$ACTUAL_OUTDIR\" && exit 1 )\n+\n+(\n+    cd /outdir-base\n+    {\n+        echo \"$UNSIGNED_TARBALL\"\n+        echo \"$CODESIGNATURE_GIT_ARCHIVE\"\n+        find \"$ACTUAL_OUTDIR\" -type f\n+    } | xargs realpath --relative-base=\"$PWD\" \\\n+        | xargs sha256sum \\\n+        | sponge \"$ACTUAL_OUTDIR\"/SHA256SUMS.part\n+)"
      },
      {
        "sha": "9705607119fb5ebd180c77c162cf09e77826053f",
        "filename": "contrib/guix/libexec/prelude.bash",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/libexec/prelude.bash",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/libexec/prelude.bash",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/prelude.bash?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,66 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# shellcheck source=../../shell/realpath.bash\n+source contrib/shell/realpath.bash\n+\n+# shellcheck source=../../shell/git-utils.bash\n+source contrib/shell/git-utils.bash\n+\n+################\n+# Required non-builtin commands should be invocable\n+################\n+\n+check_tools() {\n+    for cmd in \"$@\"; do\n+        if ! command -v \"$cmd\" > /dev/null 2>&1; then\n+            echo \"ERR: This script requires that '$cmd' is installed and available in your \\$PATH\"\n+            exit 1\n+        fi\n+    done\n+}\n+\n+check_tools cat env readlink dirname basename git\n+\n+################\n+# We should be at the top directory of the repository\n+################\n+\n+same_dir() {\n+    local resolved1 resolved2\n+    resolved1=\"$(bash_realpath \"${1}\")\"\n+    resolved2=\"$(bash_realpath \"${2}\")\"\n+    [ \"$resolved1\" = \"$resolved2\" ]\n+}\n+\n+if ! same_dir \"${PWD}\" \"$(git_root)\"; then\n+cat << EOF\n+ERR: This script must be invoked from the top level of the git repository\n+\n+Hint: This may look something like:\n+    env FOO=BAR ./contrib/guix/guix-<blah>\n+\n+EOF\n+exit 1\n+fi\n+\n+################\n+# Set common variables\n+################\n+\n+VERSION=\"${VERSION:-$(git_head_version)}\"\n+DISTNAME=\"${DISTNAME:-bitcoin-${VERSION}}\"\n+\n+version_base_prefix=\"${PWD}/guix-build-\"\n+VERSION_BASE=\"${version_base_prefix}${VERSION}\"  # TOP\n+\n+DISTSRC_BASE=\"${DISTSRC_BASE:-${VERSION_BASE}}\"\n+\n+OUTDIR_BASE=\"${OUTDIR_BASE:-${VERSION_BASE}/output}\"\n+\n+var_base_basename=\"var\"\n+VAR_BASE=\"${VAR_BASE:-${VERSION_BASE}/${var_base_basename}}\"\n+\n+profiles_base_basename=\"profiles\"\n+PROFILES_BASE=\"${PROFILES_BASE:-${VAR_BASE}/${profiles_base_basename}}\""
      },
      {
        "sha": "ba168a2a4aab7e920c7bd0327341ea6c374a2894",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 420,
        "deletions": 48,
        "changes": 468,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,12 +3,15 @@\n              (gnu packages autotools)\n              (gnu packages base)\n              (gnu packages bash)\n+             (gnu packages bison)\n+             (gnu packages certs)\n              (gnu packages cdrom)\n              (gnu packages check)\n              (gnu packages cmake)\n              (gnu packages commencement)\n              (gnu packages compression)\n              (gnu packages cross-base)\n+             (gnu packages curl)\n              (gnu packages file)\n              (gnu packages gawk)\n              (gnu packages gcc)\n@@ -19,16 +22,21 @@\n              (gnu packages linux)\n              (gnu packages llvm)\n              (gnu packages mingw)\n+             (gnu packages moreutils)\n              (gnu packages perl)\n              (gnu packages pkg-config)\n              (gnu packages python)\n+             (gnu packages python-web)\n              (gnu packages shells)\n+             (gnu packages tls)\n              (gnu packages version-control)\n              (guix build-system font)\n              (guix build-system gnu)\n+             (guix build-system python)\n              (guix build-system trivial)\n              (guix download)\n              (guix gexp)\n+             (guix git-download)\n              ((guix licenses) #:prefix license:)\n              (guix packages)\n              (guix profiles)\n@@ -49,28 +57,28 @@ we link against libssp.so, and thus will ensure that this works properly.\n Taken from:\n http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n   (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:make-flags flags)\n-       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n+    (inherit xgcc)\n+    (arguments\n+     (substitute-keyword-arguments (package-arguments xgcc)\n+       ((#:make-flags flags)\n+        `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n \n (define (make-gcc-rpath-link xgcc)\n   \"Given a XGCC package, return a modified package that replace each instance of\n -rpath in the default system spec that's inserted by Guix with -rpath-link\"\n   (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:phases phases)\n-       `(modify-phases ,phases\n-          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n-            (lambda _\n-              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n-                                 (find-files \"gcc/config\"\n-                                             \"^gnu-user.*\\\\.h$\"))\n-                ((\"-rpath=\") \"-rpath-link=\"))\n-              #t))))))))\n+    (inherit xgcc)\n+    (arguments\n+     (substitute-keyword-arguments (package-arguments xgcc)\n+       ((#:phases phases)\n+        `(modify-phases ,phases\n+           (add-after 'pre-configure 'replace-rpath-with-rpath-link\n+             (lambda _\n+               (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n+                                  (find-files \"gcc/config\"\n+                                              \"^gnu-user.*\\\\.h$\"))\n+                 ((\"-rpath=\") \"-rpath-link=\"))\n+               #t))))))))\n \n (define (make-cross-toolchain target\n                               base-gcc-for-libc\n@@ -115,26 +123,31 @@ http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n        `((\"binutils\" ,xbinutils)\n          (\"libc\" ,xlibc)\n          (\"libc:static\" ,xlibc \"static\")\n-         (\"gcc\" ,xgcc)))\n+         (\"gcc\" ,xgcc)\n+         (\"gcc-lib\" ,xgcc \"lib\")))\n       (synopsis (string-append \"Complete GCC tool chain for \" target))\n       (description (string-append \"This package provides a complete GCC tool\n chain for \" target \" development.\"))\n       (home-page (package-home-page xgcc))\n       (license (package-license xgcc)))))\n \n+(define base-gcc\n+  (package-with-extra-patches gcc-8\n+    (search-our-patches \"gcc-8-sort-libtool-find-output.patch\")))\n+\n (define* (make-bitcoin-cross-toolchain target\n-                                  #:key\n-                                  (base-gcc-for-libc gcc-5)\n-                                  (base-kernel-headers linux-libre-headers-4.19)\n-                                  (base-libc glibc-2.27)\n-                                  (base-gcc (make-gcc-rpath-link gcc-9)))\n+                                       #:key\n+                                       (base-gcc-for-libc gcc-7)\n+                                       (base-kernel-headers linux-libre-headers-5.4)\n+                                       (base-libc glibc)  ; glibc 2.31\n+                                       (base-gcc (make-gcc-rpath-link base-gcc)))\n   \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n desirable for building Bitcoin Core release binaries.\"\n   (make-cross-toolchain target\n-                   base-gcc-for-libc\n-                   base-kernel-headers\n-                   base-libc\n-                   base-gcc))\n+                        base-gcc-for-libc\n+                        base-kernel-headers\n+                        base-libc\n+                        base-gcc))\n \n (define (make-gcc-with-pthreads gcc)\n   (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n@@ -145,7 +158,7 @@ desirable for building Bitcoin Core release binaries.\"\n          (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n          (pthreads-xgcc (make-gcc-with-pthreads\n                          (cross-gcc target\n-                                    #:xgcc (make-ssp-fixed-gcc gcc-9)\n+                                    #:xgcc (make-ssp-fixed-gcc base-gcc)\n                                     #:xbinutils xbinutils\n                                     #:libc pthreads-xlibc))))\n     ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n@@ -159,7 +172,8 @@ desirable for building Bitcoin Core release binaries.\"\n       (propagated-inputs\n        `((\"binutils\" ,xbinutils)\n          (\"libc\" ,pthreads-xlibc)\n-         (\"gcc\" ,pthreads-xgcc)))\n+         (\"gcc\" ,pthreads-xgcc)\n+         (\"gcc-lib\" ,pthreads-xgcc \"lib\")))\n       (synopsis (string-append \"Complete GCC tool chain for \" target))\n       (description (string-append \"This package provides a complete GCC tool\n chain for \" target \" development.\"))\n@@ -172,22 +186,376 @@ chain for \" target \" development.\"))\n \n (define-public font-tuffy\n   (package\n-   (name \"font-tuffy\")\n-   (version \"20120614\")\n+    (name \"font-tuffy\")\n+    (version \"20120614\")\n+    (source\n+     (origin\n+       (method url-fetch)\n+       (uri (string-append \"http://tulrich.com/fonts/tuffy-\" version \".tar.gz\"))\n+       (file-name (string-append name \"-\" version \".tar.gz\"))\n+       (sha256\n+        (base32\n+         \"02vf72bgrp30vrbfhxjw82s115z27dwfgnmmzfb0n9wfhxxfpyf6\"))))\n+    (build-system font-build-system)\n+    (home-page \"http://tulrich.com/fonts/\")\n+    (synopsis \"The Tuffy Truetype Font Family\")\n+    (description\n+     \"Thatcher Ulrich's first outline font design. He started with the goal of producing a neutral, readable sans-serif text font. There are lots of \\\"expressive\\\" fonts out there, but he wanted to start with something very plain and clean, something he might want to actually use. \")\n+    (license license:public-domain)))\n+\n+(define-public lief\n+  (package\n+   (name \"python-lief\")\n+   (version \"0.11.5\")\n    (source\n     (origin\n-     (method url-fetch)\n-     (uri (string-append \"http://tulrich.com/fonts/tuffy-\" version \".tar.gz\"))\n-     (file-name (string-append name \"-\" version \".tar.gz\"))\n+     (method git-fetch)\n+     (uri (git-reference\n+           (url \"https://github.com/lief-project/LIEF.git\")\n+           (commit version)))\n+     (file-name (git-file-name name version))\n      (sha256\n       (base32\n-       \"02vf72bgrp30vrbfhxjw82s115z27dwfgnmmzfb0n9wfhxxfpyf6\"))))\n-   (build-system font-build-system)\n-   (home-page \"http://tulrich.com/fonts/\")\n-   (synopsis \"The Tuffy Truetype Font Family\")\n-   (description\n-    \"Thatcher Ulrich's first outline font design. He started with the goal of producing a neutral, readable sans-serif text font. There are lots of \\\"expressive\\\" fonts out there, but he wanted to start with something very plain and clean, something he might want to actually use. \")\n-   (license license:public-domain)))\n+       \"0qahjfg1n0x76ps2mbyljvws1l3qhkqvmxqbahps4qgywl2hbdkj\"))))\n+   (build-system python-build-system)\n+   (native-inputs\n+    `((\"cmake\" ,cmake)))\n+   (home-page \"https://github.com/lief-project/LIEF\")\n+   (synopsis \"Library to Instrument Executable Formats\")\n+   (description \"Python library to to provide a cross platform library which can\n+parse, modify and abstract ELF, PE and MachO formats.\")\n+   (license license:asl2.0)))\n+\n+(define osslsigncode\n+  (package\n+    (name \"osslsigncode\")\n+    (version \"2.0\")\n+    (source (origin\n+              (method url-fetch)\n+              (uri (string-append \"https://github.com/mtrojnar/\"\n+                                  name \"/archive/\" version \".tar.gz\"))\n+              (sha256\n+               (base32\n+                \"0byri6xny770wwb2nciq44j5071122l14bvv65axdd70nfjf0q2s\"))))\n+    (build-system gnu-build-system)\n+    (native-inputs\n+     `((\"pkg-config\" ,pkg-config)\n+       (\"autoconf\" ,autoconf)\n+       (\"automake\" ,automake)\n+       (\"libtool\" ,libtool)))\n+    (inputs\n+     `((\"openssl\" ,openssl)))\n+    (arguments\n+     `(#:configure-flags\n+       `(\"--without-gsf\"\n+         \"--without-curl\"\n+         \"--disable-dependency-tracking\")))\n+    (home-page \"https://github.com/mtrojnar/osslsigncode\")\n+    (synopsis \"Authenticode signing and timestamping tool\")\n+    (description \"osslsigncode is a small tool that implements part of the\n+functionality of the Microsoft tool signtool.exe - more exactly the Authenticode\n+signing and timestamping. But osslsigncode is based on OpenSSL and cURL, and\n+thus should be able to compile on most platforms where these exist.\")\n+    (license license:gpl3+))) ; license is with openssl exception\n+\n+(define-public python-asn1crypto\n+  (package\n+    (name \"python-asn1crypto\")\n+    (version \"1.4.0\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/wbond/asn1crypto\")\n+             (commit version)))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"19abibn6jw20mzi1ln4n9jjvpdka8ygm4m439hplyrdfqbvgm01r\"))))\n+    (build-system python-build-system)\n+    (arguments\n+     '(#:phases\n+       (modify-phases %standard-phases\n+         (replace 'check\n+           (lambda _\n+             (invoke \"python\" \"run.py\" \"tests\"))))))\n+    (home-page \"https://github.com/wbond/asn1crypto\")\n+    (synopsis \"ASN.1 parser and serializer in Python\")\n+    (description \"asn1crypto is an ASN.1 parser and serializer with definitions\n+for private keys, public keys, certificates, CRL, OCSP, CMS, PKCS#3, PKCS#7,\n+PKCS#8, PKCS#12, PKCS#5, X.509 and TSP.\")\n+    (license license:expat)))\n+\n+(define-public python-elfesteem\n+  (let ((commit \"87bbd79ab7e361004c98cc8601d4e5f029fd8bd5\"))\n+    (package\n+      (name \"python-elfesteem\")\n+      (version (git-version \"0.1\" \"1\" commit))\n+      (source\n+       (origin\n+         (method git-fetch)\n+         (uri (git-reference\n+               (url \"https://github.com/LRGH/elfesteem\")\n+               (commit commit)))\n+         (file-name (git-file-name name commit))\n+         (sha256\n+          (base32\n+           \"1nyvjisvyxyxnd0023xjf5846xd03lwawp5pfzr8vrky7wwm5maz\"))))\n+      (build-system python-build-system)\n+      ;; There are no tests, but attempting to run python setup.py test leads to\n+      ;; PYTHONPATH problems, just disable the test\n+      (arguments '(#:tests? #f))\n+      (home-page \"https://github.com/LRGH/elfesteem\")\n+      (synopsis \"ELF/PE/Mach-O parsing library\")\n+      (description \"elfesteem parses ELF, PE and Mach-O files.\")\n+      (license license:lgpl2.1))))\n+\n+(define-public python-oscrypto\n+  (package\n+    (name \"python-oscrypto\")\n+    (version \"1.2.1\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/wbond/oscrypto\")\n+             (commit version)))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"1d4d8s4z340qhvb3g5m5v3436y3a71yc26wk4749q64m09kxqc3l\"))\n+       (patches (search-our-patches \"oscrypto-hard-code-openssl.patch\"))))\n+    (build-system python-build-system)\n+    (native-search-paths\n+     (list (search-path-specification\n+            (variable \"SSL_CERT_FILE\")\n+            (file-type 'regular)\n+            (separator #f)                ;single entry\n+            (files '(\"etc/ssl/certs/ca-certificates.crt\")))))\n+\n+    (propagated-inputs\n+     `((\"python-asn1crypto\" ,python-asn1crypto)\n+       (\"openssl\" ,openssl)))\n+    (arguments\n+     `(#:phases\n+       (modify-phases %standard-phases\n+         (add-after 'unpack 'hard-code-path-to-libscrypt\n+           (lambda* (#:key inputs #:allow-other-keys)\n+             (let ((openssl (assoc-ref inputs \"openssl\")))\n+               (substitute* \"oscrypto/__init__.py\"\n+                 ((\"@GUIX_OSCRYPTO_USE_OPENSSL@\")\n+                  (string-append openssl \"/lib/libcrypto.so\" \",\" openssl \"/lib/libssl.so\")))\n+               #t)))\n+         (add-after 'unpack 'disable-broken-tests\n+           (lambda _\n+             ;; This test is broken as there is no keyboard interrupt.\n+             (substitute* \"tests/test_trust_list.py\"\n+               ((\"^(.*)class TrustListTests\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line)))\n+             (substitute* \"tests/test_tls.py\"\n+               ((\"^(.*)class TLSTests\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line)))\n+             #t))\n+         (replace 'check\n+           (lambda _\n+             (invoke \"python\" \"run.py\" \"tests\")\n+             #t)))))\n+    (home-page \"https://github.com/wbond/oscrypto\")\n+    (synopsis \"Compiler-free Python crypto library backed by the OS\")\n+    (description \"oscrypto is a compilation-free, always up-to-date encryption library for Python.\")\n+    (license license:expat)))\n+\n+(define-public python-oscryptotests\n+  (package (inherit python-oscrypto)\n+    (name \"python-oscryptotests\")\n+    (arguments\n+     `(#:tests? #f\n+       #:phases\n+       (modify-phases %standard-phases\n+         (add-after 'unpack 'hard-code-path-to-libscrypt\n+           (lambda* (#:key inputs #:allow-other-keys)\n+             (chdir \"tests\")\n+             #t)))))))\n+\n+(define-public python-certvalidator\n+  (let ((commit \"e5bdb4bfcaa09fa0af355eb8867d00dfeecba08c\"))\n+    (package\n+      (name \"python-certvalidator\")\n+      (version (git-version \"0.1\" \"1\" commit))\n+      (source\n+       (origin\n+         (method git-fetch)\n+         (uri (git-reference\n+               (url \"https://github.com/achow101/certvalidator\")\n+               (commit commit)))\n+         (file-name (git-file-name name commit))\n+         (sha256\n+          (base32\n+           \"18pvxkvpkfkzgvfylv0kx65pmxfcv1hpsg03cip93krfvrrl4c75\"))))\n+      (build-system python-build-system)\n+      (propagated-inputs\n+       `((\"python-asn1crypto\" ,python-asn1crypto)\n+         (\"python-oscrypto\" ,python-oscrypto)\n+         (\"python-oscryptotests\", python-oscryptotests))) ;; certvalidator tests import oscryptotests\n+      (arguments\n+       `(#:phases\n+         (modify-phases %standard-phases\n+           (add-after 'unpack 'disable-broken-tests\n+             (lambda _\n+               (substitute* \"tests/test_certificate_validator.py\"\n+                 ((\"^(.*)class CertificateValidatorTests\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_crl_client.py\"\n+                 ((\"^(.*)def test_fetch_crl\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_ocsp_client.py\"\n+                 ((\"^(.*)def test_fetch_ocsp\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_registry.py\"\n+                 ((\"^(.*)def test_build_paths\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_validate.py\"\n+                 ((\"^(.*)def test_revocation_mode_hard\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               #t))\n+           (replace 'check\n+             (lambda _\n+               (invoke \"python\" \"run.py\" \"tests\")\n+               #t)))))\n+      (home-page \"https://github.com/wbond/certvalidator\")\n+      (synopsis \"Python library for validating X.509 certificates and paths\")\n+      (description \"certvalidator is a Python library for validating X.509\n+certificates or paths. Supports various options, including: validation at a\n+specific moment in time, whitelisting and revocation checks.\")\n+      (license license:expat))))\n+\n+(define-public python-requests-2.25.1\n+  (package (inherit python-requests)\n+    (version \"2.25.1\")\n+    (source (origin\n+              (method url-fetch)\n+              (uri (pypi-uri \"requests\" version))\n+              (sha256\n+               (base32\n+                \"015qflyqsgsz09gnar69s6ga74ivq5kch69s4qxz3904m7a3v5r7\"))))))\n+\n+(define-public python-altgraph\n+  (package\n+    (name \"python-altgraph\")\n+    (version \"0.17\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/ronaldoussoren/altgraph\")\n+             (commit (string-append \"v\" version))))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"09sm4srvvkw458pn48ga9q7ykr4xlz7q8gh1h9w7nxpf001qgpwb\"))))\n+    (build-system python-build-system)\n+    (home-page \"https://github.com/ronaldoussoren/altgraph\")\n+    (synopsis \"Python graph (network) package\")\n+    (description \"altgraph is a fork of graphlib: a graph (network) package for\n+constructing graphs, BFS and DFS traversals, topological sort, shortest paths,\n+etc. with graphviz output.\")\n+    (license license:expat)))\n+\n+\n+(define-public python-macholib\n+  (package\n+    (name \"python-macholib\")\n+    (version \"1.14\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/ronaldoussoren/macholib\")\n+             (commit (string-append \"v\" version))))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"0aislnnfsza9wl4f0vp45ivzlc0pzhp9d4r08700slrypn5flg42\"))))\n+    (build-system python-build-system)\n+    (propagated-inputs\n+     `((\"python-altgraph\" ,python-altgraph)))\n+    (arguments\n+     '(#:phases\n+       (modify-phases %standard-phases\n+         (add-after 'unpack 'disable-broken-tests\n+           (lambda _\n+             ;; This test is broken as there is no keyboard interrupt.\n+             (substitute* \"macholib_tests/test_command_line.py\"\n+               ((\"^(.*)class TestCmdLine\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line)))\n+             (substitute* \"macholib_tests/test_dyld.py\"\n+               ((\"^(.*)def test_\\\\S+_find\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line))\n+               ((\"^(.*)def testBasic\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line))\n+               )\n+             #t)))))\n+    (home-page \"https://github.com/ronaldoussoren/macholib\")\n+    (synopsis \"Python library for analyzing and editing Mach-O headers\")\n+    (description \"macholib is a Macho-O header analyzer and editor. It's\n+typically used as a dependency analysis tool, and also to rewrite dylib\n+references in Mach-O headers to be @executable_path relative. Though this tool\n+targets a platform specific file format, it is pure python code that is platform\n+and endian independent.\")\n+    (license license:expat)))\n+\n+(define-public python-signapple\n+  (let ((commit \"b084cbbf44d5330448ffce0c7d118f75781b64bd\"))\n+    (package\n+      (name \"python-signapple\")\n+      (version (git-version \"0.1\" \"1\" commit))\n+      (source\n+       (origin\n+         (method git-fetch)\n+         (uri (git-reference\n+               (url \"https://github.com/achow101/signapple\")\n+               (commit commit)))\n+         (file-name (git-file-name name commit))\n+         (sha256\n+          (base32\n+           \"0k7inccl2mzac3wq4asbr0kl8s4cghm8982z54kfascqg45shv01\"))))\n+      (build-system python-build-system)\n+      (propagated-inputs\n+       `((\"python-asn1crypto\" ,python-asn1crypto)\n+         (\"python-oscrypto\" ,python-oscrypto)\n+         (\"python-certvalidator\" ,python-certvalidator)\n+         (\"python-elfesteem\" ,python-elfesteem)\n+         (\"python-requests\" ,python-requests-2.25.1)\n+         (\"python-macholib\" ,python-macholib)\n+         (\"libcrypto\" ,openssl)))\n+      ;; There are no tests, but attempting to run python setup.py test leads to\n+      ;; problems, just disable the test\n+      (arguments '(#:tests? #f))\n+      (home-page \"https://github.com/achow101/signapple\")\n+      (synopsis \"Mach-O binary signature tool\")\n+      (description \"signapple is a Python tool for creating, verifying, and\n+inspecting signatures in Mach-O binaries.\")\n+      (license license:expat))))\n \n (packages->manifest\n  (append\n@@ -205,36 +573,40 @@ chain for \" target \" development.\"))\n         patch\n         gawk\n         sed\n+        moreutils\n         ;; Compression and archiving\n         tar\n         bzip2\n         gzip\n         xz\n         zlib\n+        (list zlib \"static\")\n         ;; Build tools\n         gnu-make\n         libtool\n         autoconf\n         automake\n         pkg-config\n+        bison\n         ;; Scripting\n         perl\n-        python-3.7\n+        python-3\n         ;; Git\n         git\n+        ;; Tests\n+        lief\n         ;; Native gcc 7 toolchain\n-        gcc-toolchain-7)\n+        gcc-toolchain-7\n+        (list gcc-toolchain-7 \"static\"))\n   (let ((target (getenv \"HOST\")))\n     (cond ((string-suffix? \"-mingw32\" target)\n            ;; Windows\n            (list zip\n                  (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\")\n-                 (make-nsis-with-sde-support nsis-x86_64)))\n-          ((string-contains target \"riscv64-linux-\")\n-           (list (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n-                                               #:base-gcc-for-libc gcc-7)))\n+                 (make-nsis-with-sde-support nsis-x86_64)\n+                 osslsigncode))\n           ((string-contains target \"-linux-\")\n            (list (make-bitcoin-cross-toolchain target)))\n           ((string-contains target \"darwin\")\n-           (list clang-8 libcap binutils imagemagick libtiff librsvg font-tuffy cmake-3.15.5 xorriso))\n+           (list clang-toolchain-10 binutils imagemagick libtiff librsvg font-tuffy cmake xorriso python-signapple))\n           (else '())))))"
      },
      {
        "sha": "1dfe3ba132b679caf268e5d5022341ad92c6dc67",
        "filename": "contrib/guix/patches/gcc-8-sort-libtool-find-output.patch",
        "status": "added",
        "additions": 392,
        "deletions": 0,
        "changes": 392,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/patches/gcc-8-sort-libtool-find-output.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/patches/gcc-8-sort-libtool-find-output.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/patches/gcc-8-sort-libtool-find-output.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,392 @@\n+diff --git a/gcc/configure b/gcc/configure\n+index 97ba7d7d69c..e37a96f0c0c 100755\n+--- a/gcc/configure\n++++ b/gcc/configure\n+@@ -19720,20 +19720,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libcc1/configure b/libcc1/configure\n+index f53a121611c..5740ca90cab 100755\n+--- a/libcc1/configure\n++++ b/libcc1/configure\n+@@ -12221,20 +12221,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libffi/configure b/libffi/configure\n+index 790a291011f..54b1ac18306 100755\n+--- a/libffi/configure\n++++ b/libffi/configure\n+@@ -12661,20 +12661,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libgo/config/libtool.m4 b/libgo/config/libtool.m4\n+index f7005947454..8a84417b828 100644\n+--- a/libgo/config/libtool.m4\n++++ b/libgo/config/libtool.m4\n+@@ -6010,20 +6010,20 @@ if test \"$_lt_caught_CXX_error\" != yes; then\n+ \t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libgo/config/ltmain.sh b/libgo/config/ltmain.sh\n+index ce66b44906a..0f81c401407 100644\n+--- a/libgo/config/ltmain.sh\n++++ b/libgo/config/ltmain.sh\n+@@ -2917,7 +2917,7 @@ func_extract_archives ()\n+ \t    darwin_file=\n+ \t    darwin_files=\n+ \t    for darwin_file in $darwin_filelist; do\n+-\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n++\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n+ \t      $LIPO -create -output \"$darwin_file\" $darwin_files\n+ \t    done # $darwin_filelist\n+ \t    $RM -rf unfat-$$\n+@@ -2932,7 +2932,7 @@ func_extract_archives ()\n+         func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n+ \t;;\n+       esac\n+-      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n++      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n+     done\n+ \n+     func_extract_archives_result=\"$my_oldobjs\"\n+diff --git a/libhsail-rt/configure b/libhsail-rt/configure\n+index a4fcc10c1f9..8e671229fcd 100755\n+--- a/libhsail-rt/configure\n++++ b/libhsail-rt/configure\n+@@ -12244,20 +12244,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libitm/configure b/libitm/configure\n+index dbf386db434..29d4f10611f 100644\n+--- a/libitm/configure\n++++ b/libitm/configure\n+@@ -13067,20 +13067,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/liboffloadmic/configure b/liboffloadmic/configure\n+index f873716991b..7aa9186b10e 100644\n+--- a/liboffloadmic/configure\n++++ b/liboffloadmic/configure\n+@@ -12379,20 +12379,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/liboffloadmic/plugin/configure b/liboffloadmic/plugin/configure\n+index c031eb3e7fa..67fc7368f21 100644\n+--- a/liboffloadmic/plugin/configure\n++++ b/liboffloadmic/plugin/configure\n+@@ -12086,20 +12086,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libsanitizer/configure b/libsanitizer/configure\n+index 4695bc7d4f7..cb7d25c07e6 100755\n+--- a/libsanitizer/configure\n++++ b/libsanitizer/configure\n+@@ -13308,20 +13308,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure\n+index 61457e940ec..21ef1f61e41 100755\n+--- a/libstdc++-v3/configure\n++++ b/libstdc++-v3/configure\n+@@ -13087,20 +13087,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libtool.m4 b/libtool.m4\n+index 24d13f34409..940faaa161d 100644\n+--- a/libtool.m4\n++++ b/libtool.m4\n+@@ -6005,20 +6005,20 @@ if test \"$_lt_caught_CXX_error\" != yes; then\n+ \t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libvtv/configure b/libvtv/configure\n+index a197f750453..31ab3a0637b 100755\n+--- a/libvtv/configure\n++++ b/libvtv/configure\n+@@ -13339,20 +13339,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/ltmain.sh b/ltmain.sh\n+index 9503ec85d70..79f9ba89af5 100644\n+--- a/ltmain.sh\n++++ b/ltmain.sh\n+@@ -2917,7 +2917,7 @@ func_extract_archives ()\n+ \t    darwin_file=\n+ \t    darwin_files=\n+ \t    for darwin_file in $darwin_filelist; do\n+-\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n++\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n+ \t      $LIPO -create -output \"$darwin_file\" $darwin_files\n+ \t    done # $darwin_filelist\n+ \t    $RM -rf unfat-$$\n+@@ -2932,7 +2932,7 @@ func_extract_archives ()\n+         func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n+ \t;;\n+       esac\n+-      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n++      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n+     done\n+ \n+     func_extract_archives_result=\"$my_oldobjs\""
      },
      {
        "sha": "32027f2d09af17199011cd04a6db62e0a92cdcfc",
        "filename": "contrib/guix/patches/oscrypto-hard-code-openssl.patch",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/patches/oscrypto-hard-code-openssl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/guix/patches/oscrypto-hard-code-openssl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/patches/oscrypto-hard-code-openssl.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,13 @@\n+diff --git a/oscrypto/__init__.py b/oscrypto/__init__.py\n+index eb27313..371ab24 100644\n+--- a/oscrypto/__init__.py\n++++ b/oscrypto/__init__.py\n+@@ -302,3 +302,8 @@ def load_order():\n+         'oscrypto._win.tls',\n+         'oscrypto.tls',\n+     ]\n++\n++\n++paths = '@GUIX_OSCRYPTO_USE_OPENSSL@'.split(',')\n++assert len(paths) == 2, 'Value for OSCRYPTO_USE_OPENSSL env var must be two paths separated by a comma'\n++use_openssl(*paths)"
      },
      {
        "sha": "013a1a607027cd715043b7f13fe5580e044adb18",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -60,16 +60,17 @@ start_pre() {\n \t\"${BITCOIND_PIDDIR}\"\n \n \tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-o \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n \t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n+\t\"${BITCOIND_CONFIGFILE}\"\n \n \tcheckconfig || return 1\n }\n \n checkconfig()\n {\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\tif grep -qs '^rpcuser=' \"${BITCOIND_CONFIGFILE}\" && \\\n+\t\t! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n \t\teerror \"\"\n \t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n \t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\""
      },
      {
        "sha": "93de353bb4eb0dac87ca6c83106fb64e71ab3df6",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -18,7 +18,7 @@ After=network-online.target\n Wants=network-online.target\n \n [Service]\n-ExecStart=/usr/bin/bitcoind -daemon \\\n+ExecStart=/usr/bin/bitcoind -daemonwait \\\n                             -pid=/run/bitcoind/bitcoind.pid \\\n                             -conf=/etc/bitcoin/bitcoin.conf \\\n                             -datadir=/var/lib/bitcoind\n@@ -33,6 +33,7 @@ ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n Type=forking\n PIDFile=/run/bitcoind/bitcoind.pid\n Restart=on-failure\n+TimeoutStartSec=infinity\n TimeoutStopSec=600\n \n # Directory creation and permissions"
      },
      {
        "sha": "21f6ba2eb3b721a9a7f28276c9c9ae76ed0fdbc7",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -13,9 +13,9 @@ When complete, it will have produced `Bitcoin-Core.dmg`.\n ### Step 1: Obtaining `Xcode.app`\n \n Our current macOS SDK\n-(`Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`) can be\n+(`Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz`) can be\n extracted from\n-[Xcode_11.3.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_11.3.1/Xcode_11.3.1.xip).\n+[Xcode_12.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_12.1/Xcode_12.1.xip).\n An Apple ID is needed to download this.\n \n After Xcode version 7.x, Apple started shipping the `Xcode.app` in a `.xip`\n@@ -27,25 +27,25 @@ approach (tested on Debian Buster) is outlined below:\n apt install cpio\n git clone https://github.com/bitcoin-core/apple-sdk-tools.git\n \n-# Unpack Xcode_11.3.1.xip and place the resulting Xcode.app in your current\n+# Unpack Xcode_12.1.xip and place the resulting Xcode.app in your current\n # working directory\n-python3 apple-sdk-tools/extract_xcode.py -f Xcode_11.3.1.xip | cpio -d -i\n+python3 apple-sdk-tools/extract_xcode.py -f Xcode_12.1.xip | cpio -d -i\n ```\n \n On macOS the process is more straightforward:\n \n ```bash\n-xip -x Xcode_11.3.1.xip\n+xip -x Xcode_12.1.xip\n ```\n \n-### Step 2: Generating `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz` from `Xcode.app`\n+### Step 2: Generating `Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz` from `Xcode.app`\n \n-To generate `Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz`, run\n+To generate `Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz`, run\n the script [`gen-sdk`](./gen-sdk) with the path to `Xcode.app` (extracted in the\n previous stage) as the first argument.\n \n ```bash\n-# Generate a Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz from\n+# Generate a Xcode-12.1-12A7403-extracted-SDK-with-libcxx-headers.tar.gz from\n # the supplied Xcode.app\n ./contrib/macdeploy/gen-sdk '/path/to/Xcode.app'\n ```\n@@ -56,7 +56,7 @@ Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n \n Apple uses `clang` extensively for development and has upstreamed the necessary\n functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n-`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n+`-target`, `-mmacosx-version-min`, and `-isysroot`, which are all necessary when\n building for macOS.\n \n Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the"
      },
      {
        "sha": "1cde19efd1a49bd1aae5ae819632821ff0eb0854",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -16,7 +16,7 @@ LOCALNET_V4=\"192.168.0.0/16\"\n #defines the IPv6 address space for which you wish to disable rate limiting\n LOCALNET_V6=\"fe80::/10\"\n \n-#delete existing rules\n+#delete existing rules ('Error: Cannot delete qdisc with handle of zero.' means there weren't any.)\n tc qdisc del dev ${IF} root\n \n #add root class"
      },
      {
        "sha": "dbecba7d1db77154a2225306ca60cf2244a7bd50",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 75,
        "deletions": 42,
        "changes": 117,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2017 Wladimir J. van der Laan\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -13,44 +13,54 @@\n \n These files must consist of lines in the format\n \n-    <ip>\n     <ip>:<port>\n-    [<ipv6>]\n     [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n+    <onion>.onion:<port>\n+    <i2p>.b32.i2p:<port>\n \n The output will be two data structures with the peers in binary format:\n \n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n+   static const uint8_t chainparams_seed_{main,test}[]={\n    ...\n    }\n \n These should be pasted into `src/chainparamsseeds.h`.\n '''\n \n from base64 import b32decode\n-from binascii import a2b_hex\n+from enum import Enum\n+import struct\n import sys\n import os\n import re\n \n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n+class BIP155Network(Enum):\n+    IPV4 = 1\n+    IPV6 = 2\n+    TORV2 = 3  # no longer supported\n+    TORV3 = 4\n+    I2P = 5\n+    CJDNS = 6\n+\n+def name_to_bip155(addr):\n+    '''Convert address string to BIP155 (networkID, addr) tuple.'''\n+    if addr.endswith('.onion'):\n         vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n+        if len(vchAddr) == 35:\n+            assert vchAddr[34] == 3\n+            return (BIP155Network.TORV3, vchAddr[:32])\n+        elif len(vchAddr) == 10:\n+            return (BIP155Network.TORV2, vchAddr)\n+        else:\n             raise ValueError('Invalid onion %s' % vchAddr)\n-        return pchOnionCat + vchAddr\n+    elif addr.endswith('.b32.i2p'):\n+        vchAddr = b32decode(addr[0:-8] + '====', True)\n+        if len(vchAddr) == 32:\n+            return (BIP155Network.I2P, vchAddr)\n+        else:\n+            raise ValueError(f'Invalid I2P {vchAddr}')\n     elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n+        return (BIP155Network.IPV4, bytes((int(x) for x in addr.split('.'))))\n     elif ':' in addr: # IPv6\n         sub = [[], []] # prefix, suffix\n         x = 0\n@@ -67,13 +77,12 @@ def name_to_ipv6(addr):\n                 sub[x].append(val & 0xff)\n         nullbytes = 16 - len(sub[0]) - len(sub[1])\n         assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n+        return (BIP155Network.IPV6, bytes(sub[0] + ([0] * nullbytes) + sub[1]))\n     else:\n         raise ValueError('Could not parse address %s' % addr)\n \n-def parse_spec(s, defaultport):\n+def parse_spec(s):\n+    '''Convert endpoint string to BIP155 (networkID, addr, port) tuple.'''\n     match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n     if match: # ipv6\n         host = match.group(1)\n@@ -85,32 +94,57 @@ def parse_spec(s, defaultport):\n         (host,_,port) = s.partition(':')\n \n     if not port:\n-        port = defaultport\n+        port = 0\n     else:\n         port = int(port)\n \n-    host = name_to_ipv6(host)\n-\n-    return (host,port)\n+    host = name_to_bip155(host)\n \n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n+    if host[0] == BIP155Network.TORV2:\n+        return None  # TORV2 is no longer supported, so we ignore it\n+    else:\n+        return host + (port, )\n+\n+def ser_compact_size(l):\n+    r = b\"\"\n+    if l < 253:\n+        r = struct.pack(\"B\", l)\n+    elif l < 0x10000:\n+        r = struct.pack(\"<BH\", 253, l)\n+    elif l < 0x100000000:\n+        r = struct.pack(\"<BI\", 254, l)\n+    else:\n+        r = struct.pack(\"<BQ\", 255, l)\n+    return r\n+\n+def bip155_serialize(spec):\n+    '''\n+    Serialize (networkID, addr, port) tuple to BIP155 binary format.\n+    '''\n+    r = b\"\"\n+    r += struct.pack('B', spec[0].value)\n+    r += ser_compact_size(len(spec[1]))\n+    r += spec[1]\n+    r += struct.pack('>H', spec[2])\n+    return r\n+\n+def process_nodes(g, f, structname):\n+    g.write('static const uint8_t %s[] = {\\n' % structname)\n     for line in f:\n         comment = line.find('#')\n         if comment != -1:\n             line = line[0:comment]\n         line = line.strip()\n         if not line:\n             continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n \n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n+        spec = parse_spec(line)\n+        if spec is None:  # ignore this entry (e.g. no longer supported addresses like TORV2)\n+            continue\n+        blob = bip155_serialize(spec)\n+        hoststr = ','.join(('0x%02x' % b) for b in blob)\n+        g.write(f'    {hoststr},\\n')\n+    g.write('};\\n')\n \n def main():\n     if len(sys.argv)<2:\n@@ -124,14 +158,13 @@ def main():\n     g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n+    g.write(' * Each line contains a BIP155 serialized (networkID, addr, port) tuple.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n+        process_nodes(g, f, 'chainparams_seed_main')\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n+        process_nodes(g, f, 'chainparams_seed_test')\n     g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n \n if __name__ == '__main__':"
      },
      {
        "sha": "a62150a930e84829be6ab3cd549b67a316b69a3b",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 36,
        "deletions": 512,
        "changes": 548,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -650,515 +650,39 @@\n [2a0f:df00:0:254::46]:8333\n [2c0f:f598:5:1:1001::1]:8333\n [2c0f:fce8:0:400:b7c::1]:8333\n-226eupdnaouu4h2v.onion:8333\n-22h7b6f3caabqqsu.onion:8333\n-23wdfqkzttmenvki.onion:8333\n-23yi3frxymtwdgre.onion:8333\n-2ajon3moyf4i2hbb.onion:8333\n-2bfmlpk55hffpl6e.onion:8333\n-2ckmbf6sglwydeth.onion:8333\n-2hkusi5gcaautwqf.onion:8333\n-2ivhmlbxbgnkcykl.onion:8333\n-2mmxouhv6nebowkq.onion:8333\n-2qsnv6exnuuiar7z.onion:8333\n-2qudbhlnvqpli3sz.onion:8333\n-2ujxdfovfyjpmdto.onion:8333\n-2xdgeufrek3eumkw.onion:8333\n-2xdzsruhsej4tsiw.onion:8333\n-34ran2woq4easmss.onion:8333\n-36q7khhej2lxd3wf.onion:8333\n-373wjdspuo52utzq.onion:8333\n-376klet5xqbrg2jv.onion:8333\n-37kwd7fxop766l5k.onion:8333\n-3e5t7hq4alt5tovx.onion:8333\n-3gbxhebfhouuwgc3.onion:8333\n-3hgbjze2nbwyuewf.onion:8333\n-3iuuvrd2waha2cxo.onion:8333\n-3jtxujdaiwh6iltu.onion:8333\n-3l5eq2du7mvscj4a.onion:8333\n-3nofngnqlqeehn7o.onion:8333\n-3r44ddzjitznyahw.onion:8333\n-3vtbuwmton7vq5qz.onion:8333\n-46ohzttz4peki43g.onion:8333\n-47fl3ivl4v56jstr.onion:8333\n-47i6qrl2ijqcwlg6.onion:8333\n-47uupgzcnrwahoto.onion:8333\n-4c5cki37evofds6d.onion:8333\n-4eq36jrx7xuytfpc.onion:8333\n-4ewkdxvcg57adrni.onion:8333\n-4flvgibnm2nld3na.onion:8333\n-4iaontym47imawe4.onion:8333\n-4jxz37oou5ag763c.onion:8333\n-4mnkvj6ha73eqnbk.onion:8333\n-4nnuyxm5k5tlyjq3.onion:8333\n-4nz2yg4cnote3ej7.onion:8333\n-4pozwh6564ygzddk.onion:8333\n-4qgfb56rvpbmesx7.onion:8333\n-4rsax23taqzwmimj.onion:8333\n-4u5j5ay6rasowt4m.onion:8333\n-4vorvtoyegh4zbvr.onion:8333\n-52s4j5pldwlpzhtw.onion:8333\n-5abpiiqfvekoejro.onion:8333\n-5aydzxx6jyoz3nez.onion:8333\n-5cxzdsrtok5dgo4a.onion:8333\n-5eduikpudie3jyrf.onion:8333\n-5epeafkmya4fv5d5.onion:8333\n-5fyxlztic3t6notz.onion:8333\n-5hd6eyew5ybnq6gb.onion:8333\n-5jyfzhwksb6urrp2.onion:8333\n-5nooqgct567ig57v.onion:8333\n-5nsfm4nqqzzprjrp.onion:8333\n-5oqstxspzhlgjef6.onion:8333\n-5pzzmd4tfonrqzb2.onion:8333\n-5sckmx4yucbnp4io.onion:8333\n-5ue7worzbn6hon3e.onion:8333\n-5wxhx2tozpovf6z3.onion:8333\n-5xk3yun36e32e34i.onion:8333\n-5zght2g7vcsapi65.onion:8333\n-62dcdpvdolfzkdzl.onion:8333\n-63bko2mhixnn2b7d.onion:8333\n-67hjvfv6wictalm5.onion:8333\n-6g6ko4klkf5atldi.onion:8333\n-6k5zreexw4cadxi5.onion:8333\n-6kf5ayhlpenywgas.onion:8333\n-6maigxjvcet4pite.onion:8333\n-6ressv4dvplb5ihh.onion:8333\n-6rjex6gyuaui3c5e.onion:8333\n-6skgnf43pphdvjua.onion:8333\n-6stxaoduwisg5sqh.onion:8333\n-6xqy4ts6bo6u5dgm.onion:8333\n-7avnl3dqpgu23jva.onion:8333\n-7ff4wk266no23txn.onion:8333\n-7hipbuzfdcyzqkkg.onion:8333\n-7sjmlzrthjlpfydk.onion:8333\n-7tut3zt2akwrmw6x.onion:8333\n-7uhsjzj6nx3dfnxt.onion:8333\n-7wm4wso3wvatxnbt.onion:8333\n-7ykmzuybwd2ptzg4.onion:8333\n-a27bvhina4y23jxo.onion:8333\n-a53vtdm7uiet5vdl.onion:8333\n-a56572xjuofnt2dp.onion:8333\n-abp25knifdsnc2rv.onion:8333\n-aefx7ubzpal7clak.onion:8333\n-ai5r2diozoe7rrdz.onion:8333\n-aipupphit3enggpj.onion:8333\n-algpjjygd3gtnmpp.onion:8333\n-alihua7rhyc452hr.onion:8333\n-am3gyyfynxzwyxhx.onion:8333\n-ankozzfhl2r3uc6u.onion:8333\n-at3twjlbtc2lqnq5.onion:8333\n-avqobl72pmc64dyi.onion:8333\n-awmdz2fs3b5h5ut5.onion:8333\n-ayywpiy77butdjrj.onion:8333\n-b2i3pj7c24cvprs7.onion:8333\n-b4ilebyxcu6nttio.onion:8333\n-b4vvkbqipcmkwp4v.onion:8333\n-bddfqxps5ibd3ftw.onion:8333\n-be5bgcpo4ooux5qy.onion:8333\n-bgla4m6zetvtv7ls.onion:8333\n-bh32gzw3nyckzqut.onion:8333\n-bho4kodpehn7xr3x.onion:8333\n-bitcoin4rlfa4wqx.onion:8333\n-biw7s6jf6r2mf3cu.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-blcktrgve5vetjsk.onion:8333\n-blwbp7gfdffdsx4g.onion:8333\n-bnxn6qqc55gvn5op.onion:8333\n-bp7o22lvcjawelvv.onion:8333\n-bqqyqucgj4tchn64.onion:8333\n-bvdzmutcqf7gzzn5.onion:8333\n-c36zmegjkinftmtf.onion:8333\n-c4fn62gnltlgrptv.onion:8333\n-caael5yedviooqzk.onion:8333\n-caq54ablfbrnumdd.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-chri6itgjaagof4t.onion:8333\n-cncwik3tnd2ejm5z.onion:8333\n-cuyjqoziemcmwaxl.onion:8333\n-cx7qa2gpqyp7pld5.onion:8333\n-czp7wgaus4gvio72.onion:8333\n-d2fn54rfyjdangi4.onion:8333\n-d2sk45u6ca64yeqh.onion:8333\n-d3aowmngvktsziae.onion:8333\n-d5iu4aiz3y2kgcgj.onion:8333\n-d6zbw2sxnxgj5sv3.onion:8333\n-db5rd5e46t7mgini.onion:8333\n-dci2gulorl44yj55.onion:8333\n-ddpth2mwt3rsvoog.onion:8333\n-dfrwza7fcecknnms.onion:8333\n-djwhjfj4rh3oz3yj.onion:8333\n-dkk5mmpe5jtjodk5.onion:8333\n-doj3zgmsbzurmqgp.onion:8333\n-dpce4f3rcqddzbx5.onion:8333\n-drwo3vnxch5ozfbo.onion:8333\n-duikkidxip3lyexn.onion:8333\n-duqdliptc22i6hf5.onion:8333\n-duyp4coh5d7nh3ud.onion:8333\n-duz5two3z7c55lxj.onion:8333\n-dvu6dlar6ezc6xen.onion:8333\n-dy6zqs46ycleayyp.onion:8333\n-dz2ydmj3yqrcm4r7.onion:8333\n-e2b2a5suvdawzxud.onion:8333\n-e33h57j2ewkkqsn5.onion:8333\n-e5kjiay7pzj5qpzv.onion:8333\n-e7iko42d2wzcmvy4.onion:8333\n-ea6boh4kotq56ws5.onion:8333\n-efdx6gc4s5ezyqeg.onion:8333\n-efrpuuic6ukeyqcs.onion:8333\n-egruc3bi3itru6gq.onion:8333\n-erc6tjs2ucyadl23.onion:8333\n-eue2n5sk5tktg5bv.onion:8333\n-ezkr7stq4w7ohjrt.onion:8333\n-f3nyyjba6kpxznhk.onion:8333\n-faq73vj4pcs73thu.onion:8333\n-fdvtlj3pscbxuh75.onion:8333\n-fgdpxov4nzxvhcpv.onion:8333\n-fisqq6vzk3m6t225.onion:8333\n-fkgp3qwegacrd2bj.onion:8333\n-fo3tdfwx27takqq5.onion:8333\n-fqkxtchwypispkpv.onion:8333\n-fqunuhlwvd7rq6d5.onion:8333\n-frwt5mscpyhiuwpe.onion:8333\n-fta4gfjiuv6f2le2.onion:8333\n-fuoy2ipuqrqwe5cf.onion:8333\n-fz6nsij6jiyuwlsc.onion:8333\n-g3vlnaaaog5sgui5.onion:8333\n-g44i6jwsutkwmspz.onion:8333\n-g55t65d5ckjixcnw.onion:8333\n-gajd6eyrl2qwkfmg.onion:8333\n-gblue3hr53p4grx7.onion:8333\n-gbpro5tzduiuff4v.onion:8333\n-gc4l3tql32qhfgmi.onion:8333\n-gcnlorvtpycuajc6.onion:8333\n-gdsib2nk2eeoidgc.onion:8333\n-ge5gm7c6w7yahpz7.onion:8333\n-gegcteeep4cwftl5.onion:8333\n-gfoyraudgv5qjdku.onion:8333\n-ggpbuypmxgi26lc6.onion:8333\n-ghqivye7cfckisnt.onion:8333\n-girakxomne5fby64.onion:8333\n-glz5gfk33tuug5ne.onion:8333\n-gplatxoyg5nxl5rj.onion:8333\n-gripl5xjwy2dcr6c.onion:8333\n-gthhzlmqci22nxru.onion:8333\n-gto2d64swosfmk6c.onion:8333\n-guaciney52mgcbp2.onion:8333\n-gwktgrmtwk6nv5sc.onion:8333\n-gwoxnokdcwc7hy4p.onion:8333\n-h333f4qnwe7mrymn.onion:8333\n-h6a32n4blbwwyn4d.onion:8333\n-hafwtrbooszoembm.onion:8333\n-hbwhgsb3eeinnr6t.onion:8333\n-hcv6foxh5mk7fhb5.onion:8333\n-hd6hktcl6wamzlzm.onion:8333\n-hda6msa4v4rt77gx.onion:8333\n-hdgnxkuqsd6wjwwx.onion:8333\n-hgh3azn3eesddvcg.onion:8333\n-hhyxu6bwkjefejoz.onion:8333\n-hizn6rmofsg3upmn.onion:8333\n-hjqxxsy2osemfvev.onion:8333\n-hkbp7mbgw6klls4s.onion:8333\n-hlojuwiwbkoj4kdz.onion:8333\n-hlzxsjr7ob3qzzqq.onion:8333\n-hniuzplezebyhv7a.onion:8333\n-hondewkj4s4rdcwf.onion:8333\n-hql5nv6vhceid3bn.onion:8333\n-hspjo7mqrre5gyxr.onion:8333\n-hu64s2mdr3x7yxka.onion:8333\n-hvwvq2swkqw3qvyo.onion:8333\n-hwo2biyndrrvpl6f.onion:8333\n-hzxj3dth3y2xt45o.onion:8333\n-i3ufxuw3t7cxfdpq.onion:8333\n-ia3n3q5u45gvpx7a.onion:8333\n-icfgs3fctckd4yeo.onion:8333\n-icpz6thqvdjcwlvb.onion:8333\n-if32zo5u4mhdunfd.onion:8333\n-ig4lguql6vxkbmmr.onion:8333\n-ihhcr7fhczqdac4y.onion:8333\n-ijm2tyxob7vkvazz.onion:8333\n-ip3puuqghumfz5ww.onion:8333\n-iq3ket72f3y2frpg.onion:8333\n-iqagt5co4dt7h6hf.onion:8333\n-iugw42ih6hprqr26.onion:8333\n-ivf774v4t7k63i6d.onion:8333\n-ivfacdf7cig2z2y2.onion:8333\n-ivsxdwku5og2zj4l.onion:8333\n-ixwgrhaklvu4g6o7.onion:8333\n-iz56moo6mkp3g7xo.onion:8333\n-j2cp5muw5j3lumcx.onion:8333\n-j2lrkrwugldwewws.onion:8333\n-j2qtmkd2dablssz4.onion:8333\n-j5e2yuan57v2h5el.onion:8333\n-j5jfrdthqt5g25xz.onion:8333\n-j5lk2uv2bspfqxfk.onion:8333\n-janvvzsmzcsj3fil.onion:8333\n-jenn2tmyl3xxarmq.onion:8333\n-jfoe5f2sczojfp32.onion:8333\n-jgcgi6k2pxooi5q3.onion:8333\n-jhana24s3dzkitzp.onion:8333\n-jitgulb24mvfqrdg.onion:8333\n-jjuvwbjfzljmn7t3.onion:8333\n-jlcfomgr5xfexaif.onion:8333\n-jlehs6ybb26qlnna.onion:8333\n-jljzz4tmbqrxq3q5.onion:8333\n-joc4oqceedkg77vf.onion:8333\n-jr5y6njubcbv6g37.onion:8333\n-jroaos6la4vieho4.onion:8333\n-jsmphgkay7iihbkr.onion:8333\n-jtksnokusbzms7wl.onion:8333\n-ju5duo3r6p6diznc.onion:8333\n-jw6zymxcnebahuuj.onion:8333\n-jxalvhf7w7wevqzw.onion:8333\n-jyzhe3ig44ickysb.onion:8333\n-jze6ukn4idrh44eo.onion:8333\n-k4glotlxnmttb6ct.onion:8333\n-k7uy3iwmvguzygd2.onion:8333\n-kl23ofag3ukb6hxl.onion:8333\n-kokt2qr6d4pmyb2d.onion:8333\n-kpalu3h5ydkoaivs.onion:8333\n-krdpbdvtqw5c5lee.onion:8333\n-kriw6kzjzarzgb3g.onion:8333\n-krp2thcmwrpsoue6.onion:8333\n-kvyvdwjwtae5mo77.onion:8333\n-kyrxri5rbr6ipurs.onion:8333\n-kz3oxg7745dxt62q.onion:8333\n-l3w5fcki2wbro2qb.onion:8333\n-l44bisuxhh7reb5q.onion:8333\n-l565g523emjebusj.onion:8333\n-l6w5kdeigwsgnf5t.onion:8333\n-l7a4emryfxkjgmmb.onion:8333\n-l7sloscjqqbifcsw.onion:8333\n-laafjqvtog7djfl2.onion:8333\n-lah676kxbgbgw3u2.onion:8333\n-lbq2a7pnpmviw2qo.onion:8333\n-lc4wnpql27vymi35.onion:8333\n-ldoffbfpk3j6c7y7.onion:8333\n-lehpmglkivobq2qo.onion:8333\n-lgewpjz7ie7daqqr.onion:8333\n-lgkvbvro67jomosw.onion:8333\n-liw5z4ngic6b7vnv.onion:8333\n-ljs7gwrmmza6q6ga.onion:8333\n-lmvax3e6awaxvhqi.onion:8333\n-lrz77dwf7yq4cgnt.onion:8333\n-lva54pnbq2nsmjyr.onion:8333\n-lxc2uphxyyxflhnf.onion:8333\n-lyjybdr4hmj3bqab.onion:8333\n-lz2zlnmyynwtgwf2.onion:8333\n-m6hcnpikimyh37yp.onion:8333\n-md635omjnrgheed3.onion:8333\n-mdb3oupwf4f2qyjb.onion:8333\n-me6d4esx7ohdnxne.onion:8333\n-mecfkik5ci47wckj.onion:8333\n-mfrvevn7w6rwsp4r.onion:8333\n-mimuutlew5srtduk.onion:8333\n-mnysk3izxvra3huv.onion:8333\n-mqu6gqtrhm6xzwwh.onion:8333\n-mwuc6vom4ngijtb3.onion:8333\n-mxdtrjhe2yfsx3pg.onion:8333\n-n4ibet4piscv22nj.onion:8333\n-n6d46vbzx43bevlb.onion:8333\n-n6t6kfgzlvozxhfm.onion:8333\n-n7rrochwerf2qxze.onion:8333\n-ncsdiqmnxhnnjbsz.onion:8333\n-nitxw3ilffngpumv.onion:8333\n-njlsvubildehluwr.onion:8333\n-njslfsivyyhixbsp.onion:8333\n-nkf5e6b7pl4jfd4a.onion:8333\n-nkppsb3t3ducje6m.onion:8333\n-nlfwyqksmeqe45zz.onion:8333\n-nlyjmpcmpaz5b4aa.onion:8333\n-nnmv7z65k65mcesr.onion:8333\n-nrrfwdmrm3imuebn.onion:8333\n-nrrmkgmulpgsbwlt.onion:8333\n-nw4h7leckut7eapv.onion:8333\n-nwky3wd3ihoidvb5.onion:8333\n-ny4kkemmmqv4lptm.onion:8333\n-o25wkcw7eorg2toi.onion:8333\n-o2gumvbkw6pm45cf.onion:8333\n-o4yjshdwlbshylqw.onion:8333\n-ofx4qgw6lppnvtgv.onion:8333\n-oketipl4gndqcaus.onion:8333\n-oq5q4qrqijr2kpun.onion:8333\n-oqw3mfoiobqcklxh.onion:8333\n-orsy2v63ecrmdj55.onion:8333\n-ot4tzmznyimmlszk.onion:8333\n-owk6c2jfthwkyahe.onion:8333\n-oy7ss3hm2okx4tun.onion:8333\n-p2pc6wbaepvdi6ce.onion:8333\n-p2x24gdhasmgcl5j.onion:8333\n-p6couujr2ndhllv3.onion:8333\n-pa7dw5bln5lqmu53.onion:8333\n-pasmchtoooj2kchd.onion:8333\n-pdapkkhk6pbcy2tj.onion:8333\n-peh5ajouuw6mw4sr.onion:8333\n-pkuuc5pwl5xygwhr.onion:8333\n-pq4wjl7vg7tsfycc.onion:8333\n-ptbwqhusps5qieql.onion:8333\n-ptwpbwyj5lnyew2f.onion:8333\n-pu7w3jfyrzp7sxsi.onion:8333\n-pwylbyvfuc62hhvx.onion:8333\n-q2fhnnyt5b2ayvce.onion:8333\n-q3i3apuionbazmfe.onion:8333\n-qd6fcpu3pvbf2y3x.onion:8333\n-qfewv3y7a3p4i3bd.onion:8333\n-qhytdttflhbc4rsh.onion:8333\n-qkn35rb3x2gxbwq4.onion:8333\n-qlvlexs7pwac2f4b.onion:8333\n-qogcqirtuta6rlxg.onion:8333\n-qrzqfxkhrmu5v5ro.onion:8333\n-qsyjasq46b2syiys.onion:8333\n-quu4b2zjbnr2ue4y.onion:8333\n-quycfj2wenz6bfyd.onion:8333\n-qvdy3cmocnlv5v7c.onion:8333\n-qvwhpqygan2xky5h.onion:8333\n-qyutwc26ullujafb.onion:8333\n-r45qg2d6iwfdhqwl.onion:8333\n-r4xudr6u4r5nyga4.onion:8333\n-r6apa5ssujxbwd34.onion:8333\n-r6z2gcsu37k3gaah.onion:8333\n-rbrjgfcca6v5b7yo.onion:8333\n-rcifxibawqt6rxzz.onion:8333\n-rdo3xctk3zkzjvln.onion:8333\n-rdvlepy6ghgpapzo.onion:8333\n-recs3a27chv2lg65.onion:8333\n-rfmbiy5vztvn6hyn.onion:8333\n-rli5lbje4k77inzw.onion:8333\n-roqwnmepcj453vfh.onion:8333\n-rpbnx54qniivrmh3.onion:8333\n-rsvvogqdlijp77hv.onion:8333\n-rwm5d4hg3hc77kdt.onion:8333\n-s3yelkvc5f5xeysw.onion:8333\n-s6rx52hitmpp4lge.onion:8333\n-sa6m3rvycipgemky.onion:8333\n-savebeesmkivmfbo.onion:8333\n-sbyjr5npk2mlmfw7.onion:8333\n-serwj42jme5xhhmw.onion:8333\n-sg4vmubv3djrzvuh.onion:8333\n-shsgksluz6jkgp6g.onion:8333\n-sjyzmwwu6diiit3r.onion:8333\n-sk3en3reudg3sdg5.onion:8333\n-skoifp4oj7l4osu5.onion:8333\n-sle2caplkln33e7y.onion:8333\n-smdd7q7gonajdmjq.onion:8333\n-spmhuxjb2cd7leun.onion:8333\n-srkgyv5edn2pa7il.onion:8333\n-sslnjjhnmwllysv4.onion:8333\n-su66ygras6rkdtnl.onion:8333\n-sundvmbjrtgdfahx.onion:8333\n-svd65k5jpal2p3lt.onion:8333\n-svua5hiqluw7o2sw.onion:8333\n-sxqjubmum4rmfgpu.onion:8333\n-t245vi742ti3tnka.onion:8333\n-t4fbovvgzpnimd2p.onion:8333\n-t4l4wv3erkhpde2p.onion:8333\n-t5qchwbr6u5v2agk.onion:8333\n-t7jlaj6ggyx7s5vy.onion:8333\n-ta6sjeqyb27f4n4a.onion:8333\n-tav7utpw4pfy7j6k.onion:8333\n-taxg5z2sxfm5c4d6.onion:8333\n-tekwvnbodbzrlufs.onion:8333\n-tg4uwrjmtr2jlbjy.onion:8333\n-th4cjvffjtw6vomu.onion:8333\n-th6fxymtwnfifqeu.onion:8333\n-thtchhl25u26nglq.onion:8333\n-tiiah7csuoklcvi6.onion:8333\n-tk63x5fk3337z3ud.onion:8333\n-tkgootat6cqn7vyy.onion:8333\n-tnj565wwqz5wpjvs.onion:8333\n-ts6qx37mmpu6nj5y.onion:8333\n-ttjisvxydgbtp56f.onion:8333\n-twn54v7ra2xjgd55.onion:8333\n-txem5meug24g2ezd.onion:8333\n-tyiunn36lmfcq5lr.onion:8333\n-tyv56xs6g6ndzqux.onion:8333\n-u47f3hxwq65sgs4o.onion:8333\n-u4r7fnholrdwwlni.onion:8333\n-u556ofb3myarafwn.onion:8333\n-u5q3gbz4qpz4wvlr.onion:8333\n-uakly3ydrevvpxwi.onion:8333\n-ug6hapi4qtekzc7v.onion:8333\n-ui553qotd6ron3rf.onion:8333\n-uir7f3wltoka6bbb.onion:8333\n-ukrjjhwodl44wmof.onion:8333\n-ul5gm2ixy7kqdfwg.onion:8333\n-undd7rsj4pen3wo4.onion:8333\n-uorwpzfehtykrg43.onion:8333\n-uovsp2yltnaojq6l.onion:8333\n-usazmdcs32ny24dy.onion:8333\n-usazs7glm7geyxkl.onion:8333\n-uss2kedg7qkwgdr5.onion:8333\n-utgyrvw75wv2nymi.onion:8333\n-uzwacms7kyzhehbl.onion:8333\n-v2kdcetvslmdfcwr.onion:8333\n-v5lhnzzv6nngfg5d.onion:8333\n-vc44gb4veppobrt3.onion:8333\n-vfwyhju43wxhzvux.onion:8333\n-vgujufk53lqyolio.onion:8333\n-vheejqq2v5dkb4xr.onion:8333\n-vj64edev4jnqfdsb.onion:8333\n-vmai5uigezr2khkj.onion:8333\n-vmuykd7sxbmi7w57.onion:8333\n-vomeacttinx3mpml.onion:8333\n-vpow2xofg3fwzsdq.onion:8333\n-vsawli4l5ifxdzaw.onion:8333\n-vunubqkfms7sifok.onion:8333\n-vuombnevwul4bqsb.onion:8333\n-vxcpvdng65aefz6t.onion:8333\n-vyxoizdzavp3obau.onion:8333\n-wbeon2ci7lfio6ay.onion:8333\n-wbwevew62mgsrrdz.onion:8333\n-wfaydlg6zyfzjcu5.onion:8333\n-wfz56s5lyn5dysez.onion:8333\n-wg3mq4ugyy2gx32b.onion:8333\n-whky54bctkf2n4p3.onion:8333\n-whmjanqoyzizzc4t.onion:8333\n-wlhou2wxgqyi3x3f.onion:8333\n-wlvkfrplfiioz22o.onion:8333\n-x3ngb3va7dovuenw.onion:8333\n-x57x62bmmnylvo7r.onion:8333\n-xgvm57mhgv564dka.onion:8333\n-xhs3glfwnwiumivn.onion:8333\n-xje5fwvyfdue2u6k.onion:8333\n-xlgubgyly2blvsg5.onion:8333\n-xnlu3tvakngy7tkp.onion:8333\n-xo5marilhuyo7but.onion:8333\n-xsaaxihdygnwxrix.onion:8333\n-xu5mlugdsmzfkvzh.onion:8333\n-xvrxqcptqvieedb2.onion:8333\n-xwzhrrygftq3q4w4.onion:8333\n-y4swmsaxdcos2bnu.onion:8333\n-y5tl4lqi365pplud.onion:8333\n-y5wzeqyaets5na6t.onion:8333\n-y73qk2mzkjkhoky7.onion:8333\n-y7oz3ydnvib4xhbb.onion:8333\n-yah7qgfqqrteoche.onion:8333\n-yba4brm555denlt7.onion:8333\n-ygeqkg4inplsace3.onion:8333\n-yjhnfu75lazbi34h.onion:8333\n-yjw7kqapxx5vggoj.onion:8333\n-ym7inmovbrna4gco.onion:8333\n-yq5cusnuokscy64z.onion:8333\n-yrcaioqrqrdwokqt.onion:8333\n-yrcr7pgjuazad254.onion:8333\n-yrksvon3tmvoohdv.onion:8333\n-ytpus4vx5w7j6wp2.onion:8333\n-ytqcigk2hhdl45ho.onion:8333\n-yxojl3xmjus3dik2.onion:8333\n-yzdqdsqx4fdung6w.onion:8333\n-z33nukt7ngik3cpe.onion:8333\n-z3ywbadw46ndnxgh.onion:8333\n-z6mbqq7llxlrn4kq.onion:8333\n-zb3lrcksn4rzhzje.onion:8333\n-ze7odp7pzarjplsr.onion:8333\n-zgbmhtbja4fy2373.onion:8333\n-zh7hvalcgvjpoaqm.onion:8333\n-ziztvxehmj5mehpg.onion:8333\n-zjii3yecdrmq73y3.onion:8333\n-zkrwmgjuvsza6ye2.onion:8333\n-zoz2aopwi3wfuqwg.onion:8333\n-ztdcfnh46773bivu.onion:8333\n-zuxhc6d3nwpgc4af.onion:8333\n-zuytrfevzjcpizli.onion:8333\n-zvq6dpt3i2ofdp3g.onion:8333\n-zwwm6ga7u2hqe2sd.onion:8333\n-zyqb4lenfspntj5m.onion:8333\n+\n+# manually added 2021-03 for minimal torv3 bootstrap support\n+2g5qfdkn2vvcbqhzcyvyiitg4ceukybxklraxjnu7atlhd22gdwywaid.onion:8333\n+2jmtxvyup3ijr7u6uvu7ijtnojx4g5wodvaedivbv74w4vzntxbrhvad.onion:8333\n+37m62wn7dz3uqpathpc4qfmgrbupachj52nt3jbtbjugpbu54kbud7yd.onion:8333\n+5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion:8333\n+7cgwjuwi5ehvcay4tazy7ya6463bndjk6xzrttw5t3xbpq4p22q6fyid.onion:8333\n+7pyrpvqdhmayxggpcyqn5l3m5vqkw3qubnmgwlpya2mdo6x7pih7r7id.onion:8333\n+b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion:8333\n+ejxefzf5fpst4mg2rib7grksvscl7p6fvjp6agzgfc2yglxnjtxc3aid.onion:8333\n+fjdyxicpm4o42xmedlwl3uvk5gmqdfs5j37wir52327vncjzvtpfv7yd.onion:8333\n+fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion:8333\n+fzhn4uoxfbfss7h7d6ffbn266ca432ekbbzvqtsdd55ylgxn4jucm5qd.onion:8333\n+gxo5anvfnffnftfy5frkgvplq3rpga2ie3tcblo2vl754fvnhgorn5yd.onion:8333\n+ifdu5qvbofrt4ekui2iyb3kbcyzcsglazhx2hn4wfskkrx2v24qxriid.onion:8333\n+itz3oxsihs62muvknc237xabl5f6w6rfznfhbpayrslv2j2ubels47yd.onion:8333\n+lrjh6fywjqttmlifuemq3puhvmshxzzyhoqx7uoufali57eypuenzzid.onion:8333\n+m7cbpjolo662uel7rpaid46as2otcj44vvwg3gccodnvaeuwbm3anbyd.onion:8333\n+opnyfyeiibe5qo5a3wbxzbb4xdiagc32bbce46owmertdknta5mi7uyd.onion:8333\n+owjsdxmzla6d7lrwkbmetywqym5cyswpihciesfl5qdv2vrmwsgy4uqd.onion:8333\n+q7kgmd7n7h27ds4fg7wocgniuqb3oe2zxp4nfe4skd5da6wyipibqzqd.onion:8333\n+rp7k2go3s5lyj3fnj6zn62ktarlrsft2ohlsxkyd7v3e3idqyptvread.onion:8333\n+sys54sv4xv3hn3sdiv3oadmzqpgyhd4u4xphv4xqk64ckvaxzm57a7yd.onion:8333\n+tddeij4qigtjr6jfnrmq6btnirmq5msgwcsdpcdjr7atftm7cxlqztid.onion:8333\n+vi5bnbxkleeqi6hfccjochnn65lcxlfqs4uwgmhudph554zibiusqnad.onion:8333\n+xqt25cobm5zqucac3634zfght72he6u3eagfyej5ellbhcdgos7t2had.onion:8333\n+\n+# manually added 2021-05 for minimal i2p bootstrap support\n+72l3ucjkuscrbiiepoehuwqgknyzgo7zuix5ty4puwrkyhtmnsga.b32.i2p:8333\n+c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p:8333\n+gehtac45oaghz54ypyopim64mql7oad2bqclla74l6tfeolzmodq.b32.i2p:8333\n+h3r6bkn46qxftwja53pxiykntegfyfjqtnzbm6iv6r5mungmqgmq.b32.i2p:8333\n+hnbbyjpxx54623l555sta7pocy3se4sdgmuebi5k6reesz5rjp6q.b32.i2p:8333\n+pjs7or2ctvteeo5tu4bwyrtydeuhqhvdprtujn4daxr75jpebjxa.b32.i2p:8333\n+wwbw7nqr3ahkqv62cuqfwgtneekvvpnuc4i4f6yo7tpoqjswvcwa.b32.i2p:8333\n+zsxwyo6qcn3chqzwxnseusqgsnuw3maqnztkiypyfxtya4snkoka.b32.i2p:8333"
      },
      {
        "sha": "118bec280e218a77d0d05cc047151ee95895be1c",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,11 +1,16 @@\n # List of fixed seed nodes for testnet\n \n # Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n+35k2va6vyw4oo5ly2quvcszgdqr56kcnfgcqpnpcffut4jn3mhhwgbid.onion:18333\n+blo2esfvk2rr7sr4jspmu3vt2vpgr5rigflsj645fnku7v4qmljurtid.onion:18333\n+fuckcswupr5rmlvx2kqqrrosxvjyong4hatmuvxsvtcwe4dsh5rus7qd.onion:18333\n+gblylyacjlitd2ywdmo2qqylwtdky7kgeqfvlhiw4zdag4x62tx54hyd.onion:18333\n+gzwpduv33l7yze3bcdzj3inebiyjwddjnwvnjhh5wvnv4me76mjt2kad.onion:18333\n+h3rphzofxzq52tb63mg5f6kc4my3fkcrgh3m5qryeatts43iljbawiid.onion:18333\n+kf4qlhek34b3kgyxyodlmvgm4bxfrjsbjtgayyaiuyhr2eoyfgtm3bad.onion:18333\n+mc7k47ndjvvhcgs54wmjzxvate4rtuybbjoryikdssjhcxlx27psbyqd.onion:18333\n+mrhiniicugfo7mgrwv3wtolk3tptlcw2uq7ih6sq43fa4k4zbilut3yd.onion:18333\n+uiudyws3qizgmepfoh7wwjmsoxoxut4qrmotjjhrn247xnjopr7sfcid.onion:18333\n+zc2wvoqcezcrf64trji6jmhtss34a5ds5ntzdhqegzvex3ynrd7nxcad.onion:18333\n+zd5m3dgdn46naj36pxvvcalfw2paecle6sdxq64ptwxtxjomkywpklqd.onion:18333\n "
      },
      {
        "sha": "37bac1f38d8f087b4b0e073141bdd29a6a33f8ac",
        "filename": "contrib/shell/git-utils.bash",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/shell/git-utils.bash",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/shell/git-utils.bash",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/shell/git-utils.bash?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+\n+git_root() {\n+    git rev-parse --show-toplevel 2> /dev/null\n+}\n+\n+git_head_version() {\n+    local recent_tag\n+    if recent_tag=\"$(git describe --exact-match HEAD 2> /dev/null)\"; then\n+        echo \"${recent_tag#v}\"\n+    else\n+        git rev-parse --short=12 HEAD\n+    fi\n+}"
      },
      {
        "sha": "389b77b56266d3e753598d5aa90d9642b2e7c30f",
        "filename": "contrib/shell/realpath.bash",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/shell/realpath.bash",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/shell/realpath.bash",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/shell/realpath.bash?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env bash\n+\n+# Based on realpath.sh written by Michael Kropat\n+# Found at: https://github.com/mkropat/sh-realpath/blob/65512368b8155b176b67122aa395ac580d9acc5b/realpath.sh\n+\n+bash_realpath() {\n+    canonicalize_path \"$(resolve_symlinks \"$1\")\"\n+}\n+\n+resolve_symlinks() {\n+    _resolve_symlinks \"$1\"\n+}\n+\n+_resolve_symlinks() {\n+    _assert_no_path_cycles \"$@\" || return\n+\n+    local dir_context path\n+    if path=$(readlink -- \"$1\"); then\n+        dir_context=$(dirname -- \"$1\")\n+        _resolve_symlinks \"$(_prepend_dir_context_if_necessary \"$dir_context\" \"$path\")\" \"$@\"\n+    else\n+        printf '%s\\n' \"$1\"\n+    fi\n+}\n+\n+_prepend_dir_context_if_necessary() {\n+    if [ \"$1\" = . ]; then\n+        printf '%s\\n' \"$2\"\n+    else\n+        _prepend_path_if_relative \"$1\" \"$2\"\n+    fi\n+}\n+\n+_prepend_path_if_relative() {\n+    case \"$2\" in\n+        /* ) printf '%s\\n' \"$2\" ;;\n+         * ) printf '%s\\n' \"$1/$2\" ;;\n+    esac\n+}\n+\n+_assert_no_path_cycles() {\n+    local target path\n+\n+    target=$1\n+    shift\n+\n+    for path in \"$@\"; do\n+        if [ \"$path\" = \"$target\" ]; then\n+            return 1\n+        fi\n+    done\n+}\n+\n+canonicalize_path() {\n+    if [ -d \"$1\" ]; then\n+        _canonicalize_dir_path \"$1\"\n+    else\n+        _canonicalize_file_path \"$1\"\n+    fi\n+}\n+\n+_canonicalize_dir_path() {\n+    (cd \"$1\" 2>/dev/null && pwd -P)\n+}\n+\n+_canonicalize_file_path() {\n+    local dir file\n+    dir=$(dirname -- \"$1\")\n+    file=$(basename -- \"$1\")\n+    (cd \"$dir\" 2>/dev/null && printf '%s/%s\\n' \"$(pwd -P)\" \"$file\")\n+}"
      },
      {
        "sha": "706b296c54942848642ed7fe8cec18a548235b8a",
        "filename": "contrib/signet/README.md",
        "status": "modified",
        "additions": 18,
        "deletions": 15,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/signet/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/signet/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -21,27 +21,28 @@ accept one claim per day. See `--password` above.\n miner\n =====\n \n-To mine the first block in your custom chain, you can run:\n+You will first need to pick a difficulty target. Since signet chains are primarily protected by a signature rather than proof of work, there is no need to spend as much energy as possible mining, however you may wish to choose to spend more time than the absolute minimum. The calibrate subcommand can be used to pick a target appropriate for your hardware, eg:\n \n     cd src/\n-    CLI=\"./bitcoin-cli -conf=mysignet.conf\"\n-    MINER=\"..contrib/signet/miner\"\n+    MINER=\"../contrib/signet/miner\"\n     GRIND=\"./bitcoin-util grind\"\n-    ADDR=$($CLI -signet getnewaddress)\n-    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --set-block-time=-1\n-\n-This will mine a block with the current timestamp. If you want to backdate the chain, you can give a different timestamp to --set-block-time.\n-\n-You will then need to pick a difficulty target. Since signet chains are primarily protected by a signature rather than proof of work, there is no need to spend as much energy as possible mining, however you may wish to choose to spend more time than the absolute minimum. The calibrate subcommand can be used to pick a target, eg:\n-\n     $MINER calibrate --grind-cmd=\"$GRIND\"\n     nbits=1e00f403 for 25s average mining time\n \n It defaults to estimating an nbits value resulting in 25s average time to find a block, but the --seconds parameter can be used to pick a different target, or the --nbits parameter can be used to estimate how long it will take for a given difficulty.\n \n-Using the --ongoing parameter will then cause the signet miner to create blocks indefinitely. It will pick the time between blocks so that difficulty is adjusted to match the provided --nbits value.\n+To mine the first block in your custom chain, you can run:\n \n-    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --nbits=1e00f403 --ongoing\n+    CLI=\"./bitcoin-cli -conf=mysignet.conf\"\n+    ADDR=$($CLI -signet getnewaddress)\n+    NBITS=1e00f403\n+    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --nbits=$NBITS\n+\n+This will mine a single block with a backdated timestamp designed to allow 100 blocks to be mined as quickly as possible, so that it is possible to do transactions.\n+\n+Adding the --ongoing parameter will then cause the signet miner to create blocks indefinitely. It will pick the time between blocks so that difficulty is adjusted to match the provided --nbits value.\n+\n+    $MINER --cli=\"$CLI\" generate --grind-cmd=\"$GRIND\" --address=\"$ADDR\" --nbits=$NBITS --ongoing\n \n Other options\n -------------\n@@ -50,9 +51,11 @@ The --debug and --quiet options are available to control how noisy the signet mi\n \n Instead of specifying --ongoing, you can specify --max-blocks=N to mine N blocks and stop.\n \n-Instead of using a single address, a ranged descriptor may be provided instead (via the --descriptor parameter), with the reward for the block at height H being sent to the H'th address generated from the descriptor.\n+The --set-block-time option is available to manually move timestamps forward or backward (subject to the rules that blocktime must be greater than mediantime, and dates can't be more than two hours in the future). It can only be used when mining a single block (ie, not when using --ongoing or --max-blocks greater than 1).\n+\n+Instead of using a single address, a ranged descriptor may be provided via the --descriptor parameter, with the reward for the block at height H being sent to the H'th address generated from the descriptor.\n \n-Instead of calculating a specific nbits value, --min-nbits can be specified instead, in which case the mininmum signet difficulty will be targeted.\n+Instead of calculating a specific nbits value, --min-nbits can be specified instead, in which case the minimum signet difficulty will be targeted. Signet's minimum difficulty corresponds to --nbits=1e0377ae.\n \n By default, the signet miner mines blocks at fixed intervals with minimal variation. If you want blocks to appear more randomly, as they do in mainnet, specify the --poisson option.\n \n@@ -76,5 +79,5 @@ These steps can instead be done explicitly:\n       $MINER --cli=\"$CLI\" solvepsbt --grind-cmd=\"$GRIND\" |\n       $CLI -signet -stdin submitblock\n \n-This is intended to allow you to replace part of the pipeline for further experimentation, if desired.\n+This is intended to allow you to replace part of the pipeline for further experimentation (eg, to sign the block with a hardware wallet).\n "
      },
      {
        "sha": "f1360818ae9436903402281a0c9b075f13306203",
        "filename": "contrib/signet/miner",
        "status": "modified",
        "additions": 8,
        "deletions": 16,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/signet/miner",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/signet/miner",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/signet/miner?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -428,10 +428,13 @@ def do_generate(args):\n             action_time = now\n             is_mine = True\n         elif bestheader[\"height\"] == 0:\n-            logging.error(\"When mining first block in a new signet, must specify --set-block-time\")\n-            return 1\n+            time_delta = next_block_delta(int(bestheader[\"bits\"], 16), bci[\"bestblockhash\"], ultimate_target, args.poisson)\n+            time_delta *= 100 # 100 blocks\n+            logging.info(\"Backdating time for first block to %d minutes ago\" % (time_delta/60))\n+            mine_time = now - time_delta\n+            action_time = now\n+            is_mine = True\n         else:\n-\n             time_delta = next_block_delta(int(bestheader[\"bits\"], 16), bci[\"bestblockhash\"], ultimate_target, args.poisson)\n             mine_time = bestheader[\"time\"] + time_delta\n \n@@ -520,36 +523,26 @@ def do_calibrate(args):\n         sys.stderr.write(\"Can only specify one of --nbits or --seconds\\n\")\n         return 1\n     if args.nbits is not None and len(args.nbits) != 8:\n-        sys.stderr.write(\"Must specify 8 hex digits for --nbits\")\n+        sys.stderr.write(\"Must specify 8 hex digits for --nbits\\n\")\n         return 1\n \n     TRIALS = 600 # gets variance down pretty low\n     TRIAL_BITS = 0x1e3ea75f # takes about 5m to do 600 trials\n-    #TRIAL_BITS = 0x1e7ea75f # XXX\n \n     header = CBlockHeader()\n     header.nBits = TRIAL_BITS\n     targ = nbits_to_target(header.nBits)\n \n     start = time.time()\n     count = 0\n-    #CHECKS=[]\n     for i in range(TRIALS):\n         header.nTime = i\n         header.nNonce = 0\n         headhex = header.serialize().hex()\n         cmd = args.grind_cmd.split(\" \") + [headhex]\n         newheadhex = subprocess.run(cmd, stdout=subprocess.PIPE, input=b\"\", check=True).stdout.strip()\n-        #newhead = FromHex(CBlockHeader(), newheadhex.decode('utf8'))\n-        #count += newhead.nNonce\n-        #if (i+1) % 100 == 0:\n-        #   CHECKS.append((i+1, count, time.time()-start))\n-\n-    #print(\"checks =\", [c*1.0 / (b*targ*2**-256) for _,b,c in CHECKS])\n \n     avg = (time.time() - start) * 1.0 / TRIALS\n-    #exp_count = 2**256 / targ * TRIALS\n-    #print(\"avg =\", avg, \"count =\", count, \"exp_count =\", exp_count)\n \n     if args.nbits is not None:\n         want_targ = nbits_to_target(int(args.nbits,16))\n@@ -590,7 +583,6 @@ def main():\n     generate.add_argument(\"--nbits\", default=None, type=str, help=\"Target nBits (specify difficulty)\")\n     generate.add_argument(\"--min-nbits\", action=\"store_true\", help=\"Target minimum nBits (use min difficulty)\")\n     generate.add_argument(\"--poisson\", action=\"store_true\", help=\"Simulate randomised block times\")\n-    #generate.add_argument(\"--signcmd\", default=None, type=str, help=\"Alternative signing command\")\n     generate.add_argument(\"--multiminer\", default=None, type=str, help=\"Specify which set of blocks to mine (eg: 1-40/100 for the first 40%%, 2/3 for the second 3rd)\")\n     generate.add_argument(\"--backup-delay\", default=300, type=int, help=\"Seconds to delay before mining blocks reserved for other miners (default=300)\")\n     generate.add_argument(\"--standby-delay\", default=0, type=int, help=\"Seconds to delay before mining blocks (default=0)\")\n@@ -605,7 +597,7 @@ def main():\n         sp.add_argument(\"--descriptor\", default=None, type=str, help=\"Descriptor for block reward payment\")\n \n     for sp in [solvepsbt, generate, calibrate]:\n-        sp.add_argument(\"--grind-cmd\", default=None, type=str, help=\"Command to grind a block header for proof-of-work\")\n+        sp.add_argument(\"--grind-cmd\", default=None, type=str, required=(sp==calibrate), help=\"Command to grind a block header for proof-of-work\")\n \n     args = parser.parse_args(sys.argv[1:])\n "
      },
      {
        "sha": "fcc5a378e2cc8f5dba2b627e531234d77992b621",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,5 +4,5 @@ Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n Usage:\n \n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 70 > ../../src/test/data/key_io_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 70 > ../../src/test/data/key_io_invalid.json"
      },
      {
        "sha": "74918cfb048ad85c55dd049285960f8009369c1b",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "modified",
        "additions": 53,
        "deletions": 31,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,19 +3,19 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n-Generate valid and invalid base58 address and private key test vectors.\n+Generate valid and invalid base58/bech32(m) address and private key test vectors.\n \n Usage:\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n-    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 70 > ../../src/test/data/key_io_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 70 > ../../src/test/data/key_io_invalid.json\n '''\n # 2012 Wladimir J. van der Laan\n # Released under MIT License\n import os\n from itertools import islice\n from base58 import b58encode_chk, b58decode_chk, b58chars\n import random\n-from segwit_addr import bech32_encode, decode_segwit_address, convertbits, CHARSET\n+from segwit_addr import bech32_encode, decode_segwit_address, convertbits, CHARSET, Encoding\n \n # key types\n PUBKEY_ADDRESS = 0\n@@ -32,6 +32,7 @@\n OP_0 = 0x00\n OP_1 = 0x51\n OP_2 = 0x52\n+OP_3 = 0x53\n OP_16 = 0x60\n OP_DUP = 0x76\n OP_EQUAL = 0x87\n@@ -44,6 +45,7 @@\n script_suffix = (OP_EQUAL,)\n p2wpkh_prefix = (OP_0, 20)\n p2wsh_prefix = (OP_0, 32)\n+p2tr_prefix = (OP_1, 32)\n \n metadata_keys = ['isPrivkey', 'chain', 'isCompressed', 'tryCaseFlip']\n # templates for valid sequences\n@@ -54,40 +56,58 @@\n   ((SCRIPT_ADDRESS,),         20, (),   (False, 'main',    None,  None), script_prefix, script_suffix),\n   ((PUBKEY_ADDRESS_TEST,),    20, (),   (False, 'test',    None,  None), pubkey_prefix, pubkey_suffix),\n   ((SCRIPT_ADDRESS_TEST,),    20, (),   (False, 'test',    None,  None), script_prefix, script_suffix),\n+  ((PUBKEY_ADDRESS_TEST,),    20, (),   (False, 'signet',  None,  None), pubkey_prefix, pubkey_suffix),\n+  ((SCRIPT_ADDRESS_TEST,),    20, (),   (False, 'signet',  None,  None), script_prefix, script_suffix),\n   ((PUBKEY_ADDRESS_REGTEST,), 20, (),   (False, 'regtest', None,  None), pubkey_prefix, pubkey_suffix),\n   ((SCRIPT_ADDRESS_REGTEST,), 20, (),   (False, 'regtest', None,  None), script_prefix, script_suffix),\n   ((PRIVKEY,),                32, (),   (True,  'main',    False, None), (),            ()),\n   ((PRIVKEY,),                32, (1,), (True,  'main',    True,  None), (),            ()),\n   ((PRIVKEY_TEST,),           32, (),   (True,  'test',    False, None), (),            ()),\n   ((PRIVKEY_TEST,),           32, (1,), (True,  'test',    True,  None), (),            ()),\n+  ((PRIVKEY_TEST,),           32, (),   (True,  'signet',  False, None), (),            ()),\n+  ((PRIVKEY_TEST,),           32, (1,), (True,  'signet',  True,  None), (),            ()),\n   ((PRIVKEY_REGTEST,),        32, (),   (True,  'regtest', False, None), (),            ()),\n   ((PRIVKEY_REGTEST,),        32, (1,), (True,  'regtest', True,  None), (),            ())\n ]\n # templates for valid bech32 sequences\n bech32_templates = [\n-  # hrp, version, witprog_size, metadata, output_prefix\n-  ('bc',    0, 20, (False, 'main',    None, True), p2wpkh_prefix),\n-  ('bc',    0, 32, (False, 'main',    None, True), p2wsh_prefix),\n-  ('bc',    1,  2, (False, 'main',    None, True), (OP_1, 2)),\n-  ('tb',    0, 20, (False, 'test',    None, True), p2wpkh_prefix),\n-  ('tb',    0, 32, (False, 'test',    None, True), p2wsh_prefix),\n-  ('tb',    2, 16, (False, 'test',    None, True), (OP_2, 16)),\n-  ('bcrt',  0, 20, (False, 'regtest', None, True), p2wpkh_prefix),\n-  ('bcrt',  0, 32, (False, 'regtest', None, True), p2wsh_prefix),\n-  ('bcrt', 16, 40, (False, 'regtest', None, True), (OP_16, 40))\n+  # hrp, version, witprog_size, metadata, encoding, output_prefix\n+  ('bc',    0, 20, (False, 'main',    None, True), Encoding.BECH32,  p2wpkh_prefix),\n+  ('bc',    0, 32, (False, 'main',    None, True), Encoding.BECH32,  p2wsh_prefix),\n+  ('bc',    1, 32, (False, 'main',    None, True), Encoding.BECH32M, p2tr_prefix),\n+  ('bc',    2,  2, (False, 'main',    None, True), Encoding.BECH32M, (OP_2, 2)),\n+  ('tb',    0, 20, (False, 'test',    None, True), Encoding.BECH32,  p2wpkh_prefix),\n+  ('tb',    0, 32, (False, 'test',    None, True), Encoding.BECH32,  p2wsh_prefix),\n+  ('tb',    1, 32, (False, 'test',    None, True), Encoding.BECH32M, p2tr_prefix),\n+  ('tb',    3, 16, (False, 'test',    None, True), Encoding.BECH32M, (OP_3, 16)),\n+  ('tb',    0, 20, (False, 'signet',  None, True), Encoding.BECH32,  p2wpkh_prefix),\n+  ('tb',    0, 32, (False, 'signet',  None, True), Encoding.BECH32,  p2wsh_prefix),\n+  ('tb',    1, 32, (False, 'signet',  None, True), Encoding.BECH32M, p2tr_prefix),\n+  ('tb',    3, 32, (False, 'signet',  None, True), Encoding.BECH32M, (OP_3, 32)),\n+  ('bcrt',  0, 20, (False, 'regtest', None, True), Encoding.BECH32,  p2wpkh_prefix),\n+  ('bcrt',  0, 32, (False, 'regtest', None, True), Encoding.BECH32,  p2wsh_prefix),\n+  ('bcrt',  1, 32, (False, 'regtest', None, True), Encoding.BECH32M, p2tr_prefix),\n+  ('bcrt', 16, 40, (False, 'regtest', None, True), Encoding.BECH32M, (OP_16, 40))\n ]\n # templates for invalid bech32 sequences\n bech32_ng_templates = [\n-  # hrp, version, witprog_size, invalid_bech32, invalid_checksum, invalid_char\n-  ('tc',    0, 20, False, False, False),\n-  ('tb',   17, 32, False, False, False),\n-  ('bcrt',  3,  1, False, False, False),\n-  ('bc',   15, 41, False, False, False),\n-  ('tb',    0, 16, False, False, False),\n-  ('bcrt',  0, 32, True,  False, False),\n-  ('bc',    0, 16, True,  False, False),\n-  ('tb',    0, 32, False, True,  False),\n-  ('bcrt',  0, 20, False, False, True)\n+  # hrp, version, witprog_size, encoding, invalid_bech32, invalid_checksum, invalid_char\n+  ('tc',    0, 20, Encoding.BECH32,  False, False, False),\n+  ('bt',    1, 32, Encoding.BECH32M, False, False, False),\n+  ('tb',   17, 32, Encoding.BECH32M, False, False, False),\n+  ('bcrt',  3,  1, Encoding.BECH32M, False, False, False),\n+  ('bc',   15, 41, Encoding.BECH32M, False, False, False),\n+  ('tb',    0, 16, Encoding.BECH32,  False, False, False),\n+  ('bcrt',  0, 32, Encoding.BECH32,  True,  False, False),\n+  ('bc',    0, 16, Encoding.BECH32,  True,  False, False),\n+  ('tb',    0, 32, Encoding.BECH32,  False, True,  False),\n+  ('bcrt',  0, 20, Encoding.BECH32,  False, False, True),\n+  ('bc',    0, 20, Encoding.BECH32M, False, False, False),\n+  ('tb',    0, 32, Encoding.BECH32M, False, False, False),\n+  ('bcrt',  0, 20, Encoding.BECH32M, False, False, False),\n+  ('bc',    1, 32, Encoding.BECH32,  False, False, False),\n+  ('tb',    2, 16, Encoding.BECH32,  False, False, False),\n+  ('bcrt', 16, 20, Encoding.BECH32,  False, False, False),\n ]\n \n def is_valid(v):\n@@ -127,8 +147,9 @@ def gen_valid_bech32_vector(template):\n     hrp = template[0]\n     witver = template[1]\n     witprog = bytearray(os.urandom(template[2]))\n-    dst_prefix = bytearray(template[4])\n-    rv = bech32_encode(hrp, [witver] + convertbits(witprog, 8, 5))\n+    encoding = template[4]\n+    dst_prefix = bytearray(template[5])\n+    rv = bech32_encode(encoding, hrp, [witver] + convertbits(witprog, 8, 5))\n     return rv, dst_prefix + witprog\n \n def gen_valid_vectors():\n@@ -186,22 +207,23 @@ def gen_invalid_bech32_vector(template):\n     hrp = template[0]\n     witver = template[1]\n     witprog = bytearray(os.urandom(template[2]))\n+    encoding = template[3]\n \n     if no_data:\n-        rv = bech32_encode(hrp, [])\n+        rv = bech32_encode(encoding, hrp, [])\n     else:\n         data = [witver] + convertbits(witprog, 8, 5)\n-        if template[3] and not no_data:\n+        if template[4] and not no_data:\n             if template[2] % 5 in {2, 4}:\n                 data[-1] |= 1\n             else:\n                 data.append(0)\n-        rv = bech32_encode(hrp, data)\n+        rv = bech32_encode(encoding, hrp, data)\n \n-    if template[4]:\n+    if template[5]:\n         i = len(rv) - random.randrange(1, 7)\n         rv = rv[:i] + random.choice(CHARSET.replace(rv[i], '')) + rv[i + 1:]\n-    if template[5]:\n+    if template[6]:\n         i = len(hrp) + 1 + random.randrange(0, len(rv) - len(hrp) - 4)\n         rv = rv[:i] + rv[i:i + 4].upper() + rv[i + 4:]\n "
      },
      {
        "sha": "c14f90b04b716326df73bf7eba513d4623db2f69",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,3 +4,4 @@\n B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B\n CA03882CB1FC067B5D3ACFE4D300116E1C875A3D\n E777299FC265DD04793070EB944D35F9AC3DB76A\n+D1DBF2C4B96F2DEBF4C16654410108112E7EA81F"
      },
      {
        "sha": "6cbaf2dc0c7c08c4f0a1a28a248162e88a8fee8f",
        "filename": "contrib/verifybinaries/verify.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/verifybinaries/verify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/verifybinaries/verify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -51,7 +51,7 @@ def download_with_wget(remote_file, local_file=None):\n     if local_file:\n         wget_args = ['wget', '-O', local_file, remote_file]\n     else:\n-        # use timestamping mechanism if local filename is not explicitely set\n+        # use timestamping mechanism if local filename is not explicitly set\n         wget_args = ['wget', '-N', remote_file]\n \n     result = subprocess.run(wget_args,\n@@ -85,7 +85,7 @@ def main(args):\n         print(\"Error: need to specify a version on the command line\")\n         return 3\n \n-    # determine remote dir dependend on provided version string\n+    # determine remote dir dependent on provided version string\n     version_base, version_rc, os_filter = parse_version_string(args[0])\n     remote_dir = f\"/bin/{VERSIONPREFIX}{version_base}/\"\n     if version_rc:"
      },
      {
        "sha": "29802e622ed12908cc38404f9e675b50cb3837e2",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -25,7 +25,7 @@ CERTFILE=\"win-codesign.cert\"\n mkdir -p \"${OUTSUBDIR}\"\n basename -a $(ls -1 \"${SRCDIR}\"/*-unsigned.exe) | while read UNSIGNED; do\n   echo Signing \"${UNSIGNED}\"\n-  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n+  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -h sha256 -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n   \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\"\n done\n "
      },
      {
        "sha": "e763df5847875b54e45e5c3b126136782b0145f6",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "modified",
        "additions": 83,
        "deletions": 94,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,100 +1,89 @@\n -----BEGIN CERTIFICATE-----\n-MIIFdDCCBFygAwIBAgIRAL98pqZb/N9LuNaNxKsHNGQwDQYJKoZIhvcNAQELBQAw\n-fDELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMSQwIgYDVQQD\n-ExtTZWN0aWdvIFJTQSBDb2RlIFNpZ25pbmcgQ0EwHhcNMjAwMzI0MDAwMDAwWhcN\n-MjEwMzI0MjM1OTU5WjCBtzELMAkGA1UEBhMCQ0gxDTALBgNVBBEMBDgwMDUxDjAM\n-BgNVBAgMBVN0YXRlMRAwDgYDVQQHDAdaw7xyaWNoMRcwFQYDVQQJDA5NYXR0ZW5n\n-YXNzZSAyNzEuMCwGA1UECgwlQml0Y29pbiBDb3JlIENvZGUgU2lnbmluZyBBc3Nv\n-Y2lhdGlvbjEuMCwGA1UEAwwlQml0Y29pbiBDb3JlIENvZGUgU2lnbmluZyBBc3Nv\n-Y2lhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMtxC8N4r/jE\n-OGOdFy/0UtiUvEczPZf9WYZz/7paAkc75XopHIE5/ssmoEX27gG9K00tf3Q62QAx\n-inZUPWkNTh8X0l+6uSGiIBFIV7dDgztIxnPcxaqw0k7Q2TEqKJvb5qm16zX6WfXJ\n-R2r6O5utUdQ3AarHnQq9fwdM1j5+ywS5u52te74ENgDMTMKUuB2J3KH1ASg5PAtO\n-CjPqPL+ZXJ7eT3M0Z+Lbu5ISZSqZB48BcCwOo/fOO0dAiLT9FE1iVtaCpBKHqGmd\n-glRjPzZdgDv8g28etRmk8wQ5pQmfL2gBjt/LtIgMPTdHHETKLxJO5H3y0CNx1vzL\n-ql7xNMxELxkCAwEAAaOCAbMwggGvMB8GA1UdIwQYMBaAFA7hOqhTOjHVir7Bu61n\n-GgOFrTQOMB0GA1UdDgQWBBSHBbl82FUJiUkXyyYJog1awYRsxjAOBgNVHQ8BAf8E\n-BAMCB4AwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzARBglghkgB\n-hvhCAQEEBAMCBBAwQAYDVR0gBDkwNzA1BgwrBgEEAbIxAQIBAwIwJTAjBggrBgEF\n-BQcCARYXaHR0cHM6Ly9zZWN0aWdvLmNvbS9DUFMwQwYDVR0fBDwwOjA4oDagNIYy\n-aHR0cDovL2NybC5zZWN0aWdvLmNvbS9TZWN0aWdvUlNBQ29kZVNpZ25pbmdDQS5j\n-cmwwcwYIKwYBBQUHAQEEZzBlMD4GCCsGAQUFBzAChjJodHRwOi8vY3J0LnNlY3Rp\n-Z28uY29tL1NlY3RpZ29SU0FDb2RlU2lnbmluZ0NBLmNydDAjBggrBgEFBQcwAYYX\n-aHR0cDovL29jc3Auc2VjdGlnby5jb20wKwYDVR0RBCQwIoEgam9uYXNAYml0Y29p\n-bmNvcmVjb2Rlc2lnbmluZy5vcmcwDQYJKoZIhvcNAQELBQADggEBAAU59qJzQ2ED\n-aTMIQTsU01zIhZJ/xwQh78i0v2Mnr46RvzYrZOev+btF3SyUYD8veNnbYlY6yEYq\n-Vb+/PQnE3t1xlqR80qiTZCk/Wmxx/qKvQuWeRL5QQgvsCmWBpycQ7PNfwzOWxbPE\n-b0Hb2/VFFZfR9iltkfeInRUrzS96CJGYtm7dMf2JtnXYBcwpn1N8BSMH4nXVyN8g\n-VEE5KyjE7+/awYiSST7+e6Y7FE5AJ4f3FjqnRm+2XetTVqITwMLKZMoV283nSEeH\n-fA4FNAMGz9QeV38ol65NNqFP2vSSgVoPK79orqH9OOW2LSobt2qun+euddJIQeYV\n-CMP90b/2WPc=\n+MIIGQzCCBSugAwIBAgIQBSN7Cm16Z0UT9p7lA2jiKDANBgkqhkiG9w0BAQsFADBy\n+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\n+d3cuZGlnaWNlcnQuY29tMTEwLwYDVQQDEyhEaWdpQ2VydCBTSEEyIEFzc3VyZWQg\n+SUQgQ29kZSBTaWduaW5nIENBMB4XDTIxMDUyMTAwMDAwMFoXDTIyMDUyNjIzNTk1\n+OVowgYAxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhEZWxhd2FyZTEOMAwGA1UEBxMF\n+TGV3ZXMxJjAkBgNVBAoTHUJpdGNvaW4gQ29yZSBDb2RlIFNpZ25pbmcgTExDMSYw\n+JAYDVQQDEx1CaXRjb2luIENvcmUgQ29kZSBTaWduaW5nIExMQzCCAiIwDQYJKoZI\n+hvcNAQEBBQADggIPADCCAgoCggIBAKe6xtFgKAQ68MvxwCjNtpgPobfDQCLKvCAN\n+uBKGYuub6ufQB5dhCLN9fjMgfg33AyauvU3PcEUDUWD3/k925bPqgxHC3E7YqoB+\n+11b/2Y7a86okqUgcGgvKhaKoHmXxElpM9EjQHjJ0yL4QAR1Lp+9CMMW3wIulBYKt\n+wLIArFvbuQhMO/6rxL8frpK049v//WfQzB16GXuFnzN/6fDK7oOt5IrKTg4H6EY2\n+fj4+QaUj0lNX7aHnZ6Ki45h2RUPDgN1ipRIuhM67npyZ/tdzPPjI3PUgfXCccN6D\n++qWWnbbbvPuOht4ziPciVnPd57PqJmAOnLI86gisDfd7VKlcpOSEaagdUGvMbU6f\n+uAps818GwnJzwCGllxlKASCgXDAckLLvMuit4RfYAhhdhw5R0AsaWK0HW88oHOqi\n+U7eWlMCbSGk34x9hBrxYl7tvcNcLPWIPYrrhFWNFpkV8bVVIoV5rUNRgWvBcdOq1\n+CCPTfsJp3nEH2WCoBghZquDZLSW12wMw2UsQyEojBeGhrR1inn8uK93wSnVCC8F4\n+21yWNRMNe/LQVhmZDgFOen9r/WijBsBdQw1bL8N4zGdYv8+soqkrWzW417FfSx81\n+pj4j5FEXYXXV5k/4/eBpIARXVRR8xya0nGkhNJmBk0jjDGD8fPW2gFQbqnUwAQ34\n+vOr8NUqHAgMBAAGjggHEMIIBwDAfBgNVHSMEGDAWgBRaxLl7KgqjpepxA8Bg+S32\n+ZXUOWDAdBgNVHQ4EFgQUVSLtZnifEHvd8z3E7AyLYNuDiaMwDgYDVR0PAQH/BAQD\n+AgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMHcGA1UdHwRwMG4wNaAzoDGGL2h0dHA6\n+Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9zaGEyLWFzc3VyZWQtY3MtZzEuY3JsMDWgM6Ax\n+hi9odHRwOi8vY3JsNC5kaWdpY2VydC5jb20vc2hhMi1hc3N1cmVkLWNzLWcxLmNy\n+bDBLBgNVHSAERDBCMDYGCWCGSAGG/WwDATApMCcGCCsGAQUFBwIBFhtodHRwOi8v\n+d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwCAYGZ4EMAQQBMIGEBggrBgEFBQcBAQR4MHYw\n+JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBOBggrBgEFBQcw\n+AoZCaHR0cDovL2NhY2VydHMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0U0hBMkFzc3Vy\n+ZWRJRENvZGVTaWduaW5nQ0EuY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEL\n+BQADggEBAOaJneI91NJgqghUxgc0AWQ01SAJTgN4z7xMQ3W0ZAtwGbA0byT7YRlj\n+j7h+j+hMX/JYkRJETTh8Nalq2tPWJBiMMEPOGFVttFER1pwouHkK9pSKyp4xRvNU\n+L0LPh7fE4EYMJoynys6ZTpMCHLku+X3jFat1+1moh9TJRvK5+ETZYGl0seFNU3mJ\n+dZzusObm4scffIGgi40kmmISKd5ZRuooRTu9FFR/3vpfbA+7Vg4RSH3CcQPo9bfk\n++h/qRQhSfQInTBn7obRpIlvEcK782qivqseJGdtnTmcdVRShD5ckTVza1yv25uQz\n+l/yTqmG2LXlYjl5iMSdF0C1xYq6IsOA=\n -----END CERTIFICATE-----\n -----BEGIN CERTIFICATE-----\n-MIIF3jCCA8agAwIBAgIQAf1tMPyjylGoG7xkDjUDLTANBgkqhkiG9w0BAQwFADCB\n-iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0pl\n-cnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV\n-BAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAw\n-MjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UEBhMCVVMxEzARBgNV\n-BAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU\n-aGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2Vy\n-dGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\n-AoICAQCAEmUXNg7D2wiz0KxXDXbtzSfTTK1Qg2HiqiBNCS1kCdzOiZ/MPans9s/B\n-3PHTsdZ7NygRK0faOca8Ohm0X6a9fZ2jY0K2dvKpOyuR+OJv0OwWIJAJPuLodMkY\n-tJHUYmTbf6MG8YgYapAiPLz+E/CHFHv25B+O1ORRxhFnRghRy4YUVD+8M/5+bJz/\n-Fp0YvVGONaanZshyZ9shZrHUm3gDwFA66Mzw3LyeTP6vBZY1H1dat//O+T23LLb2\n-VN3I5xI6Ta5MirdcmrS3ID3KfyI0rn47aGYBROcBTkZTmzNg95S+UzeQc0PzMsNT\n-79uq/nROacdrjGCT3sTHDN/hMq7MkztReJVni+49Vv4M0GkPGw/zJSZrM233bkf6\n-c0Plfg6lZrEpfDKEY1WJxA3Bk1QwGROs0303p+tdOmw1XNtB1xLaqUkL39iAigmT\n-Yo61Zs8liM2EuLE/pDkP2QKe6xJMlXzzawWpXhaDzLhn4ugTncxbgtNMs+1b/97l\n-c6wjOy0AvzVVdAlJ2ElYGn+SNuZRkg7zJn0cTRe8yexDJtC/QV9AqURE9JnnV4ee\n-UB9XVKg+/XRjL7FQZQnmWEIuQxpMtPAlR1n6BB6T1CZGSlCBst6+eLf8ZxXhyVeE\n-Hg9j1uliutZfVS7qXMYoCAQlObgOK6nyTJccBz8NUvXt7y+CDwIDAQABo0IwQDAd\n-BgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgEGMA8G\n-A1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAFzUfA3P9wF9QZllDHPF\n-Up/L+M+ZBn8b2kMVn54CVVeWFPFSPCeHlCjtHzoBN6J2/FNQwISbxmtOuowhT6KO\n-VWKR82kV2LyI48SqC/3vqOlLVSoGIG1VeCkZ7l8wXEskEVX/JJpuXior7gtNn3/3\n-ATiUFJVDBwn7YKnuHKsSjKCaXqeYalltiz8I+8jRRa8YFWSQEg9zKC7F4iRO/Fjs\n-8PRF/iKz6y+O0tlFYQXBl2+odnKPi4w2r78NBc5xjeambx9spnFixdjQg3IM8WcR\n-iQycE0xyNN+81XHfqnHd4blsjDwSXWXavVcStkNr/+XeTWYRUc+ZruwXtuhxkYze\n-Sf7dNXGiFSeUHM9h4ya7b6NnJSFd5t0dCy5oGzuCr+yDZ4XUmFF0sbmZgIn/f3gZ\n-XHlKYC6SQK5MNyosycdiyA5d9zZbyuAlJQG03RoHnHcAP9Dc1ew91Pq7P8yF1m9/\n-qS3fuQL39ZeatTXaw2ewh0qpKJ4jjv9cJ2vhsE/zB+4ALtRZh8tSQZXq9EfX7mRB\n-VXyNWQKV3WKdwrnuWih0hKWbt5DHDAff9Yk2dDLWKMGwsAvgnEzDHNb842m1R0aB\n-L6KCq9NjRHDEjf8tM7qtj3u1cIiuPhnPQCjY/MiQu12ZIvVS5ljFH4gxQ+6IHdfG\n-jjxDah2nGN59PRbxYvnKkKj9\n+MIIFMDCCBBigAwIBAgIQBAkYG1/Vu2Z1U0O1b5VQCDANBgkqhkiG9w0BAQsFADBl\n+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\n+d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJv\n+b3QgQ0EwHhcNMTMxMDIyMTIwMDAwWhcNMjgxMDIyMTIwMDAwWjByMQswCQYDVQQG\n+EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl\n+cnQuY29tMTEwLwYDVQQDEyhEaWdpQ2VydCBTSEEyIEFzc3VyZWQgSUQgQ29kZSBT\n+aWduaW5nIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+NOzHH8O\n+Ea9ndwfTCzFJGc/Q+0WZsTrbRPV/5aid2zLXcep2nQUut4/6kkPApfmJ1DcZ17aq\n+8JyGpdglrA55KDp+6dFn08b7KSfH03sjlOSRI5aQd4L5oYQjZhJUM1B0sSgmuyRp\n+wsJS8hRniolF1C2ho+mILCCVrhxKhwjfDPXiTWAYvqrEsq5wMWYzcT6scKKrzn/p\n+fMuSoeU7MRzP6vIK5Fe7SrXpdOYr/mzLfnQ5Ng2Q7+S1TqSp6moKq4TzrGdOtcT3\n+jNEgJSPrCGQ+UpbB8g8S9MWOD8Gi6CxR93O8vYWxYoNzQYIH5DiLanMg0A9kczye\n+n6Yzqf0Z3yWT0QIDAQABo4IBzTCCAckwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNV\n+HQ8BAf8EBAMCAYYwEwYDVR0lBAwwCgYIKwYBBQUHAwMweQYIKwYBBQUHAQEEbTBr\n+MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5jb20wQwYIKwYBBQUH\n+MAKGN2h0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJ\n+RFJvb3RDQS5jcnQwgYEGA1UdHwR6MHgwOqA4oDaGNGh0dHA6Ly9jcmw0LmRpZ2lj\n+ZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcmwwOqA4oDaGNGh0dHA6\n+Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcmww\n+TwYDVR0gBEgwRjA4BgpghkgBhv1sAAIEMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v\n+d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwCgYIYIZIAYb9bAMwHQYDVR0OBBYEFFrEuXsq\n+CqOl6nEDwGD5LfZldQ5YMB8GA1UdIwQYMBaAFEXroq/0ksuCMS1Ri6enIZ3zbcgP\n+MA0GCSqGSIb3DQEBCwUAA4IBAQA+7A1aJLPzItEVyCx8JSl2qB1dHC06GsTvMGHX\n+fgtg/cM9D8Svi/3vKt8gVTew4fbRknUPUbRupY5a4l4kgU4QpO4/cY5jDhNLrddf\n+RHnzNhQGivecRk5c/5CxGwcOkRX7uq+1UcKNJK4kxscnKqEpKBo6cSgCPC6Ro8Al\n+EeKcFEehemhor5unXCBc2XGxDI+7qPjFEmifz0DLQESlE/DmZAwlCEIysjaKJAL+\n+L3J+HNdJRZboWR3p+nRka7LrZkPas7CM1ekN3fYBIM6ZMWM9CBoYs4GbT8aTEAb8\n+B4H6i9r5gkn3Ym6hU/oSlBiFLpKR6mhsRDKyZqHnGKSaZFHv\n -----END CERTIFICATE-----\n -----BEGIN CERTIFICATE-----\n-MIIF9TCCA92gAwIBAgIQHaJIMG+bJhjQguCWfTPTajANBgkqhkiG9w0BAQwFADCB\n-iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0pl\n-cnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV\n-BAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTgx\n-MTAyMDAwMDAwWhcNMzAxMjMxMjM1OTU5WjB8MQswCQYDVQQGEwJHQjEbMBkGA1UE\n-CBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRgwFgYDVQQK\n-Ew9TZWN0aWdvIExpbWl0ZWQxJDAiBgNVBAMTG1NlY3RpZ28gUlNBIENvZGUgU2ln\n-bmluZyBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIYijTKFehif\n-SfCWL2MIHi3cfJ8Uz+MmtiVmKUCGVEZ0MWLFEO2yhyemmcuVMMBW9aR1xqkOUGKl\n-UZEQauBLYq798PgYrKf/7i4zIPoMGYmobHutAMNhodxpZW0fbieW15dRhqb0J+V8\n-aouVHltg1X7XFpKcAC9o95ftanK+ODtj3o+/bkxBXRIgCFnoOc2P0tbPBrRXBbZO\n-oT5Xax+YvMRi1hsLjcdmG0qfnYHEckC14l/vC0X/o84Xpi1VsLewvFRqnbyNVlPG\n-8Lp5UEks9wO5/i9lNfIi6iwHr0bZ+UYc3Ix8cSjz/qfGFN1VkW6KEQ3fBiSVfQ+n\n-oXw62oY1YdMCAwEAAaOCAWQwggFgMB8GA1UdIwQYMBaAFFN5v1qqK0rPVIDh2JvA\n-nfKyA2bLMB0GA1UdDgQWBBQO4TqoUzox1Yq+wbutZxoDha00DjAOBgNVHQ8BAf8E\n-BAMCAYYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHSUEFjAUBggrBgEFBQcDAwYI\n-KwYBBQUHAwgwEQYDVR0gBAowCDAGBgRVHSAAMFAGA1UdHwRJMEcwRaBDoEGGP2h0\n-dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9u\n-QXV0aG9yaXR5LmNybDB2BggrBgEFBQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6\n-Ly9jcnQudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAl\n-BggrBgEFBQcwAYYZaHR0cDovL29jc3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0B\n-AQwFAAOCAgEATWNQ7Uc0SmGk295qKoyb8QAAHh1iezrXMsL2s+Bjs/thAIiaG20Q\n-BwRPvrjqiXgi6w9G7PNGXkBGiRL0C3danCpBOvzW9Ovn9xWVM8Ohgyi33i/klPeF\n-M4MtSkBIv5rCT0qxjyT0s4E307dksKYjalloUkJf/wTr4XRleQj1qZPea3FAmZa6\n-ePG5yOLDCBaxq2NayBWAbXReSnV+pbjDbLXP30p5h1zHQE1jNfYw08+1Cg4LBH+g\n-S667o6XQhACTPlNdNKUANWlsvp8gJRANGftQkGG+OY96jk32nw4e/gdREmaDJhlI\n-lc5KycF/8zoFm/lv34h/wCOe0h5DekUxwZxNqfBZslkZ6GqNKQQCd3xLS81wvjqy\n-VVp4Pry7bwMQJXcVNIr5NsxDkuS6T/FikyglVyn7URnHoSVAaoRXxrKdsbwcCtp8\n-Z359LukoTBh+xHsxQXGaSynsCz1XUNLK3f2eBVHlRHjdAd6xdZgNVCT98E7j4viD\n-vXK6yz067vBeF5Jobchh+abxKgoLpbn0nu6YMgWFnuv5gynTxix9vTp3Los3QqBq\n-gu07SqqUEKThDfgXxbZaeTMYkuO1dfih6Y4KJR7kHvGfWocj/5+kUZ77OYARzdu1\n-xKeogG/lU9Tg46LC0lsa+jImLWpXcBw8pFguo/NbSwfcMlnzh6cabVg=\n+MIIDtzCCAp+gAwIBAgIQDOfg5RfYRv6P5WD8G/AwOTANBgkqhkiG9w0BAQUFADBl\n+MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\n+d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJv\n+b3QgQ0EwHhcNMDYxMTEwMDAwMDAwWhcNMzExMTEwMDAwMDAwWjBlMQswCQYDVQQG\n+EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl\n+cnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwggEi\n+MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtDhXO5EOAXLGH87dg+XESpa7c\n+JpSIqvTO9SA5KFhgDPiA2qkVlTJhPLWxKISKityfCgyDF3qPkKyK53lTXDGEKvYP\n+mDI2dsze3Tyoou9q+yHyUmHfnyDXH+Kx2f4YZNISW1/5WBg1vEfNoTb5a3/UsDg+\n+wRvDjDPZ2C8Y/igPs6eD1sNuRMBhNZYW/lmci3Zt1/GiSw0r/wty2p5g0I6QNcZ4\n+VYcgoc/lbQrISXwxmDNsIumH0DJaoroTghHtORedmTpyoeb6pNnVFzF1roV9Iq4/\n+AUaG9ih5yLHa5FcXxH4cDrC0kqZWs72yl+2qp/C3xag/lRbQ/6GW6whfGHdPAgMB\n+AAGjYzBhMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\n+BBRF66Kv9JLLgjEtUYunpyGd823IDzAfBgNVHSMEGDAWgBRF66Kv9JLLgjEtUYun\n+pyGd823IDzANBgkqhkiG9w0BAQUFAAOCAQEAog683+Lt8ONyc3pklL/3cmbYMuRC\n+dWKuh+vy1dneVrOfzM4UKLkNl2BcEkxY5NM9g0lFWJc1aRqoR+pWxnmrEthngYTf\n+fwk8lOa4JiwgvT2zKIn3X/8i4peEH+ll74fg38FnSbNd67IJKusm7Xi+fT8r87cm\n+NW1fiQG2SVufAQWbqz0lwcy2f8Lxb4bG+mRo64EtlOtCt/qMHt1i8b5QZ7dsvfPx\n+H2sMNgcWfzd8qVttevESRmCD1ycEvkvOl77DZypoEd+A5wwzZr8TDRRu838fYxAe\n++o0bJW1sj6W3YQGx0qMmoRBxna3iw/nDmVG3KwcIzi7mULKn+gpFL6Lw8g==\n -----END CERTIFICATE-----\n+"
      },
      {
        "sha": "ac12e91e491eeea15180024147d8258ee854ec60",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 30,
        "deletions": 21,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2,7 +2,7 @@\n \n # Pattern rule to print variables, e.g. make print-top_srcdir\n print-%:\n-\t@echo $* = $($*)\n+\t@echo '$*'='$($*)'\n \n # When invoking a sub-make, keep only the command line variable definitions\n # matching the pattern in the filter function.\n@@ -34,6 +34,8 @@ BASE_CACHE ?= $(BASEDIR)/built\n SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n NO_QR ?=\n+NO_BDB ?=\n+NO_SQLITE ?=\n NO_WALLET ?=\n NO_ZMQ ?=\n NO_UPNP ?=\n@@ -112,26 +114,31 @@ include builders/$(build_os).mk\n include builders/default.mk\n include packages/packages.mk\n \n-build_id_string:=$(BUILD_ID_SALT)\n-build_id_string+=$(shell $(build_CC) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_AR) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)\n-\n-$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n-\n-ifneq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n-# Make sure that cache is invalidated when switching between system and\n-# depends-managed, pinned clang\n-build_id_string+=system_clang\n-$(host_arch)_$(host_os)_id_string+=system_clang\n-endif\n+# Previously, we directly invoked the well-known programs using $(shell ...)\n+# to contruct build_id_string. However, that was problematic because:\n+#\n+# 1. When invoking a shell, GNU Make special-cases exit code 127 (command not\n+#    found) by not capturing the output but instead passing it through. This is\n+#    not done for any other exit code.\n+#\n+# 2. Characters like '#' (from these programs' output) would end up in make\n+#    variables like build_id_string, which would be wrongly interpreted by make\n+#    when these variables were used.\n+#\n+# Therefore, we should avoid having arbitrary strings in make variables where\n+# possible. The gen_id script used here hashes the output to construct a\n+# \"make-safe\" id.\n+#\n+# Also note that these lines need to be:\n+#\n+#     1. After including {hosts,builders}/*.mk, since they rely on the tool\n+#        variables (e.g. build_CC, host_STRIP, etc.) to be set.\n+#\n+#     2. Before including packages/*.mk (excluding packages/packages.mk), since\n+#        they rely on the build_id variables\n+#\n+build_id:=$(shell env CC='$(build_CC)' CXX='$(build_CXX)' AR='$(build_AR)' RANLIB='$(build_RANLIB)' STRIP='$(build_STRIP)' SHA256SUM='$(build_SHA256SUM)' DEBUG='$(DEBUG)' ./gen_id '$(BUILD_ID_SALT)' 'GUIX_ENVIRONMENT=$(realpath $(GUIX_ENVIRONMENT))')\n+$(host_arch)_$(host_os)_id:=$(shell env CC='$(host_CC)' CXX='$(host_CXX)' AR='$(host_AR)' RANLIB='$(host_RANLIB)' STRIP='$(host_STRIP)' SHA256SUM='$(build_SHA256SUM)' DEBUG='$(DEBUG)' ./gen_id '$(HOST_ID_SALT)' 'GUIX_ENVIRONMENT=$(realpath $(GUIX_ENVIRONMENT))')\n \n qrencode_packages_$(NO_QR) = $(qrencode_packages)\n \n@@ -222,6 +229,8 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@no_qr@|$(NO_QR)|' \\\n             -e 's|@no_zmq@|$(NO_ZMQ)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n+            -e 's|@no_bdb@|$(NO_BDB)|' \\\n+            -e 's|@no_sqlite@|$(NO_SQLITE)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\\n             -e 's|@no_natpmp@|$(NO_NATPMP)|' \\\n             -e 's|@multiprocess@|$(MULTIPROCESS)|' \\"
      },
      {
        "sha": "50e1a32c706338d6990f7de722a2d060d0d08158",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,15 +12,18 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's configure script by default will ignore the depends output.** In\n+**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must point it at the appropriate `--prefix` directory generated by the\n-build. In the above example, a prefix dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n+created. To use it during compilation:\n \n-    ./configure --prefix=$PWD/depends/x86_64-w64-mingw32\n+    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n \n-Common `host-platform-triplets` for cross compilation are:\n+The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n+so depends build outputs will be installed in that location.\n+\n+Common `host-platform-triplet`s for cross compilation are:\n \n - `i686-pc-linux-gnu` for Linux 32 bit\n - `x86_64-pc-linux-gnu` for x86 Linux\n@@ -44,7 +47,12 @@ The paths are automatically configured and no other options are needed unless ta\n \n #### For macOS cross compilation\n \n-    sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python3-setuptools libtinfo5 xorriso\n+    sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libz-dev python3-setuptools libtinfo5 xorriso\n+\n+Note: You must obtain the macOS SDK before proceeding with a cross-compile.\n+Under the depends directory, create a subdirectory named `SDKs`.\n+Then, place the extracted SDK under this new directory.\n+For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-extraction).\n \n #### For Win64 cross compilation\n \n@@ -54,7 +62,7 @@ The paths are automatically configured and no other options are needed unless ta\n \n Common linux dependencies:\n \n-    sudo apt-get install make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch\n+    sudo apt-get install make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch bison\n \n For linux ARM cross compilation:\n \n@@ -133,4 +141,3 @@ This is an example command for a default build with no disabled dependencies:\n \n - [description.md](description.md): General description of the depends system\n - [packages.md](packages.md): Steps for adding packages\n-"
      },
      {
        "sha": "001c92842425178768c4cb64cb94c88a4b15f123",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,5 +1,5 @@\n-build_darwin_CC:=$(shell xcrun -f clang) --sysroot $(shell xcrun --show-sdk-path)\n-build_darwin_CXX:=$(shell xcrun -f clang++) --sysroot $(shell xcrun --show-sdk-path)\n+build_darwin_CC:=$(shell xcrun -f clang) -isysroot$(shell xcrun --show-sdk-path)\n+build_darwin_CXX:=$(shell xcrun -f clang++) -isysroot$(shell xcrun --show-sdk-path)\n build_darwin_AR:=$(shell xcrun -f ar)\n build_darwin_RANLIB:=$(shell xcrun -f ranlib)\n build_darwin_STRIP:=$(shell xcrun -f strip)\n@@ -10,8 +10,8 @@ build_darwin_SHA256SUM=shasum -a 256\n build_darwin_DOWNLOAD=curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n \n #darwin host on darwin builder. overrides darwin host preferences.\n-darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(shell xcrun --show-sdk-path)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++ --sysroot $(shell xcrun --show-sdk-path)\n+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION) -isysroot$(shell xcrun --show-sdk-path)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++ -isysroot$(shell xcrun --show-sdk-path)\n darwin_AR:=$(shell xcrun -f ar)\n darwin_RANLIB:=$(shell xcrun -f ranlib)\n darwin_STRIP:=$(shell xcrun -f strip)"
      },
      {
        "sha": "dc0a6b29976a9990ef412d3c5fd696ac2641ae0b",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 183,
        "deletions": 146,
        "changes": 329,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2019 Free Software Foundation, Inc.\n+#   Copyright 1992-2021 Free Software Foundation, Inc.\n \n-timestamp='2019-09-10'\n+timestamp='2021-05-24'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -27,12 +27,12 @@ timestamp='2019-09-10'\n # Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n #\n # You can get the latest version of this script from:\n-# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n #\n # Please send patches to <config-patches@gnu.org>.\n \n \n-me=`echo \"$0\" | sed -e 's,.*/,,'`\n+me=$(echo \"$0\" | sed -e 's,.*/,,')\n \n usage=\"\\\n Usage: $0 [OPTION]\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2019 Free Software Foundation, Inc.\n+Copyright 1992-2021 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -99,9 +99,11 @@ tmp=\n trap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n \n set_cc_for_build() {\n+    # prevent multiple calls if $tmp is already set\n+    test \"$tmp\" && return 0\n     : \"${TMPDIR=/tmp}\"\n     # shellcheck disable=SC2039\n-    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+    { tmp=$( (umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null) && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n \t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n \t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n \t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n@@ -129,16 +131,14 @@ if test -f /.attbin/uname ; then\n \tPATH=$PATH:/.attbin ; export PATH\n fi\n \n-UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n-UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n-UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n-UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+UNAME_MACHINE=$( (uname -m) 2>/dev/null) || UNAME_MACHINE=unknown\n+UNAME_RELEASE=$( (uname -r) 2>/dev/null) || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=$( (uname -s) 2>/dev/null) || UNAME_SYSTEM=unknown\n+UNAME_VERSION=$( (uname -v) 2>/dev/null) || UNAME_VERSION=unknown\n \n-case \"$UNAME_SYSTEM\" in\n+case $UNAME_SYSTEM in\n Linux|GNU|GNU/*)\n-\t# If the system lacks a compiler, then just pick glibc.\n-\t# We could probably try harder.\n-\tLIBC=gnu\n+\tLIBC=unknown\n \n \tset_cc_for_build\n \tcat <<-EOF > \"$dummy.c\"\n@@ -147,24 +147,36 @@ Linux|GNU|GNU/*)\n \tLIBC=uclibc\n \t#elif defined(__dietlibc__)\n \tLIBC=dietlibc\n-\t#else\n+\t#elif defined(__GLIBC__)\n \tLIBC=gnu\n+\t#else\n+\t#include <stdarg.h>\n+\t/* First heuristic to detect musl libc.  */\n+\t#ifdef __DEFINED_va_list\n+\tLIBC=musl\n+\t#endif\n \t#endif\n \tEOF\n-\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\"\n+\teval \"$($CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g')\"\n \n-\t# If ldd exists, use it to detect musl libc.\n-\tif command -v ldd >/dev/null && \\\n-\t\tldd --version 2>&1 | grep -q ^musl\n-\tthen\n-\t    LIBC=musl\n+\t# Second heuristic to detect musl libc.\n+\tif [ \"$LIBC\" = unknown ] &&\n+\t   command -v ldd >/dev/null &&\n+\t   ldd --version 2>&1 | grep -q ^musl; then\n+\t\tLIBC=musl\n+\tfi\n+\n+\t# If the system lacks a compiler, then just pick glibc.\n+\t# We could probably try harder.\n+\tif [ \"$LIBC\" = unknown ]; then\n+\t\tLIBC=gnu\n \tfi\n \t;;\n esac\n \n # Note: order is significant - the case branches are not exclusive.\n \n-case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n+case $UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION in\n     *:NetBSD:*:*)\n \t# NetBSD (nbsd) targets should (where applicable) match one or\n \t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n@@ -176,27 +188,27 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t#\n \t# Note: NetBSD doesn't particularly care about the vendor\n \t# portion of the name.  We always set it to \"unknown\".\n-\tsysctl=\"sysctl -n hw.machine_arch\"\n-\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n-\t    \"/sbin/$sysctl\" 2>/dev/null || \\\n-\t    \"/usr/sbin/$sysctl\" 2>/dev/null || \\\n-\t    echo unknown)`\n-\tcase \"$UNAME_MACHINE_ARCH\" in\n+\tUNAME_MACHINE_ARCH=$( (uname -p 2>/dev/null || \\\n+\t    /sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n+\t    /usr/sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n+\t    echo unknown))\n+\tcase $UNAME_MACHINE_ARCH in\n+\t    aarch64eb) machine=aarch64_be-unknown ;;\n \t    armeb) machine=armeb-unknown ;;\n \t    arm*) machine=arm-unknown ;;\n \t    sh3el) machine=shl-unknown ;;\n \t    sh3eb) machine=sh-unknown ;;\n \t    sh5el) machine=sh5le-unknown ;;\n \t    earmv*)\n-\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n-\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n+\t\tarch=$(echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,')\n+\t\tendian=$(echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p')\n \t\tmachine=\"${arch}${endian}\"-unknown\n \t\t;;\n \t    *) machine=\"$UNAME_MACHINE_ARCH\"-unknown ;;\n \tesac\n \t# The Operating System including object format, if it has switched\n \t# to ELF recently (or will in the future) and ABI.\n-\tcase \"$UNAME_MACHINE_ARCH\" in\n+\tcase $UNAME_MACHINE_ARCH in\n \t    earm*)\n \t\tos=netbsdelf\n \t\t;;\n@@ -217,23 +229,23 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t\t;;\n \tesac\n \t# Determine ABI tags.\n-\tcase \"$UNAME_MACHINE_ARCH\" in\n+\tcase $UNAME_MACHINE_ARCH in\n \t    earm*)\n \t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n-\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n+\t\tabi=$(echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\")\n \t\t;;\n \tesac\n \t# The OS release\n \t# Debian GNU/NetBSD machines have a different userland, and\n \t# thus, need a distinct triplet. However, they do not need\n \t# kernel version information, so it can be replaced with a\n \t# suitable tag, in the style of linux-gnu.\n-\tcase \"$UNAME_VERSION\" in\n+\tcase $UNAME_VERSION in\n \t    Debian*)\n \t\trelease='-gnu'\n \t\t;;\n \t    *)\n-\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n+\t\trelease=$(echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2)\n \t\t;;\n \tesac\n \t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n@@ -242,15 +254,19 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo \"$machine-${os}${release}${abi-}\"\n \texit ;;\n     *:Bitrig:*:*)\n-\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n+\tUNAME_MACHINE_ARCH=$(arch | sed 's/Bitrig.//')\n \techo \"$UNAME_MACHINE_ARCH\"-unknown-bitrig\"$UNAME_RELEASE\"\n \texit ;;\n     *:OpenBSD:*:*)\n-\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n+\tUNAME_MACHINE_ARCH=$(arch | sed 's/OpenBSD.//')\n \techo \"$UNAME_MACHINE_ARCH\"-unknown-openbsd\"$UNAME_RELEASE\"\n \texit ;;\n+    *:SecBSD:*:*)\n+\tUNAME_MACHINE_ARCH=$(arch | sed 's/SecBSD.//')\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-secbsd\"$UNAME_RELEASE\"\n+\texit ;;\n     *:LibertyBSD:*:*)\n-\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n+\tUNAME_MACHINE_ARCH=$(arch | sed 's/^.*BSD\\.//')\n \techo \"$UNAME_MACHINE_ARCH\"-unknown-libertybsd\"$UNAME_RELEASE\"\n \texit ;;\n     *:MidnightBSD:*:*)\n@@ -284,20 +300,22 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo mips-dec-osf1\n \texit ;;\n     alpha:OSF1:*:*)\n+\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n+\ttrap '' 0\n \tcase $UNAME_RELEASE in\n \t*4.0)\n-\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n+\t\tUNAME_RELEASE=$(/usr/sbin/sizer -v | awk '{print $3}')\n \t\t;;\n \t*5.*)\n-\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n+\t\tUNAME_RELEASE=$(/usr/sbin/sizer -v | awk '{print $4}')\n \t\t;;\n \tesac\n \t# According to Compaq, /usr/sbin/psrinfo has been available on\n \t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n \t# covers most systems running today.  This code pipes the CPU\n \t# types through head -n 1, so we only detect the type of CPU 0.\n-\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n-\tcase \"$ALPHA_CPU_TYPE\" in\n+\tALPHA_CPU_TYPE=$(/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1)\n+\tcase $ALPHA_CPU_TYPE in\n \t    \"EV4 (21064)\")\n \t\tUNAME_MACHINE=alpha ;;\n \t    \"EV4.5 (21064)\")\n@@ -334,11 +352,8 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t# A Tn.n version is a released field test version.\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n-\techo \"$UNAME_MACHINE\"-dec-osf\"`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\"\n-\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n-\texitcode=$?\n-\ttrap '' 0\n-\texit $exitcode ;;\n+\techo \"$UNAME_MACHINE\"-dec-osf\"$(echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz)\"\n+\texit ;;\n     Amiga*:UNIX_System_V:4.0:*)\n \techo m68k-unknown-sysv4\n \texit ;;\n@@ -368,7 +383,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \texit ;;\n     Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n \t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n-\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\tif test \"$( (/bin/universe) 2>/dev/null)\" = att ; then\n \t\techo pyramid-pyramid-sysv3\n \telse\n \t\techo pyramid-pyramid-bsd\n@@ -381,17 +396,17 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo sparc-icl-nx6\n \texit ;;\n     DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n-\tcase `/usr/bin/uname -p` in\n+\tcase $(/usr/bin/uname -p) in\n \t    sparc) echo sparc-icl-nx7; exit ;;\n \tesac ;;\n     s390x:SunOS:*:*)\n-\techo \"$UNAME_MACHINE\"-ibm-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n+\techo \"$UNAME_MACHINE\"-ibm-solaris2\"$(echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//')\"\n \texit ;;\n     sun4H:SunOS:5.*:*)\n-\techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\techo sparc-hal-solaris2\"$(echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//')\"\n \texit ;;\n     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n-\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n+\techo sparc-sun-solaris2\"$(echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//')\"\n \texit ;;\n     i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n \techo i386-pc-auroraux\"$UNAME_RELEASE\"\n@@ -402,38 +417,38 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n \t# This test works for both compilers.\n-\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n \t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n \t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\tgrep IS_64BIT_ARCH >/dev/null\n \t    then\n \t\tSUN_ARCH=x86_64\n \t    fi\n \tfi\n-\techo \"$SUN_ARCH\"-pc-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\techo \"$SUN_ARCH\"-pc-solaris2\"$(echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//')\"\n \texit ;;\n     sun4*:SunOS:6*:*)\n \t# According to config.sub, this is the proper way to canonicalize\n \t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n \t# it's likely to be more like Solaris than SunOS4.\n-\techo sparc-sun-solaris3\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\techo sparc-sun-solaris3\"$(echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//')\"\n \texit ;;\n     sun4*:SunOS:*:*)\n-\tcase \"`/usr/bin/arch -k`\" in\n+\tcase $(/usr/bin/arch -k) in\n \t    Series*|S4*)\n-\t\tUNAME_RELEASE=`uname -v`\n+\t\tUNAME_RELEASE=$(uname -v)\n \t\t;;\n \tesac\n \t# Japanese Language versions have a version number like `4.1.3-JL'.\n-\techo sparc-sun-sunos\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/'`\"\n+\techo sparc-sun-sunos\"$(echo \"$UNAME_RELEASE\"|sed -e 's/-/_/')\"\n \texit ;;\n     sun3*:SunOS:*:*)\n \techo m68k-sun-sunos\"$UNAME_RELEASE\"\n \texit ;;\n     sun*:*:4.2BSD:*)\n-\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\tUNAME_RELEASE=$( (sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null)\n \ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n-\tcase \"`/bin/arch`\" in\n+\tcase $(/bin/arch) in\n \t    sun3)\n \t\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n \t\t;;\n@@ -513,8 +528,8 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t}\n EOF\n \t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n-\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n-\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n+\t  dummyarg=$(echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p') &&\n+\t  SYSTEM_NAME=$(\"$dummy\" \"$dummyarg\") &&\n \t    { echo \"$SYSTEM_NAME\"; exit; }\n \techo mips-mips-riscos\"$UNAME_RELEASE\"\n \texit ;;\n@@ -541,11 +556,11 @@ EOF\n \texit ;;\n     AViiON:dgux:*:*)\n \t# DG/UX returns AViiON for all architectures\n-\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tif [ \"$UNAME_PROCESSOR\" = mc88100 ] || [ \"$UNAME_PROCESSOR\" = mc88110 ]\n+\tUNAME_PROCESSOR=$(/usr/bin/uname -p)\n+\tif test \"$UNAME_PROCESSOR\" = mc88100 || test \"$UNAME_PROCESSOR\" = mc88110\n \tthen\n-\t    if [ \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx ] || \\\n-\t       [ \"$TARGET_BINARY_INTERFACE\"x = x ]\n+\t    if test \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx || \\\n+\t       test \"$TARGET_BINARY_INTERFACE\"x = x\n \t    then\n \t\techo m88k-dg-dgux\"$UNAME_RELEASE\"\n \t    else\n@@ -569,17 +584,17 @@ EOF\n \techo m68k-tektronix-bsd\n \texit ;;\n     *:IRIX*:*:*)\n-\techo mips-sgi-irix\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/g'`\"\n+\techo mips-sgi-irix\"$(echo \"$UNAME_RELEASE\"|sed -e 's/-/_/g')\"\n \texit ;;\n     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n \techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n-\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+\texit ;;               # Note that: echo \"'$(uname -s)'\" gives 'AIX '\n     i*86:AIX:*:*)\n \techo i386-ibm-aix\n \texit ;;\n     ia64:AIX:*:*)\n-\tif [ -x /usr/bin/oslevel ] ; then\n-\t\tIBM_REV=`/usr/bin/oslevel`\n+\tif test -x /usr/bin/oslevel ; then\n+\t\tIBM_REV=$(/usr/bin/oslevel)\n \telse\n \t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n \tfi\n@@ -599,7 +614,7 @@ EOF\n \t\t\texit(0);\n \t\t\t}\n EOF\n-\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n+\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=$(\"$dummy\")\n \t\tthen\n \t\t\techo \"$SYSTEM_NAME\"\n \t\telse\n@@ -612,15 +627,15 @@ EOF\n \tfi\n \texit ;;\n     *:AIX:*:[4567])\n-\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n+\tIBM_CPU_ID=$(/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }')\n \tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n \t\tIBM_ARCH=rs6000\n \telse\n \t\tIBM_ARCH=powerpc\n \tfi\n-\tif [ -x /usr/bin/lslpp ] ; then\n-\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n-\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n+\tif test -x /usr/bin/lslpp ; then\n+\t\tIBM_REV=$(/usr/bin/lslpp -Lqc bos.rte.libc |\n+\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/)\n \telse\n \t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n \tfi\n@@ -648,26 +663,26 @@ EOF\n \techo m68k-hp-bsd4.4\n \texit ;;\n     9000/[34678]??:HP-UX:*:*)\n-\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n-\tcase \"$UNAME_MACHINE\" in\n+\tHPUX_REV=$(echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//')\n+\tcase $UNAME_MACHINE in\n \t    9000/31?)            HP_ARCH=m68000 ;;\n \t    9000/[34]??)         HP_ARCH=m68k ;;\n \t    9000/[678][0-9][0-9])\n-\t\tif [ -x /usr/bin/getconf ]; then\n-\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n-\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n-\t\t    case \"$sc_cpu_version\" in\n+\t\tif test -x /usr/bin/getconf; then\n+\t\t    sc_cpu_version=$(/usr/bin/getconf SC_CPU_VERSION 2>/dev/null)\n+\t\t    sc_kernel_bits=$(/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null)\n+\t\t    case $sc_cpu_version in\n \t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n \t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n \t\t      532)                      # CPU_PA_RISC2_0\n-\t\t\tcase \"$sc_kernel_bits\" in\n+\t\t\tcase $sc_kernel_bits in\n \t\t\t  32) HP_ARCH=hppa2.0n ;;\n \t\t\t  64) HP_ARCH=hppa2.0w ;;\n \t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n \t\t\tesac ;;\n \t\t    esac\n \t\tfi\n-\t\tif [ \"$HP_ARCH\" = \"\" ]; then\n+\t\tif test \"$HP_ARCH\" = \"\"; then\n \t\t    set_cc_for_build\n \t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n \n@@ -702,11 +717,11 @@ EOF\n \t\t    exit (0);\n \t\t}\n EOF\n-\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=$(\"$dummy\")\n \t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n \t\tfi ;;\n \tesac\n-\tif [ \"$HP_ARCH\" = hppa2.0w ]\n+\tif test \"$HP_ARCH\" = hppa2.0w\n \tthen\n \t    set_cc_for_build\n \n@@ -730,7 +745,7 @@ EOF\n \techo \"$HP_ARCH\"-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     ia64:HP-UX:*:*)\n-\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n+\tHPUX_REV=$(echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//')\n \techo ia64-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     3050*:HI-UX:*:*)\n@@ -760,7 +775,7 @@ EOF\n \t  exit (0);\n \t}\n EOF\n-\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n+\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=$(\"$dummy\") &&\n \t\t{ echo \"$SYSTEM_NAME\"; exit; }\n \techo unknown-hitachi-hiuxwe2\n \texit ;;\n@@ -780,7 +795,7 @@ EOF\n \techo hppa1.0-hp-osf\n \texit ;;\n     i*86:OSF1:*:*)\n-\tif [ -x /usr/sbin/sysversion ] ; then\n+\tif test -x /usr/sbin/sysversion ; then\n \t    echo \"$UNAME_MACHINE\"-unknown-osf1mk\n \telse\n \t    echo \"$UNAME_MACHINE\"-unknown-osf1\n@@ -829,14 +844,14 @@ EOF\n \techo craynv-cray-unicosmp\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n-\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n-\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n+\tFUJITSU_PROC=$(uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz)\n+\tFUJITSU_SYS=$(uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///')\n+\tFUJITSU_REL=$(echo \"$UNAME_RELEASE\" | sed -e 's/ /_/')\n \techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     5000:UNIX_System_V:4.*:*)\n-\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n+\tFUJITSU_SYS=$(uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///')\n+\tFUJITSU_REL=$(echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/')\n \techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n@@ -849,25 +864,25 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n     arm:FreeBSD:*:*)\n-\tUNAME_PROCESSOR=`uname -p`\n+\tUNAME_PROCESSOR=$(uname -p)\n \tset_cc_for_build\n \tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t    | grep -q __ARM_PCS_VFP\n \tthen\n-\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabi\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"$(echo ${UNAME_RELEASE}|sed -e 's/[-(].*//')\"-gnueabi\n \telse\n-\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabihf\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"$(echo ${UNAME_RELEASE}|sed -e 's/[-(].*//')\"-gnueabihf\n \tfi\n \texit ;;\n     *:FreeBSD:*:*)\n-\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tcase \"$UNAME_PROCESSOR\" in\n+\tUNAME_PROCESSOR=$(/usr/bin/uname -p)\n+\tcase $UNAME_PROCESSOR in\n \t    amd64)\n \t\tUNAME_PROCESSOR=x86_64 ;;\n \t    i386)\n \t\tUNAME_PROCESSOR=i586 ;;\n \tesac\n-\techo \"$UNAME_PROCESSOR\"-unknown-freebsd\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n+\techo \"$UNAME_PROCESSOR\"-unknown-freebsd\"$(echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//')\"\n \texit ;;\n     i*:CYGWIN*:*)\n \techo \"$UNAME_MACHINE\"-pc-cygwin\n@@ -885,7 +900,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-pc-pw32\n \texit ;;\n     *:Interix*:*)\n-\tcase \"$UNAME_MACHINE\" in\n+\tcase $UNAME_MACHINE in\n \t    x86)\n \t\techo i586-pc-interix\"$UNAME_RELEASE\"\n \t\texit ;;\n@@ -903,15 +918,15 @@ EOF\n \techo x86_64-pc-cygwin\n \texit ;;\n     prep*:SunOS:5.*:*)\n-\techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\techo powerpcle-unknown-solaris2\"$(echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//')\"\n \texit ;;\n     *:GNU:*:*)\n \t# the GNU system\n-\techo \"`echo \"$UNAME_MACHINE\"|sed -e 's,[-/].*$,,'`-unknown-$LIBC`echo \"$UNAME_RELEASE\"|sed -e 's,/.*$,,'`\"\n+\techo \"$(echo \"$UNAME_MACHINE\"|sed -e 's,[-/].*$,,')-unknown-$LIBC$(echo \"$UNAME_RELEASE\"|sed -e 's,/.*$,,')\"\n \texit ;;\n     *:GNU/*:*:*)\n \t# other systems with GNU libc and userland\n-\techo \"$UNAME_MACHINE-unknown-`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`-$LIBC\"\n+\techo \"$UNAME_MACHINE-unknown-$(echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\")$(echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//')-$LIBC\"\n \texit ;;\n     *:Minix:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-minix\n@@ -924,7 +939,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     alpha:Linux:*:*)\n-\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n+\tcase $(sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' /proc/cpuinfo 2>/dev/null) in\n \t  EV5)   UNAME_MACHINE=alphaev5 ;;\n \t  EV56)  UNAME_MACHINE=alphaev56 ;;\n \t  PCA56) UNAME_MACHINE=alphapca56 ;;\n@@ -937,7 +952,7 @@ EOF\n \tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n-    arc:Linux:*:* | arceb:Linux:*:*)\n+    arc:Linux:*:* | arceb:Linux:*:* | arc64:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     arm*:Linux:*:*)\n@@ -983,6 +998,9 @@ EOF\n     k1om:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n+    loongarch32:Linux:*:* | loongarch64:Linux:*:* | loongarchx32:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n     m32r*:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n@@ -1033,7 +1051,7 @@ EOF\n \t#endif\n \t#endif\n EOF\n-\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\"\n+\teval \"$($CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI')\"\n \ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n \t;;\n     mips64el:Linux:*:*)\n@@ -1053,7 +1071,7 @@ EOF\n \texit ;;\n     parisc:Linux:*:* | hppa:Linux:*:*)\n \t# Look for CPU level\n-\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n+\tcase $(grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2) in\n \t  PA7*) echo hppa1.1-unknown-linux-\"$LIBC\" ;;\n \t  PA8*) echo hppa2.0-unknown-linux-\"$LIBC\" ;;\n \t  *)    echo hppa-unknown-linux-\"$LIBC\" ;;\n@@ -1071,7 +1089,7 @@ EOF\n     ppcle:Linux:*:*)\n \techo powerpcle-unknown-linux-\"$LIBC\"\n \texit ;;\n-    riscv32:Linux:*:* | riscv64:Linux:*:*)\n+    riscv32:Linux:*:* | riscv32be:Linux:*:* | riscv64:Linux:*:* | riscv64be:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     s390:Linux:*:* | s390x:Linux:*:*)\n@@ -1093,7 +1111,17 @@ EOF\n \techo \"$UNAME_MACHINE\"-dec-linux-\"$LIBC\"\n \texit ;;\n     x86_64:Linux:*:*)\n-\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n+\tset_cc_for_build\n+\tLIBCABI=$LIBC\n+\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n+\t    if (echo '#ifdef __ILP32__'; echo IS_X32; echo '#endif') | \\\n+\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\tgrep IS_X32 >/dev/null\n+\t    then\n+\t\tLIBCABI=\"$LIBC\"x32\n+\t    fi\n+\tfi\n+\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBCABI\"\n \texit ;;\n     xtensa*:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n@@ -1133,7 +1161,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-pc-msdosdjgpp\n \texit ;;\n     i*86:*:4.*:*)\n-\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n+\tUNAME_REL=$(echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//')\n \tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n \t\techo \"$UNAME_MACHINE\"-univel-sysv\"$UNAME_REL\"\n \telse\n@@ -1142,7 +1170,7 @@ EOF\n \texit ;;\n     i*86:*:5:[678]*)\n \t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n-\tcase `/bin/uname -X | grep \"^Machine\"` in\n+\tcase $(/bin/uname -X | grep \"^Machine\") in\n \t    *486*)\t     UNAME_MACHINE=i486 ;;\n \t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n \t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n@@ -1151,10 +1179,10 @@ EOF\n \texit ;;\n     i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n-\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\tUNAME_REL=$(sed -n 's/.*Version //p' </usr/options/cb.name)\n \t\techo \"$UNAME_MACHINE\"-pc-isc\"$UNAME_REL\"\n \telif /bin/uname -X 2>/dev/null >/dev/null ; then\n-\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n+\t\tUNAME_REL=$( (/bin/uname -X|grep Release|sed -e 's/.*= //'))\n \t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n \t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n \t\t\t&& UNAME_MACHINE=i586\n@@ -1204,7 +1232,7 @@ EOF\n     3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n \tOS_REL=''\n \ttest -r /etc/.relid \\\n-\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t&& OS_REL=.$(sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid)\n \t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n \t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n \t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n@@ -1215,7 +1243,7 @@ EOF\n     NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n \tOS_REL='.3'\n \ttest -r /etc/.relid \\\n-\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t    && OS_REL=.$(sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid)\n \t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n \t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n \t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n@@ -1248,7 +1276,7 @@ EOF\n \texit ;;\n     *:SINIX-*:*:*)\n \tif uname -p 2>/dev/null >/dev/null ; then\n-\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\tUNAME_MACHINE=$( (uname -p) 2>/dev/null)\n \t\techo \"$UNAME_MACHINE\"-sni-sysv4\n \telse\n \t\techo ns32k-sni-sysv\n@@ -1282,7 +1310,7 @@ EOF\n \techo mips-sony-newsos6\n \texit ;;\n     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n-\tif [ -d /usr/nec ]; then\n+\tif test -d /usr/nec; then\n \t\techo mips-nec-sysv\"$UNAME_RELEASE\"\n \telse\n \t\techo mips-unknown-sysv\"$UNAME_RELEASE\"\n@@ -1330,8 +1358,11 @@ EOF\n     *:Rhapsody:*:*)\n \techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n \texit ;;\n+    arm64:Darwin:*:*)\n+\techo aarch64-apple-darwin\"$UNAME_RELEASE\"\n+\texit ;;\n     *:Darwin:*:*)\n-\tUNAME_PROCESSOR=`uname -p`\n+\tUNAME_PROCESSOR=$(uname -p)\n \tcase $UNAME_PROCESSOR in\n \t    unknown) UNAME_PROCESSOR=powerpc ;;\n \tesac\n@@ -1344,7 +1375,7 @@ EOF\n \telse\n \t    set_cc_for_build\n \tfi\n-\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n \t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n \t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\t   grep IS_64BIT_ARCH >/dev/null\n@@ -1368,7 +1399,7 @@ EOF\n \techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n \texit ;;\n     *:procnto*:*:* | *:QNX:[0123456789]*:*)\n-\tUNAME_PROCESSOR=`uname -p`\n+\tUNAME_PROCESSOR=$(uname -p)\n \tif test \"$UNAME_PROCESSOR\" = x86; then\n \t\tUNAME_PROCESSOR=i386\n \t\tUNAME_MACHINE=pc\n@@ -1406,10 +1437,9 @@ EOF\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n \t# operating systems.\n-\t# shellcheck disable=SC2154\n-\tif test \"$cputype\" = 386; then\n+\tif test \"${cputype-}\" = 386; then\n \t    UNAME_MACHINE=i386\n-\telse\n+\telif test \"x${cputype-}\" != x; then\n \t    UNAME_MACHINE=\"$cputype\"\n \tfi\n \techo \"$UNAME_MACHINE\"-unknown-plan9\n@@ -1436,11 +1466,11 @@ EOF\n \techo mips-sei-seiux\"$UNAME_RELEASE\"\n \texit ;;\n     *:DragonFly:*:*)\n-\techo \"$UNAME_MACHINE\"-unknown-dragonfly\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n+\techo \"$UNAME_MACHINE\"-unknown-dragonfly\"$(echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//')\"\n \texit ;;\n     *:*VMS:*:*)\n-\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n-\tcase \"$UNAME_MACHINE\" in\n+\tUNAME_MACHINE=$( (uname -p) 2>/dev/null)\n+\tcase $UNAME_MACHINE in\n \t    A*) echo alpha-dec-vms ; exit ;;\n \t    I*) echo ia64-dec-vms ; exit ;;\n \t    V*) echo vax-dec-vms ; exit ;;\n@@ -1449,13 +1479,13 @@ EOF\n \techo i386-pc-xenix\n \texit ;;\n     i*86:skyos:*:*)\n-\techo \"$UNAME_MACHINE\"-pc-skyos\"`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\"\n+\techo \"$UNAME_MACHINE\"-pc-skyos\"$(echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//')\"\n \texit ;;\n     i*86:rdos:*:*)\n \techo \"$UNAME_MACHINE\"-pc-rdos\n \texit ;;\n-    i*86:AROS:*:*)\n-\techo \"$UNAME_MACHINE\"-pc-aros\n+    *:AROS:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-aros\n \texit ;;\n     x86_64:VMkernel:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-esx\n@@ -1507,7 +1537,7 @@ main ()\n #define __ARCHITECTURE__ \"m68k\"\n #endif\n   int version;\n-  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n+  version=$( (hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null);\n   if (version < 4)\n     printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n   else\n@@ -1599,15 +1629,15 @@ main ()\n }\n EOF\n \n-$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n+$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=$($dummy) &&\n \t{ echo \"$SYSTEM_NAME\"; exit; }\n \n # Apollos put the system type in the environment.\n test -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n \n echo \"$0: unable to guess system type\" >&2\n \n-case \"$UNAME_MACHINE:$UNAME_SYSTEM\" in\n+case $UNAME_MACHINE:$UNAME_SYSTEM in\n     mips:Linux | mips64:Linux)\n \t# If we got here on MIPS GNU/Linux, output extra information.\n \tcat >&2 <<EOF\n@@ -1624,36 +1654,43 @@ This script (version $timestamp), has failed to recognize the\n operating system you are using. If your script is old, overwrite *all*\n copies of config.guess and config.sub with the latest versions from:\n \n-  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n and\n-  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n+EOF\n+\n+year=$(echo $timestamp | sed 's,-.*,,')\n+# shellcheck disable=SC2003\n+if test \"$(expr \"$(date +%Y)\" - \"$year\")\" -lt 3 ; then\n+   cat >&2 <<EOF\n \n If $0 has already been updated, send the following data and any\n information you think might be pertinent to config-patches@gnu.org to\n provide the necessary information to handle your system.\n \n config.guess timestamp = $timestamp\n \n-uname -m = `(uname -m) 2>/dev/null || echo unknown`\n-uname -r = `(uname -r) 2>/dev/null || echo unknown`\n-uname -s = `(uname -s) 2>/dev/null || echo unknown`\n-uname -v = `(uname -v) 2>/dev/null || echo unknown`\n+uname -m = $( (uname -m) 2>/dev/null || echo unknown)\n+uname -r = $( (uname -r) 2>/dev/null || echo unknown)\n+uname -s = $( (uname -s) 2>/dev/null || echo unknown)\n+uname -v = $( (uname -v) 2>/dev/null || echo unknown)\n \n-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n+/usr/bin/uname -p = $( (/usr/bin/uname -p) 2>/dev/null)\n+/bin/uname -X     = $( (/bin/uname -X) 2>/dev/null)\n \n-hostinfo               = `(hostinfo) 2>/dev/null`\n-/bin/universe          = `(/bin/universe) 2>/dev/null`\n-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n-/bin/arch              = `(/bin/arch) 2>/dev/null`\n-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n+hostinfo               = $( (hostinfo) 2>/dev/null)\n+/bin/universe          = $( (/bin/universe) 2>/dev/null)\n+/usr/bin/arch -k       = $( (/usr/bin/arch -k) 2>/dev/null)\n+/bin/arch              = $( (/bin/arch) 2>/dev/null)\n+/usr/bin/oslevel       = $( (/usr/bin/oslevel) 2>/dev/null)\n+/usr/convex/getsysinfo = $( (/usr/convex/getsysinfo) 2>/dev/null)\n \n UNAME_MACHINE = \"$UNAME_MACHINE\"\n UNAME_RELEASE = \"$UNAME_RELEASE\"\n UNAME_SYSTEM  = \"$UNAME_SYSTEM\"\n UNAME_VERSION = \"$UNAME_VERSION\"\n EOF\n+fi\n \n exit 1\n "
      },
      {
        "sha": "5cf107f19b7cdec87640bd1759743988054c0e8e",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -38,6 +38,14 @@ if test -z \"$enable_wallet\" && test -n \"@no_wallet@\"; then\n   enable_wallet=no\n fi\n \n+if test -z \"$with_bdb\" && test -n \"@no_bdb@\"; then\n+  with_bdb=no\n+fi\n+\n+if test -z \"$with_sqlite\" && test -n \"@no_sqlite@\"; then\n+  with_sqlite=no\n+fi\n+\n if test -z \"$enable_multiprocess\" && test -n \"@multiprocess@\"; then\n   enable_multiprocess=yes\n fi\n@@ -54,11 +62,15 @@ if test -z \"$with_gui\" && test -n \"@no_qt@\"; then\n   with_gui=no\n fi\n \n+if test -n \"@debug@\" && test -z \"@no_qt@\" && test \"x$with_gui\" != xno; then\n+  with_gui=qt5_debug\n+fi\n+\n if test -z \"$enable_zmq\" && test -n \"@no_zmq@\"; then\n   enable_zmq=no\n fi\n \n-if test \"x@host_os@\" = xdarwin; then\n+if test \"@host_os@\" = darwin; then\n   BREW=no\n   PORT=no\n fi"
      },
      {
        "sha": "7384e9198b4051ce9e3e079d50d8adb5060b1771",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 360,
        "deletions": 289,
        "changes": 649,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2019 Free Software Foundation, Inc.\n+#   Copyright 1992-2021 Free Software Foundation, Inc.\n \n-timestamp='2019-06-30'\n+timestamp='2021-04-30'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -33,7 +33,7 @@ timestamp='2019-06-30'\n # Otherwise, we print the canonical config type on stdout and succeed.\n \n # You can get the latest version of this script from:\n-# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n \n # This file is supposed to be the same for all GNU packages\n # and recognize all the CPU types, system types and aliases\n@@ -50,7 +50,7 @@ timestamp='2019-06-30'\n #\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n # It is wrong to echo any other type of specification.\n \n-me=`echo \"$0\" | sed -e 's,.*/,,'`\n+me=$(echo \"$0\" | sed -e 's,.*/,,')\n \n usage=\"\\\n Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n@@ -67,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2019 Free Software Foundation, Inc.\n+Copyright 1992-2021 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -124,28 +124,27 @@ case $1 in\n \t\t;;\n \t*-*-*-*)\n \t\tbasic_machine=$field1-$field2\n-\t\tos=$field3-$field4\n+\t\tbasic_os=$field3-$field4\n \t\t;;\n \t*-*-*)\n \t\t# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two\n \t\t# parts\n \t\tmaybe_os=$field2-$field3\n \t\tcase $maybe_os in\n-\t\t\tnto-qnx* | linux-gnu* | linux-android* | linux-dietlibc \\\n-\t\t\t| linux-newlib* | linux-musl* | linux-uclibc* | uclinux-uclibc* \\\n+\t\t\tnto-qnx* | linux-* | uclinux-uclibc* \\\n \t\t\t| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \\\n \t\t\t| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \\\n \t\t\t| storm-chaos* | os2-emx* | rtmk-nova*)\n \t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$maybe_os\n+\t\t\t\tbasic_os=$maybe_os\n \t\t\t\t;;\n \t\t\tandroid-linux)\n \t\t\t\tbasic_machine=$field1-unknown\n-\t\t\t\tos=linux-android\n+\t\t\t\tbasic_os=linux-android\n \t\t\t\t;;\n \t\t\t*)\n \t\t\t\tbasic_machine=$field1-$field2\n-\t\t\t\tos=$field3\n+\t\t\t\tbasic_os=$field3\n \t\t\t\t;;\n \t\tesac\n \t\t;;\n@@ -154,15 +153,15 @@ case $1 in\n \t\tcase $field1-$field2 in\n \t\t\tdecstation-3100)\n \t\t\t\tbasic_machine=mips-dec\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\t*-*)\n \t\t\t\t# Second component is usually, but not always the OS\n \t\t\t\tcase $field2 in\n \t\t\t\t\t# Prevent following clause from handling this valid os\n \t\t\t\t\tsun*os*)\n \t\t\t\t\t\tbasic_machine=$field1\n-\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\tbasic_os=$field2\n \t\t\t\t\t\t;;\n \t\t\t\t\t# Manufacturers\n \t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n@@ -175,11 +174,11 @@ case $1 in\n \t\t\t\t\t| microblaze* | sim | cisco \\\n \t\t\t\t\t| oki | wec | wrs | winbond)\n \t\t\t\t\t\tbasic_machine=$field1-$field2\n-\t\t\t\t\t\tos=\n+\t\t\t\t\t\tbasic_os=\n \t\t\t\t\t\t;;\n \t\t\t\t\t*)\n \t\t\t\t\t\tbasic_machine=$field1\n-\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\tbasic_os=$field2\n \t\t\t\t\t\t;;\n \t\t\t\tesac\n \t\t\t;;\n@@ -191,447 +190,451 @@ case $1 in\n \t\tcase $field1 in\n \t\t\t386bsd)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\ta29khif)\n \t\t\t\tbasic_machine=a29k-amd\n-\t\t\t\tos=udi\n+\t\t\t\tbasic_os=udi\n \t\t\t\t;;\n \t\t\tadobe68k)\n \t\t\t\tbasic_machine=m68010-adobe\n-\t\t\t\tos=scout\n+\t\t\t\tbasic_os=scout\n \t\t\t\t;;\n \t\t\talliant)\n \t\t\t\tbasic_machine=fx80-alliant\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\taltos | altos3068)\n \t\t\t\tbasic_machine=m68k-altos\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tam29k)\n \t\t\t\tbasic_machine=a29k-none\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\tamdahl)\n \t\t\t\tbasic_machine=580-amdahl\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tamiga)\n \t\t\t\tbasic_machine=m68k-unknown\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tamigaos | amigados)\n \t\t\t\tbasic_machine=m68k-unknown\n-\t\t\t\tos=amigaos\n+\t\t\t\tbasic_os=amigaos\n \t\t\t\t;;\n \t\t\tamigaunix | amix)\n \t\t\t\tbasic_machine=m68k-unknown\n-\t\t\t\tos=sysv4\n+\t\t\t\tbasic_os=sysv4\n \t\t\t\t;;\n \t\t\tapollo68)\n \t\t\t\tbasic_machine=m68k-apollo\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tapollo68bsd)\n \t\t\t\tbasic_machine=m68k-apollo\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\taros)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=aros\n+\t\t\t\tbasic_os=aros\n \t\t\t\t;;\n \t\t\taux)\n \t\t\t\tbasic_machine=m68k-apple\n-\t\t\t\tos=aux\n+\t\t\t\tbasic_os=aux\n \t\t\t\t;;\n \t\t\tbalance)\n \t\t\t\tbasic_machine=ns32k-sequent\n-\t\t\t\tos=dynix\n+\t\t\t\tbasic_os=dynix\n \t\t\t\t;;\n \t\t\tblackfin)\n \t\t\t\tbasic_machine=bfin-unknown\n-\t\t\t\tos=linux\n+\t\t\t\tbasic_os=linux\n \t\t\t\t;;\n \t\t\tcegcc)\n \t\t\t\tbasic_machine=arm-unknown\n-\t\t\t\tos=cegcc\n+\t\t\t\tbasic_os=cegcc\n \t\t\t\t;;\n \t\t\tconvex-c1)\n \t\t\t\tbasic_machine=c1-convex\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\tconvex-c2)\n \t\t\t\tbasic_machine=c2-convex\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\tconvex-c32)\n \t\t\t\tbasic_machine=c32-convex\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\tconvex-c34)\n \t\t\t\tbasic_machine=c34-convex\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\tconvex-c38)\n \t\t\t\tbasic_machine=c38-convex\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\tcray)\n \t\t\t\tbasic_machine=j90-cray\n-\t\t\t\tos=unicos\n+\t\t\t\tbasic_os=unicos\n \t\t\t\t;;\n \t\t\tcrds | unos)\n \t\t\t\tbasic_machine=m68k-crds\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tda30)\n \t\t\t\tbasic_machine=m68k-da30\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n \t\t\t\tbasic_machine=mips-dec\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tdelta88)\n \t\t\t\tbasic_machine=m88k-motorola\n-\t\t\t\tos=sysv3\n+\t\t\t\tbasic_os=sysv3\n \t\t\t\t;;\n \t\t\tdicos)\n \t\t\t\tbasic_machine=i686-pc\n-\t\t\t\tos=dicos\n+\t\t\t\tbasic_os=dicos\n \t\t\t\t;;\n \t\t\tdjgpp)\n \t\t\t\tbasic_machine=i586-pc\n-\t\t\t\tos=msdosdjgpp\n+\t\t\t\tbasic_os=msdosdjgpp\n \t\t\t\t;;\n \t\t\tebmon29k)\n \t\t\t\tbasic_machine=a29k-amd\n-\t\t\t\tos=ebmon\n+\t\t\t\tbasic_os=ebmon\n \t\t\t\t;;\n \t\t\tes1800 | OSE68k | ose68k | ose | OSE)\n \t\t\t\tbasic_machine=m68k-ericsson\n-\t\t\t\tos=ose\n+\t\t\t\tbasic_os=ose\n \t\t\t\t;;\n \t\t\tgmicro)\n \t\t\t\tbasic_machine=tron-gmicro\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tgo32)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=go32\n+\t\t\t\tbasic_os=go32\n \t\t\t\t;;\n \t\t\th8300hms)\n \t\t\t\tbasic_machine=h8300-hitachi\n-\t\t\t\tos=hms\n+\t\t\t\tbasic_os=hms\n \t\t\t\t;;\n \t\t\th8300xray)\n \t\t\t\tbasic_machine=h8300-hitachi\n-\t\t\t\tos=xray\n+\t\t\t\tbasic_os=xray\n \t\t\t\t;;\n \t\t\th8500hms)\n \t\t\t\tbasic_machine=h8500-hitachi\n-\t\t\t\tos=hms\n+\t\t\t\tbasic_os=hms\n \t\t\t\t;;\n \t\t\tharris)\n \t\t\t\tbasic_machine=m88k-harris\n-\t\t\t\tos=sysv3\n+\t\t\t\tbasic_os=sysv3\n \t\t\t\t;;\n \t\t\thp300 | hp300hpux)\n \t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=hpux\n+\t\t\t\tbasic_os=hpux\n \t\t\t\t;;\n \t\t\thp300bsd)\n \t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=bsd\n+\t\t\t\tbasic_os=bsd\n \t\t\t\t;;\n \t\t\thppaosf)\n \t\t\t\tbasic_machine=hppa1.1-hp\n-\t\t\t\tos=osf\n+\t\t\t\tbasic_os=osf\n \t\t\t\t;;\n \t\t\thppro)\n \t\t\t\tbasic_machine=hppa1.1-hp\n-\t\t\t\tos=proelf\n+\t\t\t\tbasic_os=proelf\n \t\t\t\t;;\n \t\t\ti386mach)\n \t\t\t\tbasic_machine=i386-mach\n-\t\t\t\tos=mach\n+\t\t\t\tbasic_os=mach\n \t\t\t\t;;\n \t\t\tisi68 | isi)\n \t\t\t\tbasic_machine=m68k-isi\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tm68knommu)\n \t\t\t\tbasic_machine=m68k-unknown\n-\t\t\t\tos=linux\n+\t\t\t\tbasic_os=linux\n \t\t\t\t;;\n \t\t\tmagnum | m3230)\n \t\t\t\tbasic_machine=mips-mips\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tmerlin)\n \t\t\t\tbasic_machine=ns32k-utek\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tmingw64)\n \t\t\t\tbasic_machine=x86_64-pc\n-\t\t\t\tos=mingw64\n+\t\t\t\tbasic_os=mingw64\n \t\t\t\t;;\n \t\t\tmingw32)\n \t\t\t\tbasic_machine=i686-pc\n-\t\t\t\tos=mingw32\n+\t\t\t\tbasic_os=mingw32\n \t\t\t\t;;\n \t\t\tmingw32ce)\n \t\t\t\tbasic_machine=arm-unknown\n-\t\t\t\tos=mingw32ce\n+\t\t\t\tbasic_os=mingw32ce\n \t\t\t\t;;\n \t\t\tmonitor)\n \t\t\t\tbasic_machine=m68k-rom68k\n-\t\t\t\tos=coff\n+\t\t\t\tbasic_os=coff\n \t\t\t\t;;\n \t\t\tmorphos)\n \t\t\t\tbasic_machine=powerpc-unknown\n-\t\t\t\tos=morphos\n+\t\t\t\tbasic_os=morphos\n \t\t\t\t;;\n \t\t\tmoxiebox)\n \t\t\t\tbasic_machine=moxie-unknown\n-\t\t\t\tos=moxiebox\n+\t\t\t\tbasic_os=moxiebox\n \t\t\t\t;;\n \t\t\tmsdos)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=msdos\n+\t\t\t\tbasic_os=msdos\n \t\t\t\t;;\n \t\t\tmsys)\n \t\t\t\tbasic_machine=i686-pc\n-\t\t\t\tos=msys\n+\t\t\t\tbasic_os=msys\n \t\t\t\t;;\n \t\t\tmvs)\n \t\t\t\tbasic_machine=i370-ibm\n-\t\t\t\tos=mvs\n+\t\t\t\tbasic_os=mvs\n \t\t\t\t;;\n \t\t\tnacl)\n \t\t\t\tbasic_machine=le32-unknown\n-\t\t\t\tos=nacl\n+\t\t\t\tbasic_os=nacl\n \t\t\t\t;;\n \t\t\tncr3000)\n \t\t\t\tbasic_machine=i486-ncr\n-\t\t\t\tos=sysv4\n+\t\t\t\tbasic_os=sysv4\n \t\t\t\t;;\n \t\t\tnetbsd386)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=netbsd\n+\t\t\t\tbasic_os=netbsd\n \t\t\t\t;;\n \t\t\tnetwinder)\n \t\t\t\tbasic_machine=armv4l-rebel\n-\t\t\t\tos=linux\n+\t\t\t\tbasic_os=linux\n \t\t\t\t;;\n \t\t\tnews | news700 | news800 | news900)\n \t\t\t\tbasic_machine=m68k-sony\n-\t\t\t\tos=newsos\n+\t\t\t\tbasic_os=newsos\n \t\t\t\t;;\n \t\t\tnews1000)\n \t\t\t\tbasic_machine=m68030-sony\n-\t\t\t\tos=newsos\n+\t\t\t\tbasic_os=newsos\n \t\t\t\t;;\n \t\t\tnecv70)\n \t\t\t\tbasic_machine=v70-nec\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tnh3000)\n \t\t\t\tbasic_machine=m68k-harris\n-\t\t\t\tos=cxux\n+\t\t\t\tbasic_os=cxux\n \t\t\t\t;;\n \t\t\tnh[45]000)\n \t\t\t\tbasic_machine=m88k-harris\n-\t\t\t\tos=cxux\n+\t\t\t\tbasic_os=cxux\n \t\t\t\t;;\n \t\t\tnindy960)\n \t\t\t\tbasic_machine=i960-intel\n-\t\t\t\tos=nindy\n+\t\t\t\tbasic_os=nindy\n \t\t\t\t;;\n \t\t\tmon960)\n \t\t\t\tbasic_machine=i960-intel\n-\t\t\t\tos=mon960\n+\t\t\t\tbasic_os=mon960\n \t\t\t\t;;\n \t\t\tnonstopux)\n \t\t\t\tbasic_machine=mips-compaq\n-\t\t\t\tos=nonstopux\n+\t\t\t\tbasic_os=nonstopux\n \t\t\t\t;;\n \t\t\tos400)\n \t\t\t\tbasic_machine=powerpc-ibm\n-\t\t\t\tos=os400\n+\t\t\t\tbasic_os=os400\n \t\t\t\t;;\n \t\t\tOSE68000 | ose68000)\n \t\t\t\tbasic_machine=m68000-ericsson\n-\t\t\t\tos=ose\n+\t\t\t\tbasic_os=ose\n \t\t\t\t;;\n \t\t\tos68k)\n \t\t\t\tbasic_machine=m68k-none\n-\t\t\t\tos=os68k\n+\t\t\t\tbasic_os=os68k\n \t\t\t\t;;\n \t\t\tparagon)\n \t\t\t\tbasic_machine=i860-intel\n-\t\t\t\tos=osf\n+\t\t\t\tbasic_os=osf\n \t\t\t\t;;\n \t\t\tparisc)\n \t\t\t\tbasic_machine=hppa-unknown\n-\t\t\t\tos=linux\n+\t\t\t\tbasic_os=linux\n+\t\t\t\t;;\n+\t\t\tpsp)\n+\t\t\t\tbasic_machine=mipsallegrexel-sony\n+\t\t\t\tbasic_os=psp\n \t\t\t\t;;\n \t\t\tpw32)\n \t\t\t\tbasic_machine=i586-unknown\n-\t\t\t\tos=pw32\n+\t\t\t\tbasic_os=pw32\n \t\t\t\t;;\n \t\t\trdos | rdos64)\n \t\t\t\tbasic_machine=x86_64-pc\n-\t\t\t\tos=rdos\n+\t\t\t\tbasic_os=rdos\n \t\t\t\t;;\n \t\t\trdos32)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=rdos\n+\t\t\t\tbasic_os=rdos\n \t\t\t\t;;\n \t\t\trom68k)\n \t\t\t\tbasic_machine=m68k-rom68k\n-\t\t\t\tos=coff\n+\t\t\t\tbasic_os=coff\n \t\t\t\t;;\n \t\t\tsa29200)\n \t\t\t\tbasic_machine=a29k-amd\n-\t\t\t\tos=udi\n+\t\t\t\tbasic_os=udi\n \t\t\t\t;;\n \t\t\tsei)\n \t\t\t\tbasic_machine=mips-sei\n-\t\t\t\tos=seiux\n+\t\t\t\tbasic_os=seiux\n \t\t\t\t;;\n \t\t\tsequent)\n \t\t\t\tbasic_machine=i386-sequent\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tsps7)\n \t\t\t\tbasic_machine=m68k-bull\n-\t\t\t\tos=sysv2\n+\t\t\t\tbasic_os=sysv2\n \t\t\t\t;;\n \t\t\tst2000)\n \t\t\t\tbasic_machine=m68k-tandem\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tstratus)\n \t\t\t\tbasic_machine=i860-stratus\n-\t\t\t\tos=sysv4\n+\t\t\t\tbasic_os=sysv4\n \t\t\t\t;;\n \t\t\tsun2)\n \t\t\t\tbasic_machine=m68000-sun\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tsun2os3)\n \t\t\t\tbasic_machine=m68000-sun\n-\t\t\t\tos=sunos3\n+\t\t\t\tbasic_os=sunos3\n \t\t\t\t;;\n \t\t\tsun2os4)\n \t\t\t\tbasic_machine=m68000-sun\n-\t\t\t\tos=sunos4\n+\t\t\t\tbasic_os=sunos4\n \t\t\t\t;;\n \t\t\tsun3)\n \t\t\t\tbasic_machine=m68k-sun\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tsun3os3)\n \t\t\t\tbasic_machine=m68k-sun\n-\t\t\t\tos=sunos3\n+\t\t\t\tbasic_os=sunos3\n \t\t\t\t;;\n \t\t\tsun3os4)\n \t\t\t\tbasic_machine=m68k-sun\n-\t\t\t\tos=sunos4\n+\t\t\t\tbasic_os=sunos4\n \t\t\t\t;;\n \t\t\tsun4)\n \t\t\t\tbasic_machine=sparc-sun\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tsun4os3)\n \t\t\t\tbasic_machine=sparc-sun\n-\t\t\t\tos=sunos3\n+\t\t\t\tbasic_os=sunos3\n \t\t\t\t;;\n \t\t\tsun4os4)\n \t\t\t\tbasic_machine=sparc-sun\n-\t\t\t\tos=sunos4\n+\t\t\t\tbasic_os=sunos4\n \t\t\t\t;;\n \t\t\tsun4sol2)\n \t\t\t\tbasic_machine=sparc-sun\n-\t\t\t\tos=solaris2\n+\t\t\t\tbasic_os=solaris2\n \t\t\t\t;;\n \t\t\tsun386 | sun386i | roadrunner)\n \t\t\t\tbasic_machine=i386-sun\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\t\tsv1)\n \t\t\t\tbasic_machine=sv1-cray\n-\t\t\t\tos=unicos\n+\t\t\t\tbasic_os=unicos\n \t\t\t\t;;\n \t\t\tsymmetry)\n \t\t\t\tbasic_machine=i386-sequent\n-\t\t\t\tos=dynix\n+\t\t\t\tbasic_os=dynix\n \t\t\t\t;;\n \t\t\tt3e)\n \t\t\t\tbasic_machine=alphaev5-cray\n-\t\t\t\tos=unicos\n+\t\t\t\tbasic_os=unicos\n \t\t\t\t;;\n \t\t\tt90)\n \t\t\t\tbasic_machine=t90-cray\n-\t\t\t\tos=unicos\n+\t\t\t\tbasic_os=unicos\n \t\t\t\t;;\n \t\t\ttoad1)\n \t\t\t\tbasic_machine=pdp10-xkl\n-\t\t\t\tos=tops20\n+\t\t\t\tbasic_os=tops20\n \t\t\t\t;;\n \t\t\ttpf)\n \t\t\t\tbasic_machine=s390x-ibm\n-\t\t\t\tos=tpf\n+\t\t\t\tbasic_os=tpf\n \t\t\t\t;;\n \t\t\tudi29k)\n \t\t\t\tbasic_machine=a29k-amd\n-\t\t\t\tos=udi\n+\t\t\t\tbasic_os=udi\n \t\t\t\t;;\n \t\t\tultra3)\n \t\t\t\tbasic_machine=a29k-nyu\n-\t\t\t\tos=sym1\n+\t\t\t\tbasic_os=sym1\n \t\t\t\t;;\n \t\t\tv810 | necv810)\n \t\t\t\tbasic_machine=v810-nec\n-\t\t\t\tos=none\n+\t\t\t\tbasic_os=none\n \t\t\t\t;;\n \t\t\tvaxv)\n \t\t\t\tbasic_machine=vax-dec\n-\t\t\t\tos=sysv\n+\t\t\t\tbasic_os=sysv\n \t\t\t\t;;\n \t\t\tvms)\n \t\t\t\tbasic_machine=vax-dec\n-\t\t\t\tos=vms\n+\t\t\t\tbasic_os=vms\n \t\t\t\t;;\n \t\t\tvsta)\n \t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=vsta\n+\t\t\t\tbasic_os=vsta\n \t\t\t\t;;\n \t\t\tvxworks960)\n \t\t\t\tbasic_machine=i960-wrs\n-\t\t\t\tos=vxworks\n+\t\t\t\tbasic_os=vxworks\n \t\t\t\t;;\n \t\t\tvxworks68)\n \t\t\t\tbasic_machine=m68k-wrs\n-\t\t\t\tos=vxworks\n+\t\t\t\tbasic_os=vxworks\n \t\t\t\t;;\n \t\t\tvxworks29k)\n \t\t\t\tbasic_machine=a29k-wrs\n-\t\t\t\tos=vxworks\n+\t\t\t\tbasic_os=vxworks\n \t\t\t\t;;\n \t\t\txbox)\n \t\t\t\tbasic_machine=i686-pc\n-\t\t\t\tos=mingw32\n+\t\t\t\tbasic_os=mingw32\n \t\t\t\t;;\n \t\t\tymp)\n \t\t\t\tbasic_machine=ymp-cray\n-\t\t\t\tos=unicos\n+\t\t\t\tbasic_os=unicos\n \t\t\t\t;;\n \t\t\t*)\n \t\t\t\tbasic_machine=$1\n-\t\t\t\tos=\n+\t\t\t\tbasic_os=\n \t\t\t\t;;\n \t\tesac\n \t\t;;\n@@ -683,17 +686,17 @@ case $basic_machine in\n \tbluegene*)\n \t\tcpu=powerpc\n \t\tvendor=ibm\n-\t\tos=cnk\n+\t\tbasic_os=cnk\n \t\t;;\n \tdecsystem10* | dec10*)\n \t\tcpu=pdp10\n \t\tvendor=dec\n-\t\tos=tops10\n+\t\tbasic_os=tops10\n \t\t;;\n \tdecsystem20* | dec20*)\n \t\tcpu=pdp10\n \t\tvendor=dec\n-\t\tos=tops20\n+\t\tbasic_os=tops20\n \t\t;;\n \tdelta | 3300 | motorola-3300 | motorola-delta \\\n \t      | 3300-motorola | delta-motorola)\n@@ -703,7 +706,7 @@ case $basic_machine in\n \tdpx2*)\n \t\tcpu=m68k\n \t\tvendor=bull\n-\t\tos=sysv3\n+\t\tbasic_os=sysv3\n \t\t;;\n \tencore | umax | mmax)\n \t\tcpu=ns32k\n@@ -712,7 +715,7 @@ case $basic_machine in\n \telxsi)\n \t\tcpu=elxsi\n \t\tvendor=elxsi\n-\t\tos=${os:-bsd}\n+\t\tbasic_os=${basic_os:-bsd}\n \t\t;;\n \tfx2800)\n \t\tcpu=i860\n@@ -725,7 +728,7 @@ case $basic_machine in\n \th3050r* | hiux*)\n \t\tcpu=hppa1.1\n \t\tvendor=hitachi\n-\t\tos=hiuxwe2\n+\t\tbasic_os=hiuxwe2\n \t\t;;\n \thp3k9[0-9][0-9] | hp9[0-9][0-9])\n \t\tcpu=hppa1.0\n@@ -766,38 +769,38 @@ case $basic_machine in\n \t\tvendor=hp\n \t\t;;\n \ti*86v32)\n-\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n \t\tvendor=pc\n-\t\tos=sysv32\n+\t\tbasic_os=sysv32\n \t\t;;\n \ti*86v4*)\n-\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n \t\tvendor=pc\n-\t\tos=sysv4\n+\t\tbasic_os=sysv4\n \t\t;;\n \ti*86v)\n-\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n \t\tvendor=pc\n-\t\tos=sysv\n+\t\tbasic_os=sysv\n \t\t;;\n \ti*86sol2)\n-\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n \t\tvendor=pc\n-\t\tos=solaris2\n+\t\tbasic_os=solaris2\n \t\t;;\n \tj90 | j90-cray)\n \t\tcpu=j90\n \t\tvendor=cray\n-\t\tos=${os:-unicos}\n+\t\tbasic_os=${basic_os:-unicos}\n \t\t;;\n \tiris | iris4d)\n \t\tcpu=mips\n \t\tvendor=sgi\n-\t\tcase $os in\n+\t\tcase $basic_os in\n \t\t    irix*)\n \t\t\t;;\n \t\t    *)\n-\t\t\tos=irix4\n+\t\t\tbasic_os=irix4\n \t\t\t;;\n \t\tesac\n \t\t;;\n@@ -808,26 +811,26 @@ case $basic_machine in\n \t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n \t\tcpu=m68k\n \t\tvendor=atari\n-\t\tos=mint\n+\t\tbasic_os=mint\n \t\t;;\n \tnews-3600 | risc-news)\n \t\tcpu=mips\n \t\tvendor=sony\n-\t\tos=newsos\n+\t\tbasic_os=newsos\n \t\t;;\n \tnext | m*-next)\n \t\tcpu=m68k\n \t\tvendor=next\n-\t\tcase $os in\n+\t\tcase $basic_os in\n \t\t    openstep*)\n \t\t        ;;\n \t\t    nextstep*)\n \t\t\t;;\n \t\t    ns2*)\n-\t\t      os=nextstep2\n+\t\t      basic_os=nextstep2\n \t\t\t;;\n \t\t    *)\n-\t\t      os=nextstep3\n+\t\t      basic_os=nextstep3\n \t\t\t;;\n \t\tesac\n \t\t;;\n@@ -838,12 +841,12 @@ case $basic_machine in\n \top50n-* | op60c-*)\n \t\tcpu=hppa1.1\n \t\tvendor=oki\n-\t\tos=proelf\n+\t\tbasic_os=proelf\n \t\t;;\n \tpa-hitachi)\n \t\tcpu=hppa1.1\n \t\tvendor=hitachi\n-\t\tos=hiuxwe2\n+\t\tbasic_os=hiuxwe2\n \t\t;;\n \tpbd)\n \t\tcpu=sparc\n@@ -880,12 +883,12 @@ case $basic_machine in\n \tsde)\n \t\tcpu=mipsisa32\n \t\tvendor=sde\n-\t\tos=${os:-elf}\n+\t\tbasic_os=${basic_os:-elf}\n \t\t;;\n \tsimso-wrs)\n \t\tcpu=sparclite\n \t\tvendor=wrs\n-\t\tos=vxworks\n+\t\tbasic_os=vxworks\n \t\t;;\n \ttower | tower-32)\n \t\tcpu=m68k\n@@ -902,7 +905,7 @@ case $basic_machine in\n \tw89k-*)\n \t\tcpu=hppa1.1\n \t\tvendor=winbond\n-\t\tos=proelf\n+\t\tbasic_os=proelf\n \t\t;;\n \tnone)\n \t\tcpu=none\n@@ -914,7 +917,7 @@ case $basic_machine in\n \t\t;;\n \tleon-*|leon[3-9]-*)\n \t\tcpu=sparc\n-\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n+\t\tvendor=$(echo \"$basic_machine\" | sed 's/-.*//')\n \t\t;;\n \n \t*-*)\n@@ -955,11 +958,11 @@ case $cpu-$vendor in\n \t# some cases the only manufacturer, in others, it is the most popular.\n \tcraynv-unknown)\n \t\tvendor=cray\n-\t\tos=${os:-unicosmp}\n+\t\tbasic_os=${basic_os:-unicosmp}\n \t\t;;\n \tc90-unknown | c90-cray)\n \t\tvendor=cray\n-\t\tos=${os:-unicos}\n+\t\tbasic_os=${Basic_os:-unicos}\n \t\t;;\n \tfx80-unknown)\n \t\tvendor=alliant\n@@ -1003,7 +1006,7 @@ case $cpu-$vendor in\n \tdpx20-unknown | dpx20-bull)\n \t\tcpu=rs6000\n \t\tvendor=bull\n-\t\tos=${os:-bosx}\n+\t\tbasic_os=${basic_os:-bosx}\n \t\t;;\n \n \t# Here we normalize CPU types irrespective of the vendor\n@@ -1012,7 +1015,7 @@ case $cpu-$vendor in\n \t\t;;\n \tblackfin-*)\n \t\tcpu=bfin\n-\t\tos=linux\n+\t\tbasic_os=linux\n \t\t;;\n \tc54x-*)\n \t\tcpu=tic54x\n@@ -1025,7 +1028,7 @@ case $cpu-$vendor in\n \t\t;;\n \te500v[12]-*)\n \t\tcpu=powerpc\n-\t\tos=$os\"spe\"\n+\t\tbasic_os=${basic_os}\"spe\"\n \t\t;;\n \tmips3*-*)\n \t\tcpu=mips64\n@@ -1035,7 +1038,7 @@ case $cpu-$vendor in\n \t\t;;\n \tm68knommu-*)\n \t\tcpu=m68k\n-\t\tos=linux\n+\t\tbasic_os=linux\n \t\t;;\n \tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n \t\tcpu=s12z\n@@ -1045,7 +1048,7 @@ case $cpu-$vendor in\n \t\t;;\n \tparisc-*)\n \t\tcpu=hppa\n-\t\tos=linux\n+\t\tbasic_os=linux\n \t\t;;\n \tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n \t\tcpu=i586\n@@ -1081,7 +1084,7 @@ case $cpu-$vendor in\n \t\tcpu=mipsisa64sb1el\n \t\t;;\n \tsh5e[lb]-*)\n-\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n+\t\tcpu=$(echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/')\n \t\t;;\n \tspur-*)\n \t\tcpu=spur\n@@ -1099,13 +1102,16 @@ case $cpu-$vendor in\n \t\tcpu=x86_64\n \t\t;;\n \txscale-* | xscalee[bl]-*)\n-\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n+\t\tcpu=$(echo \"$cpu\" | sed 's/^xscale/arm/')\n+\t\t;;\n+\tarm64-*)\n+\t\tcpu=aarch64\n \t\t;;\n \n \t# Recognize the canonical CPU Types that limit and/or modify the\n \t# company names they are paired with.\n \tcr16-*)\n-\t\tos=${os:-elf}\n+\t\tbasic_os=${basic_os:-elf}\n \t\t;;\n \tcrisv32-* | etraxfs*-*)\n \t\tcpu=crisv32\n@@ -1116,7 +1122,7 @@ case $cpu-$vendor in\n \t\tvendor=axis\n \t\t;;\n \tcrx-*)\n-\t\tos=${os:-elf}\n+\t\tbasic_os=${basic_os:-elf}\n \t\t;;\n \tneo-tandem)\n \t\tcpu=neo\n@@ -1138,16 +1144,12 @@ case $cpu-$vendor in\n \t\tcpu=nsx\n \t\tvendor=tandem\n \t\t;;\n-\ts390-*)\n-\t\tcpu=s390\n-\t\tvendor=ibm\n-\t\t;;\n-\ts390x-*)\n-\t\tcpu=s390x\n-\t\tvendor=ibm\n+\tmipsallegrexel-sony)\n+\t\tcpu=mipsallegrexel\n+\t\tvendor=sony\n \t\t;;\n \ttile*-*)\n-\t\tos=${os:-linux-gnu}\n+\t\tbasic_os=${basic_os:-linux-gnu}\n \t\t;;\n \n \t*)\n@@ -1163,8 +1165,8 @@ case $cpu-$vendor in\n \t\t\t| alphapca5[67] | alpha64pca5[67] \\\n \t\t\t| am33_2.0 \\\n \t\t\t| amdgcn \\\n-\t\t\t| arc | arceb \\\n-\t\t\t| arm  | arm[lb]e | arme[lb] | armv* \\\n+\t\t\t| arc | arceb | arc64 \\\n+\t\t\t| arm | arm[lb]e | arme[lb] | armv* \\\n \t\t\t| avr | avr32 \\\n \t\t\t| asmjs \\\n \t\t\t| ba \\\n@@ -1183,6 +1185,7 @@ case $cpu-$vendor in\n \t\t\t| k1om \\\n \t\t\t| le32 | le64 \\\n \t\t\t| lm32 \\\n+\t\t\t| loongarch32 | loongarch64 | loongarchx32 \\\n \t\t\t| m32c | m32r | m32rle \\\n \t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n \t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n@@ -1201,9 +1204,13 @@ case $cpu-$vendor in\n \t\t\t| mips64vr5900 | mips64vr5900el \\\n \t\t\t| mipsisa32 | mipsisa32el \\\n \t\t\t| mipsisa32r2 | mipsisa32r2el \\\n+\t\t\t| mipsisa32r3 | mipsisa32r3el \\\n+\t\t\t| mipsisa32r5 | mipsisa32r5el \\\n \t\t\t| mipsisa32r6 | mipsisa32r6el \\\n \t\t\t| mipsisa64 | mipsisa64el \\\n \t\t\t| mipsisa64r2 | mipsisa64r2el \\\n+\t\t\t| mipsisa64r3 | mipsisa64r3el \\\n+\t\t\t| mipsisa64r5 | mipsisa64r5el \\\n \t\t\t| mipsisa64r6 | mipsisa64r6el \\\n \t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n \t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n@@ -1227,8 +1234,9 @@ case $cpu-$vendor in\n \t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n \t\t\t| pru \\\n \t\t\t| pyramid \\\n-\t\t\t| riscv | riscv32 | riscv64 \\\n+\t\t\t| riscv | riscv32 | riscv32be | riscv64 | riscv64be \\\n \t\t\t| rl78 | romp | rs6000 | rx \\\n+\t\t\t| s390 | s390x \\\n \t\t\t| score \\\n \t\t\t| sh | shl \\\n \t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n@@ -1238,6 +1246,7 @@ case $cpu-$vendor in\n \t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n \t\t\t| spu \\\n \t\t\t| tahoe \\\n+\t\t\t| thumbv7* \\\n \t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n \t\t\t| tron \\\n \t\t\t| ubicom32 \\\n@@ -1275,8 +1284,47 @@ esac\n \n # Decode manufacturer-specific aliases for certain operating systems.\n \n-if [ x$os != x ]\n+if test x$basic_os != x\n then\n+\n+# First recognize some ad-hoc caes, or perhaps split kernel-os, or else just\n+# set os.\n+case $basic_os in\n+\tgnu/linux*)\n+\t\tkernel=linux\n+\t\tos=$(echo $basic_os | sed -e 's|gnu/linux|gnu|')\n+\t\t;;\n+\tos2-emx)\n+\t\tkernel=os2\n+\t\tos=$(echo $basic_os | sed -e 's|os2-emx|emx|')\n+\t\t;;\n+\tnto-qnx*)\n+\t\tkernel=nto\n+\t\tos=$(echo $basic_os | sed -e 's|nto-qnx|qnx|')\n+\t\t;;\n+\t*-*)\n+\t\t# shellcheck disable=SC2162\n+\t\tIFS=\"-\" read kernel os <<EOF\n+$basic_os\n+EOF\n+\t\t;;\n+\t# Default OS when just kernel was specified\n+\tnto*)\n+\t\tkernel=nto\n+\t\tos=$(echo $basic_os | sed -e 's|nto|qnx|')\n+\t\t;;\n+\tlinux*)\n+\t\tkernel=linux\n+\t\tos=$(echo $basic_os | sed -e 's|linux|gnu|')\n+\t\t;;\n+\t*)\n+\t\tkernel=\n+\t\tos=$basic_os\n+\t\t;;\n+esac\n+\n+# Now, normalize the OS (knowing we just have one component, it's not a kernel,\n+# etc.)\n case $os in\n \t# First match some system type aliases that might get confused\n \t# with valid system types.\n@@ -1288,17 +1336,14 @@ case $os in\n \t\tos=cnk\n \t\t;;\n \tsolaris1 | solaris1.*)\n-\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\tos=$(echo $os | sed -e 's|solaris1|sunos4|')\n \t\t;;\n \tsolaris)\n \t\tos=solaris2\n \t\t;;\n \tunixware*)\n \t\tos=sysv4.2uw\n \t\t;;\n-\tgnu/linux*)\n-\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n-\t\t;;\n \t# es1800 is here to avoid being matched by es* (a different OS)\n \tes1800*)\n \t\tos=ose\n@@ -1320,12 +1365,9 @@ case $os in\n \t\tos=sco3.2v4\n \t\t;;\n \tsco3.2.[4-9]*)\n-\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tos=$(echo $os | sed -e 's/sco3.2./sco3.2v/')\n \t\t;;\n-\tsco3.2v[4-9]* | sco5v6*)\n-\t\t# Don't forget version if it is 3.2v4 or newer.\n-\t\t;;\n-\tscout)\n+\tsco*v* | scout)\n \t\t# Don't match below\n \t\t;;\n \tsco*)\n@@ -1334,79 +1376,26 @@ case $os in\n \tpsos*)\n \t\tos=psos\n \t\t;;\n-\t# Now accept the basic system types.\n-\t# The portable systems comes first.\n-\t# Each alternative MUST end in a * to match a version number.\n-\t# sysv* is not here because it comes later, after sysvr4.\n-\tgnu* | bsd* | mach* | minix* | genix* | ultrix* | irix* \\\n-\t     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]*\\\n-\t     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \\\n-\t     | sym* | kopensolaris* | plan9* \\\n-\t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n-\t     | aos* | aros* | cloudabi* | sortix* \\\n-\t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n-\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n-\t     | knetbsd* | mirbsd* | netbsd* \\\n-\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n-\t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n-\t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n-\t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n-\t     | udi* | eabi* | lites* | ieee* | go32* | aux* | hcos* \\\n-\t     | chorusrdb* | cegcc* | glidix* \\\n-\t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n-\t     | midipix* | mingw32* | mingw64* | linux-gnu* | linux-android* \\\n-\t     | linux-newlib* | linux-musl* | linux-uclibc* \\\n-\t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n-\t     | interix* | uwin* | mks* | rhapsody* | darwin* \\\n-\t     | openstep* | oskit* | conix* | pw32* | nonstopux* \\\n-\t     | storm-chaos* | tops10* | tenex* | tops20* | its* \\\n-\t     | os2* | vos* | palmos* | uclinux* | nucleus* \\\n-\t     | morphos* | superux* | rtmk* | windiss* \\\n-\t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n-\t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n-\t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n-\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n-\t     | nsk* | powerunix)\n-\t# Remember, each alternative MUST END IN *, to match a version number.\n-\t\t;;\n \tqnx*)\n-\t\tcase $cpu in\n-\t\t    x86 | i*86)\n-\t\t\t;;\n-\t\t    *)\n-\t\t\tos=nto-$os\n-\t\t\t;;\n-\t\tesac\n+\t\tos=qnx\n \t\t;;\n \thiux*)\n \t\tos=hiuxwe2\n \t\t;;\n-\tnto-qnx*)\n-\t\t;;\n-\tnto*)\n-\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n-\t\t;;\n-\tsim | xray | os68k* | v88r* \\\n-\t    | windows* | osx | abug | netware* | os9* \\\n-\t    | macos* | mpw* | magic* | mmixware* | mon960* | lnews*)\n-\t\t;;\n-\tlinux-dietlibc)\n-\t\tos=linux-dietlibc\n-\t\t;;\n-\tlinux*)\n-\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n-\t\t;;\n \tlynx*178)\n \t\tos=lynxos178\n \t\t;;\n \tlynx*5)\n \t\tos=lynxos5\n \t\t;;\n+\tlynxos*)\n+\t\t# don't get caught up in next wildcard\n+\t\t;;\n \tlynx*)\n \t\tos=lynxos\n \t\t;;\n-\tmac*)\n-\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n+\tmac[0-9]*)\n+\t\tos=$(echo \"$os\" | sed -e 's|mac|macos|')\n \t\t;;\n \topened*)\n \t\tos=openedition\n@@ -1415,10 +1404,10 @@ case $os in\n \t\tos=os400\n \t\t;;\n \tsunos5*)\n-\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n+\t\tos=$(echo \"$os\" | sed -e 's|sunos5|solaris2|')\n \t\t;;\n \tsunos6*)\n-\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n+\t\tos=$(echo \"$os\" | sed -e 's|sunos6|solaris3|')\n \t\t;;\n \twince*)\n \t\tos=wince\n@@ -1452,7 +1441,7 @@ case $os in\n \t\t;;\n \t# Preserve the version number of sinix5.\n \tsinix5.*)\n-\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\tos=$(echo $os | sed -e 's|sinix|sysv|')\n \t\t;;\n \tsinix*)\n \t\tos=sysv4\n@@ -1475,18 +1464,12 @@ case $os in\n \tsysvr4)\n \t\tos=sysv4\n \t\t;;\n-\t# This must come after sysvr4.\n-\tsysv*)\n-\t\t;;\n \tose*)\n \t\tos=ose\n \t\t;;\n \t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n \t\tos=mint\n \t\t;;\n-\tzvmoe)\n-\t\tos=zvmoe\n-\t\t;;\n \tdicos*)\n \t\tos=dicos\n \t\t;;\n@@ -1503,19 +1486,11 @@ case $os in\n \t\t\t;;\n \t\tesac\n \t\t;;\n-\tnacl*)\n-\t\t;;\n-\tios)\n-\t\t;;\n-\tnone)\n-\t\t;;\n-\t*-eabi)\n-\t\t;;\n \t*)\n-\t\techo Invalid configuration \\`\"$1\"\\': system \\`\"$os\"\\' not recognized 1>&2\n-\t\texit 1\n+\t\t# No normalization, but not necessarily accepted, that comes below.\n \t\t;;\n esac\n+\n else\n \n # Here we handle the default operating systems that come with various machines.\n@@ -1528,6 +1503,7 @@ else\n # will signal an error saying that MANUFACTURER isn't an operating\n # system, and we'll never get to this point.\n \n+kernel=\n case $cpu-$vendor in\n \tscore-*)\n \t\tos=elf\n@@ -1539,7 +1515,8 @@ case $cpu-$vendor in\n \t\tos=riscix1.2\n \t\t;;\n \tarm*-rebel)\n-\t\tos=linux\n+\t\tkernel=linux\n+\t\tos=gnu\n \t\t;;\n \tarm*-semi)\n \t\tos=aout\n@@ -1705,84 +1682,178 @@ case $cpu-$vendor in\n \t\tos=none\n \t\t;;\n esac\n+\n fi\n \n+# Now, validate our (potentially fixed-up) OS.\n+case $os in\n+\t# Sometimes we do \"kernel-libc\", so those need to count as OSes.\n+\tmusl* | newlib* | uclibc*)\n+\t\t;;\n+\t# Likewise for \"kernel-abi\"\n+\teabi* | gnueabi*)\n+\t\t;;\n+\t# VxWorks passes extra cpu info in the 4th filed.\n+\tsimlinux | simwindows | spe)\n+\t\t;;\n+\t# Now accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST end in a * to match a version number.\n+\tgnu* | android* | bsd* | mach* | minix* | genix* | ultrix* | irix* \\\n+\t     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]* \\\n+\t     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \\\n+\t     | sym* |  plan9* | psp* | sim* | xray* | os68k* | v88r* \\\n+\t     | hiux* | abug | nacl* | netware* | windows* \\\n+\t     | os9* | macos* | osx* | ios* \\\n+\t     | mpw* | magic* | mmixware* | mon960* | lnews* \\\n+\t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n+\t     | aos* | aros* | cloudabi* | sortix* | twizzler* \\\n+\t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n+\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n+\t     | mirbsd* | netbsd* | dicos* | openedition* | ose* \\\n+\t     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \\\n+\t     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \\\n+\t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n+\t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n+\t     | udi* | lites* | ieee* | go32* | aux* | hcos* \\\n+\t     | chorusrdb* | cegcc* | glidix* | serenity* \\\n+\t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n+\t     | midipix* | mingw32* | mingw64* | mint* \\\n+\t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n+\t     | interix* | uwin* | mks* | rhapsody* | darwin* \\\n+\t     | openstep* | oskit* | conix* | pw32* | nonstopux* \\\n+\t     | storm-chaos* | tops10* | tenex* | tops20* | its* \\\n+\t     | os2* | vos* | palmos* | uclinux* | nucleus* | morphos* \\\n+\t     | scout* | superux* | sysv* | rtmk* | tpf* | windiss* \\\n+\t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n+\t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n+\t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n+\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n+\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx*)\n+\t\t;;\n+\t# This one is extra strict with allowed versions\n+\tsco3.2v2 | sco3.2v[4-9]* | sco5v6*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\t;;\n+\tnone)\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`\"$1\"\\': OS \\`\"$os\"\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# As a final step for OS-related things, validate the OS-kernel combination\n+# (given a valid OS), if there is a kernel.\n+case $kernel-$os in\n+\tlinux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* | linux-musl* | linux-uclibc* )\n+\t\t;;\n+\tuclinux-uclibc* )\n+\t\t;;\n+\t-dietlibc* | -newlib* | -musl* | -uclibc* )\n+\t\t# These are just libc implementations, not actual OSes, and thus\n+\t\t# require a kernel.\n+\t\techo \"Invalid configuration \\`$1': libc \\`$os' needs explicit kernel.\" 1>&2\n+\t\texit 1\n+\t\t;;\n+\tkfreebsd*-gnu* | kopensolaris*-gnu*)\n+\t\t;;\n+\tvxworks-simlinux | vxworks-simwindows | vxworks-spe)\n+\t\t;;\n+\tnto-qnx*)\n+\t\t;;\n+\tos2-emx)\n+\t\t;;\n+\t*-eabi* | *-gnueabi*)\n+\t\t;;\n+\t-*)\n+\t\t# Blank kernel with real OS is always fine.\n+\t\t;;\n+\t*-*)\n+\t\techo \"Invalid configuration \\`$1': Kernel \\`$kernel' not known to work with OS \\`$os'.\" 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n # Here we handle the case where we know the os, and the CPU type, but not the\n # manufacturer.  We pick the logical manufacturer.\n case $vendor in\n \tunknown)\n-\t\tcase $os in\n-\t\t\triscix*)\n+\t\tcase $cpu-$os in\n+\t\t\t*-riscix*)\n \t\t\t\tvendor=acorn\n \t\t\t\t;;\n-\t\t\tsunos*)\n+\t\t\t*-sunos*)\n \t\t\t\tvendor=sun\n \t\t\t\t;;\n-\t\t\tcnk*|-aix*)\n+\t\t\t*-cnk* | *-aix*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n-\t\t\tbeos*)\n+\t\t\t*-beos*)\n \t\t\t\tvendor=be\n \t\t\t\t;;\n-\t\t\thpux*)\n+\t\t\t*-hpux*)\n \t\t\t\tvendor=hp\n \t\t\t\t;;\n-\t\t\tmpeix*)\n+\t\t\t*-mpeix*)\n \t\t\t\tvendor=hp\n \t\t\t\t;;\n-\t\t\thiux*)\n+\t\t\t*-hiux*)\n \t\t\t\tvendor=hitachi\n \t\t\t\t;;\n-\t\t\tunos*)\n+\t\t\t*-unos*)\n \t\t\t\tvendor=crds\n \t\t\t\t;;\n-\t\t\tdgux*)\n+\t\t\t*-dgux*)\n \t\t\t\tvendor=dg\n \t\t\t\t;;\n-\t\t\tluna*)\n+\t\t\t*-luna*)\n \t\t\t\tvendor=omron\n \t\t\t\t;;\n-\t\t\tgenix*)\n+\t\t\t*-genix*)\n \t\t\t\tvendor=ns\n \t\t\t\t;;\n-\t\t\tclix*)\n+\t\t\t*-clix*)\n \t\t\t\tvendor=intergraph\n \t\t\t\t;;\n-\t\t\tmvs* | opened*)\n+\t\t\t*-mvs* | *-opened*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t*-os400*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n-\t\t\tos400*)\n+\t\t\ts390-* | s390x-*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n-\t\t\tptx*)\n+\t\t\t*-ptx*)\n \t\t\t\tvendor=sequent\n \t\t\t\t;;\n-\t\t\ttpf*)\n+\t\t\t*-tpf*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n-\t\t\tvxsim* | vxworks* | windiss*)\n+\t\t\t*-vxsim* | *-vxworks* | *-windiss*)\n \t\t\t\tvendor=wrs\n \t\t\t\t;;\n-\t\t\taux*)\n+\t\t\t*-aux*)\n \t\t\t\tvendor=apple\n \t\t\t\t;;\n-\t\t\thms*)\n+\t\t\t*-hms*)\n \t\t\t\tvendor=hitachi\n \t\t\t\t;;\n-\t\t\tmpw* | macos*)\n+\t\t\t*-mpw* | *-macos*)\n \t\t\t\tvendor=apple\n \t\t\t\t;;\n-\t\t\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n+\t\t\t*-*mint | *-mint[0-9]* | *-*MiNT | *-MiNT[0-9]*)\n \t\t\t\tvendor=atari\n \t\t\t\t;;\n-\t\t\tvos*)\n+\t\t\t*-vos*)\n \t\t\t\tvendor=stratus\n \t\t\t\t;;\n \t\tesac\n \t\t;;\n esac\n \n-echo \"$cpu-$vendor-$os\"\n+echo \"$cpu-$vendor-${kernel:+$kernel-}$os\"\n exit\n \n # Local variables:"
      },
      {
        "sha": "34a030fab7d1f3b9ba4b177bf175bbfd06b9360a",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -49,7 +49,7 @@ define int_get_build_id\n $(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n $(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($($(1)_type)_native_binutils) $($(1)_dependencies)))\n $(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n-$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps) $($($(1)_type)_id_string))\n+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps) $($($(1)_type)_id))\n $(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n final_build_id_long+=$($(package)_build_id_long)\n \n@@ -140,7 +140,13 @@ $(1)_config_env+=CMAKE_MODULE_PATH=$($($(1)_type)_prefix)/lib/cmake\n $(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n $(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n $(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n-$(1)_autoconf=./configure --host=$($($(1)_type)_host) --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n+\n+# Setting a --build type that differs from --host will explicitly enable\n+# cross-compilation mode. Note that --build defaults to the output of\n+# config.guess, which is what we set it too here. This also quells autoconf\n+# warnings, \"If you wanted to set the --build type, don't use --host.\",\n+# when using versions older than 2.70.\n+$(1)_autoconf=./configure --build=$(BUILD) --host=$($($(1)_type)_host) --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n ifneq ($($(1)_nm),)\n $(1)_autoconf += NM=\"$$($(1)_nm)\"\n endif"
      },
      {
        "sha": "ac69ca7ee1fa2c0aa19dfd01ea76201caa70203a",
        "filename": "depends/gen_id",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/gen_id",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/gen_id",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/gen_id?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,74 @@\n+#!/usr/bin/env bash\n+\n+# Usage: env [ CC=... ] [ CXX=... ] [ AR=... ] [ RANLIB=... ] [ STRIP=... ] \\\n+#            [ DEBUG=... ] ./build-id [ID_SALT]...\n+#\n+# Prints to stdout a SHA256 hash representing the current toolset, used by\n+# depends/Makefile as a build id for caching purposes (detecting when the\n+# toolset has changed and the cache needs to be invalidated).\n+#\n+# If the DEBUG environment variable is non-empty and the system has `tee`\n+# available in its $PATH, the pre-image to the SHA256 hash will be printed to\n+# stderr. This is to help developers debug caching issues in depends.\n+\n+# This script explicitly does not `set -e` because id determination is mostly\n+# opportunistic: it is fine that things fail, as long as they fail consistently.\n+\n+# Command variables (CC/CXX/AR) which can be blank are invoked with `bash -c`,\n+# because the \"command not found\" error message printed by shells often include\n+# the line number, like so:\n+#\n+#     ./depends/gen_id: line 43: --version: command not found\n+#\n+# By invoking with `bash -c`, we ensure that the line number is always 1\n+\n+(\n+    # Redirect stderr to stdout\n+    exec 2>&1\n+\n+    echo \"BEGIN ALL\"\n+\n+    # Include any ID salts supplied via command line\n+    echo \"BEGIN ID SALT\"\n+    echo \"$@\"\n+    echo \"END ID SALT\"\n+\n+    # GCC only prints COLLECT_LTO_WRAPPER when invoked with just \"-v\", but we want\n+    # the information from \"-v -E -\" as well, so just include both.\n+    echo \"BEGIN CC\"\n+    bash -c \"${CC} -v\"\n+    bash -c \"${CC} -v -E -xc -o /dev/null - < /dev/null\"\n+    bash -c \"${CC} -v -E -xobjective-c -o /dev/null - < /dev/null\"\n+    echo \"END CC\"\n+\n+    echo \"BEGIN CXX\"\n+    bash -c \"${CXX} -v\"\n+    bash -c \"${CXX} -v -E -xc++ -o /dev/null - < /dev/null\"\n+    bash -c \"${CXX} -v -E -xobjective-c++ -o /dev/null - < /dev/null\"\n+    echo \"END CXX\"\n+\n+    echo \"BEGIN AR\"\n+    bash -c \"${AR} --version\"\n+    env | grep '^AR_'\n+    echo \"ZERO_AR_DATE=${ZERO_AR_DATE}\"\n+    echo \"END AR\"\n+\n+    echo \"BEGIN RANLIB\"\n+    bash -c \"${RANLIB} --version\"\n+    env | grep '^RANLIB_'\n+    echo \"END RANLIB\"\n+\n+    echo \"BEGIN STRIP\"\n+    bash -c \"${STRIP} --version\"\n+    env | grep '^STRIP_'\n+    echo \"END STRIP\"\n+\n+    echo \"END ALL\"\n+) | if [ -n \"$DEBUG\" ] && command -v tee > /dev/null 2>&1; then\n+        # When debugging and `tee` is available, output the preimage to stderr\n+        # in addition to passing through stdin to stdout\n+        tee >(cat 1>&2)\n+    else\n+        # Otherwise, passthrough stdin to stdout\n+        cat\n+    fi | ${SHA256SUM} - | cut -d' ' -f1"
      },
      {
        "sha": "5a7ae2df9a346d4e9bc474825d5c259e3f4c3867",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 11,
        "deletions": 17,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,8 +1,8 @@\n OSX_MIN_VERSION=10.14\n-OSX_SDK_VERSION=10.15.1\n-XCODE_VERSION=11.3.1\n-XCODE_BUILD_ID=11C505\n-LD64_VERSION=530\n+OSX_SDK_VERSION=10.15.6\n+XCODE_VERSION=12.1\n+XCODE_BUILD_ID=12A7403\n+LD64_VERSION=609\n \n OSX_SDK=$(SDK_PATH)/Xcode-$(XCODE_VERSION)-$(XCODE_BUILD_ID)-extracted-SDK-with-libcxx-headers\n \n@@ -12,14 +12,13 @@ ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n # FORCE_USE_SYSTEM_CLANG is empty, so we use our depends-managed, pinned clang\n # from llvm.org\n \n-# The native_cctools package is what provides clang when FORCE_USE_SYSTEM_CLANG\n-# is empty\n+# Clang is a dependency of native_cctools when FORCE_USE_SYSTEM_CLANG is empty\n darwin_native_toolchain=native_cctools\n \n clang_prog=$(build_prefix)/bin/clang\n clangxx_prog=$(clang_prog)++\n \n-clang_resource_dir=$(build_prefix)/lib/clang/$(native_cctools_clang_version)\n+clang_resource_dir=$(build_prefix)/lib/clang/$(native_clang_version)\n else\n # FORCE_USE_SYSTEM_CLANG is non-empty, so we use the clang from the user's\n # system\n@@ -61,16 +60,11 @@ $(foreach TOOL,$(cctools_TOOLS),$(eval darwin_$(TOOL) = $$(build_prefix)/bin/$$(\n #         Explicitly point to our binaries (e.g. cctools) so that they are\n #         ensured to be found and preferred over other possibilities.\n #\n-#     -stdlib=libc++ -nostdinc++ -Xclang -cxx-isystem$(OSX_SDK)/usr/include/c++/v1\n+#     -stdlib=libc++ -stdlib++-isystem$(OSX_SDK)/usr/include/c++/v1\n #\n #         Forces clang to use the libc++ headers from our SDK and completely\n #         forget about the libc++ headers from the standard directories\n #\n-#         TODO: Once we start requiring a clang version that has the\n-#         -stdlib++-isystem<directory> flag first introduced here:\n-#         https://reviews.llvm.org/D64089, we should use that instead. Read the\n-#         differential summary there for more details.\n-#\n #     -Xclang -*system<path_a> \\\n #     -Xclang -*system<path_b> \\\n #     -Xclang -*system<path_c> ...\n@@ -101,17 +95,17 @@ darwin_CC=env -u C_INCLUDE_PATH -u CPLUS_INCLUDE_PATH \\\n               -u LIBRARY_PATH \\\n             $(clang_prog) --target=$(host) -mmacosx-version-min=$(OSX_MIN_VERSION) \\\n               -B$(build_prefix)/bin -mlinker-version=$(LD64_VERSION) \\\n-              --sysroot=$(OSX_SDK) \\\n+              -isysroot$(OSX_SDK) \\\n               -Xclang -internal-externc-isystem$(clang_resource_dir)/include \\\n               -Xclang -internal-externc-isystem$(OSX_SDK)/usr/include\n darwin_CXX=env -u C_INCLUDE_PATH -u CPLUS_INCLUDE_PATH \\\n                -u OBJC_INCLUDE_PATH -u OBJCPLUS_INCLUDE_PATH -u CPATH \\\n                -u LIBRARY_PATH \\\n              $(clangxx_prog) --target=$(host) -mmacosx-version-min=$(OSX_MIN_VERSION) \\\n                -B$(build_prefix)/bin -mlinker-version=$(LD64_VERSION) \\\n-               --sysroot=$(OSX_SDK) \\\n-               -stdlib=libc++ -nostdinc++ \\\n-               -Xclang -cxx-isystem$(OSX_SDK)/usr/include/c++/v1 \\\n+               -isysroot$(OSX_SDK) \\\n+               -stdlib=libc++ \\\n+               -stdlib++-isystem$(OSX_SDK)/usr/include/c++/v1 \\\n                -Xclang -internal-externc-isystem$(clang_resource_dir)/include \\\n                -Xclang -internal-externc-isystem$(OSX_SDK)/usr/include\n "
      },
      {
        "sha": "07da752492c8b8346b8d4d7c000abb8a252946da",
        "filename": "depends/hosts/linux.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,7 +7,7 @@ linux_release_CXXFLAGS=$(linux_release_CFLAGS)\n linux_debug_CFLAGS=-O1\n linux_debug_CXXFLAGS=$(linux_debug_CFLAGS)\n \n-linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\n+linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_LIBCPP_DEBUG=1\n \n ifeq (86,$(findstring 86,$(build_arch)))\n i686_linux_CC=gcc -m32"
      },
      {
        "sha": "f879d176f5079764ed2bad9aaa1de24e45535754",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,6 +1,6 @@\n package=boost\n $(package)_version=1_71_0\n-$(package)_download_path=https://dl.bintray.com/boostorg/release/$(subst _,.,$($(package)_version))/source/\n+$(package)_download_path=https://boostorg.jfrog.io/artifactory/main/release/$(subst _,.,$($(package)_version))/source/\n $(package)_file_name=boost_$($(package)_version).tar.bz2\n $(package)_sha256_hash=d73a8da01e8bf8c7eda40b4c84915071a8c8a0df4a6734537ddde4a8580524ee\n $(package)_dependencies=native_b2\n@@ -22,10 +22,11 @@ $(package)_toolset_$(host_os)=clang\n else\n $(package)_toolset_$(host_os)=gcc\n endif\n-$(package)_config_libraries=filesystem,system,thread,test\n+$(package)_config_libraries=filesystem,system,test\n $(package)_cxxflags=-std=c++17 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n $(package)_cxxflags_android=-fPIC\n+$(package)_cxxflags_x86_64_darwin=-fcf-protection=full\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "dad317193c024f78727bbcb9883dac1a3accfdf7",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,14 +1,8 @@\n package=libevent\n-$(package)_version=2.1.11-stable\n-$(package)_download_path=https://github.com/libevent/libevent/archive/\n-$(package)_file_name=release-$($(package)_version).tar.gz\n-$(package)_sha256_hash=229393ab2bf0dc94694f21836846b424f3532585bac3468738b7bf752c03901e\n-$(package)_patches=0001-fix-windows-getaddrinfo.patch\n-\n-define $(package)_preprocess_cmds\n-   patch -p1 < $($(package)_patch_dir)/0001-fix-windows-getaddrinfo.patch && \\\n-  ./autogen.sh\n-endef\n+$(package)_version=2.1.12-stable\n+$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-$($(package)_version)/\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=92e6de1be9ec176428fd2367677e61ceffc2ee1cb119035037a27d346b0403bb\n \n # When building for Windows, we set _WIN32_WINNT to target the same Windows\n # version as we do in configure. Due to quirks in libevents build system, this"
      },
      {
        "sha": "cdcf8c0bf2c188005272bdec1a107b4a3e94f0c4",
        "filename": "depends/packages/libnatpmp.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libnatpmp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libnatpmp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libnatpmp.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,11 +1,14 @@\n package=libnatpmp\n-$(package)_version=20150609\n-$(package)_download_path=https://miniupnp.tuxfamily.org/files/\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=e1aa9c4c4219bc06943d6b2130f664daee213fb262fcb94dd355815b8f4536b0\n+$(package)_version=4536032ae32268a45c073a4d5e91bbab4534773a\n+$(package)_download_path=https://github.com/miniupnp/libnatpmp/archive\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=543b460aab26acf91e11d15e17d8798f845304199eea2d76c2f444ec749c5383\n \n define $(package)_set_vars\n   $(package)_build_opts=CC=\"$($(package)_cc)\"\n+  $(package)_build_opts_mingw32=CPPFLAGS=-DNATPMP_STATICLIB\n+  $(package)_build_opts_darwin=LIBTOOL=\"$($(package)_libtool)\"\n+  $(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "710f43959c07f4d72b13d1c0bbb3846a0266bf06",
        "filename": "depends/packages/libxcb.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -15,25 +15,20 @@ $(package)_config_opts += --disable-composite --disable-damage --disable-dpms\n $(package)_config_opts += --disable-dri2 --disable-dri3 --disable-glx\n $(package)_config_opts += --disable-present --disable-randr --disable-record\n $(package)_config_opts += --disable-render --disable-resource --disable-screensaver\n-$(package)_config_opts += --disable-shape --disable-shm --disable-sync\n+$(package)_config_opts += --disable-shape --disable-sync\n $(package)_config_opts += --disable-xevie --disable-xfixes --disable-xfree86-dri\n-$(package)_config_opts += --disable-xinerama --disable-xinput --disable-xkb\n+$(package)_config_opts += --disable-xinerama --disable-xinput\n $(package)_config_opts += --disable-xprint --disable-selinux --disable-xtest\n $(package)_config_opts += --disable-xv --disable-xvmc\n endef\n \n define $(package)_preprocess_cmds\n-  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub build-aux &&\\\n+  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub build-aux && \\\n   sed \"s/pthread-stubs//\" -i configure\n endef\n \n-# Don't install xcb headers to the default path in order to work around a qt\n-# build issue: https://bugreports.qt.io/browse/QTBUG-34748\n-# When using qt's internal libxcb, it may end up finding the real headers in\n-# depends staging. Use a non-default path to avoid that.\n-\n define $(package)_config_cmds\n-  $($(package)_autoconf) --includedir=$(host_prefix)/include/xcb-shared\n+  $($(package)_autoconf)\n endef\n \n define $(package)_build_cmds\n@@ -45,5 +40,5 @@ define $(package)_stage_cmds\n endef\n \n define $(package)_postprocess_cmds\n-  rm -rf share/man share/doc lib/*.la\n+  rm -rf share lib/*.la\n endef"
      },
      {
        "sha": "8c6c56545f0758b4cf7f8a1ecff82388e724ee82",
        "filename": "depends/packages/libxkbcommon.mk",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libxkbcommon.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/libxkbcommon.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxkbcommon.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,32 @@\n+package=libxkbcommon\n+$(package)_version=0.8.4\n+$(package)_download_path=https://xkbcommon.org/download/\n+$(package)_file_name=$(package)-$($(package)_version).tar.xz\n+$(package)_sha256_hash=60ddcff932b7fd352752d51a5c4f04f3d0403230a584df9a2e0d5ed87c486c8b\n+$(package)_dependencies=libxcb\n+\n+define $(package)_set_vars\n+$(package)_config_opts = --enable-option-checking --disable-dependency-tracking\n+$(package)_config_opts += --disable-static --disable-docs\n+endef\n+\n+define $(package)_preprocess_cmds\n+  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub build-aux\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm lib/*.la\n+endef\n+"
      },
      {
        "sha": "99f5b0a8dbcf2c903e1c3d07e78221912d572d02",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,9 +1,9 @@\n package=miniupnpc\n-$(package)_version=2.0.20180203\n+$(package)_version=2.2.2\n $(package)_download_path=https://miniupnp.tuxfamily.org/files/\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=90dda8c7563ca6cd4a83e23b3c66dbbea89603a1675bfdb852897c2c9cc220b7\n-$(package)_patches=dont_use_wingen.patch\n+$(package)_sha256_hash=888fb0976ba61518276fe1eda988589c700a3f2a69d71089260d75562afd3687\n+$(package)_patches=dont_leak_info.patch\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\"\n@@ -13,9 +13,7 @@ $(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$\n endef\n \n define $(package)_preprocess_cmds\n-  mkdir dll && \\\n-  sed -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"$($(package)_version)\\\"|' -e 's|OS/version|$(host)|' miniupnpcstrings.h.in > miniupnpcstrings.h && \\\n-  patch -p1 < $($(package)_patch_dir)/dont_use_wingen.patch\n+  patch -p1 < $($(package)_patch_dir)/dont_leak_info.patch\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "885207fce9af5b2af4f7b7dad20f3b9064a3c299",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 11,
        "deletions": 94,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,86 +1,19 @@\n package=native_cctools\n-$(package)_version=55562e4073dea0fbfd0b20e0bf69ffe6390c7f97\n+$(package)_version=2ef2e931cf641547eb8a68cfebde61003587c9fd\n $(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=e51995a843533a3dac155dd0c71362dd471597a2d23f13dff194c6285362f875\n+$(package)_sha256_hash=6b73269efdf5c58a070e7357b66ee760501388549d6a12b423723f45888b074b\n $(package)_build_subdir=cctools\n-$(package)_patches=ld64_disable_threading.patch\n-\n-ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n-$(package)_clang_version=8.0.0\n-$(package)_clang_download_path=https://releases.llvm.org/$($(package)_clang_version)\n-$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n-$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n-$(package)_clang_sha256_hash=9ef854b71949f825362a119bf2597f744836cb571131ae6b721cd102ffea8cd0\n-endif\n-\n-$(package)_libtapi_version=3efb201881e7a76a21e0554906cf306432539cef\n-$(package)_libtapi_download_path=https://github.com/tpoechtrager/apple-libtapi/archive\n-$(package)_libtapi_download_file=$($(package)_libtapi_version).tar.gz\n-$(package)_libtapi_file_name=$($(package)_libtapi_version).tar.gz\n-$(package)_libtapi_sha256_hash=380c1ca37cfa04a8699d0887a8d3ee1ad27f3d08baba78887c73b09485c0fbd3\n-\n-$(package)_extra_sources=$($(package)_libtapi_file_name)\n-ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n-$(package)_extra_sources += $($(package)_clang_file_name)\n-endif\n-\n-ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n-define $(package)_fetch_cmds\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_libtapi_download_path),$($(package)_libtapi_download_file),$($(package)_libtapi_file_name),$($(package)_libtapi_sha256_hash))\n-endef\n-else\n-define $(package)_fetch_cmds\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_libtapi_download_path),$($(package)_libtapi_download_file),$($(package)_libtapi_file_name),$($(package)_libtapi_sha256_hash))\n-endef\n-endif\n-\n-ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n-define $(package)_extract_cmds\n-  mkdir -p $($(package)_extract_dir) && \\\n-  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_clang_sha256_hash)  $($(package)_source_dir)/$($(package)_clang_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_libtapi_sha256_hash)  $($(package)_source_dir)/$($(package)_libtapi_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  mkdir -p toolchain/bin toolchain/lib/clang/$($(package)_clang_version)/include && \\\n-  mkdir -p libtapi && \\\n-  tar --no-same-owner --strip-components=1 -C libtapi -xf $($(package)_source_dir)/$($(package)_libtapi_file_name) && \\\n-  tar --no-same-owner --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n-  rm -f toolchain/lib/libc++abi.so* && \\\n-  tar --no-same-owner --strip-components=1 -xf $($(package)_source)\n-endef\n-else\n-define $(package)_extract_cmds\n-  mkdir -p $($(package)_extract_dir) && \\\n-  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_libtapi_sha256_hash)  $($(package)_source_dir)/$($(package)_libtapi_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  mkdir -p libtapi && \\\n-  tar --no-same-owner --strip-components=1 -C libtapi -xf $($(package)_source_dir)/$($(package)_libtapi_file_name) && \\\n-  tar --no-same-owner --strip-components=1 -xf $($(package)_source)\n-endef\n-endif\n+$(package)_dependencies=native_libtapi\n \n define $(package)_set_vars\n-  $(package)_config_opts=--target=$(host) --with-libtapi=$($(package)_extract_dir)\n+  $(package)_config_opts=--target=$(host)\n   $(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n   ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n-  $(package)_config_opts+=--enable-lto-support --with-llvm-config=$($(package)_extract_dir)/toolchain/bin/llvm-config\n-  $(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n-  $(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n-  else\n-  $(package)_cc=clang\n-  $(package)_cxx=clang++\n+  $(package)_config_opts+=--enable-lto-support --with-llvm-config=$(build_prefix)/bin/llvm-config\n   endif\n-endef\n-\n-define $(package)_preprocess_cmds\n-  CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/build.sh && \\\n-  CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/install.sh && \\\n-  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch\n+  $(package)_cc=$(clang_prog)\n+  $(package)_cxx=$(clangxx_prog)\n endef\n \n define $(package)_config_cmds\n@@ -91,26 +24,10 @@ define $(package)_build_cmds\n   $(MAKE)\n endef\n \n-ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/lib/ && \\\n-  cd $($(package)_extract_dir) && \\\n-  cp lib/libtapi.so.6 $($(package)_staging_prefix_dir)/lib/ && \\\n-  cd $($(package)_extract_dir)/toolchain && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\\n-  cp bin/clang $($(package)_staging_prefix_dir)/bin/ &&\\\n-  cp -P bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n-  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n-  cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n-  cp bin/dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n endef\n-else\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/lib/ && \\\n-  cd $($(package)_extract_dir) && \\\n-  cp lib/libtapi.so.6 $($(package)_staging_prefix_dir)/lib/\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share\n endef\n-endif"
      },
      {
        "sha": "36adeb196dc77081eedf81b8ebeab5fbecb8c598",
        "filename": "depends/packages/native_clang.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_clang.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_clang.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_clang.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,26 @@\n+package=native_clang\n+$(package)_version=10.0.1\n+$(package)_download_path=https://github.com/llvm/llvm-project/releases/download/llvmorg-$($(package)_version)\n+$(package)_download_file=clang+llvm-$($(package)_version)-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n+$(package)_file_name=clang+llvm-$($(package)_version)-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n+$(package)_sha256_hash=48b83ef827ac2c213d5b64f5ad7ed082c8bcb712b46644e0dc5045c6f462c231\n+\n+define $(package)_preprocess_cmds\n+  rm -f $($(package)_extract_dir)/lib/libc++abi.so*\n+endef\n+\n+define $(package)_stage_cmds\n+  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_version)/include && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/bin && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/include && \\\n+  cp bin/clang $($(package)_staging_prefix_dir)/bin/ && \\\n+  cp -P bin/clang++ $($(package)_staging_prefix_dir)/bin/ && \\\n+  cp bin/dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n+  cp bin/llvm-config $($(package)_staging_prefix_dir)/bin/ && \\\n+  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n+  cp -rf lib/clang/$($(package)_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_version)/include/\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rmdir include\n+endef"
      },
      {
        "sha": "c7c8adef41580324169ac5be802beafa9860759f",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,7 +12,7 @@ define $(package)_preprocess_cmds\n endef\n \n define $(package)_config_cmds\n-  $($(package)_cmake) -DCMAKE_C_FLAGS=\"$$($(1)_cflags) -Wl,--build-id=none\" ..\n+  $($(package)_cmake) -DCMAKE_C_FLAGS=\"$$($(1)_cflags) -Wl,--build-id=none\" -DCMAKE_SKIP_RPATH=\"ON\" -DCMAKE_EXE_LINKER_FLAGS=\"-static\" -DCMAKE_FIND_LIBRARY_SUFFIXES=\".a\" ..\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "14653ce9fb0b70a110ee8d80c743a6833f60c21b",
        "filename": "depends/packages/native_libmultiprocess.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_libmultiprocess.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_libmultiprocess.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libmultiprocess.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,8 +1,8 @@\n package=native_libmultiprocess\n-$(package)_version=5741d750a04e644a03336090d8979c6d033e32c0\n+$(package)_version=d576d975debdc9090bd2582f83f49c76c0061698\n $(package)_download_path=https://github.com/chaincodelabs/libmultiprocess/archive\n $(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=ac848db49a6ed53e423c62d54bd87f1f08cbb0326254a8667e10bbfe5bf032a4\n+$(package)_sha256_hash=9f8b055c8bba755dc32fe799b67c20b91e7b13e67cadafbc54c0f1def057a370\n $(package)_dependencies=native_capnp\n \n define $(package)_config_cmds"
      },
      {
        "sha": "60b898da5f2fd4d923f8171a0980ef22158454b1",
        "filename": "depends/packages/native_libtapi.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_libtapi.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_libtapi.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libtapi.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,20 @@\n+package=native_libtapi\n+$(package)_version=664b8414f89612f2dfd35a9b679c345aa5389026\n+$(package)_download_path=https://github.com/tpoechtrager/apple-libtapi/archive\n+$(package)_download_file=$($(package)_version).tar.gz\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=62e419c12d1c9fad67cc1cd523132bc00db050998337c734c15bc8d73cc02b61\n+\n+ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n+$(package)_dependencies=native_clang\n+endif\n+\n+define $(package)_build_cmds\n+  CC=$(clang_prog) CXX=$(clangxx_prog) INSTALLPREFIX=$($(package)_staging_prefix_dir) ./build.sh\n+endef\n+\n+define $(package)_stage_cmds\n+  ./install.sh && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/include/llvm-c && \\\n+  cp src/llvm/include/llvm-c/lto.h $($(package)_staging_prefix_dir)/include/llvm-c\n+endef"
      },
      {
        "sha": "783f87ca7c0438f1c84b7354b352d74bbc8b1a37",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,8 +1,8 @@\n package=native_mac_alias\n-$(package)_version=2.1.1\n+$(package)_version=2.2.0\n $(package)_download_path=https://github.com/al45tair/mac_alias/archive/\n $(package)_file_name=v$($(package)_version).tar.gz\n-$(package)_sha256_hash=c0ffceee14f7d04a6eb323fb7b8217dc3f373b346198d2ca42300a8362db7efa\n+$(package)_sha256_hash=421e6d7586d1f155c7db3e7da01ca0dacc9649a509a253ad7077b70174426499\n $(package)_install_libdir=$(build_prefix)/lib/python3/dist-packages\n \n define $(package)_build_cmds"
      },
      {
        "sha": "9094e327ef5b0103c370916b7ee0cb074f950a03",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,10 +1,8 @@\n packages:=boost libevent\n \n-qt_packages = zlib\n-\n qrencode_packages = qrencode\n \n-qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig\n+qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig libxkbcommon\n qt_android_packages=qt\n \n qt_darwin_packages=qt\n@@ -26,5 +24,10 @@ darwin_native_packages = native_ds_store native_mac_alias\n $(host_arch)_$(host_os)_native_packages += native_b2\n \n ifneq ($(build_os),darwin)\n-darwin_native_packages += native_cctools native_libdmg-hfsplus\n+darwin_native_packages += native_cctools native_libtapi native_libdmg-hfsplus\n+\n+ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n+darwin_native_packages+= native_clang\n+endif\n+\n endif"
      },
      {
        "sha": "165c27f5e3cc4947dccf03dddf4bb39cb0bc9a4c",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 34,
        "deletions": 39,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,23 +1,22 @@\n PACKAGE=qt\n-$(package)_version=5.9.8\n-$(package)_download_path=https://download.qt.io/official_releases/qt/5.9/$($(package)_version)/submodules\n-$(package)_suffix=opensource-src-$($(package)_version).tar.xz\n+$(package)_version=5.12.11\n+$(package)_download_path=https://download.qt.io/official_releases/qt/5.12/$($(package)_version)/submodules\n+$(package)_suffix=everywhere-src-$($(package)_version).tar.xz\n $(package)_file_name=qtbase-$($(package)_suffix)\n-$(package)_sha256_hash=9b9dec1f67df1f94bce2955c5604de992d529dde72050239154c56352da0907d\n-$(package)_dependencies=zlib\n-$(package)_linux_dependencies=freetype fontconfig libxcb\n+$(package)_sha256_hash=1c1b4e33137ca77881074c140d54c3c9747e845a31338cfe8680f171f0bc3a39\n+$(package)_linux_dependencies=freetype fontconfig libxcb libxkbcommon\n $(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch\n-$(package)_patches+= fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n+$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_no_printer.patch no-xlib.patch\n $(package)_patches+= fix_android_qmake_conf.patch fix_android_jni_static.patch dont_hardcode_pwd.patch\n-$(package)_patches+= freetype_back_compat.patch drop_lrelease_dependency.patch fix_powerpc_libpng.patch\n-$(package)_patches+= fix_mingw_cross_compile.patch fix_qpainter_non_determinism.patch\n+$(package)_patches+= drop_lrelease_dependency.patch no_sdk_version_check.patch\n+$(package)_patches+= fix_lib_paths.patch fix_android_pch.patch\n+$(package)_patches+= qtbase-moc-ignore-gcc-macro.patch fix_limits_header.patch\n \n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n-$(package)_qttranslations_sha256_hash=fb5a47799754af73d3bf501fe513342cfe2fc37f64e80df5533f6110e804220c\n+$(package)_qttranslations_sha256_hash=577b0668a777eb2b451c61e8d026d79285371597ce9df06b6dee6c814164b7c3\n \n $(package)_qttools_file_name=qttools-$($(package)_suffix)\n-$(package)_qttools_sha256_hash=a97556eb7b2f30252cdd8a598c396cfce2b2f79d2bae883af6d3b26a2cdcc63c\n+$(package)_qttools_sha256_hash=98b2aaca230458f65996f3534fd471d2ffd038dd58ac997c0589c06dc2385b4f\n \n $(package)_extra_sources  = $($(package)_qttranslations_file_name)\n $(package)_extra_sources += $($(package)_qttools_file_name)\n@@ -26,6 +25,7 @@ define $(package)_set_vars\n $(package)_config_opts_release = -release\n $(package)_config_opts_release += -silent\n $(package)_config_opts_debug = -debug\n+$(package)_config_opts_debug += -optimized-tools\n $(package)_config_opts += -bindir $(build_prefix)/bin\n $(package)_config_opts += -c++std c++1z\n $(package)_config_opts += -confirm-license\n@@ -49,7 +49,6 @@ $(package)_config_opts += -no-mtdev\n $(package)_config_opts += -no-openssl\n $(package)_config_opts += -no-openvg\n $(package)_config_opts += -no-reduce-relocations\n-$(package)_config_opts += -no-qml-debug\n $(package)_config_opts += -no-sctp\n $(package)_config_opts += -no-securetransport\n $(package)_config_opts += -no-sql-db2\n@@ -63,17 +62,15 @@ $(package)_config_opts += -no-sql-sqlite\n $(package)_config_opts += -no-sql-sqlite2\n $(package)_config_opts += -no-system-proxies\n $(package)_config_opts += -no-use-gold-linker\n-$(package)_config_opts += -no-xinput2\n $(package)_config_opts += -nomake examples\n $(package)_config_opts += -nomake tests\n $(package)_config_opts += -opensource\n-$(package)_config_opts += -optimized-tools\n $(package)_config_opts += -pkg-config\n $(package)_config_opts += -prefix $(host_prefix)\n $(package)_config_opts += -qt-libpng\n $(package)_config_opts += -qt-pcre\n $(package)_config_opts += -qt-harfbuzz\n-$(package)_config_opts += -system-zlib\n+$(package)_config_opts += -qt-zlib\n $(package)_config_opts += -static\n $(package)_config_opts += -v\n $(package)_config_opts += -no-feature-bearermanagement\n@@ -94,10 +91,10 @@ $(package)_config_opts += -no-feature-printdialog\n $(package)_config_opts += -no-feature-printer\n $(package)_config_opts += -no-feature-printpreviewdialog\n $(package)_config_opts += -no-feature-printpreviewwidget\n-$(package)_config_opts += -no-feature-regularexpression\n $(package)_config_opts += -no-feature-sessionmanager\n $(package)_config_opts += -no-feature-socks5\n $(package)_config_opts += -no-feature-sql\n+$(package)_config_opts += -no-feature-sqlmodel\n $(package)_config_opts += -no-feature-statemachine\n $(package)_config_opts += -no-feature-syntaxhighlighter\n $(package)_config_opts += -no-feature-textbrowser\n@@ -115,6 +112,8 @@ $(package)_config_opts += -no-feature-xml\n $(package)_config_opts_darwin = -no-dbus\n $(package)_config_opts_darwin += -no-opengl\n $(package)_config_opts_darwin += -pch\n+$(package)_config_opts_darwin += -no-feature-corewlan\n+$(package)_config_opts_darwin += -device-option QMAKE_MACOSX_DEPLOYMENT_TARGET=$(OSX_MIN_VERSION)\n \n ifneq ($(build_os),darwin)\n $(package)_config_opts_darwin += -xplatform macx-clang-linux\n@@ -127,15 +126,15 @@ $(package)_config_opts_darwin += -device-option XCODE_VERSION=$(XCODE_VERSION)\n endif\n \n # for macOS on Apple Silicon (ARM) see https://bugreports.qt.io/browse/QTBUG-85279\n-$(package)_config_opts_arm_darwin += -device-option QMAKE_APPLE_DEVICE_ARCHS=arm64\n+$(package)_config_opts_aarch64_darwin += -device-option QMAKE_APPLE_DEVICE_ARCHS=arm64\n \n-$(package)_config_opts_linux  = -qt-xkbcommon-x11\n-$(package)_config_opts_linux += -qt-xcb\n+$(package)_config_opts_linux = -qt-xcb\n $(package)_config_opts_linux += -no-xcb-xlib\n $(package)_config_opts_linux += -no-feature-xlib\n $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -fontconfig\n $(package)_config_opts_linux += -no-opengl\n+$(package)_config_opts_linux += -no-feature-vulkan\n $(package)_config_opts_linux += -dbus-runtime\n $(package)_config_opts_arm_linux += -platform linux-g++ -xplatform bitcoin-linux-g++\n $(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n@@ -149,6 +148,9 @@ $(package)_config_opts_s390x_linux = -platform linux-g++ -xplatform bitcoin-linu\n $(package)_config_opts_mingw32 = -no-opengl\n $(package)_config_opts_mingw32 += -no-dbus\n $(package)_config_opts_mingw32 += -xplatform win32-g++\n+$(package)_config_opts_mingw32 += \"QMAKE_CFLAGS = '$($(package)_cflags) $($(package)_cppflags)'\"\n+$(package)_config_opts_mingw32 += \"QMAKE_CXXFLAGS = '$($(package)_cflags) $($(package)_cppflags)'\"\n+$(package)_config_opts_mingw32 += \"QMAKE_LFLAGS = '$($(package)_ldflags)'\"\n $(package)_config_opts_mingw32 += -device-option CROSS_COMPILE=\"$(host)-\"\n $(package)_config_opts_mingw32 += -pch\n \n@@ -167,14 +169,12 @@ $(package)_config_opts_android += -no-fontconfig\n $(package)_config_opts_android += -L $(host_prefix)/lib\n $(package)_config_opts_android += -I $(host_prefix)/include\n $(package)_config_opts_android += -pch\n+$(package)_config_opts_android += -no-feature-vulkan\n \n $(package)_config_opts_aarch64_android += -android-arch arm64-v8a\n $(package)_config_opts_armv7a_android += -android-arch armeabi-v7a\n $(package)_config_opts_x86_64_android += -android-arch x86_64\n $(package)_config_opts_i686_android += -android-arch i686\n-\n-$(package)_build_env  = QT_RCC_TEST=1\n-$(package)_build_env += QT_RCC_SOURCE_DATE_OVERRIDE=1\n endef\n \n define $(package)_fetch_cmds\n@@ -220,21 +220,18 @@ endef\n # 8. Adjust a regex in toolchain.prf, to accommodate Guix's usage of\n # CROSS_LIBRARY_PATH. See #15277.\n define $(package)_preprocess_cmds\n-  patch -p1 -i $($(package)_patch_dir)/freetype_back_compat.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/fix_powerpc_libpng.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/drop_lrelease_dependency.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/dont_hardcode_pwd.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_qt_pkgconfig.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/fix_configure_mac.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_no_printer.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/fix_rcc_determinism.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/xkb-default.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_android_qmake_conf.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_android_jni_static.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/fix_riscv64_arch.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_android_pch.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/no-xlib.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/fix_mingw_cross_compile.patch && \\\n-  patch -p1 -i $($(package)_patch_dir)/fix_qpainter_non_determinism.patch &&\\\n+  patch -p1 -i $($(package)_patch_dir)/no_sdk_version_check.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_lib_paths.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/qtbase-moc-ignore-gcc-macro.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_limits_header.patch && \\\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n   cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n@@ -244,11 +241,8 @@ define $(package)_preprocess_cmds\n   echo \"!host_build: QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  sed -i.old \"s|QMAKE_CFLAGS           += |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CXXFLAGS         += |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"0,/^QMAKE_LFLAGS_/s|^QMAKE_LFLAGS_|!host_build: QMAKE_LFLAGS            = $($(package)_ldflags)\\n&|\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CC                = clang|QMAKE_CC                = $($(package)_cc)|\" qtbase/mkspecs/common/clang.conf && \\\n-  sed -i.old \"s|QMAKE_CXX               = clang++|QMAKE_CXX               = $($(package)_cxx)|\" qtbase/mkspecs/common/clang.conf && \\\n+  sed -i.old \"s|QMAKE_CC                = \\$$$$\\$$$${CROSS_COMPILE}clang|QMAKE_CC                = $($(package)_cc)|\" qtbase/mkspecs/common/clang.conf && \\\n+  sed -i.old \"s|QMAKE_CXX               = \\$$$$\\$$$${CROSS_COMPILE}clang++|QMAKE_CXX               = $($(package)_cxx)|\" qtbase/mkspecs/common/clang.conf && \\\n   sed -i.old \"s/LIBRARY_PATH/(CROSS_)?\\0/g\" qtbase/mkspecs/features/toolchain.prf\n endef\n \n@@ -258,27 +252,28 @@ define $(package)_config_cmds\n   export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n   cd qtbase && \\\n   ./configure $($(package)_config_opts) && \\\n-  echo \"host_build: QT_CONFIG ~= s/system-zlib/zlib\" >> mkspecs/qconfig.pri && \\\n-  echo \"CONFIG += force_bootstrap\" >> mkspecs/qconfig.pri && \\\n   cd .. && \\\n   $(MAKE) -C qtbase sub-src-clean && \\\n   qtbase/bin/qmake -o qttranslations/Makefile qttranslations/qttranslations.pro && \\\n   qtbase/bin/qmake -o qttranslations/translations/Makefile qttranslations/translations/translations.pro && \\\n   qtbase/bin/qmake -o qttools/src/linguist/lrelease/Makefile qttools/src/linguist/lrelease/lrelease.pro && \\\n-  qtbase/bin/qmake -o qttools/src/linguist/lupdate/Makefile qttools/src/linguist/lupdate/lupdate.pro\n+  qtbase/bin/qmake -o qttools/src/linguist/lupdate/Makefile qttools/src/linguist/lupdate/lupdate.pro && \\\n+  qtbase/bin/qmake -o qttools/src/linguist/lconvert/Makefile qttools/src/linguist/lconvert/lconvert.pro\n endef\n \n define $(package)_build_cmds\n   $(MAKE) -C qtbase/src $(addprefix sub-,$($(package)_qt_libs)) && \\\n   $(MAKE) -C qttools/src/linguist/lrelease && \\\n   $(MAKE) -C qttools/src/linguist/lupdate && \\\n+  $(MAKE) -C qttools/src/linguist/lconvert && \\\n   $(MAKE) -C qttranslations\n endef\n \n define $(package)_stage_cmds\n   $(MAKE) -C qtbase/src INSTALL_ROOT=$($(package)_staging_dir) $(addsuffix -install_subtargets,$(addprefix sub-,$($(package)_qt_libs))) && \\\n   $(MAKE) -C qttools/src/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n   $(MAKE) -C qttools/src/linguist/lupdate INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n+  $(MAKE) -C qttools/src/linguist/lconvert INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n   $(MAKE) -C qttranslations INSTALL_ROOT=$($(package)_staging_dir) install_subtargets\n endef\n "
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,31 +0,0 @@\n-package=zlib\n-$(package)_version=1.2.11\n-$(package)_download_path=https://www.zlib.net\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\n-\n-define $(package)_set_vars\n-$(package)_config_opts= CC=\"$($(package)_cc)\"\n-$(package)_config_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n-$(package)_config_opts+=RANLIB=\"$($(package)_ranlib)\"\n-$(package)_config_opts+=AR=\"$($(package)_ar)\"\n-$(package)_config_opts_darwin+=AR=\"$($(package)_libtool)\"\n-$(package)_config_opts_darwin+=ARFLAGS=\"-o\"\n-$(package)_config_opts_android+=CHOST=$(host)\n-endef\n-\n-# zlib has its own custom configure script that takes in options like CC,\n-# CFLAGS, RANLIB, AR, and ARFLAGS from the environment rather than from\n-# command-line arguments.\n-define $(package)_config_cmds\n-  env $($(package)_config_opts) ./configure --static --prefix=$(host_prefix)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) libz.a\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef\n-"
      },
      {
        "sha": "a98cd90bd58a20072443a11a9c412b447e8e98a1",
        "filename": "depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/0001-fix-windows-getaddrinfo.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,15 +0,0 @@\n-diff -ur libevent-2.1.8-stable.orig/configure.ac libevent-2.1.8-stable/configure.ac\n---- libevent-2.1.8-stable.orig/configure.ac\t2017-01-29 17:51:00.000000000 +0000\n-+++ libevent-2.1.8-stable/configure.ac\t2020-03-07 01:11:16.311335005 +0000\n-@@ -389,6 +389,10 @@\n- \t\t#ifdef HAVE_NETDB_H\n- \t\t#include <netdb.h>\n- \t\t#endif\n-+#ifdef _WIN32\n-+#include <winsock2.h>\n-+#include <ws2tcpip.h>\n-+#endif\n- \t    ]],\n- \t    [[\n- \t\tgetaddrinfo;\n-Only in libevent-2.1.8-stable: configure.ac~"
      },
      {
        "sha": "512f9c50ea8d7fbca35004e92756236721e0919c",
        "filename": "depends/patches/miniupnpc/dont_leak_info.patch",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/miniupnpc/dont_leak_info.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/miniupnpc/dont_leak_info.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/miniupnpc/dont_leak_info.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,32 @@\n+commit 8815452257437ba36607d0e2381c01142d1c7bb0\n+Author: fanquake <fanquake@gmail.com>\n+Date:   Thu Nov 19 10:51:19 2020 +0800\n+\n+    Don't leak OS and miniupnpc version info in User-Agent\n+\n+diff --git a//minisoap.c b/minisoap.c\n+index 7860667..775580b 100644\n+--- a/minisoap.c\n++++ b/minisoap.c\n+@@ -90,7 +90,7 @@ int soapPostSubmit(SOCKET fd,\n+ \theaderssize = snprintf(headerbuf, sizeof(headerbuf),\n+                        \"POST %s HTTP/%s\\r\\n\"\n+ \t                   \"Host: %s%s\\r\\n\"\n+-\t\t\t\t\t   \"User-Agent: \" OS_STRING \", \" UPNP_VERSION_STRING \", MiniUPnPc/\" MINIUPNPC_VERSION_STRING \"\\r\\n\"\n++\t\t\t\t\t   \"User-Agent: \" UPNP_VERSION_STRING \"\\r\\n\"\n+ \t                   \"Content-Length: %d\\r\\n\"\n+ \t\t\t\t\t   \"Content-Type: text/xml\\r\\n\"\n+ \t\t\t\t\t   \"SOAPAction: \\\"%s\\\"\\r\\n\"\n+diff --git a/miniwget.c b/miniwget.c\n+index d5b7970..05aeb9c 100644\n+--- a/miniwget.c\n++++ b/miniwget.c\n+@@ -444,7 +444,7 @@ miniwget3(const char * host,\n+                  \"GET %s HTTP/%s\\r\\n\"\n+ \t\t\t     \"Host: %s:%d\\r\\n\"\n+ \t\t\t\t \"Connection: Close\\r\\n\"\n+-\t\t\t\t \"User-Agent: \" OS_STRING \", \" UPNP_VERSION_STRING \", MiniUPnPc/\" MINIUPNPC_VERSION_STRING \"\\r\\n\"\n++\t\t\t\t \"User-Agent: \" UPNP_VERSION_STRING \"\\r\\n\"\n+ \n+ \t\t\t\t \"\\r\\n\",\n+ \t\t\t   path, httpversion, host, port);"
      },
      {
        "sha": "a1cc9b50d1509379b121ba3f228821cced0485f9",
        "filename": "depends/patches/miniupnpc/dont_use_wingen.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/miniupnpc/dont_use_wingen.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/miniupnpc/dont_use_wingen.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/miniupnpc/dont_use_wingen.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,26 +0,0 @@\n-commit e8077044df239bcf0d9e9980b0e1afb9f1f5c446\n-Author: fanquake <fanquake@gmail.com>\n-Date:   Tue Aug 18 20:50:19 2020 +0800\n-\n-    Don't use wingenminiupnpcstrings when generating miniupnpcstrings.h\n-\n-    The wingenminiupnpcstrings tool is used on Windows to generate version\n-    information. This information is irrelevant for us, and trying to use\n-    wingenminiupnpcstrings would cause builds to fail, so just don't use it.\n-\n-    We should be able to drop this once we are using 2.1 or later. See\n-    upstream commit: 9663c55c61408fdcc39a82987d2243f816b22932.\n-\n-diff --git a/Makefile.mingw b/Makefile.mingw\n-index 574720e..fcc17bb 100644\n---- a/Makefile.mingw\n-+++ b/Makefile.mingw\n-@@ -74,7 +74,7 @@ wingenminiupnpcstrings:\twingenminiupnpcstrings.o\n-\n- wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n-\n--miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n-+miniupnpcstrings.h: miniupnpcstrings.h.in\n- \twingenminiupnpcstrings $< $@\n-\n- minixml.o:\tminixml.c minixml.h"
      },
      {
        "sha": "2de6874cd4eb84f279a19fb0e71b7ede034bfd3a",
        "filename": "depends/patches/native_cctools/ld64_disable_threading.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/native_cctools/ld64_disable_threading.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/native_cctools/ld64_disable_threading.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/ld64_disable_threading.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,26 +0,0 @@\n-commit 584668415039adeed073decee7e04de28248afd3\n-Author: fanquake <fanquake@gmail.com>\n-Date:   Tue Aug 18 01:20:24 2020 +0000\n-\n-    Disable threading to fix non-determinism\n-\n-    A bug in the file parser can cause dependencies to be calculated\n-    differently based on which files have already been parsed. This is more\n-    likely to occur on systems with more CPUs.\n-\n-    Just disable threading for now. There is no noticeable slowdown.\n-\n-    See #9891.\n-\n-diff --git a/cctools/ld64/src/ld/InputFiles.h b/cctools/ld64/src/ld/InputFiles.h\n-index ef9c756..90a70b6 100644\n---- a/cctools/ld64/src/ld/InputFiles.h\n-+++ b/cctools/ld64/src/ld/InputFiles.h\n-@@ -25,7 +25,6 @@\n- #ifndef __INPUT_FILES_H__\n- #define __INPUT_FILES_H__\n-\n--#define HAVE_PTHREADS 1\n-\n- #include <stdlib.h>\n- #include <sys/types.h>"
      },
      {
        "sha": "9b918af77c464278eb796f20fcf7bc67d04e3dad",
        "filename": "depends/patches/qt/drop_lrelease_dependency.patch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/drop_lrelease_dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/drop_lrelease_dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/drop_lrelease_dependency.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -14,7 +14,7 @@ diff --git a/qttranslations/translations/translations.pro b/qttranslations/trans\n index 694544c..eff339d 100644\n --- a/qttranslations/translations/translations.pro\n +++ b/qttranslations/translations/translations.pro\n-@@ -109,3 +109,2 @@ updateqm.commands = $$LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n+@@ -107,3 +107,2 @@ updateqm.commands = $$LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n  silent:updateqm.commands = @echo lrelease ${QMAKE_FILE_IN} && $$updateqm.commands\n -updateqm.depends = $$LRELEASE_EXE\n  updateqm.name = LRELEASE ${QMAKE_FILE_IN}"
      },
      {
        "sha": "a186aeb8f6cfeb8f174866374686c9b516954195",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,6 +1,6 @@\n --- old/qtbase/src/plugins/platforms/android/androidjnimain.cpp\n +++ new/qtbase/src/plugins/platforms/android/androidjnimain.cpp\n-@@ -890,6 +890,14 @@\n+@@ -898,6 +898,14 @@\n          __android_log_print(ANDROID_LOG_FATAL, \"Qt\", \"registerNatives failed\");\n          return -1;\n      }"
      },
      {
        "sha": "bed6e4bb635975e748a95c88cdb790510a0f3893",
        "filename": "depends/patches/qt/fix_android_pch.patch",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_android_pch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_android_pch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_pch.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,10 @@\n+--- old/qtbase/mkspecs/common/android-base-head.conf\n++++ new/qtbase/mkspecs/common/android-base-head.conf\n+@@ -73,6 +73,6 @@ CROSS_COMPILE = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLS_PREFIX-\n+ QMAKE_PCH_OUTPUT_EXT    = .gch\n+\n+ QMAKE_CFLAGS_PRECOMPILE       = -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}\n+-QMAKE_CFLAGS_USE_PRECOMPILE   = -include ${QMAKE_PCH_OUTPUT_BASE}\n++QMAKE_CFLAGS_USE_PRECOMPILE   = -include-pch ${QMAKE_PCH_OUTPUT}\n+ QMAKE_CXXFLAGS_PRECOMPILE     = -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}\n+ QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE"
      },
      {
        "sha": "3a8753fd1d74c88116e65ec019d70d8ed4772582",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "modified",
        "additions": 7,
        "deletions": 17,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,20 +1,10 @@\n --- old/qtbase/mkspecs/android-clang/qmake.conf\n +++ new/qtbase/mkspecs/android-clang/qmake.conf\n-@@ -30,7 +30,7 @@\n-     QMAKE_CFLAGS += -target mips64el-none-linux-android\n+@@ -47,7 +47,7 @@ ANDROID_STDCPP_PATH = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc++_shared.so\n+ ANDROID_USE_LLVM = true\n  \n- QMAKE_CFLAGS += -gcc-toolchain $$NDK_TOOLCHAIN_PATH\n--QMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a\n-+QMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a -nostdlib++\n- QMAKE_CFLAGS += -DANDROID_HAS_WSTRING --sysroot=$$NDK_ROOT/sysroot \\\n-                 -isystem $$NDK_ROOT/sysroot/usr/include/$$NDK_TOOLS_PREFIX \\\n-                 -isystem $$NDK_ROOT/sources/cxx-stl/llvm-libc++/include \\\n-@@ -40,7 +40,7 @@\n- ANDROID_SOURCES_CXX_STL_LIBDIR = $$NDK_ROOT/sources/cxx-stl/llvm-libc++/libs/$$ANDROID_TARGET_ARCH\n- \n- ANDROID_STDCPP_PATH = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc++_shared.so\n--ANDROID_CXX_STL_LIBS = -lc++\n-+ANDROID_CXX_STL_LIBS = -lc++_shared\n- \n- QMAKE_ARM_CFLAGS_RELEASE                   = -Oz\n- QMAKE_ARM_CFLAGS_RELEASE_WITH_DEBUGINFO    = -g -Oz\n+ exists($$ANDROID_SOURCES_CXX_STL_LIBDIR/libc++.so): \\\n+-    ANDROID_CXX_STL_LIBS = -lc++\n++    ANDROID_CXX_STL_LIBS = -lc++_shared\n+ else: \\\n+     ANDROID_CXX_STL_LIBS = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc++.so.$$replace(ANDROID_PLATFORM, \"android-\", \"\")"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,50 +0,0 @@\n---- old/qtbase/mkspecs/features/mac/sdk.prf\t2018-02-08 10:24:48.000000000 -0800\n-+++ new/qtbase/mkspecs/features/mac/sdk.prf\t2018-03-23 10:38:56.000000000 -0700\n-@@ -8,21 +8,21 @@\n- defineReplace(xcodeSDKInfo) {\n-     info = $$1\n-     equals(info, \"Path\"): \\\n--        info = --show-sdk-path\n-+        infoarg = --show-sdk-path\n-     equals(info, \"PlatformPath\"): \\\n--        info = --show-sdk-platform-path\n-+        infoarg = --show-sdk-platform-path\n-     equals(info, \"SDKVersion\"): \\\n--        info = --show-sdk-version\n-+        infoarg = --show-sdk-version\n-     sdk = $$2\n-     isEmpty(sdk): \\\n-         sdk = $$QMAKE_MAC_SDK\n- \n-     isEmpty(QMAKE_MAC_SDK.$${sdk}.$${info}) {\n--        QMAKE_MAC_SDK.$${sdk}.$${info} = $$system(\"/usr/bin/xcrun --sdk $$sdk $$info 2>/dev/null\")\n-+        QMAKE_MAC_SDK.$${sdk}.$${info} = $$system(\"/usr/bin/xcrun --sdk $$sdk $$infoarg 2>/dev/null\")\n-         # --show-sdk-platform-path won't work for Command Line Tools; this is fine\n-         # only used by the XCTest backend to testlib\n--        isEmpty(QMAKE_MAC_SDK.$${sdk}.$${info}):if(!isEmpty(QMAKE_XCODEBUILD_PATH)|!equals(info, \"--show-sdk-platform-path\")): \\\n--            error(\"Could not resolve SDK $$info for \\'$$sdk\\'\")\n-+        isEmpty(QMAKE_MAC_SDK.$${sdk}.$${info}):if(!isEmpty(QMAKE_XCODEBUILD_PATH)|!equals(infoarg, \"--show-sdk-platform-path\")): \\\n-+            error(\"Could not resolve SDK $$info for \\'$$sdk\\' using $$infoarg\")\n-         cache(QMAKE_MAC_SDK.$${sdk}.$${info}, set stash, QMAKE_MAC_SDK.$${sdk}.$${info})\n-     }\n-\n---- old/qtbase/configure\t2018-02-08 10:24:48.000000000 -0800\n-+++ new/qtbase/configure\t2018-03-23 05:42:29.000000000 -0700\n-@@ -232,8 +232,13 @@\n- \n-     sdk=$(getSingleQMakeVariable \"QMAKE_MAC_SDK\" \"$1\")\n-     if [ -z \"$sdk\" ]; then echo \"QMAKE_MAC_SDK must be set when building on Mac\" >&2; exit 1; fi\n--    sysroot=$(/usr/bin/xcrun --sdk $sdk --show-sdk-path 2>/dev/null)\n--    if [ -z \"$sysroot\" ]; then echo \"Failed to resolve SDK path for '$sdk'\" >&2; exit 1; fi\n-+    sysroot=$(getSingleQMakeVariable \"QMAKE_MAC_SDK_PATH\" \"$1\")\n-+\n-+    echo \"sysroot pre-configured as $sysroot\";\n-+    if [ -z \"$sysroot\" ]; then\n-+       sysroot=$(/usr/bin/xcrun --sdk $sdk --show-sdk-path 2>/dev/null)\n-+       if [ -z \"$sysroot\" ]; then echo \"Failed to resolve SDK path for '$sdk'\" >&2; exit 1; fi\n-+    fi\n- \n-     case \"$sdk\" in\n-         macosx*)\n-\n-"
      },
      {
        "sha": "d1a15373f44d9fd9028f578ed658ddb1582dcbd8",
        "filename": "depends/patches/qt/fix_lib_paths.patch",
        "status": "added",
        "additions": 193,
        "deletions": 0,
        "changes": 193,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_lib_paths.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_lib_paths.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_lib_paths.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,193 @@\n+--- old/qtbase/mkspecs/common/mac.conf\n++++ new/qtbase/mkspecs/common/mac.conf\n+@@ -14,7 +14,6 @@\n+ \n+ QMAKE_RESOURCE          = /Developer/Tools/Rez\n+ QMAKE_EXTENSION_SHLIB   = dylib\n+-QMAKE_EXTENSIONS_AUX_SHLIB = tbd\n+ QMAKE_LIBDIR            =\n+ \n+ # sdk.prf will prefix the proper SDK sysroot\n+\n+--- old/qtbase/mkspecs/features/qmake_use.prf\n++++ new/qtbase/mkspecs/features/qmake_use.prf\n+@@ -22,6 +22,8 @@\n+         !defined(QMAKE_LIBS_$$nu, var): \\\n+             error(\"Library '$$lower($$replace(nu, _, -))' is not defined.\")\n+ \n++        QMAKE_LIBDIR += $$eval(QMAKE_LIBDIR_$$nu)\n++\n+         debug: \\\n+             LIBS$${suffix} += $$eval(QMAKE_LIBS_$${nu}_DEBUG) $$eval(QMAKE_LIBS_$$nu)\n+         else: \\\n+\n+--- old/qtbase/mkspecs/features/qt_configure.prf\n++++ new/qtbase/mkspecs/features/qt_configure.prf\n+@@ -526,98 +526,23 @@\n+     return($$sysrootified)\n+ }\n+ \n+-# libs-var, libs, in-paths, out-paths-var\n++# libs-var, libs, in-paths\n+ defineTest(qtConfResolveLibs) {\n+-    ret = true\n+-    paths = $$3\n+-    out =\n+-    copy = false\n+-    for (l, 2) {\n+-        $$copy {\n+-            copy = false\n+-            out += $$l\n+-        } else: equals(l, \"-s\") {\n+-            # em++ flag to link libraries from emscripten-ports; passed on literally.\n+-            copy = true\n+-            out += $$l\n+-        } else: contains(l, \"^-L.*\") {\n+-            lp = $$replace(l, \"^-L\", )\n+-            gcc: lp = $$qtGccSysrootifiedPath($$lp)\n+-            !exists($$lp/.) {\n+-                qtLog(\"Library path $$val_escape(lp) is invalid.\")\n+-                ret = false\n+-            } else {\n+-                paths += $$lp\n+-            }\n+-        } else: contains(l, \"^-l.*\") {\n+-            lib = $$replace(l, \"^-l\", )\n+-            lcan =\n+-            integrity:contains(lib, \"^.*\\\\.a\") {\n+-                # INTEGRITY compiler searches for exact filename\n+-                # if -l argument has .a suffix\n+-                lcan += $${lib}\n+-            } else: contains(lib, \"^:.*\") {\n+-                # Use exact filename when -l:filename syntax is used.\n+-                lib ~= s/^://\n+-                lcan += $${lib}\n+-            } else: unix {\n+-                # Under UNIX, we look for actual shared libraries, in addition\n+-                # to static ones.\n+-                shexts = $$QMAKE_EXTENSION_SHLIB $$QMAKE_EXTENSIONS_AUX_SHLIB\n+-                for (ext, shexts) {\n+-                    lcan += $${QMAKE_PREFIX_SHLIB}$${lib}.$${ext}\n+-                }\n+-                lcan += \\\n+-                    $${QMAKE_PREFIX_STATICLIB}$${lib}.$${QMAKE_EXTENSION_STATICLIB}\n+-            } else {\n+-                # Under Windows, we look only for static libraries, as even for DLLs\n+-                # one actually links against a static import library.\n+-                mingw {\n+-                    lcan += \\\n+-                        # MinGW supports UNIX-style library naming in addition to\n+-                        # the MSVC style.\n+-                        lib$${lib}.dll.a lib$${lib}.a \\\n+-                        # Fun fact: prefix-less libraries are also supported.\n+-                        $${lib}.dll.a $${lib}.a\n+-                }\n+-                lcan += $${lib}.lib\n+-            }\n+-            l = $$qtConfFindInPathList($$lcan, $$paths $$EXTRA_LIBDIR $$QMAKE_DEFAULT_LIBDIRS)\n+-            isEmpty(l) {\n+-                qtLog(\"None of [$$val_escape(lcan)] found in [$$val_escape(paths)] and global paths.\")\n+-                ret = false\n+-            } else {\n+-                out += $$l\n+-            }\n+-        } else {\n+-            out += $$l\n+-        }\n+-    }\n+-    $$1 = $$out\n++    for (path, 3): \\\n++        pre_lflags += -L$$path\n++    $$1 = $$pre_lflags $$2\n+     export($$1)\n+-    !isEmpty(4) {\n+-        $$4 = $$paths\n+-        export($$4)\n+-    }\n+-    return($$ret)\n+-}\n+-\n+-# source-var\n+-defineTest(qtConfResolveAllLibs) {\n+-    ret = true\n+-    !qtConfResolveLibs($${1}.libs, $$eval($${1}.libs), , $${1}.libdirs): \\\n+-        ret = false\n+-    for (b, $${1}.builds._KEYS_): \\\n+-        !qtConfResolveLibs($${1}.builds.$${b}, $$eval($${1}.builds.$${b}), $$eval($${1}.libdirs), ): \\\n+-            ret = false\n+-    return($$ret)\n++    return(true)\n+ }\n+ \n+ # libs-var, in-paths, libs\n+ defineTest(qtConfResolvePathLibs) {\n+     ret = true\n+-    gcc: 2 = $$qtGccSysrootifiedPaths($$2)\n+-    for (libdir, 2) {\n++    gcc: \\\n++        local_paths = $$qtGccSysrootifiedPaths($$2)\n++    else: \\\n++        local_paths = $$2\n++    for (libdir, local_paths) {\n+         !exists($$libdir/.) {\n+             qtLog(\"Library path $$val_escape(libdir) is invalid.\")\n+             ret = false\n+@@ -667,8 +592,11 @@\n+ # includes-var, in-paths, test-object-var\n+ defineTest(qtConfResolvePathIncs) {\n+     ret = true\n+-    gcc: 2 = $$qtGccSysrootifiedPaths($$2)\n+-    for (incdir, 2) {\n++    gcc: \\\n++        local_paths = $$qtGccSysrootifiedPaths($$2)\n++    else: \\\n++        local_paths = $$2\n++    for (incdir, local_paths) {\n+         !exists($$incdir/.) {\n+             qtLog(\"Include path $$val_escape(incdir) is invalid.\")\n+             ret = false\n+@@ -727,6 +655,7 @@\n+         vars += $$eval(config.commandline.rev_assignments.$${iv})\n+         defined(config.input.$${iv}, var) {\n+             eval($${1}.builds.$${b} = $$eval(config.input.$${iv}))\n++            export($${1}.builds.$${b})\n+             $${1}.builds._KEYS_ *= $${b}\n+             any = true\n+         } else {\n+@@ -741,11 +670,14 @@\n+         export($${1}.builds._KEYS_)\n+         # we also reset the generic libs, to avoid surprises.\n+         $${1}.libs =\n++        export($${1}.libs)\n+     }\n+ \n+     # direct libs. overwrites inline libs.\n+-    defined(config.input.$${input}.libs, var): \\\n++    defined(config.input.$${input}.libs, var) {\n+         eval($${1}.libs = $$eval(config.input.$${input}.libs))\n++        export($${1}.libs)\n++    }\n+ \n+     includes = $$eval(config.input.$${input}.incdir)\n+ \n+@@ -754,6 +686,7 @@\n+     !isEmpty(prefix) {\n+         includes += $$prefix/include\n+         $${1}.libs = -L$$prefix/lib $$eval($${1}.libs)\n++        export($${1}.libs)\n+     }\n+ \n+     libdir = $$eval(config.input.$${input}.libdir)\n+@@ -762,11 +695,9 @@\n+         for (ld, libdir): \\\n+             libs += -L$$ld\n+         $${1}.libs = $$libs $$eval($${1}.libs)\n++        export($${1}.libs)\n+     }\n+ \n+-    !qtConfResolveAllLibs($$1): \\\n+-        return(false)\n+-\n+     !qtConfResolvePathIncs($${1}.includedir, $$includes, $$2): \\\n+         return(false)\n+ "
      },
      {
        "sha": "e4313770e5a8b9c12bbebbc8bb75b8a7585a1992",
        "filename": "depends/patches/qt/fix_limits_header.patch",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_limits_header.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_limits_header.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_limits_header.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,44 @@\n+Fix compiling with GCC 11\n+\n+See: https://bugreports.qt.io/browse/QTBUG-90395.\n+\n+Upstream commits:\n+ - Qt 5.15 -- unavailable as open source\n+ - Qt 6.0: b2af6332ea37e45ab230a7a5d2d278f86d961b83\n+ - Qt 6.1: 9c56d4da2ff631a8c1c30475bd792f6c86bda53c\n+\n+--- old/qtbase/src/corelib/global/qendian.h\n++++ new/qtbase/src/corelib/global/qendian.h\n+@@ -44,6 +44,8 @@\n+ #include <QtCore/qfloat16.h>\n+ #include <QtCore/qglobal.h>\n+ \n++#include <limits>\n++\n+ // include stdlib.h and hope that it defines __GLIBC__ for glibc-based systems\n+ #include <stdlib.h>\n+ #include <string.h>\n+\n+--- old/qtbase/src/corelib/tools/qbytearraymatcher.h\n++++ new/qtbase/src/corelib/tools/qbytearraymatcher.h\n+@@ -42,6 +42,8 @@\n+ \n+ #include <QtCore/qbytearray.h>\n+ \n++#include <limits>\n++\n+ QT_BEGIN_NAMESPACE\n+ \n+ \n+\n+--- old/qtbase/src/tools/moc/generator.cpp\n++++ new/qtbase/src/tools/moc/generator.cpp\n+@@ -40,6 +40,8 @@\n+ #include <QtCore/qplugin.h>\n+ #include <QtCore/qstringview.h>\n+ \n++#include <limits>\n++\n+ #include <math.h>\n+ #include <stdio.h>\n+ "
      },
      {
        "sha": "67f76f1d856ef9256fe31bd1db54f1c04f5eee63",
        "filename": "depends/patches/qt/fix_mingw_cross_compile.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_mingw_cross_compile.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_mingw_cross_compile.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_mingw_cross_compile.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,25 +0,0 @@\n-commit 5a992a549adfe5a587bbcd6cd2b2cee47d236e27\n-Author: fanquake <fanquake@gmail.com>\n-Date:   Fri Sep 4 08:13:44 2020 +0800\n-\n-    Work around broken mingw cross-compilation\n-\n-    See upstream issues:\n-    https://bugreports.qt.io/browse/QTBUG-63637\n-    https://bugreports.qt.io/browse/QTBUG-63659\n-    https://codereview.qt-project.org/q/8bebded9\n-\n-    We should be able to drop this once we are building qt 5.10.1 or later.\n-\n-    Added in #12971.\n-\n-diff --git a/qtbase/mkspecs/win32-g++/qmake.conf b/qtbase/mkspecs/win32-g++/qmake.conf\n-index e071a0d1..ad229b10 100644\n---- a/qtbase/mkspecs/win32-g++/qmake.conf\n-+++ b/qtbase/mkspecs/win32-g++/qmake.conf\n-@@ -87,3 +87,5 @@ QMAKE_NM                = $${CROSS_COMPILE}nm -P\n- include(../common/angle.conf)\n-\n- load(qt_config)\n-+QMAKE_LINK_OBJECT_MAX = 10\n-+QMAKE_LINK_OBJECT_SCRIPT = object_script"
      },
      {
        "sha": "13723561384d8b7e80fc9e3879559d195ce5f098",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -10,10 +10,10 @@\n \n --- x/qtbase/src/plugins/plugins.pro\n +++ y/qtbase/src/plugins/plugins.pro\n-@@ -8,6 +8,3 @@ qtHaveModule(gui) {\n-     qtConfig(imageformatplugin): SUBDIRS *= imageformats\n+@@ -9,6 +9,3 @@ qtHaveModule(gui) {\n      !android:qtConfig(library): SUBDIRS *= generic\n  }\n+ qtHaveModule(widgets): SUBDIRS += styles\n -\n -!winrt:qtHaveModule(printsupport): \\\n -    SUBDIRS += printsupport"
      },
      {
        "sha": "d37b6c777646c39bd09b4ee63e8c98047b49bab4",
        "filename": "depends/patches/qt/fix_powerpc_libpng.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_powerpc_libpng.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_powerpc_libpng.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_powerpc_libpng.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,23 +0,0 @@\n-commit 6f9feb773a43c5abfa3455da2e324180e789285b\n-Author: fanquake <fanquake@gmail.com>\n-Date:   Tue Sep 15 21:44:31 2020 +0800\n-\n-    Fix PowerPC build of libpng\n-\n-    See https://bugreports.qt.io/browse/QTBUG-66388.\n-\n-    Can be dropped when we are building qt 5.12.0 or later.\n-\n-diff --git a/qtbase/src/3rdparty/libpng/libpng.pro b/qtbase/src/3rdparty/libpng/libpng.pro\n-index 577b61d8..a2f56669 100644\n---- a/qtbase/src/3rdparty/libpng/libpng.pro\n-+++ b/qtbase/src/3rdparty/libpng/libpng.pro\n-@@ -10,7 +10,7 @@ MODULE_INCLUDEPATH = $$PWD\n- \n- load(qt_helper_lib)\n- \n--DEFINES += PNG_ARM_NEON_OPT=0\n-+DEFINES += PNG_ARM_NEON_OPT=0 PNG_POWERPC_VSX_OPT=0\n- SOURCES += \\\n-     png.c \\\n-     pngerror.c \\"
      },
      {
        "sha": "3cfcc22f03a0030af501d01ce74bbb9d39eafe66",
        "filename": "depends/patches/qt/fix_qpainter_non_determinism.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qpainter_non_determinism.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,63 +0,0 @@\n-commit 2a8f7dc6ddfc414a66491522501c1574a1343ee1\n-Author: Andrew Chow <achow101-github@achow101.com>\n-Date:   Sat Nov 21 01:11:04 2020 -0500\n-\n-    build: Fix determinism issue when building with Clang 8\n-\n-    When building Qt with LLVM/Clang 8 under -O3 (the default), we run into\n-    a determinism issue in `qt_interset_spans`. The issue has been fixed for\n-    LLVM/Clang 9, see\n-    https://github.com/llvm/llvm-project/commit/db101864bdc938deb1d63fe4f7da761bd38e5cae\n-    and https://reviews.llvm.org/D64601, however this fix was not backported\n-    to 8.x. Once LLVM/Clang 9 is used, this patch can be dropped.\n-\n-    The particular issue appears to be an optimization done by -O3 which\n-    adds a temporary variable for `spans->y` in `qt_intersect_spans`. When\n-    it does this, sometimes it chooses to use a 32-bit movs instruction\n-    (movswl), and other times it chooses a 64-bit movs instruction (movswq).\n-    By patching `qt_intersect_spans` to always make a temporary variable for\n-    `spans->y`, we are able to sidestep this problem.\n-\n-diff --git a/qtbase/src/gui/painting/qpaintengine_raster.cpp b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n-index 92ab6e8375..f018009e0b 100644\n---- a/qtbase/src/gui/painting/qpaintengine_raster.cpp\n-+++ b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n-@@ -3971,22 +3971,23 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n-     const QSpan *clipEnd = clip->m_spans + clip->count;\n- \n-     while (available && spans < end ) {\n-+        const short spans_y = spans->y;\n-         if (clipSpans >= clipEnd) {\n-             spans = end;\n-             break;\n-         }\n--        if (clipSpans->y > spans->y) {\n-+        if (clipSpans->y > spans_y) {\n-             ++spans;\n-             continue;\n-         }\n--        if (spans->y != clipSpans->y) {\n--            if (spans->y < clip->count && clip->m_clipLines[spans->y].spans)\n--                clipSpans = clip->m_clipLines[spans->y].spans;\n-+        if (spans_y != clipSpans->y) {\n-+            if (spans_y < clip->count && clip->m_clipLines[spans_y].spans)\n-+                clipSpans = clip->m_clipLines[spans_y].spans;\n-             else\n-                 ++clipSpans;\n-             continue;\n-         }\n--        Q_ASSERT(spans->y == clipSpans->y);\n-+        Q_ASSERT(spans_y == clipSpans->y);\n- \n-         int sx1 = spans->x;\n-         int sx2 = sx1 + spans->len;\n-@@ -4005,7 +4006,7 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n-         if (len) {\n-             out->x = qMax(sx1, cx1);\n-             out->len = qMin(sx2, cx2) - out->x;\n--            out->y = spans->y;\n-+            out->y = spans_y;\n-             out->coverage = qt_div_255(spans->coverage * clipSpans->coverage);\n-             ++out;\n-             --available;\n-"
      },
      {
        "sha": "a5de2b4b9ee34301b0be760bedb173d5ab157f5d",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,17 +1,17 @@\n --- old/qtbase/mkspecs/features/qt_module.prf\n +++ new/qtbase/mkspecs/features/qt_module.prf\n-@@ -264,7 +264,7 @@\n+@@ -269,7 +269,7 @@ load(qt_installs)\n  load(qt_targets)\n  \n  # this builds on top of qt_common\n--!internal_module:!lib_bundle:if(unix|mingw) {\n+-!internal_module:if(unix|mingw) {\n +if(unix|mingw):!if(darwin:debug_and_release:CONFIG(debug, debug|release)) {\n      CONFIG += create_pc\n      QMAKE_PKGCONFIG_DESTDIR = pkgconfig\n      host_build: \\\n-@@ -274,9 +274,9 @@\n-     QMAKE_PKGCONFIG_INCDIR = $$[QT_INSTALL_HEADERS/raw]\n-     QMAKE_PKGCONFIG_CFLAGS = -I${includedir}/$$MODULE_INCNAME\n+@@ -284,9 +284,9 @@ load(qt_targets)\n+         QMAKE_PKGCONFIG_CFLAGS = -D$$MODULE_DEFINE -I${includedir}/$$MODULE_INCNAME\n+     }\n      QMAKE_PKGCONFIG_NAME = $$replace(TARGET, ^Qt, \"Qt$$QT_MAJOR_VERSION \")\n -    QMAKE_PKGCONFIG_FILE = $$replace(TARGET, ^Qt, Qt$$QT_MAJOR_VERSION)\n +    QMAKE_PKGCONFIG_FILE = $$replace(TARGET, ^Qt, Qt$$QT_MAJOR_VERSION)$$qtPlatformTargetSuffix()\n@@ -20,4 +20,4 @@\n +        QMAKE_PKGCONFIG_REQUIRES += $$replace(QT.$${i}.name, ^Qt, Qt$$section(QT.$${i}.VERSION, ., 0, 0))$$qtPlatformTargetSuffix()\n      isEmpty(QMAKE_PKGCONFIG_DESCRIPTION): \\\n          QMAKE_PKGCONFIG_DESCRIPTION = $$replace(TARGET, ^Qt, \"Qt \") module\n-     pclib_replace.match = $$lib_replace.match\n+     !isEmpty(lib_replace0.match) {"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,15 +0,0 @@\n---- old/qtbase/src/tools/rcc/rcc.cpp\n-+++ new/qtbase/src/tools/rcc/rcc.cpp\n-@@ -207,7 +207,11 @@ void RCCFileInfo::writeDataInfo(RCCResourceLibrary &lib)\n-     if (lib.formatVersion() >= 2) {\n-         // last modified time stamp\n-         const QDateTime lastModified = m_fileInfo.lastModified();\n--        lib.writeNumber8(quint64(lastModified.isValid() ? lastModified.toMSecsSinceEpoch() : 0));\n-+        quint64 lastmod = quint64(lastModified.isValid() ? lastModified.toMSecsSinceEpoch() : 0);\n-+        static const quint64 sourceDate = 1000 * qgetenv(\"QT_RCC_SOURCE_DATE_OVERRIDE\").toULongLong();\n-+        if (sourceDate != 0)\n-+            lastmod = sourceDate;\n-+        lib.writeNumber8(lastmod);\n-         if (text || pass1)\n-             lib.writeChar('\\n');\n-     }"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,14 +0,0 @@\n-diff --git a/qtbase/src/3rdparty/double-conversion/include/double-conversion/utils.h b/qtbase/src/3rdparty/double-conversion/include/double-conversion/utils.h\n-index 20bfd36..93729fa 100644\n---- a/qtbase/src/3rdparty/double-conversion/include/double-conversion/utils.h\n-+++ b/qtbase/src/3rdparty/double-conversion/include/double-conversion/utils.h\n-@@ -65,7 +65,8 @@\n-     defined(__sparc__) || defined(__sparc) || defined(__s390__) || \\\n-     defined(__SH4__) || defined(__alpha__) || \\\n-     defined(_MIPS_ARCH_MIPS32R2) || \\\n--    defined(__AARCH64EL__)\n-+    defined(__AARCH64EL__) || defined(__aarch64__) || \\\n-+    defined(__riscv)\n- #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1\n- #elif defined(_M_IX86) || defined(__i386__) || defined(__i386)\n- #if defined(_WIN32)"
      },
      {
        "sha": "1ca55f1ce32bd11f7dd4b737c8b792341b2ca7e0",
        "filename": "depends/patches/qt/freetype_back_compat.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/freetype_back_compat.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/freetype_back_compat.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/freetype_back_compat.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,28 +0,0 @@\n-commit 14bc77db61bf9d56f9b6c8b84aa02573605c19c6\n-Author: fanquake <fanquake@gmail.com>\n-Date:   Tue Aug 18 15:15:08 2020 +0800\n-\n-    Fix backwards compatibility with older Freetype versions at runtime\n-\n-    A few years ago, libfreetype introduced FT_Get_Font_Format() as an alias\n-    for FT_Get_X11_Font_Format(), but FT_Get_X11_Font_Format() was kept for abi\n-    backwards-compatibility.\n-\n-    Qt 5.9 introduced a call to FT_Get_Font_Format(). Replace it with FT_Get_X11_Font_Format()\n-    in order to remain compatible with older freetype, which is still used by e.g. Ubuntu Trusty.\n-\n-    See #14348.\n-\n-diff --git a/qtbase/src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp b/qtbase/src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp\n-index 3f543755..8ecc1c8c 100644\n---- a/qtbase/src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp\n-+++ b/qtbase/src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp\n-@@ -898,7 +898,7 @@ bool QFontEngineFT::init(FaceId faceId, bool antialias, GlyphFormat format,\n-         }\n-     }\n- #if defined(FT_FONT_FORMATS_H)\n--    const char *fmt = FT_Get_Font_Format(face);\n-+    const char *fmt = FT_Get_X11_Font_Format(face);\n-     if (fmt && qstrncmp(fmt, \"CFF\", 4) == 0) {\n-         FT_Bool no_stem_darkening = true;\n-         FT_Error err = FT_Property_Get(qt_getFreetype(), \"cff\", \"no-stem-darkening\", &no_stem_darkening);"
      },
      {
        "sha": "f4a6f09ee49b8caee40f13acbbbe2e72ff74b799",
        "filename": "depends/patches/qt/no-xlib.patch",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/no-xlib.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/no-xlib.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no-xlib.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -22,23 +22,23 @@ index 7c62c2e2b3..c05c6c0a07 100644\n  #include <xcb/xfixes.h>\n  #include <xcb/xcb_image.h>\n  \n-@@ -384,6 +386,7 @@ void QXcbCursor::changeCursor(QCursor *cursor, QWindow *widget)\n-     w->setCursor(c, isBitmapCursor);\n+@@ -391,6 +393,7 @@ void QXcbCursor::changeCursor(QCursor *cursor, QWindow *window)\n+     xcb_flush(xcb_connection());\n  }\n  \n +#if QT_CONFIG(xcb_xlib) && QT_CONFIG(library)\n  static int cursorIdForShape(int cshape)\n  {\n      int cursorId = 0;\n-@@ -437,6 +440,7 @@ static int cursorIdForShape(int cshape)\n+@@ -444,6 +447,7 @@ static int cursorIdForShape(int cshape)\n      }\n      return cursorId;\n  }\n +#endif\n  \n  xcb_cursor_t QXcbCursor::createNonStandardCursor(int cshape)\n  {\n-@@ -558,7 +562,9 @@ static xcb_cursor_t loadCursor(void *dpy, int cshape)\n+@@ -556,7 +560,9 @@ static xcb_cursor_t loadCursor(void *dpy, int cshape)\n  xcb_cursor_t QXcbCursor::createFontCursor(int cshape)\n  {\n      xcb_connection_t *conn = xcb_connection();\n@@ -48,22 +48,23 @@ index 7c62c2e2b3..c05c6c0a07 100644\n      xcb_cursor_t cursor = XCB_NONE;\n  \n      // Try Xcursor first\n-@@ -589,6 +595,7 @@ xcb_cursor_t QXcbCursor::createFontCursor(int cshape)\n+@@ -585,7 +591,7 @@ xcb_cursor_t QXcbCursor::createFontCursor(int cshape)\n+ \n      // Non-standard X11 cursors are created from bitmaps\n      cursor = createNonStandardCursor(cshape);\n- \n+-\n +#if QT_CONFIG(xcb_xlib) && QT_CONFIG(library)\n      // Create a glpyh cursor if everything else failed\n      if (!cursor && cursorId) {\n          cursor = xcb_generate_id(conn);\n-@@ -596,6 +603,7 @@ xcb_cursor_t QXcbCursor::createFontCursor(int cshape)\n+@@ -593,6 +599,7 @@ xcb_cursor_t QXcbCursor::createFontCursor(int cshape)\n                                  cursorId, cursorId + 1,\n                                  0xFFFF, 0xFFFF, 0xFFFF, 0, 0, 0);\n      }\n +#endif\n  \n      if (cursor && cshape >= 0 && cshape < Qt::LastCursor && connection()->hasXFixes()) {\n-         const char *name = cursorNames[cshape];\n+         const char *name = cursorNames[cshape].front();\n -- \n 2.22.0\n "
      },
      {
        "sha": "b16635b572025b70996f22f8d44d8e4ebed11a3b",
        "filename": "depends/patches/qt/no_sdk_version_check.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/no_sdk_version_check.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/no_sdk_version_check.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no_sdk_version_check.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,20 @@\n+commit f5eb142cd04be2bc4ca610ed3b5b7e8ce3520ee3\n+Author: fanquake <fanquake@gmail.com>\n+Date:   Tue Jan 5 16:08:49 2021 +0800\n+\n+    Don't invoke macOS SDK version checking\n+    \n+    This tries to use xcrun which is not available when cross-compiling.\n+\n+diff --git a/qtbase/mkspecs/features/mac/default_post.prf b/qtbase/mkspecs/features/mac/default_post.prf\n+index 92a9112bca6..447e186eb26 100644\n+--- a/qtbase/mkspecs/features/mac/default_post.prf\n++++ b/qtbase/mkspecs/features/mac/default_post.prf\n+@@ -8,7 +8,6 @@ contains(TEMPLATE, .*app) {\n+     !macx-xcode:if(isEmpty(BUILDS)|build_pass) {\n+         # Detect changes to the platform SDK\n+         QMAKE_EXTRA_VARIABLES += QMAKE_MAC_SDK QMAKE_MAC_SDK_VERSION QMAKE_XCODE_DEVELOPER_PATH\n+-        QMAKE_EXTRA_INCLUDES += $$shell_quote($$PWD/sdk.mk)\n+     }\n+ \n+     # Detect incompatible SDK versions"
      },
      {
        "sha": "0358bea6e940384ada32e83fa8ed5bf987b90a14",
        "filename": "depends/patches/qt/qtbase-moc-ignore-gcc-macro.patch",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/qtbase-moc-ignore-gcc-macro.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/depends/patches/qt/qtbase-moc-ignore-gcc-macro.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/qtbase-moc-ignore-gcc-macro.patch?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,17 @@\n+The moc executable loops through headers on CPLUS_INCLUDE_PATH and stumbles\n+on the GCC internal _GLIBCXX_VISIBILITY macro.  Tell it to ignore it as it is\n+not supposed to be looking there to begin with.\n+\n+Upstream report: https://bugreports.qt.io/browse/QTBUG-83160\n+\n+diff --git a/qtbase/src/tools/moc/main.cpp b/qtbase/src/tools/moc/main.cpp\n+--- a/qtbase/src/tools/moc/main.cpp\n++++ b/qtbase/src/tools/moc/main.cpp\n+@@ -188,6 +188,7 @@ int runMoc(int argc, char **argv)\n+     dummyVariadicFunctionMacro.arguments += Symbol(0, PP_IDENTIFIER, \"__VA_ARGS__\");\n+     pp.macros[\"__attribute__\"] = dummyVariadicFunctionMacro;\n+     pp.macros[\"__declspec\"] = dummyVariadicFunctionMacro;\n++    pp.macros[\"_GLIBCXX_VISIBILITY\"] = dummyVariadicFunctionMacro;\n+ \n+     QString filename;\n+     QString output;"
      },
      {
        "sha": "165abf3e2e7a6d7cdbe7b960ec15dbcfaf0a9dfd",
        "filename": "depends/patches/qt/xkb-default.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/xkb-default.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/depends/patches/qt/xkb-default.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/xkb-default.patch?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,26 +0,0 @@\n---- old/qtbase/src/gui/configure.pri\t2018-06-06 17:28:10.000000000 -0400\n-+++ new/qtbase/src/gui/configure.pri\t2018-08-17 18:43:01.589384567 -0400\n-@@ -43,18 +43,11 @@\n- }\n-\n- defineTest(qtConfTest_xkbConfigRoot) {\n--    qtConfTest_getPkgConfigVariable($${1}): return(true)\n--\n--    for (dir, $$list(\"/usr/share/X11/xkb\", \"/usr/local/share/X11/xkb\")) {\n--        exists($$dir) {\n--            $${1}.value = $$dir\n--            export($${1}.value)\n--            $${1}.cache += value\n--            export($${1}.cache)\n--            return(true)\n--        }\n--    }\n--    return(false)\n-+    $${1}.value = \"/usr/share/X11/xkb\"\n-+    export($${1}.value)\n-+    $${1}.cache += value\n-+    export($${1}.cache)\n-+    return(true)\n- }\n-\n- defineTest(qtConfTest_qpaDefaultPlatform) {"
      },
      {
        "sha": "21bf587eaf31072b158120bf3b3238fbd7d5de74",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2073,7 +2073,7 @@ INCLUDE_FILE_PATTERNS  =\n # recursively expanded use the := operator instead of the = operator.\n # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n \n-PREDEFINED             = HAVE_BOOST_PROCESS\n+PREDEFINED             = ENABLE_EXTERNAL_SIGNER\n \n # If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n # tag can be used to specify a list of macro names that should be expanded. The"
      },
      {
        "sha": "c629c2ccfae597aa4ce508516395e21b6c4a12df",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -30,6 +30,7 @@ Drag Bitcoin Core to your applications folder, and then run Bitcoin Core.\n \n * See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n for help and more information.\n+* Ask for help on the [Bitcoin StackExchange](https://bitcoin.stackexchange.com)\n * Ask for help on [#bitcoin](https://webchat.freenode.net/#bitcoin) on Freenode. If you don't have an IRC client, use [webchat here](https://webchat.freenode.net/#bitcoin).\n * Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n \n@@ -44,6 +45,7 @@ The following are developer notes on how to build Bitcoin Core on your native pl\n - [FreeBSD Build Notes](build-freebsd.md)\n - [OpenBSD Build Notes](build-openbsd.md)\n - [NetBSD Build Notes](build-netbsd.md)\n+- [Android Build Notes](build-android.md)\n - [Gitian Building Guide (External Link)](https://github.com/bitcoin-core/docs/blob/master/gitian-building.md)\n \n Development\n@@ -66,7 +68,7 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client, use [webchat here](https://webchat.freenode.net/#bitcoin-core-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Libera Chat. If you don't have an IRC client, use [webchat here](https://web.libera.chat/#bitcoin-core-dev).\n * Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client, use [webchat here](https://webchat.freenode.net/#bitcoin-dev).\n \n ### Miscellaneous"
      },
      {
        "sha": "8b281acca773274eb6089598f20ffa8165bdd967",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -95,11 +95,8 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n          \"scriptPubKey\" : {\n             \"asm\" : \"OP_DUP OP_HASH160 1c7cebb529b86a04c683dfa87be49de35bcf589e OP_EQUALVERIFY OP_CHECKSIG\",\n             \"hex\" : \"76a9141c7cebb529b86a04c683dfa87be49de35bcf589e88ac\",\n-            \"reqSigs\" : 1,\n             \"type\" : \"pubkeyhash\",\n-            \"addresses\" : [\n-               \"mi7as51dvLJsizWnTMurtRmrP8hG2m1XvD\"\n-            ]\n+            \"address\" : \"mi7as51dvLJsizWnTMurtRmrP8hG2m1XvD\"\n          }\n       }\n    ]\n@@ -111,12 +108,7 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n \n Returns various information about the TX mempool.\n Only supports JSON as output format.\n-* loaded : (boolean) if the mempool is fully loaded\n-* size : (numeric) the number of transactions in the TX mempool\n-* bytes : (numeric) size of the TX mempool in bytes\n-* usage : (numeric) total TX mempool memory usage\n-* maxmempool : (numeric) maximum memory usage for the mempool in bytes\n-* mempoolminfee : (numeric) minimum feerate (BTC per KB) for tx to be accepted\n+Refer to the `getmempoolinfo` RPC for documentation of the fields.\n \n `GET /rest/mempool/contents.json`\n "
      },
      {
        "sha": "45954bcfd8f05daf5597616613640f4ccbbacdd5",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,4 +1,4 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.21.0**):\n+BIPs that are implemented by Bitcoin Core (up-to-date up to **v22.0**):\n \n * [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n * [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n@@ -15,6 +15,9 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.21.0**):\n * [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)). As of **v0.13.0**, this is only available for `NODE_BLOOM` (BIP 111) peers.\n * [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial Merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)). Disabled by default since **v0.19.0**, can be enabled by the `-peerbloomfilters` option.\n * [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n+* [`BIP 43`](https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki): The experimental descriptor wallets introduced in **v0.21.0** by default use the Hierarchical Deterministic Wallet derivation proposed by BIP 43. ([PR #16528](https://github.com/bitcoin/bitcoin/pull/16528))\n+* [`BIP 44`](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki): The experimental descriptor wallets introduced in **v0.21.0** by default use the Hierarchical Deterministic Wallet derivation proposed by BIP 44. ([PR #16528](https://github.com/bitcoin/bitcoin/pull/16528))\n+* [`BIP 49`](https://github.com/bitcoin/bips/blob/master/bip-0049.mediawiki): The experimental descriptor wallets introduced in **v0.21.0** by default use the Hierarchical Deterministic Wallet derivation proposed by BIP 49. ([PR #16528](https://github.com/bitcoin/bitcoin/pull/16528))\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated (disabled by default) as of **v0.18.0**. Support was removed in **v0.20.0** ([PR #15437](https://github.com/bitcoin/bitcoin/pull/15437)).\n * [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n@@ -24,6 +27,7 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.21.0**):\n   Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)),\n   and it is disabled by default at build time since **v0.19.0** ([PR #15584](https://github.com/bitcoin/bitcoin/pull/15584)).\n   It has been removed as of **v0.20.0** ([PR 17165](https://github.com/bitcoin/bitcoin/pull/17165)).\n+* [`BIP 84`](https://github.com/bitcoin/bips/blob/master/bip-0084.mediawiki): The experimental descriptor wallets introduced in **v0.21.0** by default use the Hierarchical Deterministic Wallet derivation proposed by BIP 84. ([PR #16528](https://github.com/bitcoin/bitcoin/pull/16528))\n * [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n * [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n@@ -45,4 +49,11 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.21.0**):\n * [`BIP 176`](https://github.com/bitcoin/bips/blob/master/bip-0176.mediawiki): Bits Denomination [QT only] is supported as of **v0.16.0** ([PR 12035](https://github.com/bitcoin/bitcoin/pull/12035)).\n * [`BIP 325`](https://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki): Signet test network is supported as of **v0.21.0** ([PR 18267](https://github.com/bitcoin/bitcoin/pull/18267)).\n * [`BIP 339`](https://github.com/bitcoin/bips/blob/master/bip-0339.mediawiki): Relay of transactions by wtxid is supported as of **v0.21.0** ([PR 18044](https://github.com/bitcoin/bitcoin/pull/18044)).\n-* [`BIP 340`](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki) [`341`](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki) [`342`](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki): Validation rules for Taproot (including Schnorr signatures and Tapscript leaves) are implemented as of **v0.21.0** ([PR 19953](https://github.com/bitcoin/bitcoin/pull/19953)), without mainnet activation.\n+* [`BIP 340`](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki)\n+  [`341`](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)\n+  [`342`](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki):\n+  Validation rules for Taproot (including Schnorr signatures and Tapscript\n+  leaves) are implemented as of **v0.21.0** ([PR 19953](https://github.com/bitcoin/bitcoin/pull/19953)),\n+  with mainnet activation as of **v0.21.1** ([PR 21377](https://github.com/bitcoin/bitcoin/pull/21377),\n+  [PR 21686](https://github.com/bitcoin/bitcoin/pull/21686)).\n+* [`BIP 350`](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki): Addresses for native v1+ segregated Witness outputs use Bech32m instead of Bech32 as of **v22.0** ([PR 20861](https://github.com/bitcoin/bitcoin/pull/20861))."
      },
      {
        "sha": "9a312bc33c7aa84ea22ebd1fb48411763bf658f4",
        "filename": "doc/bitcoin-conf.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -27,7 +27,7 @@ Comments may appear in two ways:\n ### Network specific options\n \n Network specific options can be:\n-- placed into sections with headers `[main]` (not `[mainnet]`), `[test]` (not `[testnet]`) or `[regtest]`;\n+- placed into sections with headers `[main]` (not `[mainnet]`), `[test]` (not `[testnet]`), `[signet]` or `[regtest]`;\n - prefixed with a chain name; e.g., `regtest.maxmempool=100`.\n \n Network specific options take precedence over non-network specific options."
      },
      {
        "sha": "7a8a9e6a653e403003126d6800707394f20bf879",
        "filename": "doc/build-android.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-android.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-android.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-android.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,12 @@\n+ANDROID BUILD NOTES\n+======================\n+\n+This guide describes how to build and package the `bitcoin-qt` GUI for Android on Linux and macOS.\n+\n+## Preparation\n+\n+You will need to get the Android NDK and build dependencies for Android as described in [depends/README.md](../depends/README.md).\n+\n+## Building and packaging\n+\n+After the depends are built configure with one of the resulting prefixes and run `make && make apk` in `src/qt`.\n\\ No newline at end of file"
      },
      {
        "sha": "da2ab61c2a72a8684489929d7f3e67573515335c",
        "filename": "doc/build-freebsd.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -124,6 +124,6 @@ This explicitly enables the GUI and disables legacy wallet support. If `qt5` is\n **Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n ```bash\n-gmake # use -jX here for parallelism\n+gmake # use \"-j N\" for N parallel jobs\n gmake check # Run tests if Python 3 is available\n ```"
      },
      {
        "sha": "edabd716117884510dbc99f34e1acc932cb17489",
        "filename": "doc/build-netbsd.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -76,6 +76,6 @@ Without wallet:\n \n Build and run the tests:\n ```bash\n-gmake # use -jX here for parallelism\n+gmake # use \"-j N\" here for N parallel jobs\n gmake check\n ```"
      },
      {
        "sha": "613aea438fea5ee11b295db35c4e0a1a5c7b89c3",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -90,7 +90,7 @@ To configure with GUI:\n \n Build and run the tests:\n ```bash\n-gmake # use -jX here for parallelism\n+gmake # use \"-j N\" here for N parallel jobs\n gmake check\n ```\n "
      },
      {
        "sha": "467feff4106fe63b760f52e524d8641af62d5dfc",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 264,
        "deletions": 74,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,116 +1,311 @@\n-# macOS Build Instructions and Notes\n+# macOS Build Guide\n+\n+**Updated for MacOS [11.2](https://www.apple.com/macos/big-sur/)**\n+\n+This guide describes how to build bitcoind, command-line utilities, and GUI on macOS\n+\n+**Note:** The following is for Intel Macs only!\n+\n+## Dependencies\n+\n+The following dependencies are **required**:\n+\n+Library                                                    | Purpose    | Description\n+-----------------------------------------------------------|------------|----------------------\n+[automake](https://formulae.brew.sh/formula/automake)      | Build      | Generate makefile\n+[libtool](https://formulae.brew.sh/formula/libtool)        | Build      | Shared library support\n+[pkg-config](https://formulae.brew.sh/formula/pkg-config)  | Build      | Configure compiler and linker flags\n+[boost](https://formulae.brew.sh/formula/boost)            | Utility    | Library for threading, data structures, etc\n+[libevent](https://formulae.brew.sh/formula/libevent)      | Networking | OS independent asynchronous networking\n+\n+The following dependencies are **optional**:\n+\n+Library                                                         | Purpose          | Description\n+--------------------------------------------------------------- |------------------|----------------------\n+[berkeley-db@4](https://formulae.brew.sh/formula/berkeley-db@4) | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+[qt@5](https://formulae.brew.sh/formula/qt@5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+[qrencode](https://formulae.brew.sh/formula/qrencode)           | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+[zeromq](https://formulae.brew.sh/formula/zeromq)               | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+[sqlite](https://formulae.brew.sh/formula/sqlite)               | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+[miniupnpc](https://formulae.brew.sh/formula/miniupnpc)         | UPnP Support     | Firewall-jumping support (needed for port mapping support)\n+[libnatpmp](https://formulae.brew.sh/formula/libnatpmp)         | NAT-PMP Support  | Firewall-jumping support (needed for port mapping support)\n+[python3](https://formulae.brew.sh/formula/python@3.9)          | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+The following dependencies are **optional** packages required for deploying:\n+\n+Library                                             | Purpose          | Description\n+----------------------------------------------------|------------------|----------------------\n+[librsvg](https://formulae.brew.sh/formula/librsvg) | Deploy Dependency| Library to render SVG files\n+[ds_store](https://pypi.org/project/ds-store/)      | Deploy Dependency| Examine and modify .DS_Store files\n+[mac_alias](https://pypi.org/project/mac-alias/)    | Deploy Dependency| Generate/Read binary alias and bookmark records\n+\n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+## Preparation\n \n The commands in this guide should be executed in a Terminal application.\n-The built-in one is located in\n+macOS comes with a built-in Terminal located in:\n+\n ```\n /Applications/Utilities/Terminal.app\n ```\n \n-## Preparation\n-Install the macOS command line tools:\n+### 1. Xcode Command Line Tools\n \n-```shell\n+The Xcode Command Line Tools are a collection of build tools for macOS.\n+These tools must be installed in order to build Bitcoin Core from source.\n+\n+To install, run the following command from your terminal:\n+\n+``` bash\n xcode-select --install\n ```\n \n-When the popup appears, click `Install`.\n+Upon running the command, you should see a popup appear.\n+Click on `Install` to continue the installation process.\n \n-Then install [Homebrew](https://brew.sh).\n+### 2. Homebrew Package Manager\n \n-## Dependencies\n-```shell\n-brew install automake libtool boost miniupnpc libnatpmp pkg-config python qt libevent qrencode\n+Homebrew is a package manager for macOS that allows one to install packages from the command line easily.\n+While several package managers are available for macOS, this guide will focus on Homebrew as it is the most popular.\n+Since the examples in this guide which walk through the installation of a package will use Homebrew, it is recommended that you install it to follow along.\n+Otherwise, you can adapt the commands to your package manager of choice.\n+\n+To install the Homebrew package manager, see: https://brew.sh\n+\n+Note: If you run into issues while installing Homebrew or pulling packages, refer to [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting).\n+\n+### 3. Install Required Dependencies\n+\n+The first step is to download the required dependencies.\n+These dependencies represent the packages required to get a barebones installation up and running.\n+To install, run the following from your terminal:\n+\n+``` bash\n+brew install automake libtool boost pkg-config libevent\n ```\n \n-If you run into issues, check [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting).\n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 4. Clone Bitcoin repository\n \n-If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG:\n-```shell\n-brew install librsvg\n+`git` should already be installed by default on your system.\n+Now that all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory.\n+All build scripts and commands will run from this directory.\n+\n+``` bash\n+git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-and [`macdeployqtplus`](../contrib/macdeploy/README.md) dependencies:\n-```shell\n-pip3 install ds_store mac_alias\n+### 5. Install Optional Dependencies\n+\n+#### Wallet Dependencies\n+\n+It is not necessary to build wallet functionality to run `bitcoind` or  `bitcoin-qt`.\n+To enable legacy wallets, you must install `berkeley-db@4`.\n+To enable [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md), `sqlite` is required.\n+Skip `berkeley-db@4` if you intend to *exclusively* use descriptor wallets.\n+\n+###### Legacy Wallet Support\n+\n+`berkeley-db@4` is required to enable support for legacy wallets.\n+Skip if you don't intend to use legacy wallets.\n+\n+``` bash\n+brew install berkeley-db@4\n ```\n \n-The wallet support requires one or both of the dependencies ([*SQLite*](#sqlite) and [*Berkeley DB*](#berkeley-db)) in the sections below.\n-To build Bitcoin Core without wallet, see [*Disable-wallet mode*](#disable-wallet-mode).\n+###### Descriptor Wallet Support\n \n-#### SQLite\n+Note: Apple has included a useable `sqlite` package since macOS 10.14.\n+You may not need to install this package.\n \n-Usually, macOS installation already has a suitable SQLite installation.\n-Also, the Homebrew package could be installed:\n+`sqlite` is required to enable support for descriptor wallets.\n+Skip if you don't intend to use descriptor wallets.\n \n-```shell\n+``` bash\n brew install sqlite\n ```\n+---\n \n-In that case the Homebrew package will prevail.\n+#### GUI Dependencies\n \n-#### Berkeley DB\n+###### Qt\n \n-It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n-you can use [this](/contrib/install_db4.sh) script to install it\n-like so:\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework.\n+To compile the GUI, we need to install `qt@5`.\n+Skip if you don't intend to use the GUI.\n \n-```shell\n-./contrib/install_db4.sh .\n+``` bash\n+brew install qt@5\n ```\n \n-from the root of the repository.\n+Ensure that the `qt@5` package is installed, not the `qt` package.\n+If 'qt' is installed, the build process will fail.\n+if installed, remove the `qt` package with the following command:\n \n-Also, the Homebrew package could be installed:\n+``` bash\n+brew uninstall qt\n+```\n \n-```shell\n-brew install berkeley-db4\n+Note: Building with Qt binaries downloaded from the Qt website is not officially supported.\n+See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714).\n+\n+###### qrencode\n+\n+The GUI can encode addresses in a QR Code. To build in QR support for the GUI, install `qrencode`.\n+Skip if not using the GUI or don't want QR code functionality.\n+\n+``` bash\n+brew install qrencode\n ```\n+---\n \n-## Build Bitcoin Core\n+#### Port Mapping Dependencies\n \n-1. Clone the Bitcoin Core source code:\n-    ```shell\n-    git clone https://github.com/bitcoin/bitcoin\n-    cd bitcoin\n-    ```\n+###### miniupnpc\n \n-2.  Build Bitcoin Core:\n+miniupnpc may be used for UPnP port mapping.\n+Skip if you do not need this functionality.\n \n-    Configure and build the headless Bitcoin Core binaries as well as the GUI (if Qt is found).\n+``` bash\n+brew install miniupnpc\n+```\n \n-    You can disable the GUI build by passing `--without-gui` to configure.\n-    ```shell\n-    ./autogen.sh\n-    ./configure\n-    make\n-    ```\n+###### libnatpmp\n \n-3.  It is recommended to build and run the unit tests:\n-    ```shell\n-    make check\n-    ```\n+libnatpmp may be used for NAT-PMP port mapping.\n+Skip if you do not need this functionality.\n \n-4.  You can also create a  `.dmg` that contains the `.app` bundle (optional):\n-    ```shell\n-    make deploy\n-    ```\n+``` bash\n+brew install libnatpmp\n+```\n \n-## Disable-wallet mode\n-When the intention is to run only a P2P node without a wallet, Bitcoin Core may be\n-compiled in disable-wallet mode with:\n-```shell\n-./configure --disable-wallet\n+Note: UPnP and NAT-PMP support will be compiled in and disabled by default.\n+Check out the [further configuration](#further-configuration) section for more information.\n+\n+---\n+\n+#### ZMQ Dependencies\n+\n+Support for ZMQ notifications requires the following dependency.\n+Skip if you do not need ZMQ functionality.\n+\n+``` bash\n+brew install zeromq\n+```\n+\n+ZMQ is automatically compiled in and enabled if the dependency is detected.\n+Check out the [further configuration](#further-configuration) section for more information.\n+\n+For more information on ZMQ, see: [zmq.md](zmq.md)\n+\n+---\n+\n+#### Test Suite Dependencies\n+\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n+\n+``` bash\n+brew install python\n ```\n \n-In this case there is no dependency on [*Berkeley DB*](#berkeley-db) and [*SQLite*](#sqlite).\n+---\n+\n+#### Deploy Dependencies\n+\n+You can deploy a `.dmg` containing the Bitcoin Core application using `make deploy`.\n+This command depends on a couple of python packages, so it is required that you have `python` installed.\n \n-Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n+Ensuring that `python` is installed, you can install the deploy dependencies by running the following commands in your terminal:\n+\n+``` bash\n+brew install librsvg\n+```\n+\n+``` bash\n+pip3 install ds_store mac_alias\n+```\n \n-## Running\n-Bitcoin Core is now available at `./src/bitcoind`\n+## Building Bitcoin Core\n+\n+### 1. Configuration\n+\n+There are many ways to configure Bitcoin Core, here are a few common examples:\n+\n+##### Wallet (BDB + SQlite) Support, No GUI:\n+\n+If `berkeley-db@4` is installed, then legacy wallet support will be built.\n+If `berkeley-db@4` is not installed, then this will throw an error.\n+If `sqlite` is installed, then descriptor wallet support will also be built.\n+Additionally, this explicitly disables the GUI.\n+\n+``` bash\n+./autogen.sh\n+./configure --with-gui=no\n+```\n+\n+##### Wallet (only SQlite) and GUI Support:\n+\n+This explicitly enables the GUI and disables legacy wallet support.\n+If `qt` is not installed, this will throw an error.\n+If `sqlite` is installed then descriptor wallet functionality will be built.\n+If `sqlite` is not installed, then wallet functionality will be disabled.\n+\n+``` bash\n+./autogen.sh\n+./configure --without-bdb --with-gui=yes\n+```\n+\n+##### No Wallet or GUI\n+\n+``` bash\n+./autogen.sh\n+./configure --without-wallet --with-gui=no\n+```\n+\n+##### Further Configuration\n+\n+You may want to dig deeper into the configuration options to achieve your desired behavior.\n+Examine the output of the following command for a full list of configuration options:\n+\n+``` bash\n+./configure -help\n+```\n+\n+### 2. Compile\n+\n+After configuration, you are ready to compile.\n+Run the following in your terminal to compile Bitcoin Core:\n+\n+``` bash\n+make        # use \"-j N\" here for N parallel jobs\n+make check  # Run tests if Python 3 is available\n+```\n+\n+### 3. Deploy (optional)\n+\n+You can also create a  `.dmg` containing the `.app` bundle by running the following command:\n+\n+``` bash\n+make deploy\n+```\n+\n+## Running Bitcoin Core\n+\n+Bitcoin Core should now be available at `./src/bitcoind`.\n+If you compiled support for the GUI, it should be available at `./src/qt/bitcoin-qt`.\n+\n+The first time you run `bitcoind` or `bitcoin-qt`, it will start downloading the blockchain.\n+This process could take many hours, or even days on slower than average systems.\n+\n+By default, blockchain and wallet data files will be stored in:\n+\n+``` bash\n+/Users/${USER}/Library/Application Support/Bitcoin/\n+```\n \n Before running, you may create an empty configuration file:\n+\n ```shell\n mkdir -p \"/Users/${USER}/Library/Application Support/Bitcoin\"\n \n@@ -119,22 +314,17 @@ touch \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n ```\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could\n-take many hours, or even days on slower than average systems.\n-\n You can monitor the download process by looking at the debug.log file:\n+\n ```shell\n tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ```\n \n ## Other commands:\n+\n ```shell\n ./src/bitcoind -daemon      # Starts the bitcoin daemon.\n ./src/bitcoin-cli --help    # Outputs a list of command-line options.\n ./src/bitcoin-cli help      # Outputs a list of RPC commands when the daemon is running.\n+./src/qt/bitcoin-qt -server # Starts the bitcoin-qt server mode, allows bitcoin-cli control\n ```\n-\n-## Notes\n-* Tested on OS X 10.14 Mojave through macOS 11 Big Sur on 64-bit Intel\n-processors only.\n-* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)."
      },
      {
        "sha": "73c0bf877950e1604c3bd47079ff2805c258fd98",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 58,
        "deletions": 31,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -9,7 +9,7 @@ Note\n Always use absolute paths to configure and compile Bitcoin Core and the dependencies.\n For example, when specifying the path of the dependency:\n \n-\t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+    ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n \n Here BDB_PREFIX must be an absolute path - it is defined using $(pwd) which ensures\n the usage of the absolute path.\n@@ -20,7 +20,7 @@ To Build\n ```bash\n ./autogen.sh\n ./configure\n-make\n+make # use \"-j N\" for N parallel jobs\n make install # optional\n ```\n \n@@ -82,25 +82,24 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\n+    sudo apt-get install libevent-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev\n \n-BerkeleyDB is required for the wallet.\n+Berkeley DB is required for the wallet.\n \n Ubuntu and Debian have their own `libdb-dev` and `libdb++-dev` packages, but these will install\n-BerkeleyDB 5.1 or later. This will break binary wallet compatibility with the distributed executables, which\n+Berkeley DB 5.1 or later. This will break binary wallet compatibility with the distributed executables, which\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-Otherwise, you can build from self-compiled `depends` (see above).\n+Otherwise, you can build Berkeley DB [yourself](#berkeley-db).\n \n-SQLite is required for the wallet:\n+SQLite is required for the descriptor wallet:\n \n     sudo apt install libsqlite3-dev\n \n-To build Bitcoin Core without wallet, see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)\n+To build Bitcoin Core without wallet, see [*Disable-wallet mode*](#disable-wallet-mode)\n \n-\n-Optional port mapping libraries (see: `--with-miniupnpc`, and `--enable-upnp-default`, `--with-natpmp`, `--enable-natpmp-default`):\n+Optional port mapping libraries (see: `--with-miniupnpc`, `--enable-upnp-default`, and `--with-natpmp`, `--enable-natpmp-default`):\n \n     sudo apt install libminiupnpc-dev libnatpmp-dev\n \n@@ -132,16 +131,43 @@ built by default.\n \n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n+    sudo dnf install gcc-c++ libtool make autoconf automake python3\n+\n+Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n+\n+    sudo dnf install libevent-devel boost-devel\n+\n+Berkeley DB is required for the wallet:\n+\n+    sudo dnf install libdb4-devel libdb4-cxx-devel\n+\n+Newer Fedora releases, since Fedora 33, have only `libdb-devel` and `libdb-cxx-devel` packages, but these will install\n+Berkeley DB 5.3 or later. This will break binary wallet compatibility with the distributed executables, which\n+are based on Berkeley DB 4.8. If you do not care about wallet compatibility,\n+pass `--with-incompatible-bdb` to configure.\n+\n+Otherwise, you can build Berkeley DB [yourself](#berkeley-db).\n+\n+SQLite is required for the descriptor wallet:\n+\n+    sudo dnf install sqlite-devel\n+\n+To build Bitcoin Core without wallet, see [*Disable-wallet mode*](#disable-wallet-mode)\n \n-Optional port mapping libraries (see: `--with-miniupnpc`, and `--enable-upnp-default`, `--with-natpmp`, `--enable-natpmp-default`):\n+Optional port mapping libraries (see: `--with-miniupnpc`, `--enable-upnp-default`, and `--with-natpmp`, `--enable-natpmp-default`):\n \n     sudo dnf install miniupnpc-devel libnatpmp-devel\n \n ZMQ dependencies (provides ZMQ API):\n \n     sudo dnf install zeromq-devel\n \n+GUI dependencies:\n+\n+If you want to build bitcoin-qt, make sure that the required packages for Qt development\n+are installed. Qt 5 is necessary to build the GUI.\n+To build without GUI pass `--without-gui`.\n+\n To build with Qt 5 you need the following:\n \n     sudo dnf install qt5-qttools-devel qt5-qtbase-devel\n@@ -150,9 +176,8 @@ libqrencode (optional) can be installed with:\n \n     sudo dnf install qrencode-devel\n \n-SQLite can be installed with:\n-\n-    sudo dnf install sqlite-devel\n+Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+built by default.\n \n Notes\n -----\n@@ -166,9 +191,9 @@ miniupnpc\n https://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n turned off by default.  See the configure options for UPnP behavior desired:\n \n-\t--without-miniupnpc      No UPnP support, miniupnp not required\n-\t--disable-upnp-default   (the default) UPnP support turned off by default at runtime\n-\t--enable-upnp-default    UPnP support turned on by default at runtime\n+    --without-miniupnpc      No UPnP support, miniupnp not required\n+    --disable-upnp-default   (the default) UPnP support turned off by default at runtime\n+    --enable-upnp-default    UPnP support turned on by default at runtime\n \n libnatpmp\n ---------\n@@ -177,9 +202,9 @@ libnatpmp\n from [here](https://miniupnp.tuxfamily.org/files/). NAT-PMP support is compiled in and\n turned off by default. See the configure options for NAT-PMP behavior desired:\n \n-\t--without-natpmp          No NAT-PMP support, libnatpmp not required\n-\t--disable-natpmp-default  (the default) NAT-PMP support turned off by default at runtime\n-\t--enable-natpmp-default   NAT-PMP support turned on by default at runtime\n+    --without-natpmp          No NAT-PMP support, libnatpmp not required\n+    --disable-natpmp-default  (the default) NAT-PMP support turned off by default at runtime\n+    --enable-natpmp-default   NAT-PMP support turned on by default at runtime\n \n Berkeley DB\n -----------\n@@ -193,15 +218,17 @@ like so:\n \n from the root of the repository.\n \n-**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)).\n+Otherwise, you can build Bitcoin Core from self-compiled [depends](/depends/README.md).\n+\n+**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](#disable-wallet-mode)).\n \n Boost\n -----\n If you need to build Boost yourself:\n \n-\tsudo su\n-\t./bootstrap.sh\n-\t./bjam install\n+    sudo su\n+    ./bootstrap.sh\n+    ./bjam install\n \n \n Security\n@@ -212,8 +239,8 @@ This can be disabled with:\n \n Hardening Flags:\n \n-\t./configure --enable-hardening\n-\t./configure --disable-hardening\n+    ./configure --enable-hardening\n+    ./configure --disable-hardening\n \n \n Hardening enables the following features:\n@@ -228,7 +255,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+        scanelf -e ./bitcoin\n \n     The output should contain:\n \n@@ -245,8 +272,8 @@ Hardening enables the following features:\n     `scanelf -e ./bitcoin`\n \n     The output should contain:\n-\tSTK/REL/PTL\n-\tRW- R-- RW-\n+    STK/REL/PTL\n+    RW- R-- RW-\n \n     The STK RW- means that the stack is readable and writeable but not executable.\n \n@@ -304,7 +331,7 @@ To build executables for ARM:\n     make HOST=arm-linux-gnueabihf NO_QT=1\n     cd ..\n     ./autogen.sh\n-    ./configure --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\n+    CONFIG_SITE=$PWD/depends/arm-linux-gnueabihf/share/config.site ./configure --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\n     make\n \n "
      },
      {
        "sha": "f88b9739deb840afb3261e418e58453345f0a0ec",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 21,
        "deletions": 4,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -81,9 +81,26 @@ The first step is to install the mingw-w64 cross-compilation tool chain:\n \n     sudo apt install g++-mingw-w64-x86-64\n \n-Ubuntu Bionic 18.04 <sup>[1](#footnote1)</sup>:\n+Next, set the default `mingw32 g++` compiler option to POSIX<sup>[1](#footnote1)</sup>:\n \n-    sudo update-alternatives --config x86_64-w64-mingw32-g++ # Set the default mingw32 g++ compiler option to posix.\n+```\n+sudo update-alternatives --config x86_64-w64-mingw32-g++\n+```\n+\n+After running the above command, you should see output similar to that below.\n+Choose the option that ends with `posix`.\n+\n+```\n+There are 2 choices for the alternative x86_64-w64-mingw32-g++ (providing /usr/bin/x86_64-w64-mingw32-g++).\n+\n+  Selection    Path                                   Priority   Status\n+------------------------------------------------------------\n+  0            /usr/bin/x86_64-w64-mingw32-g++-win32   60        auto mode\n+* 1            /usr/bin/x86_64-w64-mingw32-g++-posix   30        manual mode\n+  2            /usr/bin/x86_64-w64-mingw32-g++-win32   60        manual mode\n+\n+Press <enter> to keep the current choice[*], or type selection number:\n+```\n \n Once the toolchain is installed the build steps are common:\n \n@@ -103,9 +120,9 @@ Build using:\n     cd depends\n     make HOST=x86_64-w64-mingw32\n     cd ..\n-    ./autogen.sh # not required when building from tarball\n+    ./autogen.sh\n     CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make\n+    make # use \"-j N\" for N parallel jobs\n     sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n \n ## Depends system"
      },
      {
        "sha": "9754952221116b876163b6a316158c891d3af413",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -13,20 +13,20 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | FreeType | [2.7.1](https://download.savannah.gnu.org/releases/freetype) |  | No |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Android only) |\n | GCC |  | [7+](https://gcc.gnu.org/) (C++17 support) |  |  |  |\n | HarfBuzz-NG |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n-| libevent | [2.1.11-stable](https://github.com/libevent/libevent/releases) | [2.0.21](https://github.com/bitcoin/bitcoin/pull/18676) | No |  |  |\n-| libnatpmp | [20150609](https://miniupnp.tuxfamily.org/files) |  | No |  |  |\n+| libevent | [2.1.12-stable](https://github.com/libevent/libevent/releases) | [2.0.21](https://github.com/bitcoin/bitcoin/pull/18676) | No |  |  |\n+| libnatpmp | git commit [4536032...](https://github.com/miniupnp/libnatpmp/tree/4536032ae32268a45c073a4d5e91bbab4534773a) |  | No |  |  |\n | libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | librsvg | |  |  |  |  |\n-| MiniUPnPc | [2.0.20180203](https://miniupnp.tuxfamily.org/files) |  | No |  |  |\n+| MiniUPnPc | [2.2.2](https://miniupnp.tuxfamily.org/files) |  | No |  |  |\n | PCRE |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | Python (tests) |  | [3.6](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n-| Qt | [5.9.8](https://download.qt.io/official_releases/qt/) | [5.5.1](https://github.com/bitcoin/bitcoin/issues/13478) | No |  |  |\n+| Qt | [5.12.11](https://download.qt.io/official_releases/qt/) | [5.9.5](https://github.com/bitcoin/bitcoin/issues/20104) | No |  |  |\n | SQLite | [3.32.1](https://sqlite.org/download.html) | [3.7.17](https://github.com/bitcoin/bitcoin/pull/19077) |  |  |  |\n | XCB |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Linux only) |\n | xkbcommon |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Linux only) |\n | ZeroMQ | [4.3.1](https://github.com/zeromq/libzmq/releases) | 4.0.0 | No |  |  |\n-| zlib | [1.2.11](https://zlib.net/) |  |  |  | No |\n+| zlib |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n \n Controlling dependencies\n ------------------------\n@@ -43,3 +43,4 @@ Some dependencies are not needed in all configurations. The following are some f\n \n #### Other\n * librsvg is only needed if you need to run `make deploy` on (cross-compilation to) macOS.\n+* Not-Qt-bundled zlib is required to build the [DMG tool](../contrib/macdeploy/README.md#deterministic-macos-dmg-notes) from the libdmg-hfsplus project."
      },
      {
        "sha": "e27ff8754684561ad115131c6ecf2e2a7e422e2e",
        "filename": "doc/descriptors.md",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -30,6 +30,7 @@ Output descriptors currently support:\n - Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n - Pay-to-script-hash scripts (P2SH), through the `sh` function.\n - Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Pay-to-taproot outputs (P2TR), through the `tr` function.\n - Multisig scripts, through the `multi` function.\n - Multisig scripts where the public keys are sorted lexicographically, through the `sortedmulti` function.\n - Any type of supported address through the `addr` function.\n@@ -54,20 +55,22 @@ Output descriptors currently support:\n - `pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)` describes a set of P2PKH outputs, but additionally specifies that the specified xpub is a child of a master with fingerprint `d34db33f`, and derived using path `44'/0'/0'`.\n - `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where the first multisig key is the *1/0/`i`* child of the first specified xpub and the second multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default).\n - `wsh(sortedmulti(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where one multisig key is the *1/0/`i`* child of the first specified xpub and the other multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default). The order of public keys in the resulting witnessScripts is determined by the lexicographic order of the public keys at that index.\n+- `tr(c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5,{pk(fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556),pk(e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)})` describes a P2TR output with the `c6...` x-only pubkey as internal key, and two script paths.\n \n ## Reference\n \n Descriptors consist of several types of expressions. The top level expression is either a `SCRIPT`, or `SCRIPT#CHECKSUM` where `CHECKSUM` is an 8-character alphanumeric descriptor checksum.\n \n `SCRIPT` expressions:\n - `sh(SCRIPT)` (top level only): P2SH embed the argument.\n-- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `wsh(SCRIPT)` (top level or inside `sh` only): P2WSH embed the argument.\n - `pk(KEY)` (anywhere): P2PK output for the given public key.\n-- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n-- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `pkh(KEY)` (not inside `tr`): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (top level or inside `sh` only): P2WPKH output for the given compressed pubkey.\n - `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)` and `pkh(KEY)`. If the key is compressed, it also includes `wpkh(KEY)` and `sh(wpkh(KEY))`.\n-- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n-- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (not inside `tr`): k-of-n multisig script.\n+- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (not inside `tr`): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n+- `tr(KEY)` or `tr(KEY,TREE)` (top level only): P2TR output with the specified key as internal key, and optionally a tree of script paths.\n - `addr(ADDR)` (top level only): the script which ADDR expands to.\n - `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n \n@@ -80,12 +83,17 @@ Descriptors consist of several types of expressions. The top level expression is\n - Followed by the actual key, which is either:\n   - Hex encoded public keys (either 66 characters starting with `02` or `03` for a compressed pubkey, or 130 characters starting with `04` for an uncompressed pubkey).\n     - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+    - Inside `tr`, x-only pubkeys are also permitted (64 hex characters).\n   - [WIF](https://en.bitcoin.it/wiki/Wallet_import_format) encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n   - `xpub` encoded extended public key or `xprv` encoded extended private key (as defined in [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)).\n     - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n     - Optionally followed by a single `/*` or `/*'` final step to denote all (direct) unhardened or hardened children.\n     - The usage of hardened derivation steps requires providing the private key.\n \n+`TREE` expressions:\n+- any `SCRIPT` expression\n+- An open brace `{`, a `TREE` expression, a comma `,`, a `TREE` expression, and a closing brace `}`\n+\n (Anywhere a `'` suffix is permitted to denote hardened derivation, the suffix `h` can be used instead.)\n \n `ADDR` expressions are any type of supported address:\n@@ -191,7 +199,7 @@ steps, or for dumping wallet descriptors including private key material.\n In order to easily represent the sets of scripts currently supported by\n existing Bitcoin Core wallets, a convenience function `combo` is\n provided, which takes as input a public key, and describes a set of P2PK,\n-P2PKH, P2WPKH, and P2SH-P2WPH scripts for that key. In case the key is\n+P2PKH, P2WPKH, and P2SH-P2WPKH scripts for that key. In case the key is\n uncompressed, the set only includes P2PK and P2PKH scripts.\n \n ### Checksums"
      },
      {
        "sha": "c3a63b3523812bb3a2f2d5ca476d445589f662ee",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -75,6 +75,11 @@ tool to clean up patches automatically before submission.\n     on the same line as the `if`, without braces. In every other case,\n     braces are required, and the `then` and `else` clauses must appear\n     correctly indented on a new line.\n+  - There's no hard limit on line width, but prefer to keep lines to <100\n+    characters if doing so does not decrease readability. Break up long\n+    function declarations over multiple lines using the Clang Format\n+    [AlignAfterOpenBracket](https://clang.llvm.org/docs/ClangFormatStyleOptions.html)\n+    style option.\n \n - **Symbol naming conventions**. These are preferred in new code, but are not\n required when doing so would need changes to significant pieces of existing\n@@ -590,11 +595,6 @@ Common misconceptions are clarified in those sections:\n \n   - *Rationale*: This avoids memory and resource leaks, and ensures exception safety.\n \n-- Use `MakeUnique()` to construct objects owned by `unique_ptr`s.\n-\n-  - *Rationale*: `MakeUnique` is concise and ensures exception safety in complex expressions.\n-    `MakeUnique` is a temporary project local implementation of `std::make_unique` (C++14).\n-\n C++ data structures\n --------------------\n \n@@ -780,6 +780,11 @@ Threads and synchronization\n   get compile-time warnings about potential race conditions in code. Combine annotations in function declarations with\n   run-time asserts in function definitions:\n \n+  - In functions that are declared separately from where they are defined, the\n+    thread safety annotations should be added exclusively to the function\n+    declaration. Annotations on the definition could lead to false positives\n+    (lack of compile failure) at call sites between the two.\n+\n ```C++\n // txmempool.h\n class CTxMemPool\n@@ -807,7 +812,7 @@ class ChainstateManager\n {\n public:\n     ...\n-    bool ProcessNewBlock(...) EXCLUSIVE_LOCKS_REQUIRED(!::cs_main);\n+    bool ProcessNewBlock(...) LOCKS_EXCLUDED(::cs_main);\n     ...\n }\n \n@@ -1155,13 +1160,6 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n \n   - *Rationale*: If not, the call can not be used with name-based arguments.\n \n-- Set okSafeMode in the RPC command table to a sensible value: safe mode is when the\n-  blockchain is regarded to be in a confused state, and the client deems it unsafe to\n-  do anything irreversible such as send. Anything that just queries should be permitted.\n-\n-  - *Rationale*: Troubleshooting a node in safe mode is difficult if half the\n-    RPCs don't work.\n-\n - Add every non-string RPC argument `(method, idx, name)` to the table `vRPCConvertParams` in `rpc/client.cpp`.\n \n   - *Rationale*: `bitcoin-cli` and the GUI debug console use this table to determine how to"
      },
      {
        "sha": "de44cdd88013cd33a23c2d2be41009e5525fc624",
        "filename": "doc/external-signer.md",
        "status": "added",
        "additions": 171,
        "deletions": 0,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/external-signer.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/external-signer.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/external-signer.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,171 @@\n+# Support for signing transactions outside of Bitcoin Core\n+\n+Bitcoin Core can be launched with `-signer=<cmd>` where `<cmd>` is an external tool which can sign transactions and perform other functions. For example, it can be used to communicate with a hardware wallet.\n+\n+## Example usage\n+\n+The following example is based on the [HWI](https://github.com/bitcoin-core/HWI) tool. Version 2.0 or newer is required. Although this tool is hosted under the Bitcoin Core GitHub organization and maintained by Bitcoin Core developers, it should be used with caution. It is considered experimental and has far less review than Bitcoin Core itself. Be particularly careful when running tools such as these on a computer with private keys on it.\n+\n+When using a hardware wallet, consult the manufacturer website for (alternative) software they recommend. As long as their software conforms to the standard below, it should be able to work with Bitcoin Core.\n+\n+Start Bitcoin Core:\n+\n+```sh\n+$ bitcoind -signer=../HWI/hwi.py\n+```\n+\n+### Device setup\n+\n+Follow the hardware manufacturers instructions for the initial device setup, as well as their instructions for creating a backup. Alternatively, for some devices, you can use the `setup`, `restore` and `backup` commands provided by [HWI](https://github.com/bitcoin-core/HWI).\n+\n+### Create wallet and import keys\n+\n+Get a list of signing devices / services:\n+\n+```\n+$ bitcoin-cli enumeratesigners\n+{\n+  \"signers\": [\n+    {\n+      \"fingerprint\": \"c8df832a\"\n+    }\n+]\n+```\n+\n+The master key fingerprint is used to identify a device.\n+\n+Create a wallet, this automatically imports the public keys:\n+\n+```sh\n+$ bitcoin-cli createwallet \"hww\" true true \"\" true true true\n+```\n+\n+### Verify an address\n+\n+Display an address on the device:\n+\n+```sh\n+$ bitcoin-cli -rpcwallet=<wallet> getnewaddress\n+$ bitcoin-cli -rpcwallet=<wallet> walletdisplayaddress <address>\n+```\n+\n+Replace `<address>` with the result of `getnewaddress`.\n+\n+### Spending\n+\n+Under the hood this uses a [Partially Signed Bitcoin Transaction](psbt.md).\n+\n+```sh\n+$ bitcoin-cli -rpcwallet=<wallet> sendtoaddress <address> <amount>\n+```\n+\n+This prompts your hardware wallet to sign, and fail if it's not connected. If successful\n+it automatically broadcasts the transaction.\n+\n+```sh\n+{\"complete\": true, \"txid\": <txid>}\n+```\n+\n+## Signer API\n+\n+In order to be compatible with Bitcoin Core any signer command should conform to the specification below. This specification is subject to change. Ideally a BIP should propose a standard so that other wallets can also make use of it.\n+\n+Prerequisite knowledge:\n+* [Output Descriptors](descriptors.md)\n+* Partially Signed Bitcoin Transaction ([PSBT](psbt.md))\n+\n+### `enumerate` (required)\n+\n+Usage:\n+```\n+$ <cmd> enumerate\n+[\n+    {\n+        \"fingerprint\": \"00000000\"\n+    }\n+]\n+```\n+\n+The command MUST return an (empty) array with at least a `fingerprint` field.\n+\n+A future extension could add an optional return field with device capabilities. Perhaps a descriptor with wildcards. For example: `[\"pkh(\"44'/0'/$'/{0,1}/*\"), sh(wpkh(\"49'/0'/$'/{0,1}/*\")), wpkh(\"84'/0'/$'/{0,1}/*\")]`. This would indicate the device supports legacy, wrapped SegWit and native SegWit. In addition it restricts the derivation paths that can used for those, to maintain compatibility with other wallet software. It also indicates the device, or the driver, doesn't support multisig.\n+\n+A future extension could add an optional return field `reachable`, in case `<cmd>` knows a signer exists but can't currently reach it.\n+\n+### `signtransaction` (required)\n+\n+Usage:\n+```\n+$ <cmd> --fingerprint=<fingerprint> (--testnet) signtransaction <psbt>\n+base64_encode_signed_psbt\n+```\n+\n+The command returns a psbt with any signatures.\n+\n+The `psbt` SHOULD include bip32 derivations. The command SHOULD fail if none of the bip32 derivations match a key owned by the device.\n+\n+The command SHOULD fail if the user cancels.\n+\n+The command MAY complain if `--testnet` is set, but any of the BIP32 derivation paths contain a coin type other than `1h` (and vice versa).\n+\n+### `getdescriptors` (optional)\n+\n+Usage:\n+\n+```\n+$ <cmd> --fingerprint=<fingerprint> (--testnet) getdescriptors <account>\n+<xpub>\n+```\n+\n+Returns descriptors supported by the device. Example:\n+\n+```\n+$ <cmd> --fingerprint=00000000 --testnet getdescriptors\n+{\n+  \"receive\": [\n+    \"pkh([00000000/44h/0h/0h]xpub6C.../0/*)#fn95jwmg\",\n+    \"sh(wpkh([00000000/49h/0h/0h]xpub6B..../0/*))#j4r9hntt\",\n+    \"wpkh([00000000/84h/0h/0h]xpub6C.../0/*)#qw72dxa9\"\n+  ],\n+  \"internal\": [\n+    \"pkh([00000000/44h/0h/0h]xpub6C.../1/*)#c8q40mts\",\n+    \"sh(wpkh([00000000/49h/0h/0h]xpub6B..../1/*))#85dn0v75\",\n+    \"wpkh([00000000/84h/0h/0h]xpub6C..../1/*)#36mtsnda\"\n+  ]\n+}\n+```\n+\n+### `displayaddress` (optional)\n+\n+Usage:\n+```\n+<cmd> --fingerprint=<fingerprint> (--testnet) displayaddress --desc descriptor\n+```\n+\n+Example, display the first native SegWit receive address on Testnet:\n+\n+```\n+<cmd> --fingerprint=00000000 --testnet displayaddress --desc \"wpkh([00000000/84h/1h/0h]tpubDDUZ..../0/0)\"\n+```\n+\n+The command MUST be able to figure out the address type from the descriptor.\n+\n+If <descriptor> contains a master key fingerprint, the command MUST fail if it does not match the fingerprint known by the device.\n+\n+If <descriptor> contains an xpub, the command MUST fail if it does not match the xpub known by the device.\n+\n+The command MAY complain if `--testnet` is set, but the BIP32 coin type is not `1h` (and vice versa).\n+\n+## How Bitcoin Core uses the Signer API\n+\n+The `enumeratesigners` RPC simply calls `<cmd> enumerate`.\n+\n+The `createwallet` RPC calls:\n+\n+* `<cmd> --fingerprint=00000000 getdescriptors 0`\n+\n+It then imports descriptors for all support address types, in a BIP44/49/84 compatible manner.\n+\n+The `walletdisplayaddress` RPC reuses some code from `getaddressinfo` on the provided address and obtains the inferred descriptor. It then calls `<cmd> --fingerprint=00000000 displayaddress --desc=<descriptor>`.\n+\n+`sendtoaddress` and `sendmany` check `inputs->bip32_derivs` to see if any inputs have the same `master_fingerprint` as the signer. If so, it calls `<cmd> --fingerprint=00000000 signtransaction <psbt>`. It waits for the device to return a (partially) signed psbt, tries to finalize it and broadcasts the transaction."
      },
      {
        "sha": "353efe348d1e621c5aedd2da26c7b99dc9bb8592",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -53,17 +53,19 @@ Subdirectory       | File(s)               | Description\n `indexes/txindex/` | LevelDB database      | Transaction index; *optional*, used if `-txindex=1`\n `indexes/blockfilter/basic/db/` | LevelDB database      | Blockfilter index LevelDB database for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n+`indexes/coinstats/db/` | LevelDB database | Coinstats index; *optional*, used if `-coinstatsindex=1`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, wallets reside in the [data directory](#data-directory-location)\n `./`               | `anchors.dat`         | Anchor IP address database, created on shutdown and deleted at startup. Anchors are last known outgoing block-relay-only peers that are tried to re-connect to on startup\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n `./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is not written to by the software and must be created manually. Path can be specified by `-conf` option\n `./`               | `bitcoind.pid`        | Stores the process ID (PID) of `bitcoind` or `bitcoin-qt` while running; created at start and deleted on shutdown; can be specified by `-pid` option\n `./`               | `debug.log`           | Contains debug information and general logging generated by `bitcoind` or `bitcoin-qt`; can be specified by `-debuglogfile` option\n-`./`               | `fee_estimates.dat`   | Stores statistics used to estimate minimum transaction fees and priorities required for confirmation\n+`./`               | `fee_estimates.dat`   | Stores statistics used to estimate minimum transaction fees required for confirmation\n `./`               | `guisettings.ini.bak` | Backup of former [GUI settings](#gui-settings) after `-resetguisettings` option is used\n `./`               | `ip_asn.map`          | IP addresses to Autonomous System Numbers (ASNs) mapping used for bucketing of the peers; path can be specified with the `-asmap` option\n `./`               | `mempool.dat`         | Dump of the mempool's transactions\n `./`               | `onion_v3_private_key` | Cached Tor onion service private key for `-listenonion` option\n+`./`               | `i2p_private_key`     | Private key that corresponds to our I2P address. When `-i2psam=` is specified the contents of this file is used to identify ourselves for making outgoing connections to I2P peers and possibly accepting incoming ones. Automatically generated if it does not exist.\n `./`               | `peers.dat`           | Peer IP address database (custom format)\n `./`               | `settings.json`       | Read-write settings set through GUI or RPC interfaces, augmenting manual settings from [bitcoin.conf](bitcoin-conf.md). File is created automatically if read-write settings storage is not disabled with `-nosettings` option. Path can be specified with `-settings` option\n `./`               | `.cookie`             | Session RPC authentication cookie; if used, created at start and deleted on shutdown; can be specified by `-rpccookiefile` option"
      },
      {
        "sha": "6fc9077e4c3b91eea828b57b8e8916b13f67980d",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 114,
        "deletions": 11,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -16,7 +16,7 @@ $ FUZZ=process_message src/test/fuzz/fuzz\n # abort fuzzing using ctrl-c\n ```\n \n-## Fuzzing harnesses, fuzzing output and fuzzing corpora\n+## Fuzzing harnesses and output\n \n [`process_message`](https://github.com/bitcoin/bitcoin/blob/master/src/test/fuzz/process_message.cpp) is a fuzzing harness for the [`ProcessMessage(...)` function (`net_processing`)](https://github.com/bitcoin/bitcoin/blob/master/src/net_processing.cpp). The available fuzzing harnesses are found in [`src/test/fuzz/`](https://github.com/bitcoin/bitcoin/tree/master/src/test/fuzz).\n \n@@ -64,6 +64,8 @@ block^@M-^?M-^?M-^?M-^?M-^?nM-^?M-^?\n \n In this case the fuzzer managed to create a `block` message which when passed to `ProcessMessage(...)` increased coverage.\n \n+## Fuzzing corpora\n+\n The project's collection of seed corpora is found in the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) repo.\n \n To fuzz `process_message` using the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) seed corpus:\n@@ -81,6 +83,20 @@ INFO: seed corpus: files: 991 min: 1b max: 1858b total: 288291b rss: 150Mb\n \u2026\n ```\n \n+## Reproduce a fuzzer crash reported by the CI\n+\n+- `cd` into the `qa-assets` directory and update it with `git pull qa-assets`\n+- locate the crash case described in the CI output, e.g. `Test unit written to\n+  ./crash-1bc91feec9fc00b107d97dc225a9f2cdaa078eb6`\n+- make sure to compile with all sanitizers, if they are needed (fuzzing runs\n+  more slowly with sanitizers enabled, but a crash should be reproducible very\n+  quickly from a crash case)\n+- run the fuzzer with the case number appended to the seed corpus path:\n+  `FUZZ=process_message src/test/fuzz/fuzz\n+  qa-assets/fuzz_seed_corpus/process_message/1bc91feec9fc00b107d97dc225a9f2cdaa078eb6`\n+\n+## Submit improved coverage\n+\n If you find coverage increasing inputs when fuzzing you are highly encouraged to submit them for inclusion in the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) repo.\n \n Every single pull request submitted against the Bitcoin Core repo is automatically tested against all inputs in the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) repo. Contributing new coverage increasing inputs is an easy way to help make Bitcoin Core more robust.\n@@ -108,33 +124,32 @@ Full configure that was tested on macOS Catalina with `brew` installed `llvm`:\n \n Read the [libFuzzer documentation](https://llvm.org/docs/LibFuzzer.html) for more information. This [libFuzzer tutorial](https://github.com/google/fuzzing/blob/master/tutorial/libFuzzerTutorial.md) might also be of interest.\n \n-# Fuzzing Bitcoin Core using american fuzzy lop (`afl-fuzz`)\n+# Fuzzing Bitcoin Core using afl++\n \n ## Quickstart guide\n \n-To quickly get started fuzzing Bitcoin Core using [`afl-fuzz`](https://github.com/google/afl):\n+To quickly get started fuzzing Bitcoin Core using [afl++](https://github.com/AFLplusplus/AFLplusplus):\n \n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ git clone https://github.com/google/afl\n-$ make -C afl/\n-$ make -C afl/llvm_mode/\n+$ git clone https://github.com/AFLplusplus/AFLplusplus\n+$ make -C AFLplusplus/ source-only\n $ ./autogen.sh\n-# It is possible to compile with afl-gcc and afl-g++ instead of afl-clang. However, running afl-fuzz\n-# may require more memory via the -m flag.\n-$ CC=$(pwd)/afl/afl-clang-fast CXX=$(pwd)/afl/afl-clang-fast++ ./configure --enable-fuzz\n+# If afl-clang-lto is not available, see\n+# https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n+$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n $ make\n # For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n # try compiling using: AFL_NO_X86=1 make\n $ mkdir -p inputs/ outputs/\n $ echo A > inputs/thin-air-input\n-$ FUZZ=bech32 afl/afl-fuzz -i inputs/ -o outputs/ -- src/test/fuzz/fuzz\n+$ FUZZ=bech32 AFLplusplus/afl-fuzz -i inputs/ -o outputs/ -- src/test/fuzz/fuzz\n # You may have to change a few kernel parameters to test optimally - afl-fuzz\n # will print an error and suggestion if so.\n ```\n \n-Read the [`afl-fuzz` documentation](https://github.com/google/afl) for more information.\n+Read the [afl++ documentation](https://github.com/AFLplusplus/AFLplusplus) for more information.\n \n # Fuzzing Bitcoin Core using Honggfuzz\n \n@@ -157,3 +172,91 @@ $ FUZZ=process_message honggfuzz/honggfuzz -i inputs/ -- src/test/fuzz/fuzz\n ```\n \n Read the [Honggfuzz documentation](https://github.com/google/honggfuzz/blob/master/docs/USAGE.md) for more information.\n+\n+## Fuzzing the Bitcoin Core P2P layer using Honggfuzz NetDriver\n+\n+Honggfuzz NetDriver allows for very easy fuzzing of TCP servers such as Bitcoin\n+Core without having to write any custom fuzzing harness. The `bitcoind` server\n+process is largely fuzzed without modification.\n+\n+This makes the fuzzing highly realistic: a bug reachable by the fuzzer is likely\n+also remotely triggerable by an untrusted peer.\n+\n+To quickly get started fuzzing the P2P layer using Honggfuzz NetDriver:\n+\n+```sh\n+$ mkdir bitcoin-honggfuzz-p2p/\n+$ cd bitcoin-honggfuzz-p2p/\n+$ git clone https://github.com/bitcoin/bitcoin\n+$ cd bitcoin/\n+$ ./autogen.sh\n+$ git clone https://github.com/google/honggfuzz\n+$ cd honggfuzz/\n+$ make\n+$ cd ..\n+$ CC=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang \\\n+      CXX=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang++ \\\n+      ./configure --disable-wallet --with-gui=no \\\n+                  --with-sanitizers=address,undefined\n+$ git apply << \"EOF\"\n+diff --git a/src/bitcoind.cpp b/src/bitcoind.cpp\n+index 455a82e39..2faa3f80f 100644\n+--- a/src/bitcoind.cpp\n++++ b/src/bitcoind.cpp\n+@@ -158,7 +158,11 @@ static bool AppInit(int argc, char* argv[])\n+     return fRet;\n+ }\n+\n++#ifdef HFND_FUZZING_ENTRY_FUNCTION_CXX\n++HFND_FUZZING_ENTRY_FUNCTION_CXX(int argc, char* argv[])\n++#else\n+ int main(int argc, char* argv[])\n++#endif\n+ {\n+ #ifdef WIN32\n+     util::WinCmdLineArgs winArgs;\n+diff --git a/src/net.cpp b/src/net.cpp\n+index cf987b699..636a4176a 100644\n+--- a/src/net.cpp\n++++ b/src/net.cpp\n+@@ -709,7 +709,7 @@ int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n+     }\n+\n+     // Check start string, network magic\n+-    if (memcmp(hdr.pchMessageStart, m_chain_params.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n++    if (false && memcmp(hdr.pchMessageStart, m_chain_params.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) { // skip network magic checking\n+         LogPrint(BCLog::NET, \"HEADER ERROR - MESSAGESTART (%s, %u bytes), received %s, peer=%d\\n\", hdr.GetCommand(), hdr.nMessageSize, HexStr(hdr.pchMessageStart), m_node_id);\n+         return -1;\n+     }\n+@@ -768,7 +768,7 @@ Optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono::mic\n+     RandAddEvent(ReadLE32(hash.begin()));\n+\n+     // Check checksum and header command string\n+-    if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0) {\n++    if (false && memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0) { // skip checksum checking\n+         LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s, peer=%d\\n\",\n+                  SanitizeString(msg->m_command), msg->m_message_size,\n+                  HexStr(Span<uint8_t>(hash.begin(), hash.begin() + CMessageHeader::CHECKSUM_SIZE)),\n+EOF\n+$ make -C src/ bitcoind\n+$ mkdir -p inputs/\n+$ honggfuzz/honggfuzz --exit_upon_crash --quiet --timeout 4 -n 1 -Q \\\n+      -E HFND_TCP_PORT=18444 -f inputs/ -- \\\n+          src/bitcoind -regtest -discover=0 -dns=0 -dnsseed=0 -listenonion=0 \\\n+                       -nodebuglogfile -bind=127.0.0.1:18444 -logthreadnames \\\n+                       -debug\n+```\n+\n+# OSS-Fuzz\n+\n+Bitcoin Core participates in Google's [OSS-Fuzz](https://github.com/google/oss-fuzz/tree/master/projects/bitcoin-core)\n+program, which includes a dashboard of [publicly disclosed vulnerabilities](https://bugs.chromium.org/p/oss-fuzz/issues/list?q=bitcoin-core).\n+Generally, we try to disclose vulnerabilities as soon as possible after they\n+are fixed to give users the knowledge they need to be protected. However,\n+because Bitcoin is a live P2P network, and not just standalone local software,\n+we might not fully disclose every issue within Google's standard\n+[90-day disclosure window](https://google.github.io/oss-fuzz/getting-started/bug-disclosure-guidelines/)\n+if a partial or delayed disclosure is important to protect users or the\n+function of the network.\n+\n+OSS-Fuzz also produces [a fuzzing coverage report](https://oss-fuzz.com/coverage-report/job/libfuzzer_asan_bitcoin-core/latest)."
      },
      {
        "sha": "399b819bf4141859b1b359fa689cd214ad56007b",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -53,11 +53,12 @@ Paths\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`\n-Configuration file:  `/etc/bitcoin/bitcoin.conf`\n-Data directory:      `/var/lib/bitcoind`\n-PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/run/bitcoind/bitcoind.pid` (systemd)\n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)\n+    Binary:              /usr/bin/bitcoind\n+    Configuration file:  /etc/bitcoin/bitcoin.conf\n+    Data directory:      /var/lib/bitcoind\n+    PID file:            /var/run/bitcoind/bitcoind.pid (OpenRC and Upstart) or\n+                         /run/bitcoind/bitcoind.pid (systemd)\n+    Lock file:           /var/lock/subsys/bitcoind (CentOS)\n \n The PID directory (if applicable) and data directory should both be owned by the\n bitcoin user and group. It is advised for security reasons to make the\n@@ -83,10 +84,10 @@ OpenRC).\n \n ### macOS\n \n-Binary:              `/usr/local/bin/bitcoind`\n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`\n-Data directory:      `~/Library/Application Support/Bitcoin`\n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+    Binary:              /usr/local/bin/bitcoind\n+    Configuration file:  ~/Library/Application Support/Bitcoin/bitcoin.conf\n+    Data directory:      ~/Library/Application Support/Bitcoin\n+    Lock file:           ~/Library/Application Support/Bitcoin/.lock\n \n Installing Service Configuration\n -----------------------------------"
      },
      {
        "sha": "e3f389a6d3f89481b33e0dd9f1f398f699f96339",
        "filename": "doc/multiprocess.md",
        "status": "modified",
        "additions": 39,
        "deletions": 2,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/multiprocess.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/multiprocess.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiprocess.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -15,7 +15,7 @@ Specific next steps after [#10102](https://github.com/bitcoin/bitcoin/pull/10102\n \n ## Debugging\n \n-After [#10102](https://github.com/bitcoin/bitcoin/pull/10102), the `-debug=ipc` command line option can be used to see requests and responses between processes.\n+The `-debug=ipc` command line option can be used to see requests and responses between processes.\n \n ## Installation\n \n@@ -24,7 +24,7 @@ The multiprocess feature requires [Cap'n Proto](https://capnproto.org/) and [lib\n ```\n cd <BITCOIN_SOURCE_DIRECTORY>\n make -C depends NO_QT=1 MULTIPROCESS=1\n-./configure --prefix=$PWD/depends/x86_64-pc-linux-gnu\n+CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure\n make\n src/bitcoin-node -regtest -printtoconsole -debug=ipc\n BITCOIND=bitcoin-node test/functional/test_runner.py\n@@ -33,3 +33,40 @@ BITCOIND=bitcoin-node test/functional/test_runner.py\n The configure script will pick up settings and library locations from the depends directory, so there is no need to pass `--enable-multiprocess` as a separate flag when using the depends system (it's controlled by the `MULTIPROCESS=1` option).\n \n Alternately, you can install [Cap'n Proto](https://capnproto.org/) and [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) packages on your system, and just run `./configure --enable-multiprocess` without using the depends system. The configure script will be able to locate the installed packages via [pkg-config](https://www.freedesktop.org/wiki/Software/pkg-config/). See [Installation](https://github.com/chaincodelabs/libmultiprocess#installation) section of the libmultiprocess readme for install steps. See [build-unix.md](build-unix.md) and [build-osx.md](build-osx.md) for information about installing dependencies in general.\n+\n+## IPC implementation details\n+\n+Cross process Node, Wallet, and Chain interfaces are defined in\n+[`src/interfaces/`](../src/interfaces/). These are C++ classes which follow\n+[conventions](developer-notes.md#internal-interface-guidelines), like passing\n+serializable arguments so they can be called from different processes, and\n+making methods pure virtual so they can have proxy implementations that forward\n+calls between processes.\n+\n+When Wallet, Node, and Chain code is running in the same process, calling any\n+interface method invokes the implementation directly. When code is running in\n+different processes, calling an interface method invokes a proxy interface\n+implementation that communicates with a remote process and invokes the real\n+implementation in the remote process. The\n+[libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) code\n+generation tool internally generates proxy client classes and proxy server\n+classes for this purpose that are thin wrappers around Cap'n Proto\n+[client](https://capnproto.org/cxxrpc.html#clients) and\n+[server](https://capnproto.org/cxxrpc.html#servers) classes, which handle the\n+actual serialization and socket communication.\n+\n+As much as possible, calls between processes are meant to work the same as\n+calls within a single process without adding limitations or requiring extra\n+implementation effort. Processes communicate with each other by calling regular\n+[C++ interface methods](../src/interfaces/README.md). Method arguments and\n+return values are automatically serialized and sent between processes. Object\n+references and `std::function` arguments are automatically tracked and mapped\n+to allow invoked code to call back into invoking code at any time, and there is\n+a 1:1 threading model where any thread invoking a method in another process has\n+a corresponding thread in the invoked process responsible for executing all\n+method calls from the source thread, without blocking I/O or holding up another\n+call, and using the same thread local variables, locks, and callbacks between\n+calls. The forwarding, tracking, and threading is implemented inside the\n+[libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) library\n+which has the design goal of making calls between processes look like calls in\n+the same process to the extent possible."
      },
      {
        "sha": "296b172bdeaf74a239c69dd39af4483f1ca4b040",
        "filename": "doc/reduce-memory.md",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/reduce-memory.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/reduce-memory.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-memory.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -24,9 +24,13 @@ The size of some in-memory caches can be reduced. As caches trade off memory usa\n \n ## Number of peers\n \n-- `-maxconnections=<n>` - the maximum number of connections, this defaults to 125. Each active connection takes up some\n-  memory. This option applies only if incoming connections are enabled, otherwise the number of connections will never\n-  be more than 10. Of the 10 outbound peers, there can be 8 full-relay connections and 2 block-relay-only ones.\n+- `-maxconnections=<n>` - the maximum number of connections, which defaults to 125. Each active connection takes up some\n+  memory. This option applies only if inbound connections are enabled; otherwise, the number of connections will not\n+  be more than 11. Of the 11 outbound peers, there can be 8 full-relay connections, 2 block-relay-only ones,\n+  and occasionally 1 short-lived feeler or extra outbound block-relay-only connection.\n+\n+- These limits do not apply to connections added manually with the `-addnode` configuration option or\n+  the `addnode` RPC, which have a separate limit of 8 connections.\n \n ## Thread configuration\n "
      },
      {
        "sha": "4034a4c19c02cbec167cc5378bd652da001781d8",
        "filename": "doc/release-notes-18077.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/doc/release-notes-18077.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/doc/release-notes-18077.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-18077.md?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,10 +0,0 @@\n-P2P and network changes\n------------------------\n-\n-- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n-\n-Command-line options\n---------------------\n-\n-- The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both UPnP\n-and NAT-PMP are enabled, a successful allocation from UPnP prevails over one from NAT-PMP."
      },
      {
        "sha": "5553c5a7bde7b78b23c8238e9bb0c0af2bad6212",
        "filename": "doc/release-notes-19776.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/doc/release-notes-19776.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/doc/release-notes-19776.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-19776.md?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,9 +0,0 @@\n-Updated RPCs\n-------------\n-\n-- The `getpeerinfo` RPC returns two new boolean fields, `bip152_hb_to` and\n-  `bip152_hb_from`, that respectively indicate whether we selected a peer to be\n-  in compact blocks high-bandwidth mode or whether a peer selected us as a\n-  compact blocks high-bandwidth peer. High-bandwidth peers send new block\n-  announcements via a `cmpctblock` message rather than the usual inv/headers\n-  announcements. See BIP 152 for more details. (#19776)"
      },
      {
        "sha": "dc28ccb9edd5feaa24ea1ff5d9671c0ca89f86f5",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 107,
        "deletions": 3,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,3 +1,5 @@\n+# Release notes now being edited on https://github.com/bitcoin-core/bitcoin-devwiki/wiki/22.0-Release-Notes-draft\n+\n *After branching off for a major version release of Bitcoin Core, use this\n template to create the initial release notes draft.*\n \n@@ -51,24 +53,88 @@ Core should also work on most other Unix-like systems but is not as\n frequently tested on them.  It is not recommended to use Bitcoin Core on\n unsupported systems.\n \n-From Bitcoin Core 0.22.0 onwards, macOS versions earlier than 10.14 are no\n-longer supported. Additionally, Bitcoin Core does not yet change appearance\n-when macOS \"dark mode\" is activated.\n+From Bitcoin Core 22.0 onwards, macOS versions earlier than 10.14 are no longer supported.\n \n Notable changes\n ===============\n \n P2P and network changes\n -----------------------\n \n+- This release removes support for Tor version 2 hidden services in favor of Tor\n+  v3 only, as the Tor network [dropped support for Tor\n+  v2](https://blog.torproject.org/v2-deprecation-timeline) with the release of\n+  Tor version 0.4.6.  Henceforth, Bitcoin Core ignores Tor v2 addresses; it\n+  neither rumors them over the network to other peers, nor stores them in memory\n+  or to `peers.dat`.  (#22050)\n+\n+- Added NAT-PMP port mapping support via\n+  [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html). (#18077)\n+\n Updated RPCs\n ------------\n+\n+- Due to [BIP 350](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki)\n+  being implemented, behavior for all RPCs that accept addresses is changed when\n+  a native witness version 1 (or higher) is passed. These now require a Bech32m\n+  encoding instead of a Bech32 one, and Bech32m encoding will be used for such\n+  addresses in RPC output as well. No version 1 addresses should be created\n+  for mainnet until consensus rules are adopted that give them meaning\n+  (e.g. through [BIP 341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)).\n+  Once that happens, Bech32m is expected to be used for them, so this shouldn't\n+  affect any production systems, but may be observed on other networks where such\n+  addresses already have meaning (like signet). (#20861)\n+\n+- The `getpeerinfo` RPC returns two new boolean fields, `bip152_hb_to` and\n+  `bip152_hb_from`, that respectively indicate whether we selected a peer to be\n+  in compact blocks high-bandwidth mode or whether a peer selected us as a\n+  compact blocks high-bandwidth peer. High-bandwidth peers send new block\n+  announcements via a `cmpctblock` message rather than the usual inv/headers\n+  announcements. See BIP 152 for more details. (#19776)\n+\n - `getpeerinfo` no longer returns the following fields: `addnode`, `banscore`,\n   and `whitelisted`, which were previously deprecated in 0.21. Instead of\n   `addnode`, the `connection_type` field returns manual. Instead of\n   `whitelisted`, the `permissions` field indicates if the peer has special\n   privileges. The `banscore` field has simply been removed. (#20755)\n \n+- The following RPCs:  `gettxout`, `getrawtransaction`, `decoderawtransaction`,\n+  `decodescript`, `gettransaction`, and REST endpoints: `/rest/tx`,\n+  `/rest/getutxos`, `/rest/block` deprecated the following fields (which are no\n+  longer returned in the responses by default): `addresses`, `reqSigs`.\n+  The `-deprecatedrpc=addresses` flag must be passed for these fields to be\n+  included in the RPC response. This flag/option will be available only for this major release, after which\n+  the deprecation will be removed entirely. Note that these fields are attributes of\n+  the `scriptPubKey` object returned in the RPC response. However, in the response\n+  of `decodescript` these fields are top-level attributes, and included again as attributes\n+  of the `scriptPubKey` object. (#20286)\n+\n+- When creating a hex-encoded bitcoin transaction using the `bitcoin-tx` utility\n+  with the `-json` option set, the following fields: `addresses`, `reqSigs` are no longer\n+  returned in the tx output of the response. (#20286)\n+\n+- The `listbanned` RPC now returns two new numeric fields: `ban_duration` and `time_remaining`.\n+  Respectively, these new fields indicate the duration of a ban and the time remaining until a ban expires,\n+  both in seconds. Additionally, the `ban_created` field is repositioned to come before `banned_until`. (#21602)\n+\n+- The `getnodeaddresses` RPC now returns a \"network\" field indicating the\n+  network type (ipv4, ipv6, onion, or i2p) for each address.  (#21594)\n+\n+- `getnodeaddresses` now also accepts a \"network\" argument (ipv4, ipv6, onion,\n+  or i2p) to return only addresses of the specified network.  (#21843)\n+\n+- The `testmempoolaccept` RPC now accepts multiple transactions (still experimental at the moment,\n+  API may be unstable). This is intended for testing transaction packages with dependency\n+  relationships; it is not recommended for batch-validating independent transactions. In addition to\n+  mempool policy, package policies apply: the list cannot contain more than 25 transactions or have a\n+  total size exceeding 101K virtual bytes, and cannot conflict with (spend the same inputs as) each other or\n+  the mempool, even if it would be a valid BIP125 replace-by-fee. There are some known limitations to\n+  the accuracy of the test accept: it's possible for `testmempoolaccept` to return \"allowed\"=True for a\n+  group of transactions, but \"too-long-mempool-chain\" if they are actually submitted. (#20833)\n+\n+- `addmultisigaddress` and `createmultisig` now support up to 20 keys for\n+  Segwit addresses. (#20867)\n+\n Changes to Wallet or GUI related RPCs can be found in the GUI or Wallet section below.\n \n New RPCs\n@@ -80,6 +146,10 @@ Build System\n New settings\n ------------\n \n+- The `-natpmp` option has been added to use NAT-PMP to map the listening port.\n+  If both UPnP and NAT-PMP are enabled, a successful allocation from UPnP\n+  prevails over one from NAT-PMP. (#18077)\n+\n Updated settings\n ----------------\n \n@@ -90,13 +160,34 @@ Changes to Wallet or GUI related settings can be found in the GUI or Wallet sect\n Tools and Utilities\n -------------------\n \n+- A new CLI `-addrinfo` command returns the number of addresses known to the\n+  node per network type (including Tor v2 versus v3) and total. This can be\n+  useful to see if the node knows enough addresses in a network to use options\n+  like `-onlynet=<network>` or to upgrade to this release of Bitcoin Core 22.0\n+  that supports Tor v3 only.  (#21595)\n+\n+- A new `-rpcwaittimeout` argument to `bitcoin-cli` sets the timeout\n+  in seconds to use with `-rpcwait`. If the timeout expires,\n+  `bitcoin-cli` will report a failure. (#21056)\n+\n Wallet\n ------\n \n - A new `listdescriptors` RPC is available to inspect the contents of descriptor-enabled wallets.\n   The RPC returns public versions of all imported descriptors, including their timestamp and flags.\n   For ranged descriptors, it also returns the range boundaries and the next index to generate addresses from. (#20226)\n \n+- The `bumpfee` RPC is not available with wallets that have private keys\n+  disabled. `psbtbumpfee` can be used instead. (#20891)\n+\n+- The `fundrawtransaction`, `send` and `walletcreatefundedpsbt` RPCs now support an `include_unsafe` option\n+  that when `true` allows using unsafe inputs to fund the transaction.\n+  Note that the resulting transaction may become invalid if one of the unsafe inputs disappears.\n+  If that happens, the transaction must be funded with different inputs and republished. (#21359)\n+\n+- We now support up to 20 keys in `multi()` and `sortedmulti()` descriptors\n+  under `wsh()`. (#20867)\n+\n GUI changes\n -----------\n \n@@ -106,6 +197,19 @@ Low-level changes\n RPC\n ---\n \n+- The RPC server can process a limited number of simultaneous RPC requests.\n+  Previously, if this limit was exceeded, the RPC server would respond with\n+  [status code 500 (`HTTP_INTERNAL_SERVER_ERROR`)](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_server_errors).\n+  Now it returns status code 503 (`HTTP_SERVICE_UNAVAILABLE`). (#18335)\n+\n+- Error codes have been updated to be more accurate for the following error cases (#18466):\n+  - `signmessage` now returns RPC_INVALID_ADDRESS_OR_KEY (-5) if the\n+    passed address is invalid. Previously returned RPC_TYPE_ERROR (-3).\n+  - `verifymessage` now returns RPC_INVALID_ADDRESS_OR_KEY (-5) if the\n+    passed address is invalid. Previously returned RPC_TYPE_ERROR (-3).\n+  - `verifymessage` now returns RPC_TYPE_ERROR (-3) if the passed signature\n+    is malformed. Previously returned RPC_INVALID_ADDRESS_OR_KEY (-5).\n+\n Tests\n -----\n "
      },
      {
        "sha": "d032fa8429263c4fd9ed5274808864230af4b9a2",
        "filename": "doc/release-notes/release-notes-0.21.1.md",
        "status": "added",
        "additions": 203,
        "deletions": 0,
        "changes": 203,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/release-notes/release-notes-0.21.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/release-notes/release-notes-0.21.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.21.1.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,203 @@\n+0.21.1 Release Notes\n+====================\n+\n+Bitcoin Core version 0.21.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.21.1/>\n+\n+This minor release includes various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n+longer supported. Additionally, Bitcoin Core does not yet change appearance\n+when macOS \"dark mode\" is activated.\n+\n+Notable changes\n+===============\n+\n+## Taproot Soft Fork\n+\n+Included in this release are the mainnet and testnet activation\n+parameters for the taproot soft fork (BIP341) which also adds support\n+for schnorr signatures (BIP340) and tapscript (BIP342).\n+\n+If activated, these improvements will allow users of single-signature\n+scripts, multisignature scripts, and complex contracts to all use\n+identical-appearing commitments that enhance their privacy and the\n+fungibility of all bitcoins. Spenders will enjoy lower fees and the\n+ability to resolve many multisig scripts and complex contracts with the\n+same efficiency, low fees, and large anonymity set as single-sig users.\n+Taproot and schnorr also include efficiency improvements for full nodes\n+such as the ability to batch signature verification.  Together, the\n+improvements lay the groundwork for future potential\n+upgrades that may improve efficiency, privacy, and fungibility further.\n+\n+Activation for taproot is being managed using a variation of BIP9\n+versionbits called Speedy Trial (described in BIP341). Taproot's\n+versionbit is bit 2, and nodes will begin tracking which blocks signal\n+support for taproot at the beginning of the first retarget period after\n+taproot\u2019s start date of 24 April 2021.  If 90% of blocks within a\n+2,016-block retarget period (about two weeks) signal support for taproot\n+prior to the first retarget period beginning after the time of 11 August\n+2021, the soft fork will be locked in, and taproot will then be active\n+as of block 709632 (expected in early or mid November).\n+\n+Should taproot not be locked in via Speedy Trial activation, it is\n+expected that a follow-up activation mechanism will be deployed, with\n+changes to address the reasons the Speedy Trial method failed.\n+\n+This release includes the ability to pay taproot addresses, although\n+payments to such addresses are not secure until taproot activates.\n+It also includes the ability to relay and mine taproot transactions\n+after activation.  Beyond those two basic capabilities, this release\n+does not include any code that allows anyone to directly use taproot.\n+The addition of taproot-related features to Bitcoin Core's wallet is\n+expected in later releases once taproot activation is assured.\n+\n+All users, businesses, and miners are encouraged to upgrade to this\n+release (or a subsequent compatible release) unless they object to\n+activation of taproot.  If taproot is locked in, then upgrading before\n+block 709632 is highly recommended to help enforce taproot's new rules\n+and to avoid the unlikely case of seeing falsely confirmed transactions.\n+\n+Miners who want to activate Taproot should preferably use this release\n+to control their signaling.  The `getblocktemplate` RPC results will\n+automatically be updated to signal once the appropriate start has been\n+reached and continue signaling until the timeout occurs or taproot\n+activates.  Alternatively, miners may manually start signaling on bit 2\n+at any time; if taproot activates, they will need to ensure they update\n+their nodes before block 709632 or non-upgraded nodes could cause them to mine on\n+an invalid chain.  See the [versionbits\n+FAQ](https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/) for\n+details.\n+\n+\n+For more information about taproot, please see the following resources:\n+\n+- Technical specifications\n+  - [BIP340 Schnorr signatures for secp256k1](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki) \n+  - [BIP341 Taproot: SegWit version 1 spending rules](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)\n+  - [BIP342 Validation of Taproot scripts](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki)\n+\n+- Popular articles;\n+  - [Taproot Is Coming: What It Is, and How It Will Benefit Bitcoin](https://bitcoinmagazine.com/technical/taproot-coming-what-it-and-how-it-will-benefit-bitcoin)\n+  - [What do Schnorr Signatures Mean for Bitcoin?](https://academy.binance.com/en/articles/what-do-schnorr-signatures-mean-for-bitcoin)\n+  - [The Schnorr Signature & Taproot Softfork Proposal](https://blog.bitmex.com/the-schnorr-signature-taproot-softfork-proposal/)\n+\n+- Development history overview\n+  - [Taproot](https://bitcoinops.org/en/topics/taproot/)\n+  - [Schnorr signatures](https://bitcoinops.org/en/topics/schnorr-signatures/)\n+  - [Tapscript](https://bitcoinops.org/en/topics/tapscript/)\n+  - [Soft fork activation](https://bitcoinops.org/en/topics/soft-fork-activation/)\n+\n+- Other\n+  - [Questions and answers related to taproot](https://bitcoin.stackexchange.com/questions/tagged/taproot)\n+  - [Taproot review](https://github.com/ajtowns/taproot-review)\n+\n+Updated RPCs\n+------------\n+\n+- Due to [BIP 350](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki)\n+  being implemented, behavior for all RPCs that accept addresses is changed when\n+  a native witness version 1 (or higher) is passed. These now require a Bech32m\n+  encoding instead of a Bech32 one, and Bech32m encoding will be used for such\n+  addresses in RPC output as well. No version 1 addresses should be created\n+  for mainnet until consensus rules are adopted that give them meaning\n+  (e.g. through [BIP 341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)).\n+  Once that happens, Bech32m is expected to be used for them, so this shouldn't\n+  affect any production systems, but may be observed on other networks where such\n+  addresses already have meaning (like signet).\n+\n+0.21.1 change log\n+=================\n+\n+### Consensus\n+- #21377 Speedy trial support for versionbits (ajtowns)\n+- #21686 Speedy trial activation parameters for Taproot (achow101)\n+\n+### P2P protocol and network code\n+- #20852 allow CSubNet of non-IP networks (vasild)\n+- #21043 Avoid UBSan warning in ProcessMessage(\u2026) (practicalswift)\n+\n+### Wallet\n+- #21166 Introduce DeferredSignatureChecker and have SignatureExtractorClass subclass it (achow101)\n+- #21083 Avoid requesting fee rates multiple times during coin selection (achow101)\n+\n+### RPC and other APIs\n+- #21201 Disallow sendtoaddress and sendmany when private keys disabled (achow101)\n+\n+### Build system\n+- #21486 link against -lsocket if required for `*ifaddrs` (fanquake)\n+- #20983 Fix MSVC build after gui#176 (hebasto)\n+\n+### Tests and QA\n+- #21380 Add fuzzing harness for versionbits (ajtowns)\n+- #20812 fuzz: Bump FuzzedDataProvider.h (MarcoFalke)\n+- #20740 fuzz: Update FuzzedDataProvider.h from upstream (LLVM) (practicalswift)\n+- #21446 Update vcpkg checkout commit (sipsorcery)\n+- #21397 fuzz: Bump FuzzedDataProvider.h (MarcoFalke)\n+- #21081 Fix the unreachable code at `feature_taproot` (brunoerg)\n+- #20562 Test that a fully signed tx given to signrawtx is unchanged (achow101)\n+- #21571 Make sure non-IP peers get discouraged and disconnected (vasild, MarcoFalke)\n+- #21489 fuzz: cleanups for versionbits fuzzer (ajtowns)\n+\n+### Miscellaneous\n+- #20861 BIP 350: Implement Bech32m and use it for v1+ segwit addresses (sipa)\n+\n+### Documentation\n+- #21384 add signet to bitcoin.conf documentation (jonatack)\n+- #21342 Remove outdated comment (hebasto)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Aaron Clauson\n+- Andrew Chow\n+- Anthony Towns\n+- Bruno Garcia\n+- Fabian Jahr\n+- fanquake\n+- Hennadii Stepanov\n+- Jon Atack\n+- Luke Dashjr\n+- MarcoFalke\n+- Pieter Wuille\n+- practicalswift\n+- randymcmillan\n+- Sjors Provoost\n+- Vasil Dimov\n+- W. J. van der Laan\n+\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "3ead1181b9ca5cf703c911ad6ba9b6b6125b5736",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -373,9 +373,7 @@ bitcoin.org (see below for bitcoin.org update instructions).\n \n   - Bitcoin Core announcements list https://bitcoincore.org/en/list/announcements/join/\n \n-  - Update title of #bitcoin on Freenode IRC\n-\n-  - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n+  - Bitcoin Core Twitter https://twitter.com/bitcoincoreorg\n \n   - Celebrate\n "
      },
      {
        "sha": "7d134b64e0e2a455976fd3306de76e1a4c13a73c",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 70,
        "deletions": 58,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -5,6 +5,14 @@ It is possible to run Bitcoin Core as a Tor onion service, and connect to such s\n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n+## Compatibility\n+\n+- Starting with version 22.0, Bitcoin Core only supports Tor version 3 hidden\n+  services (Tor v3). Tor v2 addresses are ignored by Bitcoin Core and neither\n+  relayed nor stored.\n+\n+- Tor removed v2 support beginning with version 0.4.6.\n+\n ## How to see information about your Tor configuration via Bitcoin Core\n \n There are several ways to see your local onion address in Bitcoin Core:\n@@ -15,45 +23,49 @@ There are several ways to see your local onion address in Bitcoin Core:\n You may set the `-debug=tor` config logging option to have additional\n information in the debug log about your Tor configuration.\n \n+CLI `-addrinfo` returns the number of addresses known to your node per network\n+type, including Tor v2 and v3. This is useful to see how many onion addresses\n+are known to your node for `-onlynet=onion` and how many Tor v3 addresses it\n+knows when upgrading to Bitcoin Core v22.0 and up that supports Tor v3 only.\n \n ## 1. Run Bitcoin Core behind a Tor proxy\n \n The first step is running Bitcoin Core behind a Tor proxy. This will already anonymize all\n outgoing connections, but more is possible.\n \n-\t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n-\t                server will be used to try to reach .onion addresses as well.\n-\t                You need to use -noonion or -onion=0 to explicitly disable\n-\t                outbound access to onion services.\n-\n-\t-onion=ip:port  Set the proxy server to use for Tor onion services. You do not\n-\t                need to set this if it's the same as -proxy. You can use -onion=0\n-\t                to explicitly disable access to onion services.\n-\t                Note: Only the -proxy option sets the proxy for DNS requests;\n-\t                with -onion they will not route over Tor, so use -proxy if you\n-\t                have privacy concerns.\n-\n-\t-listen         When using -proxy, listening is disabled by default. If you want\n-\t                to manually configure an onion service (see section 3), you'll\n-\t                need to enable it explicitly.\n-\n-\t-connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n-\t-addnode=X      of IP addresses or hostnames in these parameters. It requires\n-\t-seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n-\t                other P2P nodes.\n-\n-\t-onlynet=onion  Make outgoing connections only to .onion addresses. Incoming\n-\t                connections are not affected by this option. This option can be\n-\t                specified multiple times to allow multiple network types, e.g.\n-\t                ipv4, ipv6 or onion. If you use this option with values other\n-\t                than onion you *cannot* disable onion connections; outgoing onion\n-\t                connections will be enabled when you use -proxy or -onion. Use\n-\t                -noonion or -onion=0 if you want to be sure there are no outbound\n-\t                onion connections over the default proxy or your defined -proxy.\n+    -proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n+                    server will be used to try to reach .onion addresses as well.\n+                    You need to use -noonion or -onion=0 to explicitly disable\n+                    outbound access to onion services.\n+\n+    -onion=ip:port  Set the proxy server to use for Tor onion services. You do not\n+                    need to set this if it's the same as -proxy. You can use -onion=0\n+                    to explicitly disable access to onion services.\n+                    Note: Only the -proxy option sets the proxy for DNS requests;\n+                    with -onion they will not route over Tor, so use -proxy if you\n+                    have privacy concerns.\n+\n+    -listen         When using -proxy, listening is disabled by default. If you want\n+                    to manually configure an onion service (see section 3), you'll\n+                    need to enable it explicitly.\n+\n+    -connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n+    -addnode=X      of IP addresses or hostnames in these parameters. It requires\n+    -seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n+                    other P2P nodes.\n+\n+    -onlynet=onion  Make outgoing connections only to .onion addresses. Incoming\n+                    connections are not affected by this option. This option can be\n+                    specified multiple times to allow multiple network types, e.g.\n+                    ipv4, ipv6 or onion. If you use this option with values other\n+                    than onion you *cannot* disable onion connections; outgoing onion\n+                    connections will be enabled when you use -proxy or -onion. Use\n+                    -noonion or -onion=0 if you want to be sure there are no outbound\n+                    onion connections over the default proxy or your defined -proxy.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./bitcoind -proxy=127.0.0.1:9050\n+    ./bitcoind -proxy=127.0.0.1:9050\n \n ## 2. Automatically create a Bitcoin Core onion service\n \n@@ -152,57 +164,57 @@ details).\n You can also manually configure your node to be reachable from the Tor network.\n Add these lines to your `/etc/tor/torrc` (or equivalent config file):\n \n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n-\tHiddenServicePort 8333 127.0.0.1:8334\n+    HiddenServiceDir /var/lib/tor/bitcoin-service/\n+    HiddenServicePort 8333 127.0.0.1:8334\n \n The directory can be different of course, but virtual port numbers should be equal to\n your bitcoind's P2P listen port (8333 by default), and target addresses and ports\n should be equal to binding address and port for inbound Tor connections (127.0.0.1:8334 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable addresses using\n-\t                this option, and this can be an onion address. Given the above\n-\t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. For connections\n-\t                coming from unroutable addresses (such as 127.0.0.1, where the\n-\t                Tor proxy typically runs), onion addresses are given\n-\t                preference for your node to advertise itself with.\n-\n-\t                You can set multiple local addresses with -externalip. The\n-\t                one that will be rumoured to a particular peer is the most\n-\t                compatible one and also using heuristics, e.g. the address\n-\t                with the most incoming connections, etc.\n-\n-\t-listen         You'll need to enable listening for incoming connections, as this\n-\t                is off by default behind a proxy.\n-\n-\t-discover       When -externalip is specified, no attempt is made to discover local\n-\t                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n-\t                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n-\t                other addresses using -externalip, or explicitly enable -discover.\n-\t                Note that both addresses of a dual-stack system may be easily\n-\t                linkable using traffic analysis.\n+    -externalip=X   You can tell bitcoin about its publicly reachable addresses using\n+                    this option, and this can be an onion address. Given the above\n+                    configuration, you can find your onion address in\n+                    /var/lib/tor/bitcoin-service/hostname. For connections\n+                    coming from unroutable addresses (such as 127.0.0.1, where the\n+                    Tor proxy typically runs), onion addresses are given\n+                    preference for your node to advertise itself with.\n+\n+                    You can set multiple local addresses with -externalip. The\n+                    one that will be rumoured to a particular peer is the most\n+                    compatible one and also using heuristics, e.g. the address\n+                    with the most incoming connections, etc.\n+\n+    -listen         You'll need to enable listening for incoming connections, as this\n+                    is off by default behind a proxy.\n+\n+    -discover       When -externalip is specified, no attempt is made to discover local\n+                    IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n+                    from both Tor and IPv4 (or IPv6), you'll need to either pass your\n+                    other addresses using -externalip, or explicitly enable -discover.\n+                    Note that both addresses of a dual-stack system may be easily\n+                    linkable using traffic analysis.\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -listen\n+    ./bitcoind -proxy=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -listen\n \n (obviously, replace the .onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n your address. To mitigate this, additionally bind the address of your Tor proxy:\n \n-\t./bitcoind ... -bind=127.0.0.1\n+    ./bitcoind ... -bind=127.0.0.1\n \n If you don't care too much about hiding your node, and want to be reachable on IPv4\n as well, use `discover` instead:\n \n-\t./bitcoind ... -discover\n+    ./bitcoind ... -discover\n \n and open port 8333 on your firewall (or use port mapping, i.e., `-upnp` or `-natpmp`).\n \n If you only want to use Tor to reach .onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoind -onion=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -discover\n+    ./bitcoind -onion=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -discover\n \n ## 4. Privacy recommendations\n "
      },
      {
        "sha": "f1326932648cff2517f91a5c76e8dd694e4a78c7",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -22,8 +22,6 @@ cd src/\n make translate\n ```\n \n-`contrib/bitcoin-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n-\n **Example Qt translation**\n ```cpp\n QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n@@ -104,6 +102,5 @@ To create a new language template, you will need to edit the languages manifest\n **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.\n \n ### Questions and general assistance\n-The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-core-dev`.\n \n If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/bitcoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates."
      },
      {
        "sha": "4a947001fa2d9a27d2abae7c8f06d13eeb1db988",
        "filename": "share/examples/bitcoin.conf",
        "status": "modified",
        "additions": 26,
        "deletions": 6,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/examples/bitcoin.conf?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,13 +4,16 @@\n \n # Network-related settings:\n \n-# Note that if you use testnet or regtest, particularly with the options\n+# Note that if you use testnet, signet or regtest, particularly with the options\n # addnode, connect, port, bind, rpcport, rpcbind or wallet, you will also\n # want to read \"[Sections]\" further down.\n \n-# Run on the test network instead of the real bitcoin network.\n+# Run on the testnet network\n #testnet=0\n \n+# Run on a signet network\n+#signet=0\n+\n # Run a regression test network\n #regtest=0\n \n@@ -57,12 +60,23 @@\n # Listening mode, enabled by default except when 'connect' is being used\n #listen=1\n \n-# Port on which to listen for connections (default: 8333, testnet: 18333, regtest: 18444)\n+# Port on which to listen for connections (default: 8333, testnet: 18333, signet: 38333, regtest: 18444)\n #port=\n \n-# Maximum number of inbound+outbound connections.\n+# Maximum number of inbound + outbound connections (default: 125). This option\n+# applies only if inbound connections are enabled; otherwise, the number of connections\n+# will not be more than 11: 8 full-relay connections, 2 block-relay-only ones, and\n+# occasionally 1 short-lived feeler or extra outbound block-relay-only connection.\n+# These limits do not apply to connections added manually with the -addnode\n+# configuration option or the addnode RPC, which have a separate limit of 8 connections.\n #maxconnections=\n \n+# Maximum upload bandwidth target in MiB per day (e.g. 'maxuploadtarget=1024' is 1 GiB per day).\n+# This limits the upload bandwidth for those with bandwidth limits. 0 = no limit (default: 0).\n+# -maxuploadtarget does not apply to peers with 'download' permission.\n+# For more information on reducing bandwidth utilization, see: doc/reduce-traffic.md.\n+#maxuploadtarget=\n+\n #\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n #\n@@ -139,8 +153,11 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n+# Maintain coinstats index used by the gettxoutsetinfo RPC (default: 0).\n+#coinstatsindex=1\n+\n # Enable pruning to reduce storage requirements by deleting old blocks.\n-# This mode is incompatible with -txindex and -rescan.\n+# This mode is incompatible with -txindex, -coinstatsindex and -rescan.\n # 0 = default (no pruning).\n # 1 = allows manual pruning via RPC.\n # >=550 = target to stay under in MiB.\n@@ -155,7 +172,7 @@\n #minimizetotray=1\n \n # [Sections]\n-# Most options apply to mainnet, testnet and regtest.\n+# Most options apply to mainnet, testnet, signet and regtest.\n # If you want to confine an option to just one network, you should add it in the\n # relevant section below.\n # EXCEPTIONS: The options addnode, connect, port, bind, rpcport, rpcbind and wallet\n@@ -167,5 +184,8 @@\n # Options only for testnet\n [test]\n \n+# Options only for signet\n+[signet]\n+\n # Options only for regtest\n [regtest]"
      },
      {
        "sha": "da10dbb3be1b28aef0b129cc336a8199838ae670",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -60,9 +60,6 @@\n   <key>NSHighResolutionCapable</key>\n     <string>True</string>\n \n-  <key>NSRequiresAquaSystemAppearance</key>\n-    <string>True</string>\n-\n   <key>LSApplicationCategoryType</key>\n     <string>public.app-category.finance</string>\n </dict>"
      },
      {
        "sha": "e4d438fdb0075a14a796c6520b545e5dc2829a45",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -58,7 +58,7 @@ def parse_po(text):\n     print('Cannot extract strings: xgettext utility is not installed or not configured.',file=sys.stderr)\n     print('Please install package \"gettext\" and re-run \\'./configure\\'.',file=sys.stderr)\n     sys.exit(1)\n-child = Popen([XGETTEXT,'--output=-','-n','--keyword=_'] + files, stdout=PIPE)\n+child = Popen([XGETTEXT,'--output=-','--from-code=utf-8','-n','--keyword=_'] + files, stdout=PIPE)\n (out, err) = child.communicate()\n \n messages = parse_po(out.decode('utf-8'))"
      },
      {
        "sha": "85ae7c57af26b96b5fcb6927081f2decfb20ddf3",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -3,6 +3,7 @@ Name \"@PACKAGE_NAME@ (64-bit)\"\n RequestExecutionLevel highest\n SetCompressor /SOLID lzma\n SetDateSave off\n+Unicode true\n \n # Uncomment these lines when investigating reproducibility errors\n #SetCompress off"
      },
      {
        "sha": "a69c57f3e0dea633ae856190f732de0a66dc5f66",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -11,7 +11,8 @@ AllowShortIfStatementsOnASingleLine: true\n AllowShortLoopsOnASingleLine: false\n AlwaysBreakBeforeMultilineStrings: false\n AlwaysBreakTemplateDeclarations: true\n-BinPackParameters: false\n+BinPackArguments: true\n+BinPackParameters: true\n BreakBeforeBinaryOperators: false\n BreakBeforeBraces: Custom\n BraceWrapping:"
      },
      {
        "sha": "e2ed70556d9eb40b002e00226cb86c79ad39c024",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 87,
        "deletions": 12,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,7 +4,7 @@\n \n # Pattern rule to print variables, e.g. make print-top_srcdir\n print-%:\n-\t@echo $* = $($*)\n+\t@echo '$*'='$($*)'\n \n DIST_SUBDIRS = secp256k1 univalue\n \n@@ -74,6 +74,7 @@ EXTRA_LIBRARIES += \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_CLI) \\\n+  $(LIBBITCOIN_IPC) \\\n   $(LIBBITCOIN_WALLET) \\\n   $(LIBBITCOIN_WALLET_TOOL) \\\n   $(LIBBITCOIN_ZMQ)\n@@ -144,18 +145,25 @@ BITCOIN_CORE_H = \\\n   core_memusage.h \\\n   cuckoocache.h \\\n   dbwrapper.h \\\n+  external_signer.h \\\n   flatfile.h \\\n   fs.h \\\n   httprpc.h \\\n   httpserver.h \\\n+  i2p.h \\\n   index/base.h \\\n   index/blockfilterindex.h \\\n+  index/coinstatsindex.h \\\n   index/disktxpos.h \\\n   index/txindex.h \\\n   indirectmap.h \\\n   init.h \\\n+  init/common.h \\\n   interfaces/chain.h \\\n+  interfaces/echo.h \\\n   interfaces/handler.h \\\n+  interfaces/init.h \\\n+  interfaces/ipc.h \\\n   interfaces/node.h \\\n   interfaces/wallet.h \\\n   key.h \\\n@@ -173,6 +181,7 @@ BITCOIN_CORE_H = \\\n   netaddress.h \\\n   netbase.h \\\n   netmessagemaker.h \\\n+  node/blockstorage.h \\\n   node/coin.h \\\n   node/coinstats.h \\\n   node/context.h \\\n@@ -181,10 +190,10 @@ BITCOIN_CORE_H = \\\n   node/ui_interface.h \\\n   node/utxo_snapshot.h \\\n   noui.h \\\n-  optional.h \\\n   outputtype.h \\\n   policy/feerate.h \\\n   policy/fees.h \\\n+  policy/packages.h \\\n   policy/policy.h \\\n   policy/rbf.h \\\n   policy/settings.h \\\n@@ -197,6 +206,7 @@ BITCOIN_CORE_H = \\\n   rpc/blockchain.h \\\n   rpc/client.h \\\n   rpc/mining.h \\\n+  rpc/net.h \\\n   rpc/protocol.h \\\n   rpc/rawtransaction_util.h \\\n   rpc/register.h \\\n@@ -224,29 +234,36 @@ BITCOIN_CORE_H = \\\n   timedata.h \\\n   torcontrol.h \\\n   txdb.h \\\n-  txrequest.h \\\n   txmempool.h \\\n+  txorphanage.h \\\n+  txrequest.h \\\n   undo.h \\\n   util/asmap.h \\\n   util/bip32.h \\\n   util/bytevectorhash.h \\\n   util/check.h \\\n+  util/epochguard.h \\\n   util/error.h \\\n   util/fees.h \\\n+  util/getuniquepath.h \\\n   util/golombrice.h \\\n+  util/hash_type.h \\\n   util/hasher.h \\\n   util/macros.h \\\n-  util/memory.h \\\n   util/message.h \\\n   util/moneystr.h \\\n   util/rbf.h \\\n-  util/ref.h \\\n+  util/readwritefile.h \\\n+  util/serfloat.h \\\n   util/settings.h \\\n+  util/sock.h \\\n   util/spanparsing.h \\\n   util/string.h \\\n   util/system.h \\\n+  util/thread.h \\\n   util/threadnames.h \\\n   util/time.h \\\n+  util/tokenpipe.h \\\n   util/trace.h \\\n   util/translation.h \\\n   util/ui_change_type.h \\\n@@ -263,14 +280,18 @@ BITCOIN_CORE_H = \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n   wallet/dump.h \\\n+  wallet/external_signer_scriptpubkeyman.h \\\n   wallet/feebumper.h \\\n   wallet/fees.h \\\n   wallet/ismine.h \\\n   wallet/load.h \\\n+  wallet/receive.h \\\n   wallet/rpcwallet.h \\\n   wallet/salvage.h \\\n   wallet/scriptpubkeyman.h \\\n+  wallet/spend.h \\\n   wallet/sqlite.h \\\n+  wallet/transaction.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n   wallet/wallettool.h \\\n@@ -290,11 +311,13 @@ obj/build.h: FORCE\n \t  \"$(abs_top_srcdir)\"\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n+ipc/capnp/libbitcoin_ipc_a-ipc.$(OBJEXT): $(libbitcoin_ipc_mpgen_input:=.h)\n+\n # server: shared between bitcoind and bitcoin-qt\n # Contains code accessing mempool and chain state that is meant to be separated\n # from wallet and gui code (see node/README.md). Shared code should go in\n # libbitcoin_common or libbitcoin_util libraries, instead.\n-libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_server_a_SOURCES = \\\n   addrdb.cpp \\\n@@ -308,14 +331,17 @@ libbitcoin_server_a_SOURCES = \\\n   flatfile.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n+  i2p.cpp \\\n   index/base.cpp \\\n   index/blockfilterindex.cpp \\\n+  index/coinstatsindex.cpp \\\n   index/txindex.cpp \\\n   init.cpp \\\n   mapport.cpp \\\n   miner.cpp \\\n   net.cpp \\\n   net_processing.cpp \\\n+  node/blockstorage.cpp \\\n   node/coin.cpp \\\n   node/coinstats.cpp \\\n   node/context.cpp \\\n@@ -325,6 +351,7 @@ libbitcoin_server_a_SOURCES = \\\n   node/ui_interface.cpp \\\n   noui.cpp \\\n   policy/fees.cpp \\\n+  policy/packages.cpp \\\n   policy/rbf.cpp \\\n   policy/settings.cpp \\\n   pow.cpp \\\n@@ -341,8 +368,9 @@ libbitcoin_server_a_SOURCES = \\\n   timedata.cpp \\\n   torcontrol.cpp \\\n   txdb.cpp \\\n-  txrequest.cpp \\\n   txmempool.cpp \\\n+  txorphanage.cpp \\\n+  txrequest.cpp \\\n   validation.cpp \\\n   validationinterface.cpp \\\n   versionbits.cpp \\\n@@ -377,13 +405,17 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/dump.cpp \\\n+  wallet/external_signer_scriptpubkeyman.cpp \\\n   wallet/feebumper.cpp \\\n   wallet/fees.cpp \\\n   wallet/interfaces.cpp \\\n   wallet/load.cpp \\\n+  wallet/receive.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/scriptpubkeyman.cpp \\\n+  wallet/spend.cpp \\\n+  wallet/transaction.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   wallet/walletutil.cpp \\\n@@ -508,6 +540,8 @@ libbitcoin_common_a_SOURCES = \\\n   compressor.cpp \\\n   core_read.cpp \\\n   core_write.cpp \\\n+  external_signer.cpp \\\n+  init/common.cpp \\\n   key.cpp \\\n   key_io.cpp \\\n   merkleblock.cpp \\\n@@ -520,6 +554,7 @@ libbitcoin_common_a_SOURCES = \\\n   protocol.cpp \\\n   psbt.cpp \\\n   rpc/rawtransaction_util.cpp \\\n+  rpc/external_signer.cpp \\\n   rpc/util.cpp \\\n   scheduler.cpp \\\n   script/descriptor.cpp \\\n@@ -539,11 +574,12 @@ libbitcoin_util_a_SOURCES = \\\n   support/lockedpool.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n-  compat/glibc_sanity.cpp \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n   fs.cpp \\\n+  interfaces/echo.cpp \\\n   interfaces/handler.cpp \\\n+  interfaces/init.cpp \\\n   logging.cpp \\\n   random.cpp \\\n   randomenv.cpp \\\n@@ -556,17 +592,23 @@ libbitcoin_util_a_SOURCES = \\\n   util/bytevectorhash.cpp \\\n   util/error.cpp \\\n   util/fees.cpp \\\n+  util/getuniquepath.cpp \\\n   util/hasher.cpp \\\n+  util/sock.cpp \\\n   util/system.cpp \\\n   util/message.cpp \\\n   util/moneystr.cpp \\\n   util/rbf.cpp \\\n+  util/readwritefile.cpp \\\n   util/settings.cpp \\\n+  util/thread.cpp \\\n   util/threadnames.cpp \\\n+  util/serfloat.cpp \\\n   util/spanparsing.cpp \\\n   util/strencodings.cpp \\\n   util/string.cpp \\\n   util/time.cpp \\\n+  util/tokenpipe.cpp \\\n   $(BITCOIN_CORE_H)\n \n if USE_LIBEVENT\n@@ -615,17 +657,17 @@ bitcoin_bin_ldadd = \\\n \n bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n \n-bitcoind_SOURCES = $(bitcoin_daemon_sources)\n+bitcoind_SOURCES = $(bitcoin_daemon_sources) init/bitcoind.cpp\n bitcoind_CPPFLAGS = $(bitcoin_bin_cppflags)\n bitcoind_CXXFLAGS = $(bitcoin_bin_cxxflags)\n bitcoind_LDFLAGS = $(bitcoin_bin_ldflags)\n bitcoind_LDADD = $(LIBBITCOIN_SERVER) $(bitcoin_bin_ldadd)\n \n-bitcoin_node_SOURCES = $(bitcoin_daemon_sources)\n+bitcoin_node_SOURCES = $(bitcoin_daemon_sources) init/bitcoin-node.cpp\n bitcoin_node_CPPFLAGS = $(bitcoin_bin_cppflags)\n bitcoin_node_CXXFLAGS = $(bitcoin_bin_cxxflags)\n bitcoin_node_LDFLAGS = $(bitcoin_bin_ldflags)\n-bitcoin_node_LDADD = $(LIBBITCOIN_SERVER) $(bitcoin_bin_ldadd)\n+bitcoin_node_LDADD = $(LIBBITCOIN_SERVER) $(bitcoin_bin_ldadd) $(LIBBITCOIN_IPC) $(LIBMULTIPROCESS_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n@@ -683,7 +725,7 @@ endif\n bitcoin_util_SOURCES = bitcoin-util.cpp\n bitcoin_util_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n bitcoin_util_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_util_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bitcoin_util_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n if TARGET_WINDOWS\n bitcoin_util_SOURCES += bitcoin-util-res.rc\n@@ -789,6 +831,39 @@ if HARDEN\n \t$(AM_V_at) OBJDUMP=$(OBJDUMP) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)\n endif\n \n+libbitcoin_ipc_mpgen_input = \\\n+  ipc/capnp/echo.capnp \\\n+  ipc/capnp/init.capnp\n+EXTRA_DIST += $(libbitcoin_ipc_mpgen_input)\n+%.capnp:\n+\n+if BUILD_MULTIPROCESS\n+LIBBITCOIN_IPC=libbitcoin_ipc.a\n+libbitcoin_ipc_a_SOURCES = \\\n+  ipc/capnp/init-types.h \\\n+  ipc/capnp/protocol.cpp \\\n+  ipc/capnp/protocol.h \\\n+  ipc/exception.h \\\n+  ipc/interfaces.cpp \\\n+  ipc/process.cpp \\\n+  ipc/process.h \\\n+  ipc/protocol.h\n+libbitcoin_ipc_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_ipc_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(LIBMULTIPROCESS_CFLAGS)\n+\n+include $(MPGEN_PREFIX)/include/mpgen.mk\n+libbitcoin_ipc_mpgen_output = \\\n+  $(libbitcoin_ipc_mpgen_input:=.c++) \\\n+  $(libbitcoin_ipc_mpgen_input:=.h) \\\n+  $(libbitcoin_ipc_mpgen_input:=.proxy-client.c++) \\\n+  $(libbitcoin_ipc_mpgen_input:=.proxy-server.c++) \\\n+  $(libbitcoin_ipc_mpgen_input:=.proxy-types.c++) \\\n+  $(libbitcoin_ipc_mpgen_input:=.proxy-types.h) \\\n+  $(libbitcoin_ipc_mpgen_input:=.proxy.h)\n+nodist_libbitcoin_ipc_a_SOURCES = $(libbitcoin_ipc_mpgen_output)\n+CLEANFILES += $(libbitcoin_ipc_mpgen_output)\n+endif\n+\n if EMBEDDED_LEVELDB\n include Makefile.crc32c.include\n include Makefile.leveldb.include"
      },
      {
        "sha": "a1821cafe3512e575bcd5084fef0dc27b02c37ab",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 31,
        "deletions": 12,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -61,6 +61,7 @@ QT_MOC_CPP = \\\n   qt/moc_optionsmodel.cpp \\\n   qt/moc_overviewpage.cpp \\\n   qt/moc_peertablemodel.cpp \\\n+  qt/moc_peertablesortproxy.cpp \\\n   qt/moc_paymentserver.cpp \\\n   qt/moc_psbtoperationsdialog.cpp \\\n   qt/moc_qrimagewidget.cpp \\\n@@ -134,6 +135,7 @@ BITCOIN_QT_H = \\\n   qt/overviewpage.h \\\n   qt/paymentserver.h \\\n   qt/peertablemodel.h \\\n+  qt/peertablesortproxy.h \\\n   qt/platformstyle.h \\\n   qt/psbtoperationsdialog.h \\\n   qt/qrimagewidget.h \\\n@@ -164,6 +166,9 @@ BITCOIN_QT_H = \\\n   qt/walletview.h \\\n   qt/winshutdownmonitor.h\n \n+RES_FONTS = \\\n+  qt/res/fonts/RobotoMono-Bold.ttf\n+\n RES_ICONS = \\\n   qt/res/icons/add.png \\\n   qt/res/icons/address-book.png \\\n@@ -229,6 +234,7 @@ BITCOIN_QT_BASE_CPP = \\\n   qt/optionsdialog.cpp \\\n   qt/optionsmodel.cpp \\\n   qt/peertablemodel.cpp \\\n+  qt/peertablesortproxy.cpp \\\n   qt/platformstyle.cpp \\\n   qt/qvalidatedlineedit.cpp \\\n   qt/qvaluecombobox.cpp \\\n@@ -282,15 +288,15 @@ RES_ANIMATION = $(wildcard $(srcdir)/qt/res/animation/spinner-*.png)\n \n BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n \n-BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS\n+BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS -DQT_USE_QSTRINGBUILDER\n \n qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)\n qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n qt_libbitcoinqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n-  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_ANIMATION)\n+  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_FONTS) $(RES_ICONS) $(RES_ANIMATION)\n if TARGET_DARWIN\n   qt_libbitcoinqt_a_SOURCES += $(BITCOIN_MM)\n endif\n@@ -352,19 +358,19 @@ $(srcdir)/qt/bitcoinstrings.cpp: FORCE\n \n translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/bitcoin_en.ts\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) -no-obsolete -I $(srcdir) -locations relative $^ -ts $(srcdir)/qt/locale/bitcoin_en.ts\n+\t@test -n $(LCONVERT) || echo \"lconvert is required for updating translations\"\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LCONVERT) -o $(srcdir)/qt/locale/bitcoin_en.xlf -i $(srcdir)/qt/locale/bitcoin_en.ts\n \n $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n \t@test -f $(RCC)\n \t@cp -f $< $(@D)/temp_$(<F)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/temp_$(<F) | \\\n-\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale --format-version 1 $(@D)/temp_$(<F) > $@\n \t@rm $(@D)/temp_$(<F)\n \n-$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_ANIMATION)\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_FONTS) $(RES_ICONS) $(RES_ANIMATION)\n \t@test -f $(RCC)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n-\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin --format-version 1 $< > $@\n \n CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_bitcoin_locale.qrc\n \n@@ -375,18 +381,31 @@ bitcoin_qt_clean: FORCE\n \n bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n \n+APK_LIB_DIR = qt/android/libs/$(ANDROID_ARCH)\n+QT_BASE_VERSION = $(lastword $(shell $(MOC) --version))\n+QT_BASE_PATH = $(shell find ../depends/sources/ -maxdepth 1 -type f -regex \".*qtbase.*$(QT_BASE_VERSION)\\.tar.xz\")\n+QT_BASE_TLD = $(shell tar tf $(QT_BASE_PATH) --exclude='*/*')\n+\n+bitcoin_qt_apk: FORCE\n+\tmkdir -p $(APK_LIB_DIR)\n+\tcp $(dir $(CC))../sysroot/usr/lib/$(host_alias)/libc++_shared.so $(APK_LIB_DIR)\n+\ttar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/jar/src --strip-components=5\n+\ttar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/java/src --strip-components=5\n+\ttar xf $(QT_BASE_PATH) -C qt/android/res/ $(QT_BASE_TLD)src/android/java/res --strip-components=5\n+\tcp qt/bitcoin-qt $(APK_LIB_DIR)/libbitcoin-qt.so\n+\tcd qt/android && gradle wrapper --gradle-version=6.6.1\n+\tcd qt/android && ./gradlew build\n+\n ui_%.h: %.ui\n \t@test -f $(UIC)\n \t@$(MKDIR_P) $(@D)\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo \"Error creating $@\"; false)\n \n %.moc: %.cpp\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< | \\\n-\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< > $@\n \n moc_%.cpp: %.h\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< | \\\n-\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< > $@\n \n %.qm: %.ts\n \t@test -f $(LRELEASE)"
      },
      {
        "sha": "91a5e9fd9b440a59d6983ff6328ec01397e3d2b8",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,7 +7,6 @@ TESTS += qt/test/test_bitcoin-qt\n \n TEST_QT_MOC_CPP = \\\n   qt/test/moc_apptests.cpp \\\n-  qt/test/moc_compattests.cpp \\\n   qt/test/moc_rpcnestedtests.cpp \\\n   qt/test/moc_uritests.cpp\n \n@@ -20,7 +19,6 @@ endif # ENABLE_WALLET\n TEST_QT_H = \\\n   qt/test/addressbooktests.h \\\n   qt/test/apptests.h \\\n-  qt/test/compattests.h \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n   qt/test/util.h \\\n@@ -31,7 +29,6 @@ qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_\n \n qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/apptests.cpp \\\n-  qt/test/compattests.cpp \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\"
      },
      {
        "sha": "fc2fd801660325d9a12787c5882bc460d1732479",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 39,
        "deletions": 16,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -2,9 +2,11 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-if ENABLE_FUZZ\n+if ENABLE_FUZZ_BINARY\n noinst_PROGRAMS += test/fuzz/fuzz\n-else\n+endif\n+\n+if !ENABLE_FUZZ\n bin_PROGRAMS += test/test_bitcoin\n endif\n \n@@ -33,11 +35,12 @@ BITCOIN_TEST_SUITE = \\\n   $(TEST_UTIL_H)\n \n FUZZ_SUITE_LD_COMMON = \\\n+ $(LIBTEST_UTIL) \\\n+ $(LIBTEST_FUZZ) \\\n  $(LIBBITCOIN_SERVER) \\\n+ $(LIBBITCOIN_WALLET) \\\n  $(LIBBITCOIN_COMMON) \\\n  $(LIBBITCOIN_UTIL) \\\n- $(LIBTEST_UTIL) \\\n- $(LIBTEST_FUZZ) \\\n  $(LIBBITCOIN_CONSENSUS) \\\n  $(LIBBITCOIN_CRYPTO) \\\n  $(LIBBITCOIN_CLI) \\\n@@ -50,6 +53,14 @@ FUZZ_SUITE_LD_COMMON = \\\n  $(EVENT_LIBS) \\\n  $(EVENT_PTHREADS_LIBS)\n \n+if USE_UPNP\n+FUZZ_SUITE_LD_COMMON += $(MINIUPNPC_LIBS)\n+endif\n+\n+if USE_NATPMP\n+FUZZ_SUITE_LD_COMMON += $(NATPMP_LIBS)\n+endif\n+\n # test_bitcoin binary #\n BITCOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n@@ -70,6 +81,7 @@ BITCOIN_TESTS =\\\n   test/bswap_tests.cpp \\\n   test/checkqueue_tests.cpp \\\n   test/coins_tests.cpp \\\n+  test/coinstatsindex_tests.cpp \\\n   test/compilerbug_tests.cpp \\\n   test/compress_tests.cpp \\\n   test/crypto_tests.cpp \\\n@@ -80,6 +92,7 @@ BITCOIN_TESTS =\\\n   test/fs_tests.cpp \\\n   test/getarg_tests.cpp \\\n   test/hash_tests.cpp \\\n+  test/i2p_tests.cpp \\\n   test/interfaces_tests.cpp \\\n   test/key_io_tests.cpp \\\n   test/key_tests.cpp \\\n@@ -91,6 +104,7 @@ BITCOIN_TESTS =\\\n   test/merkleblock_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n+  test/net_peer_eviction_tests.cpp \\\n   test/net_tests.cpp \\\n   test/netbase_tests.cpp \\\n   test/pmt_tests.cpp \\\n@@ -100,7 +114,6 @@ BITCOIN_TESTS =\\\n   test/prevector_tests.cpp \\\n   test/raii_event_tests.cpp \\\n   test/random_tests.cpp \\\n-  test/ref_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n@@ -109,11 +122,13 @@ BITCOIN_TESTS =\\\n   test/script_tests.cpp \\\n   test/script_standard_tests.cpp \\\n   test/scriptnum_tests.cpp \\\n+  test/serfloat_tests.cpp \\\n   test/serialize_tests.cpp \\\n   test/settings_tests.cpp \\\n   test/sighash_tests.cpp \\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n+  test/sock_tests.cpp \\\n   test/streams_tests.cpp \\\n   test/sync_tests.cpp \\\n   test/system_tests.cpp \\\n@@ -145,10 +160,15 @@ BITCOIN_TESTS += \\\n   wallet/test/ismine_tests.cpp \\\n   wallet/test/scriptpubkeyman_tests.cpp\n \n+FUZZ_SUITE_LD_COMMON +=\\\n+ $(SQLITE_LIBS) \\\n+ $(BDB_LIBS)\n+\n if USE_BDB\n BITCOIN_TESTS += wallet/test/db_tests.cpp\n endif\n \n+\n BITCOIN_TEST_SUITE += \\\n   wallet/test/wallet_test_fixture.cpp \\\n   wallet/test/wallet_test_fixture.h \\\n@@ -172,12 +192,12 @@ test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(\n \n if ENABLE_ZMQ\n test_test_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+FUZZ_SUITE_LD_COMMON += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n-if ENABLE_FUZZ\n-\n FUZZ_SUITE_LDFLAGS_COMMON = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n+if ENABLE_FUZZ_BINARY\n test_fuzz_fuzz_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_fuzz_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_fuzz_LDADD = $(FUZZ_SUITE_LD_COMMON)\n@@ -222,6 +242,7 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/golomb_rice.cpp \\\n  test/fuzz/hex.cpp \\\n  test/fuzz/http_request.cpp \\\n+ test/fuzz/i2p.cpp \\\n  test/fuzz/integer.cpp \\\n  test/fuzz/key.cpp \\\n  test/fuzz/key_io.cpp \\\n@@ -235,8 +256,9 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/net.cpp \\\n  test/fuzz/net_permissions.cpp \\\n  test/fuzz/netaddress.cpp \\\n+ test/fuzz/netbase_dns_lookup.cpp \\\n  test/fuzz/node_eviction.cpp \\\n- test/fuzz/p2p_transport_deserializer.cpp \\\n+ test/fuzz/p2p_transport_serialization.cpp \\\n  test/fuzz/parse_hd_keypath.cpp \\\n  test/fuzz/parse_iso8601.cpp \\\n  test/fuzz/parse_numbers.cpp \\\n@@ -254,6 +276,7 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/random.cpp \\\n  test/fuzz/rbf.cpp \\\n  test/fuzz/rolling_bloom_filter.cpp \\\n+ test/fuzz/rpc.cpp \\\n  test/fuzz/script.cpp \\\n  test/fuzz/script_assets_test_minimizer.cpp \\\n  test/fuzz/script_bitcoin_consensus.cpp \\\n@@ -268,18 +291,23 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp \\\n  test/fuzz/signature_checker.cpp \\\n  test/fuzz/signet.cpp \\\n+ test/fuzz/socks5.cpp \\\n  test/fuzz/span.cpp \\\n  test/fuzz/spanparsing.cpp \\\n  test/fuzz/string.cpp \\\n  test/fuzz/strprintf.cpp \\\n  test/fuzz/system.cpp \\\n  test/fuzz/timedata.cpp \\\n+ test/fuzz/torcontrol.cpp \\\n  test/fuzz/transaction.cpp \\\n  test/fuzz/tx_in.cpp \\\n  test/fuzz/tx_out.cpp \\\n- test/fuzz/txrequest.cpp\n-\n-endif # ENABLE_FUZZ\n+ test/fuzz/tx_pool.cpp \\\n+ test/fuzz/txrequest.cpp \\\n+ test/fuzz/utxo_snapshot.cpp \\\n+ test/fuzz/validation_load_mempool.cpp \\\n+ test/fuzz/versionbits.cpp\n+endif # ENABLE_FUZZ_BINARY\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n \n@@ -324,11 +352,6 @@ if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check\n endif\n \n-if ENABLE_FUZZ_LINK_ALL\n-all-local: $(FUZZ_BINARY)\n-\tbash ./test/fuzz/danger_link_all.sh\n-endif\n-\n %.cpp.test: %.cpp\n \t@echo Running tests: `cat $< | grep -E \"(BOOST_FIXTURE_TEST_SUITE\\\\(|BOOST_AUTO_TEST_SUITE\\\\()\" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1` from $<\n \t$(AM_V_at)$(TEST_BINARY) --catch_system_errors=no -l test_suite -t \"`cat $< | grep -E \"(BOOST_FIXTURE_TEST_SUITE\\\\(|BOOST_AUTO_TEST_SUITE\\\\()\" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1`\" -- DEBUG_LOG_OUT > $<.log 2>&1 || (cat $<.log && false)"
      },
      {
        "sha": "2d772f2fca1676a2a1a4a7a7db6b594063e4bea8",
        "filename": "src/Makefile.test_fuzz.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.test_fuzz.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.test_fuzz.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_fuzz.include?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,7 +12,7 @@ TEST_FUZZ_H = \\\n     test/fuzz/FuzzedDataProvider.h \\\n     test/fuzz/util.h\n \n-libtest_fuzz_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libtest_fuzz_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libtest_fuzz_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libtest_fuzz_a_SOURCES = \\\n   test/fuzz/fuzz.cpp \\"
      },
      {
        "sha": "85e50ebf7058bfb9ed8084f371df1ca8ea25e29d",
        "filename": "src/Makefile.test_util.include",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,19 +12,21 @@ TEST_UTIL_H = \\\n     test/util/logging.h \\\n     test/util/mining.h \\\n     test/util/net.h \\\n+    test/util/script.h \\\n     test/util/setup_common.h \\\n     test/util/str.h \\\n     test/util/transaction_utils.h \\\n     test/util/validation.h \\\n     test/util/wallet.h\n \n-libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libtest_util_a_SOURCES = \\\n   test/util/blockfilter.cpp \\\n   test/util/logging.cpp \\\n   test/util/mining.cpp \\\n   test/util/net.cpp \\\n+  test/util/script.cpp \\\n   test/util/setup_common.cpp \\\n   test/util/str.cpp \\\n   test/util/transaction_utils.cpp \\"
      },
      {
        "sha": "bf2f6c7614ef9a11ec794ea3e5ff245a7ca221c8",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -23,7 +23,7 @@ bool SerializeDB(Stream& stream, const Data& data)\n {\n     // Write and commit header, data\n     try {\n-        CHashWriter hasher(SER_DISK, CLIENT_VERSION);\n+        CHashWriter hasher(stream.GetType(), stream.GetVersion());\n         stream << Params().MessageStart() << data;\n         hasher << Params().MessageStart() << data;\n         stream << hasher.GetHash();\n@@ -35,17 +35,17 @@ bool SerializeDB(Stream& stream, const Data& data)\n }\n \n template <typename Data>\n-bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data& data)\n+bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data& data, int version)\n {\n     // Generate random temporary filename\n     uint16_t randv = 0;\n     GetRandBytes((unsigned char*)&randv, sizeof(randv));\n     std::string tmpfn = strprintf(\"%s.%04x\", prefix, randv);\n \n     // open temp output file, and associate with CAutoFile\n-    fs::path pathTmp = GetDataDir() / tmpfn;\n+    fs::path pathTmp = gArgs.GetDataDirNet() / tmpfn;\n     FILE *file = fsbridge::fopen(pathTmp, \"wb\");\n-    CAutoFile fileout(file, SER_DISK, CLIENT_VERSION);\n+    CAutoFile fileout(file, SER_DISK, version);\n     if (fileout.IsNull()) {\n         fileout.fclose();\n         remove(pathTmp);\n@@ -106,46 +106,46 @@ bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data)\n+bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n {\n     // open input file, and associate with CAutoFile\n-    FILE *file = fsbridge::fopen(path, \"rb\");\n-    CAutoFile filein(file, SER_DISK, CLIENT_VERSION);\n-    if (filein.IsNull())\n-        return error(\"%s: Failed to open file %s\", __func__, path.string());\n-\n+    FILE* file = fsbridge::fopen(path, \"rb\");\n+    CAutoFile filein(file, SER_DISK, version);\n+    if (filein.IsNull()) {\n+        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        return false;\n+    }\n     return DeserializeDB(filein, data);\n }\n-\n-}\n+} // namespace\n \n CBanDB::CBanDB(fs::path ban_list_path) : m_ban_list_path(std::move(ban_list_path))\n {\n }\n \n bool CBanDB::Write(const banmap_t& banSet)\n {\n-    return SerializeFileDB(\"banlist\", m_ban_list_path, banSet);\n+    return SerializeFileDB(\"banlist\", m_ban_list_path, banSet, CLIENT_VERSION);\n }\n \n bool CBanDB::Read(banmap_t& banSet)\n {\n-    return DeserializeFileDB(m_ban_list_path, banSet);\n+    return DeserializeFileDB(m_ban_list_path, banSet, CLIENT_VERSION);\n }\n \n CAddrDB::CAddrDB()\n {\n-    pathAddr = GetDataDir() / \"peers.dat\";\n+    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n }\n \n bool CAddrDB::Write(const CAddrMan& addr)\n {\n-    return SerializeFileDB(\"peers\", pathAddr, addr);\n+    return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n bool CAddrDB::Read(CAddrMan& addr)\n {\n-    return DeserializeFileDB(pathAddr, addr);\n+    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n }\n \n bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, CLIENT_VERSION | ADDRV2_FORMAT);\n }\n \n std::vector<CAddress> ReadAnchors(const fs::path& anchors_db_path)\n {\n     std::vector<CAddress> anchors;\n-    if (DeserializeFileDB(anchors_db_path, anchors)) {\n+    if (DeserializeFileDB(anchors_db_path, anchors, CLIENT_VERSION | ADDRV2_FORMAT)) {\n         LogPrintf(\"Loaded %i addresses from %s\\n\", anchors.size(), anchors_db_path.filename());\n     } else {\n         anchors.clear();"
      },
      {
        "sha": "8f702b5a8c06e464ec86eef5c9257ea63e780606",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 10,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,9 +7,13 @@\n \n #include <hash.h>\n #include <logging.h>\n+#include <netaddress.h>\n #include <serialize.h>\n \n #include <cmath>\n+#include <optional>\n+#include <unordered_map>\n+#include <unordered_set>\n \n int CAddrInfo::GetTriedBucket(const uint256& nKey, const std::vector<bool> &asmap) const\n {\n@@ -34,7 +38,7 @@ int CAddrInfo::GetNewBucket(const uint256& nKey, const CNetAddr& src, const std:\n \n int CAddrInfo::GetBucketPosition(const uint256 &nKey, bool fNew, int nBucket) const\n {\n-    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << (fNew ? 'N' : 'K') << nBucket << GetKey()).GetCheapHash();\n+    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << (fNew ? uint8_t{'N'} : uint8_t{'K'}) << nBucket << GetKey()).GetCheapHash();\n     return hash1 % ADDRMAN_BUCKET_SIZE;\n }\n \n@@ -75,19 +79,23 @@ double CAddrInfo::GetChance(int64_t nNow) const\n \n CAddrInfo* CAddrMan::Find(const CNetAddr& addr, int* pnId)\n {\n-    std::map<CNetAddr, int>::iterator it = mapAddr.find(addr);\n+    AssertLockHeld(cs);\n+\n+    const auto it = mapAddr.find(addr);\n     if (it == mapAddr.end())\n         return nullptr;\n     if (pnId)\n         *pnId = (*it).second;\n-    std::map<int, CAddrInfo>::iterator it2 = mapInfo.find((*it).second);\n+    const auto it2 = mapInfo.find((*it).second);\n     if (it2 != mapInfo.end())\n         return &(*it2).second;\n     return nullptr;\n }\n \n CAddrInfo* CAddrMan::Create(const CAddress& addr, const CNetAddr& addrSource, int* pnId)\n {\n+    AssertLockHeld(cs);\n+\n     int nId = nIdCount++;\n     mapInfo[nId] = CAddrInfo(addr, addrSource);\n     mapAddr[addr] = nId;\n@@ -100,6 +108,8 @@ CAddrInfo* CAddrMan::Create(const CAddress& addr, const CNetAddr& addrSource, in\n \n void CAddrMan::SwapRandom(unsigned int nRndPos1, unsigned int nRndPos2)\n {\n+    AssertLockHeld(cs);\n+\n     if (nRndPos1 == nRndPos2)\n         return;\n \n@@ -120,6 +130,8 @@ void CAddrMan::SwapRandom(unsigned int nRndPos1, unsigned int nRndPos2)\n \n void CAddrMan::Delete(int nId)\n {\n+    AssertLockHeld(cs);\n+\n     assert(mapInfo.count(nId) != 0);\n     CAddrInfo& info = mapInfo[nId];\n     assert(!info.fInTried);\n@@ -134,6 +146,8 @@ void CAddrMan::Delete(int nId)\n \n void CAddrMan::ClearNew(int nUBucket, int nUBucketPos)\n {\n+    AssertLockHeld(cs);\n+\n     // if there is an entry in the specified bucket, delete it.\n     if (vvNew[nUBucket][nUBucketPos] != -1) {\n         int nIdDelete = vvNew[nUBucket][nUBucketPos];\n@@ -149,6 +163,8 @@ void CAddrMan::ClearNew(int nUBucket, int nUBucketPos)\n \n void CAddrMan::MakeTried(CAddrInfo& info, int nId)\n {\n+    AssertLockHeld(cs);\n+\n     // remove the entry from all new buckets\n     for (int bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; bucket++) {\n         int pos = info.GetBucketPosition(nKey, true, bucket);\n@@ -197,6 +213,8 @@ void CAddrMan::MakeTried(CAddrInfo& info, int nId)\n \n void CAddrMan::Good_(const CService& addr, bool test_before_evict, int64_t nTime)\n {\n+    AssertLockHeld(cs);\n+\n     int nId;\n \n     nLastGood = nTime;\n@@ -263,6 +281,8 @@ void CAddrMan::Good_(const CService& addr, bool test_before_evict, int64_t nTime\n \n bool CAddrMan::Add_(const CAddress& addr, const CNetAddr& source, int64_t nTimePenalty)\n {\n+    AssertLockHeld(cs);\n+\n     if (!addr.IsRoutable())\n         return false;\n \n@@ -336,6 +356,8 @@ bool CAddrMan::Add_(const CAddress& addr, const CNetAddr& source, int64_t nTimeP\n \n void CAddrMan::Attempt_(const CService& addr, bool fCountFailure, int64_t nTime)\n {\n+    AssertLockHeld(cs);\n+\n     CAddrInfo* pinfo = Find(addr);\n \n     // if not found, bail out\n@@ -358,7 +380,9 @@ void CAddrMan::Attempt_(const CService& addr, bool fCountFailure, int64_t nTime)\n \n CAddrInfo CAddrMan::Select_(bool newOnly)\n {\n-    if (size() == 0)\n+    AssertLockHeld(cs);\n+\n+    if (vRandom.empty())\n         return CAddrInfo();\n \n     if (newOnly && nNew == 0)\n@@ -406,8 +430,10 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n #ifdef DEBUG_ADDRMAN\n int CAddrMan::Check_()\n {\n-    std::set<int> setTried;\n-    std::map<int, int> mapNew;\n+    AssertLockHeld(cs);\n+\n+    std::unordered_set<int> setTried;\n+    std::unordered_map<int, int> mapNew;\n \n     if (vRandom.size() != (size_t)(nTried + nNew))\n         return -7;\n@@ -481,8 +507,10 @@ int CAddrMan::Check_()\n }\n #endif\n \n-void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size_t max_pct)\n+void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network)\n {\n+    AssertLockHeld(cs);\n+\n     size_t nNodes = vRandom.size();\n     if (max_pct != 0) {\n         nNodes = max_pct * nNodes / 100;\n@@ -492,6 +520,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size\n     }\n \n     // gather a list of random nodes, skipping those of low quality\n+    const int64_t now{GetAdjustedTime()};\n     for (unsigned int n = 0; n < vRandom.size(); n++) {\n         if (vAddr.size() >= nNodes)\n             break;\n@@ -501,13 +530,21 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size\n         assert(mapInfo.count(vRandom[n]) == 1);\n \n         const CAddrInfo& ai = mapInfo[vRandom[n]];\n-        if (!ai.IsTerrible())\n-            vAddr.push_back(ai);\n+\n+        // Filter by network (optional)\n+        if (network != std::nullopt && ai.GetNetClass() != network) continue;\n+\n+        // Filter for quality\n+        if (ai.IsTerrible(now)) continue;\n+\n+        vAddr.push_back(ai);\n     }\n }\n \n void CAddrMan::Connected_(const CService& addr, int64_t nTime)\n {\n+    AssertLockHeld(cs);\n+\n     CAddrInfo* pinfo = Find(addr);\n \n     // if not found, bail out\n@@ -528,6 +565,8 @@ void CAddrMan::Connected_(const CService& addr, int64_t nTime)\n \n void CAddrMan::SetServices_(const CService& addr, ServiceFlags nServices)\n {\n+    AssertLockHeld(cs);\n+\n     CAddrInfo* pinfo = Find(addr);\n \n     // if not found, bail out\n@@ -546,6 +585,8 @@ void CAddrMan::SetServices_(const CService& addr, ServiceFlags nServices)\n \n void CAddrMan::ResolveCollisions_()\n {\n+    AssertLockHeld(cs);\n+\n     for (std::set<int>::iterator it = m_tried_collisions.begin(); it != m_tried_collisions.end();) {\n         int id_new = *it;\n \n@@ -605,6 +646,8 @@ void CAddrMan::ResolveCollisions_()\n \n CAddrInfo CAddrMan::SelectTriedCollision_()\n {\n+    AssertLockHeld(cs);\n+\n     if (m_tried_collisions.size() == 0) return CAddrInfo();\n \n     std::set<int>::iterator it = m_tried_collisions.begin();\n@@ -643,7 +686,7 @@ std::vector<bool> CAddrMan::DecodeAsmap(fs::path path)\n     int length = ftell(filestr);\n     LogPrintf(\"Opened asmap file %s (%d bytes) from disk\\n\", path, length);\n     fseek(filestr, 0, SEEK_SET);\n-    char cur_byte;\n+    uint8_t cur_byte;\n     for (int i = 0; i < length; ++i) {\n         file >> cur_byte;\n         for (int bit = 0; bit < 8; ++bit) {"
      },
      {
        "sha": "665e253192617550852c27ae6e7edb1138a3c345",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 242,
        "deletions": 210,
        "changes": 452,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,21 +8,22 @@\n \n #include <clientversion.h>\n #include <config/bitcoin-config.h>\n+#include <fs.h>\n+#include <hash.h>\n #include <netaddress.h>\n #include <protocol.h>\n #include <random.h>\n+#include <streams.h>\n #include <sync.h>\n #include <timedata.h>\n #include <tinyformat.h>\n #include <util/system.h>\n \n-#include <fs.h>\n-#include <hash.h>\n #include <iostream>\n-#include <map>\n+#include <optional>\n #include <set>\n #include <stdint.h>\n-#include <streams.h>\n+#include <unordered_map>\n #include <vector>\n \n /**\n@@ -171,132 +172,6 @@ static const int64_t ADDRMAN_TEST_WINDOW = 40*60; // 40 minutes\n  */\n class CAddrMan\n {\n-friend class CAddrManTest;\n-protected:\n-    //! critical section to protect the inner data structures\n-    mutable RecursiveMutex cs;\n-\n-private:\n-    //! Serialization versions.\n-    enum Format : uint8_t {\n-        V0_HISTORICAL = 0,    //!< historic format, before commit e6b343d88\n-        V1_DETERMINISTIC = 1, //!< for pre-asmap files\n-        V2_ASMAP = 2,         //!< for files including asmap version\n-        V3_BIP155 = 3,        //!< same as V2_ASMAP plus addresses are in BIP155 format\n-    };\n-\n-    //! The maximum format this software knows it can unserialize. Also, we always serialize\n-    //! in this format.\n-    //! The format (first byte in the serialized stream) can be higher than this and\n-    //! still this software may be able to unserialize the file - if the second byte\n-    //! (see `lowest_compatible` in `Unserialize()`) is less or equal to this.\n-    static constexpr Format FILE_FORMAT = Format::V3_BIP155;\n-\n-    //! The initial value of a field that is incremented every time an incompatible format\n-    //! change is made (such that old software versions would not be able to parse and\n-    //! understand the new file format). This is 32 because we overtook the \"key size\"\n-    //! field which was 32 historically.\n-    //! @note Don't increment this. Increment `lowest_compatible` in `Serialize()` instead.\n-    static constexpr uint8_t INCOMPATIBILITY_BASE = 32;\n-\n-    //! last used nId\n-    int nIdCount GUARDED_BY(cs);\n-\n-    //! table with information about all nIds\n-    std::map<int, CAddrInfo> mapInfo GUARDED_BY(cs);\n-\n-    //! find an nId based on its network address\n-    std::map<CNetAddr, int> mapAddr GUARDED_BY(cs);\n-\n-    //! randomly-ordered vector of all nIds\n-    std::vector<int> vRandom GUARDED_BY(cs);\n-\n-    // number of \"tried\" entries\n-    int nTried GUARDED_BY(cs);\n-\n-    //! list of \"tried\" buckets\n-    int vvTried[ADDRMAN_TRIED_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE] GUARDED_BY(cs);\n-\n-    //! number of (unique) \"new\" entries\n-    int nNew GUARDED_BY(cs);\n-\n-    //! list of \"new\" buckets\n-    int vvNew[ADDRMAN_NEW_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE] GUARDED_BY(cs);\n-\n-    //! last time Good was called (memory only)\n-    int64_t nLastGood GUARDED_BY(cs);\n-\n-    //! Holds addrs inserted into tried table that collide with existing entries. Test-before-evict discipline used to resolve these collisions.\n-    std::set<int> m_tried_collisions;\n-\n-protected:\n-    //! secret key to randomize bucket select with\n-    uint256 nKey;\n-\n-    //! Source of random numbers for randomization in inner loops\n-    FastRandomContext insecure_rand;\n-\n-    //! Find an entry.\n-    CAddrInfo* Find(const CNetAddr& addr, int *pnId = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! find an entry, creating it if necessary.\n-    //! nTime and nServices of the found node are updated, if necessary.\n-    CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Swap two elements in vRandom.\n-    void SwapRandom(unsigned int nRandomPos1, unsigned int nRandomPos2) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Move an entry from the \"new\" table(s) to the \"tried\" table\n-    void MakeTried(CAddrInfo& info, int nId) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Delete an entry. It must not be in tried, and have refcount 0.\n-    void Delete(int nId) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Clear a position in a \"new\" table. This is the only place where entries are actually deleted.\n-    void ClearNew(int nUBucket, int nUBucketPos) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Mark an entry \"good\", possibly moving it from \"new\" to \"tried\".\n-    void Good_(const CService &addr, bool test_before_evict, int64_t time) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Add an entry to the \"new\" table.\n-    bool Add_(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Mark an entry as attempted to connect.\n-    void Attempt_(const CService &addr, bool fCountFailure, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n-    CAddrInfo Select_(bool newOnly) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! See if any to-be-evicted tried table entries have been tested and if so resolve the collisions.\n-    void ResolveCollisions_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Return a random to-be-evicted tried table address.\n-    CAddrInfo SelectTriedCollision_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-#ifdef DEBUG_ADDRMAN\n-    //! Perform consistency check. Returns an error code or zero.\n-    int Check_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n-#endif\n-\n-    //! Select several addresses at once.\n-    void GetAddr_(std::vector<CAddress> &vAddr, size_t max_addresses, size_t max_pct) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    /** We have successfully connected to this peer. Calling this function\n-     *  updates the CAddress's nTime, which is used in our IsTerrible()\n-     *  decisions and gossiped to peers. Callers should be careful that updating\n-     *  this information doesn't leak topology information to network spies.\n-     *\n-     *  net_processing calls this function when it *disconnects* from a peer to\n-     *  not leak information about currently connected peers.\n-     *\n-     * @param[in]   addr     The address of the peer we were connected to\n-     * @param[in]   nTime    The time that we were last connected to this peer\n-     */\n-    void Connected_(const CService& addr, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n-    //! Update an entry's service bits.\n-    void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n public:\n     // Compressed IP->ASN mapping, loaded from a file when a node starts.\n     // Should be always empty if no file was provided.\n@@ -317,7 +192,6 @@ friend class CAddrManTest;\n     // Read asmap from provided binary file\n     static std::vector<bool> DecodeAsmap(fs::path path);\n \n-\n     /**\n      * Serialized format.\n      * * format version byte (@see `Format`)\n@@ -335,22 +209,20 @@ friend class CAddrManTest;\n      * * nNew\n      * * nTried\n      * * number of \"new\" buckets XOR 2**30\n-     * * all nNew addrinfos in vvNew\n-     * * all nTried addrinfos in vvTried\n-     * * for each bucket:\n+     * * all new addresses (total count: nNew)\n+     * * all tried addresses (total count: nTried)\n+     * * for each new bucket:\n      *   * number of elements\n-     *   * for each element: index\n+     *   * for each element: index in the serialized \"all new addresses\"\n+     * * asmap checksum\n      *\n      * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\n      * as incompatible. This is necessary because it did not check the version number on\n      * deserialization.\n      *\n-     * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n+     * vvNew, vvTried, mapInfo, mapAddr and vRandom are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n-     *\n      * This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\n      * changes to the ADDRMAN_ parameters without breaking the on-disk structure.\n      *\n@@ -359,6 +231,7 @@ friend class CAddrManTest;\n      */\n     template <typename Stream>\n     void Serialize(Stream& s_) const\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n \n@@ -379,7 +252,7 @@ friend class CAddrManTest;\n \n         int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n         s << nUBuckets;\n-        std::map<int, int> mapUnkIds;\n+        std::unordered_map<int, int> mapUnkIds;\n         int nIds = 0;\n         for (const auto& entry : mapInfo) {\n             mapUnkIds[entry.first] = nIds;\n@@ -413,21 +286,22 @@ friend class CAddrManTest;\n                 }\n             }\n         }\n-        // Store asmap version after bucket entries so that it\n+        // Store asmap checksum after bucket entries so that it\n         // can be ignored by older clients for backward compatibility.\n-        uint256 asmap_version;\n+        uint256 asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            asmap_version = SerializeHash(m_asmap);\n+            asmap_checksum = SerializeHash(m_asmap);\n         }\n-        s << asmap_version;\n+        s << asmap_checksum;\n     }\n \n     template <typename Stream>\n     void Unserialize(Stream& s_)\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n \n-        Clear();\n+        assert(vRandom.empty());\n \n         Format format;\n         s_ >> Using<CustomUintFormatter<1>>(format);\n@@ -500,60 +374,76 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        if (!restore_bucketing) {\n+            LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");\n+        }\n+\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n-                vvNew[bucket][nUBucketPos] = n;\n-                info.nRefCount++;\n+                vvNew[bucket][bucket_position] = entry_index;\n+                ++info.nRefCount;\n             } else {\n-                // In case the new table data cannot be used (format unknown, bucket count wrong or new asmap),\n+                // In case the new table data cannot be used (bucket count wrong or new asmap),\n                 // try to give them a reference based on their primary source address.\n-                LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");\n                 bucket = info.GetNewBucket(nKey, m_asmap);\n-                nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-                if (vvNew[bucket][nUBucketPos] == -1) {\n-                    vvNew[bucket][nUBucketPos] = n;\n-                    info.nRefCount++;\n+                bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+                if (vvNew[bucket][bucket_position] == -1) {\n+                    vvNew[bucket][bucket_position] = entry_index;\n+                    ++info.nRefCount;\n                 }\n             }\n         }\n \n         // Prune new entries with refcount 0 (as a result of collisions).\n         int nLostUnk = 0;\n-        for (std::map<int, CAddrInfo>::const_iterator it = mapInfo.begin(); it != mapInfo.end(); ) {\n+        for (auto it = mapInfo.cbegin(); it != mapInfo.cend(); ) {\n             if (it->second.fInTried == false && it->second.nRefCount == 0) {\n-                std::map<int, CAddrInfo>::const_iterator itCopy = it++;\n+                const auto itCopy = it++;\n                 Delete(itCopy->first);\n-                nLostUnk++;\n+                ++nLostUnk;\n             } else {\n-                it++;\n+                ++it;\n             }\n         }\n         if (nLost + nLostUnk > 0) {\n@@ -564,6 +454,7 @@ friend class CAddrManTest;\n     }\n \n     void Clear()\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         std::vector<int>().swap(vRandom);\n@@ -599,26 +490,15 @@ friend class CAddrManTest;\n \n     //! Return the number of (unique) addresses in all tables.\n     size_t size() const\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs); // TODO: Cache this in an atomic to avoid this overhead\n         return vRandom.size();\n     }\n \n-    //! Consistency check\n-    void Check()\n-    {\n-#ifdef DEBUG_ADDRMAN\n-        {\n-            LOCK(cs);\n-            int err;\n-            if ((err=Check_()))\n-                LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n-        }\n-#endif\n-    }\n-\n     //! Add a single address.\n     bool Add(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty = 0)\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         bool fRet = false;\n@@ -633,6 +513,7 @@ friend class CAddrManTest;\n \n     //! Add multiple addresses.\n     bool Add(const std::vector<CAddress> &vAddr, const CNetAddr& source, int64_t nTimePenalty = 0)\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         int nAdd = 0;\n@@ -648,6 +529,7 @@ friend class CAddrManTest;\n \n     //! Mark an entry as accessible.\n     void Good(const CService &addr, bool test_before_evict = true, int64_t nTime = GetAdjustedTime())\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         Check();\n@@ -657,6 +539,7 @@ friend class CAddrManTest;\n \n     //! Mark an entry as connection attempted to.\n     void Attempt(const CService &addr, bool fCountFailure, int64_t nTime = GetAdjustedTime())\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         Check();\n@@ -666,6 +549,7 @@ friend class CAddrManTest;\n \n     //! See if any to-be-evicted tried table entries have been tested and if so resolve the collisions.\n     void ResolveCollisions()\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         Check();\n@@ -675,47 +559,49 @@ friend class CAddrManTest;\n \n     //! Randomly select an address in tried that another address is attempting to evict.\n     CAddrInfo SelectTriedCollision()\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n-        CAddrInfo ret;\n-        {\n-            LOCK(cs);\n-            Check();\n-            ret = SelectTriedCollision_();\n-            Check();\n-        }\n+        LOCK(cs);\n+        Check();\n+        const CAddrInfo ret = SelectTriedCollision_();\n+        Check();\n         return ret;\n     }\n \n     /**\n      * Choose an address to connect to.\n      */\n     CAddrInfo Select(bool newOnly = false)\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n-        CAddrInfo addrRet;\n-        {\n-            LOCK(cs);\n-            Check();\n-            addrRet = Select_(newOnly);\n-            Check();\n-        }\n+        LOCK(cs);\n+        Check();\n+        const CAddrInfo addrRet = Select_(newOnly);\n+        Check();\n         return addrRet;\n     }\n \n-    //! Return a bunch of addresses, selected at random.\n-    std::vector<CAddress> GetAddr(size_t max_addresses, size_t max_pct)\n+    /**\n+     * Return all or many randomly selected addresses, optionally by network.\n+     *\n+     * @param[in] max_addresses  Maximum number of addresses to return (0 = all).\n+     * @param[in] max_pct        Maximum percentage of addresses to return (0 = all).\n+     * @param[in] network        Select only addresses of this network (nullopt = all).\n+     */\n+    std::vector<CAddress> GetAddr(size_t max_addresses, size_t max_pct, std::optional<Network> network)\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n+        LOCK(cs);\n         Check();\n         std::vector<CAddress> vAddr;\n-        {\n-            LOCK(cs);\n-            GetAddr_(vAddr, max_addresses, max_pct);\n-        }\n+        GetAddr_(vAddr, max_addresses, max_pct, network);\n         Check();\n         return vAddr;\n     }\n \n     //! Outer function for Connected_()\n     void Connected(const CService &addr, int64_t nTime = GetAdjustedTime())\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         Check();\n@@ -724,13 +610,159 @@ friend class CAddrManTest;\n     }\n \n     void SetServices(const CService &addr, ServiceFlags nServices)\n+        EXCLUSIVE_LOCKS_REQUIRED(!cs)\n     {\n         LOCK(cs);\n         Check();\n         SetServices_(addr, nServices);\n         Check();\n     }\n \n+protected:\n+    //! secret key to randomize bucket select with\n+    uint256 nKey;\n+\n+    //! Source of random numbers for randomization in inner loops\n+    FastRandomContext insecure_rand;\n+\n+private:\n+    //! A mutex to protect the inner data structures.\n+    mutable Mutex cs;\n+\n+    //! Serialization versions.\n+    enum Format : uint8_t {\n+        V0_HISTORICAL = 0,    //!< historic format, before commit e6b343d88\n+        V1_DETERMINISTIC = 1, //!< for pre-asmap files\n+        V2_ASMAP = 2,         //!< for files including asmap version\n+        V3_BIP155 = 3,        //!< same as V2_ASMAP plus addresses are in BIP155 format\n+    };\n+\n+    //! The maximum format this software knows it can unserialize. Also, we always serialize\n+    //! in this format.\n+    //! The format (first byte in the serialized stream) can be higher than this and\n+    //! still this software may be able to unserialize the file - if the second byte\n+    //! (see `lowest_compatible` in `Unserialize()`) is less or equal to this.\n+    static constexpr Format FILE_FORMAT = Format::V3_BIP155;\n+\n+    //! The initial value of a field that is incremented every time an incompatible format\n+    //! change is made (such that old software versions would not be able to parse and\n+    //! understand the new file format). This is 32 because we overtook the \"key size\"\n+    //! field which was 32 historically.\n+    //! @note Don't increment this. Increment `lowest_compatible` in `Serialize()` instead.\n+    static constexpr uint8_t INCOMPATIBILITY_BASE = 32;\n+\n+    //! last used nId\n+    int nIdCount GUARDED_BY(cs);\n+\n+    //! table with information about all nIds\n+    std::unordered_map<int, CAddrInfo> mapInfo GUARDED_BY(cs);\n+\n+    //! find an nId based on its network address\n+    std::unordered_map<CNetAddr, int, CNetAddrHash> mapAddr GUARDED_BY(cs);\n+\n+    //! randomly-ordered vector of all nIds\n+    std::vector<int> vRandom GUARDED_BY(cs);\n+\n+    // number of \"tried\" entries\n+    int nTried GUARDED_BY(cs);\n+\n+    //! list of \"tried\" buckets\n+    int vvTried[ADDRMAN_TRIED_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE] GUARDED_BY(cs);\n+\n+    //! number of (unique) \"new\" entries\n+    int nNew GUARDED_BY(cs);\n+\n+    //! list of \"new\" buckets\n+    int vvNew[ADDRMAN_NEW_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE] GUARDED_BY(cs);\n+\n+    //! last time Good was called (memory only)\n+    int64_t nLastGood GUARDED_BY(cs);\n+\n+    //! Holds addrs inserted into tried table that collide with existing entries. Test-before-evict discipline used to resolve these collisions.\n+    std::set<int> m_tried_collisions;\n+\n+    //! Find an entry.\n+    CAddrInfo* Find(const CNetAddr& addr, int *pnId = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! find an entry, creating it if necessary.\n+    //! nTime and nServices of the found node are updated, if necessary.\n+    CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Swap two elements in vRandom.\n+    void SwapRandom(unsigned int nRandomPos1, unsigned int nRandomPos2) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Move an entry from the \"new\" table(s) to the \"tried\" table\n+    void MakeTried(CAddrInfo& info, int nId) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Delete an entry. It must not be in tried, and have refcount 0.\n+    void Delete(int nId) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Clear a position in a \"new\" table. This is the only place where entries are actually deleted.\n+    void ClearNew(int nUBucket, int nUBucketPos) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Mark an entry \"good\", possibly moving it from \"new\" to \"tried\".\n+    void Good_(const CService &addr, bool test_before_evict, int64_t time) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Add an entry to the \"new\" table.\n+    bool Add_(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Mark an entry as attempted to connect.\n+    void Attempt_(const CService &addr, bool fCountFailure, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n+    CAddrInfo Select_(bool newOnly) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! See if any to-be-evicted tried table entries have been tested and if so resolve the collisions.\n+    void ResolveCollisions_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Return a random to-be-evicted tried table address.\n+    CAddrInfo SelectTriedCollision_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Consistency check\n+    void Check()\n+        EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+#ifdef DEBUG_ADDRMAN\n+        AssertLockHeld(cs);\n+        const int err = Check_();\n+        if (err) {\n+            LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n+        }\n+#endif\n+    }\n+\n+#ifdef DEBUG_ADDRMAN\n+    //! Perform consistency check. Returns an error code or zero.\n+    int Check_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n+#endif\n+\n+    /**\n+     * Return all or many randomly selected addresses, optionally by network.\n+     *\n+     * @param[out] vAddr         Vector of randomly selected addresses from vRandom.\n+     * @param[in] max_addresses  Maximum number of addresses to return (0 = all).\n+     * @param[in] max_pct        Maximum percentage of addresses to return (0 = all).\n+     * @param[in] network        Select only addresses of this network (nullopt = all).\n+     */\n+    void GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    /** We have successfully connected to this peer. Calling this function\n+     *  updates the CAddress's nTime, which is used in our IsTerrible()\n+     *  decisions and gossiped to peers. Callers should be careful that updating\n+     *  this information doesn't leak topology information to network spies.\n+     *\n+     *  net_processing calls this function when it *disconnects* from a peer to\n+     *  not leak information about currently connected peers.\n+     *\n+     * @param[in]   addr     The address of the peer we were connected to\n+     * @param[in]   nTime    The time that we were last connected to this peer\n+     */\n+    void Connected_(const CService& addr, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    //! Update an entry's service bits.\n+    void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+    friend class CAddrManTest;\n };\n \n #endif // BITCOIN_ADDRMAN_H"
      },
      {
        "sha": "bb97fc480966d1e549e4257edf6e3ceadfdc7bef",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -15,7 +15,7 @@\n BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time)\n     : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n {\n-    if (m_client_interface) m_client_interface->InitMessage(_(\"Loading banlist...\").translated);\n+    if (m_client_interface) m_client_interface->InitMessage(_(\"Loading banlist\u2026\").translated);\n \n     int64_t n_start = GetTimeMillis();\n     m_is_dirty = false;\n@@ -28,7 +28,7 @@ BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t\n         LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n             m_banned.size(), GetTimeMillis() - n_start);\n     } else {\n-        LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n+        LogPrintf(\"Recreating banlist.dat\\n\");\n         SetBannedSetDirty(true); // force write\n         DumpBanlist();\n     }"
      },
      {
        "sha": "fb04673c5c8bdb50f5d1213f5db6f050da7a7260",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -52,7 +52,7 @@ static const int8_t mapBase58[256] = {\n     int size = strlen(psz) * 733 /1000 + 1; // log(58) / log(256), rounded up.\n     std::vector<unsigned char> b256(size);\n     // Process the characters.\n-    static_assert(sizeof(mapBase58)/sizeof(mapBase58[0]) == 256, \"mapBase58.size() should be 256\"); // guarantee not out of range\n+    static_assert(std::size(mapBase58) == 256, \"mapBase58.size() should be 256\"); // guarantee not out of range\n     while (*psz && !IsSpace(*psz)) {\n         // Decode base58 character\n         int carry = mapBase58[(uint8_t)*psz];"
      },
      {
        "sha": "288b14e02389d870cd9c34544dca45750a83561b",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 22,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2017 Pieter Wuille\n+// Copyright (c) 2017, 2021 Pieter Wuille\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -7,15 +7,18 @@\n \n #include <assert.h>\n \n+namespace bech32\n+{\n+\n namespace\n {\n \n typedef std::vector<uint8_t> data;\n \n-/** The Bech32 character set for encoding. */\n+/** The Bech32 and Bech32m character set for encoding. */\n const char* CHARSET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\n \n-/** The Bech32 character set for decoding. */\n+/** The Bech32 and Bech32m character set for decoding. */\n const int8_t CHARSET_REV[128] = {\n     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n@@ -27,6 +30,12 @@ const int8_t CHARSET_REV[128] = {\n      1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1\n };\n \n+/* Determine the final constant to use for the specified encoding. */\n+uint32_t EncodingConstant(Encoding encoding) {\n+    assert(encoding == Encoding::BECH32 || encoding == Encoding::BECH32M);\n+    return encoding == Encoding::BECH32 ? 1 : 0x2bc830a3;\n+}\n+\n /** This function will compute what 6 5-bit values to XOR into the last 6 input values, in order to\n  *  make the checksum 0. These 6 values are packed together in a single 30-bit integer. The higher\n  *  bits correspond to earlier values. */\n@@ -111,21 +120,24 @@ data ExpandHRP(const std::string& hrp)\n }\n \n /** Verify a checksum. */\n-bool VerifyChecksum(const std::string& hrp, const data& values)\n+Encoding VerifyChecksum(const std::string& hrp, const data& values)\n {\n     // PolyMod computes what value to xor into the final values to make the checksum 0. However,\n     // if we required that the checksum was 0, it would be the case that appending a 0 to a valid\n     // list of values would result in a new valid list. For that reason, Bech32 requires the\n-    // resulting checksum to be 1 instead.\n-    return PolyMod(Cat(ExpandHRP(hrp), values)) == 1;\n+    // resulting checksum to be 1 instead. In Bech32m, this constant was amended.\n+    const uint32_t check = PolyMod(Cat(ExpandHRP(hrp), values));\n+    if (check == EncodingConstant(Encoding::BECH32)) return Encoding::BECH32;\n+    if (check == EncodingConstant(Encoding::BECH32M)) return Encoding::BECH32M;\n+    return Encoding::INVALID;\n }\n \n /** Create a checksum. */\n-data CreateChecksum(const std::string& hrp, const data& values)\n+data CreateChecksum(Encoding encoding, const std::string& hrp, const data& values)\n {\n     data enc = Cat(ExpandHRP(hrp), values);\n     enc.resize(enc.size() + 6); // Append 6 zeroes\n-    uint32_t mod = PolyMod(enc) ^ 1; // Determine what to XOR into those 6 zeroes.\n+    uint32_t mod = PolyMod(enc) ^ EncodingConstant(encoding); // Determine what to XOR into those 6 zeroes.\n     data ret(6);\n     for (size_t i = 0; i < 6; ++i) {\n         // Convert the 5-bit groups in mod to checksum values.\n@@ -136,16 +148,13 @@ data CreateChecksum(const std::string& hrp, const data& values)\n \n } // namespace\n \n-namespace bech32\n-{\n-\n-/** Encode a Bech32 string. */\n-std::string Encode(const std::string& hrp, const data& values) {\n-    // First ensure that the HRP is all lowercase. BIP-173 requires an encoder\n-    // to return a lowercase Bech32 string, but if given an uppercase HRP, the\n+/** Encode a Bech32 or Bech32m string. */\n+std::string Encode(Encoding encoding, const std::string& hrp, const data& values) {\n+    // First ensure that the HRP is all lowercase. BIP-173 and BIP350 require an encoder\n+    // to return a lowercase Bech32/Bech32m string, but if given an uppercase HRP, the\n     // result will always be invalid.\n     for (const char& c : hrp) assert(c < 'A' || c > 'Z');\n-    data checksum = CreateChecksum(hrp, values);\n+    data checksum = CreateChecksum(encoding, hrp, values);\n     data combined = Cat(values, checksum);\n     std::string ret = hrp + '1';\n     ret.reserve(ret.size() + combined.size());\n@@ -155,8 +164,8 @@ std::string Encode(const std::string& hrp, const data& values) {\n     return ret;\n }\n \n-/** Decode a Bech32 string. */\n-std::pair<std::string, data> Decode(const std::string& str) {\n+/** Decode a Bech32 or Bech32m string. */\n+DecodeResult Decode(const std::string& str) {\n     bool lower = false, upper = false;\n     for (size_t i = 0; i < str.size(); ++i) {\n         unsigned char c = str[i];\n@@ -183,10 +192,9 @@ std::pair<std::string, data> Decode(const std::string& str) {\n     for (size_t i = 0; i < pos; ++i) {\n         hrp += LowerCase(str[i]);\n     }\n-    if (!VerifyChecksum(hrp, values)) {\n-        return {};\n-    }\n-    return {hrp, data(values.begin(), values.end() - 6)};\n+    Encoding result = VerifyChecksum(hrp, values);\n+    if (result == Encoding::INVALID) return {};\n+    return {result, std::move(hrp), data(values.begin(), values.end() - 6)};\n }\n \n } // namespace bech32"
      },
      {
        "sha": "e9450ccc2b35dc3650905a50418756a3a08af58e",
        "filename": "src/bech32.h",
        "status": "modified",
        "additions": 29,
        "deletions": 10,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -1,13 +1,14 @@\n-// Copyright (c) 2017 Pieter Wuille\n+// Copyright (c) 2017, 2021 Pieter Wuille\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-// Bech32 is a string encoding format used in newer address types.\n-// The output consists of a human-readable part (alphanumeric), a\n-// separator character (1), and a base32 data section, the last\n-// 6 characters of which are a checksum.\n+// Bech32 and Bech32m are string encoding formats used in newer\n+// address types. The outputs consist of a human-readable part\n+// (alphanumeric), a separator character (1), and a base32 data\n+// section, the last 6 characters of which are a checksum. The\n+// module is namespaced under bech32 for historical reasons.\n //\n-// For more information, see BIP 173.\n+// For more information, see BIP 173 and BIP 350.\n \n #ifndef BITCOIN_BECH32_H\n #define BITCOIN_BECH32_H\n@@ -19,11 +20,29 @@\n namespace bech32\n {\n \n-/** Encode a Bech32 string. If hrp contains uppercase characters, this will cause an assertion error. */\n-std::string Encode(const std::string& hrp, const std::vector<uint8_t>& values);\n+enum class Encoding {\n+    INVALID, //!< Failed decoding\n \n-/** Decode a Bech32 string. Returns (hrp, data). Empty hrp means failure. */\n-std::pair<std::string, std::vector<uint8_t>> Decode(const std::string& str);\n+    BECH32,  //!< Bech32 encoding as defined in BIP173\n+    BECH32M, //!< Bech32m encoding as defined in BIP350\n+};\n+\n+/** Encode a Bech32 or Bech32m string. If hrp contains uppercase characters, this will cause an\n+ *  assertion error. Encoding must be one of BECH32 or BECH32M. */\n+std::string Encode(Encoding encoding, const std::string& hrp, const std::vector<uint8_t>& values);\n+\n+struct DecodeResult\n+{\n+    Encoding encoding;         //!< What encoding was detected in the result; Encoding::INVALID if failed.\n+    std::string hrp;           //!< The human readable part\n+    std::vector<uint8_t> data; //!< The payload (excluding checksum)\n+\n+    DecodeResult() : encoding(Encoding::INVALID) {}\n+    DecodeResult(Encoding enc, std::string&& h, std::vector<uint8_t>&& d) : encoding(enc), hrp(std::move(h)), data(std::move(d)) {}\n+};\n+\n+/** Decode a Bech32 or Bech32m string. */\n+DecodeResult Decode(const std::string& str);\n \n } // namespace bech32\n "
      },
      {
        "sha": "b7bd8a32612b6481e5b7f51dea5de25ea7a6112b",
        "filename": "src/bench/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/addrman.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,6 +7,7 @@\n #include <random.h>\n #include <util/time.h>\n \n+#include <optional>\n #include <vector>\n \n /* A \"source\" is a source address from which we have received a bunch of other addresses. */\n@@ -98,7 +99,7 @@ static void AddrManGetAddr(benchmark::Bench& bench)\n     FillAddrMan(addrman);\n \n     bench.run([&] {\n-        const auto& addresses = addrman.GetAddr(2500, 23);\n+        const auto& addresses = addrman.GetAddr(/* max_addresses */ 2500, /* max_pct */ 23, /* network */ std::nullopt);\n         assert(addresses.size() > 0);\n     });\n }"
      },
      {
        "sha": "8e10862a37c9cce350733c39ec498d6913acb74b",
        "filename": "src/bench/bech32.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bech32.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -19,7 +19,7 @@ static void Bech32Encode(benchmark::Bench& bench)\n     tmp.reserve(1 + 32 * 8 / 5);\n     ConvertBits<8, 5, true>([&](unsigned char c) { tmp.push_back(c); }, v.begin(), v.end());\n     bench.batch(v.size()).unit(\"byte\").run([&] {\n-        bech32::Encode(\"bc\", tmp);\n+        bech32::Encode(bech32::Encoding::BECH32, \"bc\", tmp);\n     });\n }\n "
      },
      {
        "sha": "b4b33d115f314ef706f3864e8260cdf0f5345ec0",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 21,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -6,6 +6,7 @@\n #include <consensus/validation.h>\n #include <crypto/sha256.h>\n #include <test/util/mining.h>\n+#include <test/util/script.h>\n #include <test/util/setup_common.h>\n #include <test/util/wallet.h>\n #include <txmempool.h>\n@@ -16,46 +17,33 @@\n \n static void AssembleBlock(benchmark::Bench& bench)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n-\n-    const std::vector<unsigned char> op_true{OP_TRUE};\n-    CScriptWitness witness;\n-    witness.stack.push_back(op_true);\n-\n-    uint256 witness_program;\n-    CSHA256().Write(&op_true[0], op_true.size()).Finalize(witness_program.begin());\n+    const auto test_setup = MakeNoLogFileContext<const TestingSetup>();\n \n-    const CScript SCRIPT_PUB{CScript(OP_0) << std::vector<unsigned char>{witness_program.begin(), witness_program.end()}};\n+    CScriptWitness witness;\n+    witness.stack.push_back(WITNESS_STACK_ELEM_OP_TRUE);\n \n     // Collect some loose transactions that spend the coinbases of our mined blocks\n     constexpr size_t NUM_BLOCKS{200};\n     std::array<CTransactionRef, NUM_BLOCKS - COINBASE_MATURITY + 1> txs;\n     for (size_t b{0}; b < NUM_BLOCKS; ++b) {\n         CMutableTransaction tx;\n-        tx.vin.push_back(MineBlock(test_setup.m_node, SCRIPT_PUB));\n+        tx.vin.push_back(MineBlock(test_setup->m_node, P2WSH_OP_TRUE));\n         tx.vin.back().scriptWitness = witness;\n-        tx.vout.emplace_back(1337, SCRIPT_PUB);\n+        tx.vout.emplace_back(1337, P2WSH_OP_TRUE);\n         if (NUM_BLOCKS - b >= COINBASE_MATURITY)\n             txs.at(b) = MakeTransactionRef(tx);\n     }\n     {\n         LOCK(::cs_main); // Required for ::AcceptToMemoryPool.\n \n         for (const auto& txr : txs) {\n-            TxValidationState state;\n-            bool ret{::AcceptToMemoryPool(*test_setup.m_node.mempool, state, txr, nullptr /* plTxnReplaced */, false /* bypass_limits */)};\n-            assert(ret);\n+            const MempoolAcceptResult res = ::AcceptToMemoryPool(test_setup->m_node.chainman->ActiveChainstate(), *test_setup->m_node.mempool, txr, false /* bypass_limits */);\n+            assert(res.m_result_type == MempoolAcceptResult::ResultType::VALID);\n         }\n     }\n \n     bench.run([&] {\n-        PrepareBlock(test_setup.m_node, SCRIPT_PUB);\n+        PrepareBlock(test_setup->m_node, P2WSH_OP_TRUE);\n     });\n }\n "
      },
      {
        "sha": "5beb833b48bf8b313065fb9227e33ebb58b11d2b",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -17,7 +17,7 @@ static void addCoin(const CAmount& nValue, const CWallet& wallet, std::vector<st\n     tx.nLockTime = nextLockTime++; // so all transactions get different hashes\n     tx.vout.resize(1);\n     tx.vout[0].nValue = nValue;\n-    wtxs.push_back(MakeUnique<CWalletTx>(&wallet, MakeTransactionRef(std::move(tx))));\n+    wtxs.push_back(std::make_unique<CWalletTx>(&wallet, MakeTransactionRef(std::move(tx))));\n }\n \n // Simple benchmark for wallet coin selection. Note that it maybe be necessary\n@@ -49,12 +49,14 @@ static void CoinSelection(benchmark::Bench& bench)\n     }\n \n     const CoinEligibilityFilter filter_standard(1, 6, 0);\n-    const CoinSelectionParams coin_selection_params(true, 34, 148, CFeeRate(0), 0, false);\n+    const CoinSelectionParams coin_selection_params(/* change_output_size= */ 34,\n+                                                    /* change_spend_size= */ 148, /* effective_feerate= */ CFeeRate(0),\n+                                                    /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n+                                                    /* tx_no_inputs_size= */ 0, /* avoid_partial= */ false);\n     bench.run([&] {\n         std::set<CInputCoin> setCoinsRet;\n         CAmount nValueRet;\n-        bool bnb_used;\n-        bool success = wallet.SelectCoinsMinConf(1003 * COIN, filter_standard, coins, setCoinsRet, nValueRet, coin_selection_params, bnb_used);\n+        bool success = wallet.AttemptSelection(1003 * COIN, filter_standard, coins, setCoinsRet, nValueRet, coin_selection_params);\n         assert(success);\n         assert(nValueRet == 1003 * COIN);\n         assert(setCoinsRet.size() == 2);\n@@ -73,7 +75,7 @@ static void add_coin(const CAmount& nValue, int nInput, std::vector<OutputGroup>\n     CMutableTransaction tx;\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n-    std::unique_ptr<CWalletTx> wtx = MakeUnique<CWalletTx>(&testWallet, MakeTransactionRef(std::move(tx)));\n+    std::unique_ptr<CWalletTx> wtx = std::make_unique<CWalletTx>(&testWallet, MakeTransactionRef(std::move(tx)));\n     set.emplace_back();\n     set.back().Insert(COutput(wtx.get(), nInput, 0, true, true, true).GetInputCoin(), 0, true, 0, 0, false);\n     wtxn.emplace_back(std::move(wtx));\n@@ -98,12 +100,11 @@ static void BnBExhaustion(benchmark::Bench& bench)\n     std::vector<OutputGroup> utxo_pool;\n     CoinSet selection;\n     CAmount value_ret = 0;\n-    CAmount not_input_fees = 0;\n \n     bench.run([&] {\n         // Benchmark\n         CAmount target = make_hard_case(17, utxo_pool);\n-        SelectCoinsBnB(utxo_pool, target, 0, selection, value_ret, not_input_fees); // Should exhaust\n+        SelectCoinsBnB(utxo_pool, target, 0, selection, value_ret); // Should exhaust\n \n         // Cleanup\n         utxo_pool.clear();"
      },
      {
        "sha": "481e3721057ea133c6229fc0a607786651b97a4c",
        "filename": "src/bench/data.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/data.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/data.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/data.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,7 +8,7 @@ namespace benchmark {\n namespace data {\n \n #include <bench/data/block413567.raw.h>\n-const std::vector<uint8_t> block413567{block413567_raw, block413567_raw + sizeof(block413567_raw) / sizeof(block413567_raw[0])};\n+const std::vector<uint8_t> block413567{std::begin(block413567_raw), std::end(block413567_raw)};\n \n } // namespace data\n } // namespace benchmark"
      },
      {
        "sha": "8703a1cf942b6b91d5e4dbf39fa34fd7cf0772ba",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -14,13 +14,7 @@\n \n static void DuplicateInputs(benchmark::Bench& bench)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     const CScript SCRIPT_PUB{CScript(OP_TRUE)};\n \n@@ -31,7 +25,7 @@ static void DuplicateInputs(benchmark::Bench& bench)\n     CMutableTransaction naughtyTx{};\n \n     LOCK(cs_main);\n-    CBlockIndex* pindexPrev = ::ChainActive().Tip();\n+    CBlockIndex* pindexPrev = testing_setup->m_node.chainman->ActiveChain().Tip();\n     assert(pindexPrev != nullptr);\n     block.nBits = GetNextWorkRequired(pindexPrev, &block, chainparams.GetConsensus());\n     block.nNonce = 0;"
      },
      {
        "sha": "4f49fba7b755b76d2983fd43e9e69e1661504f8f",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -25,13 +25,7 @@ static void AddTx(const CTransactionRef& tx, const CAmount& nFee, CTxMemPool& po\n // unique transactions for a more meaningful performance measurement.\n static void MempoolEviction(benchmark::Bench& bench)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vin.resize(1);"
      },
      {
        "sha": "f28768efc8599488d6c6d1cf19a1d08b8ff3ff99",
        "filename": "src/bench/mempool_stress.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/mempool_stress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/mempool_stress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_stress.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -79,7 +79,7 @@ static void ComplexMemPool(benchmark::Bench& bench)\n         ordered_coins.emplace_back(MakeTransactionRef(tx));\n         available_coins.emplace_back(ordered_coins.back(), tx_counter++);\n     }\n-    TestingSetup test_setup;\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(CBaseChainParams::MAIN);\n     CTxMemPool pool;\n     LOCK2(cs_main, pool.cs);\n     bench.run([&]() NO_THREAD_SAFETY_ANALYSIS {"
      },
      {
        "sha": "030d6ebf6ac2eff303d1324eb7b589670016e67f",
        "filename": "src/bench/nanobench.h",
        "status": "modified",
        "additions": 187,
        "deletions": 52,
        "changes": 239,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/nanobench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/nanobench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/nanobench.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,7 +7,7 @@\n //\n // Licensed under the MIT License <http://opensource.org/licenses/MIT>.\n // SPDX-License-Identifier: MIT\n-// Copyright (c) 2019-2020 Martin Ankerl <martin.ankerl@gmail.com>\n+// Copyright (c) 2019-2021 Martin Ankerl <martin.ankerl@gmail.com>\n //\n // Permission is hereby granted, free of charge, to any person obtaining a copy\n // of this software and associated documentation files (the \"Software\"), to deal\n@@ -32,8 +32,8 @@\n \n // see https://semver.org/\n #define ANKERL_NANOBENCH_VERSION_MAJOR 4 // incompatible API changes\n-#define ANKERL_NANOBENCH_VERSION_MINOR 0 // backwards-compatible changes\n-#define ANKERL_NANOBENCH_VERSION_PATCH 0 // backwards-compatible bug fixes\n+#define ANKERL_NANOBENCH_VERSION_MINOR 3 // backwards-compatible changes\n+#define ANKERL_NANOBENCH_VERSION_PATCH 4 // backwards-compatible bug fixes\n \n ///////////////////////////////////////////////////////////////////////////////////////////////////\n // public facing api - as minimal as possible\n@@ -78,12 +78,20 @@\n \n #if defined(ANKERL_NANOBENCH_LOG_ENABLED)\n #    include <iostream>\n-#    define ANKERL_NANOBENCH_LOG(x) std::cout << __FUNCTION__ << \"@\" << __LINE__ << \": \" << x << std::endl\n+#    define ANKERL_NANOBENCH_LOG(x)                                                 \\\n+        do {                                                                        \\\n+            std::cout << __FUNCTION__ << \"@\" << __LINE__ << \": \" << x << std::endl; \\\n+        } while (0)\n #else\n-#    define ANKERL_NANOBENCH_LOG(x)\n+#    define ANKERL_NANOBENCH_LOG(x) \\\n+        do {                        \\\n+        } while (0)\n #endif\n \n-#if defined(__linux__) && !defined(ANKERL_NANOBENCH_DISABLE_PERF_COUNTERS)\n+#if defined(__linux__) && defined(PERF_EVENT_IOC_ID) && defined(PERF_COUNT_HW_REF_CPU_CYCLES) && defined(PERF_FLAG_FD_CLOEXEC) && \\\n+    !defined(ANKERL_NANOBENCH_DISABLE_PERF_COUNTERS)\n+// only enable perf counters on kernel 3.14 which seems to have all the necessary defines. The three PERF_... defines are not in\n+// kernel 2.6.32 (all others are).\n #    define ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS() 1\n #else\n #    define ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS() 0\n@@ -173,18 +181,19 @@ class BigO;\n  *    `contextswitches`, `instructions`, `branchinstructions`, and `branchmisses`. All the measuers (except `iterations`) are\n  *    provided for a single iteration (so `elapsed` is the time a single iteration took). The following tags are available:\n  *\n- *    * `{{median(<name>>)}}` Calculate median of a measurement data set, e.g. `{{median(elapsed)}}`.\n+ *    * `{{median(<name>)}}` Calculate median of a measurement data set, e.g. `{{median(elapsed)}}`.\n  *\n  *    * `{{average(<name>)}}` Average (mean) calculation.\n  *\n  *    * `{{medianAbsolutePercentError(<name>)}}` Calculates MdAPE, the Median Absolute Percentage Error. The MdAPE is an excellent\n  *      metric for the variation of measurements. It is more robust to outliers than the\n  *      [Mean absolute percentage error (M-APE)](https://en.wikipedia.org/wiki/Mean_absolute_percentage_error).\n  *      @f[\n- *       \\mathrm{medianAbsolutePercentError}(e) = \\mathrm{median}\\{| \\frac{e_i - \\mathrm{median}\\{e\\}}{e_i}| \\}\n+ *       \\mathrm{MdAPE}(e) = \\mathrm{med}\\{| \\frac{e_i - \\mathrm{med}\\{e\\}}{e_i}| \\}\n  *      @f]\n- *      E.g. for *elapsed*: First, @f$ \\mathrm{median}\\{elapsed\\} @f$ is calculated. This is used to calculate the absolute percentage\n- *      error to this median for each measurement, as in  @f$ | \\frac{e_i - \\mathrm{median}\\{e\\}}{e_i}| @f$. All these results\n+ *      E.g. for *elapsed*: First, @f$ \\mathrm{med}\\{e\\} @f$ calculates the median by sorting and then taking the middle element\n+ *      of all *elapsed* measurements. This is used to calculate the absolute percentage\n+ *      error to this median for each measurement, as in  @f$ | \\frac{e_i - \\mathrm{med}\\{e\\}}{e_i}| @f$. All these results\n  *      are sorted, and the middle value is chosen as the median absolute percent error.\n  *\n  *      This measurement is a bit hard to interpret, but it is very robust against outliers. E.g. a value of 5% means that half of the\n@@ -207,7 +216,7 @@ class BigO;\n  *\n  *    * `{{#measurement}}` To access individual measurement results, open the begin tag for measurements.\n  *\n- *       * `{{elapsed}}` Average elapsed time per iteration, in seconds.\n+ *       * `{{elapsed}}` Average elapsed wall clock time per iteration, in seconds.\n  *\n  *       * `{{iterations}}` Number of iterations in the measurement. The number of iterations will fluctuate due\n  *         to some applied randomness, to enhance accuracy.\n@@ -261,6 +270,7 @@ class BigO;\n    * :cpp:func:`templates::csv() <ankerl::nanobench::templates::csv()>`\n    * :cpp:func:`templates::json() <ankerl::nanobench::templates::json()>`\n    * :cpp:func:`templates::htmlBoxplot() <ankerl::nanobench::templates::htmlBoxplot()>`\n+   * :cpp:func:`templates::pyperf() <ankerl::nanobench::templates::pyperf()>`\n \n    @endverbatim\n  *\n@@ -269,6 +279,7 @@ class BigO;\n  * @param out Output for the generated output.\n  */\n void render(char const* mustacheTemplate, Bench const& bench, std::ostream& out);\n+void render(std::string const& mustacheTemplate, Bench const& bench, std::ostream& out);\n \n /**\n  * Same as render(char const* mustacheTemplate, Bench const& bench, std::ostream& out), but for when\n@@ -279,6 +290,7 @@ void render(char const* mustacheTemplate, Bench const& bench, std::ostream& out)\n  * @param out Output for the generated output.\n  */\n void render(char const* mustacheTemplate, std::vector<Result> const& results, std::ostream& out);\n+void render(std::string const& mustacheTemplate, std::vector<Result> const& results, std::ostream& out);\n \n // Contains mustache-like templates\n namespace templates {\n@@ -297,7 +309,7 @@ char const* csv() noexcept;\n /*!\n   @brief HTML output that uses plotly to generate an interactive boxplot chart. See the tutorial for an example output.\n \n-  The output uses only the elapsed time, and displays each epoch as a single dot.\n+  The output uses only the elapsed wall clock time, and displays each epoch as a single dot.\n   @verbatim embed:rst\n   See the tutorial at :ref:`tutorial-template-html` for an example.\n   @endverbatim\n@@ -306,6 +318,14 @@ char const* csv() noexcept;\n  */\n char const* htmlBoxplot() noexcept;\n \n+/*!\n+ @brief Output in pyperf  compatible JSON format, which can be used for more analyzations.\n+ @verbatim embed:rst\n+ See the tutorial at :ref:`tutorial-template-pyperf` for an example how to further analyze the output.\n+ @endverbatim\n+ */\n+char const* pyperf() noexcept;\n+\n /*!\n   @brief Template to generate JSON data.\n \n@@ -369,6 +389,8 @@ struct Config {\n     uint64_t mEpochIterations{0}; // If not 0, run *exactly* these number of iterations per epoch.\n     uint64_t mWarmup = 0;\n     std::ostream* mOut = nullptr;\n+    std::chrono::duration<double> mTimeUnit = std::chrono::nanoseconds{1};\n+    std::string mTimeUnitName = \"ns\";\n     bool mShowPerformanceCounters = true;\n     bool mIsRelative = false;\n \n@@ -504,6 +526,7 @@ class Rng final {\n      */\n     explicit Rng(uint64_t seed) noexcept;\n     Rng(uint64_t x, uint64_t y) noexcept;\n+    Rng(std::vector<uint64_t> const& data);\n \n     /**\n      * Creates a copy of the Rng, thus the copy provides exactly the same random sequence as the original.\n@@ -558,6 +581,14 @@ class Rng final {\n     template <typename Container>\n     void shuffle(Container& container) noexcept;\n \n+    /**\n+     * Extracts the full state of the generator, e.g. for serialization. For this RNG this is just 2 values, but to stay API compatible\n+     * with future implementations that potentially use more state, we use a vector.\n+     *\n+     * @return Vector containing the full state:\n+     */\n+    std::vector<uint64_t> state() const;\n+\n private:\n     static constexpr uint64_t rotl(uint64_t x, unsigned k) noexcept;\n \n@@ -666,6 +697,19 @@ class Bench {\n     Bench& unit(std::string const& unit);\n     ANKERL_NANOBENCH(NODISCARD) std::string const& unit() const noexcept;\n \n+    /**\n+     * @brief Sets the time unit to be used for the default output.\n+     *\n+     * Nanobench defaults to using ns (nanoseconds) as output in the markdown. For some benchmarks this is too coarse, so it is\n+     * possible to configure this. E.g. use `timeUnit(1ms, \"ms\")` to show `ms/op` instead of `ns/op`.\n+     *\n+     * @param tu Time unit to display the results in, default is 1ns.\n+     * @param tuName Name for the time unit, default is \"ns\"\n+     */\n+    Bench& timeUnit(std::chrono::duration<double> const& tu, std::string const& tuName);\n+    ANKERL_NANOBENCH(NODISCARD) std::string const& timeUnitName() const noexcept;\n+    ANKERL_NANOBENCH(NODISCARD) std::chrono::duration<double> const& timeUnit() const noexcept;\n+\n     /**\n      * @brief Set the output stream where the resulting markdown table will be printed to.\n      *\n@@ -916,6 +960,7 @@ class Bench {\n       @endverbatim\n      */\n     Bench& render(char const* templateContent, std::ostream& os);\n+    Bench& render(std::string const& templateContent, std::ostream& os);\n \n     Bench& config(Config const& benchmarkConfig);\n     ANKERL_NANOBENCH(NODISCARD) Config const& config() const noexcept;\n@@ -945,23 +990,24 @@ void doNotOptimizeAway(T const& val);\n \n #else\n \n-// see folly's Benchmark.h\n-template <typename T>\n-constexpr bool doNotOptimizeNeedsIndirect() {\n-    using Decayed = typename std::decay<T>::type;\n-    return !ANKERL_NANOBENCH_IS_TRIVIALLY_COPYABLE(Decayed) || sizeof(Decayed) > sizeof(long) || std::is_pointer<Decayed>::value;\n-}\n-\n+// These assembly magic is directly from what Google Benchmark is doing. I have previously used what facebook's folly was doing, but\n+// this seemd to have compilation problems in some cases. Google Benchmark seemed to be the most well tested anyways.\n+// see https://github.com/google/benchmark/blob/master/include/benchmark/benchmark.h#L307\n template <typename T>\n-typename std::enable_if<!doNotOptimizeNeedsIndirect<T>()>::type doNotOptimizeAway(T const& val) {\n+void doNotOptimizeAway(T const& val) {\n     // NOLINTNEXTLINE(hicpp-no-assembler)\n-    asm volatile(\"\" ::\"r\"(val));\n+    asm volatile(\"\" : : \"r,m\"(val) : \"memory\");\n }\n \n template <typename T>\n-typename std::enable_if<doNotOptimizeNeedsIndirect<T>()>::type doNotOptimizeAway(T const& val) {\n+void doNotOptimizeAway(T& val) {\n+#    if defined(__clang__)\n+    // NOLINTNEXTLINE(hicpp-no-assembler)\n+    asm volatile(\"\" : \"+r,m\"(val) : : \"memory\");\n+#    else\n     // NOLINTNEXTLINE(hicpp-no-assembler)\n-    asm volatile(\"\" ::\"m\"(val) : \"memory\");\n+    asm volatile(\"\" : \"+m,r\"(val) : : \"memory\");\n+#    endif\n }\n #endif\n \n@@ -1067,7 +1113,7 @@ constexpr uint64_t(Rng::max)() {\n     return (std::numeric_limits<uint64_t>::max)();\n }\n \n-ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n+ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n uint64_t Rng::operator()() noexcept {\n     auto x = mX;\n \n@@ -1077,7 +1123,7 @@ uint64_t Rng::operator()() noexcept {\n     return x;\n }\n \n-ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n+ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n uint32_t Rng::bounded(uint32_t range) noexcept {\n     uint64_t r32 = static_cast<uint32_t>(operator()());\n     auto multiresult = r32 * range;\n@@ -1103,6 +1149,7 @@ void Rng::shuffle(Container& container) noexcept {\n     }\n }\n \n+ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n constexpr uint64_t Rng::rotl(uint64_t x, unsigned k) noexcept {\n     return (x << k) | (x >> (64U - k));\n }\n@@ -1306,6 +1353,30 @@ char const* htmlBoxplot() noexcept {\n </html>)DELIM\";\n }\n \n+char const* pyperf() noexcept {\n+    return R\"DELIM({\n+    \"benchmarks\": [\n+        {\n+            \"runs\": [\n+                {\n+                    \"values\": [\n+{{#measurement}}                        {{elapsed}}{{^-last}},\n+{{/last}}{{/measurement}}\n+                    ]\n+                }\n+            ]\n+        }\n+    ],\n+    \"metadata\": {\n+        \"loops\": {{sum(iterations)}},\n+        \"inner_loops\": {{batch}},\n+        \"name\": \"{{title}}\",\n+        \"unit\": \"second\"\n+    },\n+    \"version\": \"1.0\"\n+})DELIM\";\n+}\n+\n char const* json() noexcept {\n     return R\"DELIM({\n     \"results\": [\n@@ -1410,6 +1481,7 @@ static std::vector<Node> parseMustacheTemplate(char const** tpl) {\n }\n \n static bool generateFirstLast(Node const& n, size_t idx, size_t size, std::ostream& out) {\n+    ANKERL_NANOBENCH_LOG(\"n.type=\" << static_cast<int>(n.type));\n     bool matchFirst = n == \"-first\";\n     bool matchLast = n == \"-last\";\n     if (!matchFirst && !matchLast) {\n@@ -1632,6 +1704,7 @@ namespace detail {\n \n char const* getEnv(char const* name);\n bool isEndlessRunning(std::string const& name);\n+bool isWarningsEnabled();\n \n template <typename T>\n T parseFile(std::string const& filename);\n@@ -1770,25 +1843,49 @@ void render(char const* mustacheTemplate, std::vector<Result> const& results, st\n                 for (size_t i = 0; i < nbResults; ++i) {\n                     generateResult(n.children, i, results, out);\n                 }\n+            } else if (n == \"measurement\") {\n+                if (results.size() != 1) {\n+                    throw std::runtime_error(\n+                        \"render: can only use section 'measurement' here if there is a single result, but there are \" +\n+                        detail::fmt::to_s(results.size()));\n+                }\n+                // when we only have a single result, we can immediately go into its measurement.\n+                auto const& r = results.front();\n+                for (size_t i = 0; i < r.size(); ++i) {\n+                    generateResultMeasurement(n.children, i, r, out);\n+                }\n             } else {\n-                throw std::runtime_error(\"unknown section '\" + std::string(n.begin, n.end) + \"'\");\n+                throw std::runtime_error(\"render: unknown section '\" + std::string(n.begin, n.end) + \"'\");\n             }\n             break;\n \n         case templates::Node::Type::tag:\n-            // This just uses the last result's config.\n-            if (!generateConfigTag(n, results.back().config(), out)) {\n-                throw std::runtime_error(\"unknown tag '\" + std::string(n.begin, n.end) + \"'\");\n+            if (results.size() == 1) {\n+                // result & config are both supported there\n+                generateResultTag(n, results.front(), out);\n+            } else {\n+                // This just uses the last result's config.\n+                if (!generateConfigTag(n, results.back().config(), out)) {\n+                    throw std::runtime_error(\"unknown tag '\" + std::string(n.begin, n.end) + \"'\");\n+                }\n             }\n             break;\n         }\n     }\n }\n \n+void render(std::string const& mustacheTemplate, std::vector<Result> const& results, std::ostream& out) {\n+    render(mustacheTemplate.c_str(), results, out);\n+}\n+\n void render(char const* mustacheTemplate, const Bench& bench, std::ostream& out) {\n     render(mustacheTemplate, bench.results(), out);\n }\n \n+void render(std::string const& mustacheTemplate, const Bench& bench, std::ostream& out) {\n+    render(mustacheTemplate.c_str(), bench.results(), out);\n+}\n+\n namespace detail {\n \n PerformanceCounters& performanceCounters() {\n@@ -1837,6 +1934,12 @@ bool isEndlessRunning(std::string const& name) {\n     return nullptr != endless && endless == name;\n }\n \n+// True when environment variable NANOBENCH_SUPPRESS_WARNINGS is either not set at all, or set to \"0\"\n+bool isWarningsEnabled() {\n+    auto suppression = getEnv(\"NANOBENCH_SUPPRESS_WARNINGS\");\n+    return nullptr == suppression || suppression == std::string(\"0\");\n+}\n+\n void gatherStabilityInformation(std::vector<std::string>& warnings, std::vector<std::string>& recommendations) {\n     warnings.clear();\n     recommendations.clear();\n@@ -1889,13 +1992,13 @@ void gatherStabilityInformation(std::vector<std::string>& warnings, std::vector<\n         recommendations.emplace_back(\"Make sure you compile for Release\");\n     }\n     if (recommendPyPerf) {\n-        recommendations.emplace_back(\"Use 'pyperf system tune' before benchmarking. See https://github.com/vstinner/pyperf\");\n+        recommendations.emplace_back(\"Use 'pyperf system tune' before benchmarking. See https://github.com/psf/pyperf\");\n     }\n }\n \n void printStabilityInformationOnce(std::ostream* outStream) {\n     static bool shouldPrint = true;\n-    if (shouldPrint && outStream) {\n+    if (shouldPrint && outStream && isWarningsEnabled()) {\n         auto& os = *outStream;\n         shouldPrint = false;\n         std::vector<std::string> warnings;\n@@ -1923,16 +2026,7 @@ uint64_t& singletonHeaderHash() noexcept {\n     return sHeaderHash;\n }\n \n-ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n-inline uint64_t fnv1a(std::string const& str) noexcept {\n-    auto val = UINT64_C(14695981039346656037);\n-    for (auto c : str) {\n-        val = (val ^ static_cast<uint8_t>(c)) * UINT64_C(1099511628211);\n-    }\n-    return val;\n-}\n-\n-ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n+ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n inline uint64_t hash_combine(uint64_t seed, uint64_t val) {\n     return seed ^ (val + UINT64_C(0x9e3779b9) + (seed << 6U) + (seed >> 2U));\n }\n@@ -2010,7 +2104,7 @@ struct IterationLogic::Impl {\n         return static_cast<uint64_t>(doubleNewIters + 0.5);\n     }\n \n-    ANKERL_NANOBENCH_NO_SANITIZE(\"integer\") void upscale(std::chrono::nanoseconds elapsed) {\n+    ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\") void upscale(std::chrono::nanoseconds elapsed) {\n         if (elapsed * 10 < mTargetRuntimePerEpoch) {\n             // we are far below the target runtime. Multiply iterations by 10 (with overflow check)\n             if (mNumIters * 10 < mNumIters) {\n@@ -2108,7 +2202,8 @@ struct IterationLogic::Impl {\n                 columns.emplace_back(14, 0, \"complexityN\", \"\", mBench.complexityN());\n             }\n \n-            columns.emplace_back(22, 2, \"ns/\" + mBench.unit(), \"\", 1e9 * rMedian / mBench.batch());\n+            columns.emplace_back(22, 2, mBench.timeUnitName() + \"/\" + mBench.unit(), \"\",\n+                                 rMedian / (mBench.timeUnit().count() * mBench.batch()));\n             columns.emplace_back(22, 2, mBench.unit() + \"/s\", \"\", rMedian <= 0.0 ? 0.0 : mBench.batch() / rMedian);\n \n             double rErrorMedian = mResult.medianAbsolutePercentError(Result::Measure::elapsed);\n@@ -2140,16 +2235,19 @@ struct IterationLogic::Impl {\n                 }\n             }\n \n-            columns.emplace_back(12, 2, \"total\", \"\", mResult.sum(Result::Measure::elapsed));\n+            columns.emplace_back(12, 2, \"total\", \"\", mResult.sumProduct(Result::Measure::iterations, Result::Measure::elapsed));\n \n             // write everything\n             auto& os = *mBench.output();\n \n+            // combine all elements that are relevant for printing the header\n             uint64_t hash = 0;\n-            hash = hash_combine(fnv1a(mBench.unit()), hash);\n-            hash = hash_combine(fnv1a(mBench.title()), hash);\n-            hash = hash_combine(mBench.relative(), hash);\n-            hash = hash_combine(mBench.performanceCounters(), hash);\n+            hash = hash_combine(std::hash<std::string>{}(mBench.unit()), hash);\n+            hash = hash_combine(std::hash<std::string>{}(mBench.title()), hash);\n+            hash = hash_combine(std::hash<std::string>{}(mBench.timeUnitName()), hash);\n+            hash = hash_combine(std::hash<double>{}(mBench.timeUnit().count()), hash);\n+            hash = hash_combine(std::hash<bool>{}(mBench.relative()), hash);\n+            hash = hash_combine(std::hash<bool>{}(mBench.performanceCounters()), hash);\n \n             if (hash != singletonHeaderHash()) {\n                 singletonHeaderHash() = hash;\n@@ -2177,7 +2275,7 @@ struct IterationLogic::Impl {\n                     os << col.value();\n                 }\n                 os << \"| \";\n-                auto showUnstable = rErrorMedian >= 0.05;\n+                auto showUnstable = isWarningsEnabled() && rErrorMedian >= 0.05;\n                 if (showUnstable) {\n                     os << \":wavy_dash: \";\n                 }\n@@ -2305,7 +2403,7 @@ class LinuxPerformanceCounters {\n     }\n \n     template <typename Op>\n-    ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n+    ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n     void calibrate(Op&& op) {\n         // clear current calibration data,\n         for (auto& v : mCalibratedOverhead) {\n@@ -2411,7 +2509,7 @@ bool LinuxPerformanceCounters::monitor(perf_hw_id hwId, LinuxPerformanceCounters\n }\n \n // overflow is ok, it's checked\n-ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n+ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n void LinuxPerformanceCounters::updateResults(uint64_t numIters) {\n     // clear old data\n     for (auto& id_value : mIdToTarget) {\n@@ -2963,6 +3061,20 @@ std::string const& Bench::unit() const noexcept {\n     return mConfig.mUnit;\n }\n \n+Bench& Bench::timeUnit(std::chrono::duration<double> const& tu, std::string const& tuName) {\n+    mConfig.mTimeUnit = tu;\n+    mConfig.mTimeUnitName = tuName;\n+    return *this;\n+}\n+\n+std::string const& Bench::timeUnitName() const noexcept {\n+    return mConfig.mTimeUnitName;\n+}\n+\n+std::chrono::duration<double> const& Bench::timeUnit() const noexcept {\n+    return mConfig.mTimeUnit;\n+}\n+\n // If benchmarkTitle differs from currently set title, the stored results will be cleared.\n Bench& Bench::title(const char* benchmarkTitle) {\n     if (benchmarkTitle != mConfig.mBenchmarkTitle) {\n@@ -3083,6 +3195,11 @@ Bench& Bench::render(char const* templateContent, std::ostream& os) {\n     return *this;\n }\n \n+Bench& Bench::render(std::string const& templateContent, std::ostream& os) {\n+    ::ankerl::nanobench::render(templateContent, *this, os);\n+    return *this;\n+}\n+\n std::vector<BigO> Bench::complexityBigO() const {\n     std::vector<BigO> bigOs;\n     auto rangeMeasure = BigO::collectRangeMeasure(mResults);\n@@ -3119,7 +3236,7 @@ Rng::Rng()\n     } while (mX == 0 && mY == 0);\n }\n \n-ANKERL_NANOBENCH_NO_SANITIZE(\"integer\")\n+ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n uint64_t splitMix64(uint64_t& state) noexcept {\n     uint64_t z = (state += UINT64_C(0x9e3779b97f4a7c15));\n     z = (z ^ (z >> 30U)) * UINT64_C(0xbf58476d1ce4e5b9);\n@@ -3145,6 +3262,24 @@ Rng Rng::copy() const noexcept {\n     return Rng{mX, mY};\n }\n \n+Rng::Rng(std::vector<uint64_t> const& data)\n+    : mX(0)\n+    , mY(0) {\n+    if (data.size() != 2) {\n+        throw std::runtime_error(\"ankerl::nanobench::Rng::Rng: needed exactly 2 entries in data, but got \" +\n+                                 detail::fmt::to_s(data.size()));\n+    }\n+    mX = data[0];\n+    mY = data[1];\n+}\n+\n+std::vector<uint64_t> Rng::state() const {\n+    std::vector<uint64_t> data(2);\n+    data[0] = mX;\n+    data[1] = mY;\n+    return data;\n+}\n+\n BigO::RangeMeasure BigO::collectRangeMeasure(std::vector<Result> const& results) {\n     BigO::RangeMeasure rangeMeasure;\n     for (auto const& result : results) {"
      },
      {
        "sha": "c8886a4c237ae46e2d376f4cf061612f56253693",
        "filename": "src/bench/rpc_blockchain.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 13,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/rpc_blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/rpc_blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_blockchain.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,25 +12,49 @@\n \n #include <univalue.h>\n \n-static void BlockToJsonVerbose(benchmark::Bench& bench)\n-{\n-    TestingSetup test_setup{};\n+namespace {\n+\n+struct TestBlockAndIndex {\n+    const std::unique_ptr<const TestingSetup> testing_setup{MakeNoLogFileContext<const TestingSetup>(CBaseChainParams::MAIN)};\n+    CBlock block{};\n+    uint256 blockHash{};\n+    CBlockIndex blockindex{};\n \n-    CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n-    char a = '\\0';\n-    stream.write(&a, 1); // Prevent compaction\n+    TestBlockAndIndex()\n+    {\n+        CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n+        char a = '\\0';\n+        stream.write(&a, 1); // Prevent compaction\n \n-    CBlock block;\n-    stream >> block;\n+        stream >> block;\n \n-    CBlockIndex blockindex;\n-    const uint256 blockHash = block.GetHash();\n-    blockindex.phashBlock = &blockHash;\n-    blockindex.nBits = 403014710;\n+        blockHash = block.GetHash();\n+        blockindex.phashBlock = &blockHash;\n+        blockindex.nBits = 403014710;\n+    }\n+};\n \n+} // namespace\n+\n+static void BlockToJsonVerbose(benchmark::Bench& bench)\n+{\n+    TestBlockAndIndex data;\n     bench.run([&] {\n-        (void)blockToJSON(block, &blockindex, &blockindex, /*verbose*/ true);\n+        auto univalue = blockToJSON(data.block, &data.blockindex, &data.blockindex, /*verbose*/ true);\n+        ankerl::nanobench::doNotOptimizeAway(univalue);\n     });\n }\n \n BENCHMARK(BlockToJsonVerbose);\n+\n+static void BlockToJsonVerboseWrite(benchmark::Bench& bench)\n+{\n+    TestBlockAndIndex data;\n+    auto univalue = blockToJSON(data.block, &data.blockindex, &data.blockindex, /*verbose*/ true);\n+    bench.run([&] {\n+        auto str = univalue.write();\n+        ankerl::nanobench::doNotOptimizeAway(str);\n+    });\n+}\n+\n+BENCHMARK(BlockToJsonVerboseWrite);"
      },
      {
        "sha": "39e74b9b2b2207cff814c3c98e440113f66e544f",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -56,7 +56,7 @@ static void VerifyScriptBench(benchmark::Bench& bench)\n             txCredit.vout[0].scriptPubKey,\n             &txSpend.vin[0].scriptWitness,\n             flags,\n-            MutableTransactionSignatureChecker(&txSpend, 0, txCredit.vout[0].nValue),\n+            MutableTransactionSignatureChecker(&txSpend, 0, txCredit.vout[0].nValue, MissingDataBehavior::ASSERT_FAIL),\n             &err);\n         assert(err == SCRIPT_ERR_OK);\n         assert(success);"
      },
      {
        "sha": "362b7c1e15d560dc0243e0547ed0f19982fb72f9",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 15,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -5,39 +5,33 @@\n #include <bench/bench.h>\n #include <interfaces/chain.h>\n #include <node/context.h>\n-#include <optional.h>\n #include <test/util/mining.h>\n #include <test/util/setup_common.h>\n #include <test/util/wallet.h>\n #include <validationinterface.h>\n #include <wallet/wallet.h>\n \n+#include <optional>\n+\n static void WalletBalance(benchmark::Bench& bench, const bool set_dirty, const bool add_watchonly, const bool add_mine)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto test_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n \n-    CWallet wallet{test_setup.m_node.chain.get(), \"\", CreateMockWalletDatabase()};\n+    CWallet wallet{test_setup->m_node.chain.get(), \"\", CreateMockWalletDatabase()};\n     {\n         wallet.SetupLegacyScriptPubKeyMan();\n-        bool first_run;\n-        if (wallet.LoadWallet(first_run) != DBErrors::LOAD_OK) assert(false);\n+        if (wallet.LoadWallet() != DBErrors::LOAD_OK) assert(false);\n     }\n-    auto handler = test_setup.m_node.chain->handleNotifications({&wallet, [](CWallet*) {}});\n+    auto handler = test_setup->m_node.chain->handleNotifications({&wallet, [](CWallet*) {}});\n \n-    const Optional<std::string> address_mine{add_mine ? Optional<std::string>{getnewaddress(wallet)} : nullopt};\n+    const std::optional<std::string> address_mine{add_mine ? std::optional<std::string>{getnewaddress(wallet)} : std::nullopt};\n     if (add_watchonly) importaddress(wallet, ADDRESS_WATCHONLY);\n \n     for (int i = 0; i < 100; ++i) {\n-        generatetoaddress(test_setup.m_node, address_mine.value_or(ADDRESS_WATCHONLY));\n-        generatetoaddress(test_setup.m_node, ADDRESS_WATCHONLY);\n+        generatetoaddress(test_setup->m_node, address_mine.value_or(ADDRESS_WATCHONLY));\n+        generatetoaddress(test_setup->m_node, ADDRESS_WATCHONLY);\n     }\n     SyncWithValidationInterfaceQueue();\n "
      },
      {
        "sha": "adc485983f3852975788e1c90b77aea8b6b82b00",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 159,
        "deletions": 99,
        "changes": 258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -9,7 +9,6 @@\n \n #include <chainparamsbase.h>\n #include <clientversion.h>\n-#include <optional.h>\n #include <rpc/client.h>\n #include <rpc/mining.h>\n #include <rpc/protocol.h>\n@@ -24,6 +23,7 @@\n #include <cmath>\n #include <functional>\n #include <memory>\n+#include <optional>\n #include <stdio.h>\n #include <string>\n #include <tuple>\n@@ -40,8 +40,10 @@ UrlDecodeFn* const URL_DECODE = urlDecode;\n \n static const char DEFAULT_RPCCONNECT[] = \"127.0.0.1\";\n static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n+static constexpr int DEFAULT_WAIT_CLIENT_TIMEOUT = 0;\n static const bool DEFAULT_NAMED=false;\n static const int CONTINUE_EXECUTION=-1;\n+static constexpr int8_t UNKNOWN_NETWORK{-1};\n \n /** Default number of blocks to generate for RPC generatetoaddress. */\n static const std::string DEFAULT_NBLOCKS = \"1\";\n@@ -59,6 +61,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-generate\", strprintf(\"Generate blocks immediately, equivalent to RPC getnewaddress followed by RPC generatetoaddress. Optional positional integer arguments are number of blocks to generate (default: %s) and maximum iterations to try (default: %s), equivalent to RPC generatetoaddress nblocks and maxtries arguments. Example: bitcoin-cli -generate 4 1000\", DEFAULT_NBLOCKS, DEFAULT_MAX_TRIES), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-addrinfo\", \"Get the number of addresses known to the node, per network and total.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument from 0 to 4 can be passed for different peers listings (default: 0). Pass \\\"help\\\" for detailed help documentation.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n@@ -71,6 +74,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u, testnet: %u, signet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), signetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-rpcwaittimeout=<n>\", strprintf(\"Timeout in seconds to wait for the RPC server to start, or 0 for no timeout. (default: %d)\", DEFAULT_WAIT_CLIENT_TIMEOUT), ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password. When combined with -stdinwalletpassphrase, -stdinrpcpass consumes the first line, and -stdinwalletpassphrase consumes the second.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -228,6 +232,60 @@ class BaseRequestHandler\n     virtual UniValue ProcessReply(const UniValue &batch_in) = 0;\n };\n \n+/** Process addrinfo requests */\n+class AddrinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    static constexpr std::array m_networks{\"ipv4\", \"ipv6\", \"torv2\", \"torv3\", \"i2p\"};\n+    int8_t NetworkStringToId(const std::string& str) const\n+    {\n+        for (size_t i = 0; i < m_networks.size(); ++i) {\n+            if (str == m_networks.at(i)) return i;\n+        }\n+        return UNKNOWN_NETWORK;\n+    }\n+\n+public:\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            throw std::runtime_error(\"-addrinfo takes no arguments\");\n+        }\n+        UniValue params{RPCConvertValues(\"getnodeaddresses\", std::vector<std::string>{{\"0\"}})};\n+        return JSONRPCRequestObj(\"getnodeaddresses\", params, 1);\n+    }\n+\n+    UniValue ProcessReply(const UniValue& reply) override\n+    {\n+        if (!reply[\"error\"].isNull()) return reply;\n+        const std::vector<UniValue>& nodes{reply[\"result\"].getValues()};\n+        if (!nodes.empty() && nodes.at(0)[\"network\"].isNull()) {\n+            throw std::runtime_error(\"-addrinfo requires bitcoind server to be running v22.0 and up\");\n+        }\n+        // Count the number of peers we know by network, including torv2 versus torv3.\n+        std::array<uint64_t, m_networks.size()> counts{{}};\n+        for (const UniValue& node : nodes) {\n+            std::string network_name{node[\"network\"].get_str()};\n+            if (network_name == \"onion\") {\n+                network_name = node[\"address\"].get_str().size() > 22 ? \"torv3\" : \"torv2\";\n+            }\n+            const int8_t network_id{NetworkStringToId(network_name)};\n+            if (network_id == UNKNOWN_NETWORK) continue;\n+            ++counts.at(network_id);\n+        }\n+        // Prepare result to return to user.\n+        UniValue result{UniValue::VOBJ}, addresses{UniValue::VOBJ};\n+        uint64_t total{0}; // Total address count\n+        for (size_t i = 0; i < m_networks.size(); ++i) {\n+            addresses.pushKV(m_networks.at(i), counts.at(i));\n+            total += counts.at(i);\n+        }\n+        addresses.pushKV(\"total\", total);\n+        result.pushKV(\"addresses_known\", addresses);\n+        return JSONRPCReplyObj(result, NullUniValue, 1);\n+    }\n+};\n+\n /** Process getinfo requests */\n class GetinfoRequestHandler: public BaseRequestHandler\n {\n@@ -299,27 +357,23 @@ class GetinfoRequestHandler: public BaseRequestHandler\n class NetinfoRequestHandler : public BaseRequestHandler\n {\n private:\n-    static constexpr int8_t UNKNOWN_NETWORK{-1};\n-    static constexpr int8_t NET_I2P{3}; // pos of \"i2p\" in m_networks\n-    static constexpr uint8_t m_networks_size{4};\n-    const std::array<std::string, m_networks_size> m_networks{{\"ipv4\", \"ipv6\", \"onion\", \"i2p\"}};\n-    std::array<std::array<uint16_t, m_networks_size + 1>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total)\n+    static constexpr uint8_t MAX_DETAIL_LEVEL{4};\n+    static constexpr std::array m_networks{\"ipv4\", \"ipv6\", \"onion\", \"i2p\"};\n+    std::array<std::array<uint16_t, m_networks.size() + 1>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total)\n     uint8_t m_block_relay_peers_count{0};\n     uint8_t m_manual_peers_count{0};\n     int8_t NetworkStringToId(const std::string& str) const\n     {\n-        for (uint8_t i = 0; i < m_networks_size; ++i) {\n+        for (size_t i = 0; i < m_networks.size(); ++i) {\n             if (str == m_networks.at(i)) return i;\n         }\n         return UNKNOWN_NETWORK;\n     }\n-    uint8_t m_details_level{0};      //!< Optional user-supplied arg to set dashboard details level\n-    bool m_is_help_requested{false}; //!< Optional user-supplied arg to print help documentation\n+    uint8_t m_details_level{0}; //!< Optional user-supplied arg to set dashboard details level\n     bool DetailsRequested() const { return m_details_level > 0 && m_details_level < 5; }\n     bool IsAddressSelected() const { return m_details_level == 2 || m_details_level == 4; }\n     bool IsVersionSelected() const { return m_details_level == 3 || m_details_level == 4; }\n     bool m_is_asmap_on{false};\n-    bool m_is_i2p_on{false};\n     size_t m_max_addr_length{0};\n     size_t m_max_age_length{3};\n     size_t m_max_id_length{2};\n@@ -366,69 +420,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"addr-fetch\") return \"addr\";\n         return \"\";\n     }\n-    const UniValue NetinfoHelp()\n-    {\n-        return std::string{\n-            \"-netinfo level|\\\"help\\\" \\n\\n\"\n-            \"Returns a network peer connections dashboard with information from the remote server.\\n\"\n-            \"Under the hood, -netinfo fetches the data by calling getpeerinfo and getnetworkinfo.\\n\"\n-            \"An optional integer argument from 0 to 4 can be passed for different peers listings.\\n\"\n-            \"Pass \\\"help\\\" to see this detailed help documentation.\\n\"\n-            \"If more than one argument is passed, only the first one is read and parsed.\\n\"\n-            \"Suggestion: use with the Linux watch(1) command for a live dashboard; see example below.\\n\\n\"\n-            \"Arguments:\\n\"\n-            \"1. level (integer 0-4, optional)  Specify the info level of the peers dashboard (default 0):\\n\"\n-            \"                                  0 - Connection counts and local addresses\\n\"\n-            \"                                  1 - Like 0 but with a peers listing (without address or version columns)\\n\"\n-            \"                                  2 - Like 1 but with an address column\\n\"\n-            \"                                  3 - Like 1 but with a version column\\n\"\n-            \"                                  4 - Like 1 but with both address and version columns\\n\"\n-            \"2. help (string \\\"help\\\", optional) Print this help documentation instead of the dashboard.\\n\\n\"\n-            \"Result:\\n\\n\"\n-            \"* The peers listing in levels 1-4 displays all of the peers sorted by direction and minimum ping time:\\n\\n\"\n-            \"  Column   Description\\n\"\n-            \"  ------   -----------\\n\"\n-            \"  <->      Direction\\n\"\n-            \"           \\\"in\\\"  - inbound connections are those initiated by the peer\\n\"\n-            \"           \\\"out\\\" - outbound connections are those initiated by us\\n\"\n-            \"  type     Type of peer connection\\n\"\n-            \"           \\\"full\\\"   - full relay, the default\\n\"\n-            \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n-            \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n-            \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n-            \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n-            \"  net      Network the peer connected through (\\\"ipv4\\\", \\\"ipv6\\\", \\\"onion\\\", \\\"i2p\\\", or \\\"cjdns\\\")\\n\"\n-            \"  mping    Minimum observed ping time, in milliseconds (ms)\\n\"\n-            \"  ping     Last observed ping time, in milliseconds (ms)\\n\"\n-            \"  send     Time since last message sent to the peer, in seconds\\n\"\n-            \"  recv     Time since last message received from the peer, in seconds\\n\"\n-            \"  txn      Time since last novel transaction received from the peer and accepted into our mempool, in minutes\\n\"\n-            \"  blk      Time since last novel block passing initial validity checks received from the peer, in minutes\\n\"\n-            \"  hb       High-bandwidth BIP152 compact block relay\\n\"\n-            \"           \\\".\\\" (to)   - we selected the peer as a high-bandwidth peer\\n\"\n-            \"           \\\"*\\\" (from) - the peer selected us as a high-bandwidth peer\\n\"\n-            \"  age      Duration of connection to the peer, in minutes\\n\"\n-            \"  asmap    Mapped AS (Autonomous System) number in the BGP route to the peer, used for diversifying\\n\"\n-            \"           peer selection (only displayed if the -asmap config option is set)\\n\"\n-            \"  id       Peer index, in increasing order of peer connections since node startup\\n\"\n-            \"  address  IP address and port of the peer\\n\"\n-            \"  version  Peer version and subversion concatenated, e.g. \\\"70016/Satoshi:21.0.0/\\\"\\n\\n\"\n-            \"* The connection counts table displays the number of peers by direction, network, and the totals\\n\"\n-            \"  for each, as well as two special outbound columns for block relay peers and manual peers.\\n\\n\"\n-            \"* The local addresses table lists each local address broadcast by the node, the port, and the score.\\n\\n\"\n-            \"Examples:\\n\\n\"\n-            \"Connection counts and local addresses only\\n\"\n-            \"> bitcoin-cli -netinfo\\n\\n\"\n-            \"Compact peers listing\\n\"\n-            \"> bitcoin-cli -netinfo 1\\n\\n\"\n-            \"Full dashboard\\n\"\n-            \"> bitcoin-cli -netinfo 4\\n\\n\"\n-            \"Full live dashboard, adjust --interval or --no-title as needed (Linux)\\n\"\n-            \"> watch --interval 1 --no-title bitcoin-cli -netinfo 4\\n\\n\"\n-            \"See this help\\n\"\n-            \"> bitcoin-cli -netinfo help\\n\"};\n-    }\n-    const int64_t m_time_now{GetSystemTimeInSeconds()};\n+    const int64_t m_time_now{GetTimeSeconds()};\n \n public:\n     static constexpr int ID_PEERINFO = 0;\n@@ -439,11 +431,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (!args.empty()) {\n             uint8_t n{0};\n             if (ParseUInt8(args.at(0), &n)) {\n-                m_details_level = n;\n-            } else if (args.at(0) == \"help\") {\n-                m_is_help_requested = true;\n+                m_details_level = std::min(n, MAX_DETAIL_LEVEL);\n             } else {\n-                throw std::runtime_error(strprintf(\"invalid -netinfo argument: %s\", args.at(0)));\n+                throw std::runtime_error(strprintf(\"invalid -netinfo argument: %s\\nFor more information, run: bitcoin-cli -netinfo help\", args.at(0)));\n             }\n         }\n         UniValue result(UniValue::VARR);\n@@ -454,9 +444,6 @@ class NetinfoRequestHandler : public BaseRequestHandler\n \n     UniValue ProcessReply(const UniValue& batch_in) override\n     {\n-        if (m_is_help_requested) {\n-            return JSONRPCReplyObj(NetinfoHelp(), NullUniValue, 1);\n-        }\n         const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n         if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n@@ -471,14 +458,13 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             const std::string network{peer[\"network\"].get_str()};\n             const int8_t network_id{NetworkStringToId(network)};\n             if (network_id == UNKNOWN_NETWORK) continue;\n-            m_is_i2p_on |= (network_id == NET_I2P);\n             const bool is_outbound{!peer[\"inbound\"].get_bool()};\n             const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n             const std::string conn_type{peer[\"connection_type\"].get_str()};\n-            ++m_counts.at(is_outbound).at(network_id);      // in/out by network\n-            ++m_counts.at(is_outbound).at(m_networks_size); // in/out overall\n-            ++m_counts.at(2).at(network_id);                // total by network\n-            ++m_counts.at(2).at(m_networks_size);           // total overall\n+            ++m_counts.at(is_outbound).at(network_id);        // in/out by network\n+            ++m_counts.at(is_outbound).at(m_networks.size()); // in/out overall\n+            ++m_counts.at(2).at(network_id);                  // total by network\n+            ++m_counts.at(2).at(m_networks.size());           // total overall\n             if (conn_type == \"block-relay-only\") ++m_block_relay_peers_count;\n             if (conn_type == \"manual\") ++m_manual_peers_count;\n             if (DetailsRequested()) {\n@@ -544,14 +530,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n \n         // Report peer connection totals by type.\n         result += \"        ipv4    ipv6   onion\";\n-        if (m_is_i2p_on) result += \"     i2p\";\n+        const bool any_i2p_peers = m_counts.at(2).at(3); // false if total i2p peers count is 0, otherwise true\n+        if (any_i2p_peers) result += \"     i2p\";\n         result += \"   total   block\";\n         if (m_manual_peers_count) result += \"  manual\";\n-        const std::array<std::string, 3> rows{{\"in\", \"out\", \"total\"}};\n+        const std::array rows{\"in\", \"out\", \"total\"};\n         for (uint8_t i = 0; i < 3; ++i) {\n             result += strprintf(\"\\n%-5s  %5i   %5i   %5i\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2)); // ipv4/ipv6/onion peers counts\n-            if (m_is_i2p_on) result += strprintf(\"   %5i\", m_counts.at(i).at(3)); // i2p peers count\n-            result += strprintf(\"   %5i\", m_counts.at(i).at(m_networks_size)); // total peers count\n+            if (any_i2p_peers) result += strprintf(\"   %5i\", m_counts.at(i).at(3)); // i2p peers count\n+            result += strprintf(\"   %5i\", m_counts.at(i).at(m_networks.size())); // total peers count\n             if (i == 1) { // the outbound row has two extra columns for block relay and manual peer counts\n                 result += strprintf(\"   %5i\", m_block_relay_peers_count);\n                 if (m_manual_peers_count) result += strprintf(\"   %5i\", m_manual_peers_count);\n@@ -575,6 +562,67 @@ class NetinfoRequestHandler : public BaseRequestHandler\n \n         return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n     }\n+\n+    const std::string m_help_doc{\n+        \"-netinfo level|\\\"help\\\" \\n\\n\"\n+        \"Returns a network peer connections dashboard with information from the remote server.\\n\"\n+        \"This human-readable interface will change regularly and is not intended to be a stable API.\\n\"\n+        \"Under the hood, -netinfo fetches the data by calling getpeerinfo and getnetworkinfo.\\n\"\n+        + strprintf(\"An optional integer argument from 0 to %d can be passed for different peers listings; %d to 255 are parsed as %d.\\n\", MAX_DETAIL_LEVEL, MAX_DETAIL_LEVEL, MAX_DETAIL_LEVEL) +\n+        \"Pass \\\"help\\\" to see this detailed help documentation.\\n\"\n+        \"If more than one argument is passed, only the first one is read and parsed.\\n\"\n+        \"Suggestion: use with the Linux watch(1) command for a live dashboard; see example below.\\n\\n\"\n+        \"Arguments:\\n\"\n+        + strprintf(\"1. level (integer 0-%d, optional)  Specify the info level of the peers dashboard (default 0):\\n\", MAX_DETAIL_LEVEL) +\n+        \"                                  0 - Connection counts and local addresses\\n\"\n+        \"                                  1 - Like 0 but with a peers listing (without address or version columns)\\n\"\n+        \"                                  2 - Like 1 but with an address column\\n\"\n+        \"                                  3 - Like 1 but with a version column\\n\"\n+        \"                                  4 - Like 1 but with both address and version columns\\n\"\n+        \"2. help (string \\\"help\\\", optional) Print this help documentation instead of the dashboard.\\n\\n\"\n+        \"Result:\\n\\n\"\n+        + strprintf(\"* The peers listing in levels 1-%d displays all of the peers sorted by direction and minimum ping time:\\n\\n\", MAX_DETAIL_LEVEL) +\n+        \"  Column   Description\\n\"\n+        \"  ------   -----------\\n\"\n+        \"  <->      Direction\\n\"\n+        \"           \\\"in\\\"  - inbound connections are those initiated by the peer\\n\"\n+        \"           \\\"out\\\" - outbound connections are those initiated by us\\n\"\n+        \"  type     Type of peer connection\\n\"\n+        \"           \\\"full\\\"   - full relay, the default\\n\"\n+        \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n+        \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n+        \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n+        \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n+        \"  net      Network the peer connected through (\\\"ipv4\\\", \\\"ipv6\\\", \\\"onion\\\", \\\"i2p\\\", or \\\"cjdns\\\")\\n\"\n+        \"  mping    Minimum observed ping time, in milliseconds (ms)\\n\"\n+        \"  ping     Last observed ping time, in milliseconds (ms)\\n\"\n+        \"  send     Time since last message sent to the peer, in seconds\\n\"\n+        \"  recv     Time since last message received from the peer, in seconds\\n\"\n+        \"  txn      Time since last novel transaction received from the peer and accepted into our mempool, in minutes\\n\"\n+        \"  blk      Time since last novel block passing initial validity checks received from the peer, in minutes\\n\"\n+        \"  hb       High-bandwidth BIP152 compact block relay\\n\"\n+        \"           \\\".\\\" (to)   - we selected the peer as a high-bandwidth peer\\n\"\n+        \"           \\\"*\\\" (from) - the peer selected us as a high-bandwidth peer\\n\"\n+        \"  age      Duration of connection to the peer, in minutes\\n\"\n+        \"  asmap    Mapped AS (Autonomous System) number in the BGP route to the peer, used for diversifying\\n\"\n+        \"           peer selection (only displayed if the -asmap config option is set)\\n\"\n+        \"  id       Peer index, in increasing order of peer connections since node startup\\n\"\n+        \"  address  IP address and port of the peer\\n\"\n+        \"  version  Peer version and subversion concatenated, e.g. \\\"70016/Satoshi:21.0.0/\\\"\\n\\n\"\n+        \"* The connection counts table displays the number of peers by direction, network, and the totals\\n\"\n+        \"  for each, as well as two special outbound columns for block relay peers and manual peers.\\n\\n\"\n+        \"* The local addresses table lists each local address broadcast by the node, the port, and the score.\\n\\n\"\n+        \"Examples:\\n\\n\"\n+        \"Connection counts and local addresses only\\n\"\n+        \"> bitcoin-cli -netinfo\\n\\n\"\n+        \"Compact peers listing\\n\"\n+        \"> bitcoin-cli -netinfo 1\\n\\n\"\n+        \"Full dashboard\\n\"\n+        + strprintf(\"> bitcoin-cli -netinfo %d\\n\\n\", MAX_DETAIL_LEVEL) +\n+        \"Full live dashboard, adjust --interval or --no-title as needed (Linux)\\n\"\n+        + strprintf(\"> watch --interval 1 --no-title bitcoin-cli -netinfo %d\\n\\n\", MAX_DETAIL_LEVEL) +\n+        \"See this help\\n\"\n+        \"> bitcoin-cli -netinfo help\\n\"};\n };\n \n /** Process RPC generatetoaddress request. */\n@@ -619,16 +667,16 @@ class DefaultRequestHandler: public BaseRequestHandler {\n     }\n };\n \n-static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, const std::vector<std::string>& args, const Optional<std::string>& rpcwallet = {})\n+static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, const std::vector<std::string>& args, const std::optional<std::string>& rpcwallet = {})\n {\n     std::string host;\n     // In preference order, we choose the following for the port:\n     //     1. -rpcport\n     //     2. port in -rpcconnect (ie following : in ipv4 or ]: in ipv6)\n     //     3. default port for chain\n-    int port = BaseParams().RPCPort();\n+    uint16_t port{BaseParams().RPCPort()};\n     SplitHostPort(gArgs.GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT), port, host);\n-    port = gArgs.GetArg(\"-rpcport\", port);\n+    port = static_cast<uint16_t>(gArgs.GetArg(\"-rpcport\", port));\n \n     // Obtain event base\n     raii_event_base base = obtain_event_base();\n@@ -716,6 +764,8 @@ static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, co\n         } else {\n             throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");\n         }\n+    } else if (response.status == HTTP_SERVICE_UNAVAILABLE) {\n+        throw std::runtime_error(strprintf(\"Server response: %s\", response.body));\n     } else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n         throw std::runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\n     else if (response.body.empty())\n@@ -741,11 +791,14 @@ static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, co\n  * @returns the RPC response as a UniValue object.\n  * @throws a CConnectionFailed std::runtime_error if connection failed or RPC server still in warmup.\n  */\n-static UniValue ConnectAndCallRPC(BaseRequestHandler* rh, const std::string& strMethod, const std::vector<std::string>& args, const Optional<std::string>& rpcwallet = {})\n+static UniValue ConnectAndCallRPC(BaseRequestHandler* rh, const std::string& strMethod, const std::vector<std::string>& args, const std::optional<std::string>& rpcwallet = {})\n {\n     UniValue response(UniValue::VOBJ);\n     // Execute and handle connection failures with -rpcwait.\n     const bool fWait = gArgs.GetBoolArg(\"-rpcwait\", false);\n+    const int timeout = gArgs.GetArg(\"-rpcwaittimeout\", DEFAULT_WAIT_CLIENT_TIMEOUT);\n+    const int64_t deadline = GetTime<std::chrono::seconds>().count() + timeout;\n+\n     do {\n         try {\n             response = CallRPC(rh, strMethod, args, rpcwallet);\n@@ -756,11 +809,12 @@ static UniValue ConnectAndCallRPC(BaseRequestHandler* rh, const std::string& str\n                 }\n             }\n             break; // Connection succeeded, no need to retry.\n-        } catch (const CConnectionFailed&) {\n-            if (fWait) {\n-                UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        } catch (const CConnectionFailed& e) {\n+            const int64_t now = GetTime<std::chrono::seconds>().count();\n+            if (fWait && (timeout <= 0 || now < deadline)) {\n+                UninterruptibleSleep(std::chrono::seconds{1});\n             } else {\n-                throw;\n+                throw CConnectionFailed(strprintf(\"timeout on transient error: %s\", e.what()));\n             }\n         }\n     } while (fWait);\n@@ -825,7 +879,7 @@ static void GetWalletBalances(UniValue& result)\n  */\n static UniValue GetNewAddress()\n {\n-    Optional<std::string> wallet_name{};\n+    std::optional<std::string> wallet_name{};\n     if (gArgs.IsArgSet(\"-rpcwallet\")) wallet_name = gArgs.GetArg(\"-rpcwallet\", \"\");\n     DefaultRequestHandler rh;\n     return ConnectAndCallRPC(&rh, \"getnewaddress\", /* args=*/{}, wallet_name);\n@@ -906,6 +960,10 @@ static int CommandLineRPC(int argc, char *argv[])\n         if (gArgs.IsArgSet(\"-getinfo\")) {\n             rh.reset(new GetinfoRequestHandler());\n         } else if (gArgs.GetBoolArg(\"-netinfo\", false)) {\n+            if (!args.empty() && args.at(0) == \"help\") {\n+                tfm::format(std::cout, \"%s\\n\", NetinfoRequestHandler().m_help_doc);\n+                return 0;\n+            }\n             rh.reset(new NetinfoRequestHandler());\n         } else if (gArgs.GetBoolArg(\"-generate\", false)) {\n             const UniValue getnewaddress{GetNewAddress()};\n@@ -916,6 +974,8 @@ static int CommandLineRPC(int argc, char *argv[])\n             } else {\n                 ParseError(error, strPrint, nRet);\n             }\n+        } else if (gArgs.GetBoolArg(\"-addrinfo\", false)) {\n+            rh.reset(new AddrinfoRequestHandler());\n         } else {\n             rh.reset(new DefaultRequestHandler());\n             if (args.size() < 1) {\n@@ -926,7 +986,7 @@ static int CommandLineRPC(int argc, char *argv[])\n         }\n         if (nRet == 0) {\n             // Perform RPC call\n-            Optional<std::string> wallet_name{};\n+            std::optional<std::string> wallet_name{};\n             if (gArgs.IsArgSet(\"-rpcwallet\")) wallet_name = gArgs.GetArg(\"-rpcwallet\", \"\");\n             const UniValue reply = ConnectAndCallRPC(rh.get(), method, args, wallet_name);\n "
      },
      {
        "sha": "3fc87ae1ff325c61b23262b206dad9f1c1668808",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -506,11 +506,12 @@ static void MutateTxDelOutput(CMutableTransaction& tx, const std::string& strOut\n     tx.vout.erase(tx.vout.begin() + outIdx);\n }\n \n-static const unsigned int N_SIGHASH_OPTS = 6;\n+static const unsigned int N_SIGHASH_OPTS = 7;\n static const struct {\n     const char *flagStr;\n     int flags;\n } sighashOptions[N_SIGHASH_OPTS] = {\n+    {\"DEFAULT\", SIGHASH_DEFAULT},\n     {\"ALL\", SIGHASH_ALL},\n     {\"NONE\", SIGHASH_NONE},\n     {\"SINGLE\", SIGHASH_SINGLE},\n@@ -725,7 +726,7 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n static void OutputTxJSON(const CTransaction& tx)\n {\n     UniValue entry(UniValue::VOBJ);\n-    TxToUniv(tx, uint256(), entry);\n+    TxToUniv(tx, uint256(), /* include_addresses */ false, entry);\n \n     std::string jsonOutput = entry.write(4);\n     tfm::format(std::cout, \"%s\\n\", jsonOutput);"
      },
      {
        "sha": "3f273e75f66f4a914d979086062bf0672c6f0085",
        "filename": "src/bitcoin-util.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 59,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoin-util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoin-util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-util.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -43,6 +43,8 @@ static void SetupBitcoinUtilArgs(ArgsManager &argsman)\n \n     argsman.AddArg(\"-version\", \"Print version and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n+    argsman.AddCommand(\"grind\", \"Perform proof of work on hex header string\", OptionsCategory::COMMANDS);\n+\n     SetupChainParamsBaseOptions(argsman);\n }\n \n@@ -57,15 +59,7 @@ static int AppInitUtil(int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    // Check for chain settings (Params() calls are only valid after this clause)\n-    try {\n-        SelectParams(gArgs.GetChainName());\n-    } catch (const std::exception& e) {\n-        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n-        return EXIT_FAILURE;\n-    }\n-\n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n         // First part of help message is specific to this utility\n         std::string strUsage = PACKAGE_NAME \" bitcoin-util utility version \" + FormatFullVersion() + \"\\n\";\n         if (!gArgs.IsArgSet(\"-version\")) {\n@@ -82,6 +76,15 @@ static int AppInitUtil(int argc, char* argv[])\n         }\n         return EXIT_SUCCESS;\n     }\n+\n+    // Check for chain settings (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n     return CONTINUE_EXECUTION;\n }\n \n@@ -111,17 +114,17 @@ static void grind_task(uint32_t nBits, CBlockHeader& header_orig, uint32_t offse\n     }\n }\n \n-static int Grind(int argc, char* argv[], std::string& strPrint)\n+static int Grind(std::vector<std::string> args, std::string& strPrint)\n {\n-    if (argc != 1) {\n+    if (args.size() != 1) {\n         strPrint = \"Must specify block header to grind\";\n-        return 1;\n+        return EXIT_FAILURE;\n     }\n \n     CBlockHeader header;\n-    if (!DecodeHexBlockHeader(header, argv[0])) {\n+    if (!DecodeHexBlockHeader(header, args[0])) {\n         strPrint = \"Could not decode block header\";\n-        return 1;\n+        return EXIT_FAILURE;\n     }\n \n     uint32_t nBits = header.nBits;\n@@ -137,49 +140,13 @@ static int Grind(int argc, char* argv[], std::string& strPrint)\n     }\n     if (!found) {\n         strPrint = \"Could not satisfy difficulty target\";\n-        return 1;\n+        return EXIT_FAILURE;\n     }\n \n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     ss << header;\n     strPrint = HexStr(ss);\n-    return 0;\n-}\n-\n-static int CommandLineUtil(int argc, char* argv[])\n-{\n-    if (argc <= 1) return 1;\n-\n-    std::string strPrint;\n-    int nRet = 0;\n-\n-    try {\n-        while (argc > 1 && IsSwitchChar(argv[1][0]) && (argv[1][1] != 0)) {\n-            --argc;\n-            ++argv;\n-        }\n-\n-        char* command = argv[1];\n-        if (strcmp(command, \"grind\") == 0) {\n-            nRet = Grind(argc-2, argv+2, strPrint);\n-        } else {\n-            strPrint = strprintf(\"Unknown command %s\", command);\n-            nRet = 1;\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        strPrint = std::string(\"error: \") + e.what();\n-        nRet = EXIT_FAILURE;\n-    }\n-    catch (...) {\n-        PrintExceptionContinue(nullptr, \"CommandLineUtil()\");\n-        throw;\n-    }\n-\n-    if (strPrint != \"\") {\n-        tfm::format(nRet == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint);\n-    }\n-    return nRet;\n+    return EXIT_SUCCESS;\n }\n \n #ifdef WIN32\n@@ -199,23 +166,37 @@ int main(int argc, char* argv[])\n         int ret = AppInitUtil(argc, argv);\n         if (ret != CONTINUE_EXECUTION)\n             return ret;\n-    }\n-    catch (const std::exception& e) {\n+    } catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInitUtil()\");\n         return EXIT_FAILURE;\n     } catch (...) {\n         PrintExceptionContinue(nullptr, \"AppInitUtil()\");\n         return EXIT_FAILURE;\n     }\n \n+    const auto cmd = gArgs.GetCommand();\n+    if (!cmd) {\n+        tfm::format(std::cerr, \"Error: must specify a command\\n\");\n+        return EXIT_FAILURE;\n+    }\n+\n     int ret = EXIT_FAILURE;\n+    std::string strPrint;\n     try {\n-        ret = CommandLineUtil(argc, argv);\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"CommandLineUtil()\");\n+        if (cmd->command == \"grind\") {\n+            ret = Grind(cmd->args, strPrint);\n+        } else {\n+            assert(false); // unknown command should be caught earlier\n+        }\n+    } catch (const std::exception& e) {\n+        strPrint = std::string(\"error: \") + e.what();\n     } catch (...) {\n-        PrintExceptionContinue(nullptr, \"CommandLineUtil()\");\n+        strPrint = \"unknown error\";\n+    }\n+\n+    if (strPrint != \"\") {\n+        tfm::format(ret == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint);\n     }\n+\n     return ret;\n }"
      },
      {
        "sha": "654679af27e2d029d937dd0da3c011313032dd91",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 127,
        "deletions": 19,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,33 +12,108 @@\n #include <compat.h>\n #include <init.h>\n #include <interfaces/chain.h>\n+#include <interfaces/init.h>\n #include <node/context.h>\n #include <node/ui_interface.h>\n #include <noui.h>\n #include <shutdown.h>\n-#include <util/ref.h>\n+#include <util/check.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n #include <util/threadnames.h>\n+#include <util/tokenpipe.h>\n #include <util/translation.h>\n #include <util/url.h>\n \n+#include <any>\n #include <functional>\n+#include <optional>\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n-static bool AppInit(int argc, char* argv[])\n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if successful, and in child process.\n+ *          >0 if successful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd& endpoint)\n {\n-    NodeContext node;\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::Make();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->TakeReadEnd();\n+        umbilical->TakeWriteEnd().Close();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->TakeWriteEnd();\n+    umbilical->TakeReadEnd().Close();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;\n+            // Don't close if fd<=2 to try to handle the case where the program was invoked without any file descriptors open.\n+            if (fd > 2) close(fd);\n+            if (err) {\n+                exit(1); // dup2 failed.\n+            }\n+        } else {\n+            exit(1); // open /dev/null failed.\n+        }\n+    }\n+    endpoint.TokenWrite(0); // Success\n+    return 0;\n+}\n+\n+#endif\n \n+static bool AppInit(NodeContext& node, int argc, char* argv[])\n+{\n     bool fRet = false;\n \n     util::ThreadSetInternalName(\"init\");\n \n     // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n-    SetupServerArgs(node);\n     ArgsManager& args = *Assert(node.args);\n+    SetupServerArgs(args);\n     std::string error;\n     if (!args.ParseParameters(argc, argv, error)) {\n         return InitError(Untranslated(strprintf(\"Error parsing command line arguments: %s\\n\", error)));\n@@ -59,7 +134,15 @@ static bool AppInit(int argc, char* argv[])\n         return true;\n     }\n \n-    util::Ref context{node};\n+#if HAVE_DECL_FORK\n+    // Communication with parent after daemonizing. This is used for signalling in the following ways:\n+    // - a boolean token is sent when the initialization process (all the Init* functions) have finished to indicate\n+    // that the parent process can quit, and whether it was successful/unsuccessful.\n+    // - an unexpected shutdown of the child process creates an unexpected end of stream at the parent\n+    // end, which is interpreted as failure to start.\n+    TokenPipeEnd daemon_ep;\n+#endif\n+    std::any context{&node};\n     try\n     {\n         if (!CheckDataDirOption()) {\n@@ -105,39 +188,56 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+            case 0: // Child: continue.\n+                // If -daemonwait is not enabled, immediately send a success token the parent.\n+                if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                    daemon_ep.TokenWrite(1);\n+                    daemon_ep.Close();\n+                }\n+                break;\n+            case -1: // Error happened.\n+                return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\n+            default: { // Parent: wait and exit.\n+                int token = daemon_ep.TokenRead();\n+                if (token) { // Success\n+                    exit(EXIT_SUCCESS);\n+                } else { // fRet = false or token read error (premature exit).\n+                    tfm::format(std::cerr, \"Error during initializaton - check debug.log for details\\n\");\n+                    exit(EXIT_FAILURE);\n+                }\n+            }\n             }\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic pop\n-#endif\n #else\n             return InitError(Untranslated(\"-daemon is not supported on this operating system\\n\"));\n-#endif // HAVE_DECL_DAEMON\n+#endif // HAVE_DECL_FORK\n         }\n         // Lock data directory after daemonization\n         if (!AppInitLockDataDirectory())\n         {\n             // If locking the data directory failed, exit immediately\n             return false;\n         }\n-        fRet = AppInitInterfaces(node) && AppInitMain(context, node);\n+        fRet = AppInitInterfaces(node) && AppInitMain(node);\n     }\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");\n     } catch (...) {\n         PrintExceptionContinue(nullptr, \"AppInit()\");\n     }\n \n+#if HAVE_DECL_FORK\n+    if (daemon_ep.IsOpen()) {\n+        // Signal initialization status to parent, then close pipe.\n+        daemon_ep.TokenWrite(fRet);\n+        daemon_ep.Close();\n+    }\n+#endif\n     if (fRet) {\n         WaitForShutdown();\n     }\n@@ -153,10 +253,18 @@ int main(int argc, char* argv[])\n     util::WinCmdLineArgs winArgs;\n     std::tie(argc, argv) = winArgs.get();\n #endif\n+\n+    NodeContext node;\n+    int exit_status;\n+    std::unique_ptr<interfaces::Init> init = interfaces::MakeNodeInit(node, argc, argv, exit_status);\n+    if (!init) {\n+        return exit_status;\n+    }\n+\n     SetupEnvironment();\n \n     // Connect bitcoind signal handlers\n     noui_connect();\n \n-    return (AppInit(argc, argv) ? EXIT_SUCCESS : EXIT_FAILURE);\n+    return (AppInit(node, argc, argv) ? EXIT_SUCCESS : EXIT_FAILURE);\n }"
      },
      {
        "sha": "84a3a4e1e75d6d1541e41a61084f0c60aacfcf25",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -163,14 +163,27 @@ class CBlockIndex\n \n     //! Number of transactions in this block.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n+    //! Note: this value is faked during UTXO snapshot load to ensure that\n+    //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n+    //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n     //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n     //! Change to 64-bit type when necessary; won't happen before 2030\n+    //!\n+    //! Note: this value is faked during use of a UTXO snapshot because we don't\n+    //! have the underlying block data available during snapshot load.\n+    //! @sa AssumeutxoData\n+    //! @sa ActivateSnapshot\n     unsigned int nChainTx{0};\n \n     //! Verification status of this block. See enum BlockStatus\n+    //!\n+    //! Note: this value is modified to show BLOCK_OPT_WITNESS during UTXO snapshot\n+    //! load to avoid the block index being spuriously rewound.\n+    //! @sa NeedsRedownload\n+    //! @sa ActivateSnapshot\n     uint32_t nStatus{0};\n \n     //! block header"
      },
      {
        "sha": "fdaadeed4a95e729f9c621ec3068328a7ac9f0b5",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 26,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -8,9 +8,7 @@\n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n #include <hash.h> // for signet block challenge hash\n-#include <tinyformat.h>\n #include <util/system.h>\n-#include <util/strencodings.h>\n #include <versionbitsinfo.h>\n \n #include <assert.h>\n@@ -58,7 +56,7 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n }\n \n /**\n- * Main network\n+ * Main network on which people trade goods and services.\n  */\n class CMainParams : public CChainParams {\n public:\n@@ -80,16 +78,18 @@ class CMainParams : public CChainParams {\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n-        consensus.nRuleChangeActivationThreshold = 1916; // 95% of 2016\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n \n         // Deployment of Taproot (BIPs 340-342)\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n \n         consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000001533efd8d716a517fe2c5008\");\n         consensus.defaultAssumeValid = uint256S(\"0x0000000000000000000b9d2ec5a352ecba0592946514a92f14319dc2b367fc72\"); // 654683\n@@ -136,7 +136,7 @@ class CMainParams : public CChainParams {\n \n         bech32_hrp = \"bc\";\n \n-        vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n@@ -161,6 +161,10 @@ class CMainParams : public CChainParams {\n             }\n         };\n \n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n         chainTxData = ChainTxData{\n             // Data from RPC: getchaintxstats 4096 0000000000000000000b9d2ec5a352ecba0592946514a92f14319dc2b367fc72\n             /* nTime    */ 1603995752,\n@@ -171,7 +175,7 @@ class CMainParams : public CChainParams {\n };\n \n /**\n- * Testnet (v3)\n+ * Testnet (v3): public test network which is reset from time to time.\n  */\n class CTestNetParams : public CChainParams {\n public:\n@@ -196,13 +200,15 @@ class CTestNetParams : public CChainParams {\n         consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n \n         // Deployment of Taproot (BIPs 340-342)\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n \n         consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000001db6ec4ac88cf2272c6\");\n         consensus.defaultAssumeValid = uint256S(\"0x000000000000006433d1efec504c53ca332b64963c425395515b01977bd7b3b0\"); // 1864000\n@@ -237,7 +243,7 @@ class CTestNetParams : public CChainParams {\n \n         bech32_hrp = \"tb\";\n \n-        vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n@@ -250,6 +256,10 @@ class CTestNetParams : public CChainParams {\n             }\n         };\n \n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n         chainTxData = ChainTxData{\n             // Data from RPC: getchaintxstats 4096 000000000000006433d1efec504c53ca332b64963c425395515b01977bd7b3b0\n             /* nTime    */ 1603359686,\n@@ -260,7 +270,7 @@ class CTestNetParams : public CChainParams {\n };\n \n /**\n- * Signet\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n  */\n class SigNetParams : public CChainParams {\n public:\n@@ -322,18 +332,20 @@ class SigNetParams : public CChainParams {\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n-        consensus.nRuleChangeActivationThreshold = 1916; // 95% of 2016\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n         consensus.MinBIP9WarningHeight = 0;\n         consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n \n         // Activation of Taproot (BIPs 340-342)\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n \n         // message start is defined as the first 4 bytes of the sha256d of the block script\n         CHashWriter h(SER_DISK, 0);\n@@ -367,7 +379,8 @@ class SigNetParams : public CChainParams {\n };\n \n /**\n- * Regression test\n+ * Regression test: intended for private networks only. Has minimal difficulty to ensure that\n+ * blocks can be found instantly.\n  */\n class CRegTestParams : public CChainParams {\n public:\n@@ -391,12 +404,16 @@ class CRegTestParams : public CChainParams {\n         consensus.fPowNoRetargeting = true;\n         consensus.nRuleChangeActivationThreshold = 108; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 144; // Faster than normal for regtest (144 instead of 2016)\n+\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n \n         consensus.nMinimumChainWork = uint256{};\n         consensus.defaultAssumeValid = uint256{};\n@@ -406,7 +423,7 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nDefaultPort = 18444;\n-        nPruneAfterHeight = 1000;\n+        nPruneAfterHeight = args.GetBoolArg(\"-fastprune\", false) ? 100 : 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n@@ -431,6 +448,17 @@ class CRegTestParams : public CChainParams {\n             }\n         };\n \n+        m_assumeutxo_data = MapAssumeutxo{\n+            {\n+                110,\n+                {AssumeutxoHash{uint256S(\"0x1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\")}, 110},\n+            },\n+            {\n+                200,\n+                {AssumeutxoHash{uint256S(\"0x51c8d11d8b5c1de51543c579736e786aa2736206d1e11e627568029ce092cf62\")}, 200},\n+            },\n+        };\n+\n         chainTxData = ChainTxData{\n             0,\n             0,\n@@ -449,10 +477,11 @@ class CRegTestParams : public CChainParams {\n     /**\n      * Allows modifying the Version Bits regtest parameters.\n      */\n-    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout, int min_activation_height)\n     {\n         consensus.vDeployments[d].nStartTime = nStartTime;\n         consensus.vDeployments[d].nTimeout = nTimeout;\n+        consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n     void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n@@ -475,22 +504,26 @@ void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n     for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n         std::vector<std::string> vDeploymentParams;\n         boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n-        if (vDeploymentParams.size() != 3) {\n-            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+        if (vDeploymentParams.size() < 3 || 4 < vDeploymentParams.size()) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end[:min_activation_height]\");\n         }\n         int64_t nStartTime, nTimeout;\n+        int min_activation_height = 0;\n         if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n             throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n         }\n         if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n             throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n         }\n+        if (vDeploymentParams.size() >= 4 && !ParseInt32(vDeploymentParams[3], &min_activation_height)) {\n+            throw std::runtime_error(strprintf(\"Invalid min_activation_height (%s)\", vDeploymentParams[3]));\n+        }\n         bool found = false;\n         for (int j=0; j < (int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {\n             if (vDeploymentParams[0] == VersionBitsDeploymentInfo[j].name) {\n-                UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout, min_activation_height);\n                 found = true;\n-                LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld, min_activation_height=%d\\n\", vDeploymentParams[0], nStartTime, nTimeout, min_activation_height);\n                 break;\n             }\n         }"
      },
      {
        "sha": "5c2351eea69afe64967803c52ec296ca55f49e51",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 34,
        "deletions": 13,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -10,15 +10,11 @@\n #include <consensus/params.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <util/hash_type.h>\n \n #include <memory>\n #include <vector>\n \n-struct SeedSpec6 {\n-    uint8_t addr[16];\n-    uint16_t port;\n-};\n-\n typedef std::map<int, uint256> MapCheckpoints;\n \n struct CCheckpointData {\n@@ -30,6 +26,28 @@ struct CCheckpointData {\n     }\n };\n \n+struct AssumeutxoHash : public BaseHash<uint256> {\n+    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n+};\n+\n+/**\n+ * Holds configuration for use during UTXO snapshot load and validation. The contents\n+ * here are security critical, since they dictate which UTXO snapshots are recognized\n+ * as valid.\n+ */\n+struct AssumeutxoData {\n+    //! The expected hash of the deserialized UTXO set.\n+    const AssumeutxoHash hash_serialized;\n+\n+    //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n+    //!\n+    //! We need to hardcode the value here because this is computed cumulatively using block data,\n+    //! which we do not necessarily have at the time of snapshot load.\n+    const unsigned int nChainTx;\n+};\n+\n+using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n+\n /**\n  * Holds various statistics on transactions within a chain. Used to estimate\n  * verification progress during chain sync.\n@@ -44,10 +62,7 @@ struct ChainTxData {\n \n /**\n  * CChainParams defines various tweakable parameters of a given instance of the\n- * Bitcoin system. There are three: the main network on which people trade goods\n- * and services, the public test network which gets reset from time to time and\n- * a regression test mode which is intended for private networks only. It has\n- * minimal difficulty to ensure that blocks can be found instantly.\n+ * Bitcoin system.\n  */\n class CChainParams\n {\n@@ -64,7 +79,7 @@ class CChainParams\n \n     const Consensus::Params& GetConsensus() const { return consensus; }\n     const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n-    int GetDefaultPort() const { return nDefaultPort; }\n+    uint16_t GetDefaultPort() const { return nDefaultPort; }\n \n     const CBlock& GenesisBlock() const { return genesis; }\n     /** Default value for -checkmempool and -checkblockindex argument */\n@@ -88,15 +103,20 @@ class CChainParams\n     const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n     const std::string& Bech32HRP() const { return bech32_hrp; }\n-    const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n+    const std::vector<uint8_t>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n+\n+    //! Get allowed assumeutxo configuration.\n+    //! @see ChainstateManager\n+    const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n+\n     const ChainTxData& TxData() const { return chainTxData; }\n protected:\n     CChainParams() {}\n \n     Consensus::Params consensus;\n     CMessageHeader::MessageStartChars pchMessageStart;\n-    int nDefaultPort;\n+    uint16_t nDefaultPort;\n     uint64_t nPruneAfterHeight;\n     uint64_t m_assumed_blockchain_size;\n     uint64_t m_assumed_chain_state_size;\n@@ -105,12 +125,13 @@ class CChainParams\n     std::string bech32_hrp;\n     std::string strNetworkID;\n     CBlock genesis;\n-    std::vector<SeedSpec6> vFixedSeeds;\n+    std::vector<uint8_t> vFixedSeeds;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n     bool m_is_test_chain;\n     bool m_is_mockable_chain;\n     CCheckpointData checkpointData;\n+    MapAssumeutxo m_assumeutxo_data;\n     ChainTxData chainTxData;\n };\n "
      },
      {
        "sha": "e71b4bc85937511f33f7bde32a09ecb0ade339ac",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -7,7 +7,6 @@\n \n #include <tinyformat.h>\n #include <util/system.h>\n-#include <util/memory.h>\n \n #include <assert.h>\n \n@@ -23,7 +22,7 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n                  \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n-    argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-vbparams=deployment:start:end[:min_activation_height]\", \"Use given start/end times and min_activation_height for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-signet\", \"Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-signetchallenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-signetseednode\", \"Specify a seed node for the signet network, in the hostname[:port] format, e.g. sig.net:1234 (may be used multiple times to specify multiple seed nodes; defaults to the global default signet test network seed node(s))\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n@@ -44,13 +43,13 @@ const CBaseChainParams& BaseParams()\n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN) {\n-        return MakeUnique<CBaseChainParams>(\"\", 8332, 8334);\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n     } else if (chain == CBaseChainParams::TESTNET) {\n-        return MakeUnique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n     } else if (chain == CBaseChainParams::SIGNET) {\n-        return MakeUnique<CBaseChainParams>(\"signet\", 38332, 38334);\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n     } else if (chain == CBaseChainParams::REGTEST) {\n-        return MakeUnique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n     }\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }"
      },
      {
        "sha": "08587e2b37ef95b23429e63c06288fcbfb369f47",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 699,
        "deletions": 1175,
        "changes": 1874,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "d52851cadd3aa074006db77761b2b2a1f1903b35",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -97,6 +97,14 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n     cachedCoinsUsage += it->second.coin.DynamicMemoryUsage();\n }\n \n+void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n+    cachedCoinsUsage += coin.DynamicMemoryUsage();\n+    cacheCoins.emplace(\n+        std::piecewise_construct,\n+        std::forward_as_tuple(std::move(outpoint)),\n+        std::forward_as_tuple(std::move(coin), CCoinsCacheEntry::DIRTY));\n+}\n+\n void AddCoins(CCoinsViewCache& cache, const CTransaction &tx, int nHeight, bool check_for_overwrite) {\n     bool fCoinbase = tx.IsCoinBase();\n     const uint256& txid = tx.GetHash();"
      },
      {
        "sha": "816b4864a386debb1f3ae6d63c271c2b815e2ff0",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -73,6 +73,9 @@ class Coin\n         ::Unserialize(s, Using<TxOutCompression>(out));\n     }\n \n+    /** Either this coin never existed (see e.g. coinEmpty in coins.cpp), or it\n+      * did exist and has been spent.\n+      */\n     bool IsSpent() const {\n         return out.IsNull();\n     }\n@@ -125,6 +128,7 @@ struct CCoinsCacheEntry\n \n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n+    CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n };\n \n typedef std::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher> CCoinsMap;\n@@ -262,6 +266,15 @@ class CCoinsViewCache : public CCoinsViewBacked\n      */\n     void AddCoin(const COutPoint& outpoint, Coin&& coin, bool possible_overwrite);\n \n+    /**\n+     * Emplace a coin into cacheCoins without performing any checks, marking\n+     * the emplaced coin as dirty.\n+     *\n+     * NOT FOR GENERAL USE. Used only when loading coins from a UTXO snapshot.\n+     * @sa ChainstateManager::PopulateAndValidateSnapshot()\n+     */\n+    void EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin);\n+\n     /**\n      * Spend a coin. Pass moveto in order to get the deleted data.\n      * If no unspent output exists for the passed outpoint, this call"
      },
      {
        "sha": "3449bc2661cddd387bb00abce285cd9144f590d9",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -44,13 +44,22 @@ typedef unsigned int SOCKET;\n #define WSAEINVAL           EINVAL\n #define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n+#define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n #define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n+#else\n+#ifndef WSAEAGAIN\n+#ifdef EAGAIN\n+#define WSAEAGAIN EAGAIN\n+#else\n+#define WSAEAGAIN WSAEWOULDBLOCK\n+#endif\n+#endif\n #endif\n \n #ifdef WIN32\n@@ -96,4 +105,14 @@ bool static inline IsSelectableSocket(const SOCKET& s) {\n #endif\n }\n \n+// MSG_NOSIGNAL is not available on some platforms, if it doesn't exist define it as 0\n+#if !defined(MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n+\n+// MSG_DONTWAIT is not available on some platforms, if it doesn't exist define it as 0\n+#if !defined(MSG_DONTWAIT)\n+#define MSG_DONTWAIT 0\n+#endif\n+\n #endif // BITCOIN_COMPAT_H"
      },
      {
        "sha": "7a254c3b67baa074443ffc0103aca993eb40bb30",
        "filename": "src/compat/assumptions.h",
        "status": "modified",
        "additions": 5,
        "deletions": 14,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat/assumptions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat/assumptions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/assumptions.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -17,16 +17,12 @@\n # error \"Bitcoin cannot be compiled without assertions.\"\n #endif\n \n-// Assumption: We assume a C++11 (ISO/IEC 14882:2011) compiler (minimum requirement).\n-// Example(s): We assume the presence of C++11 features everywhere :-)\n-// Note:       MSVC does not report the expected __cplusplus value due to legacy\n-//             reasons.\n-#if !defined(_MSC_VER)\n-// ISO Standard C++11 [cpp.predefined]p1:\n-// \"The name __cplusplus is defined to the value 201103L when compiling a C++\n+// Assumption: We assume a C++17 (ISO/IEC 14882:2017) compiler (minimum requirement).\n+// Example(s): We assume the presence of C++17 features everywhere :-)\n+// ISO Standard C++17 [cpp.predefined]p1:\n+// \"The name __cplusplus is defined to the value 201703L when compiling a C++\n //  translation unit.\"\n-static_assert(__cplusplus >= 201103L, \"C++11 standard assumed\");\n-#endif\n+static_assert(__cplusplus >= 201703L, \"C++17 standard assumed\");\n \n // Assumption: We assume the floating-point types to fulfill the requirements of\n //             IEC 559 (IEEE 754) standard.\n@@ -40,11 +36,6 @@ static_assert(std::numeric_limits<double>::is_iec559, \"IEEE 754 double assumed\")\n // Example(s): Everywhere :-)\n static_assert(std::numeric_limits<unsigned char>::digits == 8, \"8-bit byte assumed\");\n \n-// Assumption: We assume floating-point widths.\n-// Example(s): Type punning in serialization code (ser_{float,double}_to_uint{32,64}).\n-static_assert(sizeof(float) == 4, \"32-bit float assumed\");\n-static_assert(sizeof(double) == 8, \"64-bit double assumed\");\n-\n // Assumption: We assume integer widths.\n // Example(s): GetSizeOfCompactSize and WriteCompactSize in the serialization\n //             code."
      },
      {
        "sha": "ff581d4a9e1866d980bdb6f8f87e6f6c3ec71f65",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -9,13 +9,6 @@\n #include <cstddef>\n #include <cstdint>\n \n-// Prior to GLIBC_2.14, memcpy was aliased to memmove.\n-extern \"C\" void* memmove(void* a, const void* b, size_t c);\n-extern \"C\" void* memcpy(void* a, const void* b, size_t c)\n-{\n-    return memmove(a, b, c);\n-}\n-\n #if defined(__i386__) || defined(__arm__)\n \n extern \"C\" int64_t __udivmoddi4(uint64_t u, uint64_t v, uint64_t* rp);"
      },
      {
        "sha": "06d0dd6fbabe1cfe9838f8accaa0691276bf38b7",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4793fd7da07f4e6f693d0af5ad70e04bd832cc54/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=4793fd7da07f4e6f693d0af5ad70e04bd832cc54",
        "patch": "@@ -1,45 +0,0 @@\n-// Copyright (c) 2009-2020 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n-#endif\n-\n-#include <cstddef>\n-\n-extern \"C\" void* memcpy(void* a, const void* b, size_t c);\n-void* memcpy_int(void* a, const void* b, size_t c)\n-{\n-    return memcpy(a, b, c);\n-}\n-\n-namespace\n-{\n-// trigger: Use the memcpy_int wrapper which calls our internal memcpy.\n-//   A direct call to memcpy may be optimized away by the compiler.\n-// test: Fill an array with a sequence of integers. memcpy to a new empty array.\n-//   Verify that the arrays are equal. Use an odd size to decrease the odds of\n-//   the call being optimized away.\n-template <unsigned int T>\n-bool sanity_test_memcpy()\n-{\n-    unsigned int memcpy_test[T];\n-    unsigned int memcpy_verify[T] = {};\n-    for (unsigned int i = 0; i != T; ++i)\n-        memcpy_test[i] = i;\n-\n-    memcpy_int(memcpy_verify, memcpy_test, sizeof(memcpy_test));\n-\n-    for (unsigned int i = 0; i != T; ++i) {\n-        if (memcpy_verify[i] != i)\n-            return false;\n-    }\n-    return true;\n-}\n-} // namespace\n-\n-bool glibc_sanity_test()\n-{\n-    return sanity_test_memcpy<1025>();\n-}"
      },
      {
        "sha": "8efa41610262ed7a72d738a413984b3aac550528",
        "filename": "src/compat/sanity.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat/sanity.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compat/sanity.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/sanity.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -5,7 +5,6 @@\n #ifndef BITCOIN_COMPAT_SANITY_H\n #define BITCOIN_COMPAT_SANITY_H\n \n-bool glibc_sanity_test();\n bool glibcxx_sanity_test();\n \n #endif // BITCOIN_COMPAT_SANITY_H"
      },
      {
        "sha": "a161c428668008f1ef87f251ac8242a55a688214",
        "filename": "src/compressor.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compressor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compressor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -52,7 +52,7 @@ static bool IsToPubKey(const CScript& script, CPubKey &pubkey)\n     return false;\n }\n \n-bool CompressScript(const CScript& script, std::vector<unsigned char> &out)\n+bool CompressScript(const CScript& script, CompressedScript& out)\n {\n     CKeyID keyID;\n     if (IsToKeyID(script, keyID)) {\n@@ -92,7 +92,7 @@ unsigned int GetSpecialScriptSize(unsigned int nSize)\n     return 0;\n }\n \n-bool DecompressScript(CScript& script, unsigned int nSize, const std::vector<unsigned char> &in)\n+bool DecompressScript(CScript& script, unsigned int nSize, const CompressedScript& in)\n {\n     switch(nSize) {\n     case 0x00:\n@@ -124,7 +124,7 @@ bool DecompressScript(CScript& script, unsigned int nSize, const std::vector<uns\n         unsigned char vch[33] = {};\n         vch[0] = nSize - 2;\n         memcpy(&vch[1], in.data(), 32);\n-        CPubKey pubkey(&vch[0], &vch[33]);\n+        CPubKey pubkey{vch};\n         if (!pubkey.Decompress())\n             return false;\n         assert(pubkey.size() == 65);"
      },
      {
        "sha": "40b2496f06e81c0eb345c830d4372bad87441146",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -6,14 +6,26 @@\n #ifndef BITCOIN_COMPRESSOR_H\n #define BITCOIN_COMPRESSOR_H\n \n+#include <prevector.h>\n #include <primitives/transaction.h>\n #include <script/script.h>\n #include <serialize.h>\n #include <span.h>\n \n-bool CompressScript(const CScript& script, std::vector<unsigned char> &out);\n+/**\n+ * This saves us from making many heap allocations when serializing\n+ * and deserializing compressed scripts.\n+ *\n+ * This prevector size is determined by the largest .resize() in the\n+ * CompressScript function. The largest compressed script format is a\n+ * compressed public key, which is 33 bytes.\n+ */\n+using CompressedScript = prevector<33, unsigned char>;\n+\n+\n+bool CompressScript(const CScript& script, CompressedScript& out);\n unsigned int GetSpecialScriptSize(unsigned int nSize);\n-bool DecompressScript(CScript& script, unsigned int nSize, const std::vector<unsigned char> &out);\n+bool DecompressScript(CScript& script, unsigned int nSize, const CompressedScript& in);\n \n /**\n  * Compress amount.\n@@ -51,7 +63,7 @@ struct ScriptCompression\n \n     template<typename Stream>\n     void Ser(Stream &s, const CScript& script) {\n-        std::vector<unsigned char> compr;\n+        CompressedScript compr;\n         if (CompressScript(script, compr)) {\n             s << MakeSpan(compr);\n             return;\n@@ -66,7 +78,7 @@ struct ScriptCompression\n         unsigned int nSize = 0;\n         s >> VARINT(nSize);\n         if (nSize < nSpecialScripts) {\n-            std::vector<unsigned char> vch(GetSpecialScriptSize(nSize), 0x00);\n+            CompressedScript vch(GetSpecialScriptSize(nSize), 0x00);\n             s >> MakeSpan(vch);\n             DecompressScript(script, nSize, vch);\n             return;"
      },
      {
        "sha": "28c95e0884150851ce68d2ba4dece86249169cde",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -29,6 +29,11 @@ struct BIP9Deployment {\n     int64_t nStartTime;\n     /** Timeout/expiry MedianTime for the deployment attempt. */\n     int64_t nTimeout;\n+    /** If lock in occurs, delay activation until at least this block\n+     *  height.  Note that activation will only occur on a retarget\n+     *  boundary.\n+     */\n+    int min_activation_height{0};\n \n     /** Constant for nTimeout very far in the future. */\n     static constexpr int64_t NO_TIMEOUT = std::numeric_limits<int64_t>::max();\n@@ -38,6 +43,11 @@ struct BIP9Deployment {\n      *  process (which takes at least 3 BIP9 intervals). Only tests that specifically test the\n      *  behaviour during activation cannot use this. */\n     static constexpr int64_t ALWAYS_ACTIVE = -1;\n+\n+    /** Special value for nStartTime indicating that the deployment is never active.\n+     *  This is useful for integrating the code changes for a new feature\n+     *  prior to deploying it on some or all networks. */\n+    static constexpr int64_t NEVER_ACTIVE = -2;\n };\n \n /**"
      },
      {
        "sha": "d5fd43e1314bc9632130fec4671681ca57733c55",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -24,7 +24,7 @@ namespace Consensus {\n  * @param[out] txfee Set to the transaction fee if successful.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee);\n+[[nodiscard]] bool CheckTxInputs(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee);\n } // namespace Consensus\n \n /** Auxiliary functions for transaction validation (ideally should not be exposed) */"
      },
      {
        "sha": "3b9b66574cf7277b0af813d17c2afa0ce007c6fd",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -40,12 +40,12 @@ std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strN\n int ParseSighashString(const UniValue& sighash);\n \n // core_write.cpp\n-UniValue ValueFromAmount(const CAmount& amount);\n+UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex, bool include_addresses);\n void ScriptToUniv(const CScript& script, UniValue& out, bool include_address);\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, bool include_addresses, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "61089610106782fed53d06f0e238a5a9f4ad5348",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -260,6 +260,7 @@ int ParseSighashString(const UniValue& sighash)\n     int hash_type = SIGHASH_ALL;\n     if (!sighash.isNull()) {\n         static std::map<std::string, int> map_sighash_values = {\n+            {std::string(\"DEFAULT\"), int(SIGHASH_DEFAULT)},\n             {std::string(\"ALL\"), int(SIGHASH_ALL)},\n             {std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY)},\n             {std::string(\"NONE\"), int(SIGHASH_NONE)},"
      },
      {
        "sha": "b35f835f422088dccee490262a5a6e4b3fb3999d",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 15,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -14,17 +14,20 @@\n #include <undo.h>\n #include <univalue.h>\n #include <util/check.h>\n-#include <util/system.h>\n #include <util/strencodings.h>\n+#include <util/system.h>\n \n-UniValue ValueFromAmount(const CAmount& amount)\n+UniValue ValueFromAmount(const CAmount amount)\n {\n-    bool sign = amount < 0;\n-    int64_t n_abs = (sign ? -amount : amount);\n-    int64_t quotient = n_abs / COIN;\n-    int64_t remainder = n_abs % COIN;\n+    static_assert(COIN > 1);\n+    int64_t quotient = amount / COIN;\n+    int64_t remainder = amount % COIN;\n+    if (amount < 0) {\n+        quotient = -quotient;\n+        remainder = -remainder;\n+    }\n     return UniValue(UniValue::VNUM,\n-            strprintf(\"%s%d.%08d\", sign ? \"-\" : \"\", quotient, remainder));\n+            strprintf(\"%s%d.%08d\", amount < 0 ? \"-\" : \"\", quotient, remainder));\n }\n \n std::string FormatScript(const CScript& script)\n@@ -153,10 +156,13 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_address)\n     }\n }\n \n+// TODO: from v23 (\"addresses\" and \"reqSigs\" deprecated) this method should be refactored to remove the `include_addresses` option\n+// this method can also be combined with `ScriptToUniv` as they will overlap\n void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n-                        UniValue& out, bool fIncludeHex)\n+                        UniValue& out, bool fIncludeHex, bool include_addresses)\n {\n     TxoutType type;\n+    CTxDestination address;\n     std::vector<CTxDestination> addresses;\n     int nRequired;\n \n@@ -169,17 +175,22 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n         return;\n     }\n \n-    out.pushKV(\"reqSigs\", nRequired);\n+    if (ExtractDestination(scriptPubKey, address)) {\n+        out.pushKV(\"address\", EncodeDestination(address));\n+    }\n     out.pushKV(\"type\", GetTxnOutputType(type));\n \n-    UniValue a(UniValue::VARR);\n-    for (const CTxDestination& addr : addresses) {\n-        a.push_back(EncodeDestination(addr));\n+    if (include_addresses) {\n+        UniValue a(UniValue::VARR);\n+        for (const CTxDestination& addr : addresses) {\n+            a.push_back(EncodeDestination(addr));\n+        }\n+        out.pushKV(\"addresses\", a);\n+        out.pushKV(\"reqSigs\", nRequired);\n     }\n-    out.pushKV(\"addresses\", a);\n }\n \n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo)\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, bool include_addresses, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo)\n {\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n@@ -238,7 +249,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n-        ScriptPubKeyToUniv(txout.scriptPubKey, o, true);\n+        ScriptPubKeyToUniv(txout.scriptPubKey, o, true, include_addresses);\n         out.pushKV(\"scriptPubKey\", o);\n         vout.push_back(out);\n "
      },
      {
        "sha": "a2b769cd5664697437c86f26ed98ee2a7bac4ad3",
        "filename": "src/crypto/muhash.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 18,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/crypto/muhash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/crypto/muhash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/muhash.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -17,7 +17,6 @@ namespace {\n using limb_t = Num3072::limb_t;\n using double_limb_t = Num3072::double_limb_t;\n constexpr int LIMB_SIZE = Num3072::LIMB_SIZE;\n-constexpr int LIMBS = Num3072::LIMBS;\n /** 2^3072 - 1103717, the largest 3072-bit safe prime number, is used as the modulus. */\n constexpr limb_t MAX_PRIME_DIFF = 1103717;\n \n@@ -123,7 +122,7 @@ inline void square_n_mul(Num3072& in_out, const int sq, const Num3072& mul)\n \n } // namespace\n \n-/** Indicates wether d is larger than the modulus. */\n+/** Indicates whether d is larger than the modulus. */\n bool Num3072::IsOverflow() const\n {\n     if (this->limbs[0] <= std::numeric_limits<limb_t>::max() - MAX_PRIME_DIFF) return false;\n@@ -276,18 +275,33 @@ void Num3072::Divide(const Num3072& a)\n     if (this->IsOverflow()) this->FullReduce();\n }\n \n-Num3072 MuHash3072::ToNum3072(Span<const unsigned char> in) {\n-    Num3072 out{};\n-    uint256 hashed_in = (CHashWriter(SER_DISK, 0) << in).GetSHA256();\n-    unsigned char tmp[BYTE_SIZE];\n-    ChaCha20(hashed_in.data(), hashed_in.size()).Keystream(tmp, BYTE_SIZE);\n+Num3072::Num3072(const unsigned char (&data)[BYTE_SIZE]) {\n+    for (int i = 0; i < LIMBS; ++i) {\n+        if (sizeof(limb_t) == 4) {\n+            this->limbs[i] = ReadLE32(data + 4 * i);\n+        } else if (sizeof(limb_t) == 8) {\n+            this->limbs[i] = ReadLE64(data + 8 * i);\n+        }\n+    }\n+}\n+\n+void Num3072::ToBytes(unsigned char (&out)[BYTE_SIZE]) {\n     for (int i = 0; i < LIMBS; ++i) {\n         if (sizeof(limb_t) == 4) {\n-            out.limbs[i] = ReadLE32(tmp + 4 * i);\n+            WriteLE32(out + i * 4, this->limbs[i]);\n         } else if (sizeof(limb_t) == 8) {\n-            out.limbs[i] = ReadLE64(tmp + 8 * i);\n+            WriteLE64(out + i * 8, this->limbs[i]);\n         }\n     }\n+}\n+\n+Num3072 MuHash3072::ToNum3072(Span<const unsigned char> in) {\n+    unsigned char tmp[Num3072::BYTE_SIZE];\n+\n+    uint256 hashed_in = (CHashWriter(SER_DISK, 0) << in).GetSHA256();\n+    ChaCha20(hashed_in.data(), hashed_in.size()).Keystream(tmp, Num3072::BYTE_SIZE);\n+    Num3072 out{tmp};\n+\n     return out;\n }\n \n@@ -301,14 +315,8 @@ void MuHash3072::Finalize(uint256& out) noexcept\n     m_numerator.Divide(m_denominator);\n     m_denominator.SetToOne();  // Needed to keep the MuHash object valid\n \n-    unsigned char data[384];\n-    for (int i = 0; i < LIMBS; ++i) {\n-        if (sizeof(limb_t) == 4) {\n-            WriteLE32(data + i * 4, m_numerator.limbs[i]);\n-        } else if (sizeof(limb_t) == 8) {\n-            WriteLE64(data + i * 8, m_numerator.limbs[i]);\n-        }\n-    }\n+    unsigned char data[Num3072::BYTE_SIZE];\n+    m_numerator.ToBytes(data);\n \n     out = (CHashWriter(SER_DISK, 0) << data).GetSHA256();\n }\n@@ -333,6 +341,6 @@ MuHash3072& MuHash3072::Insert(Span<const unsigned char> in) noexcept {\n }\n \n MuHash3072& MuHash3072::Remove(Span<const unsigned char> in) noexcept {\n-    m_numerator.Divide(ToNum3072(in));\n+    m_denominator.Multiply(ToNum3072(in));\n     return *this;\n }"
      },
      {
        "sha": "c023a8b9d3f2a55a0bc6a612763763b8aa206769",
        "filename": "src/crypto/muhash.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/crypto/muhash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/crypto/muhash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/muhash.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -22,6 +22,7 @@ class Num3072\n     Num3072 GetInverse() const;\n \n public:\n+    static constexpr size_t BYTE_SIZE = 384;\n \n #ifdef HAVE___INT128\n     typedef unsigned __int128 double_limb_t;\n@@ -48,8 +49,10 @@ class Num3072\n     void Divide(const Num3072& a);\n     void SetToOne();\n     void Square();\n+    void ToBytes(unsigned char (&out)[BYTE_SIZE]);\n \n     Num3072() { this->SetToOne(); };\n+    Num3072(const unsigned char (&data)[BYTE_SIZE]);\n \n     SERIALIZE_METHODS(Num3072, obj)\n     {\n@@ -78,7 +81,7 @@ class Num3072\n  * arbitrary subset of the update operations, allowing them to be\n  * efficiently combined later.\n  *\n- * Muhash does not support checking if an element is already part of the\n+ * MuHash does not support checking if an element is already part of the\n  * set. That is why this class does not enforce the use of a set as the\n  * data it represents because there is no efficient way to do so.\n  * It is possible to add elements more than once and also to remove\n@@ -91,8 +94,6 @@ class Num3072\n class MuHash3072\n {\n private:\n-    static constexpr size_t BYTE_SIZE = 384;\n-\n     Num3072 m_numerator;\n     Num3072 m_denominator;\n "
      },
      {
        "sha": "3a1086bf4c5a77c7b44c904b0355294868ceae97",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -220,10 +220,9 @@ const unsigned int CDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n  */\n std::vector<unsigned char> CDBWrapper::CreateObfuscateKey() const\n {\n-    unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n-    GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n-    return std::vector<unsigned char>(&buff[0], &buff[OBFUSCATE_KEY_NUM_BYTES]);\n-\n+    std::vector<uint8_t> ret(OBFUSCATE_KEY_NUM_BYTES);\n+    GetRandBytes(ret.data(), OBFUSCATE_KEY_NUM_BYTES);\n+    return ret;\n }\n \n bool CDBWrapper::IsEmpty()"
      },
      {
        "sha": "95886d31385dea876628c2b4a3ffeec88973f36a",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -38,6 +38,7 @@ void DummyWalletInit::AddWalletOptions(ArgsManager& argsman) const\n         \"-paytxfee=<amt>\",\n         \"-rescan\",\n         \"-salvagewallet\",\n+        \"-signer=<cmd>\",\n         \"-spendzeroconfchange\",\n         \"-txconfirmtarget=<n>\",\n         \"-wallet=<path>\",\n@@ -49,6 +50,7 @@ void DummyWalletInit::AddWalletOptions(ArgsManager& argsman) const\n         \"-flushwallet\",\n         \"-privdb\",\n         \"-walletrejectlongchains\",\n+        \"-unsafesqlitesync\",\n     });\n }\n "
      },
      {
        "sha": "d6388b759add7a0d2fec1244574353156554f52d",
        "filename": "src/external_signer.cpp",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,116 @@\n+// Copyright (c) 2018-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <core_io.h>\n+#include <psbt.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <external_signer.h>\n+\n+#include <stdexcept>\n+#include <string>\n+#include <vector>\n+\n+ExternalSigner::ExternalSigner(const std::string& command, const std::string chain, const std::string& fingerprint, const std::string name): m_command(command), m_chain(chain), m_fingerprint(fingerprint), m_name(name) {}\n+\n+const std::string ExternalSigner::NetworkArg() const\n+{\n+    return \" --chain \" + m_chain;\n+}\n+\n+bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, const std::string chain)\n+{\n+    // Call <command> enumerate\n+    const UniValue result = RunCommandParseJSON(command + \" enumerate\");\n+    if (!result.isArray()) {\n+        throw std::runtime_error(strprintf(\"'%s' received invalid response, expected array of signers\", command));\n+    }\n+    for (UniValue signer : result.getValues()) {\n+        // Check for error\n+        const UniValue& error = find_value(signer, \"error\");\n+        if (!error.isNull()) {\n+            if (!error.isStr()) {\n+                throw std::runtime_error(strprintf(\"'%s' error\", command));\n+            }\n+            throw std::runtime_error(strprintf(\"'%s' error: %s\", command, error.getValStr()));\n+        }\n+        // Check if fingerprint is present\n+        const UniValue& fingerprint = find_value(signer, \"fingerprint\");\n+        if (fingerprint.isNull()) {\n+            throw std::runtime_error(strprintf(\"'%s' received invalid response, missing signer fingerprint\", command));\n+        }\n+        const std::string fingerprintStr = fingerprint.get_str();\n+        // Skip duplicate signer\n+        bool duplicate = false;\n+        for (const ExternalSigner& signer : signers) {\n+            if (signer.m_fingerprint.compare(fingerprintStr) == 0) duplicate = true;\n+        }\n+        if (duplicate) break;\n+        std::string name = \"\";\n+        const UniValue& model_field = find_value(signer, \"model\");\n+        if (model_field.isStr() && model_field.getValStr() != \"\") {\n+            name += model_field.getValStr();\n+        }\n+        signers.push_back(ExternalSigner(command, chain, fingerprintStr, name));\n+    }\n+    return true;\n+}\n+\n+UniValue ExternalSigner::DisplayAddress(const std::string& descriptor) const\n+{\n+    return RunCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg() + \" displayaddress --desc \\\"\" + descriptor + \"\\\"\");\n+}\n+\n+UniValue ExternalSigner::GetDescriptors(const int account)\n+{\n+    return RunCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg() + \" getdescriptors --account \" + strprintf(\"%d\", account));\n+}\n+\n+bool ExternalSigner::SignTransaction(PartiallySignedTransaction& psbtx, std::string& error)\n+{\n+    // Serialize the PSBT\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    ssTx << psbtx;\n+\n+    // Check if signer fingerprint matches any input master key fingerprint\n+    bool match = false;\n+    for (unsigned int i = 0; i < psbtx.inputs.size(); ++i) {\n+        const PSBTInput& input = psbtx.inputs[i];\n+        for (const auto& entry : input.hd_keypaths) {\n+            if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) match = true;\n+        }\n+    }\n+\n+    if (!match) {\n+        error = \"Signer fingerprint \" + m_fingerprint + \" does not match any of the inputs:\\n\" + EncodeBase64(ssTx.str());\n+        return false;\n+    }\n+\n+    const std::string command = m_command + \" --stdin --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg();\n+    const std::string stdinStr = \"signtx \\\"\" + EncodeBase64(ssTx.str()) + \"\\\"\";\n+\n+    const UniValue signer_result = RunCommandParseJSON(command, stdinStr);\n+\n+    if (find_value(signer_result, \"error\").isStr()) {\n+        error = find_value(signer_result, \"error\").get_str();\n+        return false;\n+    }\n+\n+    if (!find_value(signer_result, \"psbt\").isStr()) {\n+        error = \"Unexpected result from signer\";\n+        return false;\n+    }\n+\n+    PartiallySignedTransaction signer_psbtx;\n+    std::string signer_psbt_error;\n+    if (!DecodeBase64PSBT(signer_psbtx, find_value(signer_result, \"psbt\").get_str(), signer_psbt_error)) {\n+        error = strprintf(\"TX decode failed %s\", signer_psbt_error);\n+        return false;\n+    }\n+\n+    psbtx = signer_psbtx;\n+\n+    return true;\n+}"
      },
      {
        "sha": "e40fd7f010738daafe5257235213501ae2c0248a",
        "filename": "src/external_signer.h",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_EXTERNAL_SIGNER_H\n+#define BITCOIN_EXTERNAL_SIGNER_H\n+\n+#include <univalue.h>\n+#include <util/system.h>\n+\n+#include <string>\n+#include <vector>\n+\n+struct PartiallySignedTransaction;\n+\n+//! Enables interaction with an external signing device or service, such as\n+//! a hardware wallet. See doc/external-signer.md\n+class ExternalSigner\n+{\n+private:\n+    //! The command which handles interaction with the external signer.\n+    std::string m_command;\n+\n+    //! Bitcoin mainnet, testnet, etc\n+    std::string m_chain;\n+\n+    const std::string NetworkArg() const;\n+\n+public:\n+    //! @param[in] command      the command which handles interaction with the external signer\n+    //! @param[in] fingerprint  master key fingerprint of the signer\n+    //! @param[in] chain        \"main\", \"test\", \"regtest\" or \"signet\"\n+    //! @param[in] name         device name\n+    ExternalSigner(const std::string& command, const std::string chain, const std::string& fingerprint, const std::string name);\n+\n+    //! Master key fingerprint of the signer\n+    std::string m_fingerprint;\n+\n+    //! Name of signer\n+    std::string m_name;\n+\n+    //! Obtain a list of signers. Calls `<command> enumerate`.\n+    //! @param[in]              command the command which handles interaction with the external signer\n+    //! @param[in,out] signers  vector to which new signers (with a unique master key fingerprint) are added\n+    //! @param chain            \"main\", \"test\", \"regtest\" or \"signet\"\n+    //! @returns success\n+    static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, const std::string chain);\n+\n+    //! Display address on the device. Calls `<command> displayaddress --desc <descriptor>`.\n+    //! @param[in] descriptor Descriptor specifying which address to display.\n+    //!            Must include a public key or xpub, as well as key origin.\n+    UniValue DisplayAddress(const std::string& descriptor) const;\n+\n+    //! Get receive and change Descriptor(s) from device for a given account.\n+    //! Calls `<command> getdescriptors --account <account>`\n+    //! @param[in] account  which BIP32 account to use (e.g. `m/44'/0'/account'`)\n+    //! @returns see doc/external-signer.md\n+    UniValue GetDescriptors(const int account);\n+\n+    //! Sign PartiallySignedTransaction on the device.\n+    //! Calls `<command> signtransaction` and passes the PSBT via stdin.\n+    //! @param[in,out] psbt  PartiallySignedTransaction to be signed\n+    bool SignTransaction(PartiallySignedTransaction& psbt, std::string& error);\n+};\n+\n+#endif // BITCOIN_EXTERNAL_SIGNER_H"
      },
      {
        "sha": "151f1a38f1781477692d20e88d48a21b5e81f6e3",
        "filename": "src/flatfile.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/flatfile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/flatfile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/flatfile.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -66,7 +66,7 @@ size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_\n         if (CheckDiskSpace(m_dir, inc_size)) {\n             FILE *file = Open(pos);\n             if (file) {\n-                LogPrintf(\"Pre-allocating up to position 0x%x in %s%05u.dat\\n\", new_size, m_prefix, pos.nFile);\n+                LogPrint(BCLog::VALIDATION, \"Pre-allocating up to position 0x%x in %s%05u.dat\\n\", new_size, m_prefix, pos.nFile);\n                 AllocateFileRange(file, pos.nPos, inc_size);\n                 fclose(file);\n                 return inc_size;"
      },
      {
        "sha": "e11e4acb5c2dd0b6c64a8d6560049e48e86bb25c",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -144,7 +144,7 @@ static bool RPCAuthorized(const std::string& strAuth, std::string& strAuthUserna\n     return multiUserAuthorized(strUserPass);\n }\n \n-static bool HTTPReq_JSONRPC(const util::Ref& context, HTTPRequest* req)\n+static bool HTTPReq_JSONRPC(const std::any& context, HTTPRequest* req)\n {\n     // JSONRPC handles only POST\n     if (req->GetRequestMethod() != HTTPRequest::POST) {\n@@ -159,7 +159,8 @@ static bool HTTPReq_JSONRPC(const util::Ref& context, HTTPRequest* req)\n         return false;\n     }\n \n-    JSONRPCRequest jreq(context);\n+    JSONRPCRequest jreq;\n+    jreq.context = context;\n     jreq.peerAddr = req->GetPeer().ToString();\n     if (!RPCAuthorized(authHeader.second, jreq.authUser)) {\n         LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", jreq.peerAddr);\n@@ -288,20 +289,20 @@ static bool InitRPCAuthentication()\n     return true;\n }\n \n-bool StartHTTPRPC(const util::Ref& context)\n+bool StartHTTPRPC(const std::any& context)\n {\n     LogPrint(BCLog::RPC, \"Starting HTTP RPC server\\n\");\n     if (!InitRPCAuthentication())\n         return false;\n \n-    auto handle_rpc = [&context](HTTPRequest* req, const std::string&) { return HTTPReq_JSONRPC(context, req); };\n+    auto handle_rpc = [context](HTTPRequest* req, const std::string&) { return HTTPReq_JSONRPC(context, req); };\n     RegisterHTTPHandler(\"/\", true, handle_rpc);\n     if (g_wallet_init_interface.HasWalletSupport()) {\n         RegisterHTTPHandler(\"/wallet/\", false, handle_rpc);\n     }\n     struct event_base* eventBase = EventBase();\n     assert(eventBase);\n-    httpRPCTimerInterface = MakeUnique<HTTPRPCTimerInterface>(eventBase);\n+    httpRPCTimerInterface = std::make_unique<HTTPRPCTimerInterface>(eventBase);\n     RPCSetTimerInterface(httpRPCTimerInterface.get());\n     return true;\n }"
      },
      {
        "sha": "5a3b99064669af51cf20d3f97aeb4125ea809a97",
        "filename": "src/httprpc.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/httprpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/httprpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -5,14 +5,12 @@\n #ifndef BITCOIN_HTTPRPC_H\n #define BITCOIN_HTTPRPC_H\n \n-namespace util {\n-class Ref;\n-} // namespace util\n+#include <any>\n \n /** Start HTTP RPC subsystem.\n  * Precondition; HTTP and RPC has been started.\n  */\n-bool StartHTTPRPC(const util::Ref& context);\n+bool StartHTTPRPC(const std::any& context);\n /** Interrupt HTTP RPC subsystem.\n  */\n void InterruptHTTPRPC();\n@@ -24,7 +22,7 @@ void StopHTTPRPC();\n /** Start HTTP REST subsystem.\n  * Precondition; HTTP and RPC has been started.\n  */\n-void StartREST(const util::Ref& context);\n+void StartREST(const std::any& context);\n /** Interrupt RPC REST subsystem.\n  */\n void InterruptREST();"
      },
      {
        "sha": "b3984a43bb1dcd859cb998d55e556811f8979dbb",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -63,12 +63,11 @@ template <typename WorkItem>\n class WorkQueue\n {\n private:\n-    /** Mutex protects entire object */\n     Mutex cs;\n-    std::condition_variable cond;\n-    std::deque<std::unique_ptr<WorkItem>> queue;\n-    bool running;\n-    size_t maxDepth;\n+    std::condition_variable cond GUARDED_BY(cs);\n+    std::deque<std::unique_ptr<WorkItem>> queue GUARDED_BY(cs);\n+    bool running GUARDED_BY(cs);\n+    const size_t maxDepth;\n \n public:\n     explicit WorkQueue(size_t _maxDepth) : running(true),\n@@ -84,7 +83,7 @@ class WorkQueue\n     bool Enqueue(WorkItem* item)\n     {\n         LOCK(cs);\n-        if (queue.size() >= maxDepth) {\n+        if (!running || queue.size() >= maxDepth) {\n             return false;\n         }\n         queue.emplace_back(std::unique_ptr<WorkItem>(item));\n@@ -100,7 +99,7 @@ class WorkQueue\n                 WAIT_LOCK(cs, lock);\n                 while (running && queue.empty())\n                     cond.wait(lock);\n-                if (!running)\n+                if (!running && queue.empty())\n                     break;\n                 i = std::move(queue.front());\n                 queue.pop_front();\n@@ -262,7 +261,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n             item.release(); /* if true, queue took ownership */\n         else {\n             LogPrintf(\"WARNING: request rejected because http work queue depth exceeded, it can be increased with the -rpcworkqueue= setting\\n\");\n-            item->req->WriteReply(HTTP_INTERNAL_SERVER_ERROR, \"Work queue depth exceeded\");\n+            item->req->WriteReply(HTTP_SERVICE_UNAVAILABLE, \"Work queue depth exceeded\");\n         }\n     } else {\n         hreq->WriteReply(HTTP_NOT_FOUND);\n@@ -290,8 +289,8 @@ static bool ThreadHTTP(struct event_base* base)\n /** Bind HTTP server to specified addresses */\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n-    int http_port = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n-    std::vector<std::pair<std::string, uint16_t> > endpoints;\n+    uint16_t http_port{static_cast<uint16_t>(gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort()))};\n+    std::vector<std::pair<std::string, uint16_t>> endpoints;\n \n     // Determine what addresses to bind to\n     if (!(gArgs.IsArgSet(\"-rpcallowip\") && gArgs.IsArgSet(\"-rpcbind\"))) { // Default to loopback if not allowing external IPs\n@@ -305,7 +304,7 @@ static bool HTTPBindAddresses(struct evhttp* http)\n         }\n     } else if (gArgs.IsArgSet(\"-rpcbind\")) { // Specific bind address\n         for (const std::string& strRPCBind : gArgs.GetArgs(\"-rpcbind\")) {\n-            int port = http_port;\n+            uint16_t port{http_port};\n             std::string host;\n             SplitHostPort(strRPCBind, port, host);\n             endpoints.push_back(std::make_pair(host, port));\n@@ -449,8 +448,6 @@ void StopHTTPServer()\n             thread.join();\n         }\n         g_thread_http_workers.clear();\n-        delete workQueue;\n-        workQueue = nullptr;\n     }\n     // Unlisten sockets, these are what make the event loop running, which means\n     // that after this and all connections are closed the event loop will quit.\n@@ -470,6 +467,10 @@ void StopHTTPServer()\n         event_base_free(eventBase);\n         eventBase = nullptr;\n     }\n+    if (workQueue) {\n+        delete workQueue;\n+        workQueue = nullptr;\n+    }\n     LogPrint(BCLog::HTTP, \"Stopped HTTP server\\n\");\n }\n "
      },
      {
        "sha": "2ae164633b9b912680a477c4809d45c204fc8938",
        "filename": "src/i2p.cpp",
        "status": "added",
        "additions": 411,
        "deletions": 0,
        "changes": 411,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/i2p.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/i2p.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/i2p.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,411 @@\n+// Copyright (c) 2020-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <compat.h>\n+#include <compat/endian.h>\n+#include <crypto/sha256.h>\n+#include <fs.h>\n+#include <i2p.h>\n+#include <logging.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <random.h>\n+#include <util/strencodings.h>\n+#include <tinyformat.h>\n+#include <util/readwritefile.h>\n+#include <util/sock.h>\n+#include <util/spanparsing.h>\n+#include <util/system.h>\n+\n+#include <chrono>\n+#include <memory>\n+#include <stdexcept>\n+#include <string>\n+\n+namespace i2p {\n+\n+/**\n+ * Swap Standard Base64 <-> I2P Base64.\n+ * Standard Base64 uses `+` and `/` as last two characters of its alphabet.\n+ * I2P Base64 uses `-` and `~` respectively.\n+ * So it is easy to detect in which one is the input and convert to the other.\n+ * @param[in] from Input to convert.\n+ * @return converted `from`\n+ */\n+static std::string SwapBase64(const std::string& from)\n+{\n+    std::string to;\n+    to.resize(from.size());\n+    for (size_t i = 0; i < from.size(); ++i) {\n+        switch (from[i]) {\n+        case '-':\n+            to[i] = '+';\n+            break;\n+        case '~':\n+            to[i] = '/';\n+            break;\n+        case '+':\n+            to[i] = '-';\n+            break;\n+        case '/':\n+            to[i] = '~';\n+            break;\n+        default:\n+            to[i] = from[i];\n+            break;\n+        }\n+    }\n+    return to;\n+}\n+\n+/**\n+ * Decode an I2P-style Base64 string.\n+ * @param[in] i2p_b64 I2P-style Base64 string.\n+ * @return decoded `i2p_b64`\n+ * @throw std::runtime_error if decoding fails\n+ */\n+static Binary DecodeI2PBase64(const std::string& i2p_b64)\n+{\n+    const std::string& std_b64 = SwapBase64(i2p_b64);\n+    bool invalid;\n+    Binary decoded = DecodeBase64(std_b64.c_str(), &invalid);\n+    if (invalid) {\n+        throw std::runtime_error(strprintf(\"Cannot decode Base64: \\\"%s\\\"\", i2p_b64));\n+    }\n+    return decoded;\n+}\n+\n+/**\n+ * Derive the .b32.i2p address of an I2P destination (binary).\n+ * @param[in] dest I2P destination.\n+ * @return the address that corresponds to `dest`\n+ * @throw std::runtime_error if conversion fails\n+ */\n+static CNetAddr DestBinToAddr(const Binary& dest)\n+{\n+    CSHA256 hasher;\n+    hasher.Write(dest.data(), dest.size());\n+    unsigned char hash[CSHA256::OUTPUT_SIZE];\n+    hasher.Finalize(hash);\n+\n+    CNetAddr addr;\n+    const std::string addr_str = EncodeBase32(hash, false) + \".b32.i2p\";\n+    if (!addr.SetSpecial(addr_str)) {\n+        throw std::runtime_error(strprintf(\"Cannot parse I2P address: \\\"%s\\\"\", addr_str));\n+    }\n+\n+    return addr;\n+}\n+\n+/**\n+ * Derive the .b32.i2p address of an I2P destination (I2P-style Base64).\n+ * @param[in] dest I2P destination.\n+ * @return the address that corresponds to `dest`\n+ * @throw std::runtime_error if conversion fails\n+ */\n+static CNetAddr DestB64ToAddr(const std::string& dest)\n+{\n+    const Binary& decoded = DecodeI2PBase64(dest);\n+    return DestBinToAddr(decoded);\n+}\n+\n+namespace sam {\n+\n+Session::Session(const fs::path& private_key_file,\n+                 const CService& control_host,\n+                 CThreadInterrupt* interrupt)\n+    : m_private_key_file(private_key_file), m_control_host(control_host), m_interrupt(interrupt),\n+      m_control_sock(std::make_unique<Sock>(INVALID_SOCKET))\n+{\n+}\n+\n+Session::~Session()\n+{\n+    LOCK(m_mutex);\n+    Disconnect();\n+}\n+\n+bool Session::Listen(Connection& conn)\n+{\n+    try {\n+        LOCK(m_mutex);\n+        CreateIfNotCreatedAlready();\n+        conn.me = m_my_addr;\n+        conn.sock = StreamAccept();\n+        return true;\n+    } catch (const std::runtime_error& e) {\n+        Log(\"Error listening: %s\", e.what());\n+        CheckControlSock();\n+    }\n+    return false;\n+}\n+\n+bool Session::Accept(Connection& conn)\n+{\n+    try {\n+        while (!*m_interrupt) {\n+            Sock::Event occurred;\n+            if (!conn.sock->Wait(MAX_WAIT_FOR_IO, Sock::RECV, &occurred)) {\n+                throw std::runtime_error(\"wait on socket failed\");\n+            }\n+\n+            if ((occurred & Sock::RECV) == 0) {\n+                // Timeout, no incoming connections within MAX_WAIT_FOR_IO.\n+                continue;\n+            }\n+\n+            const std::string& peer_dest =\n+                conn.sock->RecvUntilTerminator('\\n', MAX_WAIT_FOR_IO, *m_interrupt, MAX_MSG_SIZE);\n+\n+            conn.peer = CService(DestB64ToAddr(peer_dest), Params().GetDefaultPort());\n+\n+            return true;\n+        }\n+    } catch (const std::runtime_error& e) {\n+        Log(\"Error accepting: %s\", e.what());\n+        CheckControlSock();\n+    }\n+    return false;\n+}\n+\n+bool Session::Connect(const CService& to, Connection& conn, bool& proxy_error)\n+{\n+    proxy_error = true;\n+\n+    std::string session_id;\n+    std::unique_ptr<Sock> sock;\n+    conn.peer = to;\n+\n+    try {\n+        {\n+            LOCK(m_mutex);\n+            CreateIfNotCreatedAlready();\n+            session_id = m_session_id;\n+            conn.me = m_my_addr;\n+            sock = Hello();\n+        }\n+\n+        const Reply& lookup_reply =\n+            SendRequestAndGetReply(*sock, strprintf(\"NAMING LOOKUP NAME=%s\", to.ToStringIP()));\n+\n+        const std::string& dest = lookup_reply.Get(\"VALUE\");\n+\n+        const Reply& connect_reply = SendRequestAndGetReply(\n+            *sock, strprintf(\"STREAM CONNECT ID=%s DESTINATION=%s SILENT=false\", session_id, dest),\n+            false);\n+\n+        const std::string& result = connect_reply.Get(\"RESULT\");\n+\n+        if (result == \"OK\") {\n+            conn.sock = std::move(sock);\n+            return true;\n+        }\n+\n+        if (result == \"INVALID_ID\") {\n+            LOCK(m_mutex);\n+            Disconnect();\n+            throw std::runtime_error(\"Invalid session id\");\n+        }\n+\n+        if (result == \"CANT_REACH_PEER\" || result == \"TIMEOUT\") {\n+            proxy_error = false;\n+        }\n+\n+        throw std::runtime_error(strprintf(\"\\\"%s\\\"\", connect_reply.full));\n+    } catch (const std::runtime_error& e) {\n+        Log(\"Error connecting to %s: %s\", to.ToString(), e.what());\n+        CheckControlSock();\n+        return false;\n+    }\n+}\n+\n+// Private methods\n+\n+std::string Session::Reply::Get(const std::string& key) const\n+{\n+    const auto& pos = keys.find(key);\n+    if (pos == keys.end() || !pos->second.has_value()) {\n+        throw std::runtime_error(\n+            strprintf(\"Missing %s= in the reply to \\\"%s\\\": \\\"%s\\\"\", key, request, full));\n+    }\n+    return pos->second.value();\n+}\n+\n+template <typename... Args>\n+void Session::Log(const std::string& fmt, const Args&... args) const\n+{\n+    LogPrint(BCLog::I2P, \"I2P: %s\\n\", tfm::format(fmt, args...));\n+}\n+\n+Session::Reply Session::SendRequestAndGetReply(const Sock& sock,\n+                                               const std::string& request,\n+                                               bool check_result_ok) const\n+{\n+    sock.SendComplete(request + \"\\n\", MAX_WAIT_FOR_IO, *m_interrupt);\n+\n+    Reply reply;\n+\n+    // Don't log the full \"SESSION CREATE ...\" because it contains our private key.\n+    reply.request = request.substr(0, 14) == \"SESSION CREATE\" ? \"SESSION CREATE ...\" : request;\n+\n+    // It could take a few minutes for the I2P router to reply as it is querying the I2P network\n+    // (when doing name lookup, for example). Notice: `RecvUntilTerminator()` is checking\n+    // `m_interrupt` more often, so we would not be stuck here for long if `m_interrupt` is\n+    // signaled.\n+    static constexpr auto recv_timeout = 3min;\n+\n+    reply.full = sock.RecvUntilTerminator('\\n', recv_timeout, *m_interrupt, MAX_MSG_SIZE);\n+\n+    for (const auto& kv : spanparsing::Split(reply.full, ' ')) {\n+        const auto& pos = std::find(kv.begin(), kv.end(), '=');\n+        if (pos != kv.end()) {\n+            reply.keys.emplace(std::string{kv.begin(), pos}, std::string{pos + 1, kv.end()});\n+        } else {\n+            reply.keys.emplace(std::string{kv.begin(), kv.end()}, std::nullopt);\n+        }\n+    }\n+\n+    if (check_result_ok && reply.Get(\"RESULT\") != \"OK\") {\n+        throw std::runtime_error(\n+            strprintf(\"Unexpected reply to \\\"%s\\\": \\\"%s\\\"\", request, reply.full));\n+    }\n+\n+    return reply;\n+}\n+\n+std::unique_ptr<Sock> Session::Hello() const\n+{\n+    auto sock = CreateSock(m_control_host);\n+\n+    if (!sock) {\n+        throw std::runtime_error(\"Cannot create socket\");\n+    }\n+\n+    if (!ConnectSocketDirectly(m_control_host, *sock, nConnectTimeout, true)) {\n+        throw std::runtime_error(strprintf(\"Cannot connect to %s\", m_control_host.ToString()));\n+    }\n+\n+    SendRequestAndGetReply(*sock, \"HELLO VERSION MIN=3.1 MAX=3.1\");\n+\n+    return sock;\n+}\n+\n+void Session::CheckControlSock()\n+{\n+    LOCK(m_mutex);\n+\n+    std::string errmsg;\n+    if (!m_control_sock->IsConnected(errmsg)) {\n+        Log(\"Control socket error: %s\", errmsg);\n+        Disconnect();\n+    }\n+}\n+\n+void Session::DestGenerate(const Sock& sock)\n+{\n+    // https://geti2p.net/spec/common-structures#key-certificates\n+    // \"7\" or \"EdDSA_SHA512_Ed25519\" - \"Recent Router Identities and Destinations\".\n+    // Use \"7\" because i2pd <2.24.0 does not recognize the textual form.\n+    const Reply& reply = SendRequestAndGetReply(sock, \"DEST GENERATE SIGNATURE_TYPE=7\", false);\n+\n+    m_private_key = DecodeI2PBase64(reply.Get(\"PRIV\"));\n+}\n+\n+void Session::GenerateAndSavePrivateKey(const Sock& sock)\n+{\n+    DestGenerate(sock);\n+\n+    // umask is set to 077 in init.cpp, which is ok (unless -sysperms is given)\n+    if (!WriteBinaryFile(m_private_key_file,\n+                         std::string(m_private_key.begin(), m_private_key.end()))) {\n+        throw std::runtime_error(\n+            strprintf(\"Cannot save I2P private key to %s\", m_private_key_file));\n+    }\n+}\n+\n+Binary Session::MyDestination() const\n+{\n+    // From https://geti2p.net/spec/common-structures#destination:\n+    // \"They are 387 bytes plus the certificate length specified at bytes 385-386, which may be\n+    // non-zero\"\n+    static constexpr size_t DEST_LEN_BASE = 387;\n+    static constexpr size_t CERT_LEN_POS = 385;\n+\n+    uint16_t cert_len;\n+    memcpy(&cert_len, &m_private_key.at(CERT_LEN_POS), sizeof(cert_len));\n+    cert_len = be16toh(cert_len);\n+\n+    const size_t dest_len = DEST_LEN_BASE + cert_len;\n+\n+    return Binary{m_private_key.begin(), m_private_key.begin() + dest_len};\n+}\n+\n+void Session::CreateIfNotCreatedAlready()\n+{\n+    std::string errmsg;\n+    if (m_control_sock->IsConnected(errmsg)) {\n+        return;\n+    }\n+\n+    Log(\"Creating SAM session with %s\", m_control_host.ToString());\n+\n+    auto sock = Hello();\n+\n+    const auto& [read_ok, data] = ReadBinaryFile(m_private_key_file);\n+    if (read_ok) {\n+        m_private_key.assign(data.begin(), data.end());\n+    } else {\n+        GenerateAndSavePrivateKey(*sock);\n+    }\n+\n+    const std::string& session_id = GetRandHash().GetHex().substr(0, 10); // full is an overkill, too verbose in the logs\n+    const std::string& private_key_b64 = SwapBase64(EncodeBase64(m_private_key));\n+\n+    SendRequestAndGetReply(*sock, strprintf(\"SESSION CREATE STYLE=STREAM ID=%s DESTINATION=%s\",\n+                                            session_id, private_key_b64));\n+\n+    m_my_addr = CService(DestBinToAddr(MyDestination()), Params().GetDefaultPort());\n+    m_session_id = session_id;\n+    m_control_sock = std::move(sock);\n+\n+    LogPrintf(\"I2P: SAM session created: session id=%s, my address=%s\\n\", m_session_id,\n+              m_my_addr.ToString());\n+}\n+\n+std::unique_ptr<Sock> Session::StreamAccept()\n+{\n+    auto sock = Hello();\n+\n+    const Reply& reply = SendRequestAndGetReply(\n+        *sock, strprintf(\"STREAM ACCEPT ID=%s SILENT=false\", m_session_id), false);\n+\n+    const std::string& result = reply.Get(\"RESULT\");\n+\n+    if (result == \"OK\") {\n+        return sock;\n+    }\n+\n+    if (result == \"INVALID_ID\") {\n+        // If our session id is invalid, then force session re-creation on next usage.\n+        Disconnect();\n+    }\n+\n+    throw std::runtime_error(strprintf(\"\\\"%s\\\"\", reply.full));\n+}\n+\n+void Session::Disconnect()\n+{\n+    if (m_control_sock->Get() != INVALID_SOCKET) {\n+        if (m_session_id.empty()) {\n+            Log(\"Destroying incomplete session\");\n+        } else {\n+            Log(\"Destroying session %s\", m_session_id);\n+        }\n+    }\n+    m_control_sock->Reset();\n+    m_session_id.clear();\n+}\n+} // namespace sam\n+} // namespace i2p"
      },
      {
        "sha": "cb2efedba8b24d310543d4d7e37a4ef5c3750d40",
        "filename": "src/i2p.h",
        "status": "added",
        "additions": 270,
        "deletions": 0,
        "changes": 270,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/i2p.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/i2p.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/i2p.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -0,0 +1,270 @@\n+// Copyright (c) 2020-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_I2P_H\n+#define BITCOIN_I2P_H\n+\n+#include <compat.h>\n+#include <fs.h>\n+#include <netaddress.h>\n+#include <sync.h>\n+#include <threadinterrupt.h>\n+#include <util/sock.h>\n+\n+#include <memory>\n+#include <optional>\n+#include <string>\n+#include <unordered_map>\n+#include <vector>\n+\n+namespace i2p {\n+\n+/**\n+ * Binary data.\n+ */\n+using Binary = std::vector<uint8_t>;\n+\n+/**\n+ * An established connection with another peer.\n+ */\n+struct Connection {\n+    /** Connected socket. */\n+    std::unique_ptr<Sock> sock;\n+\n+    /** Our I2P address. */\n+    CService me;\n+\n+    /** The peer's I2P address. */\n+    CService peer;\n+};\n+\n+namespace sam {\n+\n+/**\n+ * The maximum size of an incoming message from the I2P SAM proxy (in bytes).\n+ * Used to avoid a runaway proxy from sending us an \"unlimited\" amount of data without a terminator.\n+ * The longest known message is ~1400 bytes, so this is high enough not to be triggered during\n+ * normal operation, yet low enough to avoid a malicious proxy from filling our memory.\n+ */\n+static constexpr size_t MAX_MSG_SIZE{65536};\n+\n+/**\n+ * I2P SAM session.\n+ */\n+class Session\n+{\n+public:\n+    /**\n+     * Construct a session. This will not initiate any IO, the session will be lazily created\n+     * later when first used.\n+     * @param[in] private_key_file Path to a private key file. If the file does not exist then the\n+     * private key will be generated and saved into the file.\n+     * @param[in] control_host Location of the SAM proxy.\n+     * @param[in,out] interrupt If this is signaled then all operations are canceled as soon as\n+     * possible and executing methods throw an exception. Notice: only a pointer to the\n+     * `CThreadInterrupt` object is saved, so it must not be destroyed earlier than this\n+     * `Session` object.\n+     */\n+    Session(const fs::path& private_key_file,\n+            const CService& control_host,\n+            CThreadInterrupt* interrupt);\n+\n+    /**\n+     * Destroy the session, closing the internally used sockets. The sockets that have been\n+     * returned by `Accept()` or `Connect()` will not be closed, but they will be closed by\n+     * the SAM proxy because the session is destroyed. So they will return an error next time\n+     * we try to read or write to them.\n+     */\n+    ~Session();\n+\n+    /**\n+     * Start listening for an incoming connection.\n+     * @param[out] conn Upon successful completion the `sock` and `me` members will be set\n+     * to the listening socket and address.\n+     * @return true on success\n+     */\n+    bool Listen(Connection& conn);\n+\n+    /**\n+     * Wait for and accept a new incoming connection.\n+     * @param[in,out] conn The `sock` member is used for waiting and accepting. Upon successful\n+     * completion the `peer` member will be set to the address of the incoming peer.\n+     * @return true on success\n+     */\n+    bool Accept(Connection& conn);\n+\n+    /**\n+     * Connect to an I2P peer.\n+     * @param[in] to Peer to connect to.\n+     * @param[out] conn Established connection. Only set if `true` is returned.\n+     * @param[out] proxy_error If an error occurs due to proxy or general network failure, then\n+     * this is set to `true`. If an error occurs due to unreachable peer (likely peer is down), then\n+     * it is set to `false`. Only set if `false` is returned.\n+     * @return true on success\n+     */\n+    bool Connect(const CService& to, Connection& conn, bool& proxy_error);\n+\n+private:\n+    /**\n+     * A reply from the SAM proxy.\n+     */\n+    struct Reply {\n+        /**\n+         * Full, unparsed reply.\n+         */\n+        std::string full;\n+\n+        /**\n+         * Request, used for detailed error reporting.\n+         */\n+        std::string request;\n+\n+        /**\n+         * A map of keywords from the parsed reply.\n+         * For example, if the reply is \"A=X B C=YZ\", then the map will be\n+         * keys[\"A\"] == \"X\"\n+         * keys[\"B\"] == (empty std::optional)\n+         * keys[\"C\"] == \"YZ\"\n+         */\n+        std::unordered_map<std::string, std::optional<std::string>> keys;\n+\n+        /**\n+         * Get the value of a given key.\n+         * For example if the reply is \"A=X B\" then:\n+         * Value(\"A\") -> \"X\"\n+         * Value(\"B\") -> throws\n+         * Value(\"C\") -> throws\n+         * @param[in] key Key whose value to retrieve\n+         * @returns the key's value\n+         * @throws std::runtime_error if the key is not present or if it has no value\n+         */\n+        std::string Get(const std::string& key) const;\n+    };\n+\n+    /**\n+     * Log a message in the `BCLog::I2P` category.\n+     * @param[in] fmt printf(3)-like format string.\n+     * @param[in] args printf(3)-like arguments that correspond to `fmt`.\n+     */\n+    template <typename... Args>\n+    void Log(const std::string& fmt, const Args&... args) const;\n+\n+    /**\n+     * Send request and get a reply from the SAM proxy.\n+     * @param[in] sock A socket that is connected to the SAM proxy.\n+     * @param[in] request Raw request to send, a newline terminator is appended to it.\n+     * @param[in] check_result_ok If true then after receiving the reply a check is made\n+     * whether it contains \"RESULT=OK\" and an exception is thrown if it does not.\n+     * @throws std::runtime_error if an error occurs\n+     */\n+    Reply SendRequestAndGetReply(const Sock& sock,\n+                                 const std::string& request,\n+                                 bool check_result_ok = true) const;\n+\n+    /**\n+     * Open a new connection to the SAM proxy.\n+     * @return a connected socket\n+     * @throws std::runtime_error if an error occurs\n+     */\n+    std::unique_ptr<Sock> Hello() const EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * Check the control socket for errors and possibly disconnect.\n+     */\n+    void CheckControlSock();\n+\n+    /**\n+     * Generate a new destination with the SAM proxy and set `m_private_key` to it.\n+     * @param[in] sock Socket to use for talking to the SAM proxy.\n+     * @throws std::runtime_error if an error occurs\n+     */\n+    void DestGenerate(const Sock& sock) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * Generate a new destination with the SAM proxy, set `m_private_key` to it and save\n+     * it on disk to `m_private_key_file`.\n+     * @param[in] sock Socket to use for talking to the SAM proxy.\n+     * @throws std::runtime_error if an error occurs\n+     */\n+    void GenerateAndSavePrivateKey(const Sock& sock) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * Derive own destination from `m_private_key`.\n+     * @see https://geti2p.net/spec/common-structures#destination\n+     * @return an I2P destination\n+     */\n+    Binary MyDestination() const EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * Create the session if not already created. Reads the private key file and connects to the\n+     * SAM proxy.\n+     * @throws std::runtime_error if an error occurs\n+     */\n+    void CreateIfNotCreatedAlready() EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * Open a new connection to the SAM proxy and issue \"STREAM ACCEPT\" request using the existing\n+     * session id.\n+     * @return the idle socket that is waiting for a peer to connect to us\n+     * @throws std::runtime_error if an error occurs\n+     */\n+    std::unique_ptr<Sock> StreamAccept() EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * Destroy the session, closing the internally used sockets.\n+     */\n+    void Disconnect() EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n+    /**\n+     * The name of the file where this peer's private key is stored (in binary).\n+     */\n+    const fs::path m_private_key_file;\n+\n+    /**\n+     * The host and port of the SAM control service.\n+     */\n+    const CService m_control_host;\n+\n+    /**\n+     * Cease network activity when this is signaled.\n+     */\n+    CThreadInterrupt* const m_interrupt;\n+\n+    /**\n+     * Mutex protecting the members that can be concurrently accessed.\n+     */\n+    mutable Mutex m_mutex;\n+\n+    /**\n+     * The private key of this peer.\n+     * @see The reply to the \"DEST GENERATE\" command in https://geti2p.net/en/docs/api/samv3\n+     */\n+    Binary m_private_key GUARDED_BY(m_mutex);\n+\n+    /**\n+     * SAM control socket.\n+     * Used to connect to the I2P SAM service and create a session\n+     * (\"SESSION CREATE\"). With the established session id we later open\n+     * other connections to the SAM service to accept incoming I2P\n+     * connections and make outgoing ones.\n+     * See https://geti2p.net/en/docs/api/samv3\n+     */\n+    std::unique_ptr<Sock> m_control_sock GUARDED_BY(m_mutex);\n+\n+    /**\n+     * Our .b32.i2p address.\n+     * Derived from `m_private_key`.\n+     */\n+    CService m_my_addr GUARDED_BY(m_mutex);\n+\n+    /**\n+     * SAM session id.\n+     */\n+    std::string m_session_id GUARDED_BY(m_mutex);\n+};\n+\n+} // namespace sam\n+} // namespace i2p\n+\n+#endif /* BITCOIN_I2P_H */"
      },
      {
        "sha": "6fd2701e2e8e30f4595ae67df1154ec0ab89a656",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 19,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -4,15 +4,16 @@\n \n #include <chainparams.h>\n #include <index/base.h>\n+#include <node/blockstorage.h>\n #include <node/ui_interface.h>\n #include <shutdown.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n+#include <util/thread.h>\n #include <util/translation.h>\n-#include <validation.h>\n+#include <validation.h> // For g_chainman\n #include <warnings.h>\n \n-constexpr char DB_BEST_BLOCK = 'B';\n+constexpr uint8_t DB_BEST_BLOCK{'B'};\n \n constexpr int64_t SYNC_LOG_INTERVAL = 30; // seconds\n constexpr int64_t SYNC_LOCATOR_WRITE_INTERVAL = 30; // seconds\n@@ -59,29 +60,65 @@ bool BaseIndex::Init()\n     }\n \n     LOCK(cs_main);\n+    CChain& active_chain = m_chainstate->m_chain;\n     if (locator.IsNull()) {\n         m_best_block_index = nullptr;\n     } else {\n-        m_best_block_index = g_chainman.m_blockman.FindForkInGlobalIndex(::ChainActive(), locator);\n+        m_best_block_index = m_chainstate->m_blockman.FindForkInGlobalIndex(active_chain, locator);\n+    }\n+    m_synced = m_best_block_index.load() == active_chain.Tip();\n+    if (!m_synced) {\n+        bool prune_violation = false;\n+        if (!m_best_block_index) {\n+            // index is not built yet\n+            // make sure we have all block data back to the genesis\n+            const CBlockIndex* block = active_chain.Tip();\n+            while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n+                block = block->pprev;\n+            }\n+            prune_violation = block != active_chain.Genesis();\n+        }\n+        // in case the index has a best block set and is not fully synced\n+        // check if we have the required blocks to continue building the index\n+        else {\n+            const CBlockIndex* block_to_test = m_best_block_index.load();\n+            if (!active_chain.Contains(block_to_test)) {\n+                // if the bestblock is not part of the mainchain, find the fork\n+                // and make sure we have all data down to the fork\n+                block_to_test = active_chain.FindFork(block_to_test);\n+            }\n+            const CBlockIndex* block = active_chain.Tip();\n+            prune_violation = true;\n+            // check backwards from the tip if we have all block data until we reach the indexes bestblock\n+            while (block_to_test && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n+                if (block_to_test == block) {\n+                    prune_violation = false;\n+                    break;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        if (prune_violation) {\n+            return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n+        }\n     }\n-    m_synced = m_best_block_index.load() == ::ChainActive().Tip();\n     return true;\n }\n \n-static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev, CChain& chain) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     AssertLockHeld(cs_main);\n \n     if (!pindex_prev) {\n-        return ::ChainActive().Genesis();\n+        return chain.Genesis();\n     }\n \n-    const CBlockIndex* pindex = ::ChainActive().Next(pindex_prev);\n+    const CBlockIndex* pindex = chain.Next(pindex_prev);\n     if (pindex) {\n         return pindex;\n     }\n \n-    return ::ChainActive().Next(::ChainActive().FindFork(pindex_prev));\n+    return chain.Next(chain.FindFork(pindex_prev));\n }\n \n void BaseIndex::ThreadSync()\n@@ -104,7 +141,7 @@ void BaseIndex::ThreadSync()\n \n             {\n                 LOCK(cs_main);\n-                const CBlockIndex* pindex_next = NextSyncBlock(pindex);\n+                const CBlockIndex* pindex_next = NextSyncBlock(pindex, m_chainstate->m_chain);\n                 if (!pindex_next) {\n                     m_best_block_index = pindex;\n                     m_synced = true;\n@@ -167,7 +204,7 @@ bool BaseIndex::Commit()\n bool BaseIndex::CommitInternal(CDBBatch& batch)\n {\n     LOCK(cs_main);\n-    GetDB().WriteBestBlock(batch, ::ChainActive().GetLocator(m_best_block_index));\n+    GetDB().WriteBestBlock(batch, m_chainstate->m_chain.GetLocator(m_best_block_index));\n     return true;\n }\n \n@@ -177,6 +214,10 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     assert(current_tip->GetAncestor(new_tip->nHeight) == new_tip);\n \n     // In the case of a reorg, ensure persisted block locator is not stale.\n+    // Pruning has a minimum of 288 blocks-to-keep and getting the index\n+    // out of sync may be possible but a users fault.\n+    // In case we reorg beyond the pruned depth, ReadBlockFromDisk would\n+    // throw and lead to a graceful shutdown\n     m_best_block_index = new_tip;\n     if (!Commit()) {\n         // If commit fails, revert the best block index to avoid corruption.\n@@ -239,7 +280,7 @@ void BaseIndex::ChainStateFlushed(const CBlockLocator& locator)\n     const CBlockIndex* locator_tip_index;\n     {\n         LOCK(cs_main);\n-        locator_tip_index = g_chainman.m_blockman.LookupBlockIndex(locator_tip_hash);\n+        locator_tip_index = m_chainstate->m_blockman.LookupBlockIndex(locator_tip_hash);\n     }\n \n     if (!locator_tip_index) {\n@@ -280,7 +321,7 @@ bool BaseIndex::BlockUntilSyncedToCurrentChain() const\n         // Skip the queue-draining stuff if we know we're caught up with\n         // ::ChainActive().Tip().\n         LOCK(cs_main);\n-        const CBlockIndex* chain_tip = ::ChainActive().Tip();\n+        const CBlockIndex* chain_tip = m_chainstate->m_chain.Tip();\n         const CBlockIndex* best_block_index = m_best_block_index.load();\n         if (best_block_index->GetAncestor(chain_tip->nHeight) == chain_tip) {\n             return true;\n@@ -297,18 +338,18 @@ void BaseIndex::Interrupt()\n     m_interrupt();\n }\n \n-void BaseIndex::Start()\n+bool BaseIndex::Start(CChainState& active_chainstate)\n {\n+    m_chainstate = &active_chainstate;\n     // Need to register this ValidationInterface before running Init(), so that\n     // callbacks are not missed if Init sets m_synced to true.\n     RegisterValidationInterface(this);\n     if (!Init()) {\n-        FatalError(\"%s: %s failed to initialize\", __func__, GetName());\n-        return;\n+        return false;\n     }\n \n-    m_thread_sync = std::thread(&TraceThread<std::function<void()>>, GetName(),\n-                                std::bind(&BaseIndex::ThreadSync, this));\n+    m_thread_sync = std::thread(&util::TraceThread, GetName(), [this] { ThreadSync(); });\n+    return true;\n }\n \n void BaseIndex::Stop()\n@@ -325,6 +366,6 @@ IndexSummary BaseIndex::GetSummary() const\n     IndexSummary summary{};\n     summary.name = GetName();\n     summary.synced = m_synced;\n-    summary.best_block_height = m_best_block_index.load()->nHeight;\n+    summary.best_block_height = m_best_block_index ? m_best_block_index.load()->nHeight : 0;\n     return summary;\n }"
      },
      {
        "sha": "df4bdff1eaa78d1378943d795051d07f019bb03d",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "patch": "@@ -12,6 +12,7 @@\n #include <validationinterface.h>\n \n class CBlockIndex;\n+class CChainState;\n \n struct IndexSummary {\n     std::string name;\n@@ -75,14 +76,17 @@ class BaseIndex : public CValidationInterface\n     /// to a chain reorganization), the index must halt until Commit succeeds or else it could end up\n     /// getting corrupted.\n     bool Commit();\n-\n protected:\n+    CChainState* m_chainstate{nullptr};\n+\n     void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex) override;\n \n     void ChainStateFlushed(const CBlockLocator& locator) override;\n \n+    const CBlockIndex* CurrentIndex() { return m_best_block_index.load(); };\n+\n     /// Initialize internal state from the database and block index.\n-    virtual bool Init();\n+    [[nodiscard]] virtual bool Init();\n \n     /// Write update index entries for a newly connected block.\n     virtual bool WriteBlock(const CBlock& block, const CBlockIndex* pindex) { return true; }\n@@ -109,13 +113,13 @@ class BaseIndex : public CValidationInterface\n     /// sync once and only needs to process blocks in the ValidationInterface\n     /// queue. If the index is catching up from far behind, this method does\n     /// not block and immediately returns false.\n-    bool BlockUntilSyncedToCurrentChain() const;\n+    bool BlockUntilSyncedToCurrentChain() const LOCKS_EXCLUDED(::cs_main);\n \n     void Interrupt();\n \n     /// Start initializes the sync state and registers the instance as a\n     /// ValidationInterface so that it stays in sync with blockchain updates.\n-    void Start();\n+    [[nodiscard]] bool Start(CChainState& active_chainstate);\n \n     /// Stops the instance from staying in sync with blockchain updates.\n     void Stop();"
      },
      {
        "sha": "b4857767322c436319dacfae6fd391e0e390eae2",
        "filename": "src/index/blockfilterindex.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/blockfilterindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/blockfilterindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/blockfilterindex.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "8c6046489b4928459411709163d063c7fb17ef66",
        "filename": "src/index/coinstatsindex.cpp",
        "status": "added",
        "additions": 472,
        "deletions": 0,
        "changes": 472,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/coinstatsindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/coinstatsindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "6149f9b4b3d5dec08ac29a5fcb89b23951d88c29",
        "filename": "src/index/coinstatsindex.h",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/coinstatsindex.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/coinstatsindex.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "782e55747818fbefb53a4c51e46aea4343f586f0",
        "filename": "src/index/txindex.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/txindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/index/txindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/txindex.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "4dc82811f9ed72a26b4c09a3803a47def1452f35",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 122,
        "deletions": 340,
        "changes": 462,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "b856468e5d16ef56f9f733bb0cd467ad2571b817",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "6b6157c139242c63c53e930d08fc1422dcd20793",
        "filename": "src/init/bitcoin-node.cpp",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/bitcoin-node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/bitcoin-node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/bitcoin-node.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "1d4504c24f6e6f55418f718023836fd147457861",
        "filename": "src/init/bitcoind.cpp",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/bitcoind.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "5c1f469081e14245a3bc7924c3bd28231daacc22",
        "filename": "src/init/common.cpp",
        "status": "added",
        "additions": 167,
        "deletions": 0,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "fc4bc1b28009ee65fa95436fa13517a8551eb9a1",
        "filename": "src/init/common.h",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "97167d5298f0f042efea8295abd5545547dae72c",
        "filename": "src/interfaces/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "7cac435e9632b45b28cf9667f5c01408cd8bfcd7",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "9bbb42217b02687a219367a1fe9e9a8694b64212",
        "filename": "src/interfaces/echo.cpp",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/echo.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/echo.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/echo.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "5578d9d9e62395805cb819508704906f3b4e2d5f",
        "filename": "src/interfaces/echo.h",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/echo.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/echo.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/echo.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "c6bbbed4450dca9d1b69d20988f3d31654421df5",
        "filename": "src/interfaces/handler.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/handler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/handler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "a3c949e6169d1d230a15d725eeb191410eb6c5df",
        "filename": "src/interfaces/init.cpp",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/init.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "2a38054a172fb285c5522b50b2d689103ede01ae",
        "filename": "src/interfaces/init.h",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/init.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "e9e6c78053d3e3a0ea411c28ba47c84c657cd992",
        "filename": "src/interfaces/ipc.h",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/ipc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/ipc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/ipc.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "77129423db9b2f7e7e23b60ec0142f1a74a855d1",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "fb1febc11b6db5c0162dc40bd0d5dc896191f6e2",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "036df1430c5610b5286a9f675c7a5906f95b647f",
        "filename": "src/ipc/capnp/.gitignore",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/capnp/.gitignore?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "df36ee0de376c2e7aab19dd80ae4b33e1d53d373",
        "filename": "src/ipc/capnp/echo.capnp",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/echo.capnp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/echo.capnp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/capnp/echo.capnp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "42031441b597c5795ed96ce1d513938d19e2e1e1",
        "filename": "src/ipc/capnp/init-types.h",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/init-types.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/init-types.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/capnp/init-types.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "e6d358c66556e4f5f0914b58ba3716dd7b140d7c",
        "filename": "src/ipc/capnp/init.capnp",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/init.capnp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/init.capnp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/capnp/init.capnp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "74c66c899acf488a7e35334a2a052545ac287da0",
        "filename": "src/ipc/capnp/protocol.cpp",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/capnp/protocol.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "eb057949d28f61f1d14311e412f0b694f6bcca19",
        "filename": "src/ipc/capnp/protocol.h",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/capnp/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/capnp/protocol.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "53dee8124ae374407673c4497cb7209e3040915d",
        "filename": "src/ipc/exception.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/exception.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/exception.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/exception.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "ad4b78ed8126259fcb07cebfeda475060b1c41d4",
        "filename": "src/ipc/interfaces.cpp",
        "status": "added",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/interfaces.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "43ed1f1baeb0205a10dfc901b04e18dc90f7114e",
        "filename": "src/ipc/process.cpp",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/process.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/process.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/process.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "4bb2930d9c3d00428ec3cd1639f67312a8149699",
        "filename": "src/ipc/process.h",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/process.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/process.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/process.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "af955b000786e55df99f039c5557bdbe048962f2",
        "filename": "src/ipc/protocol.h",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/ipc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipc/protocol.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "dcad386e7718428c05072694d1a6f1bbdf41aef6",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "d47e54800cc154b720c179e207188f8772be0464",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "615f4c93126f04148ece8315dca16e1f7c010897",
        "filename": "src/key_io.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 12,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "e5187fd5962da8dff2b610950fbd8ae1128d3843",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "d04bc992680d6d8f8e67af6354c3202eeb44b01a",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "135efb561e14c0fc1a3618b093520685b5120f90",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "0cf303eb3c422ab5e23334ba6a67345f0f7a8836",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "10a80f4392e227be574483f71005be60694890e2",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "60059249ed0d1e9ab3e89c63cbd9fe4d2d7b41a0",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 418,
        "deletions": 293,
        "changes": 711,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "01658e8973bd0c77a22c9e2e027b70dbb08b95c4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 128,
        "deletions": 149,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "d0a45f90fab2bdd19e3c8135cd4f30ef2fe3565f",
        "filename": "src/net_permissions.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_permissions.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_permissions.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "c00689465e17b90199d0e6199452c3ee66fb6296",
        "filename": "src/net_permissions.h",
        "status": "modified",
        "additions": 31,
        "deletions": 17,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_permissions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_permissions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "9bb3dfdcf36dcff8096564482a286ce7b0feb1ed",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 995,
        "deletions": 1033,
        "changes": 2028,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "d5801aadd343b2ded464193dedda0ef92b299fc3",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "1ea3969978daa45e5b593854d92868db7d335d4b",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 135,
        "deletions": 84,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "dd47ab5749f0d04690a2ddd5929922f5234c15af",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 51,
        "deletions": 17,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "2980bdf4592338b9dfd90ea24357ba997c10d016",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 145,
        "deletions": 349,
        "changes": 494,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "6a87c338a07b9942b12406b3c6a98977aea6ae6c",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 194,
        "deletions": 16,
        "changes": 210,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "ab5979594d480675f77b285c457309df7fa9219b",
        "filename": "src/node/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/README.md?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "013d61282b1fbec7bf0cd35f76a6c46e82a7661c",
        "filename": "src/node/blockstorage.cpp",
        "status": "added",
        "additions": 565,
        "deletions": 0,
        "changes": 565,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "faf99dea818404aaf34f888a6834b80f44992b84",
        "filename": "src/node/blockstorage.h",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/blockstorage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/blockstorage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "50fddf3ab0dc3877a54615f68781906434457a6a",
        "filename": "src/node/coin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/coin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/coin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coin.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "67e497c218aaaedcac98fd5f9970759391f8870b",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 88,
        "deletions": 31,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "8be256edc93584d31e4c6c744c829244fd1e29ef",
        "filename": "src/node/coinstats.h",
        "status": "modified",
        "additions": 29,
        "deletions": 1,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "9afadd09a97edfa1e3a741b3e0c24a94f231b96f",
        "filename": "src/node/context.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/context.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/context.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "135f9ea1c6a68d5866b9833a3c1fa1b2d1eb05c9",
        "filename": "src/node/context.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.h?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "fce3c1809c30211e1cd9e0a25e93dda69f62540e",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 75,
        "deletions": 38,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      },
      {
        "sha": "b013b6d579381cf3c7b1efb85dd375acf53944a8",
        "filename": "src/node/psbt.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6205f6136cf260d0a857f09d8b80d77fca7a81/src/node/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/psbt.cpp?ref=fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      }
    ]
  },
  {
    "sha": "1df68defdc187ee722a8bcbf9f2e92ad412ce35a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGY2OGRlZmRjMTg3ZWU3MjJhOGJjYmY5ZjJlOTJhZDQxMmNlMzVh",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T19:10:40Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-06-21T19:10:40Z"
      },
      "message": "Update CryptoGraphyBTC\n\n.",
      "tree": {
        "sha": "42eec3e3b3a00f7ac2d6c15f368c32c42378cd32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42eec3e3b3a00f7ac2d6c15f368c32c42378cd32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1df68defdc187ee722a8bcbf9f2e92ad412ce35a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0OQwCRBK7hj4Ov3rIwAAwzAIAHRjPJi9kuIATcVhdMsNwQn9\nKGTfT9IszyazueQo9nbBOLmQUh4ctWMQJpTyIvxhD/bw/ZsyIoZ41IDTaR6NsFEj\nj6bwuCGzMyhDfFBGCC2ArH+fRkzJzmkRdtEsVAyqENYjK09NuwKpjtdqr3DY6Ow+\npT6E50k1MSNzJA1Qj7Z0oI//K9pn1PCpuj3AFmBPTLd66QWPlsv1XTY+vexwXMye\nLZ64+SaTk8abJdhyd/eOk87kyjzjud++HD7Gvit8uOJXJgupoEKXFzoaHIGdPG4w\nT4mnRLbE0RxxCNgIesrTSp0rGlW7jkq8lxHKWLQ1xwt5+pARUuD2gWQT9nwOEh4=\n=FSvG\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 42eec3e3b3a00f7ac2d6c15f368c32c42378cd32\nparent fd6205f6136cf260d0a857f09d8b80d77fca7a81\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1624302640 -0300\ncommitter GitHub <noreply@github.com> 1624302640 -0300\n\nUpdate CryptoGraphyBTC\n\n."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df68defdc187ee722a8bcbf9f2e92ad412ce35a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1df68defdc187ee722a8bcbf9f2e92ad412ce35a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df68defdc187ee722a8bcbf9f2e92ad412ce35a/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6205f6136cf260d0a857f09d8b80d77fca7a81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd6205f6136cf260d0a857f09d8b80d77fca7a81"
      }
    ],
    "stats": {
      "total": 112,
      "additions": 112,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d433eefe8f825df948760477faa3aec01e0a5e10",
        "filename": "AmancioJSilvJr/CryptoGraphyBTC",
        "status": "modified",
        "additions": 112,
        "deletions": 0,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df68defdc187ee722a8bcbf9f2e92ad412ce35a/AmancioJSilvJr/CryptoGraphyBTC",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df68defdc187ee722a8bcbf9f2e92ad412ce35a/AmancioJSilvJr/CryptoGraphyBTC",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/AmancioJSilvJr/CryptoGraphyBTC?ref=1df68defdc187ee722a8bcbf9f2e92ad412ce35a",
        "patch": "@@ -1,3 +1,115 @@\n+ \n+/ * Copiado do reposit\u00f3rio principal da TurtleCoin em https://github.com/TurtleCoin/TurtleCoin * /\n+\n+const  { promisify }  =  require ( 'util' ) ;\n+const  childProcess  =  require ( 'child_process' ) ;\n+const  fs  =  require ( 'fs' ) ;\n+\n+const  access  =  promisify ( fs . access ) ;\n+const  readdir  =  promisify ( fs . readdir ) ;\n+const  stat  =  promisify ( fs . stat ) ;\n+const  exec  =  promisify ( childProcess . exec ) ;\n+\n+/ * Os diret\u00f3rios para executar nossa formata\u00e7\u00e3o, recursivamente * /\n+const  directoryToFormat  =  [ 'src' ] ;\n+\n+/ * Tipos de arquivos para executar o formatador * /\n+const  fileTypes  =  [ '.h' ,  '.cpp' ,  '.c' ] ;\n+\n+/ * O nome do bin\u00e1rio de formato clang. Em algumas distros, isso tem a vers\u00e3o\n+   anexado. * /\n+const  binaryName  =  'formato-clang' ;\n+\n+( ass\u00edncrono  ( )  =>  {\n+     sucesso  const =  espera  main ( ) ;\n+\n+    if  ( sucesso )  {\n+        console . log ( '\\ nFormata\u00e7\u00e3o completa.' ) ;\n+    }  else  {\n+        console . log ( '\\ nFormata\u00e7\u00e3o abortada.' ) ;\n+    }\n+} ) ( ) ;\n+<? xml version = \" 1.0 \" encoding = \" utf-8 \" ?>\n+< Project  xmlns = \" http://schemas.microsoft.com/developer/msbuild/2003 \" >\n+\n+  < PropertyGroup  Label = \" QtGlobals \" >\n+    < QtBaseDir > C: \\ Qt5.12.10_x64_static_vs2019_1694 </ QtBaseDir >\n+    < QtPluginsLibraryDir > $ (QtBaseDir) \\ plugins </ QtPluginsLibraryDir >\n+    < QtLibraryDir > $ (QtBaseDir) \\ lib </ QtLibraryDir >\n+    < QtIncludeDir > $ (QtBaseDir) \\ include </ QtIncludeDir >\n+    < QtIncludes > $ (QtIncludeDir); $ (QtIncludeDir) \\ QtNetwork; $ (QtIncludeDir) \\ QtCore; $ (QtIncludeDir) \\ QtWidgets; $ (QtIncludeDir) \\ QtGui; </ QtIncludes >\n+    < GeneratedFilesOutDir >. \\ QtGeneratedFiles \\ qt </ GeneratedFilesOutDir >\n+    < QtToolsDir > $ (QtBaseDir) \\ bin </ QtToolsDir >\n+    < QtReleaseLibraries > $ (QtPluginsLibraryDir) \\ plataformas \\ qminimal.lib; $ (QtPluginsLibraryDir) \\ plataformas \\ qwindows.lib; $ (QtLibraryDir) \\ Qt5WindowsUIAutomationSupport.lib; $ (QtLibraryDir) \\ qtibreetype) lib; $ (QtLibraryDir) \\ qtlibpng.lib; $ (QtLibraryDir) \\ qtpcre2.lib; $ (QtLibraryDir) \\ Qt5AccessibilitySupport.lib; $ (QtLibraryDir) \\ Qt5Core.libDir; $ (QtLibraryDir) \\ Qt5Conurrent ) \\ Qt5EventDispatcherSupport.lib; $ (QtLibraryDir) \\ Qt5FontDatabaseSupport.lib; $ (QtLibraryDir) \\ Qt5Gui.lib; $ (QtLibraryDir) \\ Qt5Network.lib; $ (Qt5FontDatabaseSupport.lib) $ (QtLibraryDir) \\ Qt5Gui.lib; $ (QtLibraryDir) \\ Qt5Network.lib; $ (QtLibraryDir) \\ Qt5PlatformSupport. ; $ (QtLibraryDir) \\ Qt5Widgets.lib; $ (QtLibraryDir) \\ Qt5WinExtras.lib; $ (QtLibraryDir) \\ qtmain.lib; Wtsapi32.lib; userenv.lib; netapi32.lib; imm32.lib; Dwmapi.lib; version. lib; winmm.lib; UxTheme.lib </Bibliotecas QtRelease >\n+    < QtDebugLibraries > $ (QtPluginsLibraryDir) \\ plataformas \\ qwindowsd.lib; $ (QtPluginsLibraryDir) \\ plataformas \\ qminimald.lib; $ (QtLibraryDir) \\ * d.lib; Wtsapi32.lib; crypt32.lib; userenv.lib; netapi32.lib; ; imm32.lib; Dwmapi.lib; version.lib; winmm.lib; UxTheme.lib </ QtDebugLibraries >\n+  </ PropertyGroup >\n+\n+ fun\u00e7\u00e3o  ass\u00edncrona main  ( )  {\n+    / * Verifique se estamos na pasta certa e se os diret\u00f3rios existem * /\n+    for  ( const  diret\u00f3rio  de  diret\u00f3riosToFormat )  {\n+        tente  {\n+            aguardar  acesso ( diret\u00f3rio ) ;\n+        }  catch  ( errar )  {\n+            console . log ( `Falha ao encontrar o diret\u00f3rio $ { diret\u00f3rio } , provavelmente na pasta errada` ) ;\n+            console . log ( 'Certifique-se de executar a partir da pasta raiz, como: node scripts / format.js' ) ;\n+            return  false ;\n+        }\n+    }\n+\n+    deixe  filePaths  =  [ ] ;\n+\n+    / * Re\u00fana os arquivos * /\n+    for  ( const  diret\u00f3rio  de  diret\u00f3riosToFormat )  {\n+         arquivos  const =  espera  getFiles ( diret\u00f3rio ) ;\n+        filePaths  =  filePaths . concat ( arquivos ) ;\n+    }\n+\n+    / * Filtrar arquivos n\u00e3o codificados * /\n+    filePaths  =  filePaths . filtro ( ( arquivo )  =>  {\n+        return  fileTypes . algum ( ( extens\u00e3o )  =>  arquivo . termina com ( extens\u00e3o ) ) ;\n+    } ) ;\n+\n+    console . log ( arquivos `encontrados $ { filePaths . length } para formatar!` ) ;\n+\n+    / * Formate cada arquivo * /\n+    for  ( arquivo const  de filePaths ) {   \n+        aguardar  formatFile ( arquivo ) ;\n+    }\n+\n+    return  true ;\n+}\n+\n+ getFiles fun\u00e7\u00e3o  ass\u00edncrona ( diret\u00f3rio ) {  \n+    const  directoryContents  =  Await  readdir ( direct\u00f3rio ) ;\n+\n+    deixe  allFiles  =  [ ] ;\n+\n+    for  ( arquivo const  de directoryContents ) {   \n+        const  fullPath  =  diret\u00f3rio  +  '/'  +  arquivo ;\n+\n+        const  fileStats  =  Await  estat\u00edstica ( fullPath ) ;\n+\n+        / * Este \u00e9 um diret\u00f3rio, vamos recursar * /\n+        if  ( fileStats . isDirectory ( ) )  {\n+            const  moreFiles  =  Await  getfiles ( fullPath ) ;\n+            allFiles  =  allFiles . concat ( moreFiles ) ;\n+        }  else  {\n+            allFiles . push ( fullPath ) ;\n+        }\n+    }\n+\n+    return  allFiles ;\n+}\n+\n+ fun\u00e7\u00e3o  ass\u00edncrona formatFile  ( filePath )  {\n+    tente  {\n+        console . log ( `Formatando $ { filePath } ` ) ;\n+\n+        esperar  exec ( ` $ { binaryName } -i $ { filePath } ` ) ;\n+    }  catch  ( errar )  {\n+        console . log ( `Erro de formata\u00e7\u00e3o $ { filePath } : $ { err } ` ) ;\n+    }\n+}\n \n trigger:\n   branches:"
      }
    ]
  }
]