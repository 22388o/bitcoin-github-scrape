hebasto,2020-02-03 22:21:29,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-581647520,581647520,
DrahtBot,2020-02-03 23:40:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17966 (qt, refactor: Optimize signal-slot connections logic by hebasto)\n* #16528 (Native Descriptor Wallets using Descri",https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-581672674,581672674,
promag,2020-02-04 08:02:36,Rebased.,https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-581787591,581787591,
jonasschnelli,2020-02-06 12:37:40,Tested ACK bbb33d6431d13a0ae244ab2beca506126a6430e7,https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-582886816,582886816,
laanwj,2020-02-10 13:55:06,"~~code-review ACK bbb33d6431d13a0ae244ab2beca506126a6430e7~~\n(see comment)\nhttps://github.com/bitcoin/bitcoin/pull/18064#discussion_r377076900",https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-584133438,584133438,
promag,2020-02-16 10:20:42,@laanwj not sure if you saw my reply above.,https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-586689456,586689456,
laanwj,2020-02-25 12:45:30,"I still dislike `setModel` actually *creating* the model, or conceptually, a dialog creating its own model (for that matter). But if everyone else is ok with it's fineâ€¦\n",https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-590848856,590848856,
promag,2020-02-26 09:22:21,@laanwj I'll try to push the whole change where `setModel` is removed.,https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-591324746,591324746,
promag,2020-04-13 09:31:52,Closing in favor of #18618.,https://github.com/bitcoin/bitcoin/pull/18064#issuecomment-612827727,612827727,
Empact,2020-02-04 02:06:34,No `delete` necessary in this case? I tend to prefer it occur even if not strictly necessary.,https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374441112,374441112,src/qt/receivecoinsdialog.cpp
promag,2020-02-04 08:04:02,Delete on `setModel(nullptr)`?,https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374521291,374521291,src/qt/receivecoinsdialog.cpp
hebasto,2020-02-04 08:56:12,"> No `delete` necessary in this case?\n\n`m_recent_requests_table_model` is a `QObject` with a parent. This ensures that it will be deleted during its parent deletion, no?",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374542505,374542505,src/qt/receivecoinsdialog.cpp
promag,2020-02-04 09:19:31,"Yes. Only thing ""wrong"" is that when `WalletModel` is destroyed we will have a dangling\n`m_recent_requests_table_model`. But AFAICT this shouldn't be a concern because that happens when the wallet is being unloaded and everything is being destroyed.\n\nAnyway, I'm thinking we could move away from these `setModel(WalletModel*)` and pass it on the constructor, but it's going to take a while to g",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374553319,374553319,src/qt/receivecoinsdialog.cpp
promag,2020-02-04 09:48:16,"Obviously this is wrong, neeed to get `receiveCoinsDialog.m_recent_requests_table_model`.. will fix.",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374568284,374568284,src/qt/test/wallettests.cpp
hebasto,2020-02-04 10:01:23,"> Only thing ""wrong"" is that when `WalletModel` is destroyed we will have a dangling\n> `m_recent_requests_table_model`.\n\nSounds not good...\n\n>  But AFAICT this shouldn't be a concern because that happens when the wallet is being unloaded and everything is being destroyed.\n\nAgree.\n\n> Anyway, I'm thinking we could move away from these `setModel(WalletModel*)` and pass it on the con",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374575284,374575284,src/qt/receivecoinsdialog.cpp
promag,2020-02-04 10:04:40,"> Maybe discuss this on IRC meeting?\n\nNot sure worth it, a draft PR with the whole change might be better.",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374577006,374577006,src/qt/receivecoinsdialog.cpp
hebasto,2020-02-04 11:28:55,"nanonit: diff could be smaller if `RecentRequestsTableModel*` remains.\nAlso using `auto` for simple types seems overkill ;)",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374617072,374617072,src/qt/test/wallettests.cpp
promag,2020-02-04 13:54:37,"Done, previous version was unique_ptr.",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r374682230,374682230,src/qt/test/wallettests.cpp
Empact,2020-02-05 11:07:30,"nit: seems like returning a `const` pointer would be more correct, given that this is a const method\n\nPerhaps negligible as this is only used in the test, it has no other impact:\n\n```diff\ndiff --git a/src/qt/receivecoinsdialog.h b/src/qt/receivecoinsdialog.h\nindex e400129f7..5dc340aed 100644\n--- a/src/qt/receivecoinsdialog.h\n+++ b/src/qt/receivecoinsdialog.h\n@@ -45,7 +45,7 @@ pub",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r375192888,375192888,src/qt/receivecoinsdialog.h
promag,2020-02-05 12:04:23,"> nit: seems like returning a `const` pointer would be more correct, given that this is a const method\n\nMore correct why? Those are orthogonal.",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r375216804,375216804,src/qt/receivecoinsdialog.h
Empact,2020-02-06 12:10:32,"Well, not in every case, but in many cases it would be incongruent if an instance was const and its member was not - for example, if I have a `const` counter object, but I exposed the current count in an externally modifiable way, then that would be incongruent IMO.\n\nIn this case, it's not necessary to expose members in a non-const way from a const method, so I would bias toward the more restr",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r375798740,375798740,src/qt/receivecoinsdialog.h
Empact,2020-02-06 17:51:48,"An alternative is a method that returns a bool rather than the member itself, since that is all that is needed to satisfy the test.",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r375988564,375988564,src/qt/receivecoinsdialog.h
laanwj,2020-02-10 13:57:22,"This will create a new  `RecentRequestsTableModel` every time `setModel` is called. I do not think this is expected behavior. `setModel` should set a model not create one.\n\nMaybe pass it in from the caller?",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r377076900,377076900,src/qt/receivecoinsdialog.cpp
promag,2020-02-10 14:30:57,"This is called once, see the assertion above.\n\nThere is no use case for switching models, that's why I think we can slowly refactor to get the dependencies on the constructor rather than having these setters, which add unnecessary state management.",https://github.com/bitcoin/bitcoin/pull/18064#discussion_r377096320,377096320,src/qt/receivecoinsdialog.cpp
