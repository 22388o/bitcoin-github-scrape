fanquake,2021-07-20 02:52:54,"It looks like a5cc9e28f9e125a62168dcbe0b3484d098e56c1f should be part of 1893c907eac1e52294add6e059f192eb13702829 & ad5ea77d5dde3fb40dd4701ea0b92e445e060ef0 rather than a separate commit.\n\nHow is it determined when to add new information and/or verbosity levels? Given they are additive, it seems unsustainable to just keep adding new levels and more info.",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-883011094,883011094,
jonatack,2021-07-20 13:30:21,"> It looks like [a5cc9e2](https://github.com/bitcoin/bitcoin/commit/a5cc9e28f9e125a62168dcbe0b3484d098e56c1f) should be part of [1893c90](https://github.com/bitcoin/bitcoin/commit/1893c907eac1e52294add6e059f192eb13702829) & [ad5ea77](https://github.com/bitcoin/bitcoin/commit/ad5ea77d5dde3fb40dd4701ea0b92e445e060ef0) rather than a separate commit.\n\nDone!\n\n> How is it determined when to add ",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-883394391,883394391,
jonatack,2021-07-20 13:32:36,"Combined the help into the first two commits as suggested by @fanquake and changed the help as follows: `git diff a5cc9e2 a52c94c`\n\n```diff\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\nindex 4c3cc22dfc..5a0371e3de 100644\n--- a/src/bitcoin-cli.cpp\n+++ b/src/bitcoin-cli.cpp\n@@ -592,7 +592,7 @@ public:\n         ""                                  2 - Like 1 but with an addres",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-883396049,883396049,
RandyMcMillan,2021-07-22 03:50:55,"tACK a52c94c\n\nmacOS 11.4\n\n![Screen Shot 2021-07-21 at 10 53 52 PM](https://user-images.githubusercontent.com/152159/126584171-5f495d56-4c7a-4d1e-adbe-8f69073c127b.png)\n\n\n---\n\nOne nit:\n\nThe data repaints if it detects a window resize - but if the user uses \<Command\> + R to ""reload"" the window - the data doesn't automatically repaint. **Not a huge issue**. Note the macOS 11 T",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-884639126,884639126,
sipa,2021-07-22 05:12:15,"I'm really not convinced these numbers are sufficiently important to turn into a new field, unless the expectation is that many more things will be added to it.",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-884660105,884660105,
jonatack,2021-07-24 15:35:37,"Thanks for the feedback everyone. Droppied the middle two commits; punting on adding a new level until or if there's a clearer need.\n\nDiff: `git range-diff 2b5563b a52c94c 936d8ff`",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-886069373,886069373,
klementtan,2021-07-25 16:39:48,"code review and tested reACK 936d8ff49beeac5e0c77a87618e021b09d55c7a1\n\n![image](https://user-images.githubusercontent.com/49265907/126906568-831cd6b1-e560-4bd2-acc4-9dbc39e380d4.png)\n",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-886227480,886227480,
practicalswift,2021-07-25 20:29:47,"Concept ACK\n\nThanks for improving this feature: `-netinfo` is great addition to the toolbox! :)",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-886253838,886253838,
jonatack,2021-07-27 19:27:05,"Thanks @Zero-1729! A propos displaying zeroes, see https://github.com/bitcoin/bitcoin/pull/22501#discussion_r677735685.",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-887775066,887775066,
jarolrod,2021-07-28 03:04:06,tACK 936d8ff49beeac5e0c77a87618e021b09d55c7a1,https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-887972595,887972595,
jonatack,2021-08-10 10:36:04,"Thanks @klementtan, @vasild, @Zero-1729 and @jarolrod for the ACKs!\n\nI've pushed an update for these reasons:\n\n- to indicate peers that requested we not relay transactions, i.e. relaytxes is false\n- to indicate peers we don't relay addresses to, i.e. addr_relay_enabled is false (this is a new getpeerinfo field and required rebasing here)\n- added null checking on these new nodestatestat",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-895920230,895920230,
jonatack,2021-08-13 10:32:24,"Updated per https://github.com/bitcoin/bitcoin/pull/22501#discussion_r688229671 review feedback by @Zero-1729 (thanks!)\n\n<details><summary><code>git diff 1df9552 218862a</code></summary><p>\n\n```diff\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\nindex f960737bfd..718ad5dcef 100644\n--- a/src/bitcoin-cli.cpp\n+++ b/src/bitcoin-cli.cpp\n@@ -536,7 +536,7 @@ public:\n          ",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-898361542,898361542,
klementtan,2021-08-16 02:25:54,"re crAck and tAck 218862a0\n![image](https://user-images.githubusercontent.com/49265907/129503222-35272cad-e9fc-4790-9632-938438aba040.png)\n",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-899170353,899170353,
jonatack,2021-08-22 12:47:11,"Thanks for all the reviews! I updated the PR description with a current screenshot. One peer seems to be spamming addresses a bit:\n\n```\n<->   type   net  mping   ping send recv  txn  blk  hb addrp addrl  age  asmap   id address                                                             version\nout   full  ipv4    204    214    0    0    0          14958 31870 2334   6830  296 178.200.242.",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-903263701,903263701,
jonatack,2021-08-26 08:34:50,"This has many ACKs, seems ready for merge?",https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-906208109,906208109,
0xB10C,2021-08-30 10:08:05,Code review and tested ACK 218862a01848f69d54380c780bb5eae6dfdb1416,https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-908216394,908216394,
sipa,2021-09-02 14:40:33,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22501#issuecomment-911759978,911759978,
jarolrod,2021-07-22 03:30:04,"The help messages for the other levels give you insight into what you'll get before you use the level. This new help message for level 5 is kind of like a mystery box for users who are not familiar with the netinfo code -- Look inside for additional data üéÅ\n\nAt this level we are introducing two new data fields `addrl` and `addrp` which are related to addresses and rate-limiting. I think at mini",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r674477509,674477509,src/bitcoin-cli.cpp
jarolrod,2021-07-22 03:30:09,"because 39343849904ea53bb3e9c66521cfccdfd602f46e introduces the new fields and 22fa9112cecb3cfe8a299b7bba76267282e6d76f puts them to proper use by moving them into their new proper level, its kind of like 'introduce then use'.\n\nTotal non-blocker, but I think you could combine the first two commits into something like:\n\n`cli: introduce netinfo level 5 with addr_processed and addr_rate_limit",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r674477522,674477522,src/bitcoin-cli.cpp
jonatack,2021-07-24 15:27:10,Dropped the additional level (thanks!),https://github.com/bitcoin/bitcoin/pull/22501#discussion_r676011883,676011883,src/bitcoin-cli.cpp
jonatack,2021-07-24 15:27:24,Dropped the additional level (thanks!),https://github.com/bitcoin/bitcoin/pull/22501#discussion_r676011908,676011908,src/bitcoin-cli.cpp
vasild,2021-07-27 16:03:44,"Wouldn't it be better to print `0` if the value is zero, instead of an empty string?\n\n```suggestion\n                    peer.addr_rate_limited,\n```",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r677594390,677594390,src/bitcoin-cli.cpp
vasild,2021-07-27 16:08:18,"nit: I guess it is a matter of personal taste, but I prefer to avoid treating integers as booleans. Somehow I think that the following convey more information: `if (a == 0)` / `if (a == nullptr)` / `if (a == '\0')` compared to just `if (a)` which I use only if `a` is `bool` indeed.\n\nFeel free to ignore.",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r677598019,677598019,src/bitcoin-cli.cpp
jonatack,2021-07-27 19:24:29,"Yes, that was done to optimise signal to noise.  Examples follow; keep in mind that they are of much smaller nodes than typical longer-running ones that can have 125-250 peer connections. \n\n![Screenshot from 2021-07-27 19-24-53](https://user-images.githubusercontent.com/2415484/127214893-6228644e-4f4b-4f8b-9173-50e9dd511996.png)\n\n![Screenshot from 2021-07-27 19-24-08](https://user-images.g",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r677735685,677735685,src/bitcoin-cli.cpp
jonatack,2021-08-10 10:27:51,"I agree there can be places where it's good to be explicit/verbose with integer-to-boolean conversions, but they are well-defined behavior and the -netinfo class uses them extensively throughout (to good advantage IMO) to simplify the code.",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r685893272,685893272,src/bitcoin-cli.cpp
Zero-1729,2021-08-13 04:08:47,"**Minor nit**: the `hb` column currently uses the '`.`' and '`*`' convention to indicate details regarding our preference and the remote peer's respectively. The processed addresses column (`addrp`) also maintains this convention. I would suggest `txn` keep that consistency by using '`*`' instead of '`.`' to indicate the remote peer's request regarding us relaying `txs` to them.\n\n@jonatack wha",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r688229671,688229671,src/bitcoin-cli.cpp
jonatack,2021-08-13 10:16:22,"Good point. I have been asking myself the same but hesitated because the `*` seemed a bit ""loud"" in the `txn` column. I agree that it's better that the logic be coherent. Done, thanks for the thoughtful feedback!",https://github.com/bitcoin/bitcoin/pull/22501#discussion_r688405176,688405176,src/bitcoin-cli.cpp
