laanwj,2012-09-26T07:37:47Z,Good catch\n,https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8881483,8881483,
BitcoinPullTester,2012-09-26T11:58:28Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/95d7f002957a7bb30a2d5d8b07fe8fe3c1f37ec0 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8887353,8887353,
gavinandresen,2012-09-26T14:36:30Z,"I don't like keeping dead code in source files, so I think the right thing to do is to remove MakeSameSize and the code for all of the disabled opcodes from the big switch() statement.\n\nIf we ever resurrect them git will have the history, and, I assume, we'll write thorough unit tests to make sure they actually work correctly.\n\nSo: I'd be ok with pulling this, and then another commit that remo",https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8891932,8891932,
jgarzik,2012-09-26T15:11:57Z,That's what I said on IRC:  delete 'em.  It is dead code that requires a hard fork to re-enable.\n,https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8893268,8893268,
laanwj,2012-09-26T16:59:58Z,"Agree with Gavin, let's pull this as a warning to people if they'll ever resurrect this code, and then in a later pull remove all the code related to disabled opcodes. At the moment, they are only confusing.\n",https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8897047,8897047,
gmaxwell,2012-09-26T17:12:41Z,@laanwj  sounds like a plan.\n,https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8897486,8897486,
maaku,2012-09-26T17:22:55Z,I will create a new pull-request that surgically removes the disabled opcodes (they will now be caught by the `default: return false` catch-all).\n\nEDIT: Sorry for the messy commit references surrounding this comment. Github refuses to forget about amended/removed commits :\\n,https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-8897855,8897855,
xanatos,2013-04-26T06:05:24Z,"Just a question... Isn't the proposed patch ""wrong""? Negative numbers should be padded with 0xFF, not with 0. For example, in Little Endian, a 16 bit -1 is 0xFFFF, at 24 bits it's 0xFFFFFF, at 32 bits it's 0xFFFFFF. -2 at 16 bits is 0xFEFF, at 24 bits it's 0xFEFFFF...\n",https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-17057011,17057011,
maaku,2013-04-26T16:48:30Z,"Bitcoin uses its own big-endian, explicit-bit semantics for BigNums.\n",https://github.com/bitcoin/bitcoin/pull/1868#issuecomment-17086029,17086029,
