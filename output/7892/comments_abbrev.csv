jonasschnelli,2016-04-16T17:51:29Z,"Nice!\nConcept ACK.\n\nNot sure how we should treat the UniValue changes. Should we try to keep the ""upstream"" repository bitcoin/univalue in sync?\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-210865791,210865791,
MarcoFalke,2016-04-16T17:59:08Z,"Concept ACK. Tests look good.\n\n> ""upstream"" repository bitcoin/univalue in sync\n\nThe patch goes to jgarzik/univalue as bitcoin/univalue is only for bitcoin related patches. (Still in the end we need to merge jgarzik/univalue into bitcoin/univalue because we use this as subtree.)\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-210866888,210866888,
gmaxwell,2016-05-17T07:48:09Z,Neat.  What happens with characters like unicode direction modifiers?  Can you end up with your terminal in a weird state?\n,https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-219643935,219643935,
laanwj,2016-05-18T10:25:22Z,"> Neat. What happens with characters like unicode direction modifiers? Can you end up with your terminal in a weird state?\n\nI don't think that's possible with just unicode?\n\nANSI escape sequences are a whole different story. In JSON objects they'll be escaped, but when printing strings (say, for `help`, when there is a single string result) everything is let through. Not sure whether this shou",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-219986609,219986609,
dcousens,2016-05-19T13:03:40Z,"concept ACK, once-over utACK (did not cross-verify UTF-8 impl.).\n\nCould probably use more tests for that JSONUTF8Writer...\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-220317584,220317584,
laanwj,2016-05-20T08:49:07Z,"> Could probably use more tests for that JSONUTF8Writer...\n> ing \n\nThere are few direct tests for it, but all the other tests that parses JSON with strings in it is testing it.\nWhat would be nice is doing some fuzzing using https://github.com/laanwj/univalue/tree/2015_11_unifuzz and see that everything is accepted is valid utf-8.\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-220550685,220550685,
gmaxwell,2016-05-25T16:10:55Z,@pstratem Any interest in fuzzing this?\n,https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-221625876,221625876,
sipa,2016-05-25T16:20:12Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-221628598,221628598,
laanwj,2016-06-09T06:21:13Z,"Rebased, done and removed the Python3 TODOs\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-224809842,224809842,
laanwj,2016-06-10T13:23:11Z,Ok:\n- Merged the unicode changes (https://github.com/jgarzik/univalue/pull/22) into https://github.com/bitcoin-core/univalue\n- Replaced the direct changes to src/univalue to a subtree merge\n\nThis should be ready now.\n,https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-225180530,225180530,
gmaxwell,2016-06-15T10:26:17Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-226148502,226148502,
laanwj,2016-06-16T10:23:02Z,"It looks like the build system doesn't detect changes to univalue source files and will not automatically rebuild the library: **if you get RPC test failures concerning unicode, please build from a clean tree**\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-226446596,226446596,
MarcoFalke,2016-06-16T10:26:43Z,"``` sh\nmake clean\nmake distclean\n```\n\nshould take care of this, I assume.\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-226447353,226447353,
laanwj,2016-06-16T10:29:57Z,"Yes, `make clean` _should_ be enough.\n",https://github.com/bitcoin/bitcoin/pull/7892#issuecomment-226447970,226447970,
MarcoFalke,2016-05-17T08:05:46Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7892#discussion_r63479372,63479372,qa/rpc-tests/wallet.py
