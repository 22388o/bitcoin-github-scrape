[
  {
    "sha": "9b5950db8683f9b4be03f79ee0aae8a780b01a4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjU5NTBkYjg2ODNmOWI0YmUwM2Y3OWVlMGFhZThhNzgwYjAxYTRi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-04T21:35:15Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-03-04T21:35:15Z"
      },
      "message": "bnb: exit selection when best_waste is 0\n\nIf we find a solution which has no waste, just use that. This solution\nis what we would consider to be optimal, and other solutions we find\nwould have to also have 0 waste, so they are equivalent to the first\none with 0 waste. Thus we can optimize by just choosing the first one\nwith 0 waste.",
      "tree": {
        "sha": "c7deccff2bbd4c744bc288bddd5e097ddd4a2a8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7deccff2bbd4c744bc288bddd5e097ddd4a2a8b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b5950db8683f9b4be03f79ee0aae8a780b01a4b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b5950db8683f9b4be03f79ee0aae8a780b01a4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b5950db8683f9b4be03f79ee0aae8a780b01a4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b5950db8683f9b4be03f79ee0aae8a780b01a4b/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a71c34742c24245a0d642e68f9e61f46cc7573fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a71c34742c24245a0d642e68f9e61f46cc7573fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a71c34742c24245a0d642e68f9e61f46cc7573fb"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "079a5d3d53f7a8e958cbc2f83a3f6b89d0a6268a",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b5950db8683f9b4be03f79ee0aae8a780b01a4b/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b5950db8683f9b4be03f79ee0aae8a780b01a4b/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=9b5950db8683f9b4be03f79ee0aae8a780b01a4b",
        "patch": "@@ -106,6 +106,9 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n                 best_selection = curr_selection;\n                 best_selection.resize(utxo_pool.size());\n                 best_waste = curr_waste;\n+                if (best_waste == 0) {\n+                    break;\n+                }\n             }\n             curr_waste -= (curr_value - actual_target); // Remove the excess value as we will be selecting different coins now\n             backtrack = true;"
      },
      {
        "sha": "2081518909dda5edc57a31ea1cd416c978511ea4",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b5950db8683f9b4be03f79ee0aae8a780b01a4b/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b5950db8683f9b4be03f79ee0aae8a780b01a4b/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=9b5950db8683f9b4be03f79ee0aae8a780b01a4b",
        "patch": "@@ -176,8 +176,8 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     selection.clear();\n \n     // Select 5 Cent\n-    add_coin(3 * CENT, 3, actual_selection);\n-    add_coin(2 * CENT, 2, actual_selection);\n+    add_coin(4 * CENT, 4, actual_selection);\n+    add_coin(1 * CENT, 1, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 5 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n     BOOST_CHECK_EQUAL(value_ret, 5 * CENT);\n@@ -204,9 +204,8 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n \n     // Select 10 Cent\n     add_coin(5 * CENT, 5, utxo_pool);\n+    add_coin(5 * CENT, 5, actual_selection);\n     add_coin(4 * CENT, 4, actual_selection);\n-    add_coin(3 * CENT, 3, actual_selection);\n-    add_coin(2 * CENT, 2, actual_selection);\n     add_coin(1 * CENT, 1, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));"
      }
    ]
  }
]