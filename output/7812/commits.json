[
  {
    "sha": "4f7c959af1672f9f51122867dca48ac4fa454d75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjdjOTU5YWYxNjcyZjlmNTExMjI4NjdkY2E0OGFjNGZhNDU0ZDc1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-05T12:20:49Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-06T08:59:03Z"
      },
      "message": "Refactor IsRBFOptIn, avoid exception",
      "tree": {
        "sha": "3a250d3bb7b05dfaacb4758c4a9473025c63941e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a250d3bb7b05dfaacb4758c4a9473025c63941e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f7c959af1672f9f51122867dca48ac4fa454d75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXBM/kAAoJECnUvLZBb1PsF8UP/1IgNaL+SA/Bz/NlnOYzuZGC\nfyz8eouscr49QufqEEYS1zIHd4tBuu9itYIef2xj6OW9cxfOoXwovM5b0xMQInJr\nacecfrullqG90Rgy93J5YmdfHdFXOnkzAce3XS5iWZeSSDGOeKQN980nF5nKRCKR\npUVKnZTRp5IixFe7JBGpwla66AUB5EglwYSEVER9gjfRW8dvckW9MmxJ5eEJOAeo\nw44Ep4QLU9dws5cpp9EVGgHNB3DS7c9sEcDxuM1IT7FnAUTPMNlPp7pqLFrAy/yE\npsS5OruKewS3eTQHzqOPOU//eI+VUzMASIOj4hSnWezmEfTDAhvg2lJHYt7BwSiw\n/FG9xMvKvpK9QQ38mc5uf+K8W4ExBPmR8OW+6niXvZtUcBvxC2KWdHjpgm2clVIn\nbUyx2G3ZZGPhEaNH8u0LFCF143XvQ670GXyKzCO0FftvoZeacOrfvhAA7SPulp4P\nYvVxjU6bFtmC0sCtX05zWTZOQmxuj0VhiTyWxRdecUvgJtiI9N6fzzGvfbnq294x\nG7M3+KC8vFgvMnXN1u9onKSFUROVi65emTaI7x6jzaKxQolexMvcB8xZYNCfPmWc\nB3Y2vNWSmLp9KDe2OInNGxJdPP4QTEic0Qs5qdIWwG2trzlTMEcOwv3Xu9lnimTp\n0b7xFhaduAzUmlSYR9ve\n=2mOz\n-----END PGP SIGNATURE-----",
        "payload": "tree 3a250d3bb7b05dfaacb4758c4a9473025c63941e\nparent a9149688f87cb790a600400abd9af72c3ee0c312\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1459858849 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459933143 +0200\n\nRefactor IsRBFOptIn, avoid exception\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f7c959af1672f9f51122867dca48ac4fa454d75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f7c959af1672f9f51122867dca48ac4fa454d75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f7c959af1672f9f51122867dca48ac4fa454d75/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9149688f87cb790a600400abd9af72c3ee0c312",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9149688f87cb790a600400abd9af72c3ee0c312",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9149688f87cb790a600400abd9af72c3ee0c312"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 19,
      "deletions": 16
    },
    "files": [
      {
        "sha": "133cff611d34b89045ce6afa21f910cd6ecf4979",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f7c959af1672f9f51122867dca48ac4fa454d75/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f7c959af1672f9f51122867dca48ac4fa454d75/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=4f7c959af1672f9f51122867dca48ac4fa454d75",
        "patch": "@@ -14,33 +14,34 @@ bool SignalsOptInRBF(const CTransaction &tx)\n     return false;\n }\n \n-bool IsRBFOptIn(const CTxMemPoolEntry &entry, CTxMemPool &pool)\n+RBFTransactionState IsRBFOptIn(const CTransaction &tx, CTxMemPool &pool)\n {\n     AssertLockHeld(pool.cs);\n \n     CTxMemPool::setEntries setAncestors;\n \n     // First check the transaction itself.\n-    if (SignalsOptInRBF(entry.GetTx())) {\n-        return true;\n+    if (SignalsOptInRBF(tx)) {\n+        return RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125;\n     }\n \n     // If this transaction is not in our mempool, then we can't be sure\n     // we will know about all its inputs.\n-    if (!pool.exists(entry.GetTx().GetHash())) {\n-        throw std::runtime_error(\"Cannot determine RBF opt-in signal for non-mempool transaction\\n\");\n+    if (!pool.exists(tx.GetHash())) {\n+        return RBF_TRANSACTIONSTATE_UNKNOWN;\n     }\n \n     // If all the inputs have nSequence >= maxint-1, it still might be\n     // signaled for RBF if any unconfirmed parents have signaled.\n     uint64_t noLimit = std::numeric_limits<uint64_t>::max();\n     std::string dummy;\n+    CTxMemPoolEntry entry = *pool.mapTx.find(tx.GetHash());\n     pool.CalculateMemPoolAncestors(entry, setAncestors, noLimit, noLimit, noLimit, noLimit, dummy, false);\n \n     BOOST_FOREACH(CTxMemPool::txiter it, setAncestors) {\n         if (SignalsOptInRBF(it->GetTx())) {\n-            return true;\n+            return RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125;\n         }\n     }\n-    return false;\n+    return RBF_TRANSACTIONSTATE_FINAL;\n }"
      },
      {
        "sha": "5a711dba07370820a52fa055644315986995767b",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f7c959af1672f9f51122867dca48ac4fa454d75/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f7c959af1672f9f51122867dca48ac4fa454d75/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=4f7c959af1672f9f51122867dca48ac4fa454d75",
        "patch": "@@ -7,6 +7,12 @@\n \n #include \"txmempool.h\"\n \n+enum RBFTransactionState {\n+    RBF_TRANSACTIONSTATE_UNKNOWN,\n+    RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125,\n+    RBF_TRANSACTIONSTATE_FINAL\n+};\n+\n // Check whether the sequence numbers on this transaction are signaling\n // opt-in to replace-by-fee, according to BIP 125\n bool SignalsOptInRBF(const CTransaction &tx);\n@@ -15,6 +21,6 @@ bool SignalsOptInRBF(const CTransaction &tx);\n // according to BIP 125\n // This involves checking sequence numbers of the transaction, as well\n // as the sequence numbers of all in-mempool ancestors.\n-bool IsRBFOptIn(const CTxMemPoolEntry &entry, CTxMemPool &pool);\n+RBFTransactionState IsRBFOptIn(const CTransaction &tx, CTxMemPool &pool);\n \n #endif // BITCOIN_POLICY_RBF_H"
      },
      {
        "sha": "5511e9d3aba41e579305fc3fa0662846a3beab7a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f7c959af1672f9f51122867dca48ac4fa454d75/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f7c959af1672f9f51122867dca48ac4fa454d75/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4f7c959af1672f9f51122867dca48ac4fa454d75",
        "patch": "@@ -82,15 +82,11 @@ void WalletTxToJSON(const CWalletTx& wtx, UniValue& entry)\n     std::string rbfStatus = \"no\";\n     if (confirms <= 0) {\n         LOCK(mempool.cs);\n-        if (!mempool.exists(hash)) {\n-            if (SignalsOptInRBF(wtx)) {\n-                rbfStatus = \"yes\";\n-            } else {\n-                rbfStatus = \"unknown\";\n-            }\n-        } else if (IsRBFOptIn(*mempool.mapTx.find(hash), mempool)) {\n+        RBFTransactionState rbfState = IsRBFOptIn(wtx, mempool);\n+        if (rbfState == RBF_TRANSACTIONSTATE_UNKNOWN)\n+            rbfStatus = \"unknown\";\n+        else if (rbfState == RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125)\n             rbfStatus = \"yes\";\n-        }\n     }\n     entry.push_back(Pair(\"bip125-replaceable\", rbfStatus));\n "
      }
    ]
  }
]