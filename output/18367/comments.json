[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600334783",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18367#issuecomment-600334783",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18367",
    "id": 600334783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDMzNDc4Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-17T22:38:17Z",
    "updated_at": "2020-03-17T23:08:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nFWIW -- C string function usage:\r\n\r\n```\r\n$ man 3 string | tr \" *()<>.,\" \"\\n\" | grep ^str | grep -v ^string | \\\r\n      sort -u | tr \"\\n\" \"|\" | sed 's/|$//g'; echo\r\nstrcasecmp|strcat|strchr|strcmp|strcoll|strcpy|strcspn|strdup|strfry|strlen|strncasecmp|strncat|strncmp|strncpy|strpbrk|strrchr|strsep|strspn|strstr|strtok|strxfrm\r\n$ git grep -E $(man 3 string | tr \" *()<>.,\" \"\\n\" | grep ^str | \\\r\n      grep -v ^string | sort -u | tr \"\\n\" \"|\" | sed 's/|$//g') -- \"*.cpp\" \"*.h\" \\\r\n      \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\"\r\nsrc/base58.cpp:    int size = strlen(psz) * 733 / 1000 + 1; // log(58) / log(256), rounded up.\r\nsrc/chainparams.cpp:    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\r\nsrc/core_read.cpp:            if (strcmp(name, \"OP_UNKNOWN\") == 0)\r\nsrc/net.cpp:            if (strcmp(ifa->ifa_name, \"lo\") == 0) continue;\r\nsrc/net.cpp:            if (strcmp(ifa->ifa_name, \"lo0\") == 0) continue;\r\nsrc/protocol.cpp:    strncpy(pchCommand, pszCommand, COMMAND_SIZE);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)path, strlen(path) + 1);\r\nsrc/randomenv.cpp:    hasher.Write((const unsigned char*)COMPILER_VERSION, strlen(COMPILER_VERSION) + 1);\r\nsrc/randomenv.cpp:    if (platform_str) hasher.Write((const unsigned char*)platform_str, strlen(platform_str) + 1);\r\nsrc/randomenv.cpp:    if (exec_str) hasher.Write((const unsigned char*)exec_str, strlen(exec_str) + 1);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)ifit->ifa_name, strlen(ifit->ifa_name) + 1);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)&name.sysname, strlen(name.sysname) + 1);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)&name.nodename, strlen(name.nodename) + 1);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)&name.release, strlen(name.release) + 1);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)&name.version, strlen(name.version) + 1);\r\nsrc/randomenv.cpp:        hasher.Write((const unsigned char*)&name.machine, strlen(name.machine) + 1);\r\nsrc/randomenv.cpp:            hasher.Write((const unsigned char*)environ[i], strlen(environ[i]));\r\nsrc/rest.cpp:        if (strlen(rf_names[i].name) > 0) {\r\nsrc/test/serialize_tests.cpp:                strcmp(charstrval, rhs.charstrval) == 0 && \\\r\nsrc/test/serialize_tests.cpp:    return strcmp(expectedException.what(), ex.what()) == 0;\r\nsrc/test/streams_tests.cpp:        BOOST_CHECK(strstr(e.what(),\r\nsrc/test/streams_tests.cpp:        BOOST_CHECK(strstr(e.what(),\r\nsrc/test/streams_tests.cpp:        BOOST_CHECK(strstr(e.what(),\r\nsrc/util/strencodings.cpp:    val.reserve(strlen(p));\r\nsrc/util/strencodings.cpp:    val.reserve(strlen(p));\r\nsrc/util/string.h:    return str.size() == strlen(str.c_str());\r\nsrc/util/system.cpp:    if (pszHome == nullptr || strlen(pszHome) == 0)\r\nsrc/wallet/db.cpp:    fReadOnly = (!strchr(pszMode, '+') && !strchr(pszMode, 'w'));\r\nsrc/wallet/db.cpp:    bool fCreate = strchr(pszMode, 'c') != nullptr;\r\nsrc/wallet/db.cpp:                                strncmp(ssKey.data(), pszSkip, std::min(ssKey.size(), strlen(pszSkip))) == 0)\r\nsrc/wallet/db.cpp:                            if (strncmp(ssKey.data(), \"\\x07version\", 8) == 0) {\r\nsrc/zmq/zmqpublishnotifier.cpp:    int rc = zmq_send_multipart(psocket, command, strlen(command), data, size, msgseq, (size_t)sizeof(uint32_t), nullptr);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600334783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600360391",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18367#issuecomment-600360391",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18367",
    "id": 600360391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDM2MDM5MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-18T00:11:57Z",
    "updated_at": "2020-03-18T00:11:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16995 (Fix gcc 9 warnings by laanwj)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600360391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600363026",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18367#issuecomment-600363026",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18367",
    "id": 600363026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDM2MzAyNg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-18T00:21:47Z",
    "updated_at": "2020-03-18T00:21:47Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of #16995.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600363026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]