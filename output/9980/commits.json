[
  {
    "sha": "8276e70de15c5c3a7525471ad619edd1237b424a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Mjc2ZTcwZGUxNWM1YzNhNzUyNTQ3MWFkNjE5ZWRkMTIzN2I0MjRh",
    "commit": {
      "author": {
        "name": "Chris Stewart",
        "email": "stewart.chris1234@gmail.com",
        "date": "2017-04-07T01:28:19Z"
      },
      "committer": {
        "name": "Chris Stewart",
        "email": "stewart.chris1234@gmail.com",
        "date": "2017-07-12T15:48:37Z"
      },
      "message": "Adding assert to avoid a memory access violation inside of PartialMerkleTree::CalcHash()\n\nAdding comment to assert in PartialMerkleTree::CalcHash()\n\nAdding comment on CMerkleBlock indicating it calls something that contains an assert\n\nRemoving EOL whitespace",
      "tree": {
        "sha": "2a64138670f3166868cc565b8f739c2cf5b11f61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a64138670f3166868cc565b8f739c2cf5b11f61"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8276e70de15c5c3a7525471ad619edd1237b424a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8276e70de15c5c3a7525471ad619edd1237b424a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8276e70de15c5c3a7525471ad619edd1237b424a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8276e70de15c5c3a7525471ad619edd1237b424a/comments",
    "author": {
      "login": "Christewart",
      "id": 3514957,
      "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Christewart",
      "html_url": "https://github.com/Christewart",
      "followers_url": "https://api.github.com/users/Christewart/followers",
      "following_url": "https://api.github.com/users/Christewart/following{/other_user}",
      "gists_url": "https://api.github.com/users/Christewart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Christewart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
      "organizations_url": "https://api.github.com/users/Christewart/orgs",
      "repos_url": "https://api.github.com/users/Christewart/repos",
      "events_url": "https://api.github.com/users/Christewart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Christewart/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Christewart",
      "id": 3514957,
      "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Christewart",
      "html_url": "https://github.com/Christewart",
      "followers_url": "https://api.github.com/users/Christewart/followers",
      "following_url": "https://api.github.com/users/Christewart/following{/other_user}",
      "gists_url": "https://api.github.com/users/Christewart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Christewart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
      "organizations_url": "https://api.github.com/users/Christewart/orgs",
      "repos_url": "https://api.github.com/users/Christewart/repos",
      "events_url": "https://api.github.com/users/Christewart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Christewart/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8b95239eeb052b122786d9cca6bc58106837599",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8b95239eeb052b122786d9cca6bc58106837599",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8b95239eeb052b122786d9cca6bc58106837599"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "55f899b649e30d39a110731bd9f0905905d34489",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8276e70de15c5c3a7525471ad619edd1237b424a/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8276e70de15c5c3a7525471ad619edd1237b424a/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=8276e70de15c5c3a7525471ad619edd1237b424a",
        "patch": "@@ -59,6 +59,9 @@ CMerkleBlock::CMerkleBlock(const CBlock& block, const std::set<uint256>& txids)\n }\n \n uint256 CPartialMerkleTree::CalcHash(int height, unsigned int pos, const std::vector<uint256> &vTxid) {\n+    //we can never have zero txs in a merkle block, we always need the coinbase tx\n+    //if we do not have this assert, we can hit a memory access violation when indexing into vTxid\n+    assert(vTxid.size() != 0);\n     if (height == 0) {\n         // hash at height 0 is the txids themself\n         return vTxid[pos];"
      },
      {
        "sha": "f590c487dee0f70d668cf725ffa38560b80a6827",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8276e70de15c5c3a7525471ad619edd1237b424a/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8276e70de15c5c3a7525471ad619edd1237b424a/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=8276e70de15c5c3a7525471ad619edd1237b424a",
        "patch": "@@ -121,6 +121,8 @@ class CPartialMerkleTree\n /**\n  * Used to relay blocks as header + vector<merkle branch>\n  * to filtered nodes.\n+ *\n+ * NOTE: The class assumes that the given CBlock has *at least* 1 transaction. If the CBlock has 0 txs, it will hit an assertion.\n  */\n class CMerkleBlock\n {"
      }
    ]
  }
]