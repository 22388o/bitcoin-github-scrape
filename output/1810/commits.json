[
  {
    "sha": "62904b33f367a1febaa68a180a96529d7f50b1bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjkwNGIzM2YzNjdhMWZlYmFhNjhhMTgwYTk2NTI5ZDdmNTBiMWJj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-09-09T18:07:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-09-09T18:44:59Z"
      },
      "message": "Improve RPC console key event behaviour\n\n- Paging using PageUp / PageDown now works when entry widget has focus\n- Typing or pasting while the messages widget has focus auto-selects entry widget",
      "tree": {
        "sha": "563b37a60cf94b2cd0c1569fdedcdd69526c73fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/563b37a60cf94b2cd0c1569fdedcdd69526c73fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62904b33f367a1febaa68a180a96529d7f50b1bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62904b33f367a1febaa68a180a96529d7f50b1bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62904b33f367a1febaa68a180a96529d7f50b1bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62904b33f367a1febaa68a180a96529d7f50b1bc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eabc8f2c81712dedd0d93af221e4dbc5b6dede59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eabc8f2c81712dedd0d93af221e4dbc5b6dede59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eabc8f2c81712dedd0d93af221e4dbc5b6dede59"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 26,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8a6dafcf74523944d3b14df8cad8504fc72bc725",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 6,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62904b33f367a1febaa68a180a96529d7f50b1bc/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62904b33f367a1febaa68a180a96529d7f50b1bc/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=62904b33f367a1febaa68a180a96529d7f50b1bc",
        "patch": "@@ -199,6 +199,7 @@ RPCConsole::RPCConsole(QWidget *parent) :\n \n     // Install event filter for up and down arrow\n     ui->lineEdit->installEventFilter(this);\n+    ui->messagesWidget->installEventFilter(this);\n \n     connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n \n@@ -218,15 +219,34 @@ RPCConsole::~RPCConsole()\n \n bool RPCConsole::eventFilter(QObject* obj, QEvent *event)\n {\n-    if(obj == ui->lineEdit)\n+    if(event->type() == QEvent::KeyPress) // Special key handling\n     {\n-        if(event->type() == QEvent::KeyPress)\n+        QKeyEvent *keyevt = static_cast<QKeyEvent*>(event);\n+        int key = keyevt->key();\n+        Qt::KeyboardModifiers mod = keyevt->modifiers();\n+        switch(key)\n         {\n-            QKeyEvent *key = static_cast<QKeyEvent*>(event);\n-            switch(key->key())\n+        case Qt::Key_Up: if(obj == ui->lineEdit) { browseHistory(-1); return true; } break;\n+        case Qt::Key_Down: if(obj == ui->lineEdit) { browseHistory(1); return true; } break;\n+        case Qt::Key_PageUp: /* pass paging keys to messages widget */\n+        case Qt::Key_PageDown:\n+            if(obj == ui->lineEdit)\n             {\n-            case Qt::Key_Up: browseHistory(-1); return true;\n-            case Qt::Key_Down: browseHistory(1); return true;\n+                QApplication::postEvent(ui->messagesWidget, new QKeyEvent(*keyevt));\n+                return true;\n+            }\n+            break;\n+        default:\n+            // Typing in messages widget brings focus to line edit, and redirects key there\n+            // Exclude most combinations and keys that emit no text, except paste shortcuts\n+            if(obj == ui->messagesWidget && (\n+                  (!mod && !keyevt->text().isEmpty() && key != Qt::Key_Tab) ||\n+                  ((mod & Qt::ControlModifier) && key == Qt::Key_V) ||\n+                  ((mod & Qt::ShiftModifier) && key == Qt::Key_Insert)))\n+            {\n+                ui->lineEdit->setFocus();\n+                QApplication::postEvent(ui->lineEdit, new QKeyEvent(*keyevt));\n+                return true;\n             }\n         }\n     }"
      }
    ]
  }
]