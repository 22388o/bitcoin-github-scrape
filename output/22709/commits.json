[
  {
    "sha": "463b316822c7918238a4af85d4d9007c7df85288",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjNiMzE2ODIyYzc5MTgyMzhhNGFmODVkNGQ5MDA3YzdkZjg1Mjg4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-18T09:33:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-18T09:33:34Z"
      },
      "message": "build: Bump version for 0.21.0rc1\n\nTree-SHA512: 5bfe150de6e808a6af499e1f01fbfde91fca3fd726e3d457172e94161c4a18fb508824a4b2a58a35ac582d505e4e9da1287a349b51be863dc5bd4fa858400863",
      "tree": {
        "sha": "11602ffde95c00f1d11de8aff3eeb5112ede6477",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11602ffde95c00f1d11de8aff3eeb5112ede6477"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/463b316822c7918238a4af85d4d9007c7df85288",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl+06m4ACgkQHkrtYphs\n0l0vXwf/ZhU3JqkN3JR7pUyHvLyLxNHG9DP+uGg+iXXAhkTPkntn347SDkU0GnDo\nAsXwfWf4JzT8zVEbOPFYwsTMk4Wzwd93OFfbT0EvMZePAwPQMQSQ9CshIB9vnLVU\nPBmOGIMbFyNob9n9Ec+pGwq0oBMoilKgDYWalVt2tQlbLEibsrceIPy/gnrzqTs8\nZ2869HIP+RSc+UgErFyBXW6ELFhGEx+bGQn1kYo1YGu5mX0qg88xPuSMpt5NJb0U\nn7o9zvQwEiXhpsuWBwOkozZ73UMKXdT12tqlJF6j8b5pFE++rcO6Vd1uJohEiKOf\ngwX99aytWAx7H2uCI1W24inXKFMGMg==\n=lsI1\n-----END PGP SIGNATURE-----",
        "payload": "tree 11602ffde95c00f1d11de8aff3eeb5112ede6477\nparent 831675c8dccfa6525ffe751da3cc60709c380953\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1605691994 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1605692014 +0100\n\nbuild: Bump version for 0.21.0rc1\n\nTree-SHA512: 5bfe150de6e808a6af499e1f01fbfde91fca3fd726e3d457172e94161c4a18fb508824a4b2a58a35ac582d505e4e9da1287a349b51be863dc5bd4fa858400863\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/463b316822c7918238a4af85d4d9007c7df85288",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/463b316822c7918238a4af85d4d9007c7df85288",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/463b316822c7918238a4af85d4d9007c7df85288/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "831675c8dccfa6525ffe751da3cc60709c380953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/831675c8dccfa6525ffe751da3cc60709c380953",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/831675c8dccfa6525ffe751da3cc60709c380953"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "d5632b79b14bd64155d8cb26b60c2cc73d255aad",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/463b316822c7918238a4af85d4d9007c7df85288/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/463b316822c7918238a4af85d4d9007c7df85288/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=463b316822c7918238a4af85d4d9007c7df85288",
        "patch": "@@ -18,10 +18,10 @@\n #define CLIENT_VERSION_MAJOR 0\n \n /* Minor version */\n-#define CLIENT_VERSION_MINOR 20\n+#define CLIENT_VERSION_MINOR 21\n \n /* Build revision */\n-#define CLIENT_VERSION_REVISION 99\n+#define CLIENT_VERSION_REVISION 0\n \n /* Copyright holder(s) before %s replacement */\n #define COPYRIGHT_HOLDERS \"The %s developers\"\n@@ -253,7 +253,7 @@\n #define PACKAGE_NAME \"Bitcoin Core\"\n \n /* Define to the full name and version of this package. */\n-#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n+#define PACKAGE_STRING \"Bitcoin Core 0.21.0\"\n \n /* Define to the one symbol short name of this package. */\n #define PACKAGE_TARNAME \"bitcoin\"\n@@ -262,7 +262,7 @@\n #define PACKAGE_URL \"https://bitcoincore.org/\"\n \n /* Define to the version of this package. */\n-#define PACKAGE_VERSION \"0.19.99\"\n+#define PACKAGE_VERSION \"0.21.0\"\n \n /* Define to necessary symbol if this constant uses a non-standard name on\n    your system. */"
      },
      {
        "sha": "859c95de147adb9f9deeac38e262326e244a5362",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/463b316822c7918238a4af85d4d9007c7df85288/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/463b316822c7918238a4af85d4d9007c7df85288/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=463b316822c7918238a4af85d4d9007c7df85288",
        "patch": "@@ -1,10 +1,10 @@\n AC_PREREQ([2.69])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 20)\n-define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_MINOR, 21)\n+define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_CLIENT_VERSION_RC, 1)\n+define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])"
      }
    ]
  },
  {
    "sha": "6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2RlN2JiOWIyNmMyNDBhNDJhYmUyNGNiYTZlMGFjYWVmOTViZDRl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-18T09:43:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-18T09:43:41Z"
      },
      "message": "doc: Generate manual pages for 0.21.0rc1\n\nTree-SHA512: d3e4f927d39f38317242b376f7cbd04ff3ab2b5795ffb5912a1e193b3bc27fa0e7fe55446b62c22df6a213509c2c489a66cde866992706a6ddd0ebbddc713303",
      "tree": {
        "sha": "fe1045e0a51054812a9ee47d6043bbab320ebe57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe1045e0a51054812a9ee47d6043bbab320ebe57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl+07M0ACgkQHkrtYphs\n0l3XEAf+MWQJRSjQGDHiYhiRcis0bR79tb2IcvePZGy3uE8/8o0gV591bI+ZKFoT\nEsrJVaqOiI0vVfTC3sxqlv0akzie4gaptk3mQFzt3+VOwF4WDDhmAh6W2ZyoDN26\nW2tg79eKDM8SnXwrs49VP7BwPnrrc7FdRKvbb+97dBVD9VYHdQesCMlgYNCTcqtd\nNPqugMJa/HlINvUOQxR9c3JHkma2RLNCIq7japoZ0eQj+EJ32nSBm1IP3BuwG+wR\nfqVG8tOb39jad+Iq03M6E0y1jW6WAwjzF7PMb1a8PxDzoX9H2hmU5IVUPTAzon6t\n92pRB8go1m1BCQP8toKR5pR3i+ACEQ==\n=sviW\n-----END PGP SIGNATURE-----",
        "payload": "tree fe1045e0a51054812a9ee47d6043bbab320ebe57\nparent 463b316822c7918238a4af85d4d9007c7df85288\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1605692595 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1605692621 +0100\n\ndoc: Generate manual pages for 0.21.0rc1\n\nTree-SHA512: d3e4f927d39f38317242b376f7cbd04ff3ab2b5795ffb5912a1e193b3bc27fa0e7fe55446b62c22df6a213509c2c489a66cde866992706a6ddd0ebbddc713303\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "463b316822c7918238a4af85d4d9007c7df85288",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/463b316822c7918238a4af85d4d9007c7df85288",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/463b316822c7918238a4af85d4d9007c7df85288"
      }
    ],
    "stats": {
      "total": 720,
      "additions": 535,
      "deletions": 185
    },
    "files": [
      {
        "sha": "83f60d52ba6318f5cea5a9efcbaf64d2f8b8419b",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 58,
        "deletions": 10,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "patch": "@@ -1,7 +1,7 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.\n-.TH BITCOIN-CLI \"1\" \"February 2019\" \"bitcoin-cli v0.17.99.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n+.TH BITCOIN-CLI \"1\" \"November 2020\" \"bitcoin-cli v0.21.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- manual page for bitcoin-cli v0.17.99.0\n+bitcoin-cli \\- manual page for bitcoin-cli v0.21.0.0\n .SH SYNOPSIS\n .B bitcoin-cli\n [\\fI\\,options\\/\\fR] \\fI\\,<command> \\/\\fR[\\fI\\,params\\/\\fR]  \\fI\\,Send command to Bitcoin Core\\/\\fR\n@@ -15,7 +15,7 @@ bitcoin-cli \\- manual page for bitcoin-cli v0.17.99.0\n .B bitcoin-cli\n [\\fI\\,options\\/\\fR] \\fI\\,help <command>      Get help for a command\\/\\fR\n .SH DESCRIPTION\n-Bitcoin Core RPC client version v0.17.99.0\n+Bitcoin Core RPC client version v0.21.0.0\n .SH OPTIONS\n .HP\n \\-?\n@@ -31,6 +31,15 @@ location. (default: bitcoin.conf)\n .IP\n Specify data directory\n .HP\n+\\fB\\-generate\\fR\n+.IP\n+Generate blocks immediately, equivalent to RPC generatenewaddress\n+followed by RPC generatetoaddress. Optional positional integer\n+arguments are number of blocks to generate (default: 1) and\n+maximum iterations to try (default: 1000000), equivalent to RPC\n+generatetoaddress nblocks and maxtries arguments. Example:\n+bitcoin\\-cli \\fB\\-generate\\fR 4 1000\n+.HP\n \\fB\\-getinfo\\fR\n .IP\n Get general information from the remote server. Note that unlike\n@@ -43,6 +52,12 @@ be as of a different block from the chain state reported)\n .IP\n Pass named instead of positional arguments (default: false)\n .HP\n+\\fB\\-netinfo\\fR\n+.IP\n+Get network peer connection information from the remote server. An\n+optional integer argument from 0 to 4 can be passed for different\n+peers listings (default: 0).\n+.HP\n \\fB\\-rpcclienttimeout=\\fR<n>\n .IP\n Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n@@ -63,8 +78,8 @@ Password for JSON\\-RPC connections\n .HP\n \\fB\\-rpcport=\\fR<port>\n .IP\n-Connect to JSON\\-RPC on <port> (default: 8332, testnet: 18332, regtest:\n-18443)\n+Connect to JSON\\-RPC on <port> (default: 8332, testnet: 18332, signet:\n+38332, regtest: 18443)\n .HP\n \\fB\\-rpcuser=\\fR<user>\n .IP\n@@ -92,22 +107,55 @@ is used for the RPC password.\n .IP\n Read RPC password from standard input as a single line. When combined\n with \\fB\\-stdin\\fR, the first line from standard input is used for the\n-RPC password.\n+RPC password. When combined with \\fB\\-stdinwalletpassphrase\\fR,\n+\\fB\\-stdinrpcpass\\fR consumes the first line, and \\fB\\-stdinwalletpassphrase\\fR\n+consumes the second.\n+.HP\n+\\fB\\-stdinwalletpassphrase\\fR\n+.IP\n+Read wallet passphrase from standard input as a single line. When\n+combined with \\fB\\-stdin\\fR, the first line from standard input is used\n+for the wallet passphrase.\n .HP\n \\fB\\-version\\fR\n .IP\n Print version and exit\n .PP\n+Debugging/Testing options:\n+.PP\n Chain selection options:\n .HP\n+\\fB\\-chain=\\fR<chain>\n+.IP\n+Use the chain <chain> (default: main). Allowed values: main, test,\n+signet, regtest\n+.HP\n+\\fB\\-signet\\fR\n+.IP\n+Use the signet chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,signet\\/\\fR. Note that the network\n+is defined by the \\fB\\-signetchallenge\\fR parameter\n+.HP\n+\\fB\\-signetchallenge\\fR\n+.IP\n+Blocks must satisfy the given script to be considered valid (only for\n+signet networks; defaults to the global default signet test\n+network challenge)\n+.HP\n+\\fB\\-signetseednode\\fR\n+.IP\n+Specify a seed node for the signet network, in the hostname[:port]\n+format, e.g. sig.net:1234 (may be used multiple times to specify\n+multiple seed nodes; defaults to the global default signet test\n+network seed node(s))\n+.HP\n \\fB\\-testnet\\fR\n .IP\n-Use the test chain\n+Use the test chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,test\\/\\fR.\n .SH COPYRIGHT\n-Copyright (C) 2009-2019 The Bitcoin Core developers\n+Copyright (C) 2009-2020 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n+<https://bitcoincore.org/> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software."
      },
      {
        "sha": "cfa8f795a446ae7a5ade34e1a558165eb8369d85",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 203,
        "deletions": 81,
        "changes": 284,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "patch": "@@ -1,12 +1,12 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.\n-.TH BITCOIN-QT \"1\" \"February 2019\" \"bitcoin-qt v0.17.99.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n+.TH BITCOIN-QT \"1\" \"November 2020\" \"bitcoin-qt v0.21.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- manual page for bitcoin-qt v0.17.99.0\n+bitcoin-qt \\- manual page for bitcoin-qt v0.21.0.0\n .SH SYNOPSIS\n .B bitcoin-qt\n [\\fI\\,command-line options\\/\\fR]\n .SH DESCRIPTION\n-Bitcoin Core version v0.17.99.0 (64\\-bit)\n+Bitcoin Core version v0.21.0.0\n .SH OPTIONS\n .HP\n \\-?\n@@ -23,9 +23,17 @@ long fork (%s in cmd is replaced by message)\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n-0000000000000000002e63058c023a9a1de233554f28c7b21380b6c9003f36a8,\n+0000000000000000000b9d2ec5a352ecba0592946514a92f14319dc2b367fc72,\n testnet:\n-0000000000000037a8cd3e06cd5edbfe9dd1dbcc5dacab279376ef7cfc2b4c75)\n+000000000000006433d1efec504c53ca332b64963c425395515b01977bd7b3b0,\n+signet:\n+0000002a1de0f46379358c1fd09906f7ac59adf3712323ed90eb59e4c183c020)\n+.HP\n+\\fB\\-blockfilterindex=\\fR<type>\n+.IP\n+Maintain an index of compact filters by block (default: 0, values:\n+basic). If <type> is not supplied or if <type> = 1, indexes for\n+all known types are enabled.\n .HP\n \\fB\\-blocknotify=\\fR<cmd>\n .IP\n@@ -39,12 +47,20 @@ Extra transactions to keep in memory for compact block reconstructions\n .HP\n \\fB\\-blocksdir=\\fR<dir>\n .IP\n-Specify blocks directory (default: <datadir>/blocks)\n+Specify directory to hold blocks subdirectory for *.dat files (default:\n+<datadir>)\n+.HP\n+\\fB\\-blocksonly\\fR\n+.IP\n+Whether to reject transactions from network peers. Automatic broadcast\n+and rebroadcast of any transactions from inbound peers is\n+disabled, unless the peer has the 'forcerelay' permission. RPC\n+transactions are not affected. (default: 0)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file. Relative paths will be prefixed by datadir\n-location. (default: bitcoin.conf)\n+Specify path to read\\-only configuration file. Relative paths will be\n+prefixed by datadir location. (default: bitcoin.conf)\n .HP\n \\fB\\-daemon\\fR\n .IP\n@@ -56,7 +72,9 @@ Specify data directory\n .HP\n \\fB\\-dbcache=\\fR<n>\n .IP\n-Set database cache size in MiB (4 to 16384, default: 450)\n+Maximum database cache size <n> MiB (4 to 16384, default: 450). In\n+addition, unused mempool memory is shared for this cache (see\n+\\fB\\-maxmempool\\fR).\n .HP\n \\fB\\-debuglogfile=\\fR<file>\n .IP\n@@ -71,7 +89,7 @@ Specify additional configuration file, relative to the \\fB\\-datadir\\fR path\n .HP\n \\fB\\-loadblock=\\fR<file>\n .IP\n-Imports blocks from external blk000??.dat file on startup\n+Imports blocks from external file on startup\n .HP\n \\fB\\-maxmempool=\\fR<n>\n .IP\n@@ -88,7 +106,7 @@ Do not keep transactions in the mempool longer than <n> hours (default:\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n-Set the number of script verification threads (\\fB\\-8\\fR to 16, 0 = auto, <0 =\n+Set the number of script verification threads (\\fB\\-6\\fR to 15, 0 = auto, <0 =\n leave that many cores free, default: 0)\n .HP\n \\fB\\-persistmempool\\fR\n@@ -122,6 +140,18 @@ Rebuild chain state from the currently indexed blocks. When in pruning\n mode or if blocks on disk might be corrupted, use full \\fB\\-reindex\\fR\n instead.\n .HP\n+\\fB\\-settings=\\fR<file>\n+.IP\n+Specify path to dynamic settings data file. Can be disabled with\n+\\fB\\-nosettings\\fR. File is written at runtime and not meant to be\n+edited by users (use bitcoin.conf instead for custom settings).\n+Relative paths will be prefixed by datadir location. (default:\n+settings.json)\n+.HP\n+\\fB\\-startupnotify=\\fR<cmd>\n+.IP\n+Execute command on startup.\n+.HP\n \\fB\\-sysperms\\fR\n .IP\n Create new files with system default permissions, instead of umask 077\n@@ -144,19 +174,24 @@ Add a node to connect to and attempt to keep the connection open (see\n the `addnode` RPC command help for more info). This option can be\n specified multiple times to add multiple nodes.\n .HP\n-\\fB\\-banscore=\\fR<n>\n+\\fB\\-asmap=\\fR<file>\n .IP\n-Threshold for disconnecting misbehaving peers (default: 100)\n+Specify asn mapping used for bucketing of the peers (default:\n+ip_asn.map). Relative paths will be prefixed by the net\\-specific\n+datadir location.\n .HP\n \\fB\\-bantime=\\fR<n>\n .IP\n-Number of seconds to keep misbehaving peers from reconnecting (default:\n+Default duration (in seconds) of manually configured bans (default:\n 86400)\n .HP\n-\\fB\\-bind=\\fR<addr>\n+\\fB\\-bind=\\fR<addr>[:<port>][=onion]\n .IP\n-Bind to given address and always listen on it. Use [host]:port notation\n-for IPv6\n+Bind to given address and always listen on it (default: 0.0.0.0). Use\n+[host]:port notation for IPv6. Append =onion to tag any incoming\n+connections to that address and port as incoming Tor connections\n+(default: 127.0.0.1:8334=onion, testnet: 127.0.0.1:18334=onion,\n+signet: 127.0.0.1:38334=onion, regtest: 127.0.0.1:18445=onion)\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n@@ -193,7 +228,7 @@ Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\\n .HP\n \\fB\\-listenonion\\fR\n .IP\n-Automatically create Tor hidden service (default: 1)\n+Automatically create Tor onion service (default: 1)\n .HP\n \\fB\\-maxconnections=\\fR<n>\n .IP\n@@ -215,12 +250,18 @@ amount. (default: 4200 seconds)\n .HP\n \\fB\\-maxuploadtarget=\\fR<n>\n .IP\n-Tries to keep outbound traffic under the given target (in MiB per 24h),\n-0 = no limit (default: 0)\n+Tries to keep outbound traffic under the given target (in MiB per 24h).\n+Limit does not apply to peers with 'download' permission. 0 = no\n+limit (default: 0)\n+.HP\n+\\fB\\-networkactive\\fR\n+.IP\n+Enable all P2P network activity (default: 1). Can be changed by the\n+setnetworkactive RPC command\n .HP\n \\fB\\-onion=\\fR<ip:port>\n .IP\n-Use separate SOCKS5 proxy to reach peers via Tor hidden services, set\n+Use separate SOCKS5 proxy to reach peers via Tor onion services, set\n \\fB\\-noonion\\fR to disable (default: \\fB\\-proxy\\fR)\n .HP\n \\fB\\-onlynet=\\fR<net>\n@@ -230,19 +271,23 @@ onion). Incoming connections are not affected by this option.\n This option can be specified multiple times to allow multiple\n networks.\n .HP\n+\\fB\\-peerblockfilters\\fR\n+.IP\n+Serve compact block filters to peers per BIP 157 (default: 0)\n+.HP\n \\fB\\-peerbloomfilters\\fR\n .IP\n Support filtering of blocks and transaction with bloom filters (default:\n-1)\n+0)\n .HP\n \\fB\\-permitbaremultisig\\fR\n .IP\n Relay non\\-P2SH multisig (default: 1)\n .HP\n \\fB\\-port=\\fR<port>\n .IP\n-Listen for connections on <port> (default: 8333, testnet: 18333,\n-regtest: 18444)\n+Listen for connections on <port> (default: 8333, testnet: 18333 signet:\n+38333, regtest: 18444)\n .HP\n \\fB\\-proxy=\\fR<ip:port>\n .IP\n@@ -277,33 +322,44 @@ Tor control port password (default: empty)\n .IP\n Use UPnP to map the listening port (default: 0)\n .HP\n-\\fB\\-whitebind=\\fR<addr>\n-.IP\n-Bind to given address and whitelist peers connecting to it. Use\n-[host]:port notation for IPv6\n-.HP\n-\\fB\\-whitelist=\\fR<IP address or network>\n-.IP\n-Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n-CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n-times. Whitelisted peers cannot be DoS banned and their\n-transactions are always relayed, even if they are already in the\n-mempool, useful e.g. for a gateway\n+\\fB\\-whitebind=\\fR<[permissions@]addr>\n+.IP\n+Bind to the given address and add permission flags to the peers\n+connecting to it. Use [host]:port notation for IPv6. Allowed\n+permissions: bloomfilter (allow requesting BIP37 filtered blocks\n+and transactions), noban (do not ban for misbehavior; implies\n+download), forcerelay (relay transactions that are already in the\n+mempool; implies relay), relay (relay even in \\fB\\-blocksonly\\fR mode,\n+and unlimited transaction announcements), mempool (allow\n+requesting BIP35 mempool contents), download (allow getheaders\n+during IBD, no disconnect after maxuploadtarget limit), addr\n+(responses to GETADDR avoid hitting the cache and contain random\n+records with the most up\\-to\\-date info). Specify multiple\n+permissions separated by commas (default:\n+download,noban,mempool,relay). Can be specified multiple times.\n+.HP\n+\\fB\\-whitelist=\\fR<[permissions@]IP address or network>\n+.IP\n+Add permission flags to the peers connecting from the given IP address\n+(e.g. 1.2.3.4) or CIDR\\-notated network (e.g. 1.2.3.0/24). Uses\n+the same permissions as \\fB\\-whitebind\\fR. Can be specified multiple\n+times.\n .PP\n Wallet options:\n .HP\n \\fB\\-addresstype\\fR\n .IP\n What type of addresses to use (\"legacy\", \"p2sh\\-segwit\", or \"bech32\",\n-default: \"p2sh\\-segwit\")\n+default: \"bech32\")\n .HP\n \\fB\\-avoidpartialspends\\fR\n .IP\n Group outputs by address, selecting all or none, instead of selecting on\n a per\\-output basis. Privacy is improved as an address is only\n used once (unless someone sends to it after spending from it),\n but may result in slightly higher fees as suboptimal coin\n-selection may result due to the added limitation (default: 0)\n+selection may result due to the added limitation (default: 0\n+(always enabled for wallets with \"avoid_reuse\" enabled))\n .HP\n \\fB\\-changetype\\fR\n .IP\n@@ -327,11 +383,20 @@ limited by the fee estimate for the longest target\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n A fee rate (in BTC/kB) that will be used when fee estimation has\n-insufficient data (default: 0.0002)\n+insufficient data. 0 to entirely disable the fallbackfee feature.\n+(default: 0.00)\n .HP\n \\fB\\-keypool=\\fR<n>\n .IP\n-Set key pool size to <n> (default: 1000)\n+Set key pool size to <n> (default: 1000). Warning: Smaller sizes may\n+increase the risk of losing funds when restoring from an old\n+backup, if none of the addresses in the original keypool have\n+been used.\n+.HP\n+\\fB\\-maxapsfee=\\fR<n>\n+.IP\n+Spend up to this amount in additional (absolute) fees (in BTC) if it\n+allows the use of partial spend avoidance (default: 0.00)\n .HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n@@ -346,10 +411,6 @@ Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n .IP\n Rescan the block chain for missing wallet transactions on startup\n .HP\n-\\fB\\-salvagewallet\\fR\n-.IP\n-Attempt to recover private keys from a corrupt wallet on startup\n-.HP\n \\fB\\-spendzeroconfchange\\fR\n .IP\n Spend unconfirmed change when sending transactions (default: 1)\n@@ -359,18 +420,15 @@ Spend unconfirmed change when sending transactions (default: 1)\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n .HP\n-\\fB\\-upgradewallet\\fR\n-.IP\n-Upgrade wallet to latest format on startup\n-.HP\n \\fB\\-wallet=\\fR<path>\n .IP\n-Specify wallet database path. Can be specified multiple times to load\n-multiple wallets. Path is interpreted relative to <walletdir> if\n-it is not absolute, and will be created if it does not exist (as\n-a directory containing a wallet.dat file and log files). For\n-backwards compatibility this will also accept names of existing\n-data files in <walletdir>.)\n+Specify wallet path to load at startup. Can be used multiple times to\n+load multiple wallets. Path is to a directory containing wallet\n+data and log files. If the path is not absolute, it is\n+interpreted relative to <walletdir>. This only loads existing\n+wallets and does not create new ones. For backwards compatibility\n+this also accepts names of existing top\\-level data files in\n+<walletdir>.\n .HP\n \\fB\\-walletbroadcast\\fR\n .IP\n@@ -383,36 +441,59 @@ exists, otherwise <datadir>)\n .HP\n \\fB\\-walletnotify=\\fR<cmd>\n .IP\n-Execute command when a wallet transaction changes (%s in cmd is replaced\n-by TxID)\n+Execute command when a wallet transaction changes. %s in cmd is replaced\n+by TxID and %w is replaced by wallet name. %w is not currently\n+implemented on windows. On systems where %w is supported, it\n+should NOT be quoted because this would break shell escaping used\n+to invoke the command.\n .HP\n \\fB\\-walletrbf\\fR\n .IP\n Send transactions with full\\-RBF opt\\-in enabled (RPC only, default: 0)\n-.HP\n-\\fB\\-zapwallettxes=\\fR<mode>\n-.IP\n-Delete all wallet transactions and only recover those parts of the\n-blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n-payment request information, 2 = drop tx meta data)\n .PP\n ZeroMQ notification options:\n .HP\n \\fB\\-zmqpubhashblock=\\fR<address>\n .IP\n Enable publish hash block in <address>\n .HP\n+\\fB\\-zmqpubhashblockhwm=\\fR<n>\n+.IP\n+Set publish hash block outbound message high water mark (default: 1000)\n+.HP\n \\fB\\-zmqpubhashtx=\\fR<address>\n .IP\n Enable publish hash transaction in <address>\n .HP\n+\\fB\\-zmqpubhashtxhwm=\\fR<n>\n+.IP\n+Set publish hash transaction outbound message high water mark (default:\n+1000)\n+.HP\n \\fB\\-zmqpubrawblock=\\fR<address>\n .IP\n Enable publish raw block in <address>\n .HP\n+\\fB\\-zmqpubrawblockhwm=\\fR<n>\n+.IP\n+Set publish raw block outbound message high water mark (default: 1000)\n+.HP\n \\fB\\-zmqpubrawtx=\\fR<address>\n .IP\n Enable publish raw transaction in <address>\n+.HP\n+\\fB\\-zmqpubrawtxhwm=\\fR<n>\n+.IP\n+Set publish raw transaction outbound message high water mark (default:\n+1000)\n+.HP\n+\\fB\\-zmqpubsequence=\\fR<address>\n+.IP\n+Enable publish hash block and tx sequence in <address>\n+.HP\n+\\fB\\-zmqpubsequencehwm=\\fR<n>\n+.IP\n+Set publish hash sequence message high water mark (default: 1000)\n .PP\n Debugging/Testing options:\n .HP\n@@ -421,9 +502,9 @@ Debugging/Testing options:\n Output debugging information (default: \\fB\\-nodebug\\fR, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n output all debugging information. <category> can be: net, tor,\n-mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+mempool, http, bench, zmq, walletdb, rpc, estimatefee, addrman,\n selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n-libevent, coindb, qt, leveldb.\n+libevent, coindb, qt, leveldb, validation.\n .HP\n \\fB\\-debugexclude=\\fR<category>\n .IP\n@@ -439,15 +520,19 @@ Print help message with debugging options and exit\n .IP\n Include IP addresses in debug output (default: 0)\n .HP\n+\\fB\\-logthreadnames\\fR\n+.IP\n+Prepend debug output with name of the originating thread (only available\n+on platforms supporting thread_local) (default: 0)\n+.HP\n \\fB\\-logtimestamps\\fR\n .IP\n Prepend debug output with timestamp (default: 1)\n .HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n-Maximum total fees (in BTC) to use in a single wallet transaction or raw\n-transaction; setting this too low may abort large transactions\n-(default: 0.10)\n+Maximum total fees (in BTC) to use in a single wallet transaction;\n+setting this too low may abort large transactions (default: 0.10)\n .HP\n \\fB\\-printtoconsole\\fR\n .IP\n@@ -464,9 +549,32 @@ Append comment to the user agent string\n .PP\n Chain selection options:\n .HP\n+\\fB\\-chain=\\fR<chain>\n+.IP\n+Use the chain <chain> (default: main). Allowed values: main, test,\n+signet, regtest\n+.HP\n+\\fB\\-signet\\fR\n+.IP\n+Use the signet chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,signet\\/\\fR. Note that the network\n+is defined by the \\fB\\-signetchallenge\\fR parameter\n+.HP\n+\\fB\\-signetchallenge\\fR\n+.IP\n+Blocks must satisfy the given script to be considered valid (only for\n+signet networks; defaults to the global default signet test\n+network challenge)\n+.HP\n+\\fB\\-signetseednode\\fR\n+.IP\n+Specify a seed node for the signet network, in the hostname[:port]\n+format, e.g. sig.net:1234 (may be used multiple times to specify\n+multiple seed nodes; defaults to the global default signet test\n+network seed node(s))\n+.HP\n \\fB\\-testnet\\fR\n .IP\n-Use the test chain\n+Use the test chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,test\\/\\fR.\n .PP\n Node relay options:\n .HP\n@@ -484,21 +592,22 @@ Relay and mine data carrier transactions (default: 1)\n Maximum size of data in data carrier transactions we relay and mine\n (default: 83)\n .HP\n-.HP\n \\fB\\-minrelaytxfee=\\fR<amt>\n .IP\n Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n mining and transaction creation (default: 0.00001)\n .HP\n \\fB\\-whitelistforcerelay\\fR\n .IP\n-Force relay of transactions from whitelisted peers even if they violate\n-local relay policy (default: 0)\n+Add 'forcerelay' permission to whitelisted inbound peers with default\n+permissions. This will relay transactions even if the\n+transactions were already in the mempool. (default: 0)\n .HP\n \\fB\\-whitelistrelay\\fR\n .IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n+Add 'relay' permission to whitelisted inbound peers with default\n+permissions. This will accept relayed transactions even when not\n+relaying transactions (default: 1)\n .PP\n Block creation options:\n .HP\n@@ -554,7 +663,7 @@ Password for JSON\\-RPC connections\n \\fB\\-rpcport=\\fR<port>\n .IP\n Listen for JSON\\-RPC connections on <port> (default: 8332, testnet:\n-18332, regtest: 18443)\n+18332, signet: 38332, regtest: 18443)\n .HP\n \\fB\\-rpcserialversion\\fR\n .IP\n@@ -569,6 +678,23 @@ Set the number of threads to service RPC calls (default: 4)\n .IP\n Username for JSON\\-RPC connections\n .HP\n+\\fB\\-rpcwhitelist=\\fR<whitelist>\n+.IP\n+Set a whitelist to filter incoming RPC calls for a specific user. The\n+field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc\n+2>,...,<rpc n>. If multiple whitelists are set for a given user,\n+they are set\\-intersected. See \\fB\\-rpcwhitelistdefault\\fR documentation\n+for information on default whitelist behavior.\n+.HP\n+\\fB\\-rpcwhitelistdefault\\fR\n+.IP\n+Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault\n+is set to 0, if any \\fB\\-rpcwhitelist\\fR is set, the rpc server acts as\n+if all rpc users are subject to empty\\-unless\\-otherwise\\-specified\n+whitelists. If rpcwhitelistdefault is set to 1 and no\n+\\fB\\-rpcwhitelist\\fR is set, rpc server acts as if all rpc users are\n+subject to empty whitelists.\n+.HP\n \\fB\\-server\\fR\n .IP\n Accept command line and JSON\\-RPC commands\n@@ -591,18 +717,14 @@ Start minimized\n .IP\n Reset all settings changed in the GUI\n .HP\n-\\fB\\-rootcertificates=\\fR<file>\n-.IP\n-Set SSL root certificates for payment request (default: \\fB\\-system\\-\\fR)\n-.HP\n \\fB\\-splash\\fR\n .IP\n Show splash screen on startup (default: 1)\n .SH COPYRIGHT\n-Copyright (C) 2009-2019 The Bitcoin Core developers\n+Copyright (C) 2009-2020 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n+<https://bitcoincore.org/> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software."
      },
      {
        "sha": "b087bdfc1c7a82a837a3ab16310ef9f5e5f27c22",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 32,
        "deletions": 7,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "patch": "@@ -1,15 +1,15 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.\n-.TH BITCOIN-TX \"1\" \"February 2019\" \"bitcoin-tx v0.17.99.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n+.TH BITCOIN-TX \"1\" \"November 2020\" \"bitcoin-tx v0.21.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-tx \\- manual page for bitcoin-tx v0.17.99.0\n+bitcoin-tx \\- manual page for bitcoin-tx v0.21.0.0\n .SH SYNOPSIS\n .B bitcoin-tx\n [\\fI\\,options\\/\\fR] \\fI\\,<hex-tx> \\/\\fR[\\fI\\,commands\\/\\fR]  \\fI\\,Update hex-encoded bitcoin transaction\\/\\fR\n .br\n .B bitcoin-tx\n [\\fI\\,options\\/\\fR] \\fI\\,-create \\/\\fR[\\fI\\,commands\\/\\fR]   \\fI\\,Create hex-encoded bitcoin transaction\\/\\fR\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-tx utility version v0.17.99.0\n+Bitcoin Core bitcoin\\-tx utility version v0.21.0.0\n .SH OPTIONS\n .HP\n \\-?\n@@ -28,11 +28,36 @@ Select JSON output\n .IP\n Output only the hex\\-encoded transaction id of the resultant transaction.\n .PP\n+Debugging/Testing options:\n+.PP\n Chain selection options:\n .HP\n+\\fB\\-chain=\\fR<chain>\n+.IP\n+Use the chain <chain> (default: main). Allowed values: main, test,\n+signet, regtest\n+.HP\n+\\fB\\-signet\\fR\n+.IP\n+Use the signet chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,signet\\/\\fR. Note that the network\n+is defined by the \\fB\\-signetchallenge\\fR parameter\n+.HP\n+\\fB\\-signetchallenge\\fR\n+.IP\n+Blocks must satisfy the given script to be considered valid (only for\n+signet networks; defaults to the global default signet test\n+network challenge)\n+.HP\n+\\fB\\-signetseednode\\fR\n+.IP\n+Specify a seed node for the signet network, in the hostname[:port]\n+format, e.g. sig.net:1234 (may be used multiple times to specify\n+multiple seed nodes; defaults to the global default signet test\n+network seed node(s))\n+.HP\n \\fB\\-testnet\\fR\n .IP\n-Use the test chain\n+Use the test chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,test\\/\\fR.\n .PP\n Commands:\n .IP\n@@ -105,10 +130,10 @@ set=NAME:JSON\\-STRING\n .IP\n Set register NAME to given JSON\\-STRING\n .SH COPYRIGHT\n-Copyright (C) 2009-2019 The Bitcoin Core developers\n+Copyright (C) 2009-2020 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n+<https://bitcoincore.org/> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software."
      },
      {
        "sha": "d358799c27d8fa1828b5abe5be664113b8f44910",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 38,
        "deletions": 10,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "patch": "@@ -1,12 +1,12 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.\n-.TH BITCOIN-WALLET \"1\" \"February 2019\" \"bitcoin-wallet v0.17.99.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n+.TH BITCOIN-WALLET \"1\" \"November 2020\" \"bitcoin-wallet v0.21.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-wallet \\- manual page for bitcoin-wallet v0.17.99.0\n+bitcoin-wallet \\- manual page for bitcoin-wallet v0.21.0.0\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-wallet version v0.17.99.0\n+Bitcoin Core bitcoin\\-wallet version v0.21.0.0\n .PP\n-wallet\\-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\n-By default wallet\\-tool will act on wallets in the default mainnet wallet directory in the datadir.\n+bitcoin\\-wallet is an offline tool for creating and interacting with Bitcoin Core wallet files.\n+By default bitcoin\\-wallet will act on wallets in the default mainnet wallet directory in the datadir.\n To change the target wallet, use the \\fB\\-datadir\\fR, \\fB\\-wallet\\fR and \\fB\\-testnet\\fR/\\-regtest arguments.\n .SS \"Usage:\"\n .IP\n@@ -34,13 +34,36 @@ Output debugging information (default: 0).\n \\fB\\-printtoconsole\\fR\n .IP\n Send trace/debug info to console (default: 1 when no \\fB\\-debug\\fR is true, 0\n-otherwise.\n+otherwise).\n .PP\n Chain selection options:\n .HP\n+\\fB\\-chain=\\fR<chain>\n+.IP\n+Use the chain <chain> (default: main). Allowed values: main, test,\n+signet, regtest\n+.HP\n+\\fB\\-signet\\fR\n+.IP\n+Use the signet chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,signet\\/\\fR. Note that the network\n+is defined by the \\fB\\-signetchallenge\\fR parameter\n+.HP\n+\\fB\\-signetchallenge\\fR\n+.IP\n+Blocks must satisfy the given script to be considered valid (only for\n+signet networks; defaults to the global default signet test\n+network challenge)\n+.HP\n+\\fB\\-signetseednode\\fR\n+.IP\n+Specify a seed node for the signet network, in the hostname[:port]\n+format, e.g. sig.net:1234 (may be used multiple times to specify\n+multiple seed nodes; defaults to the global default signet test\n+network seed node(s))\n+.HP\n \\fB\\-testnet\\fR\n .IP\n-Use the test chain\n+Use the test chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,test\\/\\fR.\n .PP\n Commands:\n .IP\n@@ -51,11 +74,16 @@ Create new wallet file\n info\n .IP\n Get wallet info\n+.IP\n+salvage\n+.IP\n+Attempt to recover private keys from a corrupt wallet. Warning:\n+\\&'salvage' is experimental.\n .SH COPYRIGHT\n-Copyright (C) 2009-2019 The Bitcoin Core developers\n+Copyright (C) 2009-2020 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n+<https://bitcoincore.org/> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software."
      },
      {
        "sha": "8dbd0bdde35e4b256fdd85a9b55fea95a42859f8",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 204,
        "deletions": 77,
        "changes": 281,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "patch": "@@ -1,12 +1,12 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.\n-.TH BITCOIND \"1\" \"February 2019\" \"bitcoind v0.17.99.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n+.TH BITCOIND \"1\" \"November 2020\" \"bitcoind v0.21.0.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- manual page for bitcoind v0.17.99.0\n+bitcoind \\- manual page for bitcoind v0.21.0.0\n .SH SYNOPSIS\n .B bitcoind\n-[\\fI\\,options\\/\\fR]                     \\fI\\,Start Bitcoin Core Daemon\\/\\fR\n+[\\fI\\,options\\/\\fR]                     \\fI\\,Start Bitcoin Core\\/\\fR\n .SH DESCRIPTION\n-Bitcoin Core Daemon version v0.17.99.0\n+Bitcoin Core version v0.21.0.0\n .SH OPTIONS\n .HP\n \\-?\n@@ -23,9 +23,17 @@ long fork (%s in cmd is replaced by message)\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n-0000000000000000002e63058c023a9a1de233554f28c7b21380b6c9003f36a8,\n+0000000000000000000b9d2ec5a352ecba0592946514a92f14319dc2b367fc72,\n testnet:\n-0000000000000037a8cd3e06cd5edbfe9dd1dbcc5dacab279376ef7cfc2b4c75)\n+000000000000006433d1efec504c53ca332b64963c425395515b01977bd7b3b0,\n+signet:\n+0000002a1de0f46379358c1fd09906f7ac59adf3712323ed90eb59e4c183c020)\n+.HP\n+\\fB\\-blockfilterindex=\\fR<type>\n+.IP\n+Maintain an index of compact filters by block (default: 0, values:\n+basic). If <type> is not supplied or if <type> = 1, indexes for\n+all known types are enabled.\n .HP\n \\fB\\-blocknotify=\\fR<cmd>\n .IP\n@@ -39,12 +47,20 @@ Extra transactions to keep in memory for compact block reconstructions\n .HP\n \\fB\\-blocksdir=\\fR<dir>\n .IP\n-Specify blocks directory (default: <datadir>/blocks)\n+Specify directory to hold blocks subdirectory for *.dat files (default:\n+<datadir>)\n+.HP\n+\\fB\\-blocksonly\\fR\n+.IP\n+Whether to reject transactions from network peers. Automatic broadcast\n+and rebroadcast of any transactions from inbound peers is\n+disabled, unless the peer has the 'forcerelay' permission. RPC\n+transactions are not affected. (default: 0)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file. Relative paths will be prefixed by datadir\n-location. (default: bitcoin.conf)\n+Specify path to read\\-only configuration file. Relative paths will be\n+prefixed by datadir location. (default: bitcoin.conf)\n .HP\n \\fB\\-daemon\\fR\n .IP\n@@ -56,7 +72,9 @@ Specify data directory\n .HP\n \\fB\\-dbcache=\\fR<n>\n .IP\n-Set database cache size in MiB (4 to 16384, default: 450)\n+Maximum database cache size <n> MiB (4 to 16384, default: 450). In\n+addition, unused mempool memory is shared for this cache (see\n+\\fB\\-maxmempool\\fR).\n .HP\n \\fB\\-debuglogfile=\\fR<file>\n .IP\n@@ -71,7 +89,7 @@ Specify additional configuration file, relative to the \\fB\\-datadir\\fR path\n .HP\n \\fB\\-loadblock=\\fR<file>\n .IP\n-Imports blocks from external blk000??.dat file on startup\n+Imports blocks from external file on startup\n .HP\n \\fB\\-maxmempool=\\fR<n>\n .IP\n@@ -88,7 +106,7 @@ Do not keep transactions in the mempool longer than <n> hours (default:\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n-Set the number of script verification threads (\\fB\\-8\\fR to 16, 0 = auto, <0 =\n+Set the number of script verification threads (\\fB\\-6\\fR to 15, 0 = auto, <0 =\n leave that many cores free, default: 0)\n .HP\n \\fB\\-persistmempool\\fR\n@@ -122,6 +140,18 @@ Rebuild chain state from the currently indexed blocks. When in pruning\n mode or if blocks on disk might be corrupted, use full \\fB\\-reindex\\fR\n instead.\n .HP\n+\\fB\\-settings=\\fR<file>\n+.IP\n+Specify path to dynamic settings data file. Can be disabled with\n+\\fB\\-nosettings\\fR. File is written at runtime and not meant to be\n+edited by users (use bitcoin.conf instead for custom settings).\n+Relative paths will be prefixed by datadir location. (default:\n+settings.json)\n+.HP\n+\\fB\\-startupnotify=\\fR<cmd>\n+.IP\n+Execute command on startup.\n+.HP\n \\fB\\-sysperms\\fR\n .IP\n Create new files with system default permissions, instead of umask 077\n@@ -144,19 +174,24 @@ Add a node to connect to and attempt to keep the connection open (see\n the `addnode` RPC command help for more info). This option can be\n specified multiple times to add multiple nodes.\n .HP\n-\\fB\\-banscore=\\fR<n>\n+\\fB\\-asmap=\\fR<file>\n .IP\n-Threshold for disconnecting misbehaving peers (default: 100)\n+Specify asn mapping used for bucketing of the peers (default:\n+ip_asn.map). Relative paths will be prefixed by the net\\-specific\n+datadir location.\n .HP\n \\fB\\-bantime=\\fR<n>\n .IP\n-Number of seconds to keep misbehaving peers from reconnecting (default:\n+Default duration (in seconds) of manually configured bans (default:\n 86400)\n .HP\n-\\fB\\-bind=\\fR<addr>\n+\\fB\\-bind=\\fR<addr>[:<port>][=onion]\n .IP\n-Bind to given address and always listen on it. Use [host]:port notation\n-for IPv6\n+Bind to given address and always listen on it (default: 0.0.0.0). Use\n+[host]:port notation for IPv6. Append =onion to tag any incoming\n+connections to that address and port as incoming Tor connections\n+(default: 127.0.0.1:8334=onion, testnet: 127.0.0.1:18334=onion,\n+signet: 127.0.0.1:38334=onion, regtest: 127.0.0.1:18445=onion)\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n@@ -193,7 +228,7 @@ Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\\n .HP\n \\fB\\-listenonion\\fR\n .IP\n-Automatically create Tor hidden service (default: 1)\n+Automatically create Tor onion service (default: 1)\n .HP\n \\fB\\-maxconnections=\\fR<n>\n .IP\n@@ -215,12 +250,18 @@ amount. (default: 4200 seconds)\n .HP\n \\fB\\-maxuploadtarget=\\fR<n>\n .IP\n-Tries to keep outbound traffic under the given target (in MiB per 24h),\n-0 = no limit (default: 0)\n+Tries to keep outbound traffic under the given target (in MiB per 24h).\n+Limit does not apply to peers with 'download' permission. 0 = no\n+limit (default: 0)\n+.HP\n+\\fB\\-networkactive\\fR\n+.IP\n+Enable all P2P network activity (default: 1). Can be changed by the\n+setnetworkactive RPC command\n .HP\n \\fB\\-onion=\\fR<ip:port>\n .IP\n-Use separate SOCKS5 proxy to reach peers via Tor hidden services, set\n+Use separate SOCKS5 proxy to reach peers via Tor onion services, set\n \\fB\\-noonion\\fR to disable (default: \\fB\\-proxy\\fR)\n .HP\n \\fB\\-onlynet=\\fR<net>\n@@ -230,19 +271,23 @@ onion). Incoming connections are not affected by this option.\n This option can be specified multiple times to allow multiple\n networks.\n .HP\n+\\fB\\-peerblockfilters\\fR\n+.IP\n+Serve compact block filters to peers per BIP 157 (default: 0)\n+.HP\n \\fB\\-peerbloomfilters\\fR\n .IP\n Support filtering of blocks and transaction with bloom filters (default:\n-1)\n+0)\n .HP\n \\fB\\-permitbaremultisig\\fR\n .IP\n Relay non\\-P2SH multisig (default: 1)\n .HP\n \\fB\\-port=\\fR<port>\n .IP\n-Listen for connections on <port> (default: 8333, testnet: 18333,\n-regtest: 18444)\n+Listen for connections on <port> (default: 8333, testnet: 18333 signet:\n+38333, regtest: 18444)\n .HP\n \\fB\\-proxy=\\fR<ip:port>\n .IP\n@@ -277,33 +322,44 @@ Tor control port password (default: empty)\n .IP\n Use UPnP to map the listening port (default: 0)\n .HP\n-\\fB\\-whitebind=\\fR<addr>\n-.IP\n-Bind to given address and whitelist peers connecting to it. Use\n-[host]:port notation for IPv6\n-.HP\n-\\fB\\-whitelist=\\fR<IP address or network>\n-.IP\n-Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n-CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n-times. Whitelisted peers cannot be DoS banned and their\n-transactions are always relayed, even if they are already in the\n-mempool, useful e.g. for a gateway\n+\\fB\\-whitebind=\\fR<[permissions@]addr>\n+.IP\n+Bind to the given address and add permission flags to the peers\n+connecting to it. Use [host]:port notation for IPv6. Allowed\n+permissions: bloomfilter (allow requesting BIP37 filtered blocks\n+and transactions), noban (do not ban for misbehavior; implies\n+download), forcerelay (relay transactions that are already in the\n+mempool; implies relay), relay (relay even in \\fB\\-blocksonly\\fR mode,\n+and unlimited transaction announcements), mempool (allow\n+requesting BIP35 mempool contents), download (allow getheaders\n+during IBD, no disconnect after maxuploadtarget limit), addr\n+(responses to GETADDR avoid hitting the cache and contain random\n+records with the most up\\-to\\-date info). Specify multiple\n+permissions separated by commas (default:\n+download,noban,mempool,relay). Can be specified multiple times.\n+.HP\n+\\fB\\-whitelist=\\fR<[permissions@]IP address or network>\n+.IP\n+Add permission flags to the peers connecting from the given IP address\n+(e.g. 1.2.3.4) or CIDR\\-notated network (e.g. 1.2.3.0/24). Uses\n+the same permissions as \\fB\\-whitebind\\fR. Can be specified multiple\n+times.\n .PP\n Wallet options:\n .HP\n \\fB\\-addresstype\\fR\n .IP\n What type of addresses to use (\"legacy\", \"p2sh\\-segwit\", or \"bech32\",\n-default: \"p2sh\\-segwit\")\n+default: \"bech32\")\n .HP\n \\fB\\-avoidpartialspends\\fR\n .IP\n Group outputs by address, selecting all or none, instead of selecting on\n a per\\-output basis. Privacy is improved as an address is only\n used once (unless someone sends to it after spending from it),\n but may result in slightly higher fees as suboptimal coin\n-selection may result due to the added limitation (default: 0)\n+selection may result due to the added limitation (default: 0\n+(always enabled for wallets with \"avoid_reuse\" enabled))\n .HP\n \\fB\\-changetype\\fR\n .IP\n@@ -327,11 +383,20 @@ limited by the fee estimate for the longest target\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n A fee rate (in BTC/kB) that will be used when fee estimation has\n-insufficient data (default: 0.0002)\n+insufficient data. 0 to entirely disable the fallbackfee feature.\n+(default: 0.00)\n .HP\n \\fB\\-keypool=\\fR<n>\n .IP\n-Set key pool size to <n> (default: 1000)\n+Set key pool size to <n> (default: 1000). Warning: Smaller sizes may\n+increase the risk of losing funds when restoring from an old\n+backup, if none of the addresses in the original keypool have\n+been used.\n+.HP\n+\\fB\\-maxapsfee=\\fR<n>\n+.IP\n+Spend up to this amount in additional (absolute) fees (in BTC) if it\n+allows the use of partial spend avoidance (default: 0.00)\n .HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n@@ -346,10 +411,6 @@ Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n .IP\n Rescan the block chain for missing wallet transactions on startup\n .HP\n-\\fB\\-salvagewallet\\fR\n-.IP\n-Attempt to recover private keys from a corrupt wallet on startup\n-.HP\n \\fB\\-spendzeroconfchange\\fR\n .IP\n Spend unconfirmed change when sending transactions (default: 1)\n@@ -359,18 +420,15 @@ Spend unconfirmed change when sending transactions (default: 1)\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n .HP\n-\\fB\\-upgradewallet\\fR\n-.IP\n-Upgrade wallet to latest format on startup\n-.HP\n \\fB\\-wallet=\\fR<path>\n .IP\n-Specify wallet database path. Can be specified multiple times to load\n-multiple wallets. Path is interpreted relative to <walletdir> if\n-it is not absolute, and will be created if it does not exist (as\n-a directory containing a wallet.dat file and log files). For\n-backwards compatibility this will also accept names of existing\n-data files in <walletdir>.)\n+Specify wallet path to load at startup. Can be used multiple times to\n+load multiple wallets. Path is to a directory containing wallet\n+data and log files. If the path is not absolute, it is\n+interpreted relative to <walletdir>. This only loads existing\n+wallets and does not create new ones. For backwards compatibility\n+this also accepts names of existing top\\-level data files in\n+<walletdir>.\n .HP\n \\fB\\-walletbroadcast\\fR\n .IP\n@@ -383,36 +441,59 @@ exists, otherwise <datadir>)\n .HP\n \\fB\\-walletnotify=\\fR<cmd>\n .IP\n-Execute command when a wallet transaction changes (%s in cmd is replaced\n-by TxID)\n+Execute command when a wallet transaction changes. %s in cmd is replaced\n+by TxID and %w is replaced by wallet name. %w is not currently\n+implemented on windows. On systems where %w is supported, it\n+should NOT be quoted because this would break shell escaping used\n+to invoke the command.\n .HP\n \\fB\\-walletrbf\\fR\n .IP\n Send transactions with full\\-RBF opt\\-in enabled (RPC only, default: 0)\n-.HP\n-\\fB\\-zapwallettxes=\\fR<mode>\n-.IP\n-Delete all wallet transactions and only recover those parts of the\n-blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n-payment request information, 2 = drop tx meta data)\n .PP\n ZeroMQ notification options:\n .HP\n \\fB\\-zmqpubhashblock=\\fR<address>\n .IP\n Enable publish hash block in <address>\n .HP\n+\\fB\\-zmqpubhashblockhwm=\\fR<n>\n+.IP\n+Set publish hash block outbound message high water mark (default: 1000)\n+.HP\n \\fB\\-zmqpubhashtx=\\fR<address>\n .IP\n Enable publish hash transaction in <address>\n .HP\n+\\fB\\-zmqpubhashtxhwm=\\fR<n>\n+.IP\n+Set publish hash transaction outbound message high water mark (default:\n+1000)\n+.HP\n \\fB\\-zmqpubrawblock=\\fR<address>\n .IP\n Enable publish raw block in <address>\n .HP\n+\\fB\\-zmqpubrawblockhwm=\\fR<n>\n+.IP\n+Set publish raw block outbound message high water mark (default: 1000)\n+.HP\n \\fB\\-zmqpubrawtx=\\fR<address>\n .IP\n Enable publish raw transaction in <address>\n+.HP\n+\\fB\\-zmqpubrawtxhwm=\\fR<n>\n+.IP\n+Set publish raw transaction outbound message high water mark (default:\n+1000)\n+.HP\n+\\fB\\-zmqpubsequence=\\fR<address>\n+.IP\n+Enable publish hash block and tx sequence in <address>\n+.HP\n+\\fB\\-zmqpubsequencehwm=\\fR<n>\n+.IP\n+Set publish hash sequence message high water mark (default: 1000)\n .PP\n Debugging/Testing options:\n .HP\n@@ -421,9 +502,9 @@ Debugging/Testing options:\n Output debugging information (default: \\fB\\-nodebug\\fR, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n output all debugging information. <category> can be: net, tor,\n-mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+mempool, http, bench, zmq, walletdb, rpc, estimatefee, addrman,\n selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n-libevent, coindb, qt, leveldb.\n+libevent, coindb, qt, leveldb, validation.\n .HP\n \\fB\\-debugexclude=\\fR<category>\n .IP\n@@ -439,15 +520,19 @@ Print help message with debugging options and exit\n .IP\n Include IP addresses in debug output (default: 0)\n .HP\n+\\fB\\-logthreadnames\\fR\n+.IP\n+Prepend debug output with name of the originating thread (only available\n+on platforms supporting thread_local) (default: 0)\n+.HP\n \\fB\\-logtimestamps\\fR\n .IP\n Prepend debug output with timestamp (default: 1)\n .HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n-Maximum total fees (in BTC) to use in a single wallet transaction or raw\n-transaction; setting this too low may abort large transactions\n-(default: 0.10)\n+Maximum total fees (in BTC) to use in a single wallet transaction;\n+setting this too low may abort large transactions (default: 0.10)\n .HP\n \\fB\\-printtoconsole\\fR\n .IP\n@@ -464,9 +549,32 @@ Append comment to the user agent string\n .PP\n Chain selection options:\n .HP\n+\\fB\\-chain=\\fR<chain>\n+.IP\n+Use the chain <chain> (default: main). Allowed values: main, test,\n+signet, regtest\n+.HP\n+\\fB\\-signet\\fR\n+.IP\n+Use the signet chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,signet\\/\\fR. Note that the network\n+is defined by the \\fB\\-signetchallenge\\fR parameter\n+.HP\n+\\fB\\-signetchallenge\\fR\n+.IP\n+Blocks must satisfy the given script to be considered valid (only for\n+signet networks; defaults to the global default signet test\n+network challenge)\n+.HP\n+\\fB\\-signetseednode\\fR\n+.IP\n+Specify a seed node for the signet network, in the hostname[:port]\n+format, e.g. sig.net:1234 (may be used multiple times to specify\n+multiple seed nodes; defaults to the global default signet test\n+network seed node(s))\n+.HP\n \\fB\\-testnet\\fR\n .IP\n-Use the test chain\n+Use the test chain. Equivalent to \\fB\\-chain\\fR=\\fI\\,test\\/\\fR.\n .PP\n Node relay options:\n .HP\n@@ -491,13 +599,15 @@ mining and transaction creation (default: 0.00001)\n .HP\n \\fB\\-whitelistforcerelay\\fR\n .IP\n-Force relay of transactions from whitelisted peers even if they violate\n-local relay policy (default: 0)\n+Add 'forcerelay' permission to whitelisted inbound peers with default\n+permissions. This will relay transactions even if the\n+transactions were already in the mempool. (default: 0)\n .HP\n \\fB\\-whitelistrelay\\fR\n .IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n+Add 'relay' permission to whitelisted inbound peers with default\n+permissions. This will accept relayed transactions even when not\n+relaying transactions (default: 1)\n .PP\n Block creation options:\n .HP\n@@ -553,7 +663,7 @@ Password for JSON\\-RPC connections\n \\fB\\-rpcport=\\fR<port>\n .IP\n Listen for JSON\\-RPC connections on <port> (default: 8332, testnet:\n-18332, regtest: 18443)\n+18332, signet: 38332, regtest: 18443)\n .HP\n \\fB\\-rpcserialversion\\fR\n .IP\n@@ -568,14 +678,31 @@ Set the number of threads to service RPC calls (default: 4)\n .IP\n Username for JSON\\-RPC connections\n .HP\n+\\fB\\-rpcwhitelist=\\fR<whitelist>\n+.IP\n+Set a whitelist to filter incoming RPC calls for a specific user. The\n+field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc\n+2>,...,<rpc n>. If multiple whitelists are set for a given user,\n+they are set\\-intersected. See \\fB\\-rpcwhitelistdefault\\fR documentation\n+for information on default whitelist behavior.\n+.HP\n+\\fB\\-rpcwhitelistdefault\\fR\n+.IP\n+Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault\n+is set to 0, if any \\fB\\-rpcwhitelist\\fR is set, the rpc server acts as\n+if all rpc users are subject to empty\\-unless\\-otherwise\\-specified\n+whitelists. If rpcwhitelistdefault is set to 1 and no\n+\\fB\\-rpcwhitelist\\fR is set, rpc server acts as if all rpc users are\n+subject to empty whitelists.\n+.HP\n \\fB\\-server\\fR\n .IP\n Accept command line and JSON\\-RPC commands\n .SH COPYRIGHT\n-Copyright (C) 2009-2019 The Bitcoin Core developers\n+Copyright (C) 2009-2020 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n+<https://bitcoincore.org/> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software."
      }
    ]
  },
  {
    "sha": "80496f9e81164c75ce80e75cbe87092171f3c963",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDQ5NmY5ZTgxMTY0Yzc1Y2U4MGU3NWNiZTg3MDkyMTcxZjNjOTYz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-19T08:30:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-19T08:38:57Z"
      },
      "message": "build: Set msvc builds's CLIENT_VERSION_IS_RELEASE\n\nOf course, this one was in another place too.\n\nTree-SHA512: 87784829b1f700dcf5fd22daad0c920cfb25485ae17eff0b3e236513dc543c8643e568f39d418d43ea0eeb330fcac93ab2276cda8253ec6538d01e20d102d10c",
      "tree": {
        "sha": "9951a9137bf5ba1dd25db6698decc92fc664cdc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9951a9137bf5ba1dd25db6698decc92fc664cdc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80496f9e81164c75ce80e75cbe87092171f3c963",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl+2LyEACgkQHkrtYphs\n0l2J6QgAyjUhbUfNaSS28Rx7h4OovObuqkcKroNgRR/o4JfXdGrqjgoqNrUMGzGc\nhXdBLc6k7U4R1ZO22qo/fqGPcH1WT8kxcQH2GuCXS8BkMS0hEiYPOiCOIfX11dYX\ne+qY5fllTfFFUH1En64p9QIwIzS4ydHAy6KyKcXQOTq/WztpQ/gbOdCHDgP/9N+3\n/UERVgt26zDmBZqByuxuWtky2PREyxrGxA2bS/oaUUcpB3CxHBcV6sbSpFUCcQJn\nBICzuGRwgg4tFG16DdNCZoZ/6aqrv+kg4nIeCachUZ6jfY6W2Ntj7UDLb9V/B9uL\nDQ/HWrOPVLQKcjFKctD8MypYYHIaTw==\n=M7ii\n-----END PGP SIGNATURE-----",
        "payload": "tree 9951a9137bf5ba1dd25db6698decc92fc664cdc4\nparent 6cde7bb9b26c240a42abe24cba6e0acaef95bd4e\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1605774648 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1605775137 +0100\n\nbuild: Set msvc builds's CLIENT_VERSION_IS_RELEASE\n\nOf course, this one was in another place too.\n\nTree-SHA512: 87784829b1f700dcf5fd22daad0c920cfb25485ae17eff0b3e236513dc543c8643e568f39d418d43ea0eeb330fcac93ab2276cda8253ec6538d01e20d102d10c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80496f9e81164c75ce80e75cbe87092171f3c963",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80496f9e81164c75ce80e75cbe87092171f3c963",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80496f9e81164c75ce80e75cbe87092171f3c963/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cde7bb9b26c240a42abe24cba6e0acaef95bd4e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "60661f121a1937efa4d912f488e39d98bca31892",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80496f9e81164c75ce80e75cbe87092171f3c963/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80496f9e81164c75ce80e75cbe87092171f3c963/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=80496f9e81164c75ce80e75cbe87092171f3c963",
        "patch": "@@ -12,7 +12,7 @@\n #define CLIENT_VERSION_BUILD 0\n \n /* Version is release */\n-#define CLIENT_VERSION_IS_RELEASE false\n+#define CLIENT_VERSION_IS_RELEASE true\n \n /* Major version */\n #define CLIENT_VERSION_MAJOR 0"
      }
    ]
  },
  {
    "sha": "bf9548bc59458c997baa8b2818c33f399559168a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjk1NDhiYzU5NDU4Yzk5N2JhYThiMjgxOGMzM2YzOTk1NTkxNjhh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-20T10:50:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-20T10:50:10Z"
      },
      "message": "Merge #20431: [backport 0.21] tests: shrink feature_taproot transfer of funds tx\n\n7ffac12545328cadd92a3caec4f1c6ca7c127493 tests: shrink feature_taproot transfer of funds tx (Anthony Towns)\n\nPull request description:\n\n  Github-Pull: #20428\n  Rebased-From: 7ffac12545328cadd92a3caec4f1c6ca7c127493\n\nTop commit has no ACKs.\n\nTree-SHA512: 4e6b37a44dca3e29d5168b7eb9238a7ce0bbb9b0924a21671537a7c534790fb6b05b1a30a404db434fade030b4f369adfc73694ef85d91884bb7349adddc5f6a",
      "tree": {
        "sha": "e75b227171ed6ff3b9105f91ebef2df02e8113b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e75b227171ed6ff3b9105f91ebef2df02e8113b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf9548bc59458c997baa8b2818c33f399559168a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl+3n2IACgkQ0upIUOdS\niyWdNA/8DFfSeXyKnS44Vz6OhFTjjU8AF610IyU/6wiJOSJ4gMnjW+phaMWNrA7e\n51Eee7Agub4IfuawJTVcU612tojJGiYJ8DAurbFh5WMbaim8M7tlONeMRx/x2p+U\nlueHzZGyCYLhCk05aVuLxSMuaZORqVqCTPHb6jAlf406z3ZhwSbYignyX6lE72DS\nG2zw2v4wM33VIzeOfpKuTvERBkLPT3R8rZBx9W7q7UkbjeKckGQmUdAXuGOE2/+W\nB8Er+7GtJ5Rr9gIReH1inJ4/+mKZ69CF7tdMPQNtK4xpBntGLKHutIQpLsqUUlfZ\nicngzPi/IMy/K/AnT7b54Hp9hzm62xsFFTIA4OLWps55Vc3P1aci7hGH5D6Bn8VU\nIR+xRaZPRAyCZzR8KoUDp5JPwQH7PVFWGGAy3Yr6/JyoM5cHNI/DibyqoF3lT5CR\n6GF6HUjhOxLIPBUEJJpELYSFS8HyB/yYUymrkOAYCailqfXuNE37yYg/kHbkPVmx\n4i+3fbC/Jw+1vuABHfGsL8hkd4VBBtLGN9RLm2hxLJDjlIhXOD1O8j7+n2hXfZ6s\nva+32UB0PDFtim7wzQHemKyGFCBRw/LyHaafHJfdA9SC6y/e8COU6clN9n19oZ2s\nWl/azzXoqLHs6AelEk7pqlmAkjQZ31ysKd2VjpfkNFJjYEScTFI=\n=rgKt\n-----END PGP SIGNATURE-----",
        "payload": "tree e75b227171ed6ff3b9105f91ebef2df02e8113b6\nparent 80496f9e81164c75ce80e75cbe87092171f3c963\nparent 7ffac12545328cadd92a3caec4f1c6ca7c127493\nauthor MarcoFalke <falke.marco@gmail.com> 1605869406 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1605869410 +0100\n\nMerge #20431: [backport 0.21] tests: shrink feature_taproot transfer of funds tx\n\n7ffac12545328cadd92a3caec4f1c6ca7c127493 tests: shrink feature_taproot transfer of funds tx (Anthony Towns)\n\nPull request description:\n\n  Github-Pull: #20428\n  Rebased-From: 7ffac12545328cadd92a3caec4f1c6ca7c127493\n\nTop commit has no ACKs.\n\nTree-SHA512: 4e6b37a44dca3e29d5168b7eb9238a7ce0bbb9b0924a21671537a7c534790fb6b05b1a30a404db434fade030b4f369adfc73694ef85d91884bb7349adddc5f6a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9548bc59458c997baa8b2818c33f399559168a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9548bc59458c997baa8b2818c33f399559168a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9548bc59458c997baa8b2818c33f399559168a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80496f9e81164c75ce80e75cbe87092171f3c963",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80496f9e81164c75ce80e75cbe87092171f3c963",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80496f9e81164c75ce80e75cbe87092171f3c963"
      },
      {
        "sha": "7ffac12545328cadd92a3caec4f1c6ca7c127493",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ffac12545328cadd92a3caec4f1c6ca7c127493",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ffac12545328cadd92a3caec4f1c6ca7c127493"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0f0fe8a34acd28dba403b9fdeaed8be18978802d",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf9548bc59458c997baa8b2818c33f399559168a/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf9548bc59458c997baa8b2818c33f399559168a/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=bf9548bc59458c997baa8b2818c33f399559168a",
        "patch": "@@ -1442,17 +1442,23 @@ def run_test(self):\n         self.nodes[1].generate(101)\n         self.test_spenders(self.nodes[1], spenders_taproot_active(), input_counts=[1, 2, 2, 2, 2, 3])\n \n-        # Transfer funds to pre-taproot node.\n+        # Transfer value of the largest 500 coins to pre-taproot node.\n         addr = self.nodes[0].getnewaddress()\n+\n+        unsp = self.nodes[1].listunspent()\n+        unsp = sorted(unsp, key=lambda i: i['amount'], reverse=True)\n+        unsp = unsp[:500]\n+\n         rawtx = self.nodes[1].createrawtransaction(\n             inputs=[{\n                 'txid': i['txid'],\n                 'vout': i['vout']\n-            } for i in self.nodes[1].listunspent()],\n-            outputs={addr: self.nodes[1].getbalance()},\n+            } for i in unsp],\n+            outputs={addr: sum(i['amount'] for i in unsp)}\n         )\n         rawtx = self.nodes[1].signrawtransactionwithwallet(rawtx)['hex']\n-        # Transaction is too large to fit into the mempool, so put it into a block\n+\n+        # Mine a block with the transaction\n         block = create_block(tmpl=self.nodes[1].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS), txlist=[rawtx])\n         add_witness_commitment(block)\n         block.rehash()"
      }
    ]
  },
  {
    "sha": "ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjIzYTgzNDAwZDVhZDEzMTM3Y2UwZjk2OTdhNTFmMGI3MGU5ZDI5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-21T06:51:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-24T15:32:42Z"
      },
      "message": "Fix QPainter non-determinism on macOS\n\nAplies a patch to Qt that fixes the non-determinism by modifying Qt. The\nsource of the non-determinism is how LLVM 8 optimizes qt_intersect_spans\nwhen compiling. The particular optimization that seems to be causing the\nproblems is that a temp variable is being added for spans->y. For some\nreason, when it does this, it chooses different instructions to use when\nmaking that variable. We bypass this problem by patching\nqt_intersect_spans to always make and use this local variable.\n\nGithub-Pull: #20447\nRebased-From: 8f7d1b39efbe65ab2747c593cc3560d4a449a333\nTree-SHA512: 558da5c2bb0373e2a89f2c219170f802036e0e87cc8e808336b23d074152cb893007a440f46ec957156b0921355cd18502710f2d224f27bc26e934c50ebebc41",
      "tree": {
        "sha": "23c1c2a46b0738104f74789ff3d48d1c9dcacc2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23c1c2a46b0738104f74789ff3d48d1c9dcacc2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl+9J5oACgkQHkrtYphs\n0l3UqAf/UdYtNqFfn8bm9Gu7CgpxaGnnZ2vSzOIvnHOa1J5tCHxDIhTKxzaySm/R\neWoCyP2L6LEaEDJbX+k2boc/FjJ84lWT087KObIs2inYBXH4DiP/eEpPI/Ggtk3W\npgxKuXQ6XJmhVfEHRcoedPrx2Di+ew3PyaXzDv0AE/jpRRbZtNHgk8dT4E9H1wsm\nYefWPSvKdSN6ZYXGNMT7FAsWhFydrXhk6O9rroQwHEzfdfvJKXsaNiTa4OKU9Pme\nIpomjln9YdUTPfYkhbnG5hgR4s6uOuIw7u4aV5OeyUjttn0fOY1LESMvWCSqSVKR\nzbK85Cgs4FRLB189S2YCN5qTy7NsKA==\n=o0++\n-----END PGP SIGNATURE-----",
        "payload": "tree 23c1c2a46b0738104f74789ff3d48d1c9dcacc2f\nparent bf9548bc59458c997baa8b2818c33f399559168a\nauthor Andrew Chow <achow101-github@achow101.com> 1605941508 -0500\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1606231962 +0100\n\nFix QPainter non-determinism on macOS\n\nAplies a patch to Qt that fixes the non-determinism by modifying Qt. The\nsource of the non-determinism is how LLVM 8 optimizes qt_intersect_spans\nwhen compiling. The particular optimization that seems to be causing the\nproblems is that a temp variable is being added for spans->y. For some\nreason, when it does this, it chooses different instructions to use when\nmaking that variable. We bypass this problem by patching\nqt_intersect_spans to always make and use this local variable.\n\nGithub-Pull: #20447\nRebased-From: 8f7d1b39efbe65ab2747c593cc3560d4a449a333\nTree-SHA512: 558da5c2bb0373e2a89f2c219170f802036e0e87cc8e808336b23d074152cb893007a440f46ec957156b0921355cd18502710f2d224f27bc26e934c50ebebc41\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf9548bc59458c997baa8b2818c33f399559168a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9548bc59458c997baa8b2818c33f399559168a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9548bc59458c997baa8b2818c33f399559168a"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 65,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2a9e06651056d7a9ec82b2a5671f9f0fe326f215",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
        "patch": "@@ -12,6 +12,7 @@ $(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch\n $(package)_patches+= fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n $(package)_patches+= fix_android_qmake_conf.patch fix_android_jni_static.patch dont_hardcode_pwd.patch\n $(package)_patches+= freetype_back_compat.patch drop_lrelease_dependency.patch fix_powerpc_libpng.patch\n+$(package)_patches+= fix_qpainter_non_determinism.patch\n \n # Update OSX_QT_TRANSLATIONS when this is updated\n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n@@ -195,6 +196,7 @@ endef\n define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/freetype_back_compat.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_powerpc_libpng.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_qpainter_non_determinism.patch &&\\\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   patch -p1 -i $($(package)_patch_dir)/drop_lrelease_dependency.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/dont_hardcode_pwd.patch &&\\"
      },
      {
        "sha": "3cfcc22f03a0030af501d01ce74bbb9d39eafe66",
        "filename": "depends/patches/qt/fix_qpainter_non_determinism.patch",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qpainter_non_determinism.patch?ref=ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
        "patch": "@@ -0,0 +1,63 @@\n+commit 2a8f7dc6ddfc414a66491522501c1574a1343ee1\n+Author: Andrew Chow <achow101-github@achow101.com>\n+Date:   Sat Nov 21 01:11:04 2020 -0500\n+\n+    build: Fix determinism issue when building with Clang 8\n+\n+    When building Qt with LLVM/Clang 8 under -O3 (the default), we run into\n+    a determinism issue in `qt_interset_spans`. The issue has been fixed for\n+    LLVM/Clang 9, see\n+    https://github.com/llvm/llvm-project/commit/db101864bdc938deb1d63fe4f7da761bd38e5cae\n+    and https://reviews.llvm.org/D64601, however this fix was not backported\n+    to 8.x. Once LLVM/Clang 9 is used, this patch can be dropped.\n+\n+    The particular issue appears to be an optimization done by -O3 which\n+    adds a temporary variable for `spans->y` in `qt_intersect_spans`. When\n+    it does this, sometimes it chooses to use a 32-bit movs instruction\n+    (movswl), and other times it chooses a 64-bit movs instruction (movswq).\n+    By patching `qt_intersect_spans` to always make a temporary variable for\n+    `spans->y`, we are able to sidestep this problem.\n+\n+diff --git a/qtbase/src/gui/painting/qpaintengine_raster.cpp b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n+index 92ab6e8375..f018009e0b 100644\n+--- a/qtbase/src/gui/painting/qpaintengine_raster.cpp\n++++ b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n+@@ -3971,22 +3971,23 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n+     const QSpan *clipEnd = clip->m_spans + clip->count;\n+ \n+     while (available && spans < end ) {\n++        const short spans_y = spans->y;\n+         if (clipSpans >= clipEnd) {\n+             spans = end;\n+             break;\n+         }\n+-        if (clipSpans->y > spans->y) {\n++        if (clipSpans->y > spans_y) {\n+             ++spans;\n+             continue;\n+         }\n+-        if (spans->y != clipSpans->y) {\n+-            if (spans->y < clip->count && clip->m_clipLines[spans->y].spans)\n+-                clipSpans = clip->m_clipLines[spans->y].spans;\n++        if (spans_y != clipSpans->y) {\n++            if (spans_y < clip->count && clip->m_clipLines[spans_y].spans)\n++                clipSpans = clip->m_clipLines[spans_y].spans;\n+             else\n+                 ++clipSpans;\n+             continue;\n+         }\n+-        Q_ASSERT(spans->y == clipSpans->y);\n++        Q_ASSERT(spans_y == clipSpans->y);\n+ \n+         int sx1 = spans->x;\n+         int sx2 = sx1 + spans->len;\n+@@ -4005,7 +4006,7 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n+         if (len) {\n+             out->x = qMax(sx1, cx1);\n+             out->len = qMin(sx2, cx2) - out->x;\n+-            out->y = spans->y;\n++            out->y = spans_y;\n+             out->coverage = qt_div_255(spans->coverage * clipSpans->coverage);\n+             ++out;\n+             --available;\n+"
      }
    ]
  },
  {
    "sha": "3fae2f95f14d285c792e03d9f0995c449a1cc758",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmFlMmY5NWYxNGQyODVjNzkyZTAzZDlmMDk5NWM0NDlhMWNjNzU4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-24T16:28:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-24T16:28:19Z"
      },
      "message": "Merge #20475: [backport] RPC: unloadwallet: Clarify docs/error when both the RPC endpoint and wallet_name parameter specify a wallet\n\nb1f59d55d920d2b35269b474762f94fec87bfb16 RPC/Wallet: unloadwallet: Clarify docs/error when both the RPC endpoint and wallet_name parameter specify a wallet (Luke Dashjr)\n\nPull request description:\n\n  Github-Pull: #20462\n  Rebased-From: b1f59d55d920d2b35269b474762f94fec87bfb16\n\nTop commit has no ACKs.\n\nTree-SHA512: 2ee0a8a280f56baf196a3a48a59620f297075d23898e6aa3b3e677cdde74826688614d27a477a1448306234c2109fa39083946f691ced10d8bbc53006730784e",
      "tree": {
        "sha": "c3e37587add2e0b94d9d7954568cf86936e476b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3e37587add2e0b94d9d7954568cf86936e476b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3fae2f95f14d285c792e03d9f0995c449a1cc758",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl+9NKMACgkQ0upIUOdS\niyUcTg//dX2/HHKPmirCHxTJovXJssso+CJPT1qH5u8qSqZVrQxmA8AwdXuYKk7l\n7vvdNhb2SiaIVkNZdz9OHYSGrb1heb0Xgw7i+Xjr7ZM+GnUxsA1hmL8WJZfDvxkH\npU7OifuyYcHXaA5u6TvVgP3wuc+U83KwUGpxTRN8FdyRkNmLtcpcJCo7csNfpoop\nY+u8Y/41vsa0w5SSHiJ8fUw4pSDZdGQIWCnRgkOoVUVUH11IK7ekSHg2IfeAItWJ\n26o1M4zMLRaH8H4wchsRL/uemX85FDNaT3O7QXp9Y6tmO65SfifC3wExqIIu5YmL\nE7mlgTF1dCGphfEbzqrqjAWLjFs5neSec7b3FU5MMFxuYG/YEHrtRFFWwsPC90fS\nyL2hkp0pTSli7rtjww2zWiz/QH0YZZpg0N8IsjN7YcTUM1k0ydYZj3g5CSy0VO9d\n7ngkHcF6XNCSa+fnmjEM9yQ3860S474x73Aat9x3v3BiCu7vLEe0IBsogbBQmqIL\nvQaA1fO3IwC/kLs4x4MokMxVAqx2llZ2Pe1vLTYqkOZkbgbsglFy/q7XhWJWlyOE\n9rricYZq3yEduvbckLOX0B1NxBKIsTyc24ClSIu27aGjA8m/VmvSmOJFUQif47Oi\nng1xK/xXY9S/5eGHmmk2Lh1XNMDINjuwPS1RTf+V6w4XfjL0vpE=\n=hCYY\n-----END PGP SIGNATURE-----",
        "payload": "tree c3e37587add2e0b94d9d7954568cf86936e476b2\nparent bf9548bc59458c997baa8b2818c33f399559168a\nparent b1f59d55d920d2b35269b474762f94fec87bfb16\nauthor MarcoFalke <falke.marco@gmail.com> 1606235295 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606235299 +0100\n\nMerge #20475: [backport] RPC: unloadwallet: Clarify docs/error when both the RPC endpoint and wallet_name parameter specify a wallet\n\nb1f59d55d920d2b35269b474762f94fec87bfb16 RPC/Wallet: unloadwallet: Clarify docs/error when both the RPC endpoint and wallet_name parameter specify a wallet (Luke Dashjr)\n\nPull request description:\n\n  Github-Pull: #20462\n  Rebased-From: b1f59d55d920d2b35269b474762f94fec87bfb16\n\nTop commit has no ACKs.\n\nTree-SHA512: 2ee0a8a280f56baf196a3a48a59620f297075d23898e6aa3b3e677cdde74826688614d27a477a1448306234c2109fa39083946f691ced10d8bbc53006730784e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fae2f95f14d285c792e03d9f0995c449a1cc758",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3fae2f95f14d285c792e03d9f0995c449a1cc758",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fae2f95f14d285c792e03d9f0995c449a1cc758/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf9548bc59458c997baa8b2818c33f399559168a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9548bc59458c997baa8b2818c33f399559168a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9548bc59458c997baa8b2818c33f399559168a"
      },
      {
        "sha": "b1f59d55d920d2b35269b474762f94fec87bfb16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1f59d55d920d2b35269b474762f94fec87bfb16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1f59d55d920d2b35269b474762f94fec87bfb16"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "cf8fa5f15f979280e9b17695b8e831df3facc409",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fae2f95f14d285c792e03d9f0995c449a1cc758/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fae2f95f14d285c792e03d9f0995c449a1cc758/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3fae2f95f14d285c792e03d9f0995c449a1cc758",
        "patch": "@@ -2792,7 +2792,7 @@ static RPCHelpMan unloadwallet()\n                 \"Unloads the wallet referenced by the request endpoint otherwise unloads the wallet specified in the argument.\\n\"\n                 \"Specifying the wallet name on a wallet endpoint is invalid.\",\n                 {\n-                    {\"wallet_name\", RPCArg::Type::STR, /* default */ \"the wallet name from the RPC request\", \"The name of the wallet to unload.\"},\n+                    {\"wallet_name\", RPCArg::Type::STR, /* default */ \"the wallet name from the RPC endpoint\", \"The name of the wallet to unload. Must be provided in the RPC endpoint or this parameter (but not both).\"},\n                     {\"load_on_startup\", RPCArg::Type::BOOL, /* default */ \"null\", \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n                 },\n                 RPCResult{RPCResult::Type::OBJ, \"\", \"\", {\n@@ -2807,7 +2807,7 @@ static RPCHelpMan unloadwallet()\n     std::string wallet_name;\n     if (GetWalletNameFromJSONRPCRequest(request, wallet_name)) {\n         if (!request.params[0].isNull()) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot unload the requested wallet\");\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Both the RPC endpoint wallet and wallet_name parameter were provided (only one allowed)\");\n         }\n     } else {\n         wallet_name = request.params[0].get_str();"
      },
      {
        "sha": "0d715b31302c08931d05dce7aa214602d0d361a0",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fae2f95f14d285c792e03d9f0995c449a1cc758/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fae2f95f14d285c792e03d9f0995c449a1cc758/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=3fae2f95f14d285c792e03d9f0995c449a1cc758",
        "patch": "@@ -355,7 +355,8 @@ def wallet_file(name):\n         assert_raises_rpc_error(-1, \"JSON value is not a string as expected\", self.nodes[0].unloadwallet)\n         assert_raises_rpc_error(-18, \"Requested wallet does not exist or is not loaded\", self.nodes[0].unloadwallet, \"dummy\")\n         assert_raises_rpc_error(-18, \"Requested wallet does not exist or is not loaded\", node.get_wallet_rpc(\"dummy\").unloadwallet)\n-        assert_raises_rpc_error(-8, \"Cannot unload the requested wallet\", w1.unloadwallet, \"w2\"),\n+        assert_raises_rpc_error(-8, \"Both the RPC endpoint wallet and wallet_name parameter were provided (only one allowed)\", w1.unloadwallet, \"w2\"),\n+        assert_raises_rpc_error(-8, \"Both the RPC endpoint wallet and wallet_name parameter were provided (only one allowed)\", w1.unloadwallet, \"w1\"),\n \n         # Successfully unload the specified wallet name\n         self.nodes[0].unloadwallet(\"w1\")"
      }
    ]
  },
  {
    "sha": "17294c1820396791f436e659432c5d0a976c6554",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzI5NGMxODIwMzk2NzkxZjQzNmU2NTk0MzJjNWQwYTk3NmM2NTU0",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-11-25T01:50:27Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-11-25T02:07:28Z"
      },
      "message": "Merge #20479: Fix QPainter non-determinism on macOS (0.21 backport)\n\nab23a83400d5ad13137ce0f9697a51f0b70e9d29 Fix QPainter non-determinism on macOS (Andrew Chow)\n\nPull request description:\n\n  Aplies a patch to Qt that fixes the non-determinism by modifying Qt. The\n  source of the non-determinism is how LLVM 8 optimizes qt_intersect_spans\n  when compiling. The particular optimization that seems to be causing the\n  problems is that a temp variable is being added for spans->y. For some\n  reason, when it does this, it chooses different instructions to use when\n  making that variable. We bypass this problem by patching\n  qt_intersect_spans to always make and use this local variable.\n\n  Github-Pull: #20447\n  Rebased-From: 8f7d1b39efbe65ab2747c593cc3560d4a449a333\n  Tree-SHA512: 558da5c2bb0373e2a89f2c219170f802036e0e87cc8e808336b23d074152cb893007a440f46ec957156b0921355cd18502710f2d224f27bc26e934c50ebebc41\n\nACKs for top commit:\n  jonasschnelli:\n    codereview ACK ab23a83400d5ad13137ce0f9697a51f0b70e9d29\n  achow101:\n    ACK ab23a83400d5ad13137ce0f9697a51f0b70e9d29\n\nTree-SHA512: 10991fe2b5452b1393678c315281cfdca011e9bb2cd8094a002746e690890ace148ac2dbf39c5fbe5e7f4cd39eeebfa0a715c065cff150cf70e9733cb0ff32d6",
      "tree": {
        "sha": "2a4783c46818076d2f7e1c93ea8cd2b0507ce9a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a4783c46818076d2f7e1c93ea8cd2b0507ce9a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17294c1820396791f436e659432c5d0a976c6554",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl+9vGAACgkQLuufXMCV\nJsFLLg//bn978xCewlFyCqzRFgMdFNhAc2ULLTGKG5N+X7w9AqWxu4nJ8ikeIUrd\nJJ0+VUCQmmZb3n2A7ZnWOJ3q2raW3SJf5QUu0R/dWDAwH+eoNRUwwswszcIFuuwJ\ni0/QXPAYXPhmHciiYL2akjYImzQQ5GLetI34qKbiCi9+x9WMzPSjHKmrbOjJeXZh\nwb+DlUsmtkncvgoRPphX/Yx2acxgmBUToCL/paXOAPMLSK7poR9dEOUOauvVT7Fu\nsL6/edTWkmze4edhJwl4MCThR6lNp4ClwGBe6KsCHnbflNmJ8P6+d7R2DcJcUcj8\nWEF5Y86OD4cG8C+y74eRn71DTVXFRtb1hK2iVyQcz2Kd4dXdKnXFRNH5GZEDo0BL\nEuOfQ34Fh4rIM8N2or3BXKCyL42sSljrw56a6qMiHhqQIgfLJ5XEqH9Vy9zHUcNd\nyIQBIdzIHwZKE6h+51FhMvfs/dqAp/XACkf8maKUMEg8dZb6uvR4OkDa7j4JkEpx\nGFTV8cz/XNGaLzLRe0cGbN82np9dSM5i0eAHsj3PVn1BqRWvYM04TTTnjUmnPjXK\npFIWoW8G8tgHGl/q43Y9gPCB5sNaWOoye9FgcdUc0YopW56mr3JQ8w8XdJ5qDQgh\nqf0hb0LbZTnAnU7q41YquZcsJajAZQTigSXuX+I/M1+bUgF6IcU=\n=aP37\n-----END PGP SIGNATURE-----",
        "payload": "tree 2a4783c46818076d2f7e1c93ea8cd2b0507ce9a0\nparent 3fae2f95f14d285c792e03d9f0995c449a1cc758\nparent ab23a83400d5ad13137ce0f9697a51f0b70e9d29\nauthor fanquake <fanquake@gmail.com> 1606269027 +0800\ncommitter fanquake <fanquake@gmail.com> 1606270048 +0800\n\nMerge #20479: Fix QPainter non-determinism on macOS (0.21 backport)\n\nab23a83400d5ad13137ce0f9697a51f0b70e9d29 Fix QPainter non-determinism on macOS (Andrew Chow)\n\nPull request description:\n\n  Aplies a patch to Qt that fixes the non-determinism by modifying Qt. The\n  source of the non-determinism is how LLVM 8 optimizes qt_intersect_spans\n  when compiling. The particular optimization that seems to be causing the\n  problems is that a temp variable is being added for spans->y. For some\n  reason, when it does this, it chooses different instructions to use when\n  making that variable. We bypass this problem by patching\n  qt_intersect_spans to always make and use this local variable.\n\n  Github-Pull: #20447\n  Rebased-From: 8f7d1b39efbe65ab2747c593cc3560d4a449a333\n  Tree-SHA512: 558da5c2bb0373e2a89f2c219170f802036e0e87cc8e808336b23d074152cb893007a440f46ec957156b0921355cd18502710f2d224f27bc26e934c50ebebc41\n\nACKs for top commit:\n  jonasschnelli:\n    codereview ACK ab23a83400d5ad13137ce0f9697a51f0b70e9d29\n  achow101:\n    ACK ab23a83400d5ad13137ce0f9697a51f0b70e9d29\n\nTree-SHA512: 10991fe2b5452b1393678c315281cfdca011e9bb2cd8094a002746e690890ace148ac2dbf39c5fbe5e7f4cd39eeebfa0a715c065cff150cf70e9733cb0ff32d6\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17294c1820396791f436e659432c5d0a976c6554",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17294c1820396791f436e659432c5d0a976c6554",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17294c1820396791f436e659432c5d0a976c6554/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3fae2f95f14d285c792e03d9f0995c449a1cc758",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fae2f95f14d285c792e03d9f0995c449a1cc758",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3fae2f95f14d285c792e03d9f0995c449a1cc758"
      },
      {
        "sha": "ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab23a83400d5ad13137ce0f9697a51f0b70e9d29"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 65,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2a9e06651056d7a9ec82b2a5671f9f0fe326f215",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17294c1820396791f436e659432c5d0a976c6554/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17294c1820396791f436e659432c5d0a976c6554/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=17294c1820396791f436e659432c5d0a976c6554",
        "patch": "@@ -12,6 +12,7 @@ $(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch\n $(package)_patches+= fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n $(package)_patches+= fix_android_qmake_conf.patch fix_android_jni_static.patch dont_hardcode_pwd.patch\n $(package)_patches+= freetype_back_compat.patch drop_lrelease_dependency.patch fix_powerpc_libpng.patch\n+$(package)_patches+= fix_qpainter_non_determinism.patch\n \n # Update OSX_QT_TRANSLATIONS when this is updated\n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n@@ -195,6 +196,7 @@ endef\n define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/freetype_back_compat.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_powerpc_libpng.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_qpainter_non_determinism.patch &&\\\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   patch -p1 -i $($(package)_patch_dir)/drop_lrelease_dependency.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/dont_hardcode_pwd.patch &&\\"
      },
      {
        "sha": "3cfcc22f03a0030af501d01ce74bbb9d39eafe66",
        "filename": "depends/patches/qt/fix_qpainter_non_determinism.patch",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17294c1820396791f436e659432c5d0a976c6554/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17294c1820396791f436e659432c5d0a976c6554/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qpainter_non_determinism.patch?ref=17294c1820396791f436e659432c5d0a976c6554",
        "patch": "@@ -0,0 +1,63 @@\n+commit 2a8f7dc6ddfc414a66491522501c1574a1343ee1\n+Author: Andrew Chow <achow101-github@achow101.com>\n+Date:   Sat Nov 21 01:11:04 2020 -0500\n+\n+    build: Fix determinism issue when building with Clang 8\n+\n+    When building Qt with LLVM/Clang 8 under -O3 (the default), we run into\n+    a determinism issue in `qt_interset_spans`. The issue has been fixed for\n+    LLVM/Clang 9, see\n+    https://github.com/llvm/llvm-project/commit/db101864bdc938deb1d63fe4f7da761bd38e5cae\n+    and https://reviews.llvm.org/D64601, however this fix was not backported\n+    to 8.x. Once LLVM/Clang 9 is used, this patch can be dropped.\n+\n+    The particular issue appears to be an optimization done by -O3 which\n+    adds a temporary variable for `spans->y` in `qt_intersect_spans`. When\n+    it does this, sometimes it chooses to use a 32-bit movs instruction\n+    (movswl), and other times it chooses a 64-bit movs instruction (movswq).\n+    By patching `qt_intersect_spans` to always make a temporary variable for\n+    `spans->y`, we are able to sidestep this problem.\n+\n+diff --git a/qtbase/src/gui/painting/qpaintengine_raster.cpp b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n+index 92ab6e8375..f018009e0b 100644\n+--- a/qtbase/src/gui/painting/qpaintengine_raster.cpp\n++++ b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n+@@ -3971,22 +3971,23 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n+     const QSpan *clipEnd = clip->m_spans + clip->count;\n+ \n+     while (available && spans < end ) {\n++        const short spans_y = spans->y;\n+         if (clipSpans >= clipEnd) {\n+             spans = end;\n+             break;\n+         }\n+-        if (clipSpans->y > spans->y) {\n++        if (clipSpans->y > spans_y) {\n+             ++spans;\n+             continue;\n+         }\n+-        if (spans->y != clipSpans->y) {\n+-            if (spans->y < clip->count && clip->m_clipLines[spans->y].spans)\n+-                clipSpans = clip->m_clipLines[spans->y].spans;\n++        if (spans_y != clipSpans->y) {\n++            if (spans_y < clip->count && clip->m_clipLines[spans_y].spans)\n++                clipSpans = clip->m_clipLines[spans_y].spans;\n+             else\n+                 ++clipSpans;\n+             continue;\n+         }\n+-        Q_ASSERT(spans->y == clipSpans->y);\n++        Q_ASSERT(spans_y == clipSpans->y);\n+ \n+         int sx1 = spans->x;\n+         int sx2 = sx1 + spans->len;\n+@@ -4005,7 +4006,7 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n+         if (len) {\n+             out->x = qMax(sx1, cx1);\n+             out->len = qMin(sx2, cx2) - out->x;\n+-            out->y = spans->y;\n++            out->y = spans_y;\n+             out->coverage = qt_div_255(spans->coverage * clipSpans->coverage);\n+             ++out;\n+             --available;\n+"
      }
    ]
  },
  {
    "sha": "ba19f9b4903b42325f5f66e486a52a14893460e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTE5ZjliNDkwM2I0MjMyNWY1ZjY2ZTQ4NmE1MmExNDg5MzQ2MGUy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-25T07:49:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-25T07:50:47Z"
      },
      "message": "build: Bump RC to rc2\n\nTree-SHA512: 122ccac91708dda65a30aab6313c770008ccc0571402d92bc24fbefed578002626899c1754676118f5a456a63dbea84d1fe2fef46af57b77837f438c6e637b26",
      "tree": {
        "sha": "87342eb658b869da22fcf68cc67208b087667167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87342eb658b869da22fcf68cc67208b087667167"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba19f9b4903b42325f5f66e486a52a14893460e2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl++DNcACgkQHkrtYphs\n0l0Vygf/TntESwMDIHgc6c4DsVap5LqTEtWQwIbbWDxNUM5iF9U75FRwS1mYWcdl\ngMnTbpA0zcke48tv8m9UVf27R4+6r5qJxC6IjLPN/urVDcw5YDKmM4IK3hvYYdez\nocDhmkwUCFG2nZ9mw/NqMkicV/SNCFtWEnNr6nF5C8blTCA8IPwTz7EaJ+rsD8pO\ngFDrPsbCU34hOME/WCtfWnFoL9AOIK2zKIoEfIg58fDIL9Y5ABiprE/eep3IWOTJ\nBuEsljW+CLru0+JWhPv09tXazU5IDZzlO2YqZ5gACSIZg1Cf9qtN6XJiyyZtAqR0\n7oLi3bRbDifRYTiHwnrK4RObVx8GKw==\n=XBEr\n-----END PGP SIGNATURE-----",
        "payload": "tree 87342eb658b869da22fcf68cc67208b087667167\nparent 17294c1820396791f436e659432c5d0a976c6554\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1606290580 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1606290647 +0100\n\nbuild: Bump RC to rc2\n\nTree-SHA512: 122ccac91708dda65a30aab6313c770008ccc0571402d92bc24fbefed578002626899c1754676118f5a456a63dbea84d1fe2fef46af57b77837f438c6e637b26\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba19f9b4903b42325f5f66e486a52a14893460e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba19f9b4903b42325f5f66e486a52a14893460e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba19f9b4903b42325f5f66e486a52a14893460e2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17294c1820396791f436e659432c5d0a976c6554",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17294c1820396791f436e659432c5d0a976c6554",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17294c1820396791f436e659432c5d0a976c6554"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "19056e5a0981963261d10e8130e8a7605d21df55",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba19f9b4903b42325f5f66e486a52a14893460e2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba19f9b4903b42325f5f66e486a52a14893460e2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ba19f9b4903b42325f5f66e486a52a14893460e2",
        "patch": "@@ -3,7 +3,7 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 21)\n define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 1)\n+define(_CLIENT_VERSION_RC, 2)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])"
      }
    ]
  },
  {
    "sha": "7264bcd20f700ecc88734cb77f2d18f849dcd856",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjY0YmNkMjBmNzAwZWNjODg3MzRjYjc3ZjJkMThmODQ5ZGNkODU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-25T07:57:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-25T07:57:45Z"
      },
      "message": "qt: Pre-rc2 translations update\n\nTree-SHA512: 465a7b586f3eff476bd9648ff70e37e11f51e67f048dc1265ffcc1132c4e063515495ec6cbdf6ebb4abd5f5b08615595ce12273ce9abebc8ffef9c7b8375ac20",
      "tree": {
        "sha": "373ad0f940b71e48e5595af1474674b462aaa5f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/373ad0f940b71e48e5595af1474674b462aaa5f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7264bcd20f700ecc88734cb77f2d18f849dcd856",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl++DnkACgkQHkrtYphs\n0l2imQgAqRVdy9zNfj+vyxpStjOWUGaQKthPqI3gd+M2aBrXXlkNDq9cpbBro6xF\nIuIr9k/7jrLYhGBK1EdsaRxkvqkgT7drc5FLhz6C8L13wI3i4QY+mC2cb7c7LV8E\nKAeYH9QD4qQfQVI3UG4XELXdbWlTS6w5zNffZHBiEGPpabWfEMZpjMBlm88rwp0c\nh7nMC9K4iWdfcjZlKZt0HG8umfY3JEjfWn+dWhxhMxC/mD5KmxiHQXkV4vdN2+GU\nncRl6cE9RVBPTn6pejIf2WISLTjge5+QFUKnvCvKcsTrk39czaYoJ2S9i5jgwk2I\npbZkGptLBP+v2jqt/6ynrAgC6A3jgA==\n=WOKE\n-----END PGP SIGNATURE-----",
        "payload": "tree 373ad0f940b71e48e5595af1474674b462aaa5f8\nparent ba19f9b4903b42325f5f66e486a52a14893460e2\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1606291046 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1606291065 +0100\n\nqt: Pre-rc2 translations update\n\nTree-SHA512: 465a7b586f3eff476bd9648ff70e37e11f51e67f048dc1265ffcc1132c4e063515495ec6cbdf6ebb4abd5f5b08615595ce12273ce9abebc8ffef9c7b8375ac20\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7264bcd20f700ecc88734cb77f2d18f849dcd856",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7264bcd20f700ecc88734cb77f2d18f849dcd856",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7264bcd20f700ecc88734cb77f2d18f849dcd856/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba19f9b4903b42325f5f66e486a52a14893460e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba19f9b4903b42325f5f66e486a52a14893460e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba19f9b4903b42325f5f66e486a52a14893460e2"
      }
    ],
    "stats": {
      "total": 800,
      "additions": 575,
      "deletions": 225
    },
    "files": [
      {
        "sha": "0fb01685067a0928244c086777e40f550b64ff23",
        "filename": "src/qt/locale/bitcoin_af.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_af.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_af.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Create</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3667,10 +3667,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "791f62397c8b5b9090ea32daa250de7faa51aae6",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -877,7 +877,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u0625\u0646\u0634\u0627\u0621</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>"
      },
      {
        "sha": "62a3b39b7eac2a32b59a1839584441b4fa1999ac",
        "filename": "src/qt/locale/bitcoin_bn.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_bn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_bn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bn.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Create</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3667,10 +3667,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "564098c40e290bfa73787e03ee9cf022ead7a172",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 79,
        "deletions": 7,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -885,7 +885,7 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Create</source>\n         <translation>Crear</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1527,6 +1527,26 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Save...</source>\n         <translation>Desa...</translation>\n     </message>\n+    <message>\n+        <source>Could not sign any more inputs.</source>\n+        <translation>No s'han pogut firmar m\u00e9s entrades.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown error processing transaction.</source>\n+        <translation>Error desconnegut al processar la transacci\u00f3.</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Guarda Dades de Transacci\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Transacci\u00f3 Parcialment Firmada (Binari) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>Paga comissi\u00f3 de transacci\u00f3:</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Import total</translation>\n@@ -1535,7 +1555,27 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>or</source>\n         <translation>o</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation>La transacci\u00f3 t\u00e9 %1 entrades no firmades.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>La transacci\u00f3 manca d'informaci\u00f3 en algunes entrades.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction still needs signature(s).</source>\n+        <translation>La transacci\u00f3 encara necessita una o v\u00e0ries firmes.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>La transacci\u00f3 est\u00e0 completament firmada i a punt per emetre's.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>L'estat de la transacci\u00f3 \u00e9s desconegut.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1700,6 +1740,10 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Error: %1</source>\n         <translation>Av\u00eds: %1</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>Error a l'inicialitzar la configuraci\u00f3: %1</translation>\n+    </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n         <translation>%1 encara no ha finalitzat de manera segura...</translation>\n@@ -1878,6 +1922,10 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Node window</source>\n         <translation>Finestra node</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>Altura actual de bloc</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Obre el fitxer de registre de depuraci\u00f3 %1 del directori de dades actual. Aix\u00f2 pot trigar uns segons en fitxers de registre grans.</translation>\n@@ -1890,6 +1938,10 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Increase font size</source>\n         <translation>Augmenta la mida de la lletra</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>Permisos</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>Serveis</translation>\n@@ -2145,13 +2197,29 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Could not unlock wallet.</source>\n         <translation>No s'ha pogut desblocar la cartera.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>No s'ha pogut generar una nova %1 direcci\u00f3</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Request payment to ...</source>\n+        <translation>Sol\u00b7licita el pagament a ...</translation>\n+    </message>\n+    <message>\n+        <source>Address:</source>\n+        <translation>Direcci\u00f3:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Import:</translation>\n     </message>\n+    <message>\n+        <source>Label:</source>\n+        <translation>Etiqueta:</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Missatge:</translation>\n@@ -2426,6 +2494,14 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Are you sure you want to send?</source>\n         <translation>Esteu segur que ho voleu enviar?</translation>\n     </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Guarda Dades de Transacci\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Transacci\u00f3 Parcialment Firmada (Binari) (*.psbt)</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -3758,10 +3834,6 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>%s is set very high!</source>\n         <translation>%s est\u00e0 especificat molt alt!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>S'ha produ\u00eft un error en carregar la cartera %s. S'ha especificat un nom de fitxer duplicat -wallet.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>S'estan iniciant els fils de la xarxa...</translation>"
      },
      {
        "sha": "ba012881d50c831c44d0f2696d69da29c7ff4903",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -518,6 +518,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Close wallet</source>\n         <translation>Zav\u0159\u00edt pen\u011b\u017eenku</translation>\n     </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Zav\u0159\u00edt v\u0161echny pen\u011b\u017eenky</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Seznam argument\u016f Bitcoinu pro p\u0159\u00edkazovou \u0159\u00e1dku z\u00edsk\u00e1\u0161 v n\u00e1pov\u011bd\u011b %1</translation>\n@@ -835,7 +839,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>Vytvo\u0159it</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3174,6 +3178,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>Zav\u0159en\u00ed pen\u011b\u017eenky na p\u0159\u00edli\u0161 dlouhou dobu m\u016f\u017ee vy\u00fastit v pot\u0159ebu resynchronizace cel\u00e9ho blockchainu pokud je zapnut\u00e9 pro\u0159ez\u00e1v\u00e1n\u00ed.</translation>\n     </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Zav\u0159\u00edt v\u0161echny pen\u011b\u017eenky</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n@@ -3680,10 +3688,6 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>%s is set very high!</source>\n         <translation>%s je nastaveno velmi vysoko!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed pen\u011b\u017eenky %s. Ud\u00e1n duplicitn\u00ed n\u00e1zev souboru -wallet.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Spou\u0161t\u00edm s\u00ed\u0165ov\u00e1 vl\u00e1kna\u2026</translation>"
      },
      {
        "sha": "85baeabb80dce4a755f4d95af85a396b70d95f3f",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Opret</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3671,10 +3671,6 @@ Note: Siden gebyret er kalkuleret p\u00e5 en per-byte basis, et gebyr p\u00e5 \"100 satos\n         <source>%s is set very high!</source>\n         <translation>%s er meget h\u00f8jt sat!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Fejl under indl\u00e6sning af tegnebog %s. -wallet filnavn angivet mere end \u00e9n gang.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starter netv\u00e6rkstr\u00e5de\u2026</translation>"
      },
      {
        "sha": "c75c86aa34f545c56f5bdb52a02d65626de7ff9e",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,7 +884,7 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n         <source>Create</source>\n         <translation>Erstellen</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3983,10 +3983,6 @@ Verifikations-Error: %s</translation>\n         <source>%s is set very high!</source>\n         <translation>%s wurde sehr hoch eingestellt!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Fehler beim Laden der Wallet %s. -wallet Dateiname doppelt angegeben.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Netzwerk-Threads werden gestartet...</translation>"
      },
      {
        "sha": "4f493da61d3fbe51e6e594c687ec0f13b7250d38",
        "filename": "src/qt/locale/bitcoin_el.ts",
        "status": "modified",
        "additions": 62,
        "deletions": 2,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_el.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_el.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -513,6 +513,14 @@\n         <source>Close wallet</source>\n         <translation>\u039a\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>\u039a\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03ce\u03bd...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\u039a\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03ce\u03bd</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>\u0395\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b5 \u03c4\u03bf %1 \u03b2\u03bf\u03b7\u03b8\u03b7\u03c4\u03b9\u03ba\u03cc \u03bc\u03ae\u03bd\u03c5\u03bc\u03b1 \u03b3\u03b9\u03b1 \u03bb\u03ae\u03c8\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03bc\u03b5 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c3\u03b9\u03bc\u03b5\u03c2 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03b3\u03b9\u03b1 Bitcoin \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 </translation>\n@@ -625,6 +633,10 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>\u03a4\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03cc\u03bb\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 &lt;b&gt;\u03ba\u03c1\u03c5\u03c0\u03c4\u03bf\u03b3\u03c1\u03b1\u03c6\u03b7\u03bc\u03ad\u03bd\u03bf&lt;/b&gt; \u03ba\u03b1\u03b9 &lt;b&gt;\u03ba\u03bb\u03b5\u03b9\u03b4\u03c9\u03bc\u03ad\u03bd\u03bf&lt;/b&gt;</translation>\n     </message>\n+    <message>\n+        <source>Original message:</source>\n+        <translation>\u0391\u03c1\u03c7\u03b9\u03ba\u03cc \u039c\u03ae\u03bd\u03c5\u03bc\u03b1:</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n@@ -830,7 +842,7 @@\n         <source>Create</source>\n         <translation>\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1441,10 +1453,34 @@\n         <source>Save...</source>\n         <translation>\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7...</translation>\n     </message>\n+    <message>\n+        <source>Failed to load transaction: %1</source>\n+        <translation>\u0391\u03c0\u03bf\u03c4\u03c5\u03c7\u03af\u03b1 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2: %1</translation>\n+    </message>\n+    <message>\n+        <source>Unknown error processing transaction.</source>\n+        <translation>\u0386\u03b3\u03bd\u03c9\u03c3\u03c4\u03bf \u03bb\u03ac\u03b8\u03bf\u03c2  \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>PSBT \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03ac\u03c6\u03b7\u03ba\u03b5 \u03c3\u03c4\u03bf \u03c0\u03c1\u03cc\u03c7\u03b5\u03b9\u03c1\u03bf.</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03a3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n     </message>\n+    <message>\n+        <source>PSBT saved to disk.</source>\n+        <translation>PSBT \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c4\u03b7\u03ba\u03b5 \u03c3\u03c4\u03bf \u03b4\u03af\u03c3\u03ba\u03bf.</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation>* \u03a3\u03c4\u03ad\u03bb\u03bd\u03b5\u03b9 %1 \u03c0\u03c1\u03bf\u03c2  %2</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>\u03a0\u03bb\u03b7\u03c1\u03c9\u03bc\u03ae \u03c4\u03ad\u03bb\u03bf\u03c5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2:</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>\u03a3\u03c5\u03bd\u03bf\u03bb\u03b9\u03ba\u03cc \u03a0\u03bf\u03c3\u03cc</translation>\n@@ -1453,7 +1489,11 @@\n         <source>or</source>\n         <translation>\u03ae</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>\u0397 \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03b3\u03bd\u03c9\u03c3\u03c4\u03b7.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1792,6 +1832,10 @@\n         <source>Node window</source>\n         <translation>\u039a\u03cc\u03bc\u03b2\u03bf\u03c2 \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>\u03a4\u03c9\u03c1\u03b9\u03bd\u03cc \u03cd\u03c8\u03bf\u03c2 block</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u0391\u03bd\u03bf\u03af\u03be\u03c4\u03b5 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03ba\u03b1\u03c4\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03c0\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03c6\u03b1\u03bb\u03bc\u03ac\u03c4\u03c9\u03bd %1 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c4\u03c1\u03ad\u03c7\u03bf\u03bd\u03c4\u03b1 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bf\u03b3\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd. \u0391\u03c5\u03c4\u03cc \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c1\u03ba\u03ad\u03c3\u03b5\u03b9 \u03bc\u03b5\u03c1\u03b9\u03ba\u03ac \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03bc\u03b5\u03b3\u03ac\u03bb\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03b1 \u03ba\u03b1\u03c4\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2.</translation>\n@@ -1804,6 +1848,10 @@\n         <source>Increase font size</source>\n         <translation>\u0391\u03cd\u03be\u03b7\u03c3\u03b7 \u03bc\u03b5\u03b3\u03ad\u03b8\u03bf\u03c5\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac\u03c2</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>\u0391\u03b4\u03b5\u03b9\u03b5\u03c2</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>\u03a5\u03c0\u03b7\u03c1\u03b5\u03c3\u03af\u03b5\u03c2</translation>\n@@ -2063,6 +2111,14 @@\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Request payment to ...</source>\n+        <translation>\u0391\u03af\u03c4\u03b7\u03bc\u03b1 \u03c0\u03bb\u03b7\u03c1\u03c9\u03bc\u03ae\u03c2 \u03c0\u03c1\u03bf\u03c2 ...</translation>\n+    </message>\n+    <message>\n+        <source>Address:</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>\u03a0\u03bf\u03c3\u03cc:</translation>\n@@ -3161,6 +3217,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>\u03a4\u03bf \u03ba\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03c4\u03bf\u03c5 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd \u03b3\u03b9\u03b1 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf \u03c7\u03c1\u03bf\u03bd\u03b9\u03ba\u03cc \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03bf\u03b4\u03b7\u03b3\u03ae\u03c3\u03b5\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b5\u03c0\u03b1\u03bd\u03b1\u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03bf\u03bb\u03cc\u03ba\u03bb\u03b7\u03c1\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1\u03c2 \u03b1\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7 \u03b7 \u03c0\u03b5\u03c1\u03b9\u03ba\u03bf\u03c0\u03ae.</translation>\n     </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\u039a\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03ce\u03bd</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>"
      },
      {
        "sha": "354c4b6c11992b9935cd239fdb1b0bd19ecd1203",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -1059,7 +1059,12 @@ Signing is only possible with addresses of the type &apos;legacy&apos;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+28\"/>\n+        <source>Wallet</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n         <source>Wallet Name</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1075,6 +1080,11 @@ Signing is only possible with addresses of the type &apos;legacy&apos;.</source>\n     </message>\n     <message>\n         <location line=\"+19\"/>\n+        <source>Advanced options</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n         <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1109,7 +1119,7 @@ Signing is only possible with addresses of the type &apos;legacy&apos;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+36\"/>\n         <source>Compiled without sqlite support (required for descriptor wallets)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>"
      },
      {
        "sha": "a64eed412770d0a0f4ca9309038360497b01f115",
        "filename": "src/qt/locale/bitcoin_en_GB.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_en_GB.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_en_GB.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_GB.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,7 +884,7 @@ Signing is only possible with addresses of the type 'legacy'.</translation>\n         <source>Create</source>\n         <translation>Create</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3973,10 +3973,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "74a379177655f830664d759ffc3b15f1a4316e52",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 215,
        "deletions": 5,
        "changes": 220,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -131,6 +131,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>Ripetu la novan pasfrazon</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>Montri pasfrazon</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>\u0108ifri la monujon</translation>\n@@ -171,6 +175,26 @@\n         <source>Wallet encrypted</source>\n         <translation>La monujo estas \u0109ifrita</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Enigi la novan pasfrazon por la monujo. &lt;br/&gt;Bonvolu uzi pasfrazon de &lt;b&gt;dek a\u016d pli hazardaj signoj&lt;/b&gt;, a\u016d &lt;b&gt;ok a\u016d pli vortoj&lt;/b&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>Enigi la malnovan pasfrazon kaj la novan pasfrazon por la monujo.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Monujo \u0109ifri\u011dota</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>Via monujo estas \u0109ifri\u011dota.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>Via monujo \u0135us estas \u0109ifrata.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>GRAVE: antau\u0306aj sekur-kopioj de via monujo-dosiero estas forigindaj kiam vi havas nove kreitan c\u0302ifritan monujo-dosieron. Pro sekureco, antau\u0306aj kopioj de la nec\u0302ifrita dosiero ne plu funkcios tuj kiam vi ekuzos la novan c\u0302ifritan dosieron.</translation>\n@@ -249,6 +273,10 @@\n         <source>&amp;About %1</source>\n         <translation>&amp;Pri %1</translation>\n     </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>Montri informojn pri %1</translation>\n+    </message>\n     <message>\n         <source>About &amp;Qt</source>\n         <translation>Pri &amp;Qt</translation>\n@@ -261,6 +289,10 @@\n         <source>&amp;Options...</source>\n         <translation>&amp;Agordoj...</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>\u015can\u011di agordojn por %1</translation>\n+    </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation>C\u0302ifri &amp;Monujon...</translation>\n@@ -277,6 +309,30 @@\n         <source>Open &amp;URI...</source>\n         <translation>Malfermi &amp;URI-on...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Krei Monujon...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Krei novan monujon</translation>\n+    </message>\n+    <message>\n+        <source>Wallet:</source>\n+        <translation>Monujo:</translation>\n+    </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>Alklaki por malebligi retajn agadojn.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>Retaj agadoj malebli\u011das.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>Alklaki por denove ebligi retajn agadojn.</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>Reindeksado de blokoj sur disko...</translation>\n@@ -385,14 +441,38 @@\n         <source>Up to date</source>\n         <translation>\u011cisdata</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>Fermi \u0108iujn Monujojn...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Fermi \u0109iujn monujojn</translation>\n+    </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>defa\u016dlta monujo</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Fenestro</translation>\n     </message>\n+    <message>\n+        <source>Main Window</source>\n+        <translation>\u0108efa Fenestro</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>\u011cisdatigante...</translation>\n     </message>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Eraro: %1</translation>\n+    </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>Averto: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -403,6 +483,12 @@\n         <source>Amount: %1\n </source>\n         <translation>Sumo: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Wallet: %1\n+</source>\n+        <translation>Monujo: %1\n </translation>\n     </message>\n     <message>\n@@ -439,9 +525,21 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>Monujo estas &lt;b&gt;\u0109ifrita&lt;/b&gt; kaj aktuale &lt;b&gt;\u015dlosita&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Original message:</source>\n+        <translation>Originala mesa\u011do:</translation>\n+    </message>\n+    <message>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n+        <translation>Neriparebla eraro okazis. %1 ne plu sekure povas da\u016dri kaj \u011di \u0109esi\u011dos.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>Monero-Elekta\u0135o</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>Kvanto:</translation>\n@@ -581,9 +679,37 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Averto pro krei monujon</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Krei Monujon</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>Monujo-Nomo</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>\u0108ifri Monujon</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Malebligi privatajn \u015dlosilojn por \u0109i tiu monujo. Monujoj kun malebligitaj privataj \u015dlosiloj ne havos privatajn \u015dlosilojn, kaj povas havi nek HD-semon nek importatajn privatajn \u015dlosilojn. \u0108i tio estas ideale por nurspektaj monujoj.</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Malebligi Privatajn \u015closilojn</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Krei</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -703,17 +829,61 @@\n         <source>Last block time</source>\n         <translation>Horo de la lasta bloko</translation>\n     </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>Progreso</translation>\n+    </message>\n+    <message>\n+        <source>Progress increase per hour</source>\n+        <translation>Hora pligrandigo da progreso</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>kalkuladas...</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Ka\u015di</translation>\n+    </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esk</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 sinkronigadas. \u011ci el\u015dutos kapa\u0135ojn kaj blokojn de samtavolanoj, kaj validigos ilin, \u011dis \u011di atingas la pinton de la blok\u0109eno.</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Malfermi na la URI de bitmono</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n     </message>\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Malfermi monujon malsukcesis</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Malfermi monujon averto</translation>\n+    </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>defa\u016dlta monujo</translation>\n+    </message>\n+    <message>\n+        <source>Opening Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>Malfermadas Monujon &lt;b&gt;%1&lt;/b&gt;...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n@@ -724,10 +894,26 @@\n         <source>&amp;Main</source>\n         <translation>C\u0302&amp;efa</translation>\n     </message>\n+    <message>\n+        <source>Automatically start %1 after logging in to the system.</source>\n+        <translation>A\u016dtomate komenci na %1 post ensalutis en la sistemon.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Start %1 on system login</source>\n+        <translation>&amp;Komenci na %1 kiam ensaluti en la sistemon</translation>\n+    </message>\n     <message>\n         <source>Size of &amp;database cache</source>\n         <translation>Dosiergrando de &amp;datumbasa ka\u015dmemoro</translation>\n     </message>\n+    <message>\n+        <source>Number of script &amp;verification threads</source>\n+        <translation>Kvanto da skriptaj kaj kontroleraraj fadenoj</translation>\n+    </message>\n+    <message>\n+        <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n+        <translation>IP-adreso de prokurilo (ekz. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n+    </message>\n     <message>\n         <source>Reset all client options to default.</source>\n         <translation>Reagordi c\u0302ion al defau\u0306lataj valoroj.</translation>\n@@ -975,6 +1161,10 @@\n         <source>Error: Specified data directory \"%1\" does not exist.</source>\n         <translation>Eraro: la elektita dosierujo por datumoj \"%1\" ne ekzistas.</translation>\n     </message>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Eraro: %1</translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>nekonata</translation>\n@@ -1171,6 +1361,10 @@\n         <source>Message:</source>\n         <translation>Mesag\u0302o:</translation>\n     </message>\n+    <message>\n+        <source>Wallet:</source>\n+        <translation>Monujo:</translation>\n+    </message>\n     <message>\n         <source>Copy &amp;URI</source>\n         <translation>Kopii &amp;URI</translation>\n@@ -1261,6 +1455,10 @@\n         <source>Transaction Fee:</source>\n         <translation>Krompago:</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Ka\u015di</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>Sendi samtempe al pluraj ricevantoj</translation>\n@@ -1875,17 +2073,29 @@\n     </context>\n <context>\n     <name>WalletController</name>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Fermi \u0109iujn monujojn</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Krei novan monujon</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n         <source>Send Coins</source>\n         <translation>Sendi Bitmonon</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>defa\u016dlta monujo</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n     <message>"
      },
      {
        "sha": "49022fd8b26e1f1cb08337bef533796c7ee99339",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,7 +884,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n         <source>Create</source>\n         <translation>Crear</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3929,10 +3929,6 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>%s is set very high!</source>\n         <translation>\u00a1%s est\u00e1 configurado muy alto!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error cargando el monedero %s. Se ha especificado un nombre de fichero -wallet duplicado.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Iniciando procesos de red...</translation>"
      },
      {
        "sha": "4e08e5abb0593ba8932182004dfaf2fb4683639c",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -2992,10 +2992,6 @@ Exportar los datos en la pesta\u00f1a actual a un archivo</translation>\n         <source>%s is set very high!</source>\n         <translation>\u00a1%s esta configurado muy alto!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error cargando el monedero %s. Se ha especificado un nombre de fichero -wallet duplicado.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Iniciando procesos de red...</translation>"
      },
      {
        "sha": "485d5ff210a3323b5926c3736c8b53a25f067d85",
        "filename": "src/qt/locale/bitcoin_es_CO.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es_CO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es_CO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CO.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -2989,10 +2989,6 @@\n         <source>%s is set very high!</source>\n         <translation>\u00a1%s esta configurado muy alto!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error cargando el monedero %s. Se ha especificado un nombre de fichero -wallet duplicado.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Iniciando procesos de red...</translation>"
      },
      {
        "sha": "4a2b25f53b96199fcf9ec38eb412a1342e287fe6",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -887,7 +887,7 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Create</source>\n         <translation>Crear</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3976,10 +3976,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "f76235f27422f2a51184b251e06f2ea84cdf8b2e",
        "filename": "src/qt/locale/bitcoin_eu.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_eu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_eu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -616,7 +616,7 @@\n         <source>Create</source>\n         <translation>Sortu</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>"
      },
      {
        "sha": "8b84545395cfd5d88d783b54e39170ec3b9258cc",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -835,7 +835,7 @@\n         <source>Create</source>\n         <translation>\u0627\u06cc\u062c\u0627\u062f</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3012,6 +3012,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n         <translation>\u0627\u06cc\u0646 \u06a9\u0645\u062a\u0631\u06cc\u0646 \u0641\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0647\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634 \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u06cc\u200c\u0646\u0645\u0627\u06cc\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>\u0627\u06cc\u0646 \u0645\u06cc\u0632\u0627\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f \u067e\u0631\u062f\u0627\u062e\u062a\u06cc \u0634\u0645\u0627 \u062f\u0631 \u0635\u0648\u0631\u062a \u0627\u06cc\u062c\u0627\u062f \u062a\u0631\u0627\u06a9\u0646\u0634 \u0627\u0646\u062a\u0642\u0627\u0644 \u0645\u06cc\u0628\u0627\u0634\u062f.</translation>\n+    </message>\n     <message>\n         <source>Transaction amounts must not be negative</source>\n         <translation>\u0645\u0642\u062f\u0627\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634 \u0646\u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0645\u0646\u0641\u06cc \u0628\u0627\u0634\u062f.</translation>"
      },
      {
        "sha": "d53658f750b087a1dd42e6c0258f978e1fcb8d5c",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,7 +884,7 @@ Allekirjoitus on mahdollista vain 'legacy'-tyyppisill\u00e4 osoitteilla.</translatio\n         <source>Create</source>\n         <translation>Luo</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3997,10 +3997,6 @@ Siirry osioon Tiedosto &gt; Avaa lompakko ladataksesi lompakon.\n         <source>%s is set very high!</source>\n         <translation>%s on asetettu todella korkeaksi!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Virhe ladattaessa lompakkoa %s. -wallet -tiedostonimi esiintyy useaan kertaan.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>K\u00e4ynnistet\u00e4\u00e4n verkkoa...</translation>"
      },
      {
        "sha": "51f5ebb8107b679517e324fe39be7bd5702e9b80",
        "filename": "src/qt/locale/bitcoin_fil.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fil.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fil.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fil.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -790,7 +790,7 @@\n         <source>Create</source>\n         <translation>Gumawa</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3516,10 +3516,6 @@ Tandaan: Dahil ang bayad  ay kinakalkula sa bawat-byte na batayan, ang bayad ng\n         <source>%s is set very high!</source>\n         <translation>Ang %s ay nakatakda ng napakataas!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Kamalian sa paglo-load ng walet %s. Duplicate -wallet filename na tinukoy.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Pagsisimula ng mga thread ng network...</translation>"
      },
      {
        "sha": "aeccb0f0712602a3f5856c60382e694780ed74f5",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,6 +884,10 @@ Il n\u2019est possible de signer qu\u2019avec les adresses de type \u00ab\u00a0legacy\u00a0\u00bb.</tr\n         <source>Create</source>\n         <translation>Cr\u00e9er</translation>\n     </message>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Compil\u00e9 sans prise en charge de sqlite (requis pour les porte-monnaie de descripteurs)</translation>\n+    </message>\n </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -3703,6 +3707,10 @@ Acc\u00e9dez \u00e0 Fichier &gt; Ouvrir un porte-monnaie pour en charger un.\n         <source>Failed to verify database</source>\n         <translation>\u00c9chec de v\u00e9rification de la base de donn\u00e9es</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Ignore -wallet %s en double.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importation\u2026</translation>\n@@ -4017,10 +4025,6 @@ Acc\u00e9dez \u00e0 Fichier &gt; Ouvrir un porte-monnaie pour en charger un.\n         <source>%s is set very high!</source>\n         <translation>La valeur %s est tr\u00e8s \u00e9lev\u00e9e.</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Erreur de chargement du porte-monnaie %s. Le nom de fichier -wallet indiqu\u00e9 est un doublon.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>D\u00e9marrage des processus r\u00e9seau\u2026</translation>"
      },
      {
        "sha": "0e47f26615227ca2b17a93cce1e30ce82176e522",
        "filename": "src/qt/locale/bitcoin_gl_ES.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_gl_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_gl_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gl_ES.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Crea</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3667,10 +3667,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "32a099adbf090dc9d6f9859b2a5b6699f081457e",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -878,7 +878,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u05d9\u05e6\u05d9\u05e8\u05d4</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3955,10 +3955,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s \u05d4\u05d5\u05d2\u05d3\u05e8 \u05de\u05d0\u05d3 \u05d2\u05d1\u05d5\u05d4!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u05e9\u05d2\u05d9\u05d0\u05ea \u05d8\u05e2\u05d9\u05e0\u05ea \u05d0\u05e8\u05e0\u05e7 %s. \u05e9\u05dd \u05e7\u05d5\u05d1\u05e5  -wallet  \u05db\u05e4\u05d5\u05dc \u05d4\u05d5\u05d2\u05d3\u05e8.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u05ea\u05d4\u05dc\u05d9\u05db\u05d9 \u05d4\u05e8\u05e9\u05ea \u05de\u05d5\u05e4\u05e2\u05dc\u05d9\u05dd\u2026</translation>"
      },
      {
        "sha": "4b3fa8b9e6331301523ee301a7de7293ded09ef3",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -817,7 +817,7 @@\n         <source>Create</source>\n         <translation>Stvorite</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3583,10 +3583,6 @@ Napomena: Budu\u0107i da se naknada ra\u010duna po bajtu, naknada od \"100 sato\u0161ija po k\n         <source>%s is set very high!</source>\n         <translation>%s je postavljen preveliko!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Gre\u0161ka kod u\u010ditavanja nov\u010danika %s. Duplikat imena nov\u010danika zadan.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Pokre\u0107u se mre\u017ene niti...</translation>"
      },
      {
        "sha": "39af3ee38e5a3e9dc8611bec213cf8202cf4e9e3",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -882,7 +882,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>L\u00e9trehoz\u00e1s</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3967,10 +3967,6 @@ A F\u00e1jl &gt; Megnyit\u00e1s men\u00fcben lehet megnyitni.\n         <source>%s is set very high!</source>\n         <translation>%s \u00e9t\u00e9ke nagyon magas!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Hiba t\u00f6rt\u00e9nt a %s t\u00e1rca bet\u00f6lt\u00e9sekor, mert duplik\u00e1lt t\u00e1rca-f\u00e1jlnevet adott meg.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>H\u00e1l\u00f3zati sz\u00e1lak ind\u00edt\u00e1sa...</translation>"
      },
      {
        "sha": "8a8174b046ebfbbdf47d08fe3d7f0050fc006fba",
        "filename": "src/qt/locale/bitcoin_id.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_id.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_id.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Membuat</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3449,10 +3449,6 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>%s is set very high!</source>\n         <translation>%s diset sangat tinggi!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Terjadi kesalahan saat memuat dompet %s duplikat -wallet  nama file yang diterapkan</translation>\n-    </message>\n     <message>\n         <source>The wallet will avoid paying less than the minimum relay fee.</source>\n         <translation>Dompet akan menghindari pembayaran kurang dari biaya minimum ongkos relay.</translation>"
      },
      {
        "sha": "8ccf83e8f512996bedb3f2ab9cfff8f398663a02",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,7 +884,7 @@ E' possibile firmare solo con indirizzi di tipo \"legacy\".</translation>\n         <source>Create</source>\n         <translation>Crea</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3990,10 +3990,6 @@ Vai su File &gt; Apri Portafoglio per caricare un portafoglio.\n         <source>%s is set very high!</source>\n         <translation>%s ha un'impostazione molto alta!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Errore caricamento portafoglio %s. Il nome file -wallet specificato \u00e8 duplicato.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Inizializzazione dei thread di rete...</translation>"
      },
      {
        "sha": "c79a57d433d269971f16da5a652e6e666e6871ac",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -851,7 +851,7 @@\n         <source>Create</source>\n         <translation>\u4f5c\u6210</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3740,10 +3740,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%s is set very high!</source>\n         <translation>%s \u306e\u8a2d\u5b9a\u5024\u304c\u9ad8\u3059\u304e\u3067\u3059\uff01</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u30a6\u30a9\u30ec\u30c3\u30c8 %s \u306e\u8aad\u307f\u8fbc\u307f\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u91cd\u8907\u3059\u308b -wallet \u30d5\u30a1\u30a4\u30eb\u540d\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30ec\u30c3\u30c9\u306e\u8d77\u52d5\u4e2d...</translation>"
      },
      {
        "sha": "eca335d861b978bfe07e8b58157ae8577d0afa00",
        "filename": "src/qt/locale/bitcoin_ko.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ko.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ko.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -822,7 +822,7 @@\n         <source>Create</source>\n         <translation>\uc0dd\uc131\ud558\uae30</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3591,10 +3591,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%s is set very high!</source>\n         <translation>%s\uac00 \ub9e4\uc6b0 \ub192\uac8c \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\uc9c0\uac11 %s \ub85c\ub529 \uc5d0\ub7ec,  \uc911\ubcf5\ub41c -wallet \ud30c\uc77c\uc774\ub984\uc744 \uc785\ub825\ud588\uc2b5\ub2c8\ub2e4.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\ub124\ud2b8\uc6cc\ud06c \uc2a4\ub808\ub4dc \uc2dc\uc791\uc911...</translation>"
      },
      {
        "sha": "2abe7274daff951ea6ba68f72787d66194438e17",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -790,7 +790,7 @@\n         <source>Create</source>\n         <translation>Sukurti</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3217,10 +3217,6 @@ Pastaba: Kadangi mokestis apskai\u010diuojamas pagal bait\u0105, mokestis u\u017e \u201e100 sat\n         <source>%s is set very high!</source>\n         <translation>%s labai auk\u0161tas!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u012ekeliant pinigin\u0119 %s \u012fvyko klaida. Dvigubo -wallet pavadinimas.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Prad\u0117ti tinklo temas...</translation>"
      },
      {
        "sha": "7d9be93bc4d6581c8d7b140b2667e3bde35513c3",
        "filename": "src/qt/locale/bitcoin_ms.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ms.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ms.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -828,7 +828,7 @@ Alihkan fail data ke dalam tab semasa</translation>\n         <source>Create</source>\n         <translation>Create</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3616,10 +3616,6 @@ Alihkan fail data ke dalam tab semasa</translation>\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "5cdcfc3fcb2dab843b3d38ddc47ae11aa6768e95",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Opprett</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3607,10 +3607,6 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>%s is set very high!</source>\n         <translation>%s er satt veldig h\u00f8yt!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Feil ved innlasting av lommeboka %s. Duplisert -wallet -filnavn angitt.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starter nettverkstr\u00e5der\u2026</translation>"
      },
      {
        "sha": "10cb757c28067dd67bfc25a4760c84931f20d435",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -885,7 +885,7 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Create</source>\n         <translation>Cre\u00eber</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3778,10 +3778,6 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>%s is set very high!</source>\n         <translation>%s is zeer hoog ingesteld!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Fout bij laden van portemonnee %s. Duplicaat -wallet bestandsnaam opgegeven.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Netwerkthread starten...</translation>"
      },
      {
        "sha": "98a799bb50b0674a12b86dba130a6a6f21756ef6",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -329,11 +329,11 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n     </message>\n     <message>\n         <source>Create Wallet...</source>\n-        <translation>Stw\u00f3rz portfel...</translation>\n+        <translation>Utw\u00f3rz portfel...</translation>\n     </message>\n     <message>\n         <source>Create a new wallet</source>\n-        <translation>Stw\u00f3rz nowy portfel</translation>\n+        <translation>Utw\u00f3rz nowy portfel</translation>\n     </message>\n     <message>\n         <source>Wallet:</source>\n@@ -449,7 +449,7 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n     </message>\n     <message>\n         <source>Processing blocks on disk...</source>\n-        <translation>Przetwarzanie blocks on disk...</translation>\n+        <translation>Przetwarzanie blok\u00f3w na dysku...</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>Processed %n block(s) of transaction history.</source>\n@@ -868,7 +868,7 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Create</source>\n         <translation>Stw\u00f3rz</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3852,10 +3852,6 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>%s is set very high!</source>\n         <translation>%s jest ustawione bardzo wysoko!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>B\u0142\u0105d wczytywania portfela %s. Podana powt\u00f3rnie ta sama nazwa pliku w -wallet</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Uruchamianie w\u0105tk\u00f3w sieciowych...</translation>"
      },
      {
        "sha": "82604fb0cf2c514fbf88943044b7216cdb65d9f7",
        "filename": "src/qt/locale/bitcoin_pt.ts",
        "status": "modified",
        "additions": 56,
        "deletions": 6,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_pt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_pt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -69,6 +69,12 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Estes s\u00e3o os seus endere\u00e7os Bitcoin para enviar pagamentos. Verifique sempre o valor e o endere\u00e7o de rece\u00e7\u00e3o antes de enviar moedas.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>Estes s\u00e3o seus novos endere\u00e7os Bitcoin para o recebimento de pagamentos. Use o bot\u00e3o \"Criar novo endere\u00e7o de recebimento\" na aba \"Receber\"  para criar novos endere\u00e7os.\n+Assinar s\u00f3 \u00e9 poss\u00edvel com endere\u00e7os do tipo \"legado\".</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Copiar Endere\u00e7o</translation>\n@@ -477,6 +483,10 @@\n         <source>Up to date</source>\n         <translation>Atualizado</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>&amp;Carregar Transa\u00e7\u00e3o Bitcoin Parcialmente Assinada (TBPA/PSBT) do arquivo...</translation>\n+    </message>\n     <message>\n         <source>Load Partially Signed Bitcoin Transaction</source>\n         <translation>Carregar transa\u00e7\u00e3o de Bitcoin parcialmente assinada</translation>\n@@ -537,6 +547,14 @@\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Mostrar a mensagem de ajuda %1 para obter uma lista com poss\u00edveis op\u00e7\u00f5es a usar na linha de comandos.</translation>\n     </message>\n+    <message>\n+        <source>&amp;Mask values</source>\n+        <translation>&amp;Valores de M\u00e1scara</translation>\n+    </message>\n+    <message>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation>Mascare os valores na aba de vis\u00e3o geral</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>carteira predefinida</translation>\n@@ -649,7 +667,11 @@\n         <source>Original message:</source>\n         <translation>Mensagem original:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n+        <translation>Um erro fatal ocorreu. %1 n\u00e3o pode mais continuar de maneira segura e ser\u00e1 terminada.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -850,10 +872,22 @@\n         <source>Make Blank Wallet</source>\n         <translation>Fazer Carteira em Branco</translation>\n     </message>\n+    <message>\n+        <source>Use descriptors for scriptPubKey management</source>\n+        <translation>Use descritores para o gerenciamento de chaves p\u00fablicas de script</translation>\n+    </message>\n+    <message>\n+        <source>Descriptor Wallet</source>\n+        <translation>Carteira de descritor</translation>\n+    </message>\n     <message>\n         <source>Create</source>\n         <translation>Criar</translation>\n     </message>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Compilado sem suporte para sqlite (requerido para carteiras de descritor)</translation>\n+    </message>\n </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -1327,6 +1361,10 @@\n         <source>Whether to show coin control features or not.</source>\n         <translation>Escolha se deve mostrar as funcionalidades de controlo de moedas ou n\u00e3o.</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n+        <translation>Conecte-se a rede Bitcoin atrav\u00e9s de um proxy SOCKS5 separado para servi\u00e7os Tor Onion</translation>\n+    </message>\n     <message>\n         <source>&amp;Third party transaction URLs</source>\n         <translation>URLs de transa\u00e7\u00e3o de &amp;terceiros</translation>\n@@ -1462,7 +1500,11 @@\n         <source>Current total balance in watch-only addresses</source>\n         <translation>Saldo dispon\u00edvel em endere\u00e7os de apenas vigiar</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</source>\n+        <translation>Modo de privacidade ativado para a aba de vis\u00e3o geral. para desmascarar os valores, desmarque nas Configura\u00e7\u00f5es -&gt; Valores de m\u00e1scara</translation>\n+    </message>\n+</context>\n <context>\n     <name>PSBTOperationsDialog</name>\n     <message>\n@@ -1933,6 +1975,10 @@ ID transa\u00e7\u00e3o: %1</translation>\n         <source>Node window</source>\n         <translation>Janela do n\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>Altura atual do bloco</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Abrir o ficheiro de registo de depura\u00e7\u00e3o %1 da pasta de dados atual. Isto pode demorar alguns segundos para ficheiros de registo maiores.</translation>\n@@ -3639,6 +3685,10 @@ Ir para o arquivo &gt; Abrir carteira para carregar a carteira\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>Reexamina\u00e7\u00e3o da carteira falhou durante a inicializa\u00e7\u00e3o</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>Falha ao verificar base de dados</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>A importar...</translation>\n@@ -3667,6 +3717,10 @@ Ir para o arquivo &gt; Abrir carteira para carregar a carteira\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Valor inv\u00e1lido para -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n+        <translation>SQLiteDatabase: Falha ao ler base de dados erro de verifica\u00e7\u00e3o %s</translation>\n+    </message>\n     <message>\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>\n@@ -3930,10 +3984,6 @@ A pasta de blocos especificados \"%s\" n\u00e3o existe.</translation>\n         <source>%s is set very high!</source>\n         <translation>%s est\u00e1 demasiado elevado!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Erro ao carregar a carteira %s. Especificado nome de fichero -wallet em duplicado.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>A iniciar threads de rede...</translation>"
      },
      {
        "sha": "aadbcc6a8930cd769edf7a33bb31774928ed8230",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Right-click to edit address or label</translation>\n+        <translation>Clique com o bot\u00e3o direito para editar endere\u00e7o ou r\u00f3tulo</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -884,6 +884,10 @@ Somente \u00e9 poss\u00edvel assinar com endere\u00e7os do tipo 'legado'.</translation>\n         <source>Create</source>\n         <translation>Criar</translation>\n     </message>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Compilado sem suporte a sqlite (requerido para carteiras descritoras)</translation>\n+    </message>\n </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -3701,6 +3705,10 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Failed to verify database</source>\n         <translation>Falha ao verificar a base de dados</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Ignorando -carteira %s duplicada.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importando...</translation>\n@@ -4016,10 +4024,6 @@ Diret\u00f3rio de blocos especificados \"%s\" n\u00e3o existe.</translation>\n         <source>%s is set very high!</source>\n         <translation>%s est\u00e1 muito alto!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Erro ao carregar carteira %s. Duplicado o nome do arquivo de -wallet.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Iniciando threads de rede...</translation>"
      },
      {
        "sha": "b75b857f6ec0f844b010e245a26bc3f9594a210f",
        "filename": "src/qt/locale/bitcoin_ro.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ro.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ro.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -802,7 +802,7 @@\n         <source>Create</source>\n         <translation>Creeaz\u0103</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3413,10 +3413,6 @@ Nota: Cum taxa este calculata per byte, o taxa de \"100 satoshi per kB\" pentru o\n         <source>%s is set very high!</source>\n         <translation>%s este setata foarte sus!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Eroare la incarcarea portofelului %s. Este specificat un fisier -wallet duplicat.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Se pornesc threadurile retelei...</translation>"
      },
      {
        "sha": "2b7cb995aa59d61af1ab464d9a732831b9689d71",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -885,6 +885,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u0421\u043e\u0437\u0434\u0430\u0442\u044c</translation>\n     </message>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>\u0421\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d \u0431\u0435\u0437 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 sqlite (\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043b\u044f \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u043e\u0432 \u0441 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u043c)</translation>\n+    </message>\n </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -3704,6 +3708,10 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Failed to verify database</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>\u0418\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u044b -wallet %s.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0438\u043c\u043f\u043e\u0440\u0442...</translation>\n@@ -4018,10 +4026,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s \u0437\u0430\u0434\u0430\u043d \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0432\u044b\u0441\u043e\u043a\u0438\u043c!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430 %s. \u0417\u0430\u0434\u0430\u043d\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0435\u0435\u0441\u044f \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432...</translation>"
      },
      {
        "sha": "6fe8859a8f185ca3f68841cbd153ed41375ae8b1",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>Vytvori\u0165</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3680,10 +3680,6 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>%s is set very high!</source>\n         <translation>Hodnota %s je nastaven\u00e1 ve\u013emi vysoko!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Chyba pri na\u010d\u00edtan\u00ed pe\u0148a\u017eenky %s. Zadan\u00fd duplicitn\u00fd n\u00e1zov s\u00faboru -wallet.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Sp\u00fa\u0161\u0165aj\u00fa sa sie\u0165ov\u00e9 vl\u00e1kna...</translation>"
      },
      {
        "sha": "9f1d2bba7440f762abbc06d1897b491dcbcd6838",
        "filename": "src/qt/locale/bitcoin_sl.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,6 +884,10 @@ Podpisovanje je mo\u017eno le s podedovanimi (\"legacy\") naslovi.</translation>\n         <source>Create</source>\n         <translation>Ustvari</translation>\n     </message>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Prevedeno brez podpore za SQLite (potrebna za deskriptorske denarnice)</translation>\n+    </message>\n </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -4001,10 +4005,6 @@ Za odpiranje denarnice kliknite Datoteka &gt; Odpri denarnico\n         <source>%s is set very high!</source>\n         <translation>%s je postavljen zelo visoko!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Napaka pri nalaganju denarnice %s. Ime denarnice (parameter -wallet) je podvojeno.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Za\u010denjam omre\u017ene niti ...</translation>"
      },
      {
        "sha": "ecdcceb0c24e479d8ddc92acf4b24d27e56e8311",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -836,7 +836,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u041d\u0430\u043f\u0440\u0430\u0432\u0438</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3741,10 +3741,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%s is set very high!</source>\n         <translation>%s \u0458\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0459\u0435\u043d \u0432\u0440\u043b\u043e \u0432\u0438\u0441\u043e\u043a\u043e!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438\u043b\u0438\u043a\u043e\u043c \u0443\u0447\u0438\u0442\u0430\u0432\u0430\u045a\u0430 \u043d\u043e\u0432\u0447\u0430\u043d\u0438\u043a\u0430 %s. \u041d\u0430\u0432\u0435\u0434\u0435\u043d\u043e \u0458\u0435 \u0434\u0443\u043f\u043b\u0438\u0440\u0430\u043d\u043e \u0438\u043c\u0435 \u0434\u0430\u0442\u043e\u0442\u0435\u043a\u0435 -wallet.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u041f\u043e\u043a\u0440\u0435\u0442\u0430\u045a\u0435 \u043c\u0440\u0435\u0436\u043d\u0438\u0445 \u0442\u0435\u043c\u0430...</translation>"
      },
      {
        "sha": "251c268b55731fbe5bb490dc9609e75a3e214922",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -831,7 +831,7 @@ F\u00f6rs\u00f6k igen.</translation>\n         <source>Create</source>\n         <translation>Skapa</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3632,10 +3632,6 @@ Notera: D\u00e5 avgiften ber\u00e4knas per byte kommer en avgift p\u00e5 50 satoshi tas ut f\n         <source>%s is set very high!</source>\n         <translation>%s \u00e4r satt v\u00e4ldigt h\u00f6gt!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Fel vid inl\u00e4sningen av pl\u00e5nbok %s. Dublett -wallet filnamn angavs.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Startar n\u00e4tverkstr\u00e5dar...</translation>"
      },
      {
        "sha": "9b00ac58d2cbd88a380f8e5c384ebde1404fdeb4",
        "filename": "src/qt/locale/bitcoin_szl.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_szl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_szl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_szl.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -1933,10 +1933,6 @@\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation>Imyntn\u014f dugo\u015b\u0107 kety wersyje (%i) przekr\u014fcz\u014f maksymaln\u00f5 dopuszczaln\u00f5 dugo\u015b\u0107 (%i). Zmy\u0144sz wielo\u015b\u0107 abo miara parametra uacomment.</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Feler w czasie wgr\u014fwani\u014f portmanyja %s. Podan\u014f tuplowane miano zbioru w -wallet.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Sztartowanie w\u014dntk\u014dw necowych...</translation>"
      },
      {
        "sha": "41aa7e94ebd6aa87a45f7fe9c1f247ac09ab46e5",
        "filename": "src/qt/locale/bitcoin_ta.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ta.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_ta.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ta.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>\u0b89\u0bb0\u0bc1\u0bb5\u0bbe\u0b95\u0bcd\u0b95\u0bc1</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>"
      },
      {
        "sha": "7d006a6488e4752847e2445d7c3419ed766efc0e",
        "filename": "src/qt/locale/bitcoin_th.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_th.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_th.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -552,7 +552,7 @@\n         <source>Create</source>\n         <translation>\u0e2a\u0e23\u0e49\u0e32\u0e07</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>"
      },
      {
        "sha": "dc7c2b83d4ea273471ecffdfd052c47b8c9d87a8",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 56,
        "deletions": 4,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Adres veya etiketi d\u00fczenlemek i\u00e7in sa\u011f t\u0131klay\u0131n</translation>\n+        <translation>Adres veya etiketi d\u00fczenlemek i\u00e7in sa\u011f t\u0131klay\u0131n\u0131z.</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -90,7 +90,11 @@ G\u00f6nderim yapmadan \u00f6nce her zaman tutar\u0131 ve al\u0131c\u0131 adresi kontrol ediniz.</tr\n         <source>Exporting Failed</source>\n         <translation>D\u0131\u015fa Aktar\u0131m Ba\u015far\u0131s\u0131z Oldu</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Adres listesinin %1 konumuna kaydedilmesi s\u0131ras\u0131nda bir hata meydana geldi. L\u00fctfen tekrar deneyin.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -484,7 +488,7 @@ C\u00fczdan kilidini a\u00e7.</translation>\n         <source>Create</source>\n         <translation>Olu\u015ftur</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -915,5 +919,53 @@ C\u00fczdan kilidini a\u00e7.</translation>\n     </context>\n <context>\n     <name>bitcoin-core</name>\n-    </context>\n+    <message>\n+        <source>Verifying wallet(s)...</source>\n+        <translation>C\u00fczdan(lar) kontrol ediliyor...</translation>\n+    </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>%s \u00e7ok y\u00fcksek ayarlanm\u0131\u015f!</translation>\n+    </message>\n+    <message>\n+        <source>Starting network threads...</source>\n+        <translation>A\u011f dizisi ba\u015flat\u0131l\u0131yor...</translation>\n+    </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>C\u00fczdan en az aktarma \u00fccretinden daha az \u00f6deme yapmaktan sak\u0131nacakt\u0131r.</translation>\n+    </message>\n+    <message>\n+        <source>This is the minimum transaction fee you pay on every transaction.</source>\n+        <translation>Bu her i\u015flemde \u00f6dece\u011finiz en d\u00fc\u015f\u00fck i\u015flem \u00fccretidir.</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>E\u011fer bir g\u00f6nderme i\u015flemi yaparsan\u0131z \u00f6deyece\u011finiz i\u015flem \u00fccreti budur.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>\u0130\u015flem tutar\u0131 negatif olmamal\u0131d\u0131r.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>\u0130\u015flem en az bir adet al\u0131c\u0131ya sahip olmal\u0131.</translation>\n+    </message>\n+    <message>\n+        <source>Insufficient funds</source>\n+        <translation>Yetersiz bakiye</translation>\n+    </message>\n+    <message>\n+        <source>Loading wallet...</source>\n+        <translation>C\u00fczdan y\u00fckleniyor...</translation>\n+    </message>\n+    <message>\n+        <source>Rescanning...</source>\n+        <translation>Yeniden taran\u0131yor...</translation>\n+    </message>\n+    <message>\n+        <source>Done loading</source>\n+        <translation>Y\u00fckleme tamamland\u0131.</translation>\n+    </message>\n+</context>\n </TS>\n\\ No newline at end of file"
      },
      {
        "sha": "88d7924040645a989533c3bbd23925676a8a9bea",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,7 +884,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u0421\u0442\u0432\u043e\u0440\u0438\u0442\u0438</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -4010,10 +4010,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0434\u0443\u0436\u0435 \u0432\u0438\u0441\u043e\u043a\u043e!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f %s. \u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 -wallet \u0434\u0443\u0431\u043b\u044e\u0454\u0442\u044c\u0441\u044f.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u0417\u0430\u043f\u0443\u0441\u043a \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u0438\u0445 \u043f\u043e\u0442\u043e\u043a\u0456\u0432...</translation>"
      },
      {
        "sha": "e19df90394f5b448aa84c15f437ac78b3c572ae7",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -830,7 +830,7 @@\n         <source>Create</source>\n         <translation>T\u1ea1o</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3663,10 +3663,6 @@ L\u01b0u \u00fd: V\u00ec ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh tr\u00ean c\u01a1 s\u1edf m\u1ed7i byte, n\u00ean ph\u00ed \"100 satos\n         <source>%s is set very high!</source>\n         <translation>%s is set very high!</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>Error loading wallet %s. Duplicate -wallet filename specified.</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>Starting network threads...</translation>"
      },
      {
        "sha": "e469490201e442efeb2136fbd5ef42368cf66978",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 12,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -884,6 +884,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u521b\u5efa</translation>\n     </message>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>\u7f16\u8bd1\u65f6\u672a\u542f\u7528SQLite\u652f\u6301\uff08\u8f93\u51fa\u63cf\u8ff0\u7b26\u94b1\u5305\u9700\u8981\u5b83\uff09</translation>\n+    </message>\n </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -3585,15 +3589,15 @@ Go to File &gt; Open Wallet to load a wallet.\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n-        <translation>SQLiteDatabase\uff1a\u65e0\u6cd5\u83b7\u53d6sqlit\u94b1\u5305\u7248\u672c\uff1a%s</translation>\n+        <translation>SQLiteDatabase: \u9884\u5904\u7406\u7528\u4e8e\u83b7\u53d6SQLite\u94b1\u5305schema\u7248\u672c\u7684\u8bed\u53e5\u65f6\u5931\u8d25: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</source>\n-        <translation>SQLiteDatabase\uff1a\u65e0\u6cd5\u83b7\u53d6\u5e94\u7528ID\uff1a%s</translation>\n+        <translation>SQLiteDatabase: \u9884\u5904\u7406\u7528\u4e8e\u83b7\u53d6\u5e94\u7528ID\u7684\u8bed\u53e5\u65f6\u5931\u8d25: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</source>\n-        <translation>SQLiteDatabase\uff1a\u672a\u77e5sqlite\u94b1\u5305\u7248\u672c%d\u3002\u53ea\u652f\u6301%d\u7248\u672c</translation>\n+        <translation>SQLiteDatabase: SQLite\u94b1\u5305schema\u7248\u672c%d\u672a\u77e5\u3002\u53ea\u652f\u6301%d\u7248\u672c</translation>\n     </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n@@ -3703,6 +3707,10 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Failed to verify database</source>\n         <translation>\u6821\u9a8c\u6570\u636e\u5e93\u5931\u8d25</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>\u5ffd\u7565\u91cd\u590d\u7684 -wallet %s\u3002</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u5bfc\u5165\u4e2d...</translation>\n@@ -3733,23 +3741,23 @@ Go to File &gt; Open Wallet to load a wallet.\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to execute statement to verify database: %s</source>\n-        <translation>SQLiteDatabase\uff1a\u6821\u9a8c\u6570\u636e\u5e93\u6267\u884c\u8bed\u53e5\u5931\u8d25\uff1a%s</translation>\n+        <translation>SQLiteDatabase: \u6267\u884c\u6821\u9a8c\u6570\u636e\u5e93\u8bed\u53e5\u65f6\u5931\u8d25: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</source>\n-        <translation>SQLiteDatabase\uff1a\u65e0\u6cd5\u83b7\u53d6sqlite\u94b1\u5305\u7248\u672c\uff1a%s</translation>\n+        <translation>SQLiteDatabase: \u83b7\u53d6SQLite\u94b1\u5305schema\u7248\u672c\u65f6\u5931\u8d25: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to prepare statement to verify database: %s</source>\n-        <translation>SQLiteDatabase\uff1a\u65e0\u6cd5\u51c6\u5907\u8bed\u53e5\u6765\u6821\u9a8c\u6570\u636e\u5e93\uff1a%s</translation>\n+        <translation>SQLiteDatabase: \u9884\u5904\u7406\u7528\u4e8e\u6821\u9a8c\u6570\u636e\u5e93\u7684\u8bed\u53e5\u65f6\u5931\u8d25: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n-        <translation>SQLiteDatabase\uff1a\u65e0\u6cd5\u8bfb\u53d6\u6570\u636e\u5e93\u6821\u9a8c\u9519\u8bef\uff1a%s</translation>\n+        <translation>SQLiteDatabase: \u8bfb\u53d6\u6570\u636e\u5e93\u5931\u8d25\u6821\u9a8c\u9519\u8bef: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Unexpected application id. Expected %u, got %u</source>\n-        <translation>SQLiteDatabase\uff1a\u5f02\u5e38\u5e94\u7528ID\u3002\u5f02\u5e38%u\uff0c\u5b9e\u9645%u</translation>\n+        <translation>SQLiteDatabase: \u610f\u6599\u4e4b\u5916\u7684\u5e94\u7528ID\u3002\u9884\u671f\u4e3a%u\uff0c\u5b9e\u9645\u4e3a%u</translation>\n     </message>\n     <message>\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n@@ -4013,10 +4021,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s\u975e\u5e38\u9ad8\uff01</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u52a0\u8f7d\u94b1\u5305 %s \u51fa\u9519\u3002 \u91cd\u590d\u6307\u5b9a\u4e86 -wallet \u6587\u4ef6\u540d\u3002</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u6b63\u5728\u542f\u52a8\u7f51\u7edc\u7ebf\u7a0b...</translation>"
      },
      {
        "sha": "f31297785ea20ba37a407921209cd5d695a79625",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7264bcd20f700ecc88734cb77f2d18f849dcd856/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "patch": "@@ -871,7 +871,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Create</source>\n         <translation>\u7522\u751f</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3884,10 +3884,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>%s is set very high!</source>\n         <translation>%s \u7684\u8a2d\u5b9a\u503c\u7570\u5e38\u5927\uff01</translation>\n     </message>\n-    <message>\n-        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n-        <translation>\u8f09\u5165\u9322\u5305\u6a94 %s \u5931\u6557\u3002-wallet \u53c3\u6578\u6307\u5b9a\u4e86\u91cd\u8907\u7684\u6a94\u540d\u3002</translation>\n-    </message>\n     <message>\n         <source>Starting network threads...</source>\n         <translation>\u6b63\u5728\u555f\u52d5\u7db2\u8def\u57f7\u884c\u7dd2...</translation>"
      }
    ]
  },
  {
    "sha": "4e964094dbcbbbf8e587663a3ef3a85c075f4599",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTk2NDA5NGRiY2JiYmY4ZTU4NzY2M2EzZWYzYTg1YzA3NWY0NTk5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T10:25:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T10:25:33Z"
      },
      "message": "Merge #20486: [backport] test: Fix intermittent issue in mempool_compatibility\n\nfa05d19bd6ba619bb3f9aabc05c439cd18d34544 test: Fix intermittent issue in mempool_compatibility (MarcoFalke)\n\nPull request description:\n\n  Github-Pull: #20456\n  Rebased-From: fa05d19bd6ba619bb3f9aabc05c439cd18d34544\n\nTop commit has no ACKs.\n\nTree-SHA512: c07ed3ffab315da2bf70427882e2da8216964fef97dd538d7c46c5d5b3563b0732626ffbe4b0e19537ad49a8542eedb3c08850cccacdef466f24582defe99d22",
      "tree": {
        "sha": "ad2fc05700c6c306f1dad4bf87c71b93538b650a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad2fc05700c6c306f1dad4bf87c71b93538b650a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e964094dbcbbbf8e587663a3ef3a85c075f4599",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl++MR0ACgkQ0upIUOdS\niyWHAQ//Uv0nOOgqkf259vRv1ocftUoyL3Io3+aRve5frFLfrQ2XWS/OxEv1d6th\ngYsJzzmBgC5W9gXQFDw5uPtqOHzdd5qljKg/Zk4+qO5NAn9kIHnVCmYipw+iNNi6\nvxEkSJJGQkg0KEcIo+HV8nlxBm38+f7y1tNasHAbS4Fk32x2RTQgqRMtBiiqXOto\nk73/011JYzX4h72tJ1eCujQqISSC/dMX1UcqsXXS3TTdVTTNkH+izfGRKg72wRcp\n1z1fILqcUNmyUKcIyxobAFpIe0XvmE+8MWSqNOGyQwu3htrCFmsy85/zUQ0NqrFc\n53y061oBUUTyYbrAEIJAGxK7QmbtfzwDPmtjOfnV0Q/Oww6C2L1cQBLCPpqMArDr\nf5Etc+GkE+DVPoyPHTgN8hR0NphVe/5SAQQqTLmXK+M9Ed1WwfSJSQ2EfzmGmRoL\nkwHk6zCHPMJLkkw347si1ufAYnH/4TdFkkuKII6mif+2oEE1+NaUEJemUrh/rKbo\n7bXMYgpuBkWID+9EvnCOp1ye6J5TEbdYiRBF3lHvn6KM9m1zwdxBQ+8Nq/IxlaKy\npS7C86Jb0lp6KFfot9dp3S6j+gw3KKiic/1rjdl9yJM8wLVMPpzekCE+oNIaDerC\nqyszfv5ZD1JtDlRIpO3V1fSeJDWEnE92iomqvB3IkeExy9xTysY=\n=jYY8\n-----END PGP SIGNATURE-----",
        "payload": "tree ad2fc05700c6c306f1dad4bf87c71b93538b650a\nparent 7264bcd20f700ecc88734cb77f2d18f849dcd856\nparent fa05d19bd6ba619bb3f9aabc05c439cd18d34544\nauthor MarcoFalke <falke.marco@gmail.com> 1606299930 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606299933 +0100\n\nMerge #20486: [backport] test: Fix intermittent issue in mempool_compatibility\n\nfa05d19bd6ba619bb3f9aabc05c439cd18d34544 test: Fix intermittent issue in mempool_compatibility (MarcoFalke)\n\nPull request description:\n\n  Github-Pull: #20456\n  Rebased-From: fa05d19bd6ba619bb3f9aabc05c439cd18d34544\n\nTop commit has no ACKs.\n\nTree-SHA512: c07ed3ffab315da2bf70427882e2da8216964fef97dd538d7c46c5d5b3563b0732626ffbe4b0e19537ad49a8542eedb3c08850cccacdef466f24582defe99d22\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e964094dbcbbbf8e587663a3ef3a85c075f4599",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e964094dbcbbbf8e587663a3ef3a85c075f4599",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e964094dbcbbbf8e587663a3ef3a85c075f4599/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7264bcd20f700ecc88734cb77f2d18f849dcd856",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7264bcd20f700ecc88734cb77f2d18f849dcd856"
      },
      {
        "sha": "fa05d19bd6ba619bb3f9aabc05c439cd18d34544",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa05d19bd6ba619bb3f9aabc05c439cd18d34544",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa05d19bd6ba619bb3f9aabc05c439cd18d34544"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8ac91bd008dff81baafc1dd4600b30b15f52519a",
        "filename": "test/functional/mempool_compatibility.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e964094dbcbbbf8e587663a3ef3a85c075f4599/test/functional/mempool_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e964094dbcbbbf8e587663a3ef3a85c075f4599/test/functional/mempool_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_compatibility.py?ref=4e964094dbcbbbf8e587663a3ef3a85c075f4599",
        "patch": "@@ -29,7 +29,7 @@ def skip_test_if_missing_module(self):\n \n     def setup_network(self):\n         self.add_nodes(self.num_nodes, versions=[\n-            150200, # oldest version supported by the test framework\n+            190100,  # oldest version with getmempoolinfo.loaded (used to avoid intermittent issues)\n             None,\n         ])\n         self.start_nodes()\n@@ -72,5 +72,6 @@ def run_test(self):\n         assert old_tx_hash in old_node.getrawmempool()\n         assert unbroadcasted_tx_hash in old_node.getrawmempool()\n \n+\n if __name__ == \"__main__\":\n     MempoolCompatibilityTest().main()"
      }
    ]
  },
  {
    "sha": "d47d16025e21d6e59da102f8ee965965fd9bbb34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDdkMTYwMjVlMjFkNmU1OWRhMTAyZjhlZTk2NTk2NWZkOWJiYjM0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T10:26:17Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T10:27:42Z"
      },
      "message": "Merge #20485: [backport] wallet: Do not treat default constructed types as None-type\n\nfa69c2c78455fd0dc436018fece9ff7fc83a180d wallet: Do not treat default constructed types as None-type (MarcoFalke)\nfac4e136fa3d0fab7fde900a6be921313e16e7a6 refactor: Change pointer to reference because it can not be null (MarcoFalke)\n\nPull request description:\n\n  Github-Pull: #20410\n  Rebased-From: fac4e136fa3d0fab7fde900a6be921313e16e7a6\n\n  Github-Pull: #20410\n  Rebased-From: fa69c2c78455fd0dc436018fece9ff7fc83a180d\n\nTop commit has no ACKs.\n\nTree-SHA512: 05c3fe29677710b57dcc482fd529b0ab79475519f60f9cfde19f956c4e2212d09b042af458ec4f1272c581360ce841b735dca4df144e0798b3ccf16547de9cd0",
      "tree": {
        "sha": "58e4cc0a2864f093381420a201244ba771b24413",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58e4cc0a2864f093381420a201244ba771b24413"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d47d16025e21d6e59da102f8ee965965fd9bbb34",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl++MZ4ACgkQ0upIUOdS\niyWidBAAs3JMcQ21y40Hbw0O7JTr0zXtqcjhncXvZfXOEp2tMVhbDfFltKHvP+3L\nklUOHBk1ausscp5F9gjK2PAU8XVGs8s96nK+3hAlJOG6jP95bhJ8lIQd0/FhOxBQ\n33aj979OHcHilCVnW8LIUqO4XOlkjH0IZLllHehAcvlUt04l0Da8EQvi941vcyPo\nZmM20G6d/jXj1qNyGjWbzG5QTfsLSSWM3JEUJ6dikl68872T4tSvw69ftJJIbTtH\nGMPGf+v0p/ERG6fNBJyMNXz6HGugnAVPuL/FXyc2RCsOh7dwrCCH+NJQJ3w2UaqL\nlhiTFefojeTpUILwuihJ3EnXGRppfWmdm5Hq2RrHrkXpIiftOWlylyJeslETFXSU\nr9EZ4Pv9YiwpvgCvyAPfnNenC7MItcGsPdSugzMztpfT8wpnnnU2B/ZCK1PoUZPf\nG6px8wyy8cSW/OMFveU67ywG1+TL+b9ENIslv0VqjXVEOLb1ZIvxncCd0iwxnq8V\ntgiCNdss6ib9poE8aGZ5dBUXaGx7nbDqABfFgVxqRZMNPTN4euGznTgHYS6NLQWG\nJ3cUGPSEr4yz83rMlhm9OjBDYHgvpMZFDGg5hafbcXxCuEp8hVtTS+NbH+Rd+qGP\nkMVwx68lCgy04SLCnCZRd3k8N16ONMZlgfinH6EJtRz+VePsY0A=\n=zxlN\n-----END PGP SIGNATURE-----",
        "payload": "tree 58e4cc0a2864f093381420a201244ba771b24413\nparent 4e964094dbcbbbf8e587663a3ef3a85c075f4599\nparent fa69c2c78455fd0dc436018fece9ff7fc83a180d\nauthor MarcoFalke <falke.marco@gmail.com> 1606299977 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606300062 +0100\n\nMerge #20485: [backport] wallet: Do not treat default constructed types as None-type\n\nfa69c2c78455fd0dc436018fece9ff7fc83a180d wallet: Do not treat default constructed types as None-type (MarcoFalke)\nfac4e136fa3d0fab7fde900a6be921313e16e7a6 refactor: Change pointer to reference because it can not be null (MarcoFalke)\n\nPull request description:\n\n  Github-Pull: #20410\n  Rebased-From: fac4e136fa3d0fab7fde900a6be921313e16e7a6\n\n  Github-Pull: #20410\n  Rebased-From: fa69c2c78455fd0dc436018fece9ff7fc83a180d\n\nTop commit has no ACKs.\n\nTree-SHA512: 05c3fe29677710b57dcc482fd529b0ab79475519f60f9cfde19f956c4e2212d09b042af458ec4f1272c581360ce841b735dca4df144e0798b3ccf16547de9cd0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47d16025e21d6e59da102f8ee965965fd9bbb34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d47d16025e21d6e59da102f8ee965965fd9bbb34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47d16025e21d6e59da102f8ee965965fd9bbb34/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e964094dbcbbbf8e587663a3ef3a85c075f4599",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e964094dbcbbbf8e587663a3ef3a85c075f4599",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e964094dbcbbbf8e587663a3ef3a85c075f4599"
      },
      {
        "sha": "fa69c2c78455fd0dc436018fece9ff7fc83a180d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa69c2c78455fd0dc436018fece9ff7fc83a180d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa69c2c78455fd0dc436018fece9ff7fc83a180d"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 21,
      "deletions": 26
    },
    "files": [
      {
        "sha": "19e1af75bacf5938ec13a2e3b43b3b07133b16d2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47d16025e21d6e59da102f8ee965965fd9bbb34/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47d16025e21d6e59da102f8ee965965fd9bbb34/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d47d16025e21d6e59da102f8ee965965fd9bbb34",
        "patch": "@@ -198,25 +198,23 @@ static std::string LabelFromValue(const UniValue& value)\n /**\n  * Update coin control with fee estimation based on the given parameters\n  *\n- * @param[in]     pwallet           Wallet pointer\n+ * @param[in]     wallet            Wallet reference\n  * @param[in,out] cc                Coin control to be updated\n  * @param[in]     conf_target       UniValue integer; confirmation target in blocks, values between 1 and 1008 are valid per policy/fees.h;\n- *                                      if a fee_rate is present, 0 is allowed here as a no-op positional placeholder\n  * @param[in]     estimate_mode     UniValue string; fee estimation mode, valid values are \"unset\", \"economical\" or \"conservative\";\n- *                                      if a fee_rate is present, \"\" is allowed here as a no-op positional placeholder\n  * @param[in]     fee_rate          UniValue real; fee rate in sat/vB;\n- *                                      if a fee_rate is present, both conf_target and estimate_mode must either be null, or no-op\n+ *                                      if present, both conf_target and estimate_mode must either be null, or \"unset\"\n  * @param[in]     override_min_fee  bool; whether to set fOverrideFeeRate to true to disable minimum fee rate checks and instead\n  *                                      verify only that fee_rate is greater than 0\n  * @throws a JSONRPCError if conf_target, estimate_mode, or fee_rate contain invalid values or are in conflict\n  */\n-static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate, bool override_min_fee)\n+static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate, bool override_min_fee)\n {\n     if (!fee_rate.isNull()) {\n-        if (!conf_target.isNull() && conf_target.get_int() > 0) {\n+        if (!conf_target.isNull()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n         }\n-        if (!estimate_mode.isNull() && !estimate_mode.get_str().empty()) {\n+        if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n         CFeeRate fee_rate_in_sat_vb{CFeeRate(AmountFromValue(fee_rate), COIN)};\n@@ -235,7 +233,7 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n         throw JSONRPCError(RPC_INVALID_PARAMETER, InvalidEstimateModeErrorMessage());\n     }\n     if (!conf_target.isNull()) {\n-        cc.m_confirm_target = ParseConfirmTarget(conf_target, pwallet->chain().estimateMaxBlocks());\n+        cc.m_confirm_target = ParseConfirmTarget(conf_target, wallet.chain().estimateMaxBlocks());\n     }\n }\n \n@@ -473,8 +471,8 @@ static RPCHelpMan sendtoaddress()\n                     + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1\") +\n                     \"\\nSend 0.1 BTC with a confirmation target of 6 blocks in economical fee estimate mode using positional arguments\\n\"\n                     + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"donation\\\" \\\"sean's outpost\\\" false true 6 economical\") +\n-                    \"\\nSend 0.1 BTC with a fee rate of 1 \" + CURRENCY_ATOM + \"/vB, subtract fee from amount, BIP125-replaceable, using positional arguments\\n\"\n-                    + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"drinks\\\" \\\"room77\\\" true true 0 \\\"\\\" 1\") +\n+                    \"\\nSend 0.1 BTC with a fee rate of 1.1 \" + CURRENCY_ATOM + \"/vB, subtract fee from amount, BIP125-replaceable, using positional arguments\\n\"\n+                    + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"drinks\\\" \\\"room77\\\" true true null \\\"unset\\\" null 1.1\") +\n                     \"\\nSend 0.2 BTC with a confirmation target of 6 blocks in economical fee estimate mode using named arguments\\n\"\n                     + HelpExampleCli(\"-named sendtoaddress\", \"address=\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" amount=0.2 conf_target=6 estimate_mode=\\\"economical\\\"\") +\n                     \"\\nSend 0.5 BTC with a fee rate of 25 \" + CURRENCY_ATOM + \"/vB using named arguments\\n\"\n@@ -514,7 +512,7 @@ static RPCHelpMan sendtoaddress()\n     // We also enable partial spend avoidance if reuse avoidance is set.\n     coin_control.m_avoid_partial_spends |= coin_control.m_avoid_address_reuse;\n \n-    SetFeeEstimateMode(pwallet, coin_control, /* conf_target */ request.params[6], /* estimate_mode */ request.params[7], /* fee_rate */ request.params[9], /* override_min_fee */ false);\n+    SetFeeEstimateMode(*pwallet, coin_control, /* conf_target */ request.params[6], /* estimate_mode */ request.params[7], /* fee_rate */ request.params[9], /* override_min_fee */ false);\n \n     EnsureWalletIsUnlocked(pwallet);\n \n@@ -942,7 +940,7 @@ static RPCHelpMan sendmany()\n         coin_control.m_signal_bip125_rbf = request.params[5].get_bool();\n     }\n \n-    SetFeeEstimateMode(pwallet, coin_control, /* conf_target */ request.params[6], /* estimate_mode */ request.params[7], /* fee_rate */ request.params[8], /* override_min_fee */ false);\n+    SetFeeEstimateMode(*pwallet, coin_control, /* conf_target */ request.params[6], /* estimate_mode */ request.params[7], /* fee_rate */ request.params[8], /* override_min_fee */ false);\n \n     std::vector<CRecipient> recipients;\n     ParseRecipients(sendTo, subtractFeeFromAmount, recipients);\n@@ -3164,7 +3162,7 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n         if (options.exists(\"replaceable\")) {\n             coinControl.m_signal_bip125_rbf = options[\"replaceable\"].get_bool();\n         }\n-        SetFeeEstimateMode(pwallet, coinControl, options[\"conf_target\"], options[\"estimate_mode\"], options[\"fee_rate\"], override_min_fee);\n+        SetFeeEstimateMode(*pwallet, coinControl, options[\"conf_target\"], options[\"estimate_mode\"], options[\"fee_rate\"], override_min_fee);\n       }\n     } else {\n         // if options is null and not a bool\n@@ -3492,7 +3490,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n         if (options.exists(\"replaceable\")) {\n             coin_control.m_signal_bip125_rbf = options[\"replaceable\"].get_bool();\n         }\n-        SetFeeEstimateMode(pwallet, coin_control, conf_target, options[\"estimate_mode\"], options[\"fee_rate\"], /* override_min_fee */ false);\n+        SetFeeEstimateMode(*pwallet, coin_control, conf_target, options[\"estimate_mode\"], options[\"fee_rate\"], /* override_min_fee */ false);\n     }\n \n     // Make sure the results are valid at least up to the most recent block\n@@ -4081,10 +4079,10 @@ static RPCHelpMan send()\n         RPCExamples{\"\"\n         \"\\nSend 0.1 BTC with a confirmation target of 6 blocks in economical fee estimate mode\\n\"\n         + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.1}' 6 economical\\n\") +\n-        \"Send 0.2 BTC with a fee rate of 1 \" + CURRENCY_ATOM + \"/vB using positional arguments\\n\"\n-        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.2}' 0 \\\"\\\" 1\\n\") +\n+        \"Send 0.2 BTC with a fee rate of 1.1 \" + CURRENCY_ATOM + \"/vB using positional arguments\\n\"\n+        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.2}' null \\\"unset\\\" 1.1\\n\") +\n         \"Send 0.2 BTC with a fee rate of 1 \" + CURRENCY_ATOM + \"/vB using the options argument\\n\"\n-        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.2}' '{\\\"fee_rate\\\": 1}'\\n\") +\n+        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.2}' null \\\"unset\\\" null '{\\\"fee_rate\\\": 1}'\\n\") +\n         \"Send 0.3 BTC with a fee rate of 25 \" + CURRENCY_ATOM + \"/vB using named arguments\\n\"\n         + HelpExampleCli(\"-named send\", \"outputs='{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.3}' fee_rate=25\\n\") +\n         \"Create a transaction that should confirm the next block, with a specific input, and return result without adding to wallet or broadcasting to the network\\n\""
      },
      {
        "sha": "ac4a6e4948a3e7ce669623831da7d9fc5c8044ce",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47d16025e21d6e59da102f8ee965965fd9bbb34/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47d16025e21d6e59da102f8ee965965fd9bbb34/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=d47d16025e21d6e59da102f8ee965965fd9bbb34",
        "patch": "@@ -235,8 +235,7 @@ def run_test(self):\n         fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n         explicit_fee_rate_btc_kvb = Decimal(fee_rate_btc_kvb) / 1000\n \n-        # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\n-        txid = self.nodes[2].sendmany(amounts={address: 10}, conf_target=0, estimate_mode=\"\", fee_rate=fee_rate_sat_vb)\n+        txid = self.nodes[2].sendmany(amounts={address: 10}, fee_rate=fee_rate_sat_vb)\n         self.nodes[2].generate(1)\n         self.sync_all(self.nodes[0:3])\n         balance = self.nodes[2].getbalance()\n@@ -407,8 +406,7 @@ def run_test(self):\n             fee_rate_sat_vb = 2\n             fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n \n-            # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\n-            txid = self.nodes[2].sendtoaddress(address=address, amount=amount, conf_target=0, estimate_mode=\"\", fee_rate=fee_rate_sat_vb)\n+            txid = self.nodes[2].sendtoaddress(address=address, amount=amount, fee_rate=fee_rate_sat_vb)\n             tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])"
      },
      {
        "sha": "376cfdec6c5590fc6b2542c18b47c6a640ce213f",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47d16025e21d6e59da102f8ee965965fd9bbb34/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47d16025e21d6e59da102f8ee965965fd9bbb34/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=d47d16025e21d6e59da102f8ee965965fd9bbb34",
        "patch": "@@ -260,17 +260,16 @@ def run_test(self):\n         res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=1, add_to_wallet=False)\n         assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"], self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n \n-        # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\n-        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0, estimate_mode=\"\", fee_rate=7, add_to_wallet=False)\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=7, add_to_wallet=False)\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00007\"))\n \n-        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=2, add_to_wallet=False)\n+        # \"unset\" and None are treated the same for estimate_mode\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=2, estimate_mode=\"unset\", add_to_wallet=False)\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00002\"))\n \n-        # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\n-        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0, arg_estimate_mode=\"\", arg_fee_rate=4.531, add_to_wallet=False)\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=4.531, add_to_wallet=False)\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00004531\"))\n "
      }
    ]
  },
  {
    "sha": "9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmFjY2EzY2UwYWQzYzMyNTY3NmY5YzlmMGU2ZWQ0NDI5ZjBjMzM1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T17:03:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-25T17:03:53Z"
      },
      "message": "Merge #20490: [backport] wallet: upgradewallet fixes, improvements, test coverage\n\nca8cd893bb56bf5d455154b0498b1f58f77d20ed wallet: fix and improve upgradewallet error responses (Jon Atack)\n99d56e357159c7154f69f28cb5587c5ca20d6594 wallet: fix and improve upgradewallet result responses (Jon Atack)\n2498b04ce88696a3216fc38b7d393906b733e8b1 Don't upgrade to HD split if it is already supported (Andrew Chow)\nc46c18b788cb0862aafbb116fd37936cbed6a431 wallet: refactor GetClosestWalletFeature() (Jon Atack)\n\nPull request description:\n\n  Github-Pull: #20403\n  Rebased-From: c46c18b788cb0862aafbb116fd37936cbed6a431\n\n  Github-Pull: #20403\n  Rebased-From: 2498b04ce88696a3216fc38b7d393906b733e8b1\n\n  Github-Pull: #20403\n  Rebased-From: 99d56e357159c7154f69f28cb5587c5ca20d6594\n\n  Github-Pull: #20403\n  Rebased-From: ca8cd893bb56bf5d455154b0498b1f58f77d20ed\n\nTop commit has no ACKs.\n\nTree-SHA512: b18a1d015c963298740c585385eaa056988464112c88a519fe619be22dc78a8f6a102365cf799c50b781a77a09bec82b58ce411ab007b48f8b5de876e9c75060",
      "tree": {
        "sha": "5bbd7286003580fcf5cd957caec8d9333b05018e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5bbd7286003580fcf5cd957caec8d9333b05018e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl++jnkACgkQ0upIUOdS\niyWlMw/9GPCzzY/BATVr2k8KjIXN9AE8rGR4hTCDBBBuIKmmxTHAGe1Ee8cTuCQf\nXd/WSCBf6xPJ4xMXP8gycAwIxsGS++4Wfafibrmog6+yYISRAMuxvm03KgOvNAZj\nUYk5VT6gKZpejyWUD8kC7XtVRfiF9mfw+mBJDtMotyWDpNxV0YnFs1j9Xl+1JLqt\nytl7p0u+KHCwCwsGRuaNdzVpuBkoc6zrFJDQbUHmeB0W+F8L2lGLU1mameUcokO0\nErvhBiXPCbgIq2bOzCSE4AubA0xz8k7EILkRSgQY5GsWk9xb7DTeFhV3CBINNMlF\n7c/ZblYzmav6oFl+VO97lbHQof1tm91BAyZpY3k0+hYGwP+ub5DClf5sOHFZvZQG\n9/mvTEQJfKWMxcs6yOfzaHeFU4gyVrHg74NpAvUfTl9B04RigT8IEP4JVA7iIB9n\nOSR+6+zsTj6jzvTfZ/CM5laxTUabohveQj98NTmm78kKSbZRZUGpUNajwwGfsqXX\nP6ein/UAU+ch1GVcKqsWrZ2F3b6Lyk6VUE2fEzqLgBBER7vF+hPtqcBjHVz8HfNv\nbixzCKQW9XoprWGhkPIhhafcg7WHupiNPE9W6N1fzHEZM5iY0ME6hZblB9w4J2fB\ncAzXMZjakdprf7157Sqq/4JI3UixdgDdthpFvftbsZ5I0nyngLY=\n=P0nS\n-----END PGP SIGNATURE-----",
        "payload": "tree 5bbd7286003580fcf5cd957caec8d9333b05018e\nparent d47d16025e21d6e59da102f8ee965965fd9bbb34\nparent ca8cd893bb56bf5d455154b0498b1f58f77d20ed\nauthor MarcoFalke <falke.marco@gmail.com> 1606323819 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1606323833 +0100\n\nMerge #20490: [backport] wallet: upgradewallet fixes, improvements, test coverage\n\nca8cd893bb56bf5d455154b0498b1f58f77d20ed wallet: fix and improve upgradewallet error responses (Jon Atack)\n99d56e357159c7154f69f28cb5587c5ca20d6594 wallet: fix and improve upgradewallet result responses (Jon Atack)\n2498b04ce88696a3216fc38b7d393906b733e8b1 Don't upgrade to HD split if it is already supported (Andrew Chow)\nc46c18b788cb0862aafbb116fd37936cbed6a431 wallet: refactor GetClosestWalletFeature() (Jon Atack)\n\nPull request description:\n\n  Github-Pull: #20403\n  Rebased-From: c46c18b788cb0862aafbb116fd37936cbed6a431\n\n  Github-Pull: #20403\n  Rebased-From: 2498b04ce88696a3216fc38b7d393906b733e8b1\n\n  Github-Pull: #20403\n  Rebased-From: 99d56e357159c7154f69f28cb5587c5ca20d6594\n\n  Github-Pull: #20403\n  Rebased-From: ca8cd893bb56bf5d455154b0498b1f58f77d20ed\n\nTop commit has no ACKs.\n\nTree-SHA512: b18a1d015c963298740c585385eaa056988464112c88a519fe619be22dc78a8f6a102365cf799c50b781a77a09bec82b58ce411ab007b48f8b5de876e9c75060\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d47d16025e21d6e59da102f8ee965965fd9bbb34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47d16025e21d6e59da102f8ee965965fd9bbb34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d47d16025e21d6e59da102f8ee965965fd9bbb34"
      },
      {
        "sha": "ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8cd893bb56bf5d455154b0498b1f58f77d20ed"
      }
    ],
    "stats": {
      "total": 124,
      "additions": 74,
      "deletions": 50
    },
    "files": [
      {
        "sha": "5cbdd1021ad529b33117aaef7c409f919f5e7b27",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 6,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "patch": "@@ -4239,7 +4239,7 @@ static RPCHelpMan sethdseed()\n \n     // Do not do anything to non-HD wallets\n     if (!pwallet->CanSupportFeature(FEATURE_HD)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Use the upgradewallet RPC in order to upgrade a non-HD wallet to HD\");\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set an HD seed on a non-HD wallet. Use the upgradewallet RPC in order to upgrade a non-HD wallet to HD\");\n     }\n \n     EnsureWalletIsUnlocked(pwallet);\n@@ -4470,14 +4470,18 @@ static RPCHelpMan walletcreatefundedpsbt()\n static RPCHelpMan upgradewallet()\n {\n     return RPCHelpMan{\"upgradewallet\",\n-        \"\\nUpgrade the wallet. Upgrades to the latest version if no version number is specified\\n\"\n+        \"\\nUpgrade the wallet. Upgrades to the latest version if no version number is specified.\\n\"\n         \"New keys may be generated and a new wallet backup will need to be made.\",\n         {\n-            {\"version\", RPCArg::Type::NUM, /* default */ strprintf(\"%d\", FEATURE_LATEST), \"The version number to upgrade to. Default is the latest wallet version\"}\n+            {\"version\", RPCArg::Type::NUM, /* default */ strprintf(\"%d\", FEATURE_LATEST), \"The version number to upgrade to. Default is the latest wallet version.\"}\n         },\n         RPCResult{\n             RPCResult::Type::OBJ, \"\", \"\",\n             {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of wallet this operation was performed on\"},\n+                {RPCResult::Type::NUM, \"previous_version\", \"Version of wallet before this operation\"},\n+                {RPCResult::Type::NUM, \"current_version\", \"Version of wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if no error\"},\n                 {RPCResult::Type::STR, \"error\", /* optional */ true, \"Error message (if there is one)\"}\n             },\n         },\n@@ -4500,11 +4504,27 @@ static RPCHelpMan upgradewallet()\n         version = request.params[0].get_int();\n     }\n     bilingual_str error;\n-    if (!pwallet->UpgradeWallet(version, error)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, error.original);\n+    const int previous_version{pwallet->GetVersion()};\n+    const bool wallet_upgraded{pwallet->UpgradeWallet(version, error)};\n+    const int current_version{pwallet->GetVersion()};\n+    std::string result;\n+\n+    if (wallet_upgraded) {\n+        if (previous_version == current_version) {\n+            result = \"Already at latest version. Wallet version unchanged.\";\n+        } else {\n+            result = strprintf(\"Wallet upgraded successfully from version %i to version %i.\", previous_version, current_version);\n+        }\n     }\n+\n     UniValue obj(UniValue::VOBJ);\n-    if (!error.empty()) {\n+    obj.pushKV(\"wallet_name\", pwallet->GetName());\n+    obj.pushKV(\"previous_version\", previous_version);\n+    obj.pushKV(\"current_version\", current_version);\n+    if (!result.empty()) {\n+        obj.pushKV(\"result\", result);\n+    } else {\n+        CHECK_NONFATAL(!error.empty());\n         obj.pushKV(\"error\", error.original);\n     }\n     return obj;"
      },
      {
        "sha": "7dbbf173020bbd06b50ef3c1d5196bf601ac2432",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "patch": "@@ -453,7 +453,7 @@ bool LegacyScriptPubKeyMan::Upgrade(int prev_version, int new_version, bilingual\n         hd_upgrade = true;\n     }\n     // Upgrade to HD chain split if necessary\n-    if (IsFeatureSupported(new_version, FEATURE_HD_SPLIT)) {\n+    if (!IsFeatureSupported(prev_version, FEATURE_HD_SPLIT) && IsFeatureSupported(new_version, FEATURE_HD_SPLIT)) {\n         WalletLogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n         m_storage.SetMinVersion(FEATURE_PRE_SPLIT_KEYPOOL);\n         split_upgrade = FEATURE_HD_SPLIT > prev_version;"
      },
      {
        "sha": "88a52cdf63a8ff2ee14a68014c0e00de02ae0f54",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "patch": "@@ -87,13 +87,9 @@ bool IsFeatureSupported(int wallet_version, int feature_version)\n \n WalletFeature GetClosestWalletFeature(int version)\n {\n-    if (version >= FEATURE_LATEST) return FEATURE_LATEST;\n-    if (version >= FEATURE_PRE_SPLIT_KEYPOOL) return FEATURE_PRE_SPLIT_KEYPOOL;\n-    if (version >= FEATURE_NO_DEFAULT_KEY) return FEATURE_NO_DEFAULT_KEY;\n-    if (version >= FEATURE_HD_SPLIT) return FEATURE_HD_SPLIT;\n-    if (version >= FEATURE_HD) return FEATURE_HD;\n-    if (version >= FEATURE_COMPRPUBKEY) return FEATURE_COMPRPUBKEY;\n-    if (version >= FEATURE_WALLETCRYPT) return FEATURE_WALLETCRYPT;\n-    if (version >= FEATURE_BASE) return FEATURE_BASE;\n+    const std::array<WalletFeature, 8> wallet_features{{FEATURE_LATEST, FEATURE_PRE_SPLIT_KEYPOOL, FEATURE_NO_DEFAULT_KEY, FEATURE_HD_SPLIT, FEATURE_HD, FEATURE_COMPRPUBKEY, FEATURE_WALLETCRYPT, FEATURE_BASE}};\n+    for (const WalletFeature& wf : wallet_features) {\n+        if (version >= wf) return wf;\n+    }\n     return static_cast<WalletFeature>(0);\n }"
      },
      {
        "sha": "9b8410e0d55438c2796f65a054a91d5558fe17a2",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 43,
        "deletions": 35,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "patch": "@@ -22,9 +22,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n-    assert_greater_than,\n     assert_is_hex_string,\n-    assert_raises_rpc_error,\n     sha256sum_file,\n )\n \n@@ -92,6 +90,32 @@ def dumb_sync_blocks(self):\n             v16_3_node.submitblock(b)\n         assert_equal(v16_3_node.getblockcount(), to_height)\n \n+    def test_upgradewallet(self, wallet, previous_version, requested_version=None, expected_version=None):\n+        unchanged = expected_version == previous_version\n+        new_version = previous_version if unchanged else expected_version if expected_version else requested_version\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n+        assert_equal(wallet.upgradewallet(requested_version),\n+            {\n+                \"wallet_name\": \"\",\n+                \"previous_version\": previous_version,\n+                \"current_version\": new_version,\n+                \"result\": \"Already at latest version. Wallet version unchanged.\" if unchanged else \"Wallet upgraded successfully from version {} to version {}.\".format(previous_version, new_version),\n+            }\n+        )\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], new_version)\n+\n+    def test_upgradewallet_error(self, wallet, previous_version, requested_version, msg):\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n+        assert_equal(wallet.upgradewallet(requested_version),\n+            {\n+                \"wallet_name\": \"\",\n+                \"previous_version\": previous_version,\n+                \"current_version\": previous_version,\n+                \"error\": msg,\n+            }\n+        )\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n+\n     def run_test(self):\n         self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n         self.dumb_sync_blocks()\n@@ -158,47 +182,36 @@ def copy_split_hd():\n         self.restart_node(0)\n         copy_v16()\n         wallet = node_master.get_wallet_rpc(self.default_wallet_name)\n-        old_version = wallet.getwalletinfo()[\"walletversion\"]\n-\n-        # calling upgradewallet without version arguments\n-        # should return nothing if successful\n-        assert_equal(wallet.upgradewallet(), {})\n-        new_version = wallet.getwalletinfo()[\"walletversion\"]\n-        # upgraded wallet version should be greater than older one\n-        assert_greater_than(new_version, old_version)\n+        self.log.info(\"Test upgradewallet without a version argument\")\n+        self.test_upgradewallet(wallet, previous_version=159900, expected_version=169900)\n         # wallet should still contain the same balance\n         assert_equal(wallet.getbalance(), v16_3_balance)\n \n         copy_non_hd()\n         wallet = node_master.get_wallet_rpc(self.default_wallet_name)\n         # should have no master key hash before conversion\n         assert_equal('hdseedid' in wallet.getwalletinfo(), False)\n-        # calling upgradewallet with explicit version number\n-        # should return nothing if successful\n-        assert_equal(wallet.upgradewallet(169900), {})\n-        new_version = wallet.getwalletinfo()[\"walletversion\"]\n-        # upgraded wallet should have version 169900\n-        assert_equal(new_version, 169900)\n+        self.log.info(\"Test upgradewallet with explicit version number\")\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=169900)\n         # after conversion master key hash should be present\n         assert_is_hex_string(wallet.getwalletinfo()['hdseedid'])\n \n-        self.log.info('Intermediary versions don\\'t effect anything')\n+        self.log.info(\"Intermediary versions don't effect anything\")\n         copy_non_hd()\n         # Wallet starts with 60000\n         assert_equal(60000, wallet.getwalletinfo()['walletversion'])\n         wallet.unloadwallet()\n         before_checksum = sha256sum_file(node_master_wallet)\n         node_master.loadwallet('')\n-        # Can \"upgrade\" to 129999 which should have no effect on the wallet\n-        wallet.upgradewallet(129999)\n-        assert_equal(60000, wallet.getwalletinfo()['walletversion'])\n+        # Test an \"upgrade\" from 60000 to 129999 has no effect, as the next version is 130000\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=129999, expected_version=60000)\n         wallet.unloadwallet()\n         assert_equal(before_checksum, sha256sum_file(node_master_wallet))\n         node_master.loadwallet('')\n \n         self.log.info('Wallets cannot be downgraded')\n         copy_non_hd()\n-        assert_raises_rpc_error(-4, 'Cannot downgrade wallet', wallet.upgradewallet, 40000)\n+        self.test_upgradewallet_error(wallet, previous_version=60000, requested_version=40000, msg=\"Cannot downgrade wallet\")\n         wallet.unloadwallet()\n         assert_equal(before_checksum, sha256sum_file(node_master_wallet))\n         node_master.loadwallet('')\n@@ -208,8 +221,7 @@ def copy_split_hd():\n         orig_kvs = dump_bdb_kv(node_master_wallet)\n         assert b'\\x07hdchain' not in orig_kvs\n         # Upgrade to HD, no split\n-        wallet.upgradewallet(130000)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=130000)\n         # Check that there is now a hd chain and it is version 1, no internal chain counter\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         assert b'\\x07hdchain' in new_kvs\n@@ -236,16 +248,12 @@ def copy_split_hd():\n         assert_equal('m/0\\'/0\\'/1\\'', info['hdkeypath'])\n \n         self.log.info('Cannot upgrade to HD Split, needs Pre Split Keypool')\n-        assert_raises_rpc_error(-4, 'Cannot upgrade a non HD split wallet without upgrading to support pre split keypool', wallet.upgradewallet, 139900)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n-        assert_raises_rpc_error(-4, 'Cannot upgrade a non HD split wallet without upgrading to support pre split keypool', wallet.upgradewallet, 159900)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n-        assert_raises_rpc_error(-4, 'Cannot upgrade a non HD split wallet without upgrading to support pre split keypool', wallet.upgradewallet, 169899)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n+        for version in [139900, 159900, 169899]:\n+            self.test_upgradewallet_error(wallet, previous_version=130000, requested_version=version,\n+                msg=\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.\")\n \n         self.log.info('Upgrade HD to HD chain split')\n-        wallet.upgradewallet(169900)\n-        assert_equal(169900, wallet.getwalletinfo()['walletversion'])\n+        self.test_upgradewallet(wallet, previous_version=130000, requested_version=169900)\n         # Check that the hdchain updated correctly\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         hd_chain = new_kvs[b'\\x07hdchain']\n@@ -271,8 +279,7 @@ def copy_split_hd():\n \n         self.log.info('Upgrade non-HD to HD chain split')\n         copy_non_hd()\n-        wallet.upgradewallet(169900)\n-        assert_equal(169900, wallet.getwalletinfo()['walletversion'])\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=169900)\n         # Check that the hdchain updated correctly\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         hd_chain = new_kvs[b'\\x07hdchain']\n@@ -333,14 +340,15 @@ def copy_split_hd():\n         # Check the wallet has a default key initially\n         old_kvs = dump_bdb_kv(node_master_wallet)\n         defaultkey = old_kvs[b'\\x0adefaultkey']\n-        # Upgrade the wallet. Should still have the same default key\n-        wallet.upgradewallet(159900)\n+        self.log.info(\"Upgrade the wallet. Should still have the same default key.\")\n+        self.test_upgradewallet(wallet, previous_version=139900, requested_version=159900)\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         up_defaultkey = new_kvs[b'\\x0adefaultkey']\n         assert_equal(defaultkey, up_defaultkey)\n         # 0.16.3 doesn't have a default key\n         v16_3_kvs = dump_bdb_kv(v16_3_wallet)\n         assert b'\\x0adefaultkey' not in v16_3_kvs\n \n+\n if __name__ == '__main__':\n     UpgradeWalletTest().main()"
      }
    ]
  },
  {
    "sha": "01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWI2NDdiMWEyMGJiZjFkZTJmNWY0NjI0YzM0YjU1NGFkMzc5MGYy",
    "commit": {
      "author": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2020-11-23T22:31:13Z"
      },
      "committer": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2020-11-26T08:38:44Z"
      },
      "message": "build: Avoid secp256k1.h include from system\n\nGitHub-Pull: #20469\nRebase-From: e95aaefe2540cb76969818fcc2ff77d33448ed5a",
      "tree": {
        "sha": "31957b31cd629b37529c6963a1f8cc240fdd55b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31957b31cd629b37529c6963a1f8cc240fdd55b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b647b1a20bbf1de2f5f4624c34b554ad3790f2/comments",
    "author": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c26cb34549d22961c61c6135ddf55f09f4d26806",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b647b1a20bbf1de2f5f4624c34b554ad3790f2/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b647b1a20bbf1de2f5f4624c34b554ad3790f2/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
        "patch": "@@ -20,9 +20,8 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) -I$(srcdir)/secp256k1/include $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n \n-BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n \n LIBBITCOIN_SERVER=libbitcoin_server.a"
      }
    ]
  },
  {
    "sha": "54e1edcc2bca76f783170768e65bf0850b036b81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGUxZWRjYzJiY2E3NmY3ODMxNzA3NjhlNjViZjA4NTBiMDM2Yjgx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T17:38:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-26T18:31:26Z"
      },
      "message": "Allow zero-fee fundrawtxn and walletcreatefundedpsbt calls\n\nA check to raise an error on zero-fee txns was mistakenly extended in commit\na0d4957 from the bumpfee and send{toaddress, many} RPCs to also include\nfundrawtransaction and walletcreatefundedpsbt.\n\nThis commit overrides zero fee rate checking for these two RPCs, not only for\nthe feeRate (BTC/kvB) arg to return to previous behavior, but also for the new\nfee_rate (sat/vB) arg.\n\nGithub-Pull: #20426\nRebased-From: 1b3d7009280595108eb22ac1188bc43678",
      "tree": {
        "sha": "a2d17d01f56aeb73309c912c181db4f3359e3166",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2d17d01f56aeb73309c912c181db4f3359e3166"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54e1edcc2bca76f783170768e65bf0850b036b81",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+/9KEACgkQT1chs9Dj\nkh14ZA//THOZCeWvy41y/r2x0Pf/77P9q9G99dscLs+uZ782gVt3AvZ4ch9J+IK+\nEd8Y7Tgeg05Y5rjvAXU/+p+0w17A4PYaIp5vXjMQOOICHid63jK1q5JmrN/p8xJL\niJv/WJwpjFZ97PiL53TLuKiiGu0Yv62kLIY9rRgJQdJCdqI02hFondBkYv7t6seN\nNkEo8mNq5+pHGqKhM4eU2eDt2jT4acNrih3jxNOzNjZ4W8jrvfdOdC+00ocaWiPo\n2K4eqL2VwPF/8T7F0gigeSaZE1+qWQs7jcBHnXSa3Q0az18EqSqQNfLfia+NuVMR\n4EcezwwXBRQNDJ9plYM1Rr0XtVQE8VKcrFKbRBdTVVZd/qZcNpJDbRQq4epUbmlE\nKabqRGahjgBCE4pd+xbS0W26oZ716YIXvs7wHrhF+Mp37VtnIKvh1u4sb967AF01\n8OrLyoveCwLScaIglFEtiE36UpGwlcvNE87j8QE5gdYbh8TssyTpJWfvd8Q1fkHt\nEx01kRlxCM6IfVFGZLb4h2IGQybL2yb1KfksXZm5+OwfvS6M1L5A5msutsJHw4hP\nindtmeLeEHqXJCccOYL082Dz1O8/d6aDKlal9Eika5Zw37nUEsu0RsmTn/0OsZrN\nexpK33aTw1rejnoSrx33FG5z5db3ZgVMc18SnZ0BbErt937E5jA=\n=9H2h\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJD/gySvCAQSIsnxlsuEXkPmAqK4hghes3GvvIJKLu+GCP/wECNpQvNZVCLE\nCaRDIFEKLo0I8QRfv/Sj8AgqHAx9ajxLPwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQRFoIuJcP+tvNsbkB\nwbrfIwjxBF+/9KPwCMdaH4pPAL28AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQ4Be6x69DceRM9UIfHCWJyAjx\nBF+/9KfwCKO4BwBpvvPNAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BDzUczxm5TzhQVg8O31YSeCCPEEX7/0o/AIKCbD\nDiwLABEAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a2d17d01f56aeb73309c912c181db4f3359e3166\nparent 9facca3ce0ad3c325676f9c9f0e6ed4429f0c335\nauthor Jon Atack <jon@atack.com> 1605807480 +0100\ncommitter Jon Atack <jon@atack.com> 1606415486 +0100\n\nAllow zero-fee fundrawtxn and walletcreatefundedpsbt calls\n\nA check to raise an error on zero-fee txns was mistakenly extended in commit\na0d4957 from the bumpfee and send{toaddress, many} RPCs to also include\nfundrawtransaction and walletcreatefundedpsbt.\n\nThis commit overrides zero fee rate checking for these two RPCs, not only for\nthe feeRate (BTC/kvB) arg to return to previous behavior, but also for the new\nfee_rate (sat/vB) arg.\n\nGithub-Pull: #20426\nRebased-From: 1b3d7009280595108eb22ac1188bc43678\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e1edcc2bca76f783170768e65bf0850b036b81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54e1edcc2bca76f783170768e65bf0850b036b81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e1edcc2bca76f783170768e65bf0850b036b81/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 27,
      "deletions": 28
    },
    "files": [
      {
        "sha": "428531c3dad770076a399c0ba30294cff55d3526",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -217,14 +217,8 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        CFeeRate fee_rate_in_sat_vb{CFeeRate(AmountFromValue(fee_rate), COIN)};\n-        if (override_min_fee) {\n-            if (fee_rate_in_sat_vb <= CFeeRate(0)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid fee_rate %s (must be greater than 0)\", fee_rate_in_sat_vb.ToString(FeeEstimateMode::SAT_VB)));\n-            }\n-            cc.fOverrideFeeRate = true;\n-        }\n-        cc.m_feerate = fee_rate_in_sat_vb;\n+        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        if (override_min_fee) cc.fOverrideFeeRate = true;\n         // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n         return;\n@@ -3148,11 +3142,7 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n-            if (fee_rate <= CFeeRate(0)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid feeRate %s (must be greater than 0)\", fee_rate.ToString(FeeEstimateMode::BTC_KVB)));\n-            }\n-            coinControl.m_feerate = fee_rate;\n+            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             coinControl.fOverrideFeeRate = true;\n         }\n "
      },
      {
        "sha": "8ee0ecab0acad273b4537cf1690f0edc0bd3516e",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -721,11 +721,17 @@ def test_option_feerate(self):\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n         result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n+        # Test that funding non-standard \"zero-fee\" transactions is valid.\n+        result5 = self.nodes[3].fundrawtransaction(rawtx, {\"fee_rate\": 0})\n+        result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})\n+\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n         assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n         assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result5['fee'], count_bytes(result5['hex']), 0)\n+        assert_fee_amount(result6['fee'], count_bytes(result6['hex']), 0)\n \n         # With no arguments passed, expect fee of 141 satoshis.\n         assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n@@ -752,19 +758,15 @@ def test_option_feerate(self):\n                     node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n, \"add_inputs\": True})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.000 sat/vB (must be greater than 0)\",\n-            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n-        assert_raises_rpc_error(-8, \"Invalid feeRate 0.00000000 BTC/kvB (must be greater than 0)\",\n-            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.000)}:\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n                 node.fundrawtransaction, rawtx, {param: value, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount out of range\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": -1, \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": {\"foo\": \"bar\"}, \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": \"\", \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n \n         self.log.info(\"Test min fee rate checks are bypassed with fundrawtxn, e.g. a fee_rate under 1 sat/vB is allowed\")\n         node.fundrawtransaction(rawtx, {\"fee_rate\": 0.99999999, \"add_inputs\": True})"
      },
      {
        "sha": "5840801b009262daf918a7a28eff9a31359cc3b6",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -192,26 +192,27 @@ def run_test(self):\n         assert_approx(res1[\"fee\"], 0.055, 0.005)\n         res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res2[\"fee\"], 0.055, 0.005)\n+\n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed, e.g. a fee_rate under 1 sat/vB is allowed\")\n         res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 0.99999999, \"add_inputs\": True})\n         assert_approx(res3[\"fee\"], 0.00000381, 0.0000001)\n         res4 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)\n \n+        self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed and that funding non-standard 'zero-fee' transactions is valid\")\n+        for param in [\"fee_rate\", \"feeRate\"]:\n+            assert_equal(self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {param: 0, \"add_inputs\": True})[\"fee\"], 0)\n+\n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.000 sat/vB (must be greater than 0)\",\n-            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": 0, \"add_inputs\": True})\n-        assert_raises_rpc_error(-8, \"Invalid feeRate 0.00000000 BTC/kvB (must be greater than 0)\",\n-            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"feeRate\": 0, \"add_inputs\": True})\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1)}:\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n                 self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: value, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount out of range\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": -1, \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": {\"foo\": \"bar\"}, \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": \"\", \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: \"\", \"add_inputs\": True})\n \n         self.log.info(\"- raises RPC error if both feeRate and fee_rate are passed\")\n         assert_raises_rpc_error(-8, \"Cannot specify both fee_rate (sat/vB) and feeRate (BTC/kvB)\","
      },
      {
        "sha": "192e9065e6699395339cc74ddfc610cb54885281",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -302,10 +302,16 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum.\n+        # Test setting explicit fee rate just below the minimum and at zero.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n             expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n+            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n+            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n+            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n \n         # TODO: Return hex if fee rate is below -maxmempool\n         # res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\", add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTQ5NjlmNzZmNTg1MThkNDdjZTJmMmNkZmM0ZTNlZjFmMjIyOGJk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T17:47:24Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-26T18:32:06Z"
      },
      "message": "Update feeRate (BTC/kvB) to fee_rate (sat/vB) in wallet_bumpfee\n\nas the feeRate argument should soon be deprecated.\n\nAlso loosen one test (and a similar one) that caused a one-off CI failure with:\nexpected message\n'Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)'\nactual message\n'Insufficient total fee 0.00000141, must be at least 0.00001712 (oldFee 0.00001007 + incrementalFee 0.00000705)'\n\nGithub-Pull: #20426\nRebased-From: 3f1e10b2b1cd11f7112fbad6355464bd4adbbc5c",
      "tree": {
        "sha": "8f494a57a3994e4ba933f9c3ec00031083a47d31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f494a57a3994e4ba933f9c3ec00031083a47d31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+/9LkACgkQT1chs9Dj\nkh3pXg//R1PGmKEx6hx7+arGOG9DmJtMScT4s4PwIK9Nnv0B1wQ1korqY+QyYw2n\nrG+vBLm+s01wJM0gjMeapyumBH9LxnZ1ahvNuRzLPpF7SrtVwJgNRHU6kLn6cvC8\nsKxELOWwCEnRICYhDTeJSqpizxvU3ZZelJnMavUa0VQC3mUFPhjrpib2COxb1eez\n2n8BaigRxpa9auwMu08DGz4iBe3ha6AiuQ7QJAZL2mHxpPsrkpwrOJogBWzdtKLz\n8bse/8+g2kj2Sd3CoDrWLRBY/JQsFsRTtYChvSwDGZ6ZKqSgmtqOBn+FuUbUfyM/\n/F2URrTbIyNO+SdFoPLCRcG6GdmmvU6tdSrClHufq+vNGnwppyHV4M/zJnLZP3xz\nun0C/qUIx54kuGFW3d1L2dTUfcR7K18RdaosYcqKZK9ujuSvK/MaZwo8+b1yaGcJ\nKVFBNvPwnjrbeMDSnFIlc4k3qrLsaKLNlVj5WRcOeaeIwX2Q4RWsQJvP7p0+3uDO\nJanTJiKHAjyqB+3DahnyIs+Os7U5dTfek7DaQJm56B665HePnr5u5baFuLJPjphs\nZLb7BtDIFFt9a4735nHT4SiN64paQ6SZRedLbbD+fg6XJ9y8sIT3RYmYEiJKN11B\nbg2lTnuI0rpRpZkt0dyseJy3TcIjFaaD0K6k+hnSRJ/EAszPfNE=\n=hljK\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIBZ8Groh2jr8hKSPYMsEsEvNJU+73Ws+3JqwIjo432nCP/wEDcWfEa71GSS\n5WirNnLuoj0I8QRfv/S68Agok/EyVgxxcACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIqW7DdfD9WhgbaMRoZV\nD80I8QRfv/S+8AguYYjmY3SKvwCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEKCwzE51Bqv2Gm2/XG/cmg4I8QRfv/S6\n8AgdJgIebddHYwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDYBjSaELx97FZ10/1GQVCsCPEEX7/0u/AI8UWu\n9NGYzO0Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8f494a57a3994e4ba933f9c3ec00031083a47d31\nparent 54e1edcc2bca76f783170768e65bf0850b036b81\nauthor Jon Atack <jon@atack.com> 1605808044 +0100\ncommitter Jon Atack <jon@atack.com> 1606415526 +0100\n\nUpdate feeRate (BTC/kvB) to fee_rate (sat/vB) in wallet_bumpfee\n\nas the feeRate argument should soon be deprecated.\n\nAlso loosen one test (and a similar one) that caused a one-off CI failure with:\nexpected message\n'Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)'\nactual message\n'Insufficient total fee 0.00000141, must be at least 0.00001712 (oldFee 0.00001007 + incrementalFee 0.00000705)'\n\nGithub-Pull: #20426\nRebased-From: 3f1e10b2b1cd11f7112fbad6355464bd4adbbc5c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54e1edcc2bca76f783170768e65bf0850b036b81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e1edcc2bca76f783170768e65bf0850b036b81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54e1edcc2bca76f783170768e65bf0850b036b81"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "99c97372583bff9d5a5025d91d37ac1582a573fe",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
        "patch": "@@ -107,12 +107,10 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n             assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n         # Bumping to just above minrelay should fail to increase the total fee enough.\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n-            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n-            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n         assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",\n             rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n@@ -421,7 +419,7 @@ def test_watchonly_psbt(self, peer_node, rbf_node, dest_address):\n     self.sync_all()\n \n     # Create single-input PSBT for transaction to be bumped\n-    psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"feeRate\": 0.00001}, True)['psbt']\n+    psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"fee_rate\": 1}, True)['psbt']\n     psbt_signed = signer.walletprocesspsbt(psbt=psbt, sign=True, sighashtype=\"ALL\", bip32derivs=True)\n     psbt_final = watcher.finalizepsbt(psbt_signed[\"psbt\"])\n     original_txid = watcher.sendrawtransaction(psbt_final[\"hex\"])"
      }
    ]
  },
  {
    "sha": "6313362553d91bddb75a43f62dffbec16065e4d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzEzMzYyNTUzZDkxYmRkYjc1YTQzZjYyZGZmYmVjMTYwNjVlNGQ2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T16:31:07Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-26T18:32:30Z"
      },
      "message": "Use the correct incremental fee constant in bumpfee help\n\nand remove redundant units (\"Must be at least 1.000 sat/vB sat/vB\" -> \"1.00 sat vB\")\n\nGithub-Pull: #20426\nRebased-From: 9f08780dd7946b63476e9736745131db8e7f4e93",
      "tree": {
        "sha": "4c982e985d001274a1df1b4696b2228b93e93d99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c982e985d001274a1df1b4696b2228b93e93d99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6313362553d91bddb75a43f62dffbec16065e4d6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+/9NYACgkQT1chs9Dj\nkh1ugw/+M5b+wP2QXqh3JYf/YPEo4ircL5A1sOhjoxZQGc55NwBFZAtgBzReIHVM\n+qEVELK/GrskgzI2W9gA2phRjCBVr6pEYL7IZRPYWOjUeGzmR6+/mQvS7TLEb7cF\nQ/JawWxRLsK0HsLWcUO2MbcorZkAMV1DbSGKQVdMhyfUZEr1tE9kSfIkZTTDN/li\nrcxjh3i/tToHyBYQ7bFkYb8DBrJNxjkyrvvq2aT3MYBaf/PWdnozyw7OloQh5m9Z\nS3CHRkT6mNrQ6CQm5fGvguzeHLCCvRd5oQ80F4yPZn00GAAAh1nI97gdf+jZs9eF\n0j2oAqvAF4tIRBtXsNQTHopzmZYlXk33ZucjrpIySQ3s3HUke3VXN3+z6k9IyxYS\nuvYjIWQiVOCNsRn0g1bHQNmD1Mj9+0kJvAUXfRj/K7WvTarbDPLXoalr3Gd477sC\n4ohsd89rf7AInydPzlJ7ykQJc8HWDr8AVdkIVaWFB4/6g92zaiPSaxUFtWH/tmrm\nQHadjuxppD4tWmHToAYRM29Yw5qpK89xQXS5+YhWsNGAp5I0Os/LTZC7K8rsopMX\nSeHh1e0F8cmgwhOE/zJsxkyrG4+SAzaEEupTV7+IKvTCBUf5hiOMWeAe/ntZDorD\nw5FPJC9v+DgyPYEanFnSDha43pfZ+EkTQW4SXEX8rS2uBxr9DII=\n=IpFK\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICCkAC3Vkcse/Oy8S8yq4DxeBr7BKwFiX37IDPP/8CCUCP/wECvX08YyBpsk\nZ0B0XG0HX4UI8QRfv/TY8AjvR3UeMm/euwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQVUpWH+O6d1iApjId\n4d2tCgjxBF+/9NvwCAb8V66RxV+pAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQnIaNOa+dumtcl5NOx8RUTAjxBF+/\n9NjwCH7UwPklKqRuAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDkEEITRAYmsophFjyGYG/XCPEEX7/02PAIUzWG\nY5IW9koAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4c982e985d001274a1df1b4696b2228b93e93d99\nparent 6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd\nauthor Jon Atack <jon@atack.com> 1605803467 +0100\ncommitter Jon Atack <jon@atack.com> 1606415550 +0100\n\nUse the correct incremental fee constant in bumpfee help\n\nand remove redundant units (\"Must be at least 1.000 sat/vB sat/vB\" -> \"1.00 sat vB\")\n\nGithub-Pull: #20426\nRebased-From: 9f08780dd7946b63476e9736745131db8e7f4e93\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6313362553d91bddb75a43f62dffbec16065e4d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6313362553d91bddb75a43f62dffbec16065e4d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6313362553d91bddb75a43f62dffbec16065e4d6/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9ba10e6c390dbe625850aefff3473e40f70c687d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6313362553d91bddb75a43f62dffbec16065e4d6/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6313362553d91bddb75a43f62dffbec16065e4d6/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6313362553d91bddb75a43f62dffbec16065e4d6",
        "patch": "@@ -29,7 +29,6 @@\n #include <util/translation.h>\n #include <util/url.h>\n #include <util/vector.h>\n-#include <validation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/context.h>\n #include <wallet/feebumper.h>\n@@ -3381,7 +3380,7 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n-    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};\n+    const std::string incremental_fee{CFeeRate(DEFAULT_INCREMENTAL_RELAY_FEE).ToString(FeeEstimateMode::SAT_VB)};\n \n     return RPCHelpMan{method_name,\n         \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n@@ -3404,7 +3403,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                     {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target in blocks\\n\"},\n                     {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\",\n                              \"\\nSpecify a fee rate in \" + CURRENCY_ATOM + \"/vB instead of relying on the built-in fee estimator.\\n\"\n-                             \"Must be at least \" + incremental_fee + \" \" + CURRENCY_ATOM + \"/vB higher than the current transaction fee rate.\\n\"\n+                             \"Must be at least \" + incremental_fee + \" higher than the current transaction fee rate.\\n\"\n                              \"WARNING: before version 0.21, fee_rate was in \" + CURRENCY_UNIT + \"/kvB. As of 0.21, fee_rate is in \" + CURRENCY_ATOM + \"/vB.\\n\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether the new transaction should still be\\n\"\n                              \"marked bip-125 replaceable. If true, the sequence numbers in the transaction will\\n\""
      }
    ]
  },
  {
    "sha": "68bd88597a79eea5e329e2f1ebcd54df2da29a45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGJkODg1OTdhNzllZWE1ZTMyOWUyZjFlYmNkNTRkZjJkYTI5YTQ1",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-02T01:20:28Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-02T02:11:37Z"
      },
      "message": "Merge #20505: [backport] build: Avoid secp256k1.h include from system\n\n01b647b1a20bbf1de2f5f4624c34b554ad3790f2 build: Avoid secp256k1.h include from system (Niklas G\u00f6gge)\n\nPull request description:\n\n  Backports #20469 to the 0.21 branch.\n\nACKs for top commit:\n  hebasto:\n    ACK 01b647b1a20bbf1de2f5f4624c34b554ad3790f2, I have reviewed the code and it looks OK, I agree it can be merged.\n\nTree-SHA512: c098055b5e413be6f438d1d43e80c1943329ebb708531d8d82e72de402bddeb6f8b812303f9ae5a45abf62b3ff87fa909fbbf7fb56dca7959ecb9061febae4a1",
      "tree": {
        "sha": "31957b31cd629b37529c6963a1f8cc240fdd55b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31957b31cd629b37529c6963a1f8cc240fdd55b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68bd88597a79eea5e329e2f1ebcd54df2da29a45",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl/G99kACgkQLuufXMCV\nJsHq2g/+P1TnVxO80T7hgKctU8AqChydkd3+8VYghrn76fEiZQ88mxAY9tZvvL9F\nmBDqpBkZJtQbWaZ2rjgatbMyxytidjkliFDob8CuFjbcDsku9OVBxw6cN2ty8fpC\nxHRIfSTlpLv/I/L9m0YaVMjGiKlBJgsaqap0abCnjqP+QCOvNj1DHqzFwCbRpovc\nLR6u7RN0nevqphmgXdn3MshrrfhgLFEo6nAfMyFIrpTVQ7F2VassnGbXSQMZL3tQ\n9xmnfPuxGWacBXr1tOWIOfuveeVttcG0kcgM35U3GPGSr+NOaqOmjG8C9e6e9XF4\nkvp2LwaMGhNkzHCF8tq57r4djbvVMMnxMT6MC1P1DPG7BEE30lvzcwmf7ha5ZAAB\nEqoygu7SUD+eaqYR80BZGYt0/E2u3aqePtV26V6FiUFiOWSY5H2/0V2r7lKLXSZ3\novyUUGqic53YpdZXwGEWno6lCwQ0eWoab1awCRtcQY+k8BUigASThQ+F/37RBT9u\nnqBMl8AtXbwwmCt/rpqfFAMAYqB0HBkczS+12MaBJH5yXPYn0xgMiRJRqzPrmnFY\nDGQNYNrUU1qFFyXZy89HhV00KeJZKKxCDW1E5/1x/ftqJXi6P147j+NMmXv+q2sd\nCN9teqrS14XQ2zGwiutYOcfgVBeKUybqZTHP1j1WH1Z2Fbpxp9E=\n=LZOW\n-----END PGP SIGNATURE-----",
        "payload": "tree 31957b31cd629b37529c6963a1f8cc240fdd55b9\nparent 9facca3ce0ad3c325676f9c9f0e6ed4429f0c335\nparent 01b647b1a20bbf1de2f5f4624c34b554ad3790f2\nauthor fanquake <fanquake@gmail.com> 1606872028 +0800\ncommitter fanquake <fanquake@gmail.com> 1606875097 +0800\n\nMerge #20505: [backport] build: Avoid secp256k1.h include from system\n\n01b647b1a20bbf1de2f5f4624c34b554ad3790f2 build: Avoid secp256k1.h include from system (Niklas G\u00f6gge)\n\nPull request description:\n\n  Backports #20469 to the 0.21 branch.\n\nACKs for top commit:\n  hebasto:\n    ACK 01b647b1a20bbf1de2f5f4624c34b554ad3790f2, I have reviewed the code and it looks OK, I agree it can be merged.\n\nTree-SHA512: c098055b5e413be6f438d1d43e80c1943329ebb708531d8d82e72de402bddeb6f8b812303f9ae5a45abf62b3ff87fa909fbbf7fb56dca7959ecb9061febae4a1\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68bd88597a79eea5e329e2f1ebcd54df2da29a45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68bd88597a79eea5e329e2f1ebcd54df2da29a45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68bd88597a79eea5e329e2f1ebcd54df2da29a45/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335"
      },
      {
        "sha": "01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b647b1a20bbf1de2f5f4624c34b554ad3790f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01b647b1a20bbf1de2f5f4624c34b554ad3790f2"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c26cb34549d22961c61c6135ddf55f09f4d26806",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68bd88597a79eea5e329e2f1ebcd54df2da29a45/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68bd88597a79eea5e329e2f1ebcd54df2da29a45/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=68bd88597a79eea5e329e2f1ebcd54df2da29a45",
        "patch": "@@ -20,9 +20,8 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) -I$(srcdir)/secp256k1/include $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n \n-BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n \n LIBBITCOIN_SERVER=libbitcoin_server.a"
      }
    ]
  },
  {
    "sha": "aa4b8ebfecddc7795200904009fea84b2c644141",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTRiOGViZmVjZGRjNzc5NTIwMDkwNDAwOWZlYTg0YjJjNjQ0MTQx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-04T17:13:48Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-04T17:14:15Z"
      },
      "message": "Merge #20510: [backport] wallet: allow zero-fee fundrawtransaction/walletcreatefundedpsbt and other fixes\n\n6313362553d91bddb75a43f62dffbec16065e4d6 Use the correct incremental fee constant in bumpfee help (Jon Atack)\n6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd Update feeRate (BTC/kvB) to fee_rate (sat/vB) in wallet_bumpfee (Jon Atack)\n54e1edcc2bca76f783170768e65bf0850b036b81 Allow zero-fee fundrawtxn and walletcreatefundedpsbt calls (Jon Atack)\n\nPull request description:\n\n  Github-Pull: #20426\n  Rebased-From: 1b3d7009280595108eb22ac1188bc4367804fc5d\n\n  Github-Pull: #20426\n  Rebased-From: 3f1e10b2b1cd11f7112fbad6355464bd4adbbc5c\n\n  Github-Pull: #20426\n  Rebased-From: 9f08780dd7946b63476e9736745131db8e7f4e93\n\nTop commit has no ACKs.\n\nTree-SHA512: 89556f69ca4a36d86d6ab5df740b6d5de809f13d45b03450fb526362b1eabd3d2d5285f97c552dc0bcb07e17ac2e6c557ff46335962e6bcf366d36ad412f257c",
      "tree": {
        "sha": "887a8343ab0575a1a63cba28d60d56c65f19f6ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/887a8343ab0575a1a63cba28d60d56c65f19f6ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa4b8ebfecddc7795200904009fea84b2c644141",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl/KbmcACgkQ0upIUOdS\niyVG3xAArvrTC694se6GE0WNwEUrWvXj2nKFPPbtpB8SFLHIV5TUVxols9cDnfhp\nsmmnlqpQ4rbbrHVVddAQ6B3XVm/WWMEUFt+O5OjJpqJZUVQG8GRjEls4a22LyAuC\nyHJW5Rfn5muN9eGm1kFVyj+47XGbchNCQSou+0niCuA77lnj1jB3KHT3eUgN/S3F\nRNELsFm5k3hPpCJuinxPb7fY8m8UwV+3ksri4Q1ffFS40BIz2FwfOu30RhUp1yvq\n37xBcx+/GwlyinmXXnPZ9+XTim74hCCYTmROHNY7PRnbaA+S/7ymtUk6XuyVcz3i\npL2HD2ouz4y3zwkgkbPSBogSWPPumGc1w7uqEmm5jVgMxyF1Ko+h75YEUbBAybkT\nbVlSzbCoj/dSfAvdPKldpr7cKB/0E2f7AvDwfDI4XHu7aEIt8eH155BbgTunNu1q\nRc7osCukTI5koANIK5ctL8ZBzm3p3xxNUNa+kQxzr6o9Kg7Jr/6DwmIvLsMxSRMa\ngm/DJKw03q0mAmxEAzHksAMz0Ei+SZbSYtMGhZjXUa3vkiEKIUQmTveDPCNSKU+J\nPNlfdg0TXseeYnPN8NYuH4oaZrptO6nabyUGZoFp/w8jINfb5oMfnaJkP2TnNOQA\nSrtO0Yz9N0Y/hCwYooiIsjueIX+zfvtW3VO8XPPQmg4a2kikE5Q=\n=q9gO\n-----END PGP SIGNATURE-----",
        "payload": "tree 887a8343ab0575a1a63cba28d60d56c65f19f6ae\nparent 68bd88597a79eea5e329e2f1ebcd54df2da29a45\nparent 6313362553d91bddb75a43f62dffbec16065e4d6\nauthor MarcoFalke <falke.marco@gmail.com> 1607102028 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1607102055 +0100\n\nMerge #20510: [backport] wallet: allow zero-fee fundrawtransaction/walletcreatefundedpsbt and other fixes\n\n6313362553d91bddb75a43f62dffbec16065e4d6 Use the correct incremental fee constant in bumpfee help (Jon Atack)\n6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd Update feeRate (BTC/kvB) to fee_rate (sat/vB) in wallet_bumpfee (Jon Atack)\n54e1edcc2bca76f783170768e65bf0850b036b81 Allow zero-fee fundrawtxn and walletcreatefundedpsbt calls (Jon Atack)\n\nPull request description:\n\n  Github-Pull: #20426\n  Rebased-From: 1b3d7009280595108eb22ac1188bc4367804fc5d\n\n  Github-Pull: #20426\n  Rebased-From: 3f1e10b2b1cd11f7112fbad6355464bd4adbbc5c\n\n  Github-Pull: #20426\n  Rebased-From: 9f08780dd7946b63476e9736745131db8e7f4e93\n\nTop commit has no ACKs.\n\nTree-SHA512: 89556f69ca4a36d86d6ab5df740b6d5de809f13d45b03450fb526362b1eabd3d2d5285f97c552dc0bcb07e17ac2e6c557ff46335962e6bcf366d36ad412f257c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa4b8ebfecddc7795200904009fea84b2c644141",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa4b8ebfecddc7795200904009fea84b2c644141",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa4b8ebfecddc7795200904009fea84b2c644141/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68bd88597a79eea5e329e2f1ebcd54df2da29a45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68bd88597a79eea5e329e2f1ebcd54df2da29a45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68bd88597a79eea5e329e2f1ebcd54df2da29a45"
      },
      {
        "sha": "6313362553d91bddb75a43f62dffbec16065e4d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6313362553d91bddb75a43f62dffbec16065e4d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6313362553d91bddb75a43f62dffbec16065e4d6"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 32,
      "deletions": 36
    },
    "files": [
      {
        "sha": "9ba10e6c390dbe625850aefff3473e40f70c687d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 16,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa4b8ebfecddc7795200904009fea84b2c644141/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa4b8ebfecddc7795200904009fea84b2c644141/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=aa4b8ebfecddc7795200904009fea84b2c644141",
        "patch": "@@ -29,7 +29,6 @@\n #include <util/translation.h>\n #include <util/url.h>\n #include <util/vector.h>\n-#include <validation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/context.h>\n #include <wallet/feebumper.h>\n@@ -217,14 +216,8 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        CFeeRate fee_rate_in_sat_vb{CFeeRate(AmountFromValue(fee_rate), COIN)};\n-        if (override_min_fee) {\n-            if (fee_rate_in_sat_vb <= CFeeRate(0)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid fee_rate %s (must be greater than 0)\", fee_rate_in_sat_vb.ToString(FeeEstimateMode::SAT_VB)));\n-            }\n-            cc.fOverrideFeeRate = true;\n-        }\n-        cc.m_feerate = fee_rate_in_sat_vb;\n+        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        if (override_min_fee) cc.fOverrideFeeRate = true;\n         // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n         return;\n@@ -3148,11 +3141,7 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n-            if (fee_rate <= CFeeRate(0)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid feeRate %s (must be greater than 0)\", fee_rate.ToString(FeeEstimateMode::BTC_KVB)));\n-            }\n-            coinControl.m_feerate = fee_rate;\n+            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             coinControl.fOverrideFeeRate = true;\n         }\n \n@@ -3391,7 +3380,7 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n-    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};\n+    const std::string incremental_fee{CFeeRate(DEFAULT_INCREMENTAL_RELAY_FEE).ToString(FeeEstimateMode::SAT_VB)};\n \n     return RPCHelpMan{method_name,\n         \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n@@ -3414,7 +3403,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                     {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target in blocks\\n\"},\n                     {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\",\n                              \"\\nSpecify a fee rate in \" + CURRENCY_ATOM + \"/vB instead of relying on the built-in fee estimator.\\n\"\n-                             \"Must be at least \" + incremental_fee + \" \" + CURRENCY_ATOM + \"/vB higher than the current transaction fee rate.\\n\"\n+                             \"Must be at least \" + incremental_fee + \" higher than the current transaction fee rate.\\n\"\n                              \"WARNING: before version 0.21, fee_rate was in \" + CURRENCY_UNIT + \"/kvB. As of 0.21, fee_rate is in \" + CURRENCY_ATOM + \"/vB.\\n\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether the new transaction should still be\\n\"\n                              \"marked bip-125 replaceable. If true, the sequence numbers in the transaction will\\n\""
      },
      {
        "sha": "8ee0ecab0acad273b4537cf1690f0edc0bd3516e",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=aa4b8ebfecddc7795200904009fea84b2c644141",
        "patch": "@@ -721,11 +721,17 @@ def test_option_feerate(self):\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n         result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n+        # Test that funding non-standard \"zero-fee\" transactions is valid.\n+        result5 = self.nodes[3].fundrawtransaction(rawtx, {\"fee_rate\": 0})\n+        result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})\n+\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n         assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n         assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result5['fee'], count_bytes(result5['hex']), 0)\n+        assert_fee_amount(result6['fee'], count_bytes(result6['hex']), 0)\n \n         # With no arguments passed, expect fee of 141 satoshis.\n         assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n@@ -752,19 +758,15 @@ def test_option_feerate(self):\n                     node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n, \"add_inputs\": True})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.000 sat/vB (must be greater than 0)\",\n-            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n-        assert_raises_rpc_error(-8, \"Invalid feeRate 0.00000000 BTC/kvB (must be greater than 0)\",\n-            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.000)}:\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n                 node.fundrawtransaction, rawtx, {param: value, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount out of range\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": -1, \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": {\"foo\": \"bar\"}, \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": \"\", \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n \n         self.log.info(\"Test min fee rate checks are bypassed with fundrawtxn, e.g. a fee_rate under 1 sat/vB is allowed\")\n         node.fundrawtransaction(rawtx, {\"fee_rate\": 0.99999999, \"add_inputs\": True})"
      },
      {
        "sha": "5840801b009262daf918a7a28eff9a31359cc3b6",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=aa4b8ebfecddc7795200904009fea84b2c644141",
        "patch": "@@ -192,26 +192,27 @@ def run_test(self):\n         assert_approx(res1[\"fee\"], 0.055, 0.005)\n         res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res2[\"fee\"], 0.055, 0.005)\n+\n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed, e.g. a fee_rate under 1 sat/vB is allowed\")\n         res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 0.99999999, \"add_inputs\": True})\n         assert_approx(res3[\"fee\"], 0.00000381, 0.0000001)\n         res4 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)\n \n+        self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed and that funding non-standard 'zero-fee' transactions is valid\")\n+        for param in [\"fee_rate\", \"feeRate\"]:\n+            assert_equal(self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {param: 0, \"add_inputs\": True})[\"fee\"], 0)\n+\n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.000 sat/vB (must be greater than 0)\",\n-            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": 0, \"add_inputs\": True})\n-        assert_raises_rpc_error(-8, \"Invalid feeRate 0.00000000 BTC/kvB (must be greater than 0)\",\n-            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"feeRate\": 0, \"add_inputs\": True})\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1)}:\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n                 self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: value, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount out of range\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": -1, \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": {\"foo\": \"bar\"}, \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": \"\", \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: \"\", \"add_inputs\": True})\n \n         self.log.info(\"- raises RPC error if both feeRate and fee_rate are passed\")\n         assert_raises_rpc_error(-8, \"Cannot specify both fee_rate (sat/vB) and feeRate (BTC/kvB)\","
      },
      {
        "sha": "99c97372583bff9d5a5025d91d37ac1582a573fe",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=aa4b8ebfecddc7795200904009fea84b2c644141",
        "patch": "@@ -107,12 +107,10 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n             assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n         # Bumping to just above minrelay should fail to increase the total fee enough.\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n-            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n-            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n         assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",\n             rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n@@ -421,7 +419,7 @@ def test_watchonly_psbt(self, peer_node, rbf_node, dest_address):\n     self.sync_all()\n \n     # Create single-input PSBT for transaction to be bumped\n-    psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"feeRate\": 0.00001}, True)['psbt']\n+    psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"fee_rate\": 1}, True)['psbt']\n     psbt_signed = signer.walletprocesspsbt(psbt=psbt, sign=True, sighashtype=\"ALL\", bip32derivs=True)\n     psbt_final = watcher.finalizepsbt(psbt_signed[\"psbt\"])\n     original_txid = watcher.sendrawtransaction(psbt_final[\"hex\"])"
      },
      {
        "sha": "192e9065e6699395339cc74ddfc610cb54885281",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa4b8ebfecddc7795200904009fea84b2c644141/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=aa4b8ebfecddc7795200904009fea84b2c644141",
        "patch": "@@ -302,10 +302,16 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum.\n+        # Test setting explicit fee rate just below the minimum and at zero.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n             expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n+            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n+            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n+            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n \n         # TODO: Return hex if fee rate is below -maxmempool\n         # res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\", add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "9e806887a8f9ef63431b28d7dfd0470aa663dd02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTgwNjg4N2E4ZjllZjYzNDMxYjI4ZDdkZmQwNDcwYWE2NjNkZDAy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-12-03T22:59:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:37:18Z"
      },
      "message": "Don't send 'sendaddrv2' to pre-70016 software\n\nGithub-Pull: #20564\nRebased-From: c5a89196602e43ebb1cdc9cd4f08d153419c13e1",
      "tree": {
        "sha": "2776a3f64923f086d881c4d8f6ab492d03b13423",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2776a3f64923f086d881c4d8f6ab492d03b13423"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e806887a8f9ef63431b28d7dfd0470aa663dd02",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e806887a8f9ef63431b28d7dfd0470aa663dd02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e806887a8f9ef63431b28d7dfd0470aa663dd02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e806887a8f9ef63431b28d7dfd0470aa663dd02/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aa4b8ebfecddc7795200904009fea84b2c644141",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa4b8ebfecddc7795200904009fea84b2c644141",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aa4b8ebfecddc7795200904009fea84b2c644141"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "44f6f5d6b65681e4b5b9e781cca1a7a33a968b67",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e806887a8f9ef63431b28d7dfd0470aa663dd02/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e806887a8f9ef63431b28d7dfd0470aa663dd02/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=9e806887a8f9ef63431b28d7dfd0470aa663dd02",
        "patch": "@@ -2367,7 +2367,13 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\n \n         // Signal ADDRv2 support (BIP155).\n-        m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDADDRV2));\n+        if (greatest_common_version >= 70016) {\n+            // BIP155 defines addrv2 and sendaddrv2 for all protocol versions, but some\n+            // implementations reject messages they don't know. As a courtesy, don't send\n+            // it to nodes with a version before 70016, as no software is known to support\n+            // BIP155 that doesn't announce at least that protocol version number.\n+            m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDADDRV2));\n+        }\n \n         pfrom.nServices = nServices;\n         pfrom.SetAddrLocal(addrMe);"
      }
    ]
  },
  {
    "sha": "bead93547067e4b62b44fba335f1d4697119c2d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWFkOTM1NDcwNjdlNGI2MmI0NGZiYTMzNWYxZDQ2OTcxMTljMmQ3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-12-07T17:12:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:37:22Z"
      },
      "message": "Send and require SENDADDRV2 before VERACK\n\nSee the corresponding BIP change: https://github.com/bitcoin/bips/pull/1043\n\nGithub-Pull: #20564\nRebased-From: 1583498fb6781c01ca2f33c09319ed793964c574",
      "tree": {
        "sha": "4feb1322298a1bc06dee4c96ca3949cb5d1cbcc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4feb1322298a1bc06dee4c96ca3949cb5d1cbcc6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bead93547067e4b62b44fba335f1d4697119c2d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bead93547067e4b62b44fba335f1d4697119c2d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bead93547067e4b62b44fba335f1d4697119c2d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bead93547067e4b62b44fba335f1d4697119c2d7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e806887a8f9ef63431b28d7dfd0470aa663dd02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e806887a8f9ef63431b28d7dfd0470aa663dd02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e806887a8f9ef63431b28d7dfd0470aa663dd02"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "98e3d90c2d1e03497ffce40f6febe059c9732b47",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bead93547067e4b62b44fba335f1d4697119c2d7/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bead93547067e4b62b44fba335f1d4697119c2d7/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=bead93547067e4b62b44fba335f1d4697119c2d7",
        "patch": "@@ -2364,8 +2364,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::WTXIDRELAY));\n         }\n \n-        m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\n-\n         // Signal ADDRv2 support (BIP155).\n         if (greatest_common_version >= 70016) {\n             // BIP155 defines addrv2 and sendaddrv2 for all protocol versions, but some\n@@ -2375,6 +2373,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDADDRV2));\n         }\n \n+        m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\n+\n         pfrom.nServices = nServices;\n         pfrom.SetAddrLocal(addrMe);\n         {\n@@ -2546,6 +2546,17 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::SENDADDRV2) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send SENDADDRV2 message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        pfrom.m_wants_addrv2 = true;\n+        return;\n+    }\n+\n     if (!pfrom.fSuccessfullyConnected) {\n         LogPrint(BCLog::NET, \"Unsupported message \\\"%s\\\" prior to verack from peer=%d\\n\", SanitizeString(msg_type), pfrom.GetId());\n         return;\n@@ -2613,11 +2624,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n-    if (msg_type == NetMsgType::SENDADDRV2) {\n-        pfrom.m_wants_addrv2 = true;\n-        return;\n-    }\n-\n     if (msg_type == NetMsgType::SENDHEADERS) {\n         LOCK(cs_main);\n         State(pfrom.GetId())->fPreferHeaders = true;"
      },
      {
        "sha": "8b79a4dc2ff9198c2dcfbe975f27b843bd96f1fb",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bead93547067e4b62b44fba335f1d4697119c2d7/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bead93547067e4b62b44fba335f1d4697119c2d7/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=bead93547067e4b62b44fba335f1d4697119c2d7",
        "patch": "@@ -396,9 +396,9 @@ def on_version(self, message):\n         assert message.nVersion >= MIN_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_VERSION_SUPPORTED)\n         if message.nVersion >= 70016:\n             self.send_message(msg_wtxidrelay())\n-        self.send_message(msg_verack())\n         if self.support_addrv2:\n             self.send_message(msg_sendaddrv2())\n+        self.send_message(msg_verack())\n         self.nServices = message.nServices\n \n     # Connection helper methods"
      }
    ]
  },
  {
    "sha": "06c84232b310e6196c814894537ad935d773fe98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmM4NDIzMmIzMTBlNjE5NmM4MTQ4OTQ1MzdhZDkzNWQ3NzNmZTk4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-04T10:20:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:37:36Z"
      },
      "message": "wallet, bugfix: allow send to take string fee rate values\n\nGithub-Pull: #20573\nRebased-From: ce207d6b93d35bc02fcd2dd28f1fd95869261d43",
      "tree": {
        "sha": "c19798a13a834a6dd9cd991c544c8e3f910a1e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c19798a13a834a6dd9cd991c544c8e3f910a1e11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06c84232b310e6196c814894537ad935d773fe98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c84232b310e6196c814894537ad935d773fe98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06c84232b310e6196c814894537ad935d773fe98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c84232b310e6196c814894537ad935d773fe98/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bead93547067e4b62b44fba335f1d4697119c2d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bead93547067e4b62b44fba335f1d4697119c2d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bead93547067e4b62b44fba335f1d4697119c2d7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e8c3ae888d0da49d9f25dd5ebcd9510c8ccd9fc9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c84232b310e6196c814894537ad935d773fe98/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c84232b310e6196c814894537ad935d773fe98/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=06c84232b310e6196c814894537ad935d773fe98",
        "patch": "@@ -4083,7 +4083,7 @@ static RPCHelpMan send()\n                 UniValueType(), // outputs (ARR or OBJ, checked later)\n                 UniValue::VNUM, // conf_target\n                 UniValue::VSTR, // estimate_mode\n-                UniValue::VNUM, // fee_rate\n+                UniValueType(), // fee_rate, will be checked by AmountFromValue() in SetFeeEstimateMode()\n                 UniValue::VOBJ, // options\n                 }, true\n             );"
      },
      {
        "sha": "9835c5a2af47d2076911292bc70027168dfa8f7f",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c84232b310e6196c814894537ad935d773fe98/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c84232b310e6196c814894537ad935d773fe98/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=06c84232b310e6196c814894537ad935d773fe98",
        "patch": "@@ -256,8 +256,8 @@ def run_test(self):\n         assert res[\"complete\"]\n \n         self.log.info(\"Test setting explicit fee rate\")\n-        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=1, add_to_wallet=False)\n-        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=1, add_to_wallet=False)\n+        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=\"1\", add_to_wallet=False)\n+        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=\"1\", add_to_wallet=False)\n         assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"], self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n \n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=7, add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDNjMTQwYzRkYjA1MWZiMzNjMjkzNWFkOTUzNmYwZjRhYTJhOGM1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-04T10:22:34Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:37:41Z"
      },
      "message": "test: add coverage for passing fee rate as a string\n\nGithub-Pull: #20573\nRebased-From: 6fa72ceb8021c3b5aea62f6cfe92665c29212923",
      "tree": {
        "sha": "fddf1f05e0bd78801c8b4b93f4d510c39bafef05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fddf1f05e0bd78801c8b4b93f4d510c39bafef05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06c84232b310e6196c814894537ad935d773fe98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c84232b310e6196c814894537ad935d773fe98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06c84232b310e6196c814894537ad935d773fe98"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 32,
      "deletions": 7
    },
    "files": [
      {
        "sha": "569471dc873a11d7510c259e7f4066c20be1ea17",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
        "patch": "@@ -717,10 +717,10 @@ def test_option_feerate(self):\n \n         result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n         btc_kvb_to_sat_vb = 100000  # (1e5)\n-        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 2 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": str(2 * btc_kvb_to_sat_vb * self.min_relay_tx_fee)})\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n-        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": str(10 * self.min_relay_tx_fee)})\n         # Test that funding non-standard \"zero-fee\" transactions is valid.\n         result5 = self.nodes[3].fundrawtransaction(rawtx, {\"fee_rate\": 0})\n         result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})"
      },
      {
        "sha": "b364077a9ae706ec2f7e4662f9e4bec8de8a9edc",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
        "patch": "@@ -190,11 +190,11 @@ def run_test(self):\n         self.log.info(\"Test walletcreatefundedpsbt fee rate of 10000 sat/vB and 0.1 BTC/kvB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res1 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 10000, \"add_inputs\": True})\n         assert_approx(res1[\"fee\"], 0.055, 0.005)\n-        res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": \"0.1\", \"add_inputs\": True})\n         assert_approx(res2[\"fee\"], 0.055, 0.005)\n \n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed, e.g. a fee_rate under 1 sat/vB is allowed\")\n-        res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 0.99999999, \"add_inputs\": True})\n+        res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": \"0.99999999\", \"add_inputs\": True})\n         assert_approx(res3[\"fee\"], 0.00000381, 0.0000001)\n         res4 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)"
      },
      {
        "sha": "3cbddaf6dacd138be4563bfd4b5202d50a20f45b",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 27,
        "deletions": 2,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
        "patch": "@@ -235,7 +235,8 @@ def run_test(self):\n         fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n         explicit_fee_rate_btc_kvb = Decimal(fee_rate_btc_kvb) / 1000\n \n-        txid = self.nodes[2].sendmany(amounts={address: 10}, fee_rate=fee_rate_sat_vb)\n+        # Test passing fee_rate as a string\n+        txid = self.nodes[2].sendmany(amounts={address: 10}, fee_rate=str(fee_rate_sat_vb))\n         self.nodes[2].generate(1)\n         self.sync_all(self.nodes[0:3])\n         balance = self.nodes[2].getbalance()\n@@ -244,6 +245,17 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n+        # Test passing fee_rate as an integer\n+        amount = Decimal(\"0.0001\")\n+        txid = self.nodes[2].sendmany(amounts={address: amount}, fee_rate=fee_rate_sat_vb)\n+        self.nodes[2].generate(1)\n+        self.sync_all(self.nodes[0:3])\n+        balance = self.nodes[2].getbalance()\n+        node_2_bal = self.check_fee_amount(balance, node_2_bal - amount, explicit_fee_rate_btc_kvb, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n+        assert_equal(balance, node_2_bal)\n+        node_0_bal += amount\n+        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n+\n         for key in [\"totalFee\", \"feeRate\"]:\n             assert_raises_rpc_error(-8, \"Unknown named parameter key\", self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=1, key=1)\n \n@@ -405,7 +417,7 @@ def run_test(self):\n             amount = 3\n             fee_rate_sat_vb = 2\n             fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n-\n+            # Test passing fee_rate as an integer\n             txid = self.nodes[2].sendtoaddress(address=address, amount=amount, fee_rate=fee_rate_sat_vb)\n             tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n             self.nodes[0].generate(1)\n@@ -414,6 +426,19 @@ def run_test(self):\n             fee = prebalance - postbalance - Decimal(amount)\n             assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\n \n+            prebalance = self.nodes[2].getbalance()\n+            amount = Decimal(\"0.001\")\n+            fee_rate_sat_vb = 1.23\n+            fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n+            # Test passing fee_rate as a string\n+            txid = self.nodes[2].sendtoaddress(address=address, amount=amount, fee_rate=str(fee_rate_sat_vb))\n+            tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n+            self.nodes[0].generate(1)\n+            self.sync_all(self.nodes[0:3])\n+            postbalance = self.nodes[2].getbalance()\n+            fee = prebalance - postbalance - amount\n+            assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\n+\n             for key in [\"totalFee\", \"feeRate\"]:\n                 assert_raises_rpc_error(-8, \"Unknown named parameter key\", self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=1, key=1)\n "
      },
      {
        "sha": "c8c1f2e37493a2e5cf4843737f99efbc17382ad5",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
        "patch": "@@ -149,7 +149,7 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n     if mode == \"fee_rate\":\n-        bumped_psbt = rbf_node.psbtbumpfee(rbfid, {\"fee_rate\": NORMAL})\n+        bumped_psbt = rbf_node.psbtbumpfee(rbfid, {\"fee_rate\": str(NORMAL)})\n         bumped_tx = rbf_node.bumpfee(rbfid, {\"fee_rate\": NORMAL})\n     else:\n         bumped_psbt = rbf_node.psbtbumpfee(rbfid)"
      }
    ]
  },
  {
    "sha": "1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2FhMzJlM2YyYTc0Y2Q1NzAwYTRhZmU4ZWNmNjUwZjkwMjBmYjVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-12-07T22:37:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:37:53Z"
      },
      "message": "Improve heuristic hex transaction decoding\n\nWhenever both encodings are permitted, try both, and if only one succeeds,\nreturn that one. Otherwise prefer the one for which the heuristic sanity\ncheck passes. If that is the case for neither or for both, return the\nextended-permitting deserialization.\n\nGithub-Pull: #20595\nRebased-From: 39c42c442044aef611d03ee7053d2dd6df63deb7",
      "tree": {
        "sha": "82ab5cc3755857e09a8fc259004df56cc2a079ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82ab5cc3755857e09a8fc259004df56cc2a079ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 50,
      "deletions": 9
    },
    "files": [
      {
        "sha": "fc02b1b6477a3810a60b97005b59c4c7f0421016",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 9,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
        "patch": "@@ -119,31 +119,72 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    // General strategy:\n+    // - Decode both with extended serialization (which interprets the 0x0001 tag as a marker for\n+    //   the presense of witnesses) and with legacy serialization (which interprets the tag as a\n+    //   0-input 1-output incomplete transaction).\n+    //   - Restricted by try_no_witness (which disables legacy if false) and try_witness (which\n+    //     disables extended if false).\n+    //   - Ignore serializations that do not fully consume the hex string.\n+    // - If neither succeeds, fail.\n+    // - If only one succeeds, return that one.\n+    // - If both decode attempts succeed:\n+    //   - If only one passes the CheckTxScriptsSanity check, return that one.\n+    //   - If neither or both pass CheckTxScriptsSanity, return the extended one.\n+\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully\n+    // consumes the entire input.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Optimization: if extended decoding succeeded and the result passes CheckTxScriptsSanity,\n+    // don't bother decoding the other way.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+\n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If legacy decoding succeeded and passes CheckTxScriptsSanity, that's our answer, as we know\n+    // at this point that extended decoding either failed or doesn't pass the sanity check.\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If extended decoding succeeded, and neither decoding passes sanity, return the extended one.\n+    if (ok_extended) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+\n+    // If legacy decoding succeeded and extended didn't, return the legacy one.\n+    if (ok_legacy) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If none succeeded, we failed.\n     return false;\n }\n "
      }
    ]
  },
  {
    "sha": "ce13b99020df8d46a9b594add3c49e38d4601b42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTEzYjk5MDIwZGY4ZDQ2YTliNTk0YWRkM2M0OWUzOGQ0NjAxYjQy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-12-08T21:13:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:37:57Z"
      },
      "message": "Add regression test for incorrect decoding\n\nGithub-Pull: #20595\nRebased-From: 0f949cde3dff15170db7930b0f7345ff995c267d",
      "tree": {
        "sha": "b49bf84888e9db76e4ff21dedaeeaef370e94c43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b49bf84888e9db76e4ff21dedaeeaef370e94c43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce13b99020df8d46a9b594add3c49e38d4601b42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce13b99020df8d46a9b594add3c49e38d4601b42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce13b99020df8d46a9b594add3c49e38d4601b42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce13b99020df8d46a9b594add3c49e38d4601b42/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "60e66a27c9d319b2c92951f6f35594a4e18c99a1",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce13b99020df8d46a9b594add3c49e38d4601b42/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce13b99020df8d46a9b594add3c49e38d4601b42/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=ce13b99020df8d46a9b594add3c49e38d4601b42",
        "patch": "@@ -372,6 +372,13 @@ def run_test(self):\n         encrawtx = \"01000000010000000000000072c1a6a246ae63f74f931e8365e15a089c68d61900000000000000000000ffffffff0100e1f505000000000000000000\"\n         decrawtx = self.nodes[0].decoderawtransaction(encrawtx, False) # decode as non-witness transaction\n         assert_equal(decrawtx['vout'][0]['value'], Decimal('1.00000000'))\n+        # known ambiguous transaction in the chain (see https://github.com/bitcoin/bitcoin/issues/20579)\n+        encrawtx = \"020000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff4b03c68708046ff8415c622f4254432e434f4d2ffabe6d6de1965d02c68f928e5b244ab1965115a36f56eb997633c7f690124bbf43644e23080000000ca3d3af6d005a65ff0200fd00000000ffffffff03f4c1fb4b0000000016001497cfc76442fe717f2a3f0cc9c175f7561b6619970000000000000000266a24aa21a9ed957d1036a80343e0d1b659497e1b48a38ebe876a056d45965fac4a85cda84e1900000000000000002952534b424c4f434b3a8e092581ab01986cbadc84f4b43f4fa4bb9e7a2e2a0caf9b7cf64d939028e22c0120000000000000000000000000000000000000000000000000000000000000000000000000\"\n+        decrawtx = self.nodes[0].decoderawtransaction(encrawtx)\n+        decrawtx_wit = self.nodes[0].decoderawtransaction(encrawtx, True)\n+        assert_raises_rpc_error(-22, 'TX decode failed', self.nodes[0].decoderawtransaction, encrawtx, False) # fails to decode as non-witness transaction\n+        assert_equal(decrawtx, decrawtx_wit) # the witness interpretation should be chosen\n+        assert_equal(decrawtx['vin'][0]['coinbase'], \"03c68708046ff8415c622f4254432e434f4d2ffabe6d6de1965d02c68f928e5b244ab1965115a36f56eb997633c7f690124bbf43644e23080000000ca3d3af6d005a65ff0200fd00000000\")\n \n         # Basic signrawtransaction test\n         addr = self.nodes[1].getnewaddress()"
      }
    ]
  },
  {
    "sha": "61e316e66168be593fcc90b90217062fa9d993dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MWUzMTZlNjYxNjhiZTU5M2ZjYzkwYjkwMjE3MDYyZmE5ZDk5M2Rj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-11-24T14:08:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T12:54:42Z"
      },
      "message": "Don't set BDB flags when configuring without\n\nGithub-Pull: #20478\nRebased-From: 982e548a9a78b1b0abad59b54c780b6b06570452",
      "tree": {
        "sha": "f77ea594459479e2b13fb9bafeac6073c8f46ecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f77ea594459479e2b13fb9bafeac6073c8f46ecc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61e316e66168be593fcc90b90217062fa9d993dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61e316e66168be593fcc90b90217062fa9d993dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61e316e66168be593fcc90b90217062fa9d993dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61e316e66168be593fcc90b90217062fa9d993dc/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce13b99020df8d46a9b594add3c49e38d4601b42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce13b99020df8d46a9b594add3c49e38d4601b42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce13b99020df8d46a9b594add3c49e38d4601b42"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c689633dde0d11bd0869c18337b3f866bdf1c8ea",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61e316e66168be593fcc90b90217062fa9d993dc/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61e316e66168be593fcc90b90217062fa9d993dc/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=61e316e66168be593fcc90b90217062fa9d993dc",
        "patch": "@@ -648,7 +648,7 @@ case $host in\n \n          bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n          qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n-         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n+         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\" && test \"$use_bdb\" != \"no\"; then\n            dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n            BDB_CFLAGS=\"-I$bdb_prefix/include\"\n            BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\""
      }
    ]
  },
  {
    "sha": "96124a204193ed114ca9594df7d5151206990e91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjEyNGEyMDQxOTNlZDExNGNhOTU5NGRmN2Q1MTUxMjA2OTkwZTkx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-03T21:39:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T12:54:46Z"
      },
      "message": "build: Check that Homebrew's berkeley-db4 package is actually installed\n\nGithub-Pull: #20563\nRebased-From: d3ef947524a07f8d7fbad5b95781ab6cacb1cb49",
      "tree": {
        "sha": "269fe2f483717ca4076136e68c4f4a39ea4dfd74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/269fe2f483717ca4076136e68c4f4a39ea4dfd74"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96124a204193ed114ca9594df7d5151206990e91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96124a204193ed114ca9594df7d5151206990e91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96124a204193ed114ca9594df7d5151206990e91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96124a204193ed114ca9594df7d5151206990e91/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "61e316e66168be593fcc90b90217062fa9d993dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61e316e66168be593fcc90b90217062fa9d993dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/61e316e66168be593fcc90b90217062fa9d993dc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a7ee5625c873e60caba5a5dac2ea3aab22781a71",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96124a204193ed114ca9594df7d5151206990e91/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96124a204193ed114ca9594df7d5151206990e91/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=96124a204193ed114ca9594df7d5151206990e91",
        "patch": "@@ -646,9 +646,9 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n          qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n-         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\" && test \"$use_bdb\" != \"no\"; then\n+         if $BREW list --versions berkeley-db4 >/dev/null && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\" && test \"$use_bdb\" != \"no\"; then\n+           bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n            dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n            BDB_CFLAGS=\"-I$bdb_prefix/include\"\n            BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\""
      }
    ]
  },
  {
    "sha": "48f8929aade118469cb0014e78a15b4e71fdd17d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGY4OTI5YWFkZTExODQ2OWNiMDAxNGU3OGExNWI0ZTcxZmRkMTdk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-04T11:02:08Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T12:54:50Z"
      },
      "message": "build, refactor: Check that Homebrew's qt5 package is actually installed\n\nThis change unifies Homebrew packages workflow, and does not change\nbehavior.\n\nGithub-Pull: #20527\nRebased-From: c96d1f65a552712f8476269ad64a415717ead50d",
      "tree": {
        "sha": "6adb6fdf4772542e983d69580202988c2a679916",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6adb6fdf4772542e983d69580202988c2a679916"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48f8929aade118469cb0014e78a15b4e71fdd17d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48f8929aade118469cb0014e78a15b4e71fdd17d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48f8929aade118469cb0014e78a15b4e71fdd17d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48f8929aade118469cb0014e78a15b4e71fdd17d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96124a204193ed114ca9594df7d5151206990e91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96124a204193ed114ca9594df7d5151206990e91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96124a204193ed114ca9594df7d5151206990e91"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f46942d81ae59fe161161a980721e6ca7dd0a658",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48f8929aade118469cb0014e78a15b4e71fdd17d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48f8929aade118469cb0014e78a15b4e71fdd17d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=48f8929aade118469cb0014e78a15b4e71fdd17d",
        "patch": "@@ -646,16 +646,15 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n          if $BREW list --versions berkeley-db4 >/dev/null && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\" && test \"$use_bdb\" != \"no\"; then\n            bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n            dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n            BDB_CFLAGS=\"-I$bdb_prefix/include\"\n            BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n          fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n+\n+         if $BREW list --versions qt5 >/dev/null; then\n+           export PKG_CONFIG_PATH=\"$($BREW --prefix qt5 2>/dev/null)/lib/pkgconfig:$PKG_CONFIG_PATH\"\n          fi\n        fi\n      else"
      }
    ]
  },
  {
    "sha": "f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTFlMWNiMjkxN2JiZDdiMDk2NmE3YWQ2ODhlMDRmYzNjZTAyY2Nm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-04T11:06:10Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T12:54:52Z"
      },
      "message": "build: Use Homebrew's sqlite package if it is available\n\nGithub-Pull: #20527\nRebased-From: ee7b84e63cbeadd5e680d69ff0548275581e9241",
      "tree": {
        "sha": "032a2f34e4b0ed82abca18fc9e95ce4e4705b9f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/032a2f34e4b0ed82abca18fc9e95ce4e4705b9f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48f8929aade118469cb0014e78a15b4e71fdd17d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48f8929aade118469cb0014e78a15b4e71fdd17d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48f8929aade118469cb0014e78a15b4e71fdd17d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ffe192d55800dd412d3e196275e294a2355476be",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
        "patch": "@@ -646,13 +646,17 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         if $BREW list --versions berkeley-db4 >/dev/null && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\" && test \"$use_bdb\" != \"no\"; then\n+         if test \"x$use_bdb\" != xno && $BREW list --versions berkeley-db4 >/dev/null && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n            bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n            dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n            BDB_CFLAGS=\"-I$bdb_prefix/include\"\n            BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n          fi\n \n+         if test \"x$use_sqlite\" != xno && $BREW list --versions sqlite3 >/dev/null; then\n+           export PKG_CONFIG_PATH=\"$($BREW --prefix sqlite3 2>/dev/null)/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+         fi\n+\n          if $BREW list --versions qt5 >/dev/null; then\n            export PKG_CONFIG_PATH=\"$($BREW --prefix qt5 2>/dev/null)/lib/pkgconfig:$PKG_CONFIG_PATH\"\n          fi"
      }
    ]
  },
  {
    "sha": "48134a09adef3b5302cdd6e95500db404c9ac961",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODEzNGEwOWFkZWYzYjUzMDJjZGQ2ZTk1NTAwZGI0MDRjOWFjOTYx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-04T11:14:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T12:54:59Z"
      },
      "message": "doc: Update wallet database installation guide for macOS\n\nGithub-Pull: #20527\nRebased-From: c932e0d67e4b369e4265267da6c8bebac2b6fb53",
      "tree": {
        "sha": "633c6c772b12e5c67c9eefa6e8bad2efb462b72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/633c6c772b12e5c67c9eefa6e8bad2efb462b72f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48134a09adef3b5302cdd6e95500db404c9ac961",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48134a09adef3b5302cdd6e95500db404c9ac961",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48134a09adef3b5302cdd6e95500db404c9ac961",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48134a09adef3b5302cdd6e95500db404c9ac961/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 25,
      "deletions": 6
    },
    "files": [
      {
        "sha": "300a9a922a31386aae008db8d9a5f8f1cbfab94a",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 25,
        "deletions": 6,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48134a09adef3b5302cdd6e95500db404c9ac961/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48134a09adef3b5302cdd6e95500db404c9ac961/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=48134a09adef3b5302cdd6e95500db404c9ac961",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode sqlite\n+brew install automake libtool boost miniupnpc pkg-config python qt libevent qrencode\n ```\n \n If you run into issues, check [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting).\n@@ -30,7 +30,22 @@ If you want to build the disk image with `make deploy` (.dmg / optional), you ne\n brew install librsvg\n ```\n \n-## Berkeley DB\n+The wallet support requires one or both of the dependencies ([*SQLite*](#sqlite) and [*Berkeley DB*](#berkeley-db)) in the sections below.\n+To build Bitcoin Core without wallet, see [*Disable-wallet mode*](#disable-wallet-mode).\n+\n+#### SQLite\n+\n+Usually, macOS installation already has a suitable SQLite installation.\n+Also, the Homebrew package could be installed:\n+\n+```shell\n+brew install sqlite\n+```\n+\n+In that case the Homebrew package will prevail.\n+\n+#### Berkeley DB\n+\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n you can use [this](/contrib/install_db4.sh) script to install it\n like so:\n@@ -41,7 +56,11 @@ like so:\n \n from the root of the repository.\n \n-**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](/doc/build-osx.md#disable-wallet-mode)).\n+Also, the Homebrew package could be installed:\n+\n+```shell\n+brew install berkeley-db4\n+```\n \n ## Build Bitcoin Core\n \n@@ -72,14 +91,14 @@ from the root of the repository.\n     make deploy\n     ```\n \n-## `disable-wallet` mode\n+## Disable-wallet mode\n When the intention is to run only a P2P node without a wallet, Bitcoin Core may be\n-compiled in `disable-wallet` mode with:\n+compiled in disable-wallet mode with:\n ```shell\n ./configure --disable-wallet\n ```\n \n-In this case there is no dependency on Berkeley DB 4.8 and SQLite.\n+In this case there is no dependency on [*Berkeley DB*](#berkeley-db) and [*SQLite*](#sqlite).\n \n Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n "
      }
    ]
  },
  {
    "sha": "3fee499bc3af034e1abbea1b9198882197ae978c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmVlNDk5YmMzYWYwMzRlMWFiYmVhMWI5MTk4ODgyMTk3YWU5Nzhj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-10T18:17:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-10T18:18:38Z"
      },
      "message": "Merge #20612: [0.21] final rc3 backports\n\n48134a09adef3b5302cdd6e95500db404c9ac961 doc: Update wallet database installation guide for macOS (Hennadii Stepanov)\nf51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf build: Use Homebrew's sqlite package if it is available (Hennadii Stepanov)\n48f8929aade118469cb0014e78a15b4e71fdd17d build, refactor: Check that Homebrew's qt5 package is actually installed (Hennadii Stepanov)\n96124a204193ed114ca9594df7d5151206990e91 build: Check that Homebrew's berkeley-db4 package is actually installed (Hennadii Stepanov)\n61e316e66168be593fcc90b90217062fa9d993dc Don't set BDB flags when configuring without (Jonas Schnelli)\nce13b99020df8d46a9b594add3c49e38d4601b42 Add regression test for incorrect decoding (Pieter Wuille)\n1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c Improve heuristic hex transaction decoding (Pieter Wuille)\n0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5 test: add coverage for passing fee rate as a string (Jon Atack)\n06c84232b310e6196c814894537ad935d773fe98 wallet, bugfix: allow send to take string fee rate values (Jon Atack)\nbead93547067e4b62b44fba335f1d4697119c2d7 Send and require SENDADDRV2 before VERACK (Pieter Wuille)\n9e806887a8f9ef63431b28d7dfd0470aa663dd02 Don't send 'sendaddrv2' to pre-70016 software (Pieter Wuille)\n\nPull request description:\n\nACKs for top commit:\n  laanwj:\n    ACK 48134a09adef3b5302cdd6e95500db404c9ac961\n\nTree-SHA512: 92f1199b96ab7775f88e882ec7fedf43118a4b8452d1c8d0b1cf072d8de153bbb601c7381bc1c5c80c93803c6f9942d54646e9c74e3a6703ce13854fb383fd5e",
      "tree": {
        "sha": "633c6c772b12e5c67c9eefa6e8bad2efb462b72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/633c6c772b12e5c67c9eefa6e8bad2efb462b72f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3fee499bc3af034e1abbea1b9198882197ae978c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/SZn4ACgkQHkrtYphs\n0l0OKwf/f98FlvN42ZCH6/vK6R1h/jXVHr4Gg3sSrFkTYH/9vcZKE1QavxCRgJLv\nKhhdtJAflwJtCWom1ZCUh/V4w2eLbW8A87SqoJ8ddVIRA7yZXFz2Eo8XNQuhrhhO\nkpT/1kSOSWYXD+VSDIhWoseXrbsi2MmS7KMAwAGpCx59ty7o2vs+AYrhHtfNb7Zj\nBMnI1NKA/rs1F3mgvwe4uhejwe51maMMPLB3+tdPlOSmIPh/Vq2vGbZotTsfPNIi\nbEwh3pIU+4FsPUC/DZJkuoorft9vkSwXsRo4Gt2rijpLNy7rhnlSccnWfjJFKQYr\n8YqpgX3sAolS19YLq2akLjQgemYEDw==\n=W2KA\n-----END PGP SIGNATURE-----",
        "payload": "tree 633c6c772b12e5c67c9eefa6e8bad2efb462b72f\nparent aa4b8ebfecddc7795200904009fea84b2c644141\nparent 48134a09adef3b5302cdd6e95500db404c9ac961\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1607624249 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1607624318 +0100\n\nMerge #20612: [0.21] final rc3 backports\n\n48134a09adef3b5302cdd6e95500db404c9ac961 doc: Update wallet database installation guide for macOS (Hennadii Stepanov)\nf51e1cb2917bbd7b0966a7ad688e04fc3ce02ccf build: Use Homebrew's sqlite package if it is available (Hennadii Stepanov)\n48f8929aade118469cb0014e78a15b4e71fdd17d build, refactor: Check that Homebrew's qt5 package is actually installed (Hennadii Stepanov)\n96124a204193ed114ca9594df7d5151206990e91 build: Check that Homebrew's berkeley-db4 package is actually installed (Hennadii Stepanov)\n61e316e66168be593fcc90b90217062fa9d993dc Don't set BDB flags when configuring without (Jonas Schnelli)\nce13b99020df8d46a9b594add3c49e38d4601b42 Add regression test for incorrect decoding (Pieter Wuille)\n1caa32e3f2a74cd5700a4afe8ecf650f9020fb5c Improve heuristic hex transaction decoding (Pieter Wuille)\n0d3c140c4db051fb33c2935ad9536f0f4aa2a8c5 test: add coverage for passing fee rate as a string (Jon Atack)\n06c84232b310e6196c814894537ad935d773fe98 wallet, bugfix: allow send to take string fee rate values (Jon Atack)\nbead93547067e4b62b44fba335f1d4697119c2d7 Send and require SENDADDRV2 before VERACK (Pieter Wuille)\n9e806887a8f9ef63431b28d7dfd0470aa663dd02 Don't send 'sendaddrv2' to pre-70016 software (Pieter Wuille)\n\nPull request description:\n\nACKs for top commit:\n  laanwj:\n    ACK 48134a09adef3b5302cdd6e95500db404c9ac961\n\nTree-SHA512: 92f1199b96ab7775f88e882ec7fedf43118a4b8452d1c8d0b1cf072d8de153bbb601c7381bc1c5c80c93803c6f9942d54646e9c74e3a6703ce13854fb383fd5e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fee499bc3af034e1abbea1b9198882197ae978c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3fee499bc3af034e1abbea1b9198882197ae978c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fee499bc3af034e1abbea1b9198882197ae978c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aa4b8ebfecddc7795200904009fea84b2c644141",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa4b8ebfecddc7795200904009fea84b2c644141",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aa4b8ebfecddc7795200904009fea84b2c644141"
      },
      {
        "sha": "48134a09adef3b5302cdd6e95500db404c9ac961",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48134a09adef3b5302cdd6e95500db404c9ac961",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48134a09adef3b5302cdd6e95500db404c9ac961"
      }
    ],
    "stats": {
      "total": 187,
      "additions": 147,
      "deletions": 40
    },
    "files": [
      {
        "sha": "ffe192d55800dd412d3e196275e294a2355476be",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -646,16 +646,19 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n-         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n-         if test x$bdb_prefix != x && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n+         if test \"x$use_bdb\" != xno && $BREW list --versions berkeley-db4 >/dev/null && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n+           bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n            dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n            BDB_CFLAGS=\"-I$bdb_prefix/include\"\n            BDB_LIBS=\"-L$bdb_prefix/lib -ldb_cxx-4.8\"\n          fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n+\n+         if test \"x$use_sqlite\" != xno && $BREW list --versions sqlite3 >/dev/null; then\n+           export PKG_CONFIG_PATH=\"$($BREW --prefix sqlite3 2>/dev/null)/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+         fi\n+\n+         if $BREW list --versions qt5 >/dev/null; then\n+           export PKG_CONFIG_PATH=\"$($BREW --prefix qt5 2>/dev/null)/lib/pkgconfig:$PKG_CONFIG_PATH\"\n          fi\n        fi\n      else"
      },
      {
        "sha": "300a9a922a31386aae008db8d9a5f8f1cbfab94a",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 25,
        "deletions": 6,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode sqlite\n+brew install automake libtool boost miniupnpc pkg-config python qt libevent qrencode\n ```\n \n If you run into issues, check [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting).\n@@ -30,7 +30,22 @@ If you want to build the disk image with `make deploy` (.dmg / optional), you ne\n brew install librsvg\n ```\n \n-## Berkeley DB\n+The wallet support requires one or both of the dependencies ([*SQLite*](#sqlite) and [*Berkeley DB*](#berkeley-db)) in the sections below.\n+To build Bitcoin Core without wallet, see [*Disable-wallet mode*](#disable-wallet-mode).\n+\n+#### SQLite\n+\n+Usually, macOS installation already has a suitable SQLite installation.\n+Also, the Homebrew package could be installed:\n+\n+```shell\n+brew install sqlite\n+```\n+\n+In that case the Homebrew package will prevail.\n+\n+#### Berkeley DB\n+\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n you can use [this](/contrib/install_db4.sh) script to install it\n like so:\n@@ -41,7 +56,11 @@ like so:\n \n from the root of the repository.\n \n-**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](/doc/build-osx.md#disable-wallet-mode)).\n+Also, the Homebrew package could be installed:\n+\n+```shell\n+brew install berkeley-db4\n+```\n \n ## Build Bitcoin Core\n \n@@ -72,14 +91,14 @@ from the root of the repository.\n     make deploy\n     ```\n \n-## `disable-wallet` mode\n+## Disable-wallet mode\n When the intention is to run only a P2P node without a wallet, Bitcoin Core may be\n-compiled in `disable-wallet` mode with:\n+compiled in disable-wallet mode with:\n ```shell\n ./configure --disable-wallet\n ```\n \n-In this case there is no dependency on Berkeley DB 4.8 and SQLite.\n+In this case there is no dependency on [*Berkeley DB*](#berkeley-db) and [*SQLite*](#sqlite).\n \n Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n "
      },
      {
        "sha": "fc02b1b6477a3810a60b97005b59c4c7f0421016",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 9,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -119,31 +119,72 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    // General strategy:\n+    // - Decode both with extended serialization (which interprets the 0x0001 tag as a marker for\n+    //   the presense of witnesses) and with legacy serialization (which interprets the tag as a\n+    //   0-input 1-output incomplete transaction).\n+    //   - Restricted by try_no_witness (which disables legacy if false) and try_witness (which\n+    //     disables extended if false).\n+    //   - Ignore serializations that do not fully consume the hex string.\n+    // - If neither succeeds, fail.\n+    // - If only one succeeds, return that one.\n+    // - If both decode attempts succeed:\n+    //   - If only one passes the CheckTxScriptsSanity check, return that one.\n+    //   - If neither or both pass CheckTxScriptsSanity, return the extended one.\n+\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully\n+    // consumes the entire input.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Optimization: if extended decoding succeeded and the result passes CheckTxScriptsSanity,\n+    // don't bother decoding the other way.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+\n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If legacy decoding succeeded and passes CheckTxScriptsSanity, that's our answer, as we know\n+    // at this point that extended decoding either failed or doesn't pass the sanity check.\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If extended decoding succeeded, and neither decoding passes sanity, return the extended one.\n+    if (ok_extended) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+\n+    // If legacy decoding succeeded and extended didn't, return the legacy one.\n+    if (ok_legacy) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If none succeeded, we failed.\n     return false;\n }\n "
      },
      {
        "sha": "98e3d90c2d1e03497ffce40f6febe059c9732b47",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 8,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -2364,10 +2364,16 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::WTXIDRELAY));\n         }\n \n-        m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\n-\n         // Signal ADDRv2 support (BIP155).\n-        m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDADDRV2));\n+        if (greatest_common_version >= 70016) {\n+            // BIP155 defines addrv2 and sendaddrv2 for all protocol versions, but some\n+            // implementations reject messages they don't know. As a courtesy, don't send\n+            // it to nodes with a version before 70016, as no software is known to support\n+            // BIP155 that doesn't announce at least that protocol version number.\n+            m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDADDRV2));\n+        }\n+\n+        m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\n \n         pfrom.nServices = nServices;\n         pfrom.SetAddrLocal(addrMe);\n@@ -2540,6 +2546,17 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::SENDADDRV2) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send SENDADDRV2 message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        pfrom.m_wants_addrv2 = true;\n+        return;\n+    }\n+\n     if (!pfrom.fSuccessfullyConnected) {\n         LogPrint(BCLog::NET, \"Unsupported message \\\"%s\\\" prior to verack from peer=%d\\n\", SanitizeString(msg_type), pfrom.GetId());\n         return;\n@@ -2607,11 +2624,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n-    if (msg_type == NetMsgType::SENDADDRV2) {\n-        pfrom.m_wants_addrv2 = true;\n-        return;\n-    }\n-\n     if (msg_type == NetMsgType::SENDHEADERS) {\n         LOCK(cs_main);\n         State(pfrom.GetId())->fPreferHeaders = true;"
      },
      {
        "sha": "e8c3ae888d0da49d9f25dd5ebcd9510c8ccd9fc9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -4083,7 +4083,7 @@ static RPCHelpMan send()\n                 UniValueType(), // outputs (ARR or OBJ, checked later)\n                 UniValue::VNUM, // conf_target\n                 UniValue::VSTR, // estimate_mode\n-                UniValue::VNUM, // fee_rate\n+                UniValueType(), // fee_rate, will be checked by AmountFromValue() in SetFeeEstimateMode()\n                 UniValue::VOBJ, // options\n                 }, true\n             );"
      },
      {
        "sha": "569471dc873a11d7510c259e7f4066c20be1ea17",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -717,10 +717,10 @@ def test_option_feerate(self):\n \n         result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n         btc_kvb_to_sat_vb = 100000  # (1e5)\n-        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 2 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": str(2 * btc_kvb_to_sat_vb * self.min_relay_tx_fee)})\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n-        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": str(10 * self.min_relay_tx_fee)})\n         # Test that funding non-standard \"zero-fee\" transactions is valid.\n         result5 = self.nodes[3].fundrawtransaction(rawtx, {\"fee_rate\": 0})\n         result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})"
      },
      {
        "sha": "b364077a9ae706ec2f7e4662f9e4bec8de8a9edc",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -190,11 +190,11 @@ def run_test(self):\n         self.log.info(\"Test walletcreatefundedpsbt fee rate of 10000 sat/vB and 0.1 BTC/kvB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res1 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 10000, \"add_inputs\": True})\n         assert_approx(res1[\"fee\"], 0.055, 0.005)\n-        res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": \"0.1\", \"add_inputs\": True})\n         assert_approx(res2[\"fee\"], 0.055, 0.005)\n \n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed, e.g. a fee_rate under 1 sat/vB is allowed\")\n-        res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 0.99999999, \"add_inputs\": True})\n+        res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": \"0.99999999\", \"add_inputs\": True})\n         assert_approx(res3[\"fee\"], 0.00000381, 0.0000001)\n         res4 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)"
      },
      {
        "sha": "60e66a27c9d319b2c92951f6f35594a4e18c99a1",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -372,6 +372,13 @@ def run_test(self):\n         encrawtx = \"01000000010000000000000072c1a6a246ae63f74f931e8365e15a089c68d61900000000000000000000ffffffff0100e1f505000000000000000000\"\n         decrawtx = self.nodes[0].decoderawtransaction(encrawtx, False) # decode as non-witness transaction\n         assert_equal(decrawtx['vout'][0]['value'], Decimal('1.00000000'))\n+        # known ambiguous transaction in the chain (see https://github.com/bitcoin/bitcoin/issues/20579)\n+        encrawtx = \"020000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff4b03c68708046ff8415c622f4254432e434f4d2ffabe6d6de1965d02c68f928e5b244ab1965115a36f56eb997633c7f690124bbf43644e23080000000ca3d3af6d005a65ff0200fd00000000ffffffff03f4c1fb4b0000000016001497cfc76442fe717f2a3f0cc9c175f7561b6619970000000000000000266a24aa21a9ed957d1036a80343e0d1b659497e1b48a38ebe876a056d45965fac4a85cda84e1900000000000000002952534b424c4f434b3a8e092581ab01986cbadc84f4b43f4fa4bb9e7a2e2a0caf9b7cf64d939028e22c0120000000000000000000000000000000000000000000000000000000000000000000000000\"\n+        decrawtx = self.nodes[0].decoderawtransaction(encrawtx)\n+        decrawtx_wit = self.nodes[0].decoderawtransaction(encrawtx, True)\n+        assert_raises_rpc_error(-22, 'TX decode failed', self.nodes[0].decoderawtransaction, encrawtx, False) # fails to decode as non-witness transaction\n+        assert_equal(decrawtx, decrawtx_wit) # the witness interpretation should be chosen\n+        assert_equal(decrawtx['vin'][0]['coinbase'], \"03c68708046ff8415c622f4254432e434f4d2ffabe6d6de1965d02c68f928e5b244ab1965115a36f56eb997633c7f690124bbf43644e23080000000ca3d3af6d005a65ff0200fd00000000\")\n \n         # Basic signrawtransaction test\n         addr = self.nodes[1].getnewaddress()"
      },
      {
        "sha": "8b79a4dc2ff9198c2dcfbe975f27b843bd96f1fb",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -396,9 +396,9 @@ def on_version(self, message):\n         assert message.nVersion >= MIN_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_VERSION_SUPPORTED)\n         if message.nVersion >= 70016:\n             self.send_message(msg_wtxidrelay())\n-        self.send_message(msg_verack())\n         if self.support_addrv2:\n             self.send_message(msg_sendaddrv2())\n+        self.send_message(msg_verack())\n         self.nServices = message.nServices\n \n     # Connection helper methods"
      },
      {
        "sha": "3cbddaf6dacd138be4563bfd4b5202d50a20f45b",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 27,
        "deletions": 2,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -235,7 +235,8 @@ def run_test(self):\n         fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n         explicit_fee_rate_btc_kvb = Decimal(fee_rate_btc_kvb) / 1000\n \n-        txid = self.nodes[2].sendmany(amounts={address: 10}, fee_rate=fee_rate_sat_vb)\n+        # Test passing fee_rate as a string\n+        txid = self.nodes[2].sendmany(amounts={address: 10}, fee_rate=str(fee_rate_sat_vb))\n         self.nodes[2].generate(1)\n         self.sync_all(self.nodes[0:3])\n         balance = self.nodes[2].getbalance()\n@@ -244,6 +245,17 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n+        # Test passing fee_rate as an integer\n+        amount = Decimal(\"0.0001\")\n+        txid = self.nodes[2].sendmany(amounts={address: amount}, fee_rate=fee_rate_sat_vb)\n+        self.nodes[2].generate(1)\n+        self.sync_all(self.nodes[0:3])\n+        balance = self.nodes[2].getbalance()\n+        node_2_bal = self.check_fee_amount(balance, node_2_bal - amount, explicit_fee_rate_btc_kvb, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n+        assert_equal(balance, node_2_bal)\n+        node_0_bal += amount\n+        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n+\n         for key in [\"totalFee\", \"feeRate\"]:\n             assert_raises_rpc_error(-8, \"Unknown named parameter key\", self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=1, key=1)\n \n@@ -405,7 +417,7 @@ def run_test(self):\n             amount = 3\n             fee_rate_sat_vb = 2\n             fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n-\n+            # Test passing fee_rate as an integer\n             txid = self.nodes[2].sendtoaddress(address=address, amount=amount, fee_rate=fee_rate_sat_vb)\n             tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n             self.nodes[0].generate(1)\n@@ -414,6 +426,19 @@ def run_test(self):\n             fee = prebalance - postbalance - Decimal(amount)\n             assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\n \n+            prebalance = self.nodes[2].getbalance()\n+            amount = Decimal(\"0.001\")\n+            fee_rate_sat_vb = 1.23\n+            fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\n+            # Test passing fee_rate as a string\n+            txid = self.nodes[2].sendtoaddress(address=address, amount=amount, fee_rate=str(fee_rate_sat_vb))\n+            tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n+            self.nodes[0].generate(1)\n+            self.sync_all(self.nodes[0:3])\n+            postbalance = self.nodes[2].getbalance()\n+            fee = prebalance - postbalance - amount\n+            assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\n+\n             for key in [\"totalFee\", \"feeRate\"]:\n                 assert_raises_rpc_error(-8, \"Unknown named parameter key\", self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=1, key=1)\n "
      },
      {
        "sha": "c8c1f2e37493a2e5cf4843737f99efbc17382ad5",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -149,7 +149,7 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n     if mode == \"fee_rate\":\n-        bumped_psbt = rbf_node.psbtbumpfee(rbfid, {\"fee_rate\": NORMAL})\n+        bumped_psbt = rbf_node.psbtbumpfee(rbfid, {\"fee_rate\": str(NORMAL)})\n         bumped_tx = rbf_node.bumpfee(rbfid, {\"fee_rate\": NORMAL})\n     else:\n         bumped_psbt = rbf_node.psbtbumpfee(rbfid)"
      },
      {
        "sha": "9835c5a2af47d2076911292bc70027168dfa8f7f",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fee499bc3af034e1abbea1b9198882197ae978c/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=3fee499bc3af034e1abbea1b9198882197ae978c",
        "patch": "@@ -256,8 +256,8 @@ def run_test(self):\n         assert res[\"complete\"]\n \n         self.log.info(\"Test setting explicit fee rate\")\n-        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=1, add_to_wallet=False)\n-        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=1, add_to_wallet=False)\n+        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=\"1\", add_to_wallet=False)\n+        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=\"1\", add_to_wallet=False)\n         assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"], self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n \n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=7, add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "e6d0fa3ef6f60a221692df1161356ab5628a0903",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmQwZmEzZWY2ZjYwYTIyMTY5MmRmMTE2MTM1NmFiNTYyOGEwOTAz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-10T18:28:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-10T18:28:24Z"
      },
      "message": "gui: pre-rc3 translations update\n\nTree-SHA512: 2aba5a743ecc1f9e336b8db036640182eb3e85449d9ab4c883c97e6ac75466760939b29c18560205d25489d58091212f7f1dcf651388deb675f824703c943cbf",
      "tree": {
        "sha": "71da10ac22b4e3e55b08583f4bd26c6c75132f71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71da10ac22b4e3e55b08583f4bd26c6c75132f71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6d0fa3ef6f60a221692df1161356ab5628a0903",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/SaMgACgkQHkrtYphs\n0l2ZGgf/R5O8zhKMDgtnTUSFw26o2cmyA32m5yBo1GBgNjDbCVSoIem1/xGJlaqt\nJ9MLHQIY2+vAHeauAXUGDUTB/3pMmq1R6VSYCZE5TokImcZMOs1qpM1Cj4VHAPXD\n5/cB70hre7UDcoKk9M5wAWGO+HUNX9HLb7b5Ybr5Paq6sOiHg5tavMvbUZU9NjGH\n63/O1JMvzMo5a+igA4mFjto1lp7wCA0eKpjuhAcIYw+MzOjSv7jemmYsDV0/10wS\ntlLpYx5wSSOcz3ZThN14BmluYu9ql2WEMra2sQJpNVqRetrX0lq8V+YW7Gk61Y1Y\nWZ6KP5jdxCqYTiWsK5Ja5SLsAwIX0Q==\n=4e9v\n-----END PGP SIGNATURE-----",
        "payload": "tree 71da10ac22b4e3e55b08583f4bd26c6c75132f71\nparent 3fee499bc3af034e1abbea1b9198882197ae978c\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1607624889 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1607624904 +0100\n\ngui: pre-rc3 translations update\n\nTree-SHA512: 2aba5a743ecc1f9e336b8db036640182eb3e85449d9ab4c883c97e6ac75466760939b29c18560205d25489d58091212f7f1dcf651388deb675f824703c943cbf\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6d0fa3ef6f60a221692df1161356ab5628a0903",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6d0fa3ef6f60a221692df1161356ab5628a0903",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6d0fa3ef6f60a221692df1161356ab5628a0903/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3fee499bc3af034e1abbea1b9198882197ae978c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fee499bc3af034e1abbea1b9198882197ae978c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3fee499bc3af034e1abbea1b9198882197ae978c"
      }
    ],
    "stats": {
      "total": 1886,
      "additions": 1818,
      "deletions": 68
    },
    "files": [
      {
        "sha": "9651021dadf9c1ec55d9e5c74b68039075e9e6e3",
        "filename": "src/qt/locale/bitcoin_bn.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_bn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_bn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bn.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -3,51 +3,51 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Right-click to edit address or label</translation>\n+        <translation>\u09a0\u09bf\u0995\u09be\u09a8\u09be \u0995\u09bf\u0982\u09ac\u09be \u09b2\u09c7\u09ad\u09c7\u09b2 \u09b8\u09ae\u09cd\u09aa\u09be\u09a6\u09a8\u09be\u09b0 \u099c\u09a8\u09cd\u09af \u09b0\u09be\u0987\u099f-\u0995\u09cd\u09b2\u09bf\u0995 \u0995\u09b0\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>Create a new address</translation>\n+        <translation>\u09a8\u09a4\u09c1\u09a8 \u098f\u0995\u099f\u09bf \u09a0\u09bf\u0995\u09be\u09a8\u09be \u09a4\u09c8\u09b0\u09bf \u0995\u09b0\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n-        <translation>&amp;New</translation>\n+        <translation>\u09a8\u09a4\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Copy the currently selected address to the system clipboard</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n-        <translation>&amp;Copy</translation>\n+        <translation>&amp;\u0995\u09aa\u09bf</translation>\n     </message>\n     <message>\n         <source>C&amp;lose</source>\n         <translation>C&amp;lose</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n-        <translation>Delete the currently selected address from the list</translation>\n+        <translation>\u09ac\u09be\u099b\u09be\u0987\u0995\u09c3\u09a4 \u09a0\u09bf\u0995\u09be\u09a8\u09be\u099f\u09bf \u09b2\u09bf\u09b8\u09cd\u099f \u09a5\u09c7\u0995\u09c7 \u09ae\u09c1\u099b\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>Enter address or label to search</source>\n         <translation>Enter address or label to search</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>Export the data in the current tab to a file</translation>\n+        <translation>\u09ac\u09b0\u09cd\u09a4\u09ae\u09be\u09a8 \u099f\u09cd\u09af\u09be\u09ac\u09c7\u09b0 \u09a1\u09c7\u099f\u09be \u098f\u0995\u099f\u09bf \u09ab\u09be\u0987\u09b2\u09c7 \u098f\u0995\u09cd\u09b8\u09aa\u09cb\u09b0\u09cd\u099f \u0995\u09b0\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n-        <translation>&amp;Export</translation>\n+        <translation>&amp;\u098f\u0995\u09cd\u09b8\u09aa\u09cb\u09b0\u09cd\u099f</translation>\n     </message>\n     <message>\n         <source>&amp;Delete</source>\n-        <translation>&amp;Delete</translation>\n+        <translation>&amp;\u09ae\u09c1\u099b\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>Choose the address to send coins to</translation>\n+        <translation>\u0995\u09df\u09c7\u09a8 \u09aa\u09be\u09a0\u09be\u09a8\u09cb\u09b0 \u09a0\u09bf\u0995\u09be\u09a8\u09be \u09ac\u09be\u099b\u09be\u0987 \u0995\u09b0\u09c1\u09a8</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>"
      },
      {
        "sha": "c9718d59c6fe485d49cbed53fc965a432867b790",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 122,
        "deletions": 2,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -885,7 +885,11 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Create</source>\n         <translation>Crear</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Compilat sense el suport sqlite (requerit per carteres descriptor)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1527,14 +1531,42 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Save...</source>\n         <translation>Desa...</translation>\n     </message>\n+    <message>\n+        <source>Close</source>\n+        <translation>Tanca</translation>\n+    </message>\n+    <message>\n+        <source>Failed to load transaction: %1</source>\n+        <translation>Ha fallat la c\u00e0rrega de la transacci\u00f3: %1</translation>\n+    </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>Ha fallat la firma de la transacci\u00f3: %1</translation>\n+    </message>\n     <message>\n         <source>Could not sign any more inputs.</source>\n         <translation>No s'han pogut firmar m\u00e9s entrades.</translation>\n     </message>\n+    <message>\n+        <source>Signed %1 inputs, but more signatures are still required.</source>\n+        <translation>Firmades %1 entrades, per\u00f2 encara es requereixen m\u00e9s firmes.</translation>\n+    </message>\n+    <message>\n+        <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n+        <translation>La transacci\u00f3 s'ha firmat correctament. La transacci\u00f3 est\u00e0 a punt per emetre's.</translation>\n+    </message>\n     <message>\n         <source>Unknown error processing transaction.</source>\n         <translation>Error desconnegut al processar la transacci\u00f3.</translation>\n     </message>\n+    <message>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation>L'emissi\u00f3 de la transacci\u00f3 ha fallat: %1</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>PSBT copiada al porta-retalls.</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>Guarda Dades de Transacci\u00f3</translation>\n@@ -1543,6 +1575,18 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n         <translation>Transacci\u00f3 Parcialment Firmada (Binari) (*.psbt)</translation>\n     </message>\n+    <message>\n+        <source>PSBT saved to disk.</source>\n+        <translation>PSBT guardada al disc.</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation>*Envia %1 a %2</translation>\n+    </message>\n+    <message>\n+        <source>Unable to calculate transaction fee or total transaction amount.</source>\n+        <translation>Incapa\u00e7 de calcular la comissi\u00f3 de transacci\u00f3 o la quantitat total de la transacci\u00f3</translation>\n+    </message>\n     <message>\n         <source>Pays transaction fee: </source>\n         <translation>Paga comissi\u00f3 de transacci\u00f3:</translation>\n@@ -1567,6 +1611,14 @@ Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n         <source>Transaction still needs signature(s).</source>\n         <translation>La transacci\u00f3 encara necessita una o v\u00e0ries firmes.</translation>\n     </message>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>(Per\u00f2 aquesta cartera no pot firmar transaccions.)</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>(Per\u00f2 aquesta cartera no t\u00e9 les claus correctes.)</translation>\n+    </message>\n     <message>\n         <source>Transaction is fully signed and ready for broadcast.</source>\n         <translation>La transacci\u00f3 est\u00e0 completament firmada i a punt per emetre's.</translation>\n@@ -2494,6 +2546,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Are you sure you want to send?</source>\n         <translation>Esteu segur que ho voleu enviar?</translation>\n     </message>\n+    <message>\n+        <source>Create Unsigned</source>\n+        <translation>Creaci\u00f3 sense firmar</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>Guarda Dades de Transacci\u00f3</translation>\n@@ -2502,6 +2558,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n         <translation>Transacci\u00f3 Parcialment Firmada (Binari) (*.psbt)</translation>\n     </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT guardada</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2510,6 +2570,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>You can increase the fee later (signals Replace-By-Fee, BIP-125).</source>\n         <translation>Pot incrementar la comissi\u00f3 m\u00e9s tard (senyala Replace-By-Fee o substituci\u00f3 per comissi\u00f3, BIP-125).</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Si us plau, revisa la teva proposta de transacci\u00f3. Es produir\u00e0 una transacci\u00f3 de Bitcoin amb firma parcial (PSBT) que podeu guardar o copiar i despr\u00e9s firmar, per exemple, amb una cartera %1, o amb una cartera f\u00edsica compatible amb PSBT.</translation>\n+    </message>\n     <message>\n         <source>Please, review your transaction.</source>\n         <translation>Reviseu la transacci\u00f3</translation>\n@@ -3328,9 +3392,21 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Close all wallets</source>\n         <translation>Tanqueu totes les carteres</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation>Esteu segur que voleu tancar totes les carteres?</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n+    <message>\n+        <source>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</source>\n+        <translation>No s'ha carregat cap cartera. \n+Ves a Arxiu &gt; Obrir Cartera per a carregar cartera. \n+- O -</translation>\n+    </message>\n     <message>\n         <source>Create a new wallet</source>\n         <translation>Crear una nova cartera</translation>\n@@ -3409,6 +3485,26 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>Incapa\u00e7 de descodificar la PSBT del porta-retalls (base64 inv\u00e0lida)</translation>\n+    </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>Carrega dades de transacci\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>Transacci\u00f3 Parcialment Firmada (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation>L'arxiu PSBT ha de ser m\u00e9s petit que 100MiB</translation>\n+    </message>\n+    <message>\n+        <source>Unable to decode PSBT</source>\n+        <translation>Incapa\u00e7 de descodificar la PSBT</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>C\u00f2pia de seguretat de la cartera</translation>\n@@ -3476,6 +3572,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>S'ha produ\u00eft un error en llegir %s. Totes les claus es llegeixen correctament, per\u00f2 les dades de la transacci\u00f3 o les entrades de la llibreta d'adreces podrien faltar o ser incorrectes.</translation>\n     </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation> Es proporciona m\u00e9s d'una adre\u00e7a de vinculaci\u00f3. Utilitzant %s pel servei Tor onion autom\u00e0ticament creat.</translation>\n+    </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>Comproveu que la data i hora de l'ordinador s\u00f3n correctes. Si el rellotge \u00e9s incorrecte, %s no funcionar\u00e0 correctament.</translation>\n@@ -3484,6 +3584,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Contribueix si trobes %s \u00fatil. Visita %s per obtenir m\u00e9s informaci\u00f3 sobre el programari.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</source>\n+        <translation>SQLiteDatabase: esquema de cartera sqlite de versi\u00f3 %d desconegut. Nom\u00e9s \u00e9s compatible la versi\u00f3 %d</translation>\n+    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>La base de dades de blocs cont\u00e9 un bloc que sembla ser del futur. Aix\u00f2 pot ser degut a que la data i l'hora del vostre ordinador s'estableix incorrectament. Nom\u00e9s reconstru\u00efu la base de dades de blocs si esteu segur que la data i l'hora del vostre ordinador s\u00f3n correctes</translation>\n@@ -3588,6 +3692,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>No s'ha pogut escanejar novament la cartera durant la inicialitzaci\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>Ha fallat la verificaci\u00f3 de la base de dades</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>S'est\u00e0 important...</translation>\n@@ -3616,6 +3724,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Import inv\u00e0lid per -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n+        <translation>SQLiteDatabase: ha fallat la lectura de la base de dades. Error de verificaci\u00f3: %s</translation>\n+    </message>\n     <message>\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>El directori de blocs especificat \"%s\" no existeix.</translation>\n@@ -3712,6 +3824,14 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>Cal que torneu a construir la base de dades fent servir -reindex per tornar al mode no podat. Aix\u00f2 tornar\u00e0 a baixar la cadena de blocs sencera</translation>\n     </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>S'ha produ\u00eft un error intern fatal. Consulteu debug.log per a m\u00e9s detalls</translation>\n+    </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>L'espai de disc \u00e9s insuficient!</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>Error en llegir la base de dades, tancant.</translation>"
      },
      {
        "sha": "ae1ac8568b657cdc0f815e8b3b650675ad34a068",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 44,
        "deletions": 8,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -501,11 +501,11 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n     </message>\n     <message>\n         <source>Node window</source>\n-        <translation>Node Fenster</translation>\n+        <translation>Knotenfenster</translation>\n     </message>\n     <message>\n         <source>Open node debugging and diagnostic console</source>\n-        <translation>Konsole f\u00fcr Node Debugging und Diagnose \u00f6ffnen</translation>\n+        <translation>\u00d6ffne Knotenkonsole f\u00fcr Fehlersuche und Diagnose</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n@@ -537,11 +537,11 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n     </message>\n     <message>\n         <source>Close All Wallets...</source>\n-        <translation>Schlie\u00dfe alle Wallets...</translation>\n+        <translation>Schlie\u00dfe alle Brieftaschen...</translation>\n     </message>\n     <message>\n         <source>Close all wallets</source>\n-        <translation>Schlie\u00dfe alle Wallets</translation>\n+        <translation>Schlie\u00dfe alle Brieftaschen</translation>\n     </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n@@ -878,13 +878,17 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n     </message>\n     <message>\n         <source>Descriptor Wallet</source>\n-        <translation>Deskriptor Brieftasche</translation>\n+        <translation>Deskriptor-Brieftasche</translation>\n     </message>\n     <message>\n         <source>Create</source>\n         <translation>Erstellen</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Ohne SQLite-Unterst\u00fctzung (erforderlich f\u00fcr Deskriptor-Brieftaschen) kompiliert</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1358,7 +1362,7 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n     </message>\n     <message>\n         <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n-        <translation>Verbinde mit dem Bitcoin-Netzwerk \u00fcber einen separaten SOCKS5-Proxy f\u00fcr Tor-/Onion-Dienste.</translation>\n+        <translation>Verbinde mit dem Bitcoin-Netzwerk \u00fcber einen separaten SOCKS5-Proxy f\u00fcr Tor-Onion-Dienste.</translation>\n     </message>\n     <message>\n         <source>&amp;Third party transaction URLs</source>\n@@ -1967,7 +1971,7 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n     </message>\n     <message>\n         <source>Node window</source>\n-        <translation>Node Fenster</translation>\n+        <translation>Knotenfenster</translation>\n     </message>\n     <message>\n         <source>Current block height</source>\n@@ -3563,6 +3567,10 @@ Gehen Sie zu Datei &gt; \u00d6ffnen Sie die Brieftasche, um eine Brieftasche zu lade\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Lesen von %s fehlgeschlagen! Alle Schl\u00fcssel wurden korrekt gelesen, Transaktionsdaten bzw. Adressbucheintr\u00e4ge fehlen aber m\u00f6glicherweise oder sind inkorrekt.</translation>\n     </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation>Mehr als eine Onion-Bindungsadresse angegeben. Verwende %s f\u00fcr den automatisch erstellten Tor-Onion-Dienst.</translation>\n+    </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>Bitte korrigieren Sie die Datums- und Uhrzeiteinstellungen Ihres Computers, da %s ansonsten nicht ordnungsgem\u00e4\u00df funktionieren wird.</translation>\n@@ -3571,10 +3579,18 @@ Gehen Sie zu Datei &gt; \u00d6ffnen Sie die Brieftasche, um eine Brieftasche zu lade\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Wenn sie %s n\u00fctzlich finden, sind Helfer sehr gern gesehen. Besuchen Sie %s um mehr \u00fcber das Softwareprojekt zu erfahren.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLite-Datenbank: Anfertigung der Anweisung, die SQLite-Brieftaschen-Schema-Version abzurufen fehlgeschlagen: %s</translation>\n+    </message>\n     <message>\n         <source>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</source>\n         <translation>SQLiteDatabase: Konnte das Statement zum Abholen der Anwendungs-ID %s nicht vorbereiten.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</source>\n+        <translation>SQLite-Datenbank: Unbekannte SQLite-Brieftaschen-Schema-Version %d. Nur Version %d wird unterst\u00fctzt.</translation>\n+    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>Die Block-Datenbank enth\u00e4lt einen Block, der in der Zukunft auftaucht. Dies kann daran liegen, dass die Systemzeit Ihres Computers falsch eingestellt ist. Stellen Sie die Block-Datenbank nur wieder her, wenn Sie sich sicher sind, dass Ihre Systemzeit korrekt eingestellt ist.</translation>\n@@ -3684,6 +3700,10 @@ Gehen Sie zu Datei &gt; \u00d6ffnen Sie die Brieftasche, um eine Brieftasche zu lade\n         <source>Failed to verify database</source>\n         <translation>Verifizierung der Datenbank fehlgeschlagen</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Ignoriere doppeltes -wallet %s.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importiere...</translation>\n@@ -3712,6 +3732,22 @@ Gehen Sie zu Datei &gt; \u00d6ffnen Sie die Brieftasche, um eine Brieftasche zu lade\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Ung\u00fcltiger Betrag f\u00fcr -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to execute statement to verify database: %s</source>\n+        <translation>SQLite-Datenbank: Anweisung, die Datenbank zu verifizieren fehlgeschlagen: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLite-Datenbank: Abrufen der SQLite-Brieftaschen-Schema-Version fehlgeschlagen: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch the application id: %s</source>\n+        <translation>SQLite-Datenbank: Abrufen der Anwendungs-ID fehlgeschlagen: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare statement to verify database: %s</source>\n+        <translation>SQLite-Datenbank: Anfertigung der Anweisung zum Verifizieren der Datenbank fehlgeschlagen: %s</translation>\n+    </message>\n     <message>\n         <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n         <translation>Datenbank konnte nicht gelesen werden"
      },
      {
        "sha": "ec563201086ef4a4889241de6e5f21151f3ac903",
        "filename": "src/qt/locale/bitcoin_el.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_el.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_el.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -946,10 +946,6 @@\n         <source>Welcome to %1.</source>\n         <translation>\u039a\u03b1\u03bb\u03c9\u03c3\u03ae\u03c1\u03b8\u03b5\u03c2 \u03c3\u03c4\u03bf %1.</translation>\n     </message>\n-    <message>\n-        <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n-        <translation>\u038c\u03c4\u03b1\u03bd \u03ba\u03ac\u03bd\u03b5\u03c4\u03b5 \u03ba\u03bb\u03b9\u03ba \u03c3\u03c4\u03bf OK, \u03c4\u03bf %1 \u03b8\u03b1 \u03be\u03b5\u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03b9 \u03c4\u03b7 \u03bb\u03ae\u03c8\u03b7 \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03c4\u03b7\u03c2 \u03c0\u03bb\u03ae\u03c1\u03bf\u03c5\u03c2 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1\u03c2 \u03bc\u03c0\u03bb\u03bf\u03ba% 4 (%2GB) \u03b1\u03c1\u03c7\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c0\u03c1\u03ce\u03c4\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c3\u03c4\u03bf %3 \u03cc\u03c4\u03b1\u03bd \u03b1\u03c1\u03c7\u03b9\u03ba\u03ac \u03be\u03b5\u03ba\u03af\u03bd\u03b7\u03c3\u03b5 \u03c4\u03bf %4.</translation>\n-    </message>\n     <message>\n         <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n         <translation>\u0397 \u03b5\u03c0\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03b1\u03c5\u03c4\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03c1\u03cd\u03b8\u03bc\u03b9\u03c3\u03b7\u03c2 \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af \u03b5\u03ba \u03bd\u03ad\u03bf\u03c5 \u03bb\u03ae\u03c8\u03b7 \u03bf\u03bb\u03cc\u03ba\u03bb\u03b7\u03c1\u03bf\u03c5 \u03c4\u03bf\u03c5 \u03bc\u03c0\u03bb\u03bf\u03ba \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1\u03c2. \u0395\u03af\u03bd\u03b1\u03b9 \u03c0\u03b9\u03bf \u03b3\u03c1\u03ae\u03b3\u03bf\u03c1\u03bf \u03bd\u03b1 \u03ba\u03b1\u03c4\u03b5\u03b2\u03ac\u03c3\u03b5\u03c4\u03b5 \u03c0\u03c1\u03ce\u03c4\u03b1 \u03c4\u03b7\u03bd \u03c0\u03bb\u03ae\u03c1\u03b7 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1 \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03c4\u03b7\u03bd \u03ba\u03bb\u03b1\u03b4\u03ad\u03c8\u03b5\u03c4\u03b5 \u03b1\u03c1\u03b3\u03cc\u03c4\u03b5\u03c1\u03b1. \u0391\u03c0\u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b7\u03b3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b5\u03c2.</translation>"
      },
      {
        "sha": "358805c93caacd783da86ea8fb7e7b435d24ec45",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 135,
        "deletions": 2,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -69,6 +69,11 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Jen viaj Bitmon-adresoj por sendi pagojn. Zorge kontrolu la sumon kaj la alsendan adreson anta\u016d ol sendi.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>Jen viaj bitmonaj adresoj por ricevi pagojn. Estas konsilinde uzi apartan ricevan adreson por \u0109iu transakcio.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopii Adreson</translation>\n@@ -234,7 +239,11 @@\n </context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Ekzilita \u011cis</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -441,6 +450,22 @@\n         <source>Up to date</source>\n         <translation>\u011cisdata</translation>\n     </message>\n+    <message>\n+        <source>Open Wallet</source>\n+        <translation>Malfermi la Monujon</translation>\n+    </message>\n+    <message>\n+        <source>Open a wallet</source>\n+        <translation>Malfermi monujon</translation>\n+    </message>\n+    <message>\n+        <source>Close Wallet...</source>\n+        <translation>Fermi la Monujon...</translation>\n+    </message>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>Fermi monujon</translation>\n+    </message>\n     <message>\n         <source>Close All Wallets...</source>\n         <translation>Fermi \u0108iujn Monujojn...</translation>\n@@ -457,6 +482,10 @@\n         <source>&amp;Window</source>\n         <translation>&amp;Fenestro</translation>\n     </message>\n+    <message>\n+        <source>Zoom</source>\n+        <translation>Zomi</translation>\n+    </message>\n     <message>\n         <source>Main Window</source>\n         <translation>\u0108efa Fenestro</translation>\n@@ -679,6 +708,10 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>Krei monujon malsukcesis</translation>\n+    </message>\n     <message>\n         <source>Create wallet warning</source>\n         <translation>Averto pro krei monujon</translation>\n@@ -787,6 +820,10 @@\n         <source>version</source>\n         <translation>versio</translation>\n     </message>\n+    <message>\n+        <source>About %1</source>\n+        <translation>Pri %1</translation>\n+    </message>\n     <message>\n         <source>Command-line options</source>\n         <translation>Komandliniaj agordaj\u0302oj</translation>\n@@ -798,6 +835,10 @@\n         <source>Welcome</source>\n         <translation>Bonvenon</translation>\n     </message>\n+    <message>\n+        <source>Welcome to %1.</source>\n+        <translation>Bonvenon al %1.</translation>\n+    </message>\n     <message>\n         <source>Use the default data directory</source>\n         <translation>Uzi la defau\u0306ltan dosierujon por datumoj</translation>\n@@ -825,6 +866,10 @@\n         <source>Form</source>\n         <translation>Formularo</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Nekonata...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Horo de la lasta bloko</translation>\n@@ -1037,6 +1082,10 @@\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>Eblas, ke la informoj videblaj c\u0302i tie estas eksdataj. Via monujo au\u0306tomate sinkonig\u0302as kun la bitmona reto kiam ili konektig\u0302as, sed tiu procezo ankorau\u0306 ne finfarig\u0302is.</translation>\n     </message>\n+    <message>\n+        <source>Available:</source>\n+        <translation>Disponebla:</translation>\n+    </message>\n     <message>\n         <source>Your current spendable balance</source>\n         <translation>via aktuala elspezebla saldo</translation>\n@@ -1076,6 +1125,18 @@\n     </context>\n <context>\n     <name>PSBTOperationsDialog</name>\n+    <message>\n+        <source>Save...</source>\n+        <translation>Konservi...</translation>\n+    </message>\n+    <message>\n+        <source>Close</source>\n+        <translation>Fermi</translation>\n+    </message>\n+    <message>\n+        <source>Total Amount</source>\n+        <translation>Totala Sumo</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>a\u016d</translation>\n@@ -1137,10 +1198,34 @@\n         <source>N/A</source>\n         <translation>neaplikebla</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n second(s)</source>\n+        <translation><numerusform>%n sekundo</numerusform><numerusform>%n sekundoj</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n minute(s)</source>\n+        <translation><numerusform>%n minuto</numerusform><numerusform>%n minutoj</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n horo</numerusform><numerusform>%n horoj</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n tago</numerusform><numerusform>%n tagoj</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n semajno</numerusform><numerusform>%n semajnoj</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 kaj %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n jaro</numerusform><numerusform>%n jaroj</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 B</source>\n         <translation>%1 B</translation>\n@@ -1235,6 +1320,10 @@\n         <source>Block chain</source>\n         <translation>Blok\u0109eno</translation>\n     </message>\n+    <message>\n+        <source>Wallet: </source>\n+        <translation>Monujo:</translation>\n+    </message>\n     <message>\n         <source>Received</source>\n         <translation>Ricevita</translation>\n@@ -1299,7 +1388,35 @@\n         <source>Clear console</source>\n         <translation>Malplenigi konzolon</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;horo</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;tago</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;semajno</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;jaro</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban</source>\n+        <translation>&amp;Malekzili</translation>\n+    </message>\n+    <message>\n+        <source>never</source>\n+        <translation>neniam</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Nekonata</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n@@ -1349,6 +1466,10 @@\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address:</source>\n+        <translation>Adreso:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Sumo:</translation>\n@@ -1535,10 +1656,18 @@\n         <source>Transaction fee</source>\n         <translation>Krompago</translation>\n     </message>\n+    <message>\n+        <source>Total Amount</source>\n+        <translation>Totala Sumo</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>Konfirmi sendon de bitmono</translation>\n     </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Sendi</translation>\n+    </message>\n     <message>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>La pagenda sumo devas esti pli ol 0.</translation>\n@@ -2073,6 +2202,10 @@\n     </context>\n <context>\n     <name>WalletController</name>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>Fermi monujon</translation>\n+    </message>\n     <message>\n         <source>Close all wallets</source>\n         <translation>Fermi \u0109iujn monujojn</translation>"
      },
      {
        "sha": "01a12c4ca9c5ff158bf4a61ca9371c85f10f0dcd",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Click derecho para editar tu direcci\u00f3n o etiqueta</translation>\n+        <translation>Haga clic derecho para editar la direcci\u00f3n o la etiqueta</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -287,10 +287,6 @@ Signing is only possible with addresses of the type 'legacy'.</translation>\n         <source>Quit application</source>\n         <translation>Salir de la aplicaci\u00f3n</translation>\n     </message>\n-    <message>\n-        <source>&amp;About %1</source>\n-        <translation>%Acerca de%1</translation>\n-    </message>\n     <message>\n         <source>Show information about %1</source>\n         <translation>Mostrar informaci\u00f3n acerca de %1</translation>\n@@ -3574,6 +3570,10 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</translation>\n     </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</translation>\n+    </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</translation>\n@@ -3582,6 +3582,10 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Please contribute if you find %s useful. Visit %s for further information about the software.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</translation>\n+    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</translation>\n@@ -3686,6 +3690,10 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>Fall\u00f3 al volver a escanear la cartera durante la inicializaci\u00f3n</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>No se pudo verificar la base de datos</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importando...</translation>"
      },
      {
        "sha": "e926a08fae8431c1cb80ca107e8374cc9123021c",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>\u0628\u0631\u0627\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633 \u06cc\u0627 \u0628\u0631\u0686\u0633\u0628 \u0631\u0648\u06cc \u0622\u0646 \u0631\u0627\u0633\u062a \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f</translation>\n+        <translation>\u0628\u0631\u0627\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633 \u06cc\u0627 \u0628\u0631\u0686\u0633\u0628\u200c\u06af\u0630\u0627\u0631\u06cc \u0631\u0627\u0633\u062a\u200c\u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -15,7 +15,7 @@\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u0622\u062f\u0631\u0633  \u0627\u0646\u062a\u062e\u0627\u0628 \u0634\u062f\u0647 \u0628\u0647 \u062d\u0627\u0641\u0638\u0647  \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f \u0633\u06cc\u0633\u062a\u0645</translation>\n+        <translation>\u06a9\u067e\u06cc\u200c\u06a9\u0631\u062f\u0646 \u0622\u062f\u0631\u0633 \u0627\u0646\u062a\u062e\u0627\u0628\u200c\u0634\u062f\u0647 \u0628\u0647 \u062d\u0627\u0641\u0638\u0647\u0654 \u06a9\u0644\u06cc\u067e\u200c\u0628\u0648\u0631\u062f \u0633\u06cc\u0633\u062a\u0645</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n@@ -110,7 +110,7 @@\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(\u0628\u0631\u0686\u0633\u0628 \u0646\u062f\u0627\u0631\u062f)</translation>\n+        <translation>(\u0628\u062f\u0648\u0646 \u0628\u0631\u0686\u0633\u0628)</translation>\n     </message>\n </context>\n <context>"
      },
      {
        "sha": "607dbd64c5e3a078c5d94ad8147b74d0891377e8",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -884,7 +884,11 @@ Allekirjoitus on mahdollista vain 'legacy'-tyyppisill\u00e4 osoitteilla.</translatio\n         <source>Create</source>\n         <translation>Luo</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Koostettu ilman sqlite-tukea (vaaditaan descriptor-lompakoille)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -3691,6 +3695,10 @@ Siirry osioon Tiedosto &gt; Avaa lompakko ladataksesi lompakon.\n         <source>Failed to verify database</source>\n         <translation>Tietokannan todennus ep\u00e4onnistui</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Ohitetaan kaksois -lompakko %s.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Tuodaan...</translation>"
      },
      {
        "sha": "1ecb7be8913342f477e7393b77eeb764fc9b5971",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -477,6 +477,30 @@\n         <source>Up to date</source>\n         <translation>A\u017eurno</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>&amp;U\u010ditaj PSBT iz datoteke</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation>U\u010ditaj djelomi\u010dno potpisanu bitcoin transakciju</translation>\n+    </message>\n+    <message>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation>U\u010ditaj PSBT iz me\u0111uspremnika</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction from clipboard</source>\n+        <translation>U\u010ditaj djelomi\u010dno potpisanu bitcoin transakciju iz me\u0111uspremnika</translation>\n+    </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Konzola za \u010dvor</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Otvori konzolu za dijagnostiku i otklanjanje pogre\u0161aka \u010dvora.</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>Adrese za &amp;slanje</translation>\n@@ -485,6 +509,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>Adrese za &amp;primanje</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Otvori bitcoin: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Otvorite nov\u010danik</translation>\n@@ -501,6 +529,14 @@\n         <source>Close wallet</source>\n         <translation>Zatvorite nov\u010danik</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>Zatvori sve nov\u010danike...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Zatvori sve nov\u010danike</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Prika\u017eite pomo\u0107 programa %1 kako biste ispisali mogu\u0107e opcije preko terminala</translation>\n@@ -1758,6 +1794,10 @@\n         <source>User Agent</source>\n         <translation>Korisni\u010dki agent</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Konzola za \u010dvor</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Otvorite datoteku zapisa programa %1 iz trenutne podatkovne mape. Mo\u017ee potrajati nekoliko sekundi za velike datoteke zapisa.</translation>\n@@ -3097,6 +3137,10 @@ Napomena: Budu\u0107i da se naknada ra\u010duna po bajtu, naknada od \"100 sato\u0161ija po k\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>Dr\u017eanje nov\u010danik zatvorenim predugo mo\u017ee rezultirati ponovnom sinkronizacijom cijelog lanca ako je obrezivanje uklju\u010deno.</translation>\n     </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Zatvori sve nov\u010danike</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>"
      },
      {
        "sha": "17bc6045f24b861ec0cf9318340d3bc1b569cf21",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -23,19 +23,19 @@\n     </message>\n     <message>\n         <source>C&amp;lose</source>\n-        <translation>C&amp;hiudi</translation>\n+        <translation>Chiudi</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n         <translation>Rimuovi dalla lista l'indirizzo attualmente selezionato</translation>\n     </message>\n     <message>\n         <source>Enter address or label to search</source>\n-        <translation>Inserisci un indirizzo o un'etichetta da cercare</translation>\n+        <translation>Inserisci indirizzo o nominativo da cercare</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>Esporta su file i dati contenuti nella tabella corrente</translation>\n+        <translation>Trasferisci i dati contenuti nella tabella corrente in un file</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n@@ -47,15 +47,15 @@\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>Scegli l'indirizzo a cui inviare bitcoin</translation>\n+        <translation>Scegli l'indirizzo al quale inviare bitcoin</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation>Scegli l'indirizzo su cui ricevere bitcoin.</translation>\n+        <translation>Scegli l'indirizzo al quale ricevere bitcoin.</translation>\n     </message>\n     <message>\n         <source>C&amp;hoose</source>\n-        <translation>Sc&amp;egli</translation>\n+        <translation>Scegli</translation>\n     </message>\n     <message>\n         <source>Sending addresses</source>"
      },
      {
        "sha": "75924f3f175fceb4144ce5f2b1ca6dabad0f1da3",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -2396,10 +2396,18 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Are you sure you want to send?</source>\n         <translation>\u9001\u91d1\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b\uff1f</translation>\n     </message>\n+    <message>\n+        <source>Create Unsigned</source>\n+        <translation>\u672a\u7f72\u540d\u3067\u4f5c\u6210</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58</translation>\n     </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT\u306f\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\u307e\u305f\u306f</translation>\n@@ -3019,7 +3027,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Transaction status. Hover over this field to show number of confirmations.</source>\n-        <translation>\u53d6\u5f15\u306e\u72b6\u6cc1\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u4e0a\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u7f6e\u304f\u3068\u627f\u8a8d\u6570\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</translation>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u4e0a\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u5408\u308f\u305b\u308b\u3068\u627f\u8a8d\u6570\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</translation>\n     </message>\n     <message>\n         <source>Date and time that the transaction was received.</source>\n@@ -3311,6 +3319,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error</source>\n         <translation>\u30a8\u30e9\u30fc</translation>\n     </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7</translation>\n@@ -3490,6 +3502,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>\u521d\u671f\u5316\u4e2d\u306b\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u518d\u30b9\u30ad\u30e3\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u691c\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u30a4\u30f3\u30dd\u30fc\u30c8\u4e2d...</translation>"
      },
      {
        "sha": "16732b6d16bc3c2cbeedc54ec3d3df0052744c2b",
        "filename": "src/qt/locale/bitcoin_ko.ts",
        "status": "modified",
        "additions": 384,
        "deletions": 7,
        "changes": 391,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ko.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ko.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -7,15 +7,15 @@\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\uc0c8\ub85c\uc6b4 \uc9c0\uac11 \uc8fc\uc18c \uc0dd\uc131\ud558\uae30.</translation>\n+        <translation>\uc0c8 \uc8fc\uc18c \ub9cc\ub4e4\uae30</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n         <translation>\uc0c8 \ud56d\ubaa9(&amp;N)</translation>\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\ud604\uc7ac \uc120\ud0dd\ud55c \uc8fc\uc18c\ub97c \uc2dc\uc2a4\ud15c \ud074\ub9bd\ubcf4\ub4dc\ub85c \ubcf5\uc0ac\ud558\uae30</translation>\n+        <translation>\ud604\uc7ac \uc120\ud0dd\ud55c \uc8fc\uc18c\ub97c \uc2dc\uc2a4\ud15c \ud074\ub9bd\ubcf4\ub4dc\ub85c \ubcf5\uc0ac</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n@@ -69,6 +69,11 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\ube44\ud2b8\ucf54\uc778\uc744 \ubcf4\ub0b4\ub294 \uacc4\uc88c \uc8fc\uc18c\uc785\ub2c8\ub2e4. \ucf54\uc778\uc744 \ubcf4\ub0b4\uae30 \uc804\uc5d0 \uae08\uc561\uacfc \ubc1b\ub294 \uc8fc\uc18c\ub97c \ud56d\uc0c1 \ud655\uc778\ud558\uc138\uc694.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>\uc9c0\ubd88 \uc218\uc2e0\uc6a9 \ube44\ud2b8\ucf54\uc778\uc8fc\uc18c. \uc2e0\uaddc \uc8fc\uc18c\ub97c \ub9cc\ub4e4\ub824\uba74 'Create new receiving address' \ubc84\ud2bc\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. \uc0ac\uc778\uc740 '\ub808\uac70\uc2dc' \ud0c0\uc785\uc758 \uc8fc\uc18c\ub9cc \uac00\ub2a5\ud569\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>\uc8fc\uc18c \ubcf5\uc0ac(&amp;C)</translation>\n@@ -477,6 +482,22 @@\n         <source>Up to date</source>\n         <translation>\ucd5c\uc2e0\uc758</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>\ud30c\uc77c\ub85c\ubd80\ud130 PSBT \ubd88\ub7ec\uc624\uae30 (&amp;L)</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation>\ubd80\ubd84\uc801\uc73c\ub85c \uc11c\uba85\ub41c \ube44\ud2b8\ucf54\uc778 \ud2b8\ub799\uc820\uc158 \ubd88\ub7ec\uc624\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation>\ud074\ub9bd\ubcf4\ub4dc\ub85c\ubd80\ud130 PSBT \ubd88\ub7ec\uc624\uae30...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction from clipboard</source>\n+        <translation>\ud074\ub9bd\ubcf4\ub4dc\ub85c\ubd80\ud130 \ubd80\ubd84\uc801\uc73c\ub85c \uc11c\uba85\ub41c \ube44\ud2b8\ucf54\uc778 \ud2b8\ub79c\uc81d\uc158 \ubd88\ub7ec\uc624\uae30</translation>\n+    </message>\n     <message>\n         <source>Node window</source>\n         <translation>\ub178\ub4dc \ucc3d</translation>\n@@ -513,10 +534,26 @@\n         <source>Close wallet</source>\n         <translation>\uc9c0\uac11 \ub2eb\uae30</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>\ubaa8\ub4e0 \uc9c0\uac11 \ub2eb\uae30...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\ubaa8\ub4e0 \uc9c0\uac11 \ub2eb\uae30</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>\uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ube44\ud2b8\ucf54\uc778 \uba85\ub839\uc904 \uc635\uc158 \ubaa9\ub85d\uc744 \uac00\uc838\uc624\uae30 \uc704\ud574 %1 \ub3c4\uc6c0\ub9d0 \uba54\uc2dc\uc9c0\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>&amp;Mask values</source>\n+        <translation>\ub9c8\uc2a4\ud06c\uac12(&amp;M)</translation>\n+    </message>\n+    <message>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation>\uac1c\uc694 \ud0ed\uc5d0\uc11c \uac12 \ub9c8\uc2a4\ud0b9</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\uae30\ubcf8 \uc9c0\uac11</translation>\n@@ -625,6 +662,10 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>\uc9c0\uac11\uc774 &lt;b&gt;\uc554\ud638\ud654&lt;/b&gt; \ub418\uc5c8\uace0 \ud604\uc7ac &lt;b&gt;\uc7a0\uaca8\uc838&lt;/b&gt; \uc788\uc2b5\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>Original message:</source>\n+        <translation>\uc6d0\ubcf8 \uba54\uc138\uc9c0:</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n@@ -810,19 +851,39 @@\n         <source>Encrypt Wallet</source>\n         <translation>\uc9c0\uac11 \uc554\ud638\ud654</translation>\n     </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>\uc774 \uc9c0\uac11\uc5d0 \ub300\ud55c \uac1c\uc778 \ud0a4\ub97c \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. \uac1c\uc778 \ud0a4\uac00 \ube44\ud65c\uc131\ud654 \ub41c \uc9c0\uac11\uc5d0\ub294 \uac1c\uc778 \ud0a4\uac00 \uc5c6\uc73c\uba70 HD \uc2dc\ub4dc \ub610\ub294 \uac00\uc838\uc628 \uac1c\uc778 \ud0a4\ub97c \uac00\uc9c8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \uc2dc\uacc4 \uc804\uc6a9 \uc9c0\uac11\uc5d0 \uc774\uc0c1\uc801\uc785\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>Disable Private Keys</source>\n         <translation>\uac1c\uc778\ud0a4 \ube44\ud65c\uc131\ud654 \ud558\uae30</translation>\n     </message>\n+    <message>\n+        <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n+        <translation>\ube48 \uc9c0\uac11\uc744 \ub9cc\ub4dc\uc2ed\uc2dc\uc624. \ube48 \uc9c0\uac11\uc5d0\ub294 \ucc98\uc74c\uc5d0 \uac1c\uc778 \ud0a4\ub098 \uc2a4\ud06c\ub9bd\ud2b8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ub098\uc911\uc5d0 \uac1c\uc778 \ud0a4\uc640 \uc8fc\uc18c\ub97c \uac00\uc838 \uc624\uac70\ub098 HD \uc2dc\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>Make Blank Wallet</source>\n         <translation>\ube48 \uc9c0\uac11 \ub9cc\ub4e4\uae30</translation>\n     </message>\n+    <message>\n+        <source>Use descriptors for scriptPubKey management</source>\n+        <translation>scriptPubKey \uad00\ub9ac\ub97c \uc704\ud574 \ub514\uc2a4\ud06c\ub9bd\ud130\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624</translation>\n+    </message>\n+    <message>\n+        <source>Descriptor Wallet</source>\n+        <translation>\ub514\uc2a4\ud06c\ub9bd\ud130 \uc9c0\uac11</translation>\n+    </message>\n     <message>\n         <source>Create</source>\n         <translation>\uc0dd\uc131\ud558\uae30</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>sqlite \uc9c0\uc6d0 \uc5c6\uc774 \ucef4\ud30c\uc77c \ub428 (\ub514\uc2a4\ud06c\ub9bd\ud130 \uc9c0\uac11 \uc0ac\uc6a9\uc744 \uc704\ud574 \ud544\uc694\ud568)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -934,6 +995,10 @@\n         <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n         <translation>\ud655\uc778\uc744 \ud074\ub9ad\ud558\uba74 %1\uc740 \ubaa8\ub4e0 %4\ube14\ub85d \uccb4\uc778 (%2GB) \uc7a5\ubd80\ub97c %3 \uc548\uc5d0 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 \ucc98\ub9ac\ud558\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4.  \uc774\ub294 %4\uac00 \uc2dc\uc791\ub420 \ub54c \uc0dd\uc131\ub41c \uac00\uc7a5 \uc624\ub798\ub41c \ud2b8\ub79c\uc7ad\uc158\ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>\uc774 \uc124\uc815\uc744 \ub418\ub3cc\ub9ac\ub824\uba74 \uc804\uccb4 \ube14\ub85d \uccb4\uc778\uc744 \ub2e4\uc2dc \ub2e4\uc6b4\ub85c\ub4dc\ud574\uc57c\ud569\ub2c8\ub2e4. \uc804\uccb4 \uccb4\uc778\uc744 \uba3c\uc800 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 \ub098\uc911\uc5d0 \uc815\ub9ac\ud558\ub294 \uac83\uc774 \ub354 \ube60\ub985\ub2c8\ub2e4. \uc77c\ubd80 \uace0\uae09 \uae30\ub2a5\uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>\ucd08\uae30 \ub3d9\uae30\ud654\ub294 \ub9e4\uc6b0 \uc624\ub798 \uac78\ub9ac\uba70 \uc774\uc804\uc5d0\ub294 \ubcf8 \uc801 \uc5c6\ub294  \ud558\ub4dc\uc6e8\uc5b4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. %1\uc744 \uc2e4\ud589\ud560 \ub54c\ub9c8\ub2e4 \uc911\ub2e8 \ub41c \uacf3\uc5d0\uc11c \ub2e4\uc2dc \uacc4\uc18d \ub2e4\uc6b4\ub85c\ub4dc \ub429\ub2c8\ub2e4.</translation>\n@@ -1282,6 +1347,14 @@\n         <source>Whether to show coin control features or not.</source>\n         <translation>\ucf54\uc778 \uc0c1\uc138 \uc81c\uc5b4\uae30\ub2a5\uc5d0 \ub300\ud55c \ud45c\uc2dc \uc5ec\ubd80\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n+        <translation>Tor onion \uc11c\ube44\uc2a4\ub97c \uc704\ud55c \ubcc4\ub3c4\uc758 SOCKS5 \ud504\ub85d\uc2dc\ub97c \ud1b5\ud574 Bitcoin \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor onion services:</source>\n+        <translation>Tor onion \uc11c\ube44\uc2a4\ub97c \ud1b5\ud574 \ud53c\uc5b4\uc5d0 \ub3c4\ub2ec\ud558\ub824\uba74 \ubcc4\ub3c4\uc758 SOCKS &amp; 5 \ud504\ub85d\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.</translation>\n+    </message>\n     <message>\n         <source>&amp;Third party transaction URLs</source>\n         <translation>\uc81c 3\uc790 \uac70\ub798 URL\ub4e4 (&amp;T)</translation>\n@@ -1417,9 +1490,89 @@\n         <source>Current total balance in watch-only addresses</source>\n         <translation>\uc870\ud68c\uc804\uc6a9 \uc8fc\uc18c\uc758 \ud604\uc7ac \uc794\uc561</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</source>\n+        <translation>\uac1c\uc694 \ud0ed\uc5d0\uc11c \uac1c\uc778 \uc815\ubcf4 \ubcf4\ud638 \ubaa8\ub4dc\uac00 \ud65c\uc131\ud654\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uac12\uc758 \ub9c8\uc2a4\ud06c\ub97c \ud574\uc81c\ud558\ub824\uba74 \uc124\uc815-&gt; \ub9c8\uc2a4\ud06c \uac12\uc758 \uc120\ud0dd\uc744 \ucde8\uc18c\ud558\uc2ed\uc2dc\uc624.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PSBTOperationsDialog</name>\n+    <message>\n+        <source>Dialog</source>\n+        <translation>\ub2e4\uc774\uc5bc\ub85c\uadf8</translation>\n+    </message>\n+    <message>\n+        <source>Sign Tx</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \uc11c\uba85</translation>\n+    </message>\n+    <message>\n+        <source>Broadcast Tx</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \uc804\ud30c</translation>\n+    </message>\n+    <message>\n+        <source>Copy to Clipboard</source>\n+        <translation>\ud074\ub9bd\ubcf4\ub4dc\ub85c \ubcf5\uc0ac</translation>\n+    </message>\n+    <message>\n+        <source>Save...</source>\n+        <translation>\uc800\uc7a5...</translation>\n+    </message>\n+    <message>\n+        <source>Close</source>\n+        <translation>\ub2eb\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Failed to load transaction: %1</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \ubd88\ub7ec\uc624\uae30\uc5d0 \uc2e4\ud328: %1</translation>\n+    </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \uc11c\uba85 \uc2e4\ud328: %1</translation>\n+    </message>\n+    <message>\n+        <source>Could not sign any more inputs.</source>\n+        <translation>\ub354 \uc774\uc0c1 \ucd94\uac00\uc801\uc778 \uc778\ud48b\uc5d0 \ub300\ud574 \uc11c\uba85\ud560 \uc218 \uc5c6\uc74c</translation>\n+    </message>\n+    <message>\n+        <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n+        <translation>\uac70\ub798 \uc11c\uba85\uc644\ub8cc. \ud2b8\ub79c\uc7ad\uc158\uc744 \ube0c\ub85c\ub4dc \uce90\uc2a4\ud2b8 \ud560 \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown error processing transaction.</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \ucc98\ub9ac \uacfc\uc815\uc5d0 \uc54c \uc218 \uc5c6\ub294 \uc624\ub958</translation>\n+    </message>\n+    <message>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \uc804\ud30c\uc5d0 \uc2e4\ud328: %1</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>\ud074\ub9bd\ubcf4\ub4dc\ub85c PSBT\uac00 \ubcf5\uc0ac \ub428</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \ub370\uc774\ud130 \uc800\uc7a5 \ub428</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>\ubd80\ubd84\uc801\uc73c\ub85c \uc11c\uba85\ub41c \ube44\ud2b8\ucf54\uc778 \ud2b8\ub79c\uc81d\uc158 (\ubc14\uc774\ub108\ub9ac) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved to disk.</source>\n+        <translation>PSBT\uac00 \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5 \ub428</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation>%1 \uc5d0\uac8c %2 \ubcf4\ub0b4\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Unable to calculate transaction fee or total transaction amount.</source>\n+        <translation>\uac70\ub798 \uc218\uc218\ub8cc \ub610\ub294 \ucd1d \uac70\ub798 \uae08\uc561\uc744 \uacc4\uc0b0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>\uac70\ub798 \uc218\uc218\ub8cc \ub0a9\ubd80:</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>\ucd1d\uc561</translation>\n@@ -1428,7 +1581,35 @@\n         <source>or</source>\n         <translation>\ub610\ub294</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158\uc774 %1 \uac1c\uc758 \uc11c\uba85\uc548 \ub41c \uc778\ud48b\uc744 \uac16\uace0 \uc788\uc74c</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158\uc5d0 \uc778\ud48b\uc5d0 \ub300\ud55c \uc77c\ubd80 \uc815\ubcf4\uac00 \uc5c6\uc74c</translation>\n+    </message>\n+    <message>\n+        <source>Transaction still needs signature(s).</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158\uc5d0 \uc11c\uba85\uc774 \ub354 \ud544\uc694\ud568</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>(\uadf8\ub7ec\ub098 \uc774 \uc9c0\uac11\uc740 \ud2b8\ub79c\uc81d\uc158\uc5d0 \uc11c\uba85\uc774 \ubd88\uac00\ub2a5 \ud568)</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>(\uadf8\ub7ec\ub098 \uc774 \uc9c0\uac11\uc740 \uc801\uc808\ud55c \ud0a4\ub97c \uac16\uace0 \uc788\uc9c0 \uc54a\uc74c)</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158\uc774 \ubaa8\ub450 \uc11c\uba85\ub418\uc5c8\uace0, \uc804\ud30c \uc900\ube44 \ub428</translation>\n+    </message>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>\ud2b8\ub79c\uc7ad\uc158 \uc0c1\ud0dc \uc548 \uc54c\ub824\uc9d0</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1755,6 +1936,14 @@\n         <source>Synced Blocks</source>\n         <translation>\ub3d9\uae30\ud654\ub41c \ube14\ub85d</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>\ud53c\uc5b4 \uc120\ud0dd\uc744 \ub2e4\uc591 \ud654\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ub9e4\ud551 \ub41c \uc790\uc728 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>\ub9e4\ud551\ub41c AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>\uc720\uc800 \uc5d0\uc774\uc804\ud2b8</translation>\n@@ -1763,6 +1952,10 @@\n         <source>Node window</source>\n         <translation>\ub178\ub4dc \ucc3d</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>\ud604\uc7ac \ube14\ub85d \ub192\uc774</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>%1 \ub514\ubc84\uadf8 \ub85c\uadf8\ud30c\uc77c\uc744 \ud604\uc7ac \ub370\uc774\ud130 \ud3f4\ub354\uc5d0\uc11c \uc5fd\ub2c8\ub2e4. \uc6a9\ub7c9\uc774 \ud070 \ub85c\uadf8 \ud30c\uc77c\ub4e4\uc740 \uba87 \ucd08\uac00 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n@@ -1775,6 +1968,10 @@\n         <source>Increase font size</source>\n         <translation>\uae00\uc790 \ud06c\uae30 \ud655\ub300</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>\uad8c\ud55c</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>\uc11c\ube44\uc2a4</translation>\n@@ -1962,6 +2159,14 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>\uc694\uccad\ud560 \uae08\uc561 \uc785\ub825\uce78\uc73c\ub85c \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ube48 \uce78\uc73c\ub85c \ub450\uac70\ub098 \ud2b9\uc815 \uae08\uc561\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 0\uc744 \uc785\ub825\ud558\uc138\uc694.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>\uc0c8 \uc218\uc2e0 \uc8fc\uc18c\uc640 \uc5f0\uacb0\ud560 \uc120\ud0dd\uc801 \ub808\uc774\ube14 (\uc0ac\uc6a9\uc790\uac00 \uc1a1\uc7a5\uc744 \uc2dd\ubcc4\ud558\ub294 \ub370 \uc0ac\uc6a9\ud568). \uc9c0\ubd88 \uc694\uccad\uc5d0\ub3c4 \ucca8\ubd80\ub429\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>\uc9c0\ubd88 \uc694\uccad\uc5d0 \ucca8\ubd80\ub418\uace0 \ubc1c\uc2e0\uc790\uc5d0\uac8c \ud45c\uc2dc \ub420 \uc218\uc788\ub294 \uc120\ud0dd\uc801 \uba54\uc2dc\uc9c0\uc785\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>&amp;Create new receiving address</source>\n         <translation>&amp;\uc0c8 \ubc1b\uc744 \uc8fc\uc18c \uc0dd\uc131\ud558\uae30</translation>\n@@ -2022,13 +2227,29 @@\n         <source>Could not unlock wallet.</source>\n         <translation>\uc9c0\uac11\uc744 \uc7a0\uae08\ud574\uc81c \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>\uc0c8\ub85c\uc6b4 %1 \uc8fc\uc18c\ub97c \uc0dd\uc131 \ud560 \uc218 \uc5c6\uc74c</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Request payment to ...</source>\n+        <translation>...\uc5d0\uac8c \uacb0\uc81c \uc694\uccad</translation>\n+    </message>\n+    <message>\n+        <source>Address:</source>\n+        <translation>\uc8fc\uc18c:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>\uac70\ub798\uc561:</translation>\n     </message>\n+    <message>\n+        <source>Label:</source>\n+        <translation>\ub77c\ubca8:</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>\uba54\uc2dc\uc9c0:</translation>\n@@ -2275,6 +2496,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 (%2 blocks)</source>\n         <translation>%1(%2 \ube14\ub85d)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>\uc0ac\uc778\ub418\uc9c0 \uc54a\uc740 \uac83\uc744 \uc0dd\uc131</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation>%1 \uc9c0\uac11\uc5d0\uc11c</translation>\n@@ -2287,10 +2512,30 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 to %2</source>\n         <translation>%1\uc744(\ub97c) %2(\uc73c)\ub85c</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>\uc774 \uac70\ub798 \ucd08\uc548\uc744 \uc791\uc131 \ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\uc815\ub9d0\ub85c \ubcf4\ub0b4\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n     </message>\n+    <message>\n+        <source>Create Unsigned</source>\n+        <translation>\uc11c\uba85\ub418\uc9c0 \uc54a\uc740 \uac83\uc744 \uc0dd\uc131</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \ub370\uc774\ud130 \uc800\uc7a5 \ub428</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>\ubd80\ubd84\uc801\uc73c\ub85c \uc11c\uba85\ub41c \ube44\ud2b8\ucf54\uc778 \ud2b8\ub79c\uc81d\uc158 (\ubc14\uc774\ub108\ub9ac) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT \uc800\uc7a5 \ub428</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\ub610\ub294</translation>\n@@ -2323,6 +2568,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm send coins</source>\n         <translation>\ucf54\uc778 \uc804\uc1a1\uc744 \ud655\uc778</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>\uac70\ub798 \uc81c\uc548 \ud655\uc778</translation>\n+    </message>\n     <message>\n         <source>Send</source>\n         <translation>\ubcf4\ub0b4\uae30</translation>\n@@ -2426,6 +2675,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Remove this entry</source>\n         <translation>\uc785\ub825\ub41c \ud56d\ubaa9 \uc0ad\uc81c</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>\uc120\ud0dd\ud55c \ub2e8\uc704\ub85c \ubcf4\ub0bc \uc218\ub7c9</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>\uc218\uc218\ub8cc\uac00 \uc1a1\uae08\ub418\ub294 \uae08\uc561\uc5d0\uc11c \uacf5\uc81c\ub429\ub2c8\ub2e4. \uc218\ub839\uc790\ub294 \uae08\uc561 \ud544\ub4dc\uc5d0\uc11c \uc785\ub825\ud55c \uae08\uc561\ubcf4\ub2e4 \uc801\uc740 \uae08\uc561\uc744 \uc804\uc1a1\ubc1b\uac8c \ub429\ub2c8\ub2e4. \ubc1b\ub294 \uc0ac\ub78c\uc774 \uc5ec\ub7ec \uba85\uc778 \uacbd\uc6b0 \uc218\uc218\ub8cc\ub294 \uade0\ub4f1\ud558\uac8c \ub098\ub204\uc5b4\uc9d1\ub2c8\ub2e4.</translation>\n@@ -2552,6 +2805,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>\uba54\uc138\uc9c0\uc758 \uc11c\uba85\uc5d0 \uc0ac\uc6a9\ub41c \ube44\ud2b8\ucf54\uc778 \uc8fc\uc18c</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>\uac80\uc99d\ud560 \uc11c\uba85\ub41c \uba54\uc138\uc9c0</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>\uba54\uc138\uc9c0\uc758 \uc11c\uba85\ub418\uc5c8\uc744 \ub54c\uc758 \uc2dc\uadf8\ub2c8\ucc98</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>\uc785\ub825\ub41c \ube44\ud2b8\ucf54\uc778 \uc8fc\uc18c\ub85c \uba54\uc2dc\uc9c0\uac00 \uc11c\uba85\ub418\uc5c8\ub294\uc9c0 \uac80\uc99d\ud569\ub2c8\ub2e4</translation>\n@@ -3097,9 +3358,25 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>\ube14\ub85d\ucd95\uc18c\ub97c \ud558\uace0 \uc9c0\uac11\uc744 \ub108\ubb34 \uc624\ub7ab\ub3d9\uc548 \ub2eb\uc73c\uba74 \uccb4\uc778 \uc804\uccb4\ub97c \ub2e4\uc2dc \ub3d9\uae30\ud654\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\ubaa8\ub4e0 \uc9c0\uac11 \ub2eb\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation>\uc815\ub9d0\ub85c \ubaa8\ub4e0 \uc9c0\uac11\ub4e4\uc744 \ub2eb\uc73c\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n+    <message>\n+        <source>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</source>\n+        <translation>\uc9c0\uac11\uc774\ub85c\ub4dc\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n+\ud30c\uc77c&gt; \uc9c0\uac11 \uc5f4\uae30\ub85c \uc774\ub3d9\ud558\uc5ec \uc9c0\uac11\uc744\ub85c\ub4dc\ud569\ub2c8\ub2e4.\n+-\ub610\ub294-</translation>\n+    </message>\n     <message>\n         <source>Create a new wallet</source>\n         <translation>\uc0c8\ub85c\uc6b4 \uc9c0\uac11 \uc0dd\uc131\ud558\uae30</translation>\n@@ -3123,6 +3400,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Do you want to increase the fee?</source>\n         <translation>\uc218\uc218\ub8cc\ub97c \uc62c\ub9ac\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>\uc218\uc218\ub8cc\uac00 \uc778\uc0c1 \ub41c \uac70\ub798\ub97c \uc791\uc131 \ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>\ud604\uc7ac \uc218\uc218\ub8cc:</translation>\n@@ -3139,6 +3420,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm fee bump</source>\n         <translation>\uc218\uc218\ub8cc \uc0c1\ud5a5 \uc2b9\uc778</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>\uac70\ub798 \ucd08\uc548\uc744 \uc791\uc131\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>PSBT copied</source>\n         <translation>PSBT \ubcf5\uc0ac\ub428</translation>\n@@ -3170,6 +3455,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error</source>\n         <translation>\uc624\ub958</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>\ud074\ub9bd \ubcf4\ub4dc\uc5d0\uc11c PSBT\ub97c \ub514\ucf54\ub529 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4 (\uc798\ubabb\ub41c base64).</translation>\n+    </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>\ud2b8\ub79c\uc81d\uc158 \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>\ubd80\ubd84\uc801\uc73c\ub85c \uc11c\uba85\ub41c \ube44\ud2b8\ucf54\uc778 \ud2b8\ub79c\uc7ad\uc158 (* .psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation>PSBT \ud30c\uc77c\uc740 100MiB\ubcf4\ub2e4 \uc791\uc544\uc57c\ud569\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Unable to decode PSBT</source>\n+        <translation>PSBT\ub97c \ub514\ucf54\ub4dc \ud560 \uc218 \uc5c6\uc74c</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>\uc9c0\uac11 \ubc31\uc5c5</translation>\n@@ -3245,6 +3550,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>%s\uac00 \uc720\uc6a9\ud558\ub2e4\uace0 \uc0dd\uac01\ud55c\ub2e4\uba74 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uacf5\ud5cc\ud574\uc8fc\uc138\uc694. \uc774 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc5d0 \ub300\ud55c \ubcf4\ub2e4 \uc790\uc138\ud55c \uc815\ubcf4\ub294 %s\ub97c \ubc29\ubb38\ud574\uc8fc\uc2ed\uc2dc\uc624.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase : sqlite \uc9c0\uac11 \uc2a4\ud0a4\ub9c8 \ubc84\uc804\uc744 \uac00\uc838\uc624\ub294 \uc2e4\ud589\ubb38 \uc900\ube44\uc5d0 \uc2e4\ud328\ud568 : %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</source>\n+        <translation>SQLiteDatabase : \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 ID\ub97c \uac00\uc838\uc624\ub294 \uc2e4\ud589\ubb38 \uc900\ube44\uc5d0 \uc2e4\ud328\ud568 : %s</translation>\n+    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>\ube14\ub85d \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ubbf8\ub798\uc758 \ube14\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucef4\ud4e8\ud130\uc758 \ub0a0\uc9dc\uc640 \uc2dc\uac04\uc774 \uc62c\ubc14\ub974\uac8c \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc744\ub54c \ub098\ud0c0\ub0a0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc0ac\uc6a9\uc790\uc758 \ucef4\ud4e8\ud130\uc758 \ub0a0\uc9dc\uc640 \uc2dc\uac04\uc774 \uc62c\ubc14\ub974\ub2e4\uace0 \ud655\uc2e0\ud560 \ub54c\uc5d0\ub9cc \ube14\ub85d \ub370\uc774\ud130 \ubca0\uc774\uc2a4\uc758 \uc7ac\uad6c\uc131\uc744 \ud558\uc2ed\uc2dc\uc624</translation>\n@@ -3349,6 +3662,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>\uc9c0\uac11 \uc2a4\uce94 \uc624\ub958</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uac80\uc99d\ud560 \uc218 \uc5c6\uc74c</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\ubd88\ub7ec\uc624\ub294 \uc911...</translation>\n@@ -3377,6 +3694,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uae08\uc561 -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to execute statement to verify database: %s</source>\n+        <translation>SQLiteDatabase : \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ud655\uc778\ud558\ub294 \uc2e4\ud589\ubb38 \ucd9c\ub825\uc5d0 \uc2e4\ud328\ud568 : %s.</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase : sqlite \uc9c0\uac11 \uc2a4\ud0a4\ub9c8 \ubc84\uc804\uc744 \uac00\uc838\uc624\ub294\ub370 \uc2e4\ud328\ud568 : %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch the application id: %s</source>\n+        <translation>SQLiteDatabase: \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \uc544\uc774\ub514\ub97c \uac00\uc838\uc624\ub294\ub370 \uc2e4\ud328\ud568: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare statement to verify database: %s</source>\n+        <translation>SQLiteDatabase : \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ud655\uc778\ud558\ub294 \uc2e4\ud589\ubb38 \uc900\ube44\uc5d0 \uc2e4\ud328\ud568 : %s.</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unexpected application id. Expected %u, got %u</source>\n+        <translation>SQLiteDataBase: \uc608\uc0c1 \ubabb\ud55c \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \uc544\uc774\ub514. %u \uc774\uc5b4\uc57c\ud558\ub098, %u \ubc1b\uc74c</translation>\n+    </message>\n     <message>\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>\uc9c0\uc815\ud55c \ube14\ub85d \ub514\ub809\ud1a0\ub9ac \"%s\" \uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</translation>\n@@ -3457,6 +3794,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\uc624\ub958: \ub4e4\uc5b4\uc624\ub294 \uc5f0\uacb0\uc744 \ud5c8\uc6a9\ud558\ub294\ub370 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4 (listen returned error %s)</translation>\n     </message>\n+    <message>\n+        <source>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</source>\n+        <translation>%s\uac00 \uc190\uc0c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4. bitcoin-wallet\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc31\uc5c5\uc744 \uad6c\uc81c\ud558\uac70\ub098 \ubcf5\uc6d0\ud558\uc2ed\uc2dc\uc624.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</source>\n+        <translation>HD split\uc744 \ud558\uc9c0 \uc54a\uc740 \uc9c0\uac11\uc740 pre split keypool\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uc9c0 \uc54a\uace0\ub294 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc9c4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubc84\uc804 169900\ub098 \ubc84\uc804\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\ub294 \uac83\uc744 \uc0ac\uc6a9\ud574\uc8fc\uc138\uc694.</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n         <translation>\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uae08\uc561 -maxtxfee=&lt;amount&gt;: '%s' (\uac70\ub798\uac00 \ub9c9\ud788\ub294 \uc0c1\ud669\uc744 \ubc29\uc9c0\ud558\uac8c \uc704\ud574 \uc801\uc5b4\ub3c4 %s \uc758 \uc911\uacc4 \uc218\uc218\ub8cc\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4)</translation>\n@@ -3465,10 +3810,34 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>\uac70\ub798\uc561\uc774 \uc218\uc218\ub8cc\ub97c \uc9c0\ubd88\ud558\uae30\uc5d4 \ub108\ubb34 \uc791\uc2b5\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation>\uc9c0\uac11\uc774 \uc644\uc804\ud788 \uc885\ub8cc\ub418\uc9c0 \uc54a\uace0 \ucd5c\uc2e0 \ubc84\uc804\uc758 Berkeley DB \ube4c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub85c\ub4dc\ub41c \uacbd\uc6b0 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc9c0\uac11\uc744 \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub85c\ub4dc\ud55c \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.</translation>\n+    </message>\n+    <message>\n+        <source>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</source>\n+        <translation>\uc774\uac83\uc740 \uc77c\ubc18 \ucf54\uc778 \uc120\ud0dd\ubcf4\ub2e4 \ubd80\ubd84\uc801 \uc9c0\ucd9c \ud68c\ud53c\ub97c \uc6b0\uc120\uc2dc\ud558\uae30 \uc704\ud574 \uc9c0\ubd88\ud558\ub294 \ucd5c\ub300 \uac70\ub798 \uc218\uc218\ub8cc (\uc77c\ubc18 \uc218\uc218\ub8cc\uc5d0 \ucd94\uac00)\uc785\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</source>\n+        <translation>\uac70\ub798\uc5d0 \ubcc0\uacbd \uc8fc\uc18c\uac00 \ud544\uc694\ud558\uc9c0\ub9cc \uc0dd\uc131 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uba3c\uc800 keypoolrefill\uc5d0 \uc804\ud654\ud558\uc2ed\uc2dc\uc624.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>\ube14\ub85d \ucd95\uc18c \ubaa8\ub4dc\ub97c \ud574\uc81c\ud558\ub824\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc7ac\uad6c\uc131\ud558\uae30 \uc704\ud574 -reindex\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uba85\ub839\uc740 \uc804\uccb4 \ube14\ub85d\uccb4\uc778\uc744 \ub2e4\uc2dc \ub2e4\uc6b4\ub85c\ub4dc\ud569\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>\uce58\uba85\uc801 \ub0b4\ubd80 \uc624\ub958 \ubc1c\uc0dd. \uc0c1\uc138\ud55c \ub0b4\uc6a9\uc744 debug.log \uc5d0\uc11c \ud655\uc778\ud558\uc2ed\uc2dc\uc624</translation>\n+    </message>\n+    <message>\n+        <source>Cannot set -peerblockfilters without -blockfilterindex.</source>\n+        <translation>-blockfilterindex\ub97c -peerblockfilters \uc5c6\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c</translation>\n+    </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>\ub514\uc2a4\ud06c \uc6a9\ub7c9\uc774 \ubd80\uc871\ud568!</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>\ube14\ub85d \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ubd88\ub7ec\uc624\ub294\ub370 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4, \uc885\ub8cc\ub429\ub2c8\ub2e4.</translation>\n@@ -3481,6 +3850,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error: Disk space is low for %s</source>\n         <translation>\uc624\ub958: %s \ud558\uae30\uc5d4 \uc800\uc7a5\uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation>\uc624\ub958: \ud0a4\ud480\uc774 \ubc14\ub2e5\ub0a8, keypoolrefill\uc744 \uba3c\uc800 \ud638\ucd9c\ud560 \ud558\uc2ed\uc2dc\uc624</translation>\n+    </message>\n     <message>\n         <source>Invalid -onion address or hostname: '%s'</source>\n         <translation>\uc62c\ubc14\ub974\uc9c0 \uc54a\uc740 -onion \uc8fc\uc18c \ub610\ub294 \ud638\uc2a4\ud2b8 \uc774\ub984: '%s'</translation>\n@@ -3501,6 +3874,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>-whitebind: '%s' \ub97c \uc774\uc6a9\ud558\uc5ec \ud3ec\ud2b8\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</source>\n+        <translation>\ud504\ub85d\uc2dc \uc11c\ubc84\uac00 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. -proxy =&lt;ip&gt; \ub610\ub294 -proxy =&lt;ip:port&gt;\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.</translation>\n+    </message>\n     <message>\n         <source>Prune mode is incompatible with -blockfilterindex.</source>\n         <translation>\ube14\ub85d \ucd95\uc18c \ubaa8\ub4dc\ub294 -blockfileterindex\uc640 \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</translation>"
      },
      {
        "sha": "b905ab6dc2b743f99d809e63b20e70351e2116ab",
        "filename": "src/qt/locale/bitcoin_lv.ts",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_lv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_lv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -1,6 +1,10 @@\n <TS language=\"lv\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Spiediet labo peles klik\u0161\u0137i, lai labotu adresi vai birku</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Izveidot jaunu adresi</translation>\n@@ -61,6 +65,10 @@\n         <source>Receiving addresses</source>\n         <translation>Adre\u0161u sa\u0146em\u0161ana</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0160\u012bs ir j\u016bsu Bitcoin adreses, kuras izmantojamas maks\u0101jumu veik\u0161anai. Vienm\u0113r p\u0101rbaudiet summu un sa\u0146\u0113m\u0113ja adresi pirms mon\u0113tu nos\u016bt\u012b\u0161anas.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kop\u0113t adresi</translation>\n@@ -77,11 +85,19 @@\n         <source>Export Address List</source>\n         <translation>Eksport\u0113t Adre\u0161u Sarakstu</translation>\n     </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Ar komatiem atdal\u012bts fails (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>Eksport\u0113\u0161ana Neizdev\u0101s</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>M\u0113\u0123inot saglab\u0101t adre\u0161u sarakstu %1 rad\u0101s k\u013c\u016bda. M\u0113\u0123iniet v\u0113lreiz.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -123,10 +139,18 @@\n         <source>Encrypt wallet</source>\n         <translation>\u0160ifr\u0113t maci\u0146u</translation>\n     </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>Lai veiktu \u0161o darb\u012bbu, nepiecie\u0161ama j\u016bsu maci\u0146a slepen\u0101 fr\u0101ze maci\u0146a atv\u0113r\u0161anai.</translation>\n+    </message>\n     <message>\n         <source>Unlock wallet</source>\n         <translation>Atsl\u0113gt maci\u0146u</translation>\n     </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>Lai veiktu \u0161o darb\u012bbu, nepiecie\u0161ama j\u016bsu maci\u0146a slepen\u0101 fr\u0101ze maci\u0146a dekript\u0113\u0161anai.</translation>\n+    </message>\n     <message>\n         <source>Decrypt wallet</source>\n         <translation>At\u0161ifr\u0113t maci\u0146u</translation>\n@@ -147,6 +171,10 @@\n         <source>Wallet encrypted</source>\n         <translation>Maci\u0146\u0161 \u0161ifr\u0113ts</translation>\n     </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Maci\u0146u nepiecie\u0161ams \u0161ifr\u0113t.</translation>\n+    </message>\n     <message>\n         <source>Your wallet is now encrypted. </source>\n         <translation>Maci\u0146\u0161 tagad \u0161ifr\u0113ts</translation>\n@@ -1159,6 +1187,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Ar komatiem atdal\u012bts fails (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>Apstiprin\u0101ts</translation>"
      },
      {
        "sha": "c7ca619d5a231b9d3d799148e63796d17a758151",
        "filename": "src/qt/locale/bitcoin_ml.ts",
        "status": "modified",
        "additions": 489,
        "deletions": 6,
        "changes": 495,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ml.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ml.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ml.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -19,8 +19,7 @@\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n-        <translation>&amp; \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15\n-</translation>\n+        <translation>&amp; \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n     </message>\n     <message>\n         <source>C&amp;lose</source>\n@@ -30,6 +29,10 @@\n         <source>Delete the currently selected address from the list</source>\n         <translation>\u0d2a\u0d1f\u0d4d\u0d1f\u0d3f\u0d15\u0d2f\u0d3f\u0d7d \u0d28\u0d3f\u0d28\u0d4d\u0d28\u0d4d \u0d28\u0d3f\u0d32\u0d35\u0d3f\u0d7d \u0d24\u0d3f\u0d30\u0d1e\u0d4d\u0d1e\u0d46\u0d1f\u0d41\u0d24\u0d4d\u0d24 \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d07\u0d32\u0d4d\u0d32\u0d3e\u0d24\u0d3e\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n     </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>\u0d24\u0d3f\u0d30\u0d2f\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d4d \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d2e\u0d4b \u0d32\u0d47\u0d2c\u0d32\u0d4b \u0d28\u0d7d\u0d15\u0d41\u0d15</translation>\n+    </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation>\u0d28\u0d3f\u0d32\u0d35\u0d3f\u0d32\u0d46 \u0d1f\u0d3e\u0d2c\u0d3f\u0d7d \u0d12\u0d30\u0d41 \u0d2b\u0d2f\u0d32\u0d3f\u0d7d \u0d21\u0d3e\u0d31\u0d4d\u0d31 \u0d0e\u0d15\u0d4d\u0d38\u0d4d\u0d2a\u0d4b\u0d7c\u0d1f\u0d4d\u0d1f\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15</translation>\n@@ -66,6 +69,12 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u0d2a\u0d47\u0d2f\u0d4d\u0d2e\u0d46\u0d28\u0d4d\u0d31\u0d41\u0d15\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d41\u0d33\u0d4d\u0d33 \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d33\u0d3e\u0d23\u0d4d \u0d07\u0d35. \u0d28\u0d3e\u0d23\u0d2f\u0d19\u0d4d\u0d19\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d41\u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d \u0d0e\u0d32\u0d4d\u0d32\u0d3e\u0d2f\u0d4d\u0d2a\u0d4d\u0d2a\u0d4b\u0d34\u0d41\u0d02 \u0d24\u0d41\u0d15\u0d2f\u0d41\u0d02 \u0d38\u0d4d\u0d35\u0d40\u0d15\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28 \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d35\u0d41\u0d02 \u0d2a\u0d30\u0d3f\u0d36\u0d4b\u0d27\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>\u0d07\u0d35\u0d2f\u0d3e\u0d23\u0d4d \u0d2a\u0d23\u0d02  \u0d38\u0d4d\u0d35\u0d40\u0d15\u0d30\u0d3f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d3e\u0d2f\u0d41\u0d33\u0d4d\u0d33 \u0d24\u0d3e\u0d19\u0d4d\u0d15\u0d33\u0d41\u0d1f\u0d46 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e. \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e \u0d15\u0d42\u0d1f\u0d4d\u0d1f\u0d3f\u0d1a\u0d4d\u0d1a\u0d47\u0d7c\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d3e\u0d2f\u0d3f ' \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d15 ' \u0d0e\u0d28\u0d4d\u0d28 \u0d2c\u0d1f\u0d4d\u0d1f\u0d7a \u0d05\u0d2e\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15.\n+'\u0d32\u0d46\u0d17\u0d38\u0d3f' \u0d24\u0d30\u0d24\u0d4d\u0d24\u0d3f\u0d28\u0d4d\u0d31\u0d46 \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d33\u0d3f\u0d7d \u0d2e\u0d3e\u0d24\u0d4d\u0d30\u0d2e\u0d47 \u0d38\u0d48\u0d7b \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d3e\u0d7b \u0d15\u0d34\u0d3f\u0d2f\u0d42.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n@@ -164,24 +173,292 @@\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n         <translation>\u0d2e\u0d41\u0d28\u0d4d\u0d28\u0d31\u0d3f\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d: \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d4d \u0d2a\u0d3e\u0d38\u0d4d\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u0d38\u0d4d \u0d28\u0d37\u0d4d\u0d1f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d41\u0d15\u0d2f\u0d3e\u0d23\u0d46\u0d19\u0d4d\u0d15\u0d3f\u0d7d, \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d0e\u0d32\u0d4d\u0d32\u0d3e \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4a\u0d2f\u0d3f\u0d28\u0d41\u0d15\u0d33\u0d41\u0d02 \u0d28\u0d37\u0d4d\u0d1f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d41\u0d02!</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>\u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d3e\u0d7b \u0d06\u0d17\u0d4d\u0d30\u0d39\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41\u0d35\u0d46\u0d28\u0d4d\u0d28\u0d4d \u0d09\u0d31\u0d2a\u0d4d\u0d2a\u0d3e\u0d23\u0d4b?</translation>\n+    </message>\n     <message>\n         <source>Wallet encrypted</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d28\u0d4d\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41 \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d41 .</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d3f\u0d7d \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d2a\u0d3e\u0d38\u0d4d\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u0d38\u0d4d \u0d28\u0d7d\u0d15\u0d41\u0d15. &lt;br/&gt; &lt;b&gt; \u0d2a\u0d24\u0d4d\u0d24\u0d4b \u0d05\u0d24\u0d3f\u0d32\u0d27\u0d3f\u0d15\u0d2e\u0d4b \u0d31\u0d3e\u0d7b\u0d21\u0d02 \u0d2a\u0d4d\u0d30\u0d24\u0d40\u0d15\u0d19\u0d4d\u0d19\u0d7e &lt;/b&gt; \u0d05\u0d32\u0d4d\u0d32\u0d46\u0d19\u0d4d\u0d15\u0d3f\u0d7d  &lt;b&gt;\u0d0e\u0d1f\u0d4d\u0d1f\u0d4d \u0d05\u0d32\u0d4d\u0d32\u0d46\u0d19\u0d4d\u0d15\u0d3f\u0d7d \u0d05\u0d24\u0d3f\u0d7d \u0d15\u0d42\u0d1f\u0d41\u0d24\u0d7d \u0d35\u0d3e\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d7e &lt;/b&gt; \u0d12\u0d30\u0d41 \u0d2a\u0d3e\u0d38\u0d4d\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u0d38\u0d4d \u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15.</translation>\n+    </message>\n     <message>\n         <source>Enter the old passphrase and new passphrase for the wallet.</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d46\u0d31\u0d4d\u0d31\u0d3f\u0d28\u0d4d\u0d31\u0d46 \u0d2a\u0d34\u0d2f \u0d30\u0d39\u0d38\u0d4d\u0d2f\u0d2a\u0d26\u0d35\u0d41\u0d02 \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d30\u0d39\u0d38\u0d4d\u0d2f\u0d2a\u0d26\u0d35\u0d41\u0d02 \u0d28\u0d7d\u0d15\u0d41\u0d15.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d32\u0d42\u0d1f\u0d46 \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d15\u0d2e\u0d4d\u0d2a\u0d4d\u0d2f\u0d42\u0d1f\u0d4d\u0d1f\u0d31\u0d3f\u0d28\u0d46 \u0d2c\u0d3e\u0d27\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28 \u0d15\u0d4d\u0d37\u0d41\u0d26\u0d4d\u0d30\u0d35\u0d46\u0d2f\u0d7c\u200c \u0d2e\u0d4b\u0d37\u0d4d\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d7d\u200c \u0d28\u0d3f\u0d28\u0d4d\u0d28\u0d41\u0d02 \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d28\u0d41\u0d15\u0d33\u0d46 \u0d2a\u0d42\u0d7c\u0d23\u0d4d\u0d23\u0d2e\u0d3e\u0d2f\u0d3f \u0d38\u0d02\u0d30\u0d15\u0d4d\u0d37\u0d3f\u0d15\u0d4d\u0d15\u0d3e\u0d7b\u200c \u0d15\u0d34\u0d3f\u0d2f\u0d3f\u0d32\u0d4d\u0d32.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d28\u0d4d\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d3e\u0d7b \u0d2a\u0d4b\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41 .</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d28\u0d4d\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d3e\u0d7b \u0d2a\u0d4b\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41 .</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d28\u0d4d\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41 \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d41 .</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>\u0d2a\u0d4d\u0d30\u0d27\u0d3e\u0d28\u0d02: \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2b\u0d2f\u0d32\u0d3f\u0d7d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d \u0d28\u0d3f\u0d7c\u0d2e\u0d4d\u0d2e\u0d3f\u0d1a\u0d4d\u0d1a \u0d0f\u0d24\u0d46\u0d19\u0d4d\u0d15\u0d3f\u0d32\u0d41\u0d02 \u0d2c\u0d3e\u0d15\u0d4d\u0d15\u0d2a\u0d4d\u0d2a\u0d41\u0d15\u0d7e \u0d2a\u0d41\u0d24\u0d41\u0d24\u0d3e\u0d2f\u0d3f \u0d1c\u0d28\u0d31\u0d47\u0d31\u0d4d\u0d31\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d24, \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2b\u0d2f\u0d7d \u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d3f\u0d1a\u0d4d\u0d1a\u0d4d \u0d2e\u0d3e\u0d31\u0d4d\u0d31\u0d3f\u0d38\u0d4d\u0d25\u0d3e\u0d2a\u0d3f\u0d15\u0d4d\u0d15\u0d23\u0d02. \u0d38\u0d41\u0d30\u0d15\u0d4d\u0d37\u0d3e \u0d15\u0d3e\u0d30\u0d23\u0d19\u0d4d\u0d19\u0d33\u0d3e\u0d7d, \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d7e \u0d2a\u0d41\u0d24\u0d3f\u0d2f, \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d3f\u0d15\u0d4d\u0d15\u0d3e\u0d7b \u0d06\u0d30\u0d02\u0d2d\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d2e\u0d4d\u0d2a\u0d4b\u0d7e \u0d24\u0d28\u0d4d\u0d28\u0d46 \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d3e\u0d24\u0d4d\u0d24 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2b\u0d2f\u0d32\u0d3f\u0d28\u0d4d\u0d31\u0d46 \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d24\u0d4d\u0d24\u0d46 \u0d2c\u0d3e\u0d15\u0d4d\u0d15\u0d2a\u0d4d\u0d2a\u0d41\u0d15\u0d7e \u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d36\u0d42\u0d28\u0d4d\u0d2f\u0d2e\u0d3e\u0d15\u0d41\u0d02.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d28\u0d4d\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d \u0d2a\u0d30\u0d3e\u0d1c\u0d2f\u0d2a\u0d46\u0d1f\u0d4d\u0d1f\u0d41  .</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u0d06\u0d28\u0d4d\u0d24\u0d30\u0d3f\u0d15 \u0d2a\u0d3f\u0d36\u0d15\u0d4d \u0d15\u0d3e\u0d30\u0d23\u0d02 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d37\u0d7b \u0d2a\u0d30\u0d3e\u0d1c\u0d2f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d4d\u0d1f\u0d41. \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d3f\u0d1f\u0d4d\u0d1f\u0d3f\u0d32\u0d4d\u0d32.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>\u0d35\u0d3f\u0d24\u0d30\u0d23\u0d02 \u0d1a\u0d46\u0d2f\u0d4d\u0d24 \u0d2a\u0d3e\u0d38\u0d4d\u200c\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u200c\u0d38\u0d41\u0d15\u0d7e \u0d2a\u0d4a\u0d30\u0d41\u0d24\u0d4d\u0d24\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d41\u0d28\u0d4d\u0d28\u0d3f\u0d32\u0d4d\u0d32.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d05\u0d7a\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d4d \u0d2a\u0d30\u0d3e\u0d1c\u0d2f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d4d\u0d1f\u0d41</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d21\u0d40\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d37\u0d28\u0d3e\u0d2f\u0d3f \u0d28\u0d7d\u0d15\u0d3f\u0d2f \u0d2a\u0d3e\u0d38\u0d4d\u200c\u0d2b\u0d4d\u0d30\u0d47\u0d38\u0d4d \u0d24\u0d46\u0d31\u0d4d\u0d31\u0d3e\u0d23\u0d4d.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d21\u0d40\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d37\u0d7b \u0d2a\u0d30\u0d3e\u0d1c\u0d2f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d4d\u0d1f\u0d41</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2a\u0d3e\u0d38\u0d4d\u200c\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u200c\u0d38\u0d4d \u0d35\u0d3f\u0d1c\u0d2f\u0d15\u0d30\u0d2e\u0d3e\u0d2f\u0d3f \u0d2e\u0d3e\u0d31\u0d4d\u0d31\u0d3f.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u0d2e\u0d41\u0d28\u0d4d\u0d28\u0d31\u0d3f\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d: \u0d15\u0d4d\u0d2f\u0d3e\u0d2a\u0d4d\u200c\u0d38\u0d4d \u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d4d \u0d15\u0d40 \u0d13\u0d23\u0d3e\u0d23\u0d4d!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP / \u0d28\u0d46\u0d31\u0d4d\u0d31\u0d4d\u0d2e\u0d3e\u0d38\u0d4d\u0d15\u0d4d</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>\u0d35\u0d30\u0d46 \u0d28\u0d3f\u0d30\u0d4b\u0d27\u0d3f\u0d1a\u0d4d\u0d1a\u0d41</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Sign &amp;message...</source>\n+        <translation>\u0d38\u0d48\u0d28\u0d41\u0d02 \u0d38\u0d28\u0d4d\u0d26\u0d47\u0d36\u0d35\u0d41\u0d02 ...</translation>\n+    </message>\n+    <message>\n+        <source>Synchronizing with network...</source>\n+        <translation>\u0d28\u0d46\u0d31\u0d4d\u0d31\u0d4d\u200c\u0d35\u0d7c\u0d15\u0d4d\u0d15\u0d41\u0d2e\u0d3e\u0d2f\u0d3f \u0d38\u0d2e\u0d28\u0d4d\u0d35\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Overview</source>\n+        <translation>&amp;\u0d05\u0d35\u0d32\u0d4b\u0d15\u0d28\u0d02</translation>\n+    </message>\n+    <message>\n+        <source>Show general overview of wallet</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d3f\u0d28\u0d4d\u0d31\u0d46 \u0d2a\u0d4a\u0d24\u0d41\u0d35\u0d3e\u0d2f \u0d05\u0d35\u0d32\u0d4b\u0d15\u0d28\u0d02 \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Transactions</source>\n+        <translation>&amp;\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d7e </translation>\n+    </message>\n     <message>\n         <source>Browse transaction history</source>\n         <translation>\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d33\u0d41\u0d1f\u0d46 \u0d1a\u0d30\u0d3f\u0d24\u0d4d\u0d30\u0d02 \u0d2a\u0d30\u0d3f\u0d36\u0d4b\u0d27\u0d3f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n     </message>\n+    <message>\n+        <source>E&amp;xit</source>\n+        <translation>\u0d2a\u0d41\u0d31\u0d24\u0d4d\u0d24\u0d4d</translation>\n+    </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>\u0d05\u0d2a\u0d4d\u0d32\u0d3f\u0d15\u0d4d\u0d15\u0d47\u0d37\u0d7b \u0d09\u0d2a\u0d47\u0d15\u0d4d\u0d37\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>&amp; \u0d0f\u0d15\u0d26\u0d47\u0d36\u0d02%1</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>%1 \u0d28\u0d46\u0d15\u0d4d\u0d15\u0d41\u0d31\u0d3f\u0d1a\u0d4d\u0d1a\u0d41\u0d33\u0d4d\u0d33 \u0d35\u0d3f\u0d35\u0d30\u0d19\u0d4d\u0d19\u0d7e \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>About &amp;Qt</source>\n+        <translation>\u0d0f\u0d15\u0d26\u0d47\u0d36\u0d02&amp;Qt</translation>\n+    </message>\n+    <message>\n+        <source>Show information about Qt</source>\n+        <translation>Qt \u0d38\u0d02\u0d2c\u0d28\u0d4d\u0d27\u0d3f\u0d1a\u0d4d\u0d1a \u0d35\u0d3f\u0d35\u0d30\u0d19\u0d4d\u0d19\u0d7e \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Options...</source>\n+        <translation>&amp;\u0d13\u0d2a\u0d4d\u0d37\u0d28\u0d41\u0d15\u0d7e ...</translation>\n+    </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>%1 \u0d28\u0d3e\u0d2f\u0d41\u0d33\u0d4d\u0d33 \u0d15\u0d4b\u0d7a\u0d2b\u0d3f\u0d17\u0d31\u0d47\u0d37\u0d7b \u0d13\u0d2a\u0d4d\u0d37\u0d28\u0d41\u0d15\u0d7e \u0d2a\u0d30\u0d3f\u0d37\u0d4d\u200c\u0d15\u0d4d\u0d15\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Encrypt Wallet...</source>\n+        <translation>&amp;\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15 ...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Backup Wallet...</source>\n+        <translation>&amp;\u0d2c\u0d3e\u0d15\u0d4d\u0d15\u0d2a\u0d4d\u0d2a\u0d4d \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d ...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Change Passphrase...</source>\n+        <translation>&amp;\u0d2a\u0d3e\u0d38\u0d4d\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u0d38\u0d4d \u0d2e\u0d3e\u0d31\u0d4d\u0d31\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>\u0d24\u0d41\u0d31\u0d15\u0d4d\u0d15\u0d41\u0d15 &amp;URI ...</translation>\n+    </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d  \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15 :</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u0d12\u0d30\u0d41 \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Wallet:</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d:</translation>\n+    </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u0d28\u0d46\u0d31\u0d4d\u0d31\u0d4d\u200c\u0d35\u0d7c\u0d15\u0d4d\u0d15\u0d4d \u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d02 \u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d30\u0d39\u0d3f\u0d24\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3e\u0d7b \u0d15\u0d4d\u0d32\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>\u0d28\u0d46\u0d31\u0d4d\u0d31\u0d4d\u200c\u0d35\u0d7c\u0d15\u0d4d\u0d15\u0d4d \u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d02 \u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d30\u0d39\u0d3f\u0d24\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3f.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u0d28\u0d46\u0d31\u0d4d\u0d31\u0d4d\u200c\u0d35\u0d7c\u0d15\u0d4d\u0d15\u0d4d \u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d02 \u0d35\u0d40\u0d23\u0d4d\u0d1f\u0d41\u0d02 \u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d15\u0d4d\u0d37\u0d2e\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3e\u0d7b \u0d15\u0d4d\u0d32\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15.</translation>\n+    </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>\u0d24\u0d32\u0d15\u0d4d\u0d15\u0d46\u0d1f\u0d4d\u0d1f\u0d41\u0d15\u0d7e \u0d38\u0d2e\u0d28\u0d4d\u0d35\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41 (%1%) ...</translation>\n+    </message>\n+    <message>\n+        <source>Reindexing blocks on disk...</source>\n+        <translation>\u0d21\u0d3f\u0d38\u0d4d\u0d15\u0d3f\u0d32\u0d46 \u0d2c\u0d4d\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d7e \u0d35\u0d40\u0d23\u0d4d\u0d1f\u0d41\u0d02 \u0d38\u0d2e\u0d28\u0d4d\u0d35\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n+    </message>\n+    <message>\n+        <source>Proxy is &lt;b&gt;enabled&lt;/b&gt;: %1</source>\n+        <translation>\u0d2a\u0d4d\u0d30\u0d4b\u0d15\u0d4d\u0d38\u0d3f \u0d06\u0d23\u0d4d&lt;b&gt;\u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d15\u0d4d\u0d37\u0d2e\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3f&lt;/b&gt;:%1</translation>\n+    </message>\n+    <message>\n+        <source>Send coins to a Bitcoin address</source>\n+        <translation>\u0d12\u0d30\u0d41 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d24\u0d4d\u0d24\u0d3f\u0d32\u0d47\u0d15\u0d4d\u0d15\u0d4d \u0d28\u0d3e\u0d23\u0d2f\u0d19\u0d4d\u0d19\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Backup wallet to another location</source>\n+        <translation>\u0d2e\u0d31\u0d4d\u0d31\u0d4a\u0d30\u0d41 \u0d38\u0d4d\u0d25\u0d32\u0d24\u0d4d\u0d24\u0d47\u0d15\u0d4d\u0d15\u0d4d \u0d2c\u0d3e\u0d15\u0d4d\u0d15\u0d2a\u0d4d\u0d2a\u0d4d \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d</translation>\n+    </message>\n+    <message>\n+        <source>Change the passphrase used for wallet encryption</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d37\u0d28\u0d3e\u0d2f\u0d3f \u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28 \u0d2a\u0d3e\u0d38\u0d4d\u200c\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u200c\u0d38\u0d4d \u0d2e\u0d3e\u0d31\u0d4d\u0d31\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Verify message...</source>\n+        <translation>&amp;Verify \u0d38\u0d28\u0d4d\u0d26\u0d47\u0d36\u0d02  ...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;\u0d05\u0d2f\u0d2f\u0d4d\u200c\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receive</source>\n+        <translation>&amp;\u0d38\u0d4d\u0d35\u0d40\u0d15\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>&amp;\u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15/ \u0d2e\u0d31\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Show or hide the main Window</source>\n+        <translation>\u0d2a\u0d4d\u0d30\u0d27\u0d3e\u0d28 \u0d35\u0d3f\u0d7b\u200c\u0d21\u0d4b \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15 \u0d05\u0d32\u0d4d\u0d32\u0d46\u0d19\u0d4d\u0d15\u0d3f\u0d7d\u200c \u0d2e\u0d31\u0d2f\u0d4d\u200c\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the private keys that belong to your wallet</source>\n+        <translation>\u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d3f\u0d28\u0d4d\u0d31\u0d46 \u0d38\u0d4d\u0d35\u0d15\u0d3e\u0d30\u0d4d\u0d2f \u0d15\u0d40\u0d15\u0d7e \u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n+        <translation>\u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e \u0d38\u0d4d\u0d35\u0d28\u0d4d\u0d24\u0d2e\u0d3e\u0d23\u0d46\u0d28\u0d4d\u0d28\u0d4d \u0d24\u0d46\u0d33\u0d3f\u0d2f\u0d3f\u0d15\u0d4d\u0d15\u0d3e\u0d7b \u0d38\u0d28\u0d4d\u0d26\u0d47\u0d36\u0d19\u0d4d\u0d19\u0d7e \u0d12\u0d2a\u0d4d\u0d2a\u0d3f\u0d1f\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n+        <translation>\u0d28\u0d3f\u0d7c\u0d26\u0d4d\u0d26\u0d3f\u0d37\u0d4d\u0d1f \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d33\u0d3f\u0d7d \u0d38\u0d28\u0d4d\u0d26\u0d47\u0d36\u0d19\u0d4d\u0d19\u0d7e \u0d12\u0d2a\u0d4d\u0d2a\u0d3f\u0d1f\u0d4d\u0d1f\u0d3f\u0d1f\u0d4d\u0d1f\u0d41\u0d23\u0d4d\u0d1f\u0d46\u0d28\u0d4d\u0d28\u0d4d \u0d09\u0d31\u0d2a\u0d4d\u0d2a\u0d3e\u0d15\u0d4d\u0d15\u0d3e\u0d7b \u0d38\u0d4d\u0d25\u0d3f\u0d30\u0d40\u0d15\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;File</source>\n+        <translation>&amp; \u0d2b\u0d2f\u0d7d</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>&amp;\u0d15\u0d4d\u0d30\u0d2e\u0d40\u0d15\u0d30\u0d23\u0d19\u0d4d\u0d19\u0d7e</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Help</source>\n+        <translation>&amp;\u0d38\u0d39\u0d3e\u0d2f\u0d02</translation>\n+    </message>\n+    <message>\n+        <source>Tabs toolbar</source>\n+        <translation>\u0d1f\u0d3e\u0d2c\u0d41\u0d15\u0d33\u0d41\u0d1f\u0d46 \u0d1f\u0d42\u0d7e\u0d2c\u0d3e\u0d7c</translation>\n+    </message>\n+    <message>\n+        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n+        <translation>\u0d2a\u0d47\u0d2f\u0d4d\u200c\u0d2e\u0d46\u0d28\u0d4d\u0d31\u0d41\u0d15\u0d7e \u0d05\u0d2d\u0d4d\u0d2f\u0d7c\u0d24\u0d4d\u0d25\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15 (QR \u0d15\u0d4b\u0d21\u0d41\u0d15\u0d33\u0d41\u0d02 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d28\u0d41\u0d02 \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41: URI- \u0d15\u0d7e)</translation>\n+    </message>\n+    <message>\n+        <source>Show the list of used sending addresses and labels</source>\n+        <translation>\u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d3f\u0d1a\u0d4d\u0d1a \u0d05\u0d2f\u0d1a\u0d4d\u0d1a \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46\u0d2f\u0d41\u0d02 \u0d32\u0d47\u0d2c\u0d32\u0d41\u0d15\u0d33\u0d41\u0d1f\u0d46\u0d2f\u0d41\u0d02 \u0d2a\u0d1f\u0d4d\u0d1f\u0d3f\u0d15 \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Show the list of used receiving addresses and labels</source>\n+        <translation>\u0d09\u0d2a\u0d2f\u0d4b\u0d17\u0d3f\u0d1a\u0d4d\u0d1a \u0d38\u0d4d\u0d35\u0d40\u0d15\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28 \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46\u0d2f\u0d41\u0d02 \u0d32\u0d47\u0d2c\u0d32\u0d41\u0d15\u0d33\u0d41\u0d1f\u0d46\u0d2f\u0d41\u0d02 \u0d2a\u0d1f\u0d4d\u0d1f\u0d3f\u0d15 \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Command-line options</source>\n+        <translation>&amp;\u0d15\u0d2e\u0d3e\u0d7b\u0d21\u0d4d-\u0d32\u0d48\u0d7b \u0d13\u0d2a\u0d4d\u0d37\u0d28\u0d41\u0d15\u0d7e</translation>\n+    </message>\n+    <message>\n+        <source>Indexing blocks on disk...</source>\n+        <translation>\u0d21\u0d3f\u0d38\u0d4d\u0d15\u0d3f\u0d32\u0d46 \u0d2c\u0d4d\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d7e \u0d07\u0d7b\u0d21\u0d46\u0d15\u0d4d\u0d38\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n+    </message>\n+    <message>\n+        <source>Processing blocks on disk...</source>\n+        <translation>\u0d21\u0d3f\u0d38\u0d4d\u0d15\u0d3f\u0d7d \u0d2c\u0d4d\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d7e \u0d2a\u0d4d\u0d30\u0d4b\u0d38\u0d38\u0d4d\u0d38\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d4d \u0d1a\u0d30\u0d3f\u0d24\u0d4d\u0d30\u0d24\u0d4d\u0d24\u0d3f\u0d28\u0d4d\u0d31\u0d46 %n \u0d2c\u0d4d\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d7e \u0d2a\u0d4d\u0d30\u0d4b\u0d38\u0d38\u0d4d\u0d38\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41.</numerusform><numerusform>\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d4d \u0d1a\u0d30\u0d3f\u0d24\u0d4d\u0d30\u0d24\u0d4d\u0d24\u0d3f\u0d28\u0d4d\u0d31\u0d46 %n \u0d2c\u0d4d\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d7e \u0d2a\u0d4d\u0d30\u0d4b\u0d38\u0d38\u0d4d\u0d38\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41.</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Last received block was generated %1 ago.</source>\n+        <translation>\u0d05\u0d35\u0d38\u0d3e\u0d28\u0d02 \u0d32\u0d2d\u0d3f\u0d1a\u0d4d\u0d1a \u0d2c\u0d4d\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d4d %1 \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d1a\u0d4d\u0d1a\u0d41.</translation>\n+    </message>\n+    <message>\n+        <source>Transactions after this will not yet be visible.</source>\n+        <translation>\u0d07\u0d24\u0d3f\u0d28\u0d41\u0d36\u0d47\u0d37\u0d2e\u0d41\u0d33\u0d4d\u0d33 \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d7e \u0d07\u0d24\u0d41\u0d35\u0d30\u0d46 \u0d26\u0d43\u0d36\u0d4d\u0d2f\u0d2e\u0d3e\u0d15\u0d3f\u0d32\u0d4d\u0d32.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u0d2a\u0d3f\u0d36\u0d15\u0d4d </translation>\n@@ -194,6 +471,46 @@\n         <source>Information</source>\n         <translation>\u0d35\u0d3f\u0d35\u0d30\u0d02 </translation>\n     </message>\n+    <message>\n+        <source>Up to date</source>\n+        <translation>\u0d15\u0d3e\u0d32\u0d3f\u0d15\u0d2e\u0d3e\u0d23\u0d4d</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>&amp;\u0d2b\u0d2f\u0d32\u0d3f\u0d7d \u0d28\u0d3f\u0d28\u0d4d\u0d28\u0d4d PSBT \u0d32\u0d4b\u0d21\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15 ...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation>\u0d2d\u0d3e\u0d17\u0d3f\u0d15\u0d2e\u0d3e\u0d2f\u0d3f \u0d12\u0d2a\u0d4d\u0d2a\u0d3f\u0d1f\u0d4d\u0d1f \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d4d \u0d32\u0d4b\u0d21\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation>\u0d15\u0d4d\u0d32\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d\u0d2c\u0d4b\u0d7c\u0d21\u0d3f\u0d7d \u0d28\u0d3f\u0d28\u0d4d\u0d28\u0d4d PSBT \u0d32\u0d4b\u0d21\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15 ...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction from clipboard</source>\n+        <translation>\u0d15\u0d4d\u0d32\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d\u0d2c\u0d4b\u0d7c\u0d21\u0d3f\u0d7d \u0d28\u0d3f\u0d28\u0d4d\u0d28\u0d4d \u0d2d\u0d3e\u0d17\u0d3f\u0d15\u0d2e\u0d3e\u0d2f\u0d3f \u0d12\u0d2a\u0d4d\u0d2a\u0d3f\u0d1f\u0d4d\u0d1f \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d4d \u0d32\u0d4b\u0d21\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u0d28\u0d4b\u0d21\u0d4d \u0d35\u0d3f\u0d7b\u0d21\u0d4b</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>\u0d28\u0d4b\u0d21\u0d4d \u0d21\u0d40\u0d2c\u0d17\u0d4d\u0d17\u0d3f\u0d02\u0d17\u0d41\u0d02 \u0d21\u0d2f\u0d17\u0d4d\u0d28\u0d4b\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d3f\u0d15\u0d4d \u0d15\u0d7a\u0d38\u0d4b\u0d33\u0d41\u0d02 \u0d24\u0d41\u0d31\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Sending addresses</source>\n+        <translation>&amp;\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses</source>\n+        <translation>&amp;\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41</translation>\n+    </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>\u0d12\u0d30\u0d41 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d24\u0d41\u0d31\u0d15\u0d4d\u0d15\u0d41\u0d15: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d24\u0d41\u0d31\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n@@ -210,6 +527,26 @@\n         <source>Close wallet</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d41\u0d15 </translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>\u0d0e\u0d32\u0d4d\u0d32\u0d3e \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d41\u0d15\u0d33\u0d41\u0d02 \u0d05\u0d1f\u0d2f\u0d4d\u200c\u0d15\u0d4d\u0d15\u0d41\u0d15 ...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\u0d0e\u0d32\u0d4d\u0d32\u0d3e \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d41\u0d15\u0d33\u0d41\u0d02 \u0d05\u0d1f\u0d2f\u0d4d\u200c\u0d15\u0d4d\u0d15\u0d41\u0d15 ...</translation>\n+    </message>\n+    <message>\n+        <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n+        <translation>\u0d38\u0d3e\u0d27\u0d4d\u0d2f\u0d2e\u0d3e\u0d2f \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d15\u0d2e\u0d3e\u0d7b\u0d21\u0d4d-\u0d32\u0d48\u0d7b \u0d13\u0d2a\u0d4d\u0d37\u0d28\u0d41\u0d15\u0d33\u0d41\u0d33\u0d4d\u0d33 \u0d12\u0d30\u0d41 \u0d32\u0d3f\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d32\u0d2d\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d4d %1 \u0d38\u0d39\u0d3e\u0d2f \u0d38\u0d28\u0d4d\u0d26\u0d47\u0d36\u0d02 \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Mask values</source>\n+        <translation>&amp;\u0d2e\u0d3e\u0d38\u0d4d\u0d15\u0d4d \u0d2e\u0d42\u0d32\u0d4d\u0d2f\u0d19\u0d4d\u0d19\u0d7e</translation>\n+    </message>\n+    <message>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation>\u0d05\u0d35\u0d32\u0d4b\u0d15\u0d28 \u0d1f\u0d3e\u0d2c\u0d3f\u0d7d \u0d2e\u0d42\u0d32\u0d4d\u0d2f\u0d19\u0d4d\u0d19\u0d7e \u0d2e\u0d3e\u0d38\u0d4d\u0d15\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d30\u0d02 \u0d06\u0d2f \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d</translation>\n@@ -218,6 +555,10 @@\n         <source>No wallets available</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d12\u0d28\u0d4d\u0d28\u0d41\u0d02 \u0d32\u0d2d\u0d4d\u0d2f\u0d02 \u0d05\u0d32\u0d4d\u0d32 </translation>\n     </message>\n+    <message>\n+        <source>&amp;Window</source>\n+        <translation>&amp;\u0d1c\u0d3e\u0d32\u0d15\u0d02 </translation>\n+    </message>\n     <message>\n         <source>Minimize</source>\n         <translation>\u0d1a\u0d46\u0d31\u0d41\u0d24\u0d3e\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n@@ -230,10 +571,18 @@\n         <source>Main Window</source>\n         <translation>\u0d2e\u0d41\u0d16\u0d4d\u0d2f \u0d1c\u0d3e\u0d32\u0d15\u0d02 </translation>\n     </message>\n+    <message>\n+        <source>%1 client</source>\n+        <translation>%1 \u0d15\u0d4d\u0d32\u0d2f\u0d28\u0d4d\u0d31\u0d4d</translation>\n+    </message>\n     <message>\n         <source>Connecting to peers...</source>\n         <translation>\u0d38\u0d41\u0d39\u0d43\u0d24\u0d4d\u0d24\u0d41\u0d15\u0d4d\u0d15\u0d33\u0d41\u0d02 \u0d06\u0d2f\u0d3f \u0d15\u0d23\u0d15\u0d4d\u0d1f\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n     </message>\n+    <message>\n+        <source>Catching up...</source>\n+        <translation>\u0d15\u0d23\u0d4d\u0d1f\u0d41\u0d2a\u0d3f\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n+    </message>\n     <message>\n         <source>Error: %1</source>\n         <translation>\u0d24\u0d46\u0d31\u0d4d\u0d31\u0d4d : %1 </translation>\n@@ -258,6 +607,12 @@\n         <source>Wallet: %1\n </source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d: %1 \n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\u0d24\u0d30\u0d19\u0d4d\u0d19\u0d7e: %1\n </translation>\n     </message>\n     <message>\n@@ -280,7 +635,35 @@\n         <source>Incoming transaction</source>\n         <translation>\u0d35\u0d30\u0d35\u0d4d\u0d35\u0d4d \u0d35\u0d46\u0d1a\u0d4d\u0d1a \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d7e </translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>HD key generation is &lt;b&gt;enabled&lt;/b&gt;</source>\n+        <translation>\u0d0e\u0d1a\u0d4d\u0d1a\u0d4d\u0d21\u0d3f \u0d15\u0d40 \u0d1c\u0d28\u0d31\u0d47\u0d37\u0d7b&lt;b&gt;\u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d15\u0d4d\u0d37\u0d2e\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3f&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>HD key generation is &lt;b&gt;disabled&lt;/b&gt;</source>\n+        <translation>\u0d0e\u0d1a\u0d4d\u0d1a\u0d4d\u0d21\u0d3f \u0d15\u0d40 \u0d1c\u0d28\u0d31\u0d47\u0d37\u0d7b&lt;b&gt;\u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d30\u0d39\u0d3f\u0d24\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3f&lt;/b&gt;`</translation>\n+    </message>\n+    <message>\n+        <source>Private key &lt;b&gt;disabled&lt;/b&gt;</source>\n+        <translation>\u0d38\u0d4d\u0d35\u0d15\u0d3e\u0d30\u0d4d\u0d2f \u0d15\u0d40&lt;b&gt;\u0d2a\u0d4d\u0d30\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d28\u0d30\u0d39\u0d3f\u0d24\u0d2e\u0d3e\u0d15\u0d4d\u0d15\u0d3f&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n+        <translation>Wallet &lt;b&gt;\u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41&lt;/b&gt;\u0d28\u0d3f\u0d32\u0d35\u0d3f\u0d7d&lt;b&gt;\u0d05\u0d7a\u0d32\u0d4b\u0d15\u0d4d\u0d15\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u200c\u0d24\u0d41&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n+        <translation>Wallet &lt;b&gt;\u0d0e\u0d7b\u200c\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41&lt;/b&gt;\u0d28\u0d3f\u0d32\u0d35\u0d3f\u0d7d&lt;b&gt;\u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d3f&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Original message:</source>\n+        <translation>\u0d2f\u0d25\u0d3e\u0d7c\u0d24\u0d4d\u0d25 \u0d38\u0d28\u0d4d\u0d26\u0d47\u0d36\u0d02:</translation>\n+    </message>\n+    <message>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n+        <translation>\u0d2e\u0d3e\u0d30\u0d15\u0d2e\u0d3e\u0d2f \u0d12\u0d30\u0d41 \u0d2a\u0d3f\u0d36\u0d15\u0d4d \u0d38\u0d02\u0d2d\u0d35\u0d3f\u0d1a\u0d4d\u0d1a\u0d41. %1 \u0d28\u0d4d \u0d2e\u0d47\u0d32\u0d3f\u0d7d \u0d38\u0d41\u0d30\u0d15\u0d4d\u0d37\u0d3f\u0d24\u0d2e\u0d3e\u0d2f\u0d3f \u0d24\u0d41\u0d1f\u0d30\u0d3e\u0d28\u0d3e\u0d15\u0d3f\u0d32\u0d4d\u0d32, \u0d12\u0d2a\u0d4d\u0d2a\u0d02 \u0d09\u0d2a\u0d47\u0d15\u0d4d\u0d37\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15\u0d2f\u0d41\u0d02 \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d02.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -303,6 +686,26 @@\n         <source>Fee:</source>\n         <translation>\u0d2b\u0d40\u0d38\u0d4d\u200c / \u0d2a\u0d4d\u0d30\u0d24\u0d3f\u0d2b\u0d32\u0d02 :</translation>\n     </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>\u0d2a\u0d4a\u0d1f\u0d3f:</translation>\n+    </message>\n+    <message>\n+        <source>After Fee:</source>\n+        <translation>\u0d2b\u0d40\u0d38\u0d4d \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d4d:</translation>\n+    </message>\n+    <message>\n+        <source>Change:</source>\n+        <translation>\u0d2e\u0d3e\u0d31\u0d4d\u0d31\u0d02:</translation>\n+    </message>\n+    <message>\n+        <source>(un)select all</source>\n+        <translation>(\u0d05\u0d7a) \u0d0e\u0d32\u0d4d\u0d32\u0d3e\u0d02 \u0d24\u0d3f\u0d30\u0d1e\u0d4d\u0d1e\u0d46\u0d1f\u0d41\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Tree mode</source>\n+        <translation>\u0d1f\u0d4d\u0d30\u0d40 \u0d2e\u0d4b\u0d21\u0d4d</translation>\n+    </message>\n     <message>\n         <source>List mode</source>\n         <translation>\u0d2a\u0d1f\u0d4d\u0d1f\u0d3f\u0d15 </translation>\n@@ -331,6 +734,26 @@\n         <source>Confirmed</source>\n         <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d24\u0d40\u0d15\u0d30\u0d3f\u0d1a\u0d4d\u0d1a\u0d41</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15  \u0d32\u0d47\u0d2c\u0d7d</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0d24\u0d41\u0d15 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d4d \u0d10\u0d21\u0d3f \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Lock unspent</source>\n+        <translation>\u0d1a\u0d46\u0d32\u0d35\u0d34\u0d3f\u0d15\u0d4d\u0d15\u0d3e\u0d24\u0d4d\u0d24\u0d24\u0d4d \u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d41\u0d15</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0d32\u0d47\u0d2c\u0d7d \u0d07\u0d32\u0d4d\u0d32)</translation>\n@@ -393,6 +816,10 @@\n     </context>\n <context>\n     <name>OptionsDialog</name>\n+    <message>\n+        <source>&amp;Window</source>\n+        <translation>&amp;\u0d1c\u0d3e\u0d32\u0d15\u0d02 </translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u0d2a\u0d3f\u0d36\u0d15\u0d4d </translation>\n@@ -438,16 +865,32 @@\n     </context>\n <context>\n     <name>RPCConsole</name>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u0d28\u0d4b\u0d21\u0d4d \u0d35\u0d3f\u0d7b\u0d21\u0d4b</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15  \u0d32\u0d47\u0d2c\u0d7d</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0d24\u0d41\u0d15 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n         <source>Amount:</source>\n         <translation>\u0d24\u0d41\u0d15:</translation>\n     </message>\n+    <message>\n+        <source>Wallet:</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d:</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n@@ -482,6 +925,22 @@\n         <source>Fee:</source>\n         <translation>\u0d2b\u0d40\u0d38\u0d4d\u200c / \u0d2a\u0d4d\u0d30\u0d24\u0d3f\u0d2b\u0d32\u0d02 :</translation>\n     </message>\n+    <message>\n+        <source>After Fee:</source>\n+        <translation>\u0d2b\u0d40\u0d38\u0d4d \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d4d:</translation>\n+    </message>\n+    <message>\n+        <source>Change:</source>\n+        <translation>\u0d2e\u0d3e\u0d31\u0d4d\u0d31\u0d02</translation>\n+    </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>\u0d2a\u0d4a\u0d1f\u0d3f:</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0d24\u0d41\u0d15 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n     <message>\n         <source>Payment request expired.</source>\n         <translation>\u0d2a\u0d46\u0d2f\u0d4d\u0d2e\u0d46\u0d28\u0d4d\u0d31\u0d3f\u0d28\u0d41\u0d33\u0d4d\u0d33 \u0d05\u0d2d\u0d4d\u0d2f\u0d7c\u0d24\u0d4d\u0d25\u0d28  \u0d15\u0d3e\u0d32\u0d39\u0d30\u0d23\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d4d\u0d1f\u0d41 \u0d2a\u0d4b\u0d2f\u0d3f\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41. </translation>\n@@ -534,6 +993,22 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15  \u0d32\u0d47\u0d2c\u0d7d</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0d24\u0d41\u0d15 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d4d \u0d10\u0d21\u0d3f \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u0d15\u0d4b\u0d2e\u0d2f\u0d3e\u0d7d \u0d35\u0d47\u0d7c\u0d24\u0d3f\u0d30\u0d3f\u0d1a\u0d4d\u0d1a \u0d2b\u0d2f\u0d7d (* .csv)</translation>\n@@ -568,10 +1043,18 @@\n         <source>Close wallet</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d41\u0d15 </translation>\n     </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\u0d0e\u0d32\u0d4d\u0d32\u0d3e \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d41\u0d15\u0d33\u0d41\u0d02 \u0d05\u0d1f\u0d2f\u0d4d\u200c\u0d15\u0d4d\u0d15\u0d41\u0d15 ...</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u0d12\u0d30\u0d41 \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>"
      },
      {
        "sha": "07f59d3b2a3874fd2e93b0564a7e139b770022cb",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 315,
        "deletions": 6,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -69,6 +69,11 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Dette er dine Bitcoin adresser for \u00e5 sende  \u00e5 sende betalinger. Husk \u00e5 sjekke bel\u00f8p og mottager adresser f\u00f8r du sender mynter.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>Dette er dine Bitcoin adresser for \u00e5 motta betalinger. Bruk 'Lag ny mottaksadresse' knappen i motta tabben for \u00e5 lage nye adresser. Signering er bare mulig for adresser av typen 'legacy'.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopier adresse</translation>\n@@ -477,6 +482,22 @@\n         <source>Up to date</source>\n         <translation>Oppdatert</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>&amp;Last PSBT fra fil...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation>Last delvis signert Bitcoin transaksjon</translation>\n+    </message>\n+    <message>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation>Last PSBT fra utklippstavlen...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction from clipboard</source>\n+        <translation>Last Delvis Signert Bitcoin Transaksjon fra utklippstavle</translation>\n+    </message>\n     <message>\n         <source>Node window</source>\n         <translation>Nodevindu</translation>\n@@ -513,10 +534,26 @@\n         <source>Close wallet</source>\n         <translation>Lukk lommebok</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>Lukk alle lommeb\u00f8ker...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Lukk alle lommeb\u00f8ker</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Vis %1-hjelpemeldingen for \u00e5 f\u00e5 en liste over mulige Bitcoin-kommandolinjealternativer</translation>\n     </message>\n+    <message>\n+        <source>&amp;Mask values</source>\n+        <translation>&amp;Masker verdier</translation>\n+    </message>\n+    <message>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation>Masker verdiene i oversiktstabben</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>standard lommebok</translation>\n@@ -625,7 +662,15 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>Lommeboken er &lt;b&gt;kryptert&lt;/b&gt; og for tiden &lt;b&gt;l\u00e5st&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Original message:</source>\n+        <translation>Opprinnelig melding</translation>\n+    </message>\n+    <message>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n+        <translation>En fatal feil har skjedd. %1 kan ikke lenger trygt fortsette og kommer til \u00e5 avslutte.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -826,11 +871,23 @@\n         <source>Make Blank Wallet</source>\n         <translation>Lag Tom Lommebok</translation>\n     </message>\n+    <message>\n+        <source>Use descriptors for scriptPubKey management</source>\n+        <translation>Bruk deskriptorer for scriptPubKey styring</translation>\n+    </message>\n+    <message>\n+        <source>Descriptor Wallet</source>\n+        <translation>Deskriptor lommebok</translation>\n+    </message>\n     <message>\n         <source>Create</source>\n         <translation>Opprett</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Kompilert uten sqlite st\u00f8tte (kreves for deskriptor lommebok)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1298,6 +1355,14 @@\n         <source>Whether to show coin control features or not.</source>\n         <translation>Skal myntkontroll funksjoner vises eller ikke.</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n+        <translation>Kobl til Bitcoin nettverket gjennom en separat SOCKS5 proxy for Tor onion tjenester. </translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor onion services:</source>\n+        <translation>Bruk separate SOCKS&amp;5 proxy for \u00e5 n\u00e5 peers via Tor onion tjenester:</translation>\n+    </message>\n     <message>\n         <source>&amp;Third party transaction URLs</source>\n         <translation>Tredjepart transaksjon URLer</translation>\n@@ -1433,13 +1498,97 @@\n         <source>Current total balance in watch-only addresses</source>\n         <translation>N\u00e5v\u00e6rende totale balanse i kun observerbare adresser</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</source>\n+        <translation>Privat mode er aktivert for oversiktstabben. For \u00e5 se verdier, uncheck innstillinger-&gt;Masker verdier</translation>\n+    </message>\n+</context>\n <context>\n     <name>PSBTOperationsDialog</name>\n     <message>\n         <source>Dialog</source>\n         <translation>Dialog</translation>\n     </message>\n+    <message>\n+        <source>Sign Tx</source>\n+        <translation>Signer Tx</translation>\n+    </message>\n+    <message>\n+        <source>Broadcast Tx</source>\n+        <translation>Kringkast Tx</translation>\n+    </message>\n+    <message>\n+        <source>Copy to Clipboard</source>\n+        <translation>Kopier til utklippstavle</translation>\n+    </message>\n+    <message>\n+        <source>Save...</source>\n+        <translation>Lagre...</translation>\n+    </message>\n+    <message>\n+        <source>Close</source>\n+        <translation>Lukk</translation>\n+    </message>\n+    <message>\n+        <source>Failed to load transaction: %1</source>\n+        <translation>Lasting av transaksjon: %1 feilet</translation>\n+    </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>Signering av transaksjon: %1 feilet</translation>\n+    </message>\n+    <message>\n+        <source>Could not sign any more inputs.</source>\n+        <translation>Kunne ikke signere flere inputs.</translation>\n+    </message>\n+    <message>\n+        <source>Signed %1 inputs, but more signatures are still required.</source>\n+        <translation>Signerte %1 inputs, men flere signaturer kreves.</translation>\n+    </message>\n+    <message>\n+        <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n+        <translation>Signering av transaksjon var vellykket. Transaksjon er klar til \u00e5 kringkastes.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown error processing transaction.</source>\n+        <translation>Ukjent feil n\u00e5r den prossesserte transaksjonen.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction broadcast successfully! Transaction ID: %1</source>\n+        <translation>Kringkasting av transaksjon var vellykket! Transaksjon ID: %1</translation>\n+    </message>\n+    <message>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation>Kringkasting av transaksjon feilet: %1</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>PSBT kopiert til utklippstavle.</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Lagre Transaksjonsdata</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Delvis Signert Transaksjon (Bin\u00e6r) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved to disk.</source>\n+        <translation>PSBT lagret til disk.</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation>* Sender %1 til %2</translation>\n+    </message>\n+    <message>\n+        <source>Unable to calculate transaction fee or total transaction amount.</source>\n+        <translation>Klarte ikke \u00e5 kalkulere transaksjonsavgift eller totalt transaksjonsbel\u00f8p.</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>Betaler transasjonsavgift:</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Totalbel\u00f8p</translation>\n@@ -1448,7 +1597,35 @@\n         <source>or</source>\n         <translation>eller</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation>Transaksjon har %1 usignert inputs.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>Transaksjonen mangler noe informasjon om inputs.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction still needs signature(s).</source>\n+        <translation>Transaksjonen trenger signatur(er).</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>(Men denne lommeboken kan ikke signere transaksjoner.)</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>(Men denne lommeboken har ikke de rette n\u00f8kklene.)</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>Transaksjonen er signert og klar til kringkasting.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>Transaksjonsstatus er ukjent.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1609,6 +1786,10 @@\n         <source>Error: %1</source>\n         <translation>Feil: %1</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>Initialisering av innstillinger feilet: %1</translation>\n+    </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n         <translation>%1 har ikke avsluttet trygt enda\u2026</translation>\n@@ -1779,6 +1960,10 @@\n         <source>Node window</source>\n         <translation>Nodevindu</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>N\u00e5v\u00e6rende blokkh\u00f8yde</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u00c5pne %1-feilrettingsloggfila fra gjeldende datamappe. Dette kan ta et par sekunder for store loggfiler.</translation>\n@@ -1791,6 +1976,10 @@\n         <source>Increase font size</source>\n         <translation>Forst\u00f8rr font st\u00f8rrelse</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>Rettigheter</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>Tjenester</translation>\n@@ -2046,9 +2235,21 @@\n         <source>Could not unlock wallet.</source>\n         <translation>Kunne ikke l\u00e5se opp lommebok.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>Kunne ikke generere ny %1 adresse </translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Request payment to ...</source>\n+        <translation>Be om betaling til...</translation>\n+    </message>\n+    <message>\n+        <source>Address:</source>\n+        <translation>Adresse:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Bel\u00f8p:</translation>\n@@ -2319,6 +2520,22 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Are you sure you want to send?</source>\n         <translation>Er du sikker p\u00e5 at du vil sende?</translation>\n     </message>\n+    <message>\n+        <source>Create Unsigned</source>\n+        <translation>Lag usignert</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Lagre Transaksjonsdata</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Delvis Signert Transaksjon (Bin\u00e6r) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT lagret</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>eller</translation>\n@@ -2327,6 +2544,10 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>You can increase the fee later (signals Replace-By-Fee, BIP-125).</source>\n         <translation>Du kan \u00f8ke gebyret senere (signaliserer Replace-By-Fee, BIP-125).</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Se over ditt transaksjonsforslag. Dette kommer til \u00e5 produsere en Delvis Signert Bitcoin Transaksjon (PSBT) som du kan lagre eller kopiere og s\u00e5 signere med f.eks. en offline %1 lommebok, eller en PSBT kompatibel hardware lommebok.</translation>\n+    </message>\n     <message>\n         <source>Please, review your transaction.</source>\n         <translation>Vennligst se over transaksjonen din.</translation>\n@@ -3137,9 +3358,25 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>\u00c5 lukke lommeboken for lenge kan f\u00f8re til at du m\u00e5 synkronisere hele kjeden hvis beskj\u00e6ring er aktivert.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>Lukk alle lommeb\u00f8ker</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation>Er du sikker p\u00e5 at du vil lukke alle lommeb\u00f8ker?</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n+    <message>\n+        <source>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</source>\n+        <translation>Ingen lommebok har blitt lastet.\n+G\u00e5 til Fil &gt; \u00c5pne lommebok for \u00e5 laste en lommebok.\n+- ELLER -</translation>\n+    </message>\n     <message>\n         <source>Create a new wallet</source>\n         <translation>Lag en ny lommebok</translation>\n@@ -3218,6 +3455,26 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Error</source>\n         <translation>Feilmelding</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>Klarte ikke \u00e5 dekode PSBT fra utklippstavle (ugyldig base64)</translation>\n+    </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>Last transaksjonsdata</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>Delvis signert transaksjon (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation>PSBT-fil m\u00e5 v\u00e6re mindre enn 100 MiB</translation>\n+    </message>\n+    <message>\n+        <source>Unable to decode PSBT</source>\n+        <translation>Klarte ikke \u00e5 dekode PSBT</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>Sikkerhetskopier lommebok</translation>\n@@ -3285,6 +3542,10 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Feil under lesing av %s! Alle n\u00f8kler har blitt lest rett, men transaksjonsdata eller adressebokoppf\u00f8ringer kan mangle eller v\u00e6re uriktige.</translation>\n     </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation>Mer enn en onion adresse har blitt gitt. Bruker %s for den automatisk lagde Tor onion tjenesten.</translation>\n+    </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>Sjekk at din datamaskins dato og klokke er stilt rett! Hvis klokka er feil, vil ikke %s fungere ordentlig.</translation>\n@@ -3389,6 +3650,14 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>Klarte ikke g\u00e5 igjennom lommeboken under oppstart</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>Verifisering av database feilet</translation>\n+    </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Ignorerer dupliserte -wallet %s.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importerer...</translation>\n@@ -3485,6 +3754,10 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Feil: Lytting etter innkommende tilkoblinger feilet (lytting returnerte feil %s)</translation>\n     </message>\n+    <message>\n+        <source>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</source>\n+        <translation>%s korrupt. Pr\u00f8v \u00e5 bruk lommebokverkt\u00f8yet bitcoin-wallet til \u00e5 fikse det eller laste en backup.</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n         <translation>Ugyldig bel\u00f8p for -maxtxfee=&lt;amount&gt;: '%s' (m\u00e5 v\u00e6re minst minimum rel\u00e9 gebyr p\u00e5 %s for \u00e5 hindre fastl\u00e5ste transaksjoner)</translation>\n@@ -3493,10 +3766,34 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>Transaksjonsbel\u00f8pet er for lite til \u00e5 sendes etter at gebyret er fratrukket</translation>\n     </message>\n+    <message>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation>Denne feilen kan oppst\u00e5 hvis denne lommeboken ikke ble avsluttet skikkelig og var sist lastet med en build som hadde en nyere versjon av Berkeley DB. Hvis det har skjedd, v\u00e6r s\u00e5 snill \u00e5 bruk softwaren som sist lastet denne lommeboken.</translation>\n+    </message>\n+    <message>\n+        <source>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</source>\n+        <translation>Dette er maksimum transaksjonsavgift du betaler (i tillegg til den normale avgiften) for \u00e5 prioritere delvis betaling unng\u00e5else over normal mynt seleksjon.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</source>\n+        <translation>Transaksjon trenger en veksel adresse, men vi kan ikke generere den. Kall keypoolrefill f\u00f8rst.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>Du m\u00e5 gjenoppbygge databasen ved hjelp av -reindex for \u00e5 g\u00e5 tilbake til ubesk\u00e5ret modus. Dette vil laste ned hele blokkjeden p\u00e5 nytt.</translation>\n     </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>En fatal intern feil oppstod, se debug.log for detaljer.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot set -peerblockfilters without -blockfilterindex.</source>\n+        <translation>Kan ikke sette -peerblockfilters uten -blockfilterindex</translation>\n+    </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>For lite diskplass!</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>Feil ved lesing fra database, stenger ned.</translation>\n@@ -3509,6 +3806,14 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Error: Disk space is low for %s</source>\n         <translation>Feil: Ikke nok ledig diskplass for %s</translation>\n     </message>\n+    <message>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Feil: Keypool gikk tom, kall keypoolrefill f\u00f8rst.</translation>\n+    </message>\n+    <message>\n+        <source>Fee rate (%s) is lower than the minimum fee rate setting (%s)</source>\n+        <translation>Avgiftsrate (%s) er lavere enn den minimume avgiftsrate innstillingen (%s)</translation>\n+    </message>\n     <message>\n         <source>Invalid -onion address or hostname: '%s'</source>\n         <translation>Ugyldig -onion adresse eller vertsnavn: \"%s\"</translation>\n@@ -3529,6 +3834,10 @@ Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>M\u00e5 oppgi en port med -whitebind: '%s'</translation>\n     </message>\n+    <message>\n+        <source>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</source>\n+        <translation>Ingen proxyserver er spesifisert. Bruk -proxy=&lt;ip&gt; eller -proxy=&lt;ip:port&gt;.</translation>\n+    </message>\n     <message>\n         <source>Prune mode is incompatible with -blockfilterindex.</source>\n         <translation>Beskj\u00e6ringsmodus er inkompatibel med -blokkfilterindex.</translation>"
      },
      {
        "sha": "51154c1c1096f78c6aee5e7c8c9a6bc12c8f9ba0",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -1543,6 +1543,26 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Could not sign any more inputs.</source>\n         <translation>Kon geen inputs meer ondertekenen.</translation>\n     </message>\n+    <message>\n+        <source>Unknown error processing transaction.</source>\n+        <translation>Onbekende fout bij verwerken van transactie.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction broadcast successfully! Transaction ID: %1</source>\n+        <translation>Transactie succesvol uitgezonden! Transactie-ID: %1</translation>\n+    </message>\n+    <message>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation>Uitzenden transactie mislukt: %1</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>PSBT gekopieerd naar klembord.</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Transactiedata Opslaan</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Totaalbedrag</translation>\n@@ -2446,6 +2466,10 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Are you sure you want to send?</source>\n         <translation>Weet u zeker dat u wilt verzenden?</translation>\n     </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Transactiedata Opslaan</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>of</translation>"
      },
      {
        "sha": "064d552c79d98dcd6cb059f369db5ed5f3c1ce26",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -1,10 +1,6 @@\n <TS language=\"ru\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n-    <message>\n-        <source>Right-click to edit address or label</source>\n-        <translation>\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 \u0438\u043b\u0438 \u043c\u0435\u0442\u043a\u0438</translation>\n-    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441</translation>"
      },
      {
        "sha": "766ebcf1147a745760092a9d946c647da5ebe797",
        "filename": "src/qt/locale/bitcoin_si.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_si.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_si.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_si.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -41,6 +41,10 @@\n         <source>Choose the address to receive coins with</source>\n         <translation>\u0d9a\u0dcf\u0dc3\u0dd2 \u0dbd\u0dd0\u0db6\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4 \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0dad\u0ddd\u0dbb\u0db1\u0dca\u0db1</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u0dad\u0ddd\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n     <message>\n         <source>Sending addresses</source>\n         <translation>\u0dba\u0dc0\u0db1 \u0dbd\u0dd2\u0db4\u0dd2\u0db1</translation>\n@@ -209,6 +213,10 @@\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Synchronizing with network...</source>\n+        <translation>\u0da2\u0dcf\u0dbd\u0dba \u0dc3\u0db8\u0d9c \u0dc3\u0db8\u0db8\u0dd4\u0dc4\u0dd4\u0dbb\u0dca\u0dad \u0dc0\u200c\u0dd9\u0db8\u0dd2\u0db1\u0dca...</translation>\n+    </message>\n     <message>\n         <source>Browse transaction history</source>\n         <translation>\u0d9c\u0db1\u0dd4\u0daf\u0dd9\u0db1\u0dd4 \u0d89\u0dad\u0dd2\u0dc4\u0dcf\u0dc3\u0dba \u0db4\u0dd2\u0dbb\u0dd2\u0d9a\u0dca\u0dc3\u0db1\u0dca\u0db1</translation>"
      },
      {
        "sha": "83b86ce2d80a973f64c393b1162304edf68e550f",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -478,6 +478,14 @@ F\u00f6rs\u00f6k igen.</translation>\n         <source>Up to date</source>\n         <translation>Uppdaterad</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>&amp;L\u00e4s in PSBT fr\u00e5n fil...</translation>\n+    </message>\n+    <message>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation>L\u00e4s in PSBT fr\u00e5n urklipp...</translation>\n+    </message>\n     <message>\n         <source>Node window</source>\n         <translation>Nod-f\u00f6nster</translation>\n@@ -514,10 +522,26 @@ F\u00f6rs\u00f6k igen.</translation>\n         <source>Close wallet</source>\n         <translation>St\u00e4ng pl\u00e5nboken</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>St\u00e4ng alla pl\u00e5nb\u00f6cker...</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>St\u00e4ng alla pl\u00e5nb\u00f6cker</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Visa %1 hj\u00e4lpmeddelande f\u00f6r att f\u00e5 en lista med m\u00f6jliga Bitcoin kommandoradsalternativ.</translation>\n     </message>\n+    <message>\n+        <source>&amp;Mask values</source>\n+        <translation>&amp;D\u00f6lj v\u00e4rden</translation>\n+    </message>\n+    <message>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation>D\u00f6lj v\u00e4rden i \u00f6versiktsfliken</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>Standardpl\u00e5nbok</translation>\n@@ -626,6 +650,10 @@ F\u00f6rs\u00f6k igen.</translation>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>Denna pl\u00e5nbok \u00e4r &lt;b&gt;krypterad&lt;/b&gt; och f\u00f6r n\u00e4rvarande &lt;b&gt;l\u00e5st&lt;/b&gt;</translation>\n     </message>\n+    <message>\n+        <source>Original message:</source>\n+        <translation>Ursprungligt meddelande:</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n@@ -3138,6 +3166,10 @@ Notera: D\u00e5 avgiften ber\u00e4knas per byte kommer en avgift p\u00e5 50 satoshi tas ut f\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>Om pl\u00e5nboken \u00e4r st\u00e4ngd under f\u00f6r l\u00e5ng tid och gallring \u00e4r aktiverad kan hela kedjan beh\u00f6va synkroniseras p\u00e5 nytt.</translation>\n     </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>St\u00e4ng alla pl\u00e5nb\u00f6cker</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>"
      },
      {
        "sha": "e199aae738e66c807b4e9cfcb501a8243c0906dd",
        "filename": "src/qt/locale/bitcoin_ur.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ur.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_ur.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ur.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -29,6 +29,10 @@\n         <source>Delete the currently selected address from the list</source>\n         <translation>\u0633\u0644\u06cc\u06a9\u0679\u0688 \u067e\u062a\u06d2 \u06a9\u0648 \u0645\u0679\u0627\u0626\u06cc\u06ba</translation>\n     </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>\u067e\u062a\u06c1 \u06cc\u0627 \u0644\u06cc\u0628\u0644 \u062a\u0644\u0627\u0634\u06cc \u06a9\u06d2 \u0644\u0626\u06d2 \u062f\u0631\u062c \u06a9\u0631\u06cc\u06ba</translation>\n+    </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation>\u0645\u0648\u062c\u0648\u062f\u06c1 \u0688\u06cc\u0679\u0627 \u06a9\u0648 \u0641\u0627\u0626\u06cc\u0644 \u0645\u06cc\u06ba \u0645\u062d\u0641\u0648\u0638 \u06a9\u0631\u06cc\u06ba</translation>\n@@ -135,6 +139,10 @@\n         <source>Encrypt wallet</source>\n         <translation>\u0628\u0679\u0648\u06d2 \u06a9\u0648 \u062e\u0641\u06cc\u06c1 \u06a9\u0631\u06cc\u06ba</translation>\n     </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u0628\u0633\u062a\u06c1 \u06a9\u06be\u0648\u0644\u06cc\u06ba</translation>\n+    </message>\n     <message>\n         <source>Decrypt wallet</source>\n         <translation>\u0688\u06a9\u0631\u067e\u0679 \u0648\u0627\u0644\u06cc\u0679</translation>\n@@ -153,6 +161,14 @@\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>&amp;\u0645\u0639\u0644\u0648\u0645\u0627\u062a%1</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>%1 \u06a9\u06d2 \u0628\u0627\u0631\u06d2 \u0645\u06cc\u06ba \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062f\u06a9\u06be\u0627\u06cc\u06ba</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u0646\u0642\u0635</translation>"
      },
      {
        "sha": "d0fd45752137ed17999b674752aa292a781ee7d7",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "modified",
        "additions": 115,
        "deletions": 3,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d0fa3ef6f60a221692df1161356ab5628a0903/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "patch": "@@ -513,6 +513,14 @@\n         <source>Close wallet</source>\n         <translation>\u0110\u00f4ng v\u00ed</translation>\n     </message>\n+    <message>\n+        <source>Close All Wallets...</source>\n+        <translation>\u0110\u00f3ng t\u1ea5t c\u1ea3 c\u00e1c v\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\u0110\u00f3ng t\u1ea5t c\u1ea3 v\u00ed</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Hi\u1ec3n th\u1ecb %1 tin nh\u1eafn h\u1ed7 tr\u1ee3 \u0111\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c danh s\u00e1ch Bitcoin command-line kh\u1ea3 d\u1ee5ng</translation>\n@@ -625,7 +633,11 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>V\u00ed th\u00ec &lt;b&gt;encrypted&lt;/b&gt; v\u00e0 hi\u1ec7n t\u1ea1i &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n+        <translation>L\u1ed7i nghi\u00eam trong. %1 kh\u00f4ng th\u1ec3 ti\u1ebfp t\u1ee5c v\u00e0 s\u1ebd tho\u00e1t ra</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -1436,6 +1448,42 @@\n     </context>\n <context>\n     <name>PSBTOperationsDialog</name>\n+    <message>\n+        <source>Dialog</source>\n+        <translation>B\u1ea3ng tho\u1ea1i</translation>\n+    </message>\n+    <message>\n+        <source>Sign Tx</source>\n+        <translation>\u0110\u0103ng k\u00fd Tx</translation>\n+    </message>\n+    <message>\n+        <source>Copy to Clipboard</source>\n+        <translation>L\u01b0u v\u00e0o b\u1ea3ng t\u1ea1m</translation>\n+    </message>\n+    <message>\n+        <source>Save...</source>\n+        <translation>Sao l\u01b0u</translation>\n+    </message>\n+    <message>\n+        <source>Close</source>\n+        <translation>\u0110\u00f3ng</translation>\n+    </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>\u0110\u0103ng k\u00fd giao d\u1ecbch th\u1ea5t b\u1ea1i :%1</translation>\n+    </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>L\u01b0u tr\u1eef giao d\u1ecbch</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation>*G\u1eedi %1 t\u1edbi %2</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>Tr\u1ea3 ph\u00ed giao d\u1ecbch</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>T\u1ed5ng s\u1ed1</translation>\n@@ -1444,6 +1492,18 @@\n         <source>or</source>\n         <translation>ho\u1eb7c</translation>\n     </message>\n+    <message>\n+        <source>Transaction still needs signature(s).</source>\n+        <translation>Giao d\u1ecbch c\u1ea7n ch\u1eef k\u00fd</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>(Nh\u01b0ng v\u00ed n\u00e0y kh\u00f4ng th\u1ec3 \u0111\u0103ng k\u00fd giao d\u1ecbch.)</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>Giao d\u1ecbch \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u0103ng k\u00fd v\u00e0 chu\u1ea9n b\u1ecb \u0111\u1ec3 ph\u00e1t l\u00ean</translation>\n+    </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n@@ -1799,6 +1859,10 @@\n         <source>Increase font size</source>\n         <translation>T\u0103ng font size</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>Cho ph\u00e9p</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>D\u1ecbch v\u1ee5</translation>\n@@ -2054,13 +2118,25 @@\n         <source>Could not unlock wallet.</source>\n         <translation>Kh\u00f4ng th\u1ec3 unlock wallet.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>Kh\u00f4ng th\u1ec3 t\u1ea1o ra %1 \u0111\u1ecba ch\u1ec9 m\u1edbi</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address:</source>\n+        <translation>\u0110\u1ecba ch\u1ec9</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>S\u1ed1 l\u01b0\u1ee3ng:</translation>\n     </message>\n+    <message>\n+        <source>Label:</source>\n+        <translation>Nh\u00e3n</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Tin nh\u1eafn:</translation>\n@@ -2335,6 +2411,14 @@ L\u01b0u \u00fd: V\u00ec ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh tr\u00ean c\u01a1 s\u1edf m\u1ed7i byte, n\u00ean ph\u00ed \"100 satos\n         <source>Are you sure you want to send?</source>\n         <translation>B\u1ea1n ch\u1eafc ch\u1eafn mu\u1ed1n g\u1eedi ch\u1ee9?</translation>\n     </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>L\u01b0u tr\u1eef giao d\u1ecbch</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT \u0111\u00e3 l\u01b0u</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>ho\u1eb7c</translation>\n@@ -3157,7 +3241,15 @@ L\u01b0u \u00fd: V\u00ec ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh tr\u00ean c\u01a1 s\u1edf m\u1ed7i byte, n\u00ean ph\u00ed \"100 satos\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>\u0110\u00f3ng v\u00ed th\u1eddi gian d\u00e0i s\u1ebd d\u1eabn \u0111\u1ebfn ph\u1ea3i \u0111\u1ed3ng b\u1ed9 h\u00f3a l\u1ea1i c\u1ea3 chu\u1ed7i n\u1ebfu c\u1eaft t\u1ec9a pruning \u0111\u01b0\u1ee3c k\u00edch ho\u1ea1t</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Close all wallets</source>\n+        <translation>\u0110\u00f3ng t\u1ea5t c\u1ea3 v\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation>B\u1ea1n c\u00f3 ch\u1eafc ch\u1eafn mu\u1ed1n \u0111\u00f3ng t\u1ea5t c\u1ea3 v\u00ed kh\u00f4ng?</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n     <message>\n@@ -3238,6 +3330,14 @@ L\u01b0u \u00fd: V\u00ec ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh tr\u00ean c\u01a1 s\u1edf m\u1ed7i byte, n\u00ean ph\u00ed \"100 satos\n         <source>Error</source>\n         <translation>L\u1ed7i</translation>\n     </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>T\u1ea3i th\u00f4ng tin giao d\u1ecbch</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>Giao d\u1ecbch \u0111\u01b0\u1ee3c \u0111\u0103ng k\u00fd m\u1ed9t ph\u1ea7n (*.psbt)</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>Backup Wallet</translation>\n@@ -3417,6 +3517,10 @@ L\u01b0u \u00fd: V\u00ec ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh tr\u00ean c\u01a1 s\u1edf m\u1ed7i byte, n\u00ean ph\u00ed \"100 satos\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>L\u1ed7i qu\u00e9t l\u1ea1i v\u00ed trong xu\u1ea5t qu\u00e1 tr\u00ecnh kh\u1edfi t\u1ea1o</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>L\u1ed7i x\u00e1c nh\u1eadn d\u1eef li\u1ec7u</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importing...</translation>\n@@ -3541,6 +3645,14 @@ L\u01b0u \u00fd: V\u00ec ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh tr\u00ean c\u01a1 s\u1edf m\u1ed7i byte, n\u00ean ph\u00ed \"100 satos\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</translation>\n     </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>L\u1ed7i nghi\u00eam tr\u1ecdng x\u1ea3y ra, xem debug.log \u0111\u1ec3 bi\u1ebft chi ti\u1ebft</translation>\n+    </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>\u1ed4 \u0111\u0129a c\u00f2n qu\u00e1 \u00edt</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>Error reading from database, shutting down.</translation>"
      }
    ]
  },
  {
    "sha": "9ae536d3684e345c6700dadf989bf7f751ee1c54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWU1MzZkMzY4NGUzNDVjNjcwMGRhZGY5ODliZjdmNzUxZWUxYzU0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-10T19:00:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-10T19:00:43Z"
      },
      "message": "build: Bump RC to rc3\n\nTree-SHA512: a6d81259e17c6b55b33c638a9054eaee2f82322ce0482a73f85562cd56efeb73e2b19b3f7b44fd97e7caa6e757573a8c13ae8967b1e6492f2483d2e057d96c87",
      "tree": {
        "sha": "e1201f590278adee470284e582006dad5c947e49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1201f590278adee470284e582006dad5c947e49"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ae536d3684e345c6700dadf989bf7f751ee1c54",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/ScFsACgkQHkrtYphs\n0l2iBwf+NThW6S0O4lFXS4+jM122djuv9hqhvX7eNvS0VwNEj4WtfZRzkdkPqHVR\nm0+MJOxWWaZDtvhU0XB2t6dFv9qHrSYHbRULKiyWCMFWpqd0L8TPq2cykoh9ajZl\nsjuD3B/+53Da/4ms/4QwE5NwvGWik0W3tA13ASJt/xTEsyihlcQXMh8eUJoAdOmw\nmNW6q2MFDH9SyqVyLA8eoisOEB5RKdUezL50orw4ue1i3WyHayLgI/vVFE47uEnu\nleP+Vf/YP1nF8LdBs/bkOYFm5c1EUSDTzFGCQP9NgTU1cUANzUCObCqU9HLq4+q7\nknSSHxun3GJIoJpKw/M+yjcgpG4uvA==\n=p9O2\n-----END PGP SIGNATURE-----",
        "payload": "tree e1201f590278adee470284e582006dad5c947e49\nparent e6d0fa3ef6f60a221692df1161356ab5628a0903\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1607626838 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1607626843 +0100\n\nbuild: Bump RC to rc3\n\nTree-SHA512: a6d81259e17c6b55b33c638a9054eaee2f82322ce0482a73f85562cd56efeb73e2b19b3f7b44fd97e7caa6e757573a8c13ae8967b1e6492f2483d2e057d96c87\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ae536d3684e345c6700dadf989bf7f751ee1c54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ae536d3684e345c6700dadf989bf7f751ee1c54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ae536d3684e345c6700dadf989bf7f751ee1c54/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6d0fa3ef6f60a221692df1161356ab5628a0903",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6d0fa3ef6f60a221692df1161356ab5628a0903"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6a5f07ccbc13e4bad9978f8e24f2411b877a97a7",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ae536d3684e345c6700dadf989bf7f751ee1c54/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ae536d3684e345c6700dadf989bf7f751ee1c54/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9ae536d3684e345c6700dadf989bf7f751ee1c54",
        "patch": "@@ -3,7 +3,7 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 21)\n define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 2)\n+define(_CLIENT_VERSION_RC, 3)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])"
      }
    ]
  },
  {
    "sha": "8273ea3b8db1449b65cf369e541a1253c4490f45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjczZWEzYjhkYjE0NDliNjVjZjM2OWU1NDFhMTI1M2M0NDkwZjQ1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-12-15T13:12:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-16T06:36:44Z"
      },
      "message": "Move signet onion seed from v2 to v3\n\nGithub-Pull: #20660\nRebased-From: 3e6657a14d501c6315ab46ffe7d204684491c710",
      "tree": {
        "sha": "ba2a68611c447fd0f4716df707a43de4e62cecd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba2a68611c447fd0f4716df707a43de4e62cecd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8273ea3b8db1449b65cf369e541a1253c4490f45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8273ea3b8db1449b65cf369e541a1253c4490f45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8273ea3b8db1449b65cf369e541a1253c4490f45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8273ea3b8db1449b65cf369e541a1253c4490f45/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ae536d3684e345c6700dadf989bf7f751ee1c54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ae536d3684e345c6700dadf989bf7f751ee1c54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ae536d3684e345c6700dadf989bf7f751ee1c54"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "88cf5ef0a88e720c956efa44f8cd223bc4565e4c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8273ea3b8db1449b65cf369e541a1253c4490f45/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8273ea3b8db1449b65cf369e541a1253c4490f45/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=8273ea3b8db1449b65cf369e541a1253c4490f45",
        "patch": "@@ -272,7 +272,7 @@ class SigNetParams : public CChainParams {\n             bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n             vSeeds.emplace_back(\"178.128.221.177\");\n             vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n-            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+            vSeeds.emplace_back(\"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\");\n \n             consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000000000000019fd16269a\");\n             consensus.defaultAssumeValid = uint256S(\"0x0000002a1de0f46379358c1fd09906f7ac59adf3712323ed90eb59e4c183c020\"); // 9434"
      }
    ]
  },
  {
    "sha": "e7b53d47218301790bfec44d50219561502922ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2I1M2Q0NzIxODMwMTc5MGJmZWM0NGQ1MDIxOTU2MTUwMjkyMmFk",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2020-11-25T11:07:10Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-16T12:27:11Z"
      },
      "message": "This change to the appveyor CI config for msvc builds reverses a change introduced in #19960. It re-applies a setting to inform vcpkg to only build release vesions of the dependencies rather than the default of debug and release.\n\nIt had been expected that the vcpkg manifest mechanism introduced in #19960 would do this automatically but it turns out not to be the case.\n\nGithub-Pull: #20489\nRebased-From: fa18e7cbc5ea6aaba94dca4ebdc850c9db141f89",
      "tree": {
        "sha": "ad81b496c960251056efe0a99e0ca6fd01462bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad81b496c960251056efe0a99e0ca6fd01462bbc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7b53d47218301790bfec44d50219561502922ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b53d47218301790bfec44d50219561502922ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7b53d47218301790bfec44d50219561502922ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b53d47218301790bfec44d50219561502922ad/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8273ea3b8db1449b65cf369e541a1253c4490f45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8273ea3b8db1449b65cf369e541a1253c4490f45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8273ea3b8db1449b65cf369e541a1253c4490f45"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bf93d7a990048f2ead966aee9a4f984d7be1191a",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7b53d47218301790bfec44d50219561502922ad/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7b53d47218301790bfec44d50219561502922ad/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=e7b53d47218301790bfec44d50219561502922ad",
        "patch": "@@ -24,6 +24,7 @@ install:\n       git pull origin master > $null\n       git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n       .\\bootstrap-vcpkg.bat > $null\n+      Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n       cd \"$env:APPVEYOR_BUILD_FOLDER\"\n before_build:\n # Powershell block below is to download and extract the Qt static libraries. The pseudo code is:"
      }
    ]
  },
  {
    "sha": "249d61a382014c15025fe63025ac5f46d4721262",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDlkNjFhMzgyMDE0YzE1MDI1ZmU2MzAyNWFjNWY0NmQ0NzIxMjYy",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2020-12-02T11:37:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-16T12:27:29Z"
      },
      "message": "Adjusted msvc compiler and linker settings to remove optimisations that are causing sporadic ABI issues on Visual Studio updates.\n\nTidied up debug and release configuration blocks in common project file to avoid duplication.\n\nUpdated appveyor config to use latest Visual Studio 2019 image.\n\nChanged appveyor config file hash to use a new version of Qt pre-compiled binaries built for Visual Studio 2019 v16.8.1.\n\nBumped vcpkg version to tag '2020.11-1' for binary caching feature.\n\nSee #20392 for related discussion.\n\nGithub-Pull: #20506\nRebased-From: 8b99e609e7da5dd3601e9214d8f869e96108fffe",
      "tree": {
        "sha": "6cfd0dc2486611ea71663672716822eca8eb553b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cfd0dc2486611ea71663672716822eca8eb553b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/249d61a382014c15025fe63025ac5f46d4721262",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/249d61a382014c15025fe63025ac5f46d4721262",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/249d61a382014c15025fe63025ac5f46d4721262",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/249d61a382014c15025fe63025ac5f46d4721262/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7b53d47218301790bfec44d50219561502922ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b53d47218301790bfec44d50219561502922ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7b53d47218301790bfec44d50219561502922ad"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 32,
      "deletions": 52
    },
    "files": [
      {
        "sha": "c21e7803a4e7e121ee24296fd315a2ed039a4e08",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/249d61a382014c15025fe63025ac5f46d4721262/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/249d61a382014c15025fe63025ac5f46d4721262/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=249d61a382014c15025fe63025ac5f46d4721262",
        "patch": "@@ -1,28 +1,29 @@\n version: '{branch}.{build}'\n skip_tags: true\n-image: Previous Visual Studio 2019\n+image: Visual Studio 2019\n configuration: Release\n platform: x64\n clone_depth: 5\n environment:\n   PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n   PYTHONUTF8: 1\n-  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n-  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/qt598x64_vs2019_v1681/qt598_x64_vs2019_1681.zip'\n+  QT_DOWNLOAD_HASH: '00cf7327818c07d74e0b1a4464ffe987c2728b00d49d4bf333065892af0515c3'\n   QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-  VCPKG_COMMIT_ID: '40230b8e3f6368dcb398d649331be878ca1e9007'\n+  VCPKG_TAG: '2020.11-1'\n install:\n # Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n # - cmd: pip install zmq\n-# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+# The powershell block below is to set up vcpkg to install the c++ dependencies. The pseudo code is:\n #    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n-#    b. Install the missing packages using the vcpkg manifest.\n+#    b. Append a setting to the vcpkg cmake config file to only do release builds of dependencies (skipping deubg builds saves ~5 mins).\n+# Note originally this block also installed the dependencies using 'vcpkg install'. Dependencies are now installed\n+# as part of the msbuild command using vcpkg mainfests.\n - ps: |\n       cd c:\\tools\\vcpkg\n       $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n-      git pull origin master > $null\n-      git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n+      git -c advice.detachedHead=false checkout $env:VCPKG_TAG\n+      git pull origin $env:VCPKG_TAG\n       .\\bootstrap-vcpkg.bat > $null\n       Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n       cd \"$env:APPVEYOR_BUILD_FOLDER\""
      },
      {
        "sha": "65ce1ee9da0468c859f0ed5b48ec129135560401",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=249d61a382014c15025fe63025ac5f46d4721262",
        "patch": "@@ -56,7 +56,7 @@\n     </ClCompile>\n     <Link>\n       <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+      <AdditionalOptions>/ignore:4206 /LTCG:OFF</AdditionalOptions>\n     </Link>\n     <ResourceCompile>\n       <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>"
      },
      {
        "sha": "9c589bccbc4754271e51eecf5eca28ec568836c4",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "modified",
        "additions": 18,
        "deletions": 39,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=249d61a382014c15025fe63025ac5f46d4721262",
        "patch": "@@ -4,8 +4,6 @@\n \n   <PropertyGroup Label=\"Globals\">\n     <VCProjectVersion>16.0</VCProjectVersion>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n     <UseNativeEnvironment>true</UseNativeEnvironment>\n    </PropertyGroup>\n \n@@ -16,6 +14,8 @@\n     <VcpkgUseStatic>true</VcpkgUseStatic>\n     <VcpkgAutoLink>true</VcpkgAutoLink>\n     <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n   </PropertyGroup>\n \n   <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n@@ -45,66 +45,46 @@\n     </ProjectConfiguration>\n   </ItemGroup>\n \n-  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <WholeProgramOptimization>false</WholeProgramOptimization>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n     <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n+    <GenerateManifest>No</GenerateManifest>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n   </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n+\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n     <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n   </PropertyGroup>\n \n-<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n-    </ClCompile>\n-    <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+<ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n-      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n+      <WholeProgramOptimization>false</WholeProgramOptimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <SDLCheck>true</SDLCheck>\n       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <DebugInformationFormat>None</DebugInformationFormat>\n     </ClCompile>\n     <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>false</EnableCOMDATFolding>\n+      <OptimizeReferences>false</OptimizeReferences>\n+      <AdditionalOptions>/LTCG:OFF</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n \n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n+      <WholeProgramOptimization>false</WholeProgramOptimization>\n       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n@@ -124,7 +104,6 @@\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n       <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n     </Link>\n     <Lib>"
      },
      {
        "sha": "270c75e8a7b1fdc870b4d7925e69a7c26b9fedc5",
        "filename": "build_msvc/common.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=249d61a382014c15025fe63025ac5f46d4721262",
        "patch": "@@ -4,7 +4,7 @@\n   <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n     <ItemGroup>\n       <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n-      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\" Condition=\"Exists('$(OutDir)$(TargetName).pdb')\"></BuildArtifacts>\n     </ItemGroup>\n     <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n   </Target>"
      },
      {
        "sha": "1ddd62edf2505a58ae1ddb67de0344b92e8b025b",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/249d61a382014c15025fe63025ac5f46d4721262/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=249d61a382014c15025fe63025ac5f46d4721262",
        "patch": "@@ -73,7 +73,7 @@\n     </ClCompile>\n     <Link>\n       <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+      <AdditionalOptions>/ignore:4206 /LTCG:OFF</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n \n@@ -83,7 +83,7 @@\n     </ClCompile>\n     <Link>\n       <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>"
      }
    ]
  },
  {
    "sha": "85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWRhYmQxMjQ5NGEwZDgyYThmNTg4M2NlZTFjMWZmMjlmYjgxYjI3",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2020-12-03T09:23:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-16T12:27:31Z"
      },
      "message": "Removed redundant git pull from appveyor config.\n\nGithub-Pull: #20506\nRebased-From: 2c69381f3de5091e103cb8bef299aba321503e7c",
      "tree": {
        "sha": "6422616440777ce5c6d2c11ddb50a5040f564fd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6422616440777ce5c6d2c11ddb50a5040f564fd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85dabd12494a0d82a8f5883cee1c1ff29fb81b27/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "249d61a382014c15025fe63025ac5f46d4721262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/249d61a382014c15025fe63025ac5f46d4721262",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/249d61a382014c15025fe63025ac5f46d4721262"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7250d4ad94955bdd77b52be7490e122173ea91f6",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85dabd12494a0d82a8f5883cee1c1ff29fb81b27/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85dabd12494a0d82a8f5883cee1c1ff29fb81b27/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
        "patch": "@@ -23,7 +23,6 @@ install:\n       cd c:\\tools\\vcpkg\n       $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n       git -c advice.detachedHead=false checkout $env:VCPKG_TAG\n-      git pull origin $env:VCPKG_TAG\n       .\\bootstrap-vcpkg.bat > $null\n       Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n       cd \"$env:APPVEYOR_BUILD_FOLDER\""
      }
    ]
  },
  {
    "sha": "e4440eb67b339fdacb2c1476f8f909a009c6a47f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDQ0MGViNjdiMzM5ZmRhY2IyYzE0NzZmOGY5MDlhMDA5YzZhNDdm",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-05-22T14:10:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-17T09:02:47Z"
      },
      "message": "doc: Add warnings for http interfaces limitations\n\nGithub-Pull: #19050\nRebased-From: 5c3eaf9983043db1b61a98c95d692a6958670b86",
      "tree": {
        "sha": "8e6b79789709467ef776047976111e9f77c5cf1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e6b79789709467ef776047976111e9f77c5cf1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4440eb67b339fdacb2c1476f8f909a009c6a47f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4440eb67b339fdacb2c1476f8f909a009c6a47f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4440eb67b339fdacb2c1476f8f909a009c6a47f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4440eb67b339fdacb2c1476f8f909a009c6a47f/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85dabd12494a0d82a8f5883cee1c1ff29fb81b27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85dabd12494a0d82a8f5883cee1c1ff29fb81b27"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c66e79af713a3adaf65fef7b69b943162c013ade",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4440eb67b339fdacb2c1476f8f909a009c6a47f/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4440eb67b339fdacb2c1476f8f909a009c6a47f/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=e4440eb67b339fdacb2c1476f8f909a009c6a47f",
        "patch": "@@ -127,3 +127,14 @@ However, the wallet may not be up-to-date with the current state of the mempool\n or the state of the mempool by an RPC that returned before this RPC. For\n example, a wallet transaction that was BIP-125-replaced in the mempool prior to\n this RPC may not yet be reflected as such in this RPC response.\n+\n+## Limitations\n+\n+There is a known issue in the JSON-RPC interface that can cause a node to crash if\n+too many http connections are being opened at the same time because the system runs\n+out of available file descriptors. To prevent this from happening you might\n+want to increase the number of maximum allowed file descriptors in your system\n+and try to prevent opening too many connections to your JSON-RPC interface at the\n+same time if this is under your control. It is hard to give general advice\n+since this depends on your system but if you make several hundred requests at\n+once you are definitely at risk of encountering this issue."
      },
      {
        "sha": "3b127703b7d217bcbc1cf13b1d8de88cb22938b1",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4440eb67b339fdacb2c1476f8f909a009c6a47f/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4440eb67b339fdacb2c1476f8f909a009c6a47f/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=e4440eb67b339fdacb2c1476f8f909a009c6a47f",
        "patch": "@@ -12,6 +12,18 @@ REST Interface consistency guarantees\n The [same guarantees as for the RPC Interface](/doc/JSON-RPC-interface.md#rpc-consistency-guarantees)\n apply.\n \n+Limitations\n+-----------\n+\n+There is a known issue in the REST interface that can cause a node to crash if\n+too many http connections are being opened at the same time because the system runs\n+out of available file descriptors. To prevent this from happening you might\n+want to increase the number of maximum allowed file descriptors in your system\n+and try to prevent opening too many connections to your rest interface at the\n+same time if this is under your control. It is hard to give general advice\n+since this depends on your system but if you make several hundred requests at\n+once you are definitely at risk of encountering this issue.\n+\n Supported API\n -------------\n "
      }
    ]
  },
  {
    "sha": "84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGU4ZDU0NjdmY2VjM2I3YzhjZTk1MGNkN2EzZTdlN2IyNDQ1MmEz",
    "commit": {
      "author": {
        "name": "Adam Jonas",
        "email": "jonas@chaincode.com",
        "date": "2020-12-16T01:37:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-17T11:28:37Z"
      },
      "message": "doc: warn that incoming conns are unlikely when not using default ports\n\nGithub-Pull: #20668\nRebased-From: 010eed3ce03cf4fc622a48f40fc4d589383f7a44",
      "tree": {
        "sha": "ae6883d0389eecb2f33831c8e96bcdf810751876",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae6883d0389eecb2f33831c8e96bcdf810751876"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3/comments",
    "author": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4440eb67b339fdacb2c1476f8f909a009c6a47f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4440eb67b339fdacb2c1476f8f909a009c6a47f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4440eb67b339fdacb2c1476f8f909a009c6a47f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6380da4f7280a28ba4227f338e99b0b845fa3e36",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
        "patch": "@@ -461,7 +461,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-peerblockfilters\", strprintf(\"Serve compact block filters to peers per BIP 157 (default: %u)\", DEFAULT_PEERBLOCKFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-permitbaremultisig\", strprintf(\"Relay non-P2SH multisig (default: %u)\", DEFAULT_PERMIT_BAREMULTISIG), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port> (default: %u, testnet: %u signet: %u, regtest: %u)\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port>. Nodes not using the default ports (default: %u, testnet: %u, signet: %u, regtest: %u) are unlikely to get incoming connections.\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxy=<ip:port>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxyrandomize\", strprintf(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\", DEFAULT_PROXYRANDOMIZE), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-seednode=<ip>\", \"Connect to a node to retrieve peer addresses, and disconnect. This option can be specified multiple times to connect to multiple nodes.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);"
      },
      {
        "sha": "1fd913eb64f75d26c51c872630f7077d293be9cb",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
        "patch": "@@ -2050,7 +2050,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 continue;\n             }\n \n-            // do not allow non-default ports, unless after 50 invalid addresses selected already\n+            // Do not allow non-default ports, unless after 50 invalid\n+            // addresses selected already. This is to prevent malicious peers\n+            // from advertising themselves as a service on another host and\n+            // port, causing a DoS attack as nodes around the network attempt\n+            // to connect to it fruitlessly.\n             if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n                 continue;\n "
      }
    ]
  },
  {
    "sha": "0c1fa78af1c413c848359df76f4d55f819b9fad5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzFmYTc4YWYxYzQxM2M4NDgzNTlkZjc2ZjRkNTVmODE5YjlmYWQ1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-15T10:00:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-17T11:29:15Z"
      },
      "message": "doc: update tor.md address examples from onion v2 to v3\n\nGithub-Pull: #19961\nRebased-From: e1765d8b04fe1fb775f3750e0fa59f13a58eb176",
      "tree": {
        "sha": "8d3d87797f15de6ae223647d9bf82cb497790b94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d3d87797f15de6ae223647d9bf82cb497790b94"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c1fa78af1c413c848359df76f4d55f819b9fad5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c1fa78af1c413c848359df76f4d55f819b9fad5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c1fa78af1c413c848359df76f4d55f819b9fad5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c1fa78af1c413c848359df76f4d55f819b9fad5/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8fe87bdde630978a73a3f811885dedb30d22e4b8",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c1fa78af1c413c848359df76f4d55f819b9fad5/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c1fa78af1c413c848359df76f4d55f819b9fad5/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=0c1fa78af1c413c848359df76f4d55f819b9fad5",
        "patch": "@@ -72,7 +72,7 @@ should be equal to binding address and port for inbound Tor connections (127.0.0\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./bitcoind -proxy=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -listen\n \n (obviously, replace the .onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n@@ -90,7 +90,7 @@ and open port 8333 on your firewall (or use -upnp).\n If you only want to use Tor to reach .onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoind -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./bitcoind -onion=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -discover\n \n ## 3. Automatically listen on Tor\n "
      }
    ]
  },
  {
    "sha": "2c8482d0a279d07a814eaaae231c90d3d2058e55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzg0ODJkMGEyNzlkMDdhODE0ZWFhYWUyMzFjOTBkM2QyMDU4ZTU1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-15T10:35:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-17T11:29:22Z"
      },
      "message": "doc: add tor.md section on how to get tor info via bitcoind\n\nGithub-Pull: #19961\nRebased-From: dc8a591222f249da81c7eef8aa5961f8d7dd1e23",
      "tree": {
        "sha": "4464e3b19b8223ded37d82ef39df91c7ee359a5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4464e3b19b8223ded37d82ef39df91c7ee359a5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c8482d0a279d07a814eaaae231c90d3d2058e55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c8482d0a279d07a814eaaae231c90d3d2058e55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c8482d0a279d07a814eaaae231c90d3d2058e55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c8482d0a279d07a814eaaae231c90d3d2058e55/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c1fa78af1c413c848359df76f4d55f819b9fad5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c1fa78af1c413c848359df76f4d55f819b9fad5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c1fa78af1c413c848359df76f4d55f819b9fad5"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ccf8a226eec4f00e764d485e58effe24ea258278",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c8482d0a279d07a814eaaae231c90d3d2058e55/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c8482d0a279d07a814eaaae231c90d3d2058e55/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=2c8482d0a279d07a814eaaae231c90d3d2058e55",
        "patch": "@@ -5,6 +5,16 @@ It is possible to run Bitcoin Core as a Tor onion service, and connect to such s\n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n+## How to see information about your Tor configuration via Bitcoin Core\n+\n+There are several ways to see your local onion address in Bitcoin Core:\n+- in the debug log (grep for \"tor:\" or \"AddLocal\")\n+- in the output of RPC `getnetworkinfo` in the \"localaddresses\" section\n+- in the output of the CLI `-netinfo` peer connections dashboard\n+\n+You may set the `-debug=tor` config logging option to have additional\n+information in the debug log about your Tor configuration.\n+\n \n ## 1. Run Bitcoin Core behind a Tor proxy\n "
      }
    ]
  },
  {
    "sha": "e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzBjY2IwYmM0YjY5NWNkMzMxYWVkYTZkN2FhNDA1ZmE2ZDhmMmU3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-09-16T06:43:26Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-17T11:29:23Z"
      },
      "message": "doc: update -externalip documentation in tor.md\n\nGithub-Pull: #19961\nRebased-From: a34eceb4cc054b4233e7321de927e8a7a2146301",
      "tree": {
        "sha": "91a0af940ecb7fe2576e5ee7b6152135b2df90df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91a0af940ecb7fe2576e5ee7b6152135b2df90df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c8482d0a279d07a814eaaae231c90d3d2058e55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c8482d0a279d07a814eaaae231c90d3d2058e55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c8482d0a279d07a814eaaae231c90d3d2058e55"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "34c5f1b5e758f8c7415f91dff453117d9969dc8d",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
        "patch": "@@ -62,14 +62,19 @@ The directory can be different of course, but virtual port numbers should be equ\n your bitcoind's P2P listen port (8333 by default), and target addresses and ports\n should be equal to binding address and port for inbound Tor connections (127.0.0.1:8334 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n-\t                this option, and this can be a .onion address. Given the above\n-\t                configuration, you can find your .onion address in\n+\t-externalip=X   You can tell bitcoin about its publicly reachable addresses using\n+\t                this option, and this can be an onion address. Given the above\n+\t                configuration, you can find your onion address in\n \t                /var/lib/tor/bitcoin-service/hostname. For connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n-\t                Tor proxy typically runs), .onion addresses are given\n+\t                Tor proxy typically runs), onion addresses are given\n \t                preference for your node to advertise itself with.\n \n+\t                You can set multiple local addresses with -externalip. The\n+\t                one that will be rumoured to a particular peer is the most\n+\t                compatible one and also using heuristics, e.g. the address\n+\t                with the most incoming connections, etc.\n+\n \t-listen         You'll need to enable listening for incoming connections, as this\n \t                is off by default behind a proxy.\n "
      }
    ]
  },
  {
    "sha": "35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWExMGU0ZWJjOWRhOTE2YzQ3MGQyYTllNWI2OGMzY2ZjM2VmZDAy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-12-13T19:36:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-17T20:38:57Z"
      },
      "message": "Add patch to make codesign_allocate compatible with Apple's\n\nGithub-Pull: #20644\nRebased-From: a4118c6e200e02e7560f8bc213697aa2909d95b1",
      "tree": {
        "sha": "f2358be2482e58af812c21e8220078c619c7717e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2358be2482e58af812c21e8220078c619c7717e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 22,
      "deletions": 2
    },
    "files": [
      {
        "sha": "33f69375cca312e61779be7503a981ae1c46f6f4",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
        "patch": "@@ -4,7 +4,7 @@ $(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n $(package)_sha256_hash=e51995a843533a3dac155dd0c71362dd471597a2d23f13dff194c6285362f875\n $(package)_build_subdir=cctools\n-$(package)_patches=ld64_disable_threading.patch\n+$(package)_patches=ld64_disable_threading.patch segalign.patch\n \n ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n $(package)_clang_version=8.0.0\n@@ -80,7 +80,8 @@ endef\n define $(package)_preprocess_cmds\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/build.sh && \\\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/install.sh && \\\n-  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch\n+  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/segalign.patch\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "bcdbd67a6c5a0f26164bbff4743479e9645ab776",
        "filename": "depends/patches/native_cctools/segalign.patch",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02/depends/patches/native_cctools/segalign.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02/depends/patches/native_cctools/segalign.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/segalign.patch?ref=35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
        "patch": "@@ -0,0 +1,19 @@\n+commit 7f2eb11ce6ebec7eb9b8e1429535e453054143e5\n+Author: Pieter Wuille <pieter@wuille.net>\n+Date:   Sun Dec 13 11:34:21 2020 -0800\n+\n+    Make cctools_port's codesign_allocate compatible with Apple's\n+\n+diff --git a/cctools/libstuff/arch.c b/cctools/libstuff/arch.c\n+index 6f2332f..d85c25c 100644\n+--- a/cctools/libstuff/arch.c\n++++ b/cctools/libstuff/arch.c\n+@@ -134,7 +134,7 @@ static const struct cpu_entry cpu_entries[] = {\n+     { CPU_TYPE_ARM,\t    LITTLE_ENDIAN_BYTE_SEX, 0,\t\t       0x4000 },\n+     \n+     /* desktop */\n+-    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x1000 },\n++    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x2000 /* Used to be 0x1000; changed to 0x2000 to match Apple's distributed codesign_allocate. */},\n+     { CPU_TYPE_I386,\t    LITTLE_ENDIAN_BYTE_SEX, 0xc0000000,        0x1000 },\n+     { CPU_TYPE_POWERPC,\t    BIG_ENDIAN_BYTE_SEX,    0xc0000000,\t       0x1000 },\n+     { CPU_TYPE_POWERPC64,   BIG_ENDIAN_BYTE_SEX,    0x7ffff00000000LL, 0x1000 },"
      }
    ]
  },
  {
    "sha": "ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjdhMTU1Y2YwNmJmNTRmZmY0ZmY5ZmRhOWIyODIwN2ZjYzlhZGZi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-17T23:31:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-18T07:56:36Z"
      },
      "message": "qt: Align layout of checkboxes\n\nGithub-Pull: bitcoin-core/gui#155\nRebased-From: e71b656f317f38ef0ba0874736f116dae39efc67",
      "tree": {
        "sha": "de299c237c8c7738f97f446f8229906e16201062",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de299c237c8c7738f97f446f8229906e16201062"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0b33c2cb8de6fb6280236a26efbe28abf052b172",
        "filename": "src/qt/forms/createwalletdialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb/src/qt/forms/createwalletdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb/src/qt/forms/createwalletdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/createwalletdialog.ui?ref=ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
        "patch": "@@ -60,7 +60,7 @@\n     <rect>\n      <x>20</x>\n      <y>50</y>\n-     <width>171</width>\n+     <width>220</width>\n      <height>22</height>\n     </rect>\n    </property>\n@@ -79,7 +79,7 @@\n     <rect>\n      <x>20</x>\n      <y>90</y>\n-     <width>130</width>\n+     <width>220</width>\n      <height>21</height>\n     </rect>\n    </property>\n@@ -98,7 +98,7 @@\n     <rect>\n      <x>20</x>\n      <y>115</y>\n-     <width>171</width>\n+     <width>220</width>\n      <height>22</height>\n     </rect>\n    </property>\n@@ -130,7 +130,7 @@\n     <rect>\n      <x>20</x>\n      <y>155</y>\n-     <width>171</width>\n+     <width>220</width>\n      <height>22</height>\n     </rect>\n    </property>"
      }
    ]
  },
  {
    "sha": "1fda7db64f0f30c23724f6db14f8a49d3975c716",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmRhN2RiNjRmMGYzMGMyMzcyNGY2ZGIxNGY4YTQ5ZDM5NzVjNzE2",
    "commit": {
      "author": {
        "name": "Ben Carman",
        "email": "benthecarman@live.com",
        "date": "2020-12-21T15:57:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-21T19:01:02Z"
      },
      "message": "rpc: Add missing description of vout in getrawtransaction help text\n\nGithub-Pull: #20731\nRebased-From: b23349b8804fb60c6b3d7d0e2a95927a0d1b49b9",
      "tree": {
        "sha": "9d926f4ce2f1866519ad1fb18a0ececb9275b45a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d926f4ce2f1866519ad1fb18a0ececb9275b45a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fda7db64f0f30c23724f6db14f8a49d3975c716",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fda7db64f0f30c23724f6db14f8a49d3975c716",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fda7db64f0f30c23724f6db14f8a49d3975c716",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fda7db64f0f30c23724f6db14f8a49d3975c716/comments",
    "author": {
      "login": "benthecarman",
      "id": 15256660,
      "node_id": "MDQ6VXNlcjE1MjU2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benthecarman",
      "html_url": "https://github.com/benthecarman",
      "followers_url": "https://api.github.com/users/benthecarman/followers",
      "following_url": "https://api.github.com/users/benthecarman/following{/other_user}",
      "gists_url": "https://api.github.com/users/benthecarman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
      "organizations_url": "https://api.github.com/users/benthecarman/orgs",
      "repos_url": "https://api.github.com/users/benthecarman/repos",
      "events_url": "https://api.github.com/users/benthecarman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benthecarman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef7a155cf06bf54fff4ff9fda9b28207fcc9adfb"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "70f9279b2333ac1f5e221b5a0e41bbc8b4083f9c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fda7db64f0f30c23724f6db14f8a49d3975c716/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fda7db64f0f30c23724f6db14f8a49d3975c716/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=1fda7db64f0f30c23724f6db14f8a49d3975c716",
        "patch": "@@ -109,7 +109,7 @@ static RPCHelpMan getrawtransaction()\n                                  {RPCResult::Type::OBJ, \"\", \"\",\n                                  {\n                                      {RPCResult::Type::STR_HEX, \"txid\", \"The transaction id\"},\n-                                     {RPCResult::Type::STR, \"vout\", \"\"},\n+                                     {RPCResult::Type::NUM, \"vout\", \"The output number\"},\n                                      {RPCResult::Type::OBJ, \"scriptSig\", \"The script\",\n                                      {\n                                          {RPCResult::Type::STR, \"asm\", \"asm\"},"
      }
    ]
  },
  {
    "sha": "b1c0f97483f01f8836e5d83e98c881e44018cde5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWMwZjk3NDgzZjAxZjg4MzZlNWQ4M2U5OGM4ODFlNDQwMThjZGU1",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-23T19:38:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-26T20:28:15Z"
      },
      "message": "[doc] Add permissions to the getpeerinfo help.\n\nThis field was already being returned, but the RPCHelpMan did not indicate\nthis. So, this PR updates the help text to match.\n\nGithub-Pull: #20756\nRebased-From: 667d203687708390bc0f43f2dd3f4ab427b88338",
      "tree": {
        "sha": "e7cedadf83542520c6482831f5da66de8a65729a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7cedadf83542520c6482831f5da66de8a65729a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1c0f97483f01f8836e5d83e98c881e44018cde5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1c0f97483f01f8836e5d83e98c881e44018cde5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1c0f97483f01f8836e5d83e98c881e44018cde5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1c0f97483f01f8836e5d83e98c881e44018cde5/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fda7db64f0f30c23724f6db14f8a49d3975c716",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fda7db64f0f30c23724f6db14f8a49d3975c716",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fda7db64f0f30c23724f6db14f8a49d3975c716"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "298529e4e7dc1e794cb747632a3ef68e3e865c2b",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1c0f97483f01f8836e5d83e98c881e44018cde5/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1c0f97483f01f8836e5d83e98c881e44018cde5/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=b1c0f97483f01f8836e5d83e98c881e44018cde5",
        "patch": "@@ -141,6 +141,10 @@ static RPCHelpMan getpeerinfo()\n                             }},\n                             {RPCResult::Type::BOOL, \"whitelisted\", /* optional */ true, \"Whether the peer is whitelisted with default permissions\\n\"\n                                                                                         \"(DEPRECATED, returned only if config option -deprecatedrpc=whitelisted is passed)\"},\n+                            {RPCResult::Type::ARR, \"permissions\", \"Any special permissions that have been granted to this peer\",\n+                            {\n+                                {RPCResult::Type::STR, \"permission_type\", Join(NET_PERMISSIONS_DOC, \",\\n\") + \".\\n\"},\n+                            }},\n                             {RPCResult::Type::NUM, \"minfeefilter\", \"The minimum fee rate for transactions this peer accepts\"},\n                             {RPCResult::Type::OBJ_DYN, \"bytessent_per_msg\", \"\",\n                             {"
      }
    ]
  },
  {
    "sha": "ac125e960f3181fba0104466c205053729c0e1ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzEyNWU5NjBmMzE4MWZiYTAxMDQ0NjZjMjA1MDUzNzI5YzBlMWVk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-02T12:23:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-02T14:01:09Z"
      },
      "message": "Merge #20669: [0.21] final rc4 backports\n\nb1c0f97483f01f8836e5d83e98c881e44018cde5 [doc] Add permissions to the getpeerinfo help. (Amiti Uttarwar)\n1fda7db64f0f30c23724f6db14f8a49d3975c716 rpc: Add missing description of vout in getrawtransaction help text (Ben Carman)\nef7a155cf06bf54fff4ff9fda9b28207fcc9adfb qt: Align layout of checkboxes (Hennadii Stepanov)\n35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02 Add patch to make codesign_allocate compatible with Apple's (Pieter Wuille)\ne70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7 doc: update -externalip documentation in tor.md (Jon Atack)\n2c8482d0a279d07a814eaaae231c90d3d2058e55 doc: add tor.md section on how to get tor info via bitcoind (Jon Atack)\n0c1fa78af1c413c848359df76f4d55f819b9fad5 doc: update tor.md address examples from onion v2 to v3 (Jon Atack)\n84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3 doc: warn that incoming conns are unlikely when not using default ports (Adam Jonas)\ne4440eb67b339fdacb2c1476f8f909a009c6a47f doc: Add warnings for http interfaces limitations (Fabian Jahr)\n85dabd12494a0d82a8f5883cee1c1ff29fb81b27 Removed redundant git pull from appveyor config. (Aaron Clauson)\n249d61a382014c15025fe63025ac5f46d4721262 Adjusted msvc compiler and linker settings to remove optimisations that are causing sporadic ABI issues on Visual Studio updates. (Aaron Clauson)\ne7b53d47218301790bfec44d50219561502922ad This change to the appveyor CI config for msvc builds reverses a change introduced in #19960. It re-applies a setting to inform vcpkg to only build release vesions of the dependencies rather than the default of debug and release. (Aaron Clauson)\n8273ea3b8db1449b65cf369e541a1253c4490f45 Move signet onion seed from v2 to v3 (Sjors Provoost)\n\nPull request description:\n\n  The remaining backports to get rc4 out. Currently only waiting on the macOS build fix.\n\nACKs for top commit:\n  benthecarman:\n    ACK b1c0f97483f01f8836e5d83e98c881e44018cde5\n  Sjors:\n    ACK b1c0f97\n\nTree-SHA512: 53eaecd531ba461678917cb630d67f1e6bb737d64022abe971eaced6eca366c9ed593e44276bd9c7ad7b3aebe3850d2d29282eb310e10b547986d10fe77a8482",
      "tree": {
        "sha": "e7cedadf83542520c6482831f5da66de8a65729a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7cedadf83542520c6482831f5da66de8a65729a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac125e960f3181fba0104466c205053729c0e1ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/wfKUACgkQHkrtYphs\n0l2JiggAjaSJhVThveTNlQ9a5N2jUzy0WzywCFJkNM/Av2GwezR8GdAiBDmTmO8F\nMD8SLV1mSSET0KcmutYt9g1MHLVSIHV50ZHv/U9BzfgYTu5W3pBwzONyj1b76SFQ\n+fv2Q42i7KuCKsN6W+AjK23MQ2TLUAILDw1ywm8VD+ZFJlMBVX8/0EZoMO8sthI4\ndp9lg2MBXF2hG8wL7nyuvU/dN/6U6vdt7eKY0T1YzPOXYiCJ045wEjprdazwGAAV\noLoR38YVNqbHsGyQFLxkvIZdYwsUBCrcjSaql+tbd+j1pbOwTTQnYTtpLjowWa7Q\nKm/TSOk/ev6aCQghlDzTHxdI4fzwjw==\n=Qlu8\n-----END PGP SIGNATURE-----",
        "payload": "tree e7cedadf83542520c6482831f5da66de8a65729a\nparent 9ae536d3684e345c6700dadf989bf7f751ee1c54\nparent b1c0f97483f01f8836e5d83e98c881e44018cde5\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609590227 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609596069 +0100\n\nMerge #20669: [0.21] final rc4 backports\n\nb1c0f97483f01f8836e5d83e98c881e44018cde5 [doc] Add permissions to the getpeerinfo help. (Amiti Uttarwar)\n1fda7db64f0f30c23724f6db14f8a49d3975c716 rpc: Add missing description of vout in getrawtransaction help text (Ben Carman)\nef7a155cf06bf54fff4ff9fda9b28207fcc9adfb qt: Align layout of checkboxes (Hennadii Stepanov)\n35a10e4ebc9da916c470d2a9e5b68c3cfc3efd02 Add patch to make codesign_allocate compatible with Apple's (Pieter Wuille)\ne70ccb0bc4b695cd331aeda6d7aa405fa6d8f2e7 doc: update -externalip documentation in tor.md (Jon Atack)\n2c8482d0a279d07a814eaaae231c90d3d2058e55 doc: add tor.md section on how to get tor info via bitcoind (Jon Atack)\n0c1fa78af1c413c848359df76f4d55f819b9fad5 doc: update tor.md address examples from onion v2 to v3 (Jon Atack)\n84e8d5467fcec3b7c8ce950cd7a3e7e7b24452a3 doc: warn that incoming conns are unlikely when not using default ports (Adam Jonas)\ne4440eb67b339fdacb2c1476f8f909a009c6a47f doc: Add warnings for http interfaces limitations (Fabian Jahr)\n85dabd12494a0d82a8f5883cee1c1ff29fb81b27 Removed redundant git pull from appveyor config. (Aaron Clauson)\n249d61a382014c15025fe63025ac5f46d4721262 Adjusted msvc compiler and linker settings to remove optimisations that are causing sporadic ABI issues on Visual Studio updates. (Aaron Clauson)\ne7b53d47218301790bfec44d50219561502922ad This change to the appveyor CI config for msvc builds reverses a change introduced in #19960. It re-applies a setting to inform vcpkg to only build release vesions of the dependencies rather than the default of debug and release. (Aaron Clauson)\n8273ea3b8db1449b65cf369e541a1253c4490f45 Move signet onion seed from v2 to v3 (Sjors Provoost)\n\nPull request description:\n\n  The remaining backports to get rc4 out. Currently only waiting on the macOS build fix.\n\nACKs for top commit:\n  benthecarman:\n    ACK b1c0f97483f01f8836e5d83e98c881e44018cde5\n  Sjors:\n    ACK b1c0f97\n\nTree-SHA512: 53eaecd531ba461678917cb630d67f1e6bb737d64022abe971eaced6eca366c9ed593e44276bd9c7ad7b3aebe3850d2d29282eb310e10b547986d10fe77a8482\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac125e960f3181fba0104466c205053729c0e1ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac125e960f3181fba0104466c205053729c0e1ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac125e960f3181fba0104466c205053729c0e1ed/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ae536d3684e345c6700dadf989bf7f751ee1c54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ae536d3684e345c6700dadf989bf7f751ee1c54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ae536d3684e345c6700dadf989bf7f751ee1c54"
      },
      {
        "sha": "b1c0f97483f01f8836e5d83e98c881e44018cde5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1c0f97483f01f8836e5d83e98c881e44018cde5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1c0f97483f01f8836e5d83e98c881e44018cde5"
      }
    ],
    "stats": {
      "total": 182,
      "additions": 114,
      "deletions": 68
    },
    "files": [
      {
        "sha": "7250d4ad94955bdd77b52be7490e122173ea91f6",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -1,29 +1,30 @@\n version: '{branch}.{build}'\n skip_tags: true\n-image: Previous Visual Studio 2019\n+image: Visual Studio 2019\n configuration: Release\n platform: x64\n clone_depth: 5\n environment:\n   PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n   PYTHONUTF8: 1\n-  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n-  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/qt598x64_vs2019_v1681/qt598_x64_vs2019_1681.zip'\n+  QT_DOWNLOAD_HASH: '00cf7327818c07d74e0b1a4464ffe987c2728b00d49d4bf333065892af0515c3'\n   QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n-  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-  VCPKG_COMMIT_ID: '40230b8e3f6368dcb398d649331be878ca1e9007'\n+  VCPKG_TAG: '2020.11-1'\n install:\n # Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n # - cmd: pip install zmq\n-# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+# The powershell block below is to set up vcpkg to install the c++ dependencies. The pseudo code is:\n #    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n-#    b. Install the missing packages using the vcpkg manifest.\n+#    b. Append a setting to the vcpkg cmake config file to only do release builds of dependencies (skipping deubg builds saves ~5 mins).\n+# Note originally this block also installed the dependencies using 'vcpkg install'. Dependencies are now installed\n+# as part of the msbuild command using vcpkg mainfests.\n - ps: |\n       cd c:\\tools\\vcpkg\n       $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n-      git pull origin master > $null\n-      git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n+      git -c advice.detachedHead=false checkout $env:VCPKG_TAG\n       .\\bootstrap-vcpkg.bat > $null\n+      Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n       cd \"$env:APPVEYOR_BUILD_FOLDER\"\n before_build:\n # Powershell block below is to download and extract the Qt static libraries. The pseudo code is:"
      },
      {
        "sha": "65ce1ee9da0468c859f0ed5b48ec129135560401",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -56,7 +56,7 @@\n     </ClCompile>\n     <Link>\n       <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+      <AdditionalOptions>/ignore:4206 /LTCG:OFF</AdditionalOptions>\n     </Link>\n     <ResourceCompile>\n       <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>"
      },
      {
        "sha": "9c589bccbc4754271e51eecf5eca28ec568836c4",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "modified",
        "additions": 18,
        "deletions": 39,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -4,8 +4,6 @@\n \n   <PropertyGroup Label=\"Globals\">\n     <VCProjectVersion>16.0</VCProjectVersion>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n     <UseNativeEnvironment>true</UseNativeEnvironment>\n    </PropertyGroup>\n \n@@ -16,6 +14,8 @@\n     <VcpkgUseStatic>true</VcpkgUseStatic>\n     <VcpkgAutoLink>true</VcpkgAutoLink>\n     <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n   </PropertyGroup>\n \n   <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n@@ -45,66 +45,46 @@\n     </ProjectConfiguration>\n   </ItemGroup>\n \n-  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <WholeProgramOptimization>false</WholeProgramOptimization>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n     <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n+    <GenerateManifest>No</GenerateManifest>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n   </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n+\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n     <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n   </PropertyGroup>\n \n-<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n-    </ClCompile>\n-    <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-    </Link>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+<ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n-      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n-    </ClCompile>\n-  </ItemDefinitionGroup>\n-\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <Optimization>MaxSpeed</Optimization>\n+      <WholeProgramOptimization>false</WholeProgramOptimization>\n       <FunctionLevelLinking>true</FunctionLevelLinking>\n       <IntrinsicFunctions>true</IntrinsicFunctions>\n       <SDLCheck>true</SDLCheck>\n       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <DebugInformationFormat>None</DebugInformationFormat>\n     </ClCompile>\n     <Link>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>false</EnableCOMDATFolding>\n+      <OptimizeReferences>false</OptimizeReferences>\n+      <AdditionalOptions>/LTCG:OFF</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n \n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n+      <WholeProgramOptimization>false</WholeProgramOptimization>\n       <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>true</SDLCheck>\n       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n@@ -124,7 +104,6 @@\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n       <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n     </Link>\n     <Lib>"
      },
      {
        "sha": "270c75e8a7b1fdc870b4d7925e69a7c26b9fedc5",
        "filename": "build_msvc/common.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -4,7 +4,7 @@\n   <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n     <ItemGroup>\n       <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n-      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\" Condition=\"Exists('$(OutDir)$(TargetName).pdb')\"></BuildArtifacts>\n     </ItemGroup>\n     <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n   </Target>"
      },
      {
        "sha": "1ddd62edf2505a58ae1ddb67de0344b92e8b025b",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -73,7 +73,7 @@\n     </ClCompile>\n     <Link>\n       <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+      <AdditionalOptions>/ignore:4206 /LTCG:OFF</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n \n@@ -83,7 +83,7 @@\n     </ClCompile>\n     <Link>\n       <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n-\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>"
      },
      {
        "sha": "33f69375cca312e61779be7503a981ae1c46f6f4",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -4,7 +4,7 @@ $(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n $(package)_sha256_hash=e51995a843533a3dac155dd0c71362dd471597a2d23f13dff194c6285362f875\n $(package)_build_subdir=cctools\n-$(package)_patches=ld64_disable_threading.patch\n+$(package)_patches=ld64_disable_threading.patch segalign.patch\n \n ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n $(package)_clang_version=8.0.0\n@@ -80,7 +80,8 @@ endef\n define $(package)_preprocess_cmds\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/build.sh && \\\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/install.sh && \\\n-  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch\n+  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/segalign.patch\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "bcdbd67a6c5a0f26164bbff4743479e9645ab776",
        "filename": "depends/patches/native_cctools/segalign.patch",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/depends/patches/native_cctools/segalign.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/depends/patches/native_cctools/segalign.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/segalign.patch?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -0,0 +1,19 @@\n+commit 7f2eb11ce6ebec7eb9b8e1429535e453054143e5\n+Author: Pieter Wuille <pieter@wuille.net>\n+Date:   Sun Dec 13 11:34:21 2020 -0800\n+\n+    Make cctools_port's codesign_allocate compatible with Apple's\n+\n+diff --git a/cctools/libstuff/arch.c b/cctools/libstuff/arch.c\n+index 6f2332f..d85c25c 100644\n+--- a/cctools/libstuff/arch.c\n++++ b/cctools/libstuff/arch.c\n+@@ -134,7 +134,7 @@ static const struct cpu_entry cpu_entries[] = {\n+     { CPU_TYPE_ARM,\t    LITTLE_ENDIAN_BYTE_SEX, 0,\t\t       0x4000 },\n+     \n+     /* desktop */\n+-    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x1000 },\n++    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x2000 /* Used to be 0x1000; changed to 0x2000 to match Apple's distributed codesign_allocate. */},\n+     { CPU_TYPE_I386,\t    LITTLE_ENDIAN_BYTE_SEX, 0xc0000000,        0x1000 },\n+     { CPU_TYPE_POWERPC,\t    BIG_ENDIAN_BYTE_SEX,    0xc0000000,\t       0x1000 },\n+     { CPU_TYPE_POWERPC64,   BIG_ENDIAN_BYTE_SEX,    0x7ffff00000000LL, 0x1000 },"
      },
      {
        "sha": "c66e79af713a3adaf65fef7b69b943162c013ade",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -127,3 +127,14 @@ However, the wallet may not be up-to-date with the current state of the mempool\n or the state of the mempool by an RPC that returned before this RPC. For\n example, a wallet transaction that was BIP-125-replaced in the mempool prior to\n this RPC may not yet be reflected as such in this RPC response.\n+\n+## Limitations\n+\n+There is a known issue in the JSON-RPC interface that can cause a node to crash if\n+too many http connections are being opened at the same time because the system runs\n+out of available file descriptors. To prevent this from happening you might\n+want to increase the number of maximum allowed file descriptors in your system\n+and try to prevent opening too many connections to your JSON-RPC interface at the\n+same time if this is under your control. It is hard to give general advice\n+since this depends on your system but if you make several hundred requests at\n+once you are definitely at risk of encountering this issue."
      },
      {
        "sha": "3b127703b7d217bcbc1cf13b1d8de88cb22938b1",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -12,6 +12,18 @@ REST Interface consistency guarantees\n The [same guarantees as for the RPC Interface](/doc/JSON-RPC-interface.md#rpc-consistency-guarantees)\n apply.\n \n+Limitations\n+-----------\n+\n+There is a known issue in the REST interface that can cause a node to crash if\n+too many http connections are being opened at the same time because the system runs\n+out of available file descriptors. To prevent this from happening you might\n+want to increase the number of maximum allowed file descriptors in your system\n+and try to prevent opening too many connections to your rest interface at the\n+same time if this is under your control. It is hard to give general advice\n+since this depends on your system but if you make several hundred requests at\n+once you are definitely at risk of encountering this issue.\n+\n Supported API\n -------------\n "
      },
      {
        "sha": "34c5f1b5e758f8c7415f91dff453117d9969dc8d",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -5,6 +5,16 @@ It is possible to run Bitcoin Core as a Tor onion service, and connect to such s\n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n+## How to see information about your Tor configuration via Bitcoin Core\n+\n+There are several ways to see your local onion address in Bitcoin Core:\n+- in the debug log (grep for \"tor:\" or \"AddLocal\")\n+- in the output of RPC `getnetworkinfo` in the \"localaddresses\" section\n+- in the output of the CLI `-netinfo` peer connections dashboard\n+\n+You may set the `-debug=tor` config logging option to have additional\n+information in the debug log about your Tor configuration.\n+\n \n ## 1. Run Bitcoin Core behind a Tor proxy\n \n@@ -52,14 +62,19 @@ The directory can be different of course, but virtual port numbers should be equ\n your bitcoind's P2P listen port (8333 by default), and target addresses and ports\n should be equal to binding address and port for inbound Tor connections (127.0.0.1:8334 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n-\t                this option, and this can be a .onion address. Given the above\n-\t                configuration, you can find your .onion address in\n+\t-externalip=X   You can tell bitcoin about its publicly reachable addresses using\n+\t                this option, and this can be an onion address. Given the above\n+\t                configuration, you can find your onion address in\n \t                /var/lib/tor/bitcoin-service/hostname. For connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n-\t                Tor proxy typically runs), .onion addresses are given\n+\t                Tor proxy typically runs), onion addresses are given\n \t                preference for your node to advertise itself with.\n \n+\t                You can set multiple local addresses with -externalip. The\n+\t                one that will be rumoured to a particular peer is the most\n+\t                compatible one and also using heuristics, e.g. the address\n+\t                with the most incoming connections, etc.\n+\n \t-listen         You'll need to enable listening for incoming connections, as this\n \t                is off by default behind a proxy.\n \n@@ -72,7 +87,7 @@ should be equal to binding address and port for inbound Tor connections (127.0.0\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./bitcoind -proxy=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -listen\n \n (obviously, replace the .onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n@@ -90,7 +105,7 @@ and open port 8333 on your firewall (or use -upnp).\n If you only want to use Tor to reach .onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoind -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./bitcoind -onion=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -discover\n \n ## 3. Automatically listen on Tor\n "
      },
      {
        "sha": "88cf5ef0a88e720c956efa44f8cd223bc4565e4c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -272,7 +272,7 @@ class SigNetParams : public CChainParams {\n             bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n             vSeeds.emplace_back(\"178.128.221.177\");\n             vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n-            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+            vSeeds.emplace_back(\"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\");\n \n             consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000000000000019fd16269a\");\n             consensus.defaultAssumeValid = uint256S(\"0x0000002a1de0f46379358c1fd09906f7ac59adf3712323ed90eb59e4c183c020\"); // 9434"
      },
      {
        "sha": "6380da4f7280a28ba4227f338e99b0b845fa3e36",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -461,7 +461,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-peerblockfilters\", strprintf(\"Serve compact block filters to peers per BIP 157 (default: %u)\", DEFAULT_PEERBLOCKFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-permitbaremultisig\", strprintf(\"Relay non-P2SH multisig (default: %u)\", DEFAULT_PERMIT_BAREMULTISIG), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port> (default: %u, testnet: %u signet: %u, regtest: %u)\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port>. Nodes not using the default ports (default: %u, testnet: %u, signet: %u, regtest: %u) are unlikely to get incoming connections.\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxy=<ip:port>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxyrandomize\", strprintf(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\", DEFAULT_PROXYRANDOMIZE), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-seednode=<ip>\", \"Connect to a node to retrieve peer addresses, and disconnect. This option can be specified multiple times to connect to multiple nodes.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);"
      },
      {
        "sha": "1fd913eb64f75d26c51c872630f7077d293be9cb",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -2050,7 +2050,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 continue;\n             }\n \n-            // do not allow non-default ports, unless after 50 invalid addresses selected already\n+            // Do not allow non-default ports, unless after 50 invalid\n+            // addresses selected already. This is to prevent malicious peers\n+            // from advertising themselves as a service on another host and\n+            // port, causing a DoS attack as nodes around the network attempt\n+            // to connect to it fruitlessly.\n             if (addr.GetPort() != Params().GetDefaultPort() && nTries < 50)\n                 continue;\n "
      },
      {
        "sha": "0b33c2cb8de6fb6280236a26efbe28abf052b172",
        "filename": "src/qt/forms/createwalletdialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/src/qt/forms/createwalletdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/src/qt/forms/createwalletdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/createwalletdialog.ui?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -60,7 +60,7 @@\n     <rect>\n      <x>20</x>\n      <y>50</y>\n-     <width>171</width>\n+     <width>220</width>\n      <height>22</height>\n     </rect>\n    </property>\n@@ -79,7 +79,7 @@\n     <rect>\n      <x>20</x>\n      <y>90</y>\n-     <width>130</width>\n+     <width>220</width>\n      <height>21</height>\n     </rect>\n    </property>\n@@ -98,7 +98,7 @@\n     <rect>\n      <x>20</x>\n      <y>115</y>\n-     <width>171</width>\n+     <width>220</width>\n      <height>22</height>\n     </rect>\n    </property>\n@@ -130,7 +130,7 @@\n     <rect>\n      <x>20</x>\n      <y>155</y>\n-     <width>171</width>\n+     <width>220</width>\n      <height>22</height>\n     </rect>\n    </property>"
      },
      {
        "sha": "298529e4e7dc1e794cb747632a3ef68e3e865c2b",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -141,6 +141,10 @@ static RPCHelpMan getpeerinfo()\n                             }},\n                             {RPCResult::Type::BOOL, \"whitelisted\", /* optional */ true, \"Whether the peer is whitelisted with default permissions\\n\"\n                                                                                         \"(DEPRECATED, returned only if config option -deprecatedrpc=whitelisted is passed)\"},\n+                            {RPCResult::Type::ARR, \"permissions\", \"Any special permissions that have been granted to this peer\",\n+                            {\n+                                {RPCResult::Type::STR, \"permission_type\", Join(NET_PERMISSIONS_DOC, \",\\n\") + \".\\n\"},\n+                            }},\n                             {RPCResult::Type::NUM, \"minfeefilter\", \"The minimum fee rate for transactions this peer accepts\"},\n                             {RPCResult::Type::OBJ_DYN, \"bytessent_per_msg\", \"\",\n                             {"
      },
      {
        "sha": "70f9279b2333ac1f5e221b5a0e41bbc8b4083f9c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac125e960f3181fba0104466c205053729c0e1ed/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac125e960f3181fba0104466c205053729c0e1ed/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ac125e960f3181fba0104466c205053729c0e1ed",
        "patch": "@@ -109,7 +109,7 @@ static RPCHelpMan getrawtransaction()\n                                  {RPCResult::Type::OBJ, \"\", \"\",\n                                  {\n                                      {RPCResult::Type::STR_HEX, \"txid\", \"The transaction id\"},\n-                                     {RPCResult::Type::STR, \"vout\", \"\"},\n+                                     {RPCResult::Type::NUM, \"vout\", \"The output number\"},\n                                      {RPCResult::Type::OBJ, \"scriptSig\", \"The script\",\n                                      {\n                                          {RPCResult::Type::STR, \"asm\", \"asm\"},"
      }
    ]
  },
  {
    "sha": "93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2NlNDI5ZjBlNmFiNmUwOTA1MWZkOTQ3Yzg5OGVjYmJmOTA3Y2Q4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-03T12:11:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-03T12:12:39Z"
      },
      "message": "qt: Pre-rc4 translations update\n\nTree-SHA512: 14259d2f469ea588f364f64fdd89b90cbcde8f66ddc011d96d656a06920584c0577e64fa15a41a1dc1c8c8a98a1f955748c61def6807b1bb71b0113bb28268f2",
      "tree": {
        "sha": "8458c66239b8e40c1d6174c316bfa0bf36b3fe7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8458c66239b8e40c1d6174c316bfa0bf36b3fe7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/xtLgACgkQHkrtYphs\n0l37lgf/a/kCiIAqgEegFDYRByurtQJk6tjT0O4KCxWV6YzqAGSAcufrUR92Fj88\n9pzuIi8lC8B85Jr1Yp6ecKZ88eK+tRnvgFekjn3Ceuy1Jd8zgG6bHuMHWnNlWaT3\ngp9LHhbmYjJWo49BKkGtVfC8XCTaNP4VyX9UCG/ivPTWTdkJfq8Me8rJMkQ6Ool1\nxY2qnvRT1snuQI/kp+o7lDhL6H3nnzNX7XlyXD1ihhUSCa3/4H4O1FE8yd9JbOAB\ndTSuq0mRnEmaP5JgcaeLpbU8hzGkTzfN3kNkZGfRKkWpHbjDfkuxbjC6ViVFyNrx\nqE26G7Da5SeInYVpd+v2oKJEavPAXw==\n=sJa0\n-----END PGP SIGNATURE-----",
        "payload": "tree 8458c66239b8e40c1d6174c316bfa0bf36b3fe7a\nparent ac125e960f3181fba0104466c205053729c0e1ed\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609675885 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609675959 +0100\n\nqt: Pre-rc4 translations update\n\nTree-SHA512: 14259d2f469ea588f364f64fdd89b90cbcde8f66ddc011d96d656a06920584c0577e64fa15a41a1dc1c8c8a98a1f955748c61def6807b1bb71b0113bb28268f2\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac125e960f3181fba0104466c205053729c0e1ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac125e960f3181fba0104466c205053729c0e1ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac125e960f3181fba0104466c205053729c0e1ed"
      }
    ],
    "stats": {
      "total": 4757,
      "additions": 3458,
      "deletions": 1299
    },
    "files": [
      {
        "sha": "157f1c9d14084ad18118097dcd0d8b743b008b20",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -1547,6 +1547,18 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>or</source>\n         <translation>\u0623\u0648</translation>\n     </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>\u062a\u0641\u062a\u0642\u062f \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u0625\u0644\u0649 \u0628\u0639\u0636 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0648\u0644 \u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a </translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>.\u0644\u0643\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u062e\u0641\u0636\u0629 \u0644\u0627 \u064a\u0645\u0643\u0646\u0647\u0627 \u062a\u0648\u0642\u064a\u0639 \u0644\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation> \u0627\u0644\u0635\u0641\u0642\u0629 \u0645\u0648\u0642\u0639\u0629 \u0628\u0627\u0644\u0643\u0627\u0645\u0644 \u0648\u062c\u0627\u0647\u0632\u0629 \u0644\u0644\u0628\u062b</translation>\n+    </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n@@ -1562,6 +1574,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>URI handling</source>\n         <translation>\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>\u0645\u0639\u0627\u0644\u062c\u0629 \u0637\u0644\u0628 \u0627\u0644\u062f\u0641\u0639 \u0644\u0623\u0646 BIP70 \u063a\u064a\u0631 \u0645\u062f\u0639\u0648\u0645.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u062f\u0641\u0639 \u063a\u064a\u0631 \u0635\u0627\u0644\u062d %1</translation>"
      },
      {
        "sha": "135dc3c2352cddbbcf0c9b9eefeb9a65a7921153",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -1453,6 +1453,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Dialog</source>\n         <translation>Dialog</translation>\n     </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Zachovaj procesn\u00ed data</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Celkov\u00e1 \u010d\u00e1stka</translation>\n@@ -1461,6 +1465,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>or</source>\n         <translation>nebo</translation>\n     </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>Ale tenhle vstup nem\u00e1 spr\u00e1vn\u00e9 kl\u00ed\u010de</translation>\n+    </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n@@ -1626,6 +1634,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <source>Error: %1</source>\n         <translation>Chyba: %1</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>Zji\u0161\u0165ov\u00e1n\u00ed neshod: %1</translation>\n+    </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n         <translation>%1 je\u0161t\u011b bezpe\u010dn\u011b neskon\u010dil\u2026</translation>\n@@ -2356,6 +2368,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Are you sure you want to send?</source>\n         <translation>Jsi si jist\u00fd, \u017ee tuhle transakci chce\u0161 poslat?</translation>\n     </message>\n+    <message>\n+        <source>Save Transaction Data</source>\n+        <translation>Zachovaj procesn\u00ed data</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>nebo</translation>\n@@ -3442,6 +3458,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>B\u011bhem inicializace se nepoda\u0159ilo proskenovat pen\u011b\u017eenku</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>Selh\u00e1n\u00ed v ov\u011b\u0159en\u00ed datab\u00e1ze</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importuji...</translation>"
      },
      {
        "sha": "eb5d612c43d642fad90ed9c40ec3d04b844f2fca",
        "filename": "src/qt/locale/bitcoin_el.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_el.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_el.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -15,7 +15,7 @@\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\u0391\u03bd\u03c4\u03ad\u03b3\u03c1\u03b1\u03c8\u03b5 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03c3\u03c4\u03bf \u03c0\u03c1\u03cc\u03c7\u03b5\u03b9\u03c1\u03bf \u03c4\u03bf\u03c5 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2</translation>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03c3\u03c4\u03bf \u03c0\u03c1\u03cc\u03c7\u03b5\u03b9\u03c1\u03bf \u03c4\u03bf\u03c5 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n@@ -1453,6 +1453,10 @@\n         <source>Failed to load transaction: %1</source>\n         <translation>\u0391\u03c0\u03bf\u03c4\u03c5\u03c7\u03af\u03b1 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2: %1</translation>\n     </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>\u0391\u03c0\u03bf\u03c4\u03c5\u03c7\u03af\u03b1 \u03b5\u03ba\u03c0\u03bb\u03ae\u03c1\u03c9\u03c3\u03b7\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2: %1</translation>\n+    </message>\n     <message>\n         <source>Unknown error processing transaction.</source>\n         <translation>\u0386\u03b3\u03bd\u03c9\u03c3\u03c4\u03bf \u03bb\u03ac\u03b8\u03bf\u03c2  \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2.</translation>\n@@ -3298,6 +3302,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1</translation>\n     </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>\u0391\u03bd\u03c4\u03af\u03b3\u03c1\u03b1\u03c6\u03bf \u03b1\u03c3\u03c6\u03b1\u03bb\u03b5\u03af\u03b1\u03c2 \u03a0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd</translation>\n@@ -3593,6 +3601,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>\u03a0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03be\u03b1\u03bd\u03b1\u03c6\u03c4\u03b9\u03ac\u03be\u03b5\u03c4\u03b5 \u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03bf -reindex \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c8\u03b5\u03c4\u03b5 \u03c3\u03c4\u03b7 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c7\u03c9\u03c1\u03af\u03c2 \u03b5\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7. \u0391\u03c5\u03c4\u03cc \u03b8\u03b1 \u03be\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03c4\u03ce\u03c3\u03b5\u03b9 \u03bf\u03bb\u03cc\u03ba\u03bb\u03b7\u03c1\u03bf \u03c4\u03bf blockchain</translation>\n     </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>\u0391\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03c5\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c7\u03ce\u03c1\u03bf\u03c2 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b9\u03ba\u03c1\u03cc\u03c2!</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd, \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2.</translation>"
      },
      {
        "sha": "19a902134844ba3d4e2c0bd544046b6922c3611f",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 127,
        "deletions": 43,
        "changes": 170,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -143,99 +143,99 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n-        <translation>Cifrar cartera</translation>\n+        <translation>Cifrar billetera</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n-        <translation>Esta operaci\u00f3n necesita la contrase\u00f1a para desbloquear la cartera</translation>\n+        <translation>Esta operaci\u00f3n necesita la contrase\u00f1a para desbloquear la billetera.</translation>\n     </message>\n     <message>\n         <source>Unlock wallet</source>\n-        <translation>Desbloquear cartera</translation>\n+        <translation>Desbloquear billetera</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n-        <translation>Esta operaci\u00f3n necesita la contrase\u00f1a para desbloquear la cartera.</translation>\n+        <translation>Esta operaci\u00f3n necesita la contrase\u00f1a para desbloquear la billetera.</translation>\n     </message>\n     <message>\n         <source>Decrypt wallet</source>\n-        <translation>Descifrar cartera</translation>\n+        <translation>Descifrar billetera</translation>\n     </message>\n     <message>\n         <source>Change passphrase</source>\n         <translation>Cambiar contrase\u00f1a</translation>\n     </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n-        <translation>Confirma el cifrado de esta cartera</translation>\n+        <translation>Confirma el cifrado de esta billetera</translation>\n     </message>\n     <message>\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n         <translation>Atenci\u00f3n: Si cifra su monedero y pierde la contrase\u00f1a, perder\u00e1 \u00a1&lt;b&gt;TODOS SUS BITCOINS&lt;/b&gt;!</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n-        <translation>\u00bfSeguro que quieres cifrar tu cartera?</translation>\n+        <translation>\u00bfSeguro que quieres cifrar tu billetera?</translation>\n     </message>\n     <message>\n         <source>Wallet encrypted</source>\n-        <translation>Cartera encriptada</translation>\n+        <translation>Billetera encriptada</translation>\n     </message>\n     <message>\n         <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>Introduce la contrase\u00f1a nueva para la cartera. &lt;br/&gt;Por favor utiliza una contrase\u00f1a de &lt;b&gt;diez o m\u00e1s caracteres aleatorios&lt;/b&gt;, u &lt;b&gt;ocho o m\u00e1s palabras&lt;/b&gt;.</translation>\n+        <translation>Introduce la contrase\u00f1a nueva para la billetera. &lt;br/&gt;Por favor utiliza una contrase\u00f1a de &lt;b&gt;diez o m\u00e1s caracteres aleatorios&lt;/b&gt;, u &lt;b&gt;ocho o m\u00e1s palabras&lt;/b&gt;.</translation>\n     </message>\n     <message>\n         <source>Enter the old passphrase and new passphrase for the wallet.</source>\n-        <translation>Introduce la contrase\u00f1a antigua y la nueva para la cartera.</translation>\n+        <translation>Introduce la contrase\u00f1a antigua y la nueva para la billetera.</translation>\n     </message>\n     <message>\n         <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n-        <translation>Recuerda que cifrar tu cartera no garantiza la protecci\u00f3n de tus bitcoin si tu ordenador es infectado con malware.</translation>\n+        <translation>Recuerda que cifrar tu billetera no garantiza la protecci\u00f3n de tus bitcoin si tu ordenador es infectado con malware.</translation>\n     </message>\n     <message>\n         <source>Wallet to be encrypted</source>\n-        <translation>Cartera a cifrar</translation>\n+        <translation>Billetera a cifrar</translation>\n     </message>\n     <message>\n         <source>Your wallet is about to be encrypted. </source>\n-        <translation>Tu cartera va a ser cifrada</translation>\n+        <translation>Tu billetera va a ser cifrada</translation>\n     </message>\n     <message>\n         <source>Your wallet is now encrypted. </source>\n-        <translation>Tu cartera ya est\u00e1 cifrada</translation>\n+        <translation>Tu billetera ya est\u00e1 cifrada</translation>\n     </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n-        <translation>IMPORTANTE: Cualquier copia de seguridad que hayas hecho del archivo de tu cartera debe ser reemplazada por el archivo cifrado de la cartera reci\u00e9n generado. Por razones de seguridad, las copias de seguridad anteriores del archivo de la cartera sin cifrar ser\u00e1n in\u00fatiles cuando empiece a usar la nueva cartera cifrada.</translation>\n+        <translation>IMPORTANTE: Cualquier copia de seguridad que hayas hecho del archivo de tu billetera debe ser reemplazada por el archivo cifrado de la billetera reci\u00e9n generado. Por razones de seguridad, las copias de seguridad anteriores del archivo de la billetera sin cifrar ser\u00e1n in\u00fatiles cuando empiece a usar la nueva billetera cifrada.</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed</source>\n-        <translation>El cifrado de la cartera ha fallado</translation>\n+        <translation>El cifrado de la billetera ha fallado</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n-        <translation>El cifrado de la cartera ha fallado debido a un error interno. Tu cartera no ha sido cifrada.</translation>\n+        <translation>El cifrado de la billetera ha fallado debido a un error interno. Tu billetera no ha sido cifrada.</translation>\n     </message>\n     <message>\n         <source>The supplied passphrases do not match.</source>\n         <translation>Las contrase\u00f1as dadas no coinciden.</translation>\n     </message>\n     <message>\n         <source>Wallet unlock failed</source>\n-        <translation>El desbloqueo de la cartera ha fallado</translation>\n+        <translation>El desbloqueo de la billetera ha fallado</translation>\n     </message>\n     <message>\n         <source>The passphrase entered for the wallet decryption was incorrect.</source>\n-        <translation>La contrase\u00f1a introducida descifrar la cartera es incorrecta.</translation>\n+        <translation>La contrase\u00f1a introducida descifrar la billetera es incorrecta.</translation>\n     </message>\n     <message>\n         <source>Wallet decryption failed</source>\n-        <translation>El descifrado de la cartera ha fallado</translation>\n+        <translation>El descifrado de la billetera ha fallado</translation>\n     </message>\n     <message>\n         <source>Wallet passphrase was successfully changed.</source>\n-        <translation>La contrase\u00f1a de la cartera ha sido cambiada.</translation>\n+        <translation>La contrase\u00f1a de la billetera ha sido cambiada.</translation>\n     </message>\n     <message>\n         <source>Warning: The Caps Lock key is on!</source>\n@@ -269,7 +269,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Show general overview of wallet</source>\n-        <translation>Mostrar vista general de la cartera</translation>\n+        <translation>Mostrar vista general de la billetera</translation>\n     </message>\n     <message>\n         <source>&amp;Transactions</source>\n@@ -313,11 +313,11 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation>&amp;Cifrar cartera\u2026</translation>\n+        <translation>&amp;Cifrar billetera\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>&amp;Copia de seguridad de la cartera...</translation>\n+        <translation>&amp;Copia de seguridad de la billetera...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n@@ -329,15 +329,15 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Create Wallet...</source>\n-        <translation>Crear cartera...</translation>\n+        <translation>Crear billetera...</translation>\n     </message>\n     <message>\n         <source>Create a new wallet</source>\n-        <translation>Crear nueva cartera</translation>\n+        <translation>Crear nueva billetera</translation>\n     </message>\n     <message>\n         <source>Wallet:</source>\n-        <translation>Cartera:</translation>\n+        <translation>Billetera:</translation>\n     </message>\n     <message>\n         <source>Click to disable network activity.</source>\n@@ -397,7 +397,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n-        <translation>Cifrar las claves privadas que pertenecen a tu cartera</translation>\n+        <translation>Cifrar las claves privadas que pertenecen a tu billetera</translation>\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n@@ -521,27 +521,27 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Open Wallet</source>\n-        <translation>Abrir cartera</translation>\n+        <translation>Abrir billetera</translation>\n     </message>\n     <message>\n         <source>Open a wallet</source>\n-        <translation>Abrir una cartera</translation>\n+        <translation>Abrir una billetera</translation>\n     </message>\n     <message>\n         <source>Close Wallet...</source>\n-        <translation>Cerrar cartera...</translation>\n+        <translation>Cerrar billetera...</translation>\n     </message>\n     <message>\n         <source>Close wallet</source>\n-        <translation>Cerrar cartera</translation>\n+        <translation>Cerrar billetera</translation>\n     </message>\n     <message>\n         <source>Close All Wallets...</source>\n-        <translation>Cerrar todas las carteras...</translation>\n+        <translation>Cerrar todas las billeteras...</translation>\n     </message>\n     <message>\n         <source>Close all wallets</source>\n-        <translation>Cerrar todas las carteras</translation>\n+        <translation>Cerrar todas las billeteras</translation>\n     </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n@@ -557,11 +557,11 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>default wallet</source>\n-        <translation>Cartera predeterminada</translation>\n+        <translation>Billetera predeterminada</translation>\n     </message>\n     <message>\n         <source>No wallets available</source>\n-        <translation>No hay carteras disponibles</translation>\n+        <translation>No hay billeteras disponibles</translation>\n     </message>\n     <message>\n         <source>&amp;Window</source>\n@@ -614,7 +614,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     <message>\n         <source>Wallet: %1\n </source>\n-        <translation>Cartera: %1\n+        <translation>Billetera: %1\n </translation>\n     </message>\n     <message>\n@@ -661,7 +661,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n-        <translation>La cartera est\u00e1 &lt;b&gt;cifrada&lt;/b&gt; y &lt;b&gt;bloqueada&lt;/b&gt;</translation>\n+        <translation>La billetera est\u00e1 &lt;b&gt;cifrada&lt;/b&gt; y &lt;b&gt;bloqueada&lt;/b&gt;</translation>\n     </message>\n     <message>\n         <source>Original message:</source>\n@@ -831,7 +831,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Create wallet failed</source>\n-        <translation>Error al crear cartera</translation>\n+        <translation>Error al crear billetera</translation>\n     </message>\n     <message>\n         <source>Create wallet warning</source>\n@@ -884,7 +884,11 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n         <source>Create</source>\n         <translation>Crear</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Compilado sin soporte de sqlite (requerido para billeteras descriptoras)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1038,7 +1042,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>The wallet will also be stored in this directory.</source>\n-        <translation>La cartera tambi\u00e9n se almacenar\u00e1 en este directorio.</translation>\n+        <translation>La billetera tambi\u00e9n se almacenar\u00e1 en este directorio.</translation>\n     </message>\n     <message>\n         <source>Error: Specified data directory \"%1\" cannot be created.</source>\n@@ -1139,7 +1143,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Open wallet warning</source>\n-        <translation>Ver aviso sobre la cartera</translation>\n+        <translation>Ver aviso sobre la billetera</translation>\n     </message>\n     <message>\n         <source>default wallet</source>\n@@ -3377,7 +3381,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Close all wallets</source>\n-        <translation>Cerrar todas las carteras</translation>\n+        <translation>Cerrar todas las billeteras</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to close all wallets?</source>\n@@ -3472,6 +3476,10 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>No se puede decodificar PSBT desde el portapapeles (inv\u00e1lido base64)</translation>\n+    </message>\n     <message>\n         <source>Load Transaction Data</source>\n         <translation>Cargar datos de la transacci\u00f3n</translation>\n@@ -3555,6 +3563,10 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Error leyendo %s!. Todas las claves se han le\u00eddo correctamente, pero los datos de la transacci\u00f3n o el libro de direcciones pueden faltar o ser incorrectos.</translation>\n     </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation>Se proporciona m\u00e1s de una direcci\u00f3n de ligar de cebolla. Utilizando %s para el servicio Tor cebolla creado autom\u00e1tico.</translation>\n+    </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>\u00a1Por favor, compruebe si la fecha y hora en su computadora son correctas! Si su reloj est\u00e1 mal, %s no trabajar\u00e1 correctamente.</translation>\n@@ -3563,6 +3575,18 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Contribuya si encuentra %s de utilidad. Visite %s para m\u00e1s informaci\u00f3n acerca del programa.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase: Fallado para preparar la declaraci\u00f3n para traer versi\u00f3n del esquema de la monedero sqlite: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</source>\n+        <translation>SQLiteDatabase: Fallado para preparar la declaraci\u00f3n para traer la aplicaci\u00f3n id: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</source>\n+        <translation>SQLiteDatabase: versi\u00f3n del esquema de la monedero sqlite desconocido %d. S\u00f3lo version %d se admite</translation>\n+    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>La base de datos de bloques contiene un bloque que parece ser del futuro. Esto puede ser porque la fecha y hora de su ordenador est\u00e1n mal ajustados. Reconstruya la base de datos de bloques solo si est\u00e1 seguro de que la fecha y hora de su ordenador est\u00e1n ajustadas correctamente.</translation>\n@@ -3671,6 +3695,10 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Failed to verify database</source>\n         <translation>No se ha podido verificar la base de datos</translation>\n     </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>No hacer caso de duplicado -wallet %s</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importando...</translation>\n@@ -3699,6 +3727,30 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Monto inv\u00e1lido para -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to execute statement to verify database: %s</source>\n+        <translation>SQLiteDatabase: Fallado para ejecutar declaraci\u00f3n para verificar base de datos: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase: Fallado para traer versi\u00f3n del esquema de la monedero sqlite: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch the application id: %s</source>\n+        <translation>SQLiteDatabase: Error al obtener el ID de aplicaci\u00f3n: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare statement to verify database: %s</source>\n+        <translation>SQLiteDatabase: Fallado para preparar declaraci\u00f3n para verificar base de datos: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n+        <translation>SQLiteDatabase: Error al leer la verificaci\u00f3n de la base de datos: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unexpected application id. Expected %u, got %u</source>\n+        <translation>SQLiteDatabase: id aplicaci\u00f3n inesperada. Esperado %u, tiene %u</translation>\n+    </message>\n     <message>\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>El directorio de bloques \u00ab%s\u00bb especificado no existe.</translation>\n@@ -3783,6 +3835,14 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: La escucha para conexiones entrantes fall\u00f3 (la escucha devolvi\u00f3 el error %s)</translation>\n     </message>\n+    <message>\n+        <source>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</source>\n+        <translation>%s corrupto. Intente utilizar la monedero herramienta de bitcoin-monedero para salvar o restaurar una copia de seguridad.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</source>\n+        <translation>No es posible actualizar un monedero HD dividido sin actualizar el soporte para admitir el keypool pre dividido. Porfavor usa -upgradewallet=169900 o -upgradewallet sin especificar una versi\u00f3n.</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n         <translation>Cantidad no v\u00e1lida para -maxtxfee=&lt;amount&gt;: '%s' (debe ser al menos la comisi\u00f3n m\u00ednima de %s para prevenir transacciones atascadas)</translation>\n@@ -3791,6 +3851,18 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>Monto de transacci\u00f3n muy peque\u00f1o despu\u00e9s de la deducci\u00f3n de la comisi\u00f3n</translation>\n     </message>\n+    <message>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation>Este error podr\u00eda ocurrir si la billetera no fuese apagada correctamente y fuese cargada usando una compilaci\u00f3n con una versi\u00f3n m\u00e1s nueva de Berkeley DB. Si es as\u00ed, utilice el software que carg\u00f3 por \u00faltima vez en esta billetera.</translation>\n+    </message>\n+    <message>\n+        <source>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</source>\n+        <translation>Esta es la m\u00e1xima tarifa de transacci\u00f3n que pagas (en adicional a la tarifa normal de transacci\u00f3n) para primordialmente evitar gastar un sobrecosto.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</source>\n+        <translation>La transacci\u00f3n necesita un cambio de direcci\u00f3n, pero no podemos generar una. Porfavor, realice una petici\u00f3n a keypoolrefill antes.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>Necesita reconstruir la base de datos utilizando -reindex para volver al modo sin recorte. Esto volver\u00e1 a descargar toda la cadena de bloques</translation>\n@@ -3799,6 +3871,10 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>A fatal internal error occurred, see debug.log for details</source>\n         <translation>Ha ocurrido un error interno grave. Consulte debug.log para m\u00e1s detalles.</translation>\n     </message>\n+    <message>\n+        <source>Cannot set -peerblockfilters without -blockfilterindex.</source>\n+        <translation>No se puede establecer -peerblockfilters sin -blockfilterindex.</translation>\n+    </message>\n     <message>\n         <source>Disk space is too low!</source>\n         <translation>\u00a1El espacio en el disco es demasiado bajo!</translation>\n@@ -3815,6 +3891,14 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n         <source>Error: Disk space is low for %s</source>\n         <translation>Error: \u00a1Espacio en disco bajo por %s!</translation>\n     </message>\n+    <message>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Keypool se ha agotado, llame a keypoolrefill primero</translation>\n+    </message>\n+    <message>\n+        <source>Fee rate (%s) is lower than the minimum fee rate setting (%s)</source>\n+        <translation>El ratio de comisi\u00f3n (%s) es menor que el m\u00ednimo ratio de comisi\u00f3n (%s)</translation>\n+    </message>\n     <message>\n         <source>Invalid -onion address or hostname: '%s'</source>\n         <translation>Direcci\u00f3n de -onion o dominio '%s' inv\u00e1lido</translation>"
      },
      {
        "sha": "0f4f4387d87a7a6538536c3e1bc7ef414c03bfd8",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 1034,
        "deletions": 14,
        "changes": 1048,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -69,6 +69,12 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u0627\u06cc\u0646\u0647\u0627 \u0622\u062f\u0631\u0633\u200c\u0647\u0627\u06cc \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0648\u062c\u0648\u0647 \u0647\u0633\u062a\u0646\u062f. \u0647\u0645\u06cc\u0634\u0647 \u0642\u0628\u0644 \u0627\u0632 \u0627\u0631\u0633\u0627\u0644\u060c \u0645\u0642\u062f\u0627\u0631 \u0648 \u0622\u062f\u0631\u0633 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n@@ -478,6 +484,22 @@\n         <source>Up to date</source>\n         <translation>\u0628\u0647 \u0631\u0648\u0632</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>&amp;Load PSBT from file...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation>Load Partially Signed Bitcoin Transaction</translation>\n+    </message>\n+    <message>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation>Load PSBT from clipboard...</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction from clipboard</source>\n+        <translation>Load Partially Signed Bitcoin Transaction from clipboard</translation>\n+    </message>\n     <message>\n         <source>Node window</source>\n         <translation>\u067e\u0646\u062c\u0631\u0647 \u06af\u0631\u0647</translation>\n@@ -522,6 +544,14 @@\n         <source>Close all wallets</source>\n         <translation>\u0647\u0645\u0647\u200c\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644\u200c\u0647\u0627 \u0631\u0627 \u0628\u0628\u0646\u062f</translation>\n     </message>\n+    <message>\n+        <source>&amp;Mask values</source>\n+        <translation>&amp;Mask values</translation>\n+    </message>\n+    <message>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation>Mask the values in the Overview tab</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n@@ -634,7 +664,11 @@\n         <source>Original message:</source>\n         <translation>\u067e\u06cc\u0627\u0645 \u0627\u0635\u0644\u06cc:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n+        <translation>A fatal error occurred. %1 can no longer continue safely and will quit.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -769,6 +803,10 @@\n         <source>This label turns red if any recipient receives an amount smaller than the current dust threshold.</source>\n         <translation>\u0627\u06af\u0631 \u0647\u0631 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0645\u0642\u062f\u0627\u0631\u06cc \u06a9\u0645\u062a\u0631 \u0622\u0633\u062a\u0627\u0646\u0647 \u0641\u0639\u0644\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u062f \u0627\u0632 \u0627\u06cc\u0646 \u0644\u06cc\u0628\u0644 \u0642\u0631\u0645\u0632 \u0645\u06cc\u200c\u0634\u0648\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Can vary +/- %1 satoshi(s) per input.</source>\n+        <translation>Can vary +/- %1 satoshi(s) per input.</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0628\u0631\u0686\u0633\u0628 \u0646\u062f\u0627\u0631\u062f)</translation>\n@@ -831,11 +869,23 @@\n         <source>Make Blank Wallet</source>\n         <translation>\u0633\u0627\u062e\u062a \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0627\u0644\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Use descriptors for scriptPubKey management</source>\n+        <translation>Use descriptors for scriptPubKey management</translation>\n+    </message>\n+    <message>\n+        <source>Descriptor Wallet</source>\n+        <translation>Descriptor Wallet</translation>\n+    </message>\n     <message>\n         <source>Create</source>\n         <translation>\u0627\u06cc\u062c\u0627\u062f</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Compiled without sqlite support (required for descriptor wallets)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -874,6 +924,10 @@\n         <source>The entered address \"%1\" is not a valid Bitcoin address.</source>\n         <translation>\u0622\u062f\u0631\u0633 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \"%1\" \u0622\u062f\u0631\u0633 \u0645\u0639\u062a\u0628\u0631 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646 \u0646\u06cc\u0633\u062a.</translation>\n     </message>\n+    <message>\n+        <source>Address \"%1\" already exists as a receiving address with label \"%2\" and so cannot be added as a sending address.</source>\n+        <translation>Address \"%1\" already exists as a receiving address with label \"%2\" and so cannot be added as a sending address.</translation>\n+    </message>\n     <message>\n         <source>The entered address \"%1\" is already in the address book with label \"%2\".</source>\n         <translation>\u0622\u062f\u0631\u0633 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \"%1\" \u062f\u0631 \u062d\u0627\u0644 \u062d\u0627\u0638\u0631 \u062f\u0631 \u062f\u0641\u062a\u0631\u0686\u0647 \u0622\u062f\u0631\u0633 \u0647\u0627 \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a \u0628\u0627 \u0628\u0631\u0686\u0633\u0628 \"%2\" .</translation>\n@@ -939,6 +993,22 @@\n         <source>As this is the first time the program is launched, you can choose where %1 will store its data.</source>\n         <translation>\u0627\u0632 \u0622\u0646\u062c\u0627 \u06a9\u0647 \u0627\u0648\u0644\u06cc\u0646 \u0645\u0631\u062a\u0628\u0647 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0627\u062c\u0631\u0627 \u0645\u06cc\u200c\u0634\u0648\u062f\u060c \u0634\u0645\u0627 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0645\u062d\u0644 \u0630\u062e\u06cc\u0631\u0647 \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc %1 \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u0646\u0645\u0627\u06cc\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n+        <translation>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</translation>\n+    </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</translation>\n+    </message>\n+    <message>\n+        <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n+        <translation>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</translation>\n+    </message>\n+    <message>\n+        <source>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</source>\n+        <translation>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</translation>\n+    </message>\n     <message>\n         <source>Use the default data directory</source>\n         <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f\u0646 \u0627\u0632 \u067e\u0648\u0634\u0647 \u062f\u0627\u062f\u0647 \u067e\u06cc\u0634\u0641\u0631\u0636</translation>\n@@ -951,6 +1021,10 @@\n         <source>Bitcoin</source>\n         <translation>\u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646</translation>\n     </message>\n+    <message>\n+        <source>Discard blocks after verification, except most recent %1 GB (prune)</source>\n+        <translation>Discard blocks after verification, except most recent %1 GB (prune)</translation>\n+    </message>\n     <message>\n         <source>At least %1 GB of data will be stored in this directory, and it will grow over time.</source>\n         <translation>\u062d\u062f\u0627\u0642\u0644 %1 \u06af\u06cc\u06af\u0627\u0628\u0627\u06cc\u062a \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u0631 \u0627\u06cc\u0646 \u0634\u0627\u062e\u0647 \u0630\u062e\u06cc\u0631\u0647 \u062e\u0648\u0627\u0647\u062f \u0634\u062f\u060c \u06a9\u0647 \u0628\u0647 \u0645\u0631\u0648\u0631 \u0632\u0645\u0627\u0646 \u0627\u0641\u0632\u0627\u06cc\u0634 \u062e\u0648\u0627\u0647\u062f \u06cc\u0627\u0641\u062a.</translation>\n@@ -959,6 +1033,10 @@\n         <source>Approximately %1 GB of data will be stored in this directory.</source>\n         <translation>\u062a\u0642\u0631\u06cc\u0628\u0627 %1 \u06af\u06cc\u06af\u0627\u0628\u0627\u06cc\u062a \u062f\u0627\u062f\u0647 \u062f\u0631 \u0627\u06cc\u0646 \u0634\u0627\u062e\u0647 \u0630\u062e\u06cc\u0631\u0647 \u062e\u0648\u0627\u0647\u062f \u0634\u062f.</translation>\n     </message>\n+    <message>\n+        <source>%1 will download and store a copy of the Bitcoin block chain.</source>\n+        <translation>%1 will download and store a copy of the Bitcoin block chain.</translation>\n+    </message>\n     <message>\n         <source>The wallet will also be stored in this directory.</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0647\u0645 \u062f\u0631 \u0647\u0645\u06cc\u0646 \u062f\u0627\u06cc\u0631\u06a9\u062a\u0648\u0631\u06cc \u0630\u062e\u06cc\u0631\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f.</translation>\n@@ -979,13 +1057,25 @@\n         <source>(of %n GB needed)</source>\n         <translation><numerusform>(\u0627\u0632 %n \u06af\u06cc\u06af\u0627\u0628\u0627\u06cc\u062a \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632)</numerusform><numerusform>(\u0627\u0632 %n \u06af\u06cc\u06af\u0627\u0628\u0627\u06cc\u062a \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632)</numerusform></translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>(%n GB needed for full chain)</source>\n+        <translation><numerusform>(%n GB needed for full chain)</numerusform><numerusform>(%n GB needed for full chain)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>ModalOverlay</name>\n     <message>\n         <source>Form</source>\n         <translation>\u0641\u0631\u0645</translation>\n     </message>\n+    <message>\n+        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n+        <translation>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</translation>\n+    </message>\n+    <message>\n+        <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n+        <translation>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</translation>\n+    </message>\n     <message>\n         <source>Number of blocks left</source>\n         <translation>\u062a\u0639\u062f\u0627\u062f \u0628\u0644\u0648\u06a9\u200c\u0647\u0627\u06cc \u0628\u0627\u0642\u06cc\u0645\u0627\u0646\u062f\u0647</translation>\n@@ -1022,9 +1112,21 @@\n         <source>Esc</source>\n         <translation>\u062e\u0631\u0648\u062c</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown. Syncing Headers (%1, %2%)...</source>\n+        <translation>Unknown. Syncing Headers (%1, %2%)...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Open bitcoin URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>\u0622\u062f\u0631\u0633:</translation>\n@@ -1044,7 +1146,11 @@\n         <source>default wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Opening Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>Opening Wallet &lt;b&gt;%1&lt;/b&gt;...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n@@ -1059,15 +1165,47 @@\n         <source>Automatically start %1 after logging in to the system.</source>\n         <translation>\u0627\u062c\u0631\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 %1 \u0628\u0639\u062f \u0632\u0645\u0627\u0646 \u0648\u0631\u0648\u062f \u0628\u0647 \u0633\u06cc\u0633\u062a\u0645.</translation>\n     </message>\n+    <message>\n+        <source>&amp;Start %1 on system login</source>\n+        <translation>&amp;Start %1 on system login</translation>\n+    </message>\n     <message>\n         <source>Size of &amp;database cache</source>\n         <translation>\u0627\u0646\u062f\u0627\u0632\u0647 \u06a9\u0634 \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647.</translation>\n     </message>\n+    <message>\n+        <source>Number of script &amp;verification threads</source>\n+        <translation>Number of script &amp;verification threads</translation>\n+    </message>\n+    <message>\n+        <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n+        <translation>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n+    </message>\n+    <message>\n+        <source>Shows if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Shows if the supplied default SOCKS5 proxy is used to reach peers via this network type.</translation>\n+    </message>\n+    <message>\n+        <source>Hide the icon from the system tray.</source>\n+        <translation>Hide the icon from the system tray.</translation>\n+    </message>\n     <message>\n         <source>&amp;Hide tray icon</source>\n         <translation>\u0645\u062e\u0641\u06cc \u06a9\u0631\u062f\u0646 \u0627\u06cc\u06a9\u0648\u0646\n </translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</translation>\n+    </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</translation>\n+    </message>\n+    <message>\n+        <source>Open the %1 configuration file from the working directory.</source>\n+        <translation>Open the %1 configuration file from the working directory.</translation>\n+    </message>\n     <message>\n         <source>Open Configuration File</source>\n         <translation>\u0628\u0627\u0632\u06a9\u0631\u062f\u0646 \u0641\u0627\u06cc\u0644 \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc</translation>\n@@ -1084,14 +1222,30 @@\n         <source>&amp;Network</source>\n         <translation>\u0634\u0628\u06a9\u0647</translation>\n     </message>\n+    <message>\n+        <source>Disables some advanced features but all blocks will still be fully validated. Reverting this setting requires re-downloading the entire blockchain. Actual disk usage may be somewhat higher.</source>\n+        <translation>Disables some advanced features but all blocks will still be fully validated. Reverting this setting requires re-downloading the entire blockchain. Actual disk usage may be somewhat higher.</translation>\n+    </message>\n+    <message>\n+        <source>Prune &amp;block storage to</source>\n+        <translation>Prune &amp;block storage to</translation>\n+    </message>\n     <message>\n         <source>GB</source>\n         <translation>\u06af\u06cc\u06af\u0627\u0628\u0627\u06cc\u062a</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain.</source>\n+        <translation>Reverting this setting requires re-downloading the entire blockchain.</translation>\n+    </message>\n     <message>\n         <source>MiB</source>\n         <translation>MiB</translation>\n     </message>\n+    <message>\n+        <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n+        <translation>(0 = auto, &lt;0 = leave that many cores free)</translation>\n+    </message>\n     <message>\n         <source>W&amp;allet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -1104,6 +1258,14 @@\n         <source>Enable coin &amp;control features</source>\n         <translation>\u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u0642\u0627\u0628\u0644\u06cc\u062a \u0633\u06a9\u0647 \u0648 \u06a9\u0646\u062a\u0631\u0644</translation>\n     </message>\n+    <message>\n+        <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n+        <translation>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Spend unconfirmed change</source>\n+        <translation>&amp;Spend unconfirmed change</translation>\n+    </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n         <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u062e\u0648\u062f\u06a9\u0627\u0631 \u062f\u0631\u06af\u0627\u0647 \u0634\u0628\u06a9\u0647\u0654 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0631\u0648\u06cc \u0631\u0648\u062a\u0631\u0647\u0627. \u062a\u0646\u0647\u0627 \u0632\u0645\u0627\u0646\u06cc \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u062f \u06a9\u0647 \u0631\u0648\u062a\u0631 \u0627\u0632 \u067e\u0631\u0648\u062a\u06a9\u0644 UPnP \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u062f \u0648 \u0627\u06cc\u0646 \u067e\u0631\u0648\u062a\u06a9\u0644 \u0641\u0639\u0627\u0644 \u0628\u0627\u0634\u062f.</translation>\n@@ -1120,6 +1282,14 @@\n         <source>Allow incomin&amp;g connections</source>\n         <translation>\u0627\u062c\u0627\u0632\u0647 \u062f\u0627\u062f\u0646 \u0628\u0647 \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a \u0648\u0631\u0648\u062f\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n+        <translation>Connect to the Bitcoin network through a SOCKS5 proxy.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Connect through SOCKS5 proxy (default proxy):</source>\n+        <translation>&amp;Connect through SOCKS5 proxy (default proxy):</translation>\n+    </message>\n     <message>\n         <source>Proxy &amp;IP:</source>\n         <translation>\u067e\u0631\u0627\u06a9\u0633\u06cc \u0648 \u0622\u06cc\u200c\u067e\u06cc:</translation>\n@@ -1132,6 +1302,10 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u067e\u0648\u0631\u062a \u067e\u0631\u0627\u06a9\u0633\u06cc (\u0645\u062b\u0627\u0644 \u06f9\u06f0\u06f5\u06f0)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Used for reaching peers via:</translation>\n+    </message>\n     <message>\n         <source>IPv4</source>\n         <translation>IPv4</translation>\n@@ -1168,6 +1342,10 @@\n         <source>User Interface &amp;language:</source>\n         <translation>\u0632\u0628\u0627\u0646 \u0648\u0627\u0633\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc:</translation>\n     </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting %1.</source>\n+        <translation>The user interface language can be set here. This setting will take effect after restarting %1.</translation>\n+    </message>\n     <message>\n         <source>&amp;Unit to show amounts in:</source>\n         <translation>\u0648\u0627\u062d\u062f \u0646\u0645\u0627\u06cc\u0634\u06af\u0631 \u0645\u0642\u0627\u062f\u06cc\u0631:</translation>\n@@ -1180,10 +1358,22 @@\n         <source>Whether to show coin control features or not.</source>\n         <translation>\u06a9\u0647 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u06a9\u0646\u062a\u0631\u0644 \u06a9\u0648\u06cc\u0646\u200c\u0647\u0627 \u0646\u0634\u0627\u0646 \u062f\u0627\u062f\u0647 \u0634\u0648\u062f \u06cc\u0627 \u0646\u0647.</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n+        <translation>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor onion services:</source>\n+        <translation>Use separate SOCKS&amp;5 proxy to reach peers via Tor onion services:</translation>\n+    </message>\n     <message>\n         <source>&amp;Third party transaction URLs</source>\n         <translation>URL\u0647\u0627\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u0634\u062e\u0635 \u062b\u0627\u0644\u062b</translation>\n     </message>\n+    <message>\n+        <source>Options set in this dialog are overridden by the command line or in the configuration file:</source>\n+        <translation>Options set in this dialog are overridden by the command line or in the configuration file:</translation>\n+    </message>\n     <message>\n         <source>&amp;OK</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f</translation>\n@@ -1216,6 +1406,10 @@\n         <source>Configuration options</source>\n         <translation>\u062a\u0646\u0638\u06cc\u0645\u0627\u062a \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc</translation>\n     </message>\n+    <message>\n+        <source>The configuration file is used to specify advanced user options which override GUI settings. Additionally, any command-line options will override this configuration file.</source>\n+        <translation>The configuration file is used to specify advanced user options which override GUI settings. Additionally, any command-line options will override this configuration file.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u062e\u0637\u0627</translation>\n@@ -1303,13 +1497,29 @@\n         <source>Mined balance in watch-only addresses that has not yet matured</source>\n         <translation>\u0645\u0648\u062c\u0648\u062f\u06cc \u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0634\u062f\u0647 \u062f\u0631 \u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u0641\u0642\u0637 \u0642\u0627\u0628\u0644 \u0645\u0634\u0627\u0647\u062f\u0647 \u0647\u0646\u0648\u0632 \u06a9\u0627\u0645\u0644 \u0646\u0634\u062f\u0647 \u0627\u0633\u062a</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Current total balance in watch-only addresses</source>\n+        <translation>Current total balance in watch-only addresses</translation>\n+    </message>\n+    <message>\n+        <source>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</source>\n+        <translation>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PSBTOperationsDialog</name>\n     <message>\n         <source>Dialog</source>\n         <translation>\u062a\u06af\u0641\u062a\u06af\u0648</translation>\n     </message>\n+    <message>\n+        <source>Sign Tx</source>\n+        <translation>Sign Tx</translation>\n+    </message>\n+    <message>\n+        <source>Broadcast Tx</source>\n+        <translation>Broadcast Tx</translation>\n+    </message>\n     <message>\n         <source>Copy to Clipboard</source>\n         <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646</translation>\n@@ -1322,14 +1532,66 @@\n         <source>Close</source>\n         <translation>\u0628\u0633\u062a\u0646</translation>\n     </message>\n+    <message>\n+        <source>Failed to load transaction: %1</source>\n+        <translation>Failed to load transaction: %1</translation>\n+    </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>Failed to sign transaction: %1</translation>\n+    </message>\n+    <message>\n+        <source>Could not sign any more inputs.</source>\n+        <translation>Could not sign any more inputs.</translation>\n+    </message>\n+    <message>\n+        <source>Signed %1 inputs, but more signatures are still required.</source>\n+        <translation>Signed %1 inputs, but more signatures are still required.</translation>\n+    </message>\n+    <message>\n+        <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n+        <translation>Signed transaction successfully. Transaction is ready to broadcast.</translation>\n+    </message>\n     <message>\n         <source>Unknown error processing transaction.</source>\n         <translation>\u0645\u0634\u06a9\u0644 \u0646\u0627\u0645\u0634\u062e\u0635\u06cc \u062f\u0631 \u067e\u0631\u062f\u0627\u0632\u0634 \u0639\u0645\u0644\u06cc\u0627\u062a \u0631\u062e \u062f\u0627\u062f\u0647.</translation>\n     </message>\n+    <message>\n+        <source>Transaction broadcast successfully! Transaction ID: %1</source>\n+        <translation>Transaction broadcast successfully! Transaction ID: %1</translation>\n+    </message>\n+    <message>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation>Transaction broadcast failed: %1</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>PSBT copied to clipboard.</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>\u0630\u062e\u06cc\u0631\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0639\u0645\u0644\u06cc\u0627\u062a</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Partially Signed Transaction (Binary) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved to disk.</source>\n+        <translation>PSBT saved to disk.</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation> * Sends %1 to %2</translation>\n+    </message>\n+    <message>\n+        <source>Unable to calculate transaction fee or total transaction amount.</source>\n+        <translation>Unable to calculate transaction fee or total transaction amount.</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>Pays transaction fee: </translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u06a9\u0644</translation>\n@@ -1338,6 +1600,14 @@\n         <source>or</source>\n         <translation>\u06cc\u0627</translation>\n     </message>\n+    <message>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation>Transaction has %1 unsigned inputs.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>Transaction is missing some information about inputs.</translation>\n+    </message>\n     <message>\n         <source>Transaction still needs signature(s).</source>\n         <translation>\u0639\u0645\u0644\u06cc\u0627\u062a \u0647\u0646\u0648\u0632 \u0628\u0647 \u0627\u0645\u0636\u0627(\u0647\u0627) \u0646\u06cc\u0627\u0632 \u062f\u0627\u0631\u062f.</translation>\n@@ -1346,6 +1616,14 @@\n         <source>(But this wallet cannot sign transactions.)</source>\n         <translation>(\u0627\u0645\u0627 \u0627\u06cc\u0646 \u06a9\u06cc\u0641\u200c\u200c\u067e\u0648\u0644 \u0646\u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0639\u0645\u0644\u06cc\u0627\u062a\u200c\u0647\u0627 \u0631\u0627 \u0627\u0645\u0636\u0627 \u06a9\u0646\u062f.)</translation>\n     </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>(But this wallet does not have the right keys.)</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>Transaction is fully signed and ready for broadcast.</translation>\n+    </message>\n     <message>\n         <source>Transaction status is unknown.</source>\n         <translation>\u0648\u0636\u0639\u06cc\u062a \u0639\u0645\u0644\u06cc\u0627\u062a \u0646\u0627\u0645\u0634\u062e\u0635 \u0627\u0633\u062a.</translation>\n@@ -1365,10 +1643,30 @@\n         <source>URI handling</source>\n         <translation>\u0645\u062f\u06cc\u0631\u06cc\u062a URI</translation>\n     </message>\n+    <message>\n+        <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n+        <translation>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Cannot process payment request because BIP70 is not supported.</translation>\n+    </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>\u0622\u062f\u0631\u0633 \u067e\u0631\u062f\u0627\u062e\u062a \u0646\u0627\u0645\u0639\u062a\u0628\u0631 %1</translation>\n     </message>\n+    <message>\n+        <source>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n+        <translation>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n+    </message>\n     <message>\n         <source>Payment request file handling</source>\n         <translation>\u062f\u0631\u062d\u0627\u0644 \u067e\u0631\u062f\u0627\u0632\u0634 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a</translation>\n@@ -1487,10 +1785,18 @@\n         <source>Error: Specified data directory \"%1\" does not exist.</source>\n         <translation>\u062e\u0637\u0627: \u067e\u0648\u0634\u0647\u0654 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u062f\u0627\u062f\u0647\u200c\u0647\u0627 \u062f\u0631 \u00ab%1\u00bb \u0648\u062c\u0648\u062f \u0646\u062f\u0627\u0631\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Error: Cannot parse configuration file: %1.</source>\n+        <translation>Error: Cannot parse configuration file: %1.</translation>\n+    </message>\n     <message>\n         <source>Error: %1</source>\n         <translation>\u062e\u0637\u0627: %1</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>Error initializing settings: %1</translation>\n+    </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n         <translation>%1 \u0628\u0647 \u062f\u0631\u0633\u062a\u06cc \u0628\u0633\u062a\u0647 \u0646\u0634\u062f</translation>\n@@ -1557,10 +1863,18 @@\n         <source>Datadir</source>\n         <translation>\u067e\u0648\u0634\u0647 \u062f\u0627\u062f\u0647 Datadir</translation>\n     </message>\n+    <message>\n+        <source>To specify a non-default location of the data directory use the '%1' option.</source>\n+        <translation>To specify a non-default location of the data directory use the '%1' option.</translation>\n+    </message>\n     <message>\n         <source>Blocksdir</source>\n         <translation>\u0641\u0648\u0644\u062f\u0631 \u0628\u0644\u0627\u06a9\u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>To specify a non-default location of the blocks directory use the '%1' option.</source>\n+        <translation>To specify a non-default location of the blocks directory use the '%1' option.</translation>\n+    </message>\n     <message>\n         <source>Startup time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u063a\u0627\u0632 \u0628\u0647 \u06a9\u0627\u0631</translation>\n@@ -1637,10 +1951,22 @@\n         <source>Starting Block</source>\n         <translation>\u0628\u0644\u0627\u06a9 \u0627\u0648\u0644\u06cc\u0647</translation>\n     </message>\n+    <message>\n+        <source>Synced Headers</source>\n+        <translation>Synced Headers</translation>\n+    </message>\n     <message>\n         <source>Synced Blocks</source>\n         <translation>\u0628\u0644\u0627\u06a9\u200c\u0647\u0627\u06cc \u0647\u0645\u06af\u0627\u0645\u200c\u0633\u0627\u0632\u06cc\u200c \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>The mapped Autonomous System used for diversifying peer selection.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapped AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>\u0646\u0645\u0627\u06cc\u0646\u062f\u0647 \u06a9\u0627\u0631\u0628\u0631</translation>\n@@ -1653,6 +1979,10 @@\n         <source>Current block height</source>\n         <translation>\u0627\u0631\u062a\u0641\u0627\u0639 \u0641\u0639\u0644\u06cc \u0628\u0644\u0648\u06a9</translation>\n     </message>\n+    <message>\n+        <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</translation>\n+    </message>\n     <message>\n         <source>Decrease font size</source>\n         <translation>\u06a9\u0627\u0647\u0634 \u062f\u0627\u062f\u0646 \u0627\u0646\u062f\u0627\u0632\u0647 \u0641\u0648\u0646\u062a</translation>\n@@ -1661,6 +1991,10 @@\n         <source>Increase font size</source>\n         <translation>\u0627\u0641\u0632\u0627\u06cc\u0634 \u062f\u0627\u062f\u0646 \u0627\u0646\u062f\u0627\u0632\u0647 \u0641\u0648\u0646\u062a</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>Permissions</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>\u062e\u062f\u0645\u0627\u062a</translation>\n@@ -1681,6 +2015,10 @@\n         <source>Ping Time</source>\n         <translation>\u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u067e\u06cc\u0646\u06af</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>The duration of a currently outstanding ping.</translation>\n+    </message>\n     <message>\n         <source>Ping Wait</source>\n         <translation>\u0627\u0646\u062a\u0638\u0627\u0631 \u067e\u06cc\u0646\u06af</translation>\n@@ -1689,6 +2027,10 @@\n         <source>Min Ping</source>\n         <translation>\u062d\u062f\u0627\u0642\u0644 \u067e\u06cc\u0646\u06af</translation>\n     </message>\n+    <message>\n+        <source>Time Offset</source>\n+        <translation>Time Offset</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u062e\u0631\u06cc\u0646 \u0628\u0644\u0648\u06a9</translation>\n@@ -1753,10 +2095,38 @@\n         <source>&amp;Unban</source>\n         <translation>&amp;\u062e\u0627\u0631\u062c \u06a9\u0631\u062f\u0646 \u0627\u0632 \u0628\u0646</translation>\n     </message>\n+    <message>\n+        <source>Welcome to the %1 RPC console.</source>\n+        <translation>Welcome to the %1 RPC console.</translation>\n+    </message>\n+    <message>\n+        <source>Use up and down arrows to navigate history, and %1 to clear screen.</source>\n+        <translation>Use up and down arrows to navigate history, and %1 to clear screen.</translation>\n+    </message>\n+    <message>\n+        <source>Type %1 for an overview of available commands.</source>\n+        <translation>Type %1 for an overview of available commands.</translation>\n+    </message>\n+    <message>\n+        <source>For more information on using this console type %1.</source>\n+        <translation>For more information on using this console type %1.</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</source>\n+        <translation>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</translation>\n+    </message>\n     <message>\n         <source>Network activity disabled</source>\n         <translation>\u0641\u0639\u0627\u0644\u06cc\u062a \u0634\u0628\u06a9\u0647 \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>Executing command without any wallet</source>\n+        <translation>Executing command without any wallet</translation>\n+    </message>\n+    <message>\n+        <source>Executing command using \"%1\" wallet</source>\n+        <translation>Executing command using \"%1\" wallet</translation>\n+    </message>\n     <message>\n         <source>(node id: %1)</source>\n         <translation>(\u0634\u0646\u0627\u0633\u0647 \u06af\u0631\u0647: %1)</translation>\n@@ -1769,6 +2139,14 @@\n         <source>never</source>\n         <translation>\u0647\u06cc\u0686 \u0648\u0642\u062a</translation>\n     </message>\n+    <message>\n+        <source>Inbound</source>\n+        <translation>Inbound</translation>\n+    </message>\n+    <message>\n+        <source>Outbound</source>\n+        <translation>Outbound</translation>\n+    </message>\n     <message>\n         <source>Unknown</source>\n         <translation>\u0646\u0627\u0634\u0646\u0627\u0633 \u06cc\u0627 \u0646\u0627\u0645\u0639\u0644\u0648\u0645</translation>\n@@ -1788,10 +2166,34 @@\n         <source>&amp;Message:</source>\n         <translation>\u067e\u06cc\u0627\u0645:</translation>\n     </message>\n+    <message>\n+        <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</source>\n+        <translation>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</translation>\n+    </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address.</source>\n+        <translation>An optional label to associate with the new receiving address.</translation>\n+    </message>\n     <message>\n         <source>Use this form to request payments. All fields are &lt;b&gt;optional&lt;/b&gt;.</source>\n         <translation>\u0627\u0632 \u0627\u06cc\u0646 \u0641\u0631\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a \u0647\u0627.\u062a\u0645\u0627\u0645\u06cc \u06af\u0632\u06cc\u0646\u0647 \u0647\u0627 &lt;b&gt;\u0627\u062e\u062a\u06cc\u0627\u0631\u06cc&lt;/b&gt;\u0647\u0633\u062a\u0646\u062f.</translation>\n     </message>\n+    <message>\n+        <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n+        <translation>An optional amount to request. Leave this empty or zero to not request a specific amount.</translation>\n+    </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>An optional message that is attached to the payment request and may be displayed to the sender.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;Create new receiving address</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>\u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u062a\u0645\u0627\u0645\u06cc \u06af\u0632\u06cc\u0646\u0647 \u0647\u0627\u06cc \u0627\u06cc\u0646 \u0641\u0631\u0645</translation>\n@@ -1800,10 +2202,22 @@\n         <source>Clear</source>\n         <translation>\u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646</translation>\n     </message>\n+    <message>\n+        <source>Native segwit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</source>\n+        <translation>Native segwit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</translation>\n+    </message>\n+    <message>\n+        <source>Generate native segwit (Bech32) address</source>\n+        <translation>Generate native segwit (Bech32) address</translation>\n+    </message>\n     <message>\n         <source>Requested payments history</source>\n         <translation>\u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u067e\u0631\u062f\u0627\u062e\u062a \u0647\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation>Show the selected request (does the same as double clicking an entry)</translation>\n+    </message>\n     <message>\n         <source>Show</source>\n         <translation>\u0646\u0645\u0627\u06cc\u0634</translation>\n@@ -1836,7 +2250,11 @@\n         <source>Could not unlock wallet.</source>\n         <translation>\u0646\u0645\u06cc\u062a\u0648\u0627\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0627 \u0628\u0627\u0632 \u06a9\u0631\u062f.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>Could not generate new %1 address</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1961,6 +2379,10 @@\n         <source>Change:</source>\n         <translation>\u062a\u063a\u06cc\u06cc\u0631</translation>\n     </message>\n+    <message>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</translation>\n+    </message>\n     <message>\n         <source>Custom change address</source>\n         <translation>\u062a\u063a\u06cc\u06cc\u0631 \u0622\u062f\u0631\u0633 \u0645\u062e\u0635\u0648\u0635</translation>\n@@ -1973,6 +2395,10 @@\n         <source>Choose...</source>\n         <translation>\u0627\u0646\u062a\u062e\u0627\u0628...</translation>\n     </message>\n+    <message>\n+        <source>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</source>\n+        <translation>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</translation>\n+    </message>\n     <message>\n         <source>Warning: Fee estimation is currently not possible.</source>\n         <translation>\u0647\u0634\u062f\u0627\u0631:\u062a\u062e\u0645\u06cc\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f \u062f\u0631 \u062d\u0627\u0644 \u062d\u0627\u0636\u0631 \u0627\u0645\u06a9\u0627\u0646 \u067e\u0630\u06cc\u0631 \u0646\u06cc\u0633\u062a.</translation>\n@@ -2025,6 +2451,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Hide transaction fee settings</source>\n         <translation>\u062a\u0646\u0638\u06cc\u0645\u0627\u062a \u0645\u062e\u0641\u06cc \u06a9\u0631\u062f\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f \u0639\u0645\u0644\u06cc\u0627\u062a</translation>\n     </message>\n+    <message>\n+        <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n+        <translation>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</translation>\n+    </message>\n+    <message>\n+        <source>A too low fee might result in a never confirming transaction (read the tooltip)</source>\n+        <translation>A too low fee might result in a never confirming transaction (read the tooltip)</translation>\n+    </message>\n     <message>\n         <source>Confirmation time target:</source>\n         <translation>\u0647\u062f\u0641 \u0632\u0645\u0627\u0646\u06cc \u062a\u0627\u06cc\u06cc\u062f \u0634\u062f\u0646:</translation>\n@@ -2033,6 +2467,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Enable Replace-By-Fee</source>\n         <translation>\u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u062c\u0627\u06cc\u06af\u0630\u0627\u0631\u06cc \u062f\u0648\u0628\u0627\u0631\u0647 \u0627\u0632 \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n     </message>\n+    <message>\n+        <source>With Replace-By-Fee (BIP-125) you can increase a transaction's fee after it is sent. Without this, a higher fee may be recommended to compensate for increased transaction delay risk.</source>\n+        <translation>With Replace-By-Fee (BIP-125) you can increase a transaction's fee after it is sent. Without this, a higher fee may be recommended to compensate for increased transaction delay risk.</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>\u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u0647\u0645\u0647</translation>\n@@ -2081,18 +2519,50 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 (%2 blocks)</source>\n         <translation>%1(%2 \u0628\u0644\u0627\u06a9 \u0647\u0627)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>Cr&amp;eate Unsigned</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</translation>\n+    </message>\n+    <message>\n+        <source> from wallet '%1'</source>\n+        <translation> from wallet '%1'</translation>\n+    </message>\n+    <message>\n+        <source>%1 to '%2'</source>\n+        <translation>%1 to '%2'</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1 \u0628\u0647 %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Do you want to draft this transaction?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\u0622\u06cc\u0627 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u06a9\u0631\u062f\u0646 \u06cc\u0627 \u0641\u0631\u0633\u062a\u0627\u062f\u0646 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f\u061f</translation>\n     </message>\n+    <message>\n+        <source>Create Unsigned</source>\n+        <translation>Create Unsigned</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>\u0630\u062e\u06cc\u0631\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0639\u0645\u0644\u06cc\u0627\u062a</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Partially Signed Transaction (Binary) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT saved</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\u06cc\u0627</translation>\n@@ -2101,6 +2571,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>You can increase the fee later (signals Replace-By-Fee, BIP-125).</source>\n         <translation>\u062a\u0648 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc \u0628\u0639\u062f\u0627 \u0647\u0632\u06cc\u0646\u0647 \u06a9\u0627\u0631\u0645\u0632\u062f \u0631\u0627 \u0627\u0641\u0632\u0627\u06cc\u0634 \u0628\u062f\u06cc(signals Replace-By-Fee, BIP-125)</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</translation>\n+    </message>\n     <message>\n         <source>Please, review your transaction.</source>\n         <translation>\u0644\u0637\u0641\u0627,\u062a\u0631\u0627\u06a9\u0646\u0634 \u062e\u0648\u062f \u0631\u0627 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n@@ -2109,18 +2583,34 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Transaction fee</source>\n         <translation>\u06a9\u0627\u0631\u0645\u0632\u062f \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n     </message>\n+    <message>\n+        <source>Not signalling Replace-By-Fee, BIP-125.</source>\n+        <translation>Not signalling Replace-By-Fee, BIP-125.</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u06a9\u0644</translation>\n     </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>To review recipient list click \"Show Details...\"</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u06a9\u0631\u062f\u0646 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0648\u06cc\u0646 \u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Confirm transaction proposal</translation>\n+    </message>\n     <message>\n         <source>Send</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644</translation>\n     </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Watch-only balance:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u0622\u062f\u0631\u0633 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0627\u0633\u062a.\u0644\u0637\u0641\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0686\u06a9 \u06cc\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n@@ -2217,15 +2707,43 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <translation>\u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u0627\u06cc\u0646 \u0648\u0631\u0648\u062f\u06cc</translation>\n     </message>\n     <message>\n-        <source>Use available balance</source>\n-        <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0645\u0648\u062c\u0648\u062f\u06cc \u062d\u0633\u0627\u0628</translation>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>The amount to send in the selected unit</translation>\n     </message>\n     <message>\n-        <source>Message:</source>\n-        <translation>\u067e\u06cc\u0627\u0645:</translation>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</translation>\n     </message>\n     <message>\n-        <source>Pay To:</source>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>S&amp;ubtract fee from amount</translation>\n+    </message>\n+    <message>\n+        <source>Use available balance</source>\n+        <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0645\u0648\u062c\u0648\u062f\u06cc \u062d\u0633\u0627\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Message:</source>\n+        <translation>\u067e\u06cc\u0627\u0645:</translation>\n+    </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>This is an unauthenticated payment request.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>This is an authenticated payment request.</translation>\n+    </message>\n+    <message>\n+        <source>Enter a label for this address to add it to the list of used addresses</source>\n+        <translation>Enter a label for this address to add it to the list of used addresses</translation>\n+    </message>\n+    <message>\n+        <source>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</source>\n+        <translation>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</translation>\n+    </message>\n+    <message>\n+        <source>Pay To:</source>\n         <translation>\u067e\u0631\u062f\u0627\u062e\u062a \u0628\u0647:</translation>\n     </message>\n     <message>\n@@ -2254,6 +2772,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>&amp;Sign Message</source>\n         <translation>&amp;\u062b\u0628\u062a \u067e\u06cc\u0627\u0645</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>\u0646\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0628\u0631\u0627\u06cc \u0627\u0645\u0636\u0627\u0621 \u067e\u06cc\u063a\u0627\u0645 \u0628\u0627 \u0622\u0646</translation>\n@@ -2306,10 +2828,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>&amp;Verify Message</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u067e\u06cc\u0627\u0645</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>\u0646\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u06a9\u0647 \u067e\u06cc\u063a\u0627\u0645 \u0628\u0627 \u0622\u0646 \u0627\u0645\u0636\u0627\u0621 \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>The signed message to verify</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>The signature given when the message was signed</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>\u067e\u06cc\u0627\u0645 \u0631\u0627 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0645\u0637\u0645\u0626\u0646 \u0634\u0648\u06cc\u062f \u06a9\u0647 \u062a\u0648\u0633\u0637 \u0622\u062f\u0631\u0633 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0627\u0645\u0636\u0627 \u0634\u062f\u0647 \u0627\u0633\u062a.</translation>\n@@ -2389,10 +2923,30 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Open for %n more block</numerusform><numerusform>Open for %n more blocks</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>\u0628\u0627\u0632 \u062a\u0627 %1</translation>\n     </message>\n+    <message>\n+        <source>conflicted with a transaction with %1 confirmations</source>\n+        <translation>conflicted with a transaction with %1 confirmations</translation>\n+    </message>\n+    <message>\n+        <source>0/unconfirmed, %1</source>\n+        <translation>0/unconfirmed, %1</translation>\n+    </message>\n+    <message>\n+        <source>in memory pool</source>\n+        <translation>in memory pool</translation>\n+    </message>\n+    <message>\n+        <source>not in memory pool</source>\n+        <translation>not in memory pool</translation>\n+    </message>\n     <message>\n         <source>abandoned</source>\n         <translation>\u0631\u0647\u0627 \u0634\u062f\u0647</translation>\n@@ -2449,6 +3003,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Credit</source>\n         <translation>\u0627\u0639\u062a\u0628\u0627\u0631</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>matures in %n more block</numerusform><numerusform>matures in %n more blocks</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>\u0642\u0628\u0648\u0644 \u0646\u0634\u062f\u0647</translation>\n@@ -2457,6 +3015,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Debit</source>\n         <translation>\u0627\u0639\u062a\u0628\u0627\u0631</translation>\n     </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Total debit</translation>\n+    </message>\n     <message>\n         <source>Total credit</source>\n         <translation>\u062a\u0645\u0627\u0645\u06cc \u0627\u0639\u062a\u0628\u0627\u0631</translation>\n@@ -2485,10 +3047,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Transaction total size</source>\n         <translation>\u062d\u062c\u0645 \u06a9\u0644 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n     </message>\n+    <message>\n+        <source>Transaction virtual size</source>\n+        <translation>Transaction virtual size</translation>\n+    </message>\n+    <message>\n+        <source>Output index</source>\n+        <translation>Output index</translation>\n+    </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation> (Certificate was not verified)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>\u0628\u0627\u0632\u0631\u06af\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</translation>\n+    </message>\n     <message>\n         <source>Debug information</source>\n         <translation>\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u06cc \u0628\u0627\u06af Debug</translation>\n@@ -2539,6 +3117,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Label</source>\n         <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Open for %n more block</numerusform><numerusform>Open for %n more blocks</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>\u0628\u0627\u0632 \u062a\u0627 %1</translation>\n@@ -2551,10 +3133,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Abandoned</source>\n         <translation>\u0631\u0647\u0627\u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Confirming (%1 of %2 recommended confirmations)</source>\n+        <translation>Confirming (%1 of %2 recommended confirmations)</translation>\n+    </message>\n     <message>\n         <source>Confirmed (%1 confirmations)</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0634\u062f\u0647 (%1 \u062a\u0623\u06cc\u06cc\u062f\u06cc\u0647)</translation>\n     </message>\n+    <message>\n+        <source>Conflicted</source>\n+        <translation>Conflicted</translation>\n+    </message>\n+    <message>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation>Immature (%1 confirmations, will be available after %2)</translation>\n+    </message>\n     <message>\n         <source>Generated but not accepted</source>\n         <translation>\u062a\u0648\u0644\u06cc\u062f \u0634\u062f\u0647 \u0648\u0644\u06cc \u0647\u0646\u0648\u0632 \u0642\u0628\u0648\u0644 \u0646\u0634\u062f\u0647 \u0627\u0633\u062a</translation>\n@@ -2603,6 +3197,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Type of transaction.</source>\n         <translation>\u0646\u0648\u0639 \u062a\u0631\u0627\u06a9\u0646\u0634.</translation>\n     </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Whether or not a watch-only address is involved in this transaction.</translation>\n+    </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>User-defined intent/purpose of the transaction.</translation>\n+    </message>\n     <message>\n         <source>Amount removed from or added to balance.</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647 \u06a9\u0645 \u0634\u062f\u0647 \u06cc\u0627 \u0627\u0636\u0627\u0641\u0647 \u0634\u062f\u0647 \u0628\u0647 \u062d\u0633\u0627\u0628</translation>\n@@ -2746,10 +3348,18 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Exporting Failed</source>\n         <translation>\u06af\u0631\u0641\u062a\u0646 \u062e\u0631\u0648\u062c\u06cc \u0628\u0647 \u0645\u0634\u06a9\u0644 \u062e\u0648\u0631\u062f</translation>\n     </message>\n+    <message>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>There was an error trying to save the transaction history to %1.</translation>\n+    </message>\n     <message>\n         <source>Exporting Successful</source>\n         <translation>\u062e\u0627\u0631\u062c \u06a9\u0631\u062f\u0646 \u0645\u0648\u0641\u0642\u06cc\u062a \u0622\u0645\u06cc\u0632 \u0628\u0648\u062f Exporting</translation>\n     </message>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>The transaction history was successfully saved to %1.</translation>\n+    </message>\n     <message>\n         <source>Range:</source>\n         <translation>\u062f\u0627\u0645\u0646\u0647:</translation>\n@@ -2761,7 +3371,11 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n-    </context>\n+    <message>\n+        <source>Unit to show amounts in. Click to select another unit.</source>\n+        <translation>Unit to show amounts in. Click to select another unit.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletController</name>\n     <message>\n@@ -2772,13 +3386,29 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n         <translation>\u0622\u06cc\u0627 \u0628\u0631\u0627\u06cc \u0628\u0633\u062a\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f&lt;i&gt; %1 &lt;/i&gt; \u061f</translation>\n     </message>\n+    <message>\n+        <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n+        <translation>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</translation>\n+    </message>\n     <message>\n         <source>Close all wallets</source>\n         <translation>\u0647\u0645\u0647\u200c\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644\u200c\u0647\u0627 \u0631\u0627 \u0628\u0628\u0646\u062f</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation>Are you sure you wish to close all wallets?</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n+    <message>\n+        <source>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</source>\n+        <translation>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</translation>\n+    </message>\n     <message>\n         <source>Create a new wallet</source>\n         <translation>\u0633\u0627\u062e\u062a \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062c\u062f\u06cc\u062f</translation>\n@@ -2790,6 +3420,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Send Coins</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u06a9\u0648\u06cc\u0646 \u0647\u0627 \u06cc\u0627 \u0633\u06a9\u0647 \u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>Fee bump error</source>\n+        <translation>Fee bump error</translation>\n+    </message>\n     <message>\n         <source>Increasing transaction fee failed</source>\n         <translation>\u0627\u0641\u0632\u0627\u06cc\u0634 \u06a9\u0627\u0631\u0645\u0632\u062f \u062a\u0631\u0627\u06a9\u0646\u0634 \u0628\u0627 \u062e\u0637\u0627 \u0645\u0648\u0627\u062c\u0647 \u0634\u062f</translation>\n@@ -2798,6 +3432,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Do you want to increase the fee?</source>\n         <translation>\u0622\u06cc\u0627 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0646\u062f\u0627\u0632\u0647 \u06a9\u0627\u0631\u0645\u0632\u062f \u0631\u0627 \u0627\u0641\u0632\u0627\u06cc\u0634 \u062f\u0647\u06cc\u062f\u061f</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Do you want to draft a transaction with fee increase?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>\u06a9\u0627\u0631\u0645\u0632\u062f \u0627\u0644\u0627\u0646:</translation>\n@@ -2810,6 +3448,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>New fee:</source>\n         <translation>\u06a9\u0627\u0631\u0645\u0632\u062f \u062c\u062f\u06cc\u062f:</translation>\n     </message>\n+    <message>\n+        <source>Confirm fee bump</source>\n+        <translation>Confirm fee bump</translation>\n+    </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>Can't draft transaction.</translation>\n+    </message>\n     <message>\n         <source>PSBT copied</source>\n         <translation>PSBT \u06a9\u067e\u06cc \u0634\u062f</translation>\n@@ -2818,6 +3464,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Can't sign transaction.</source>\n         <translation>\u0646\u0645\u06cc\u062a\u0648\u0627\u0646 \u062a\u0631\u0627\u06a9\u0646\u0634 \u0631\u0627 \u062b\u0628\u062a \u06a9\u0631\u062f</translation>\n     </message>\n+    <message>\n+        <source>Could not commit transaction</source>\n+        <translation>Could not commit transaction</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n@@ -2837,6 +3487,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error</source>\n         <translation>\u062e\u0637\u0627</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>Unable to decode PSBT from clipboard (invalid base64)</translation>\n+    </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>Load Transaction Data</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>Partially Signed Transaction (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation>PSBT file must be smaller than 100 MiB</translation>\n+    </message>\n+    <message>\n+        <source>Unable to decode PSBT</source>\n+        <translation>Unable to decode PSBT</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>\u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u06cc\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u06af\u06cc\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -2849,29 +3519,129 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Backup Failed</source>\n         <translation>\u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u06cc\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u06af\u06cc\u0631\u06cc \u0628\u0627 \u062e\u0637\u0627 \u0645\u0648\u0627\u062c\u0647 \u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>There was an error trying to save the wallet data to %1.</translation>\n+    </message>\n     <message>\n         <source>Backup Successful</source>\n         <translation>\u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u06cc\u0627  \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u06af\u06cc\u0631\u06cc \u0645\u0648\u0641\u0642\u06cc\u062a \u0622\u0645\u06cc\u0632 \u0628\u0648\u062f.</translation>\n     </message>\n+    <message>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>The wallet data was successfully saved to %1.</translation>\n+    </message>\n     <message>\n         <source>Cancel</source>\n         <translation>\u0644\u063a\u0648</translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n+    <message>\n+        <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n+        <translation>Distributed under the MIT software license, see the accompanying file %s or %s</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>Prune configured below the minimum of %d MiB.  Please use a higher number.</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Pruning blockstore...</translation>\n+    </message>\n+    <message>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>Unable to start HTTP server. See debug log for details.</translation>\n+    </message>\n     <message>\n         <source>The %s developers</source>\n         <translation>%s \u062a\u0648\u0633\u0639\u0647 \u062f\u0647\u0646\u062f\u06af\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n+        <translation>Cannot obtain a lock on data directory %s. %s is probably already running.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n+        <translation>Cannot provide specific connections and have addrman find outgoing connections at the same.</translation>\n+    </message>\n+    <message>\n+        <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</translation>\n+    </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n+        <translation>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</translation>\n+    </message>\n+    <message>\n+        <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n+        <translation>Please contribute if you find %s useful. Visit %s for further information about the software.</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</source>\n+        <translation>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</source>\n+        <translation>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</translation>\n+    </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u0627\u06cc\u0646 \u06cc\u06a9 \u0646\u0633\u062e\u0647 \u06cc \u0622\u0632\u0645\u0627\u06cc\u0634\u06cc \u0627\u0633\u062a - \u0628\u0627 \u0645\u0633\u0626\u0648\u0644\u06cc\u062a \u062e\u0648\u062f\u062a\u0627\u0646 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f -  \u0622\u0646 \u0631\u0627 \u062f\u0631 \u0645\u0639\u062f\u0646 \u0648 \u0628\u0627\u0632\u0631\u06af\u0627\u0646\u06cc \u0628\u06a9\u0627\u0631 \u0646\u06af\u06cc\u0631\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n+        <translation>This is the transaction fee you may discard if change is smaller than dust at this level</translation>\n+    </message>\n+    <message>\n+        <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n+        <translation>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</translation>\n+    </message>\n+    <message>\n+        <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n+        <translation>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</translation>\n+    </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool must be at least %d MB</translation>\n+    </message>\n+    <message>\n+        <source>Cannot resolve -%s address: '%s'</source>\n+        <translation>Cannot resolve -%s address: '%s'</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>\u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f\u0646 \u0627\u0646\u062f\u06cc\u0633 \u062e\u0627\u0631\u062c \u0627\u0632 \u062f\u0627\u0645\u0646\u0647</translation>\n     </message>\n+    <message>\n+        <source>Config setting for %s only applied on %s network when in [%s] section.</source>\n+        <translation>Config setting for %s only applied on %s network when in [%s] section.</translation>\n+    </message>\n     <message>\n         <source>Copyright (C) %i-%i</source>\n         <translation>\u06a9\u067e\u06cc \u0631\u0627\u06cc\u062a (C) %i-%i</translation>\n@@ -2880,6 +3650,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Corrupted block database detected</source>\n         <translation>\u06cc\u06a9 \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u06cc \u0628\u0644\u0648\u06a9 \u062e\u0631\u0627\u0628 \u06cc\u0627\u0641\u062a \u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Could not find asmap file %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Could not parse asmap file %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u0622\u06cc\u0627 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0644\u0627\u0646 \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u0628\u0644\u0627\u06a9 \u0631\u0627 \u0628\u0627\u0632\u0633\u0627\u0632\u06cc \u06a9\u0646\u06cc\u062f\u061f</translation>\n@@ -2888,10 +3666,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error initializing block database</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0622\u0645\u0627\u062f\u0647 \u0633\u0627\u0632\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u06cc \u0628\u0644\u0648\u06a9</translation>\n     </message>\n+    <message>\n+        <source>Error initializing wallet database environment %s!</source>\n+        <translation>Error initializing wallet database environment %s!</translation>\n+    </message>\n     <message>\n         <source>Error loading %s</source>\n         <translation>\u062e\u0637\u0627 \u0628\u0627\u0632\u06af\u0630\u0627\u0631\u06cc %s</translation>\n     </message>\n+    <message>\n+        <source>Error loading %s: Private keys can only be disabled during creation</source>\n+        <translation>Error loading %s: Private keys can only be disabled during creation</translation>\n+    </message>\n+    <message>\n+        <source>Error loading %s: Wallet corrupted</source>\n+        <translation>Error loading %s: Wallet corrupted</translation>\n+    </message>\n+    <message>\n+        <source>Error loading %s: Wallet requires newer version of %s</source>\n+        <translation>Error loading %s: Wallet requires newer version of %s</translation>\n+    </message>\n     <message>\n         <source>Error loading block database</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u0628\u0644\u0627\u06a9 block</translation>\n@@ -2904,14 +3698,82 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u0634\u0646\u06cc\u062f\u0646 \u0647\u0631 \u06af\u0648\u0646\u0647 \u062f\u0631\u06af\u0627\u0647 \u0627\u0646\u062c\u0627\u0645 \u067e\u0630\u06cc\u0631 \u0646\u06cc\u0633\u062a. \u0627\u0632listen=0  \u0628\u0631\u0627\u06cc \u0627\u06cc\u0646\u06a9\u0627\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u06cc\u0646\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Failed to rescan the wallet during initialization</source>\n+        <translation>Failed to rescan the wallet during initialization</translation>\n+    </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>Failed to verify database</translation>\n+    </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Ignoring duplicate -wallet %s.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u0648\u0627\u0631\u062f \u06a9\u0631\u062f\u0646...</translation>\n     </message>\n+    <message>\n+        <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n+        <translation>Incorrect or no genesis block found. Wrong datadir for network?</translation>\n+    </message>\n+    <message>\n+        <source>Initialization sanity check failed. %s is shutting down.</source>\n+        <translation>Initialization sanity check failed. %s is shutting down.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>Invalid P2P permission: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -%s=&lt;amount&gt;: '%s'</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0628\u0631\u0627\u06cc  -%s=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -discardfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Invalid amount for -discardfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to execute statement to verify database: %s</source>\n+        <translation>SQLiteDatabase: Failed to execute statement to verify database: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch the application id: %s</source>\n+        <translation>SQLiteDatabase: Failed to fetch the application id: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare statement to verify database: %s</source>\n+        <translation>SQLiteDatabase: Failed to prepare statement to verify database: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n+        <translation>SQLiteDatabase: Failed to read database verification error: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unexpected application id. Expected %u, got %u</source>\n+        <translation>SQLiteDatabase: Unexpected application id. Expected %u, got %u</translation>\n+    </message>\n+    <message>\n+        <source>Specified blocks directory \"%s\" does not exist.</source>\n+        <translation>Specified blocks directory \"%s\" does not exist.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Unknown address type '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>Unknown change type '%s'</translation>\n+    </message>\n     <message>\n         <source>Upgrading txindex database</source>\n         <translation>\u0627\u0631\u062a\u0642\u0627 \u062f\u0627\u062f\u0646 \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u0627\u0646\u062f\u06cc\u0633 \u062a\u0631\u0627\u06a9\u0646\u0634 \u0647\u0627 \u06cc\u0627 txindex</translation>\n@@ -2928,30 +3790,102 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Not enough file descriptors available.</source>\n         <translation>\u062a\u0648\u0635\u06cc\u0641\u06af\u0631\u0647\u0627\u06cc \u0641\u0627\u06cc\u0644 \u0628\u0647 \u0627\u0646\u062f\u0627\u0632\u0647 \u06a9\u0627\u0641\u06cc \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0646\u06cc\u0633\u062a</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>Prune cannot be configured with a negative value.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>Prune mode is incompatible with -txindex.</translation>\n+    </message>\n     <message>\n         <source>Replaying blocks...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u0628\u0644\u0648\u06a9\u200c\u0647\u0627...</translation>\n     </message>\n+    <message>\n+        <source>Rewinding blocks...</source>\n+        <translation>Rewinding blocks...</translation>\n+    </message>\n     <message>\n         <source>The source code is available from %s.</source>\n         <translation>\u0633\u0648\u0631\u0633 \u06a9\u062f \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a \u0627\u0632 %s.</translation>\n     </message>\n+    <message>\n+        <source>Transaction fee and change calculation failed</source>\n+        <translation>Transaction fee and change calculation failed</translation>\n+    </message>\n+    <message>\n+        <source>Unable to bind to %s on this computer. %s is probably already running.</source>\n+        <translation>Unable to bind to %s on this computer. %s is probably already running.</translation>\n+    </message>\n     <message>\n         <source>Unable to generate keys</source>\n         <translation>\u0646\u0645\u06cc\u062a\u0648\u0627\u0646 \u06a9\u0644\u06cc\u062f \u0647\u0627 \u0631\u0627 \u062a\u0648\u0644\u06cc\u062f \u06a9\u0631\u062f</translation>\n     </message>\n+    <message>\n+        <source>Unsupported logging category %s=%s.</source>\n+        <translation>Unsupported logging category %s=%s.</translation>\n+    </message>\n     <message>\n         <source>Upgrading UTXO database</source>\n         <translation>\u0627\u0631\u062a\u0642\u0627 \u062f\u0627\u062f\u0646 \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 UTXO</translation>\n     </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>User Agent comment (%s) contains unsafe characters.</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0631\u062f\u0646 \u0628\u0644\u0627\u06a9 \u0647\u0627...</translation>\n     </message>\n+    <message>\n+        <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n+        <translation>Error: Listening for incoming connections failed (listen returned error %s)</translation>\n+    </message>\n+    <message>\n+        <source>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</source>\n+        <translation>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</source>\n+        <translation>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</translation>\n+    </message>\n     <message>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>\u0645\u0628\u0644\u063a \u062a\u0631\u0627\u06a9\u0646\u0634 \u06a9\u0645\u062a\u0631 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u067e\u0633 \u0627\u0632 \u06a9\u0633\u0631 \u0647\u0632\u06cc\u0646\u0647  \u062a\u0631\u0627\u06a9\u0646\u0634 \u0642\u0627\u0628\u0644 \u0627\u0631\u0633\u0627\u0644 \u0628\u0627\u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</translation>\n+    </message>\n+    <message>\n+        <source>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</source>\n+        <translation>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</source>\n+        <translation>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</translation>\n+    </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</translation>\n+    </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>A fatal internal error occurred, see debug.log for details</translation>\n+    </message>\n+    <message>\n+        <source>Cannot set -peerblockfilters without -blockfilterindex.</source>\n+        <translation>Cannot set -peerblockfilters without -blockfilterindex.</translation>\n+    </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>Disk space is too low!</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u062e\u0648\u0627\u0646\u062f\u0646 \u0627\u0632 \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u0628\u0627 \u062e\u0637\u0627 \u0645\u0648\u0627\u062c\u0647 \u0634\u062f,\u062f\u0631 \u062d\u0627\u0644 \u062e\u0627\u0645\u0648\u0634 \u0634\u062f\u0646.</translation>\n@@ -2960,14 +3894,72 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Error upgrading chainstate database</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Error: Keypool ran out, please call keypoolrefill first</translation>\n+    </message>\n+    <message>\n+        <source>Fee rate (%s) is lower than the minimum fee rate setting (%s)</source>\n+        <translation>Fee rate (%s) is lower than the minimum fee rate setting (%s)</translation>\n+    </message>\n+    <message>\n+        <source>Invalid -onion address or hostname: '%s'</source>\n+        <translation>Invalid -onion address or hostname: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid -proxy address or hostname: '%s'</source>\n         <translation>\u0622\u062f\u0631\u0633 \u067e\u0631\u0627\u06a9\u0633\u06cc \u06cc\u0627 \u0647\u0627\u0633\u062a \u0646\u0627\u0645\u0639\u062a\u0628\u0631: ' %s'</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -paytxfee=&lt;amount&gt;: '%s' (must be at least %s)</source>\n+        <translation>Invalid amount for -paytxfee=&lt;amount&gt;: '%s' (must be at least %s)</translation>\n+    </message>\n+    <message>\n+        <source>Invalid netmask specified in -whitelist: '%s'</source>\n+        <translation>Invalid netmask specified in -whitelist: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Need to specify a port with -whitebind: '%s'</source>\n+        <translation>Need to specify a port with -whitebind: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</source>\n+        <translation>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>Prune mode is incompatible with -blockfilterindex.</translation>\n+    </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>Reducing -maxconnections from %d to %d, because of system limitations.</translation>\n+    </message>\n+    <message>\n+        <source>Section [%s] is not recognized.</source>\n+        <translation>Section [%s] is not recognized.</translation>\n+    </message>\n     <message>\n         <source>Signing transaction failed</source>\n         <translation>\u062b\u0628\u062a \u062a\u0631\u0627\u06a9\u0646\u0634 \u0628\u0627 \u062e\u0637\u0627 \u0645\u0648\u0627\u062c\u0647 \u0634\u062f</translation>\n     </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" does not exist</source>\n+        <translation>Specified -walletdir \"%s\" does not exist</translation>\n+    </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" is a relative path</source>\n+        <translation>Specified -walletdir \"%s\" is a relative path</translation>\n+    </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" is not a directory</source>\n+        <translation>Specified -walletdir \"%s\" is not a directory</translation>\n+    </message>\n+    <message>\n+        <source>The specified config file %s does not exist\n+</source>\n+        <translation>The specified config file %s does not exist\n+</translation>\n+    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>\u062d\u062c\u0645 \u062a\u0631\u0627\u06a9\u0646\u0634 \u0628\u0633\u06cc\u0627\u0631 \u06a9\u0645 \u0627\u0633\u062a \u0628\u0631\u0627\u06cc \u067e\u0631\u062f\u0627\u062e\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n@@ -2984,10 +3976,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Transaction too large</source>\n         <translation>\u062d\u062c\u0645 \u062a\u0631\u0627\u06a9\u0646\u0634 \u062e\u06cc\u0644\u06cc \u0632\u06cc\u0627\u062f \u0627\u0633\u062a</translation>\n     </message>\n+    <message>\n+        <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n+        <translation>Unable to bind to %s on this computer (bind returned error %s)</translation>\n+    </message>\n+    <message>\n+        <source>Unable to create the PID file '%s': %s</source>\n+        <translation>Unable to create the PID file '%s': %s</translation>\n+    </message>\n     <message>\n         <source>Unable to generate initial keys</source>\n         <translation>\u0646\u0645\u06cc\u062a\u0648\u0627\u0646 \u06a9\u0644\u06cc\u062f \u0647\u0627\u06cc \u0627\u0648\u0644\u06cc\u0647 \u0631\u0627 \u062a\u0648\u0644\u06cc\u062f \u06a9\u0631\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Unknown -blockfilterindex value %s.</source>\n+        <translation>Unknown -blockfilterindex value %s.</translation>\n+    </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u062a\u0627\u06cc\u06cc\u062f \u0634\u062f\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644(\u0647\u0627)...</translation>\n@@ -2996,10 +4000,18 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Warning: unknown new rules activated (versionbit %i)</source>\n         <translation>\u0647\u0634\u062f\u0627\u0631: \u0642\u0648\u0627\u0646\u06cc\u0646 \u062c\u062f\u06cc\u062f \u0646\u0627\u0634\u0646\u0627\u062e\u062a\u0647\u200c\u0627\u06cc \u0641\u0639\u0627\u0644 \u0634\u062f\u0647\u200c\u0627\u0646\u062f (\u0646\u0633\u062e\u0647\u200c\u0628\u06cc\u062a %i)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</translation>\n+    </message>\n     <message>\n         <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n         <translation>\u0627\u06cc\u0646 \u0647\u0632\u06cc\u0646\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634\u06cc \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0635\u0648\u0631\u062a \u0639\u062f\u0645 \u0648\u062c\u0648\u062f \u0647\u0632\u06cc\u0646\u0647 \u062a\u062e\u0645\u06cc\u0646\u06cc\u060c \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</translation>\n+    </message>\n     <message>\n         <source>%s is set very high!</source>\n         <translation>%s \u0628\u0633\u06cc\u0627\u0631 \u0628\u0632\u0631\u06af \u0627\u0646\u062a\u062e\u0627\u0628 \u0634\u062f\u0647 \u0627\u0633\u062a.</translation>\n@@ -3008,6 +4020,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Starting network threads...</source>\n         <translation>\u0627\u06cc\u062c\u0627\u062f \u0646\u062e\u200c\u0647\u0627\u06cc \u0634\u0628\u06a9\u0647 ...</translation>\n     </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>The wallet will avoid paying less than the minimum relay fee.</translation>\n+    </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n         <translation>\u0627\u06cc\u0646 \u06a9\u0645\u062a\u0631\u06cc\u0646 \u0641\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0647\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634 \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u06cc\u200c\u0646\u0645\u0627\u06cc\u06cc\u062f.</translation>\n@@ -3037,6 +4053,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Insufficient funds</source>\n         <translation>\u0648\u062c\u0648\u0647 \u0646\u0627\u06a9\u0627\u0641\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>\n+        <translation>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</translation>\n+    </message>\n     <message>\n         <source>Warning: Private keys detected in wallet {%s} with disabled private keys</source>\n         <translation>\u0647\u0634\u062f\u0627\u0631: \u06a9\u0644\u06cc\u062f \u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc \u062f\u0631 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0634\u0645\u0627 \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a { %s} \u0628\u0647 \u0647\u0645\u0631\u0627\u0647 \u06a9\u0644\u06cc\u062f \u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644</translation>"
      },
      {
        "sha": "53b360341dbd2e0538b04935e1a7ed911d9706f2",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>\u05dc\u05d7\u05d9\u05e6\u05d4 \u05e2\u05dc \u05d4\u05db\u05e4\u05ea\u05d5\u05e8 \u05d4\u05d9\u05de\u05e0\u05d9 \u05d1\u05e2\u05db\u05d1\u05e8 \u05ea\u05e2\u05e8\u05d5\u05da \u05d0\u05ea \u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05d0\u05d5 \u05d4\u05ea\u05d5\u05d5\u05d9\u05ea</translation>\n+        <translation>\u05dc\u05e2\u05e8\u05d9\u05db\u05ea \u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05d0\u05d5 \u05d4\u05ea\u05d5\u05d5\u05d9\u05ea \u05d9\u05e9 \u05dc\u05dc\u05d7\u05d5\u05e5 \u05e2\u05dc \u05d4\u05dc\u05d7\u05e6\u05df \u05d4\u05d9\u05de\u05e0\u05d9 \u05d1\u05e2\u05db\u05d1\u05e8</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -290,19 +290,19 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n     </message>\n     <message>\n         <source>&amp;About %1</source>\n-        <translation>&amp;\u05d0\u05d5\u05d3\u05d5\u05ea %1</translation>\n+        <translation>\u05e2\u05dc &amp;\u05d0\u05d5\u05d3\u05d5\u05ea %1</translation>\n     </message>\n     <message>\n         <source>Show information about %1</source>\n-        <translation>\u05d4\u05e6\u05d2 \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc %1</translation>\n+        <translation>\u05d4\u05e6\u05d2\u05ea \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc %1</translation>\n     </message>\n     <message>\n         <source>About &amp;Qt</source>\n-        <translation>\u05d0\u05d5\u05d3\u05d5\u05ea &amp;Qt</translation>\n+        <translation>\u05e2\u05dc \u05d0\u05d5\u05d3\u05d5\u05ea &amp;Qt</translation>\n     </message>\n     <message>\n         <source>Show information about Qt</source>\n-        <translation>\u05d4\u05e6\u05d2 \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc Qt</translation>\n+        <translation>\u05d4\u05e6\u05d2\u05ea \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc Qt</translation>\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n@@ -823,6 +823,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>\u05d9\u05e6\u05d9\u05e8\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 &lt;b&gt;%1&lt;/b&gt; \u05de\u05ea\u05d1\u05e6\u05e2\u05ea...</translation>\n+    </message>\n     <message>\n         <source>Create wallet failed</source>\n         <translation>\u05d9\u05e6\u05d9\u05e8\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e0\u05db\u05e9\u05dc\u05d4</translation>\n@@ -844,7 +848,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n     </message>\n     <message>\n         <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n-        <translation>\u05d4\u05e6\u05e4\u05df \u05d0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7. \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d9\u05d4\u05d9\u05d4 \u05de\u05d5\u05e6\u05e4\u05df \u05d1\u05d0\u05de\u05e6\u05e2\u05d5\u05ea \u05e1\u05d9\u05e1\u05de\u05d0 \u05dc\u05d1\u05d7\u05d9\u05e8\u05ea\u05da.</translation>\n+        <translation>\u05d4\u05e6\u05e4\u05e0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7. \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d9\u05d4\u05d9\u05d4 \u05de\u05d5\u05e6\u05e4\u05df \u05d1\u05d0\u05de\u05e6\u05e2\u05d5\u05ea \u05e1\u05d9\u05e1\u05de\u05d4 \u05dc\u05d1\u05d7\u05d9\u05e8\u05ea\u05da.</translation>\n     </message>\n     <message>\n         <source>Encrypt Wallet</source>\n@@ -965,7 +969,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n     </message>\n     <message>\n         <source>About %1</source>\n-        <translation>\u05d0\u05d5\u05d3\u05d5\u05ea %1</translation>\n+        <translation>\u05e2\u05dc \u05d0\u05d5\u05d3\u05d5\u05ea %1</translation>\n     </message>\n     <message>\n         <source>Command-line options</source>\n@@ -1594,7 +1598,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n     </message>\n     <message>\n         <source>Transaction is missing some information about inputs.</source>\n-        <translation>\u05dc\u05e2\u05d9\u05e1\u05e7\u05d4 \u05d7\u05e1\u05e8 \u05d7\u05dc\u05e7 \u05de\u05d4\u05de\u05d9\u05d3\u05e2 \u05dc\u05d2\u05d1\u05d9 \u05d4\u05e7\u05dc\u05d8\u05d9\u05dd.</translation>\n+        <translation>\u05dc\u05e2\u05e1\u05e7\u05d4 \u05d7\u05e1\u05e8 \u05d7\u05dc\u05e7 \u05de\u05d4\u05de\u05d9\u05d3\u05e2 \u05dc\u05d2\u05d1\u05d9 \u05d4\u05e7\u05dc\u05d8.</translation>\n     </message>\n     <message>\n         <source>Transaction still needs signature(s).</source>\n@@ -3561,10 +3565,6 @@ Go to File &gt; Open Wallet to load a wallet.\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>\u05e0\u05d0 \u05d1\u05d3\u05e7\u05d5 \u05e9\u05d4\u05ea\u05d0\u05e8\u05d9\u05da \u05d5\u05d4\u05e9\u05e2\u05d4 \u05d1\u05de\u05d7\u05e9\u05d1 \u05e9\u05dc\u05db\u05dd \u05e0\u05db\u05d5\u05e0\u05d9\u05dd! \u05d0\u05dd \u05d4\u05e9\u05e2\u05d5\u05df \u05e9\u05dc\u05db\u05dd \u05dc\u05d0 \u05de\u05e1\u05d5\u05e0\u05db\u05e8\u05df, %s \u05dc\u05d0 \u05d9\u05e2\u05d1\u05d5\u05d3 \u05db\u05d4\u05dc\u05db\u05d4.</translation>\n     </message>\n-    <message>\n-        <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n-        <translation>\u05d0\u05e0\u05d0 \u05e9\u05e7\u05dc\u05d5 \u05ea\u05e8\u05d5\u05de\u05d4 \u05d0\u05dd \u05de\u05e6\u05d0\u05ea\u05dd \u05d0\u05ea %s \u05e9\u05d9\u05de\u05d5\u05e9\u05d9. \u05d1\u05e7\u05e8\u05d5 \u05d1 %s \u05dc\u05de\u05d9\u05d3\u05e2 \u05e0\u05d5\u05e1\u05e3 \u05e2\u05dc \u05d4\u05ea\u05d5\u05db\u05e0\u05d4.</translation>\n-    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>\u05de\u05d0\u05d2\u05e8 \u05e0\u05ea\u05d5\u05e0\u05d9 \u05d4\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05de\u05db\u05d9\u05dc \u05d1\u05dc\u05d5\u05e7 \u05e2\u05dd \u05ea\u05d0\u05e8\u05d9\u05da \u05e2\u05ea\u05d9\u05d3\u05d9. \u05d4\u05d3\u05d1\u05e8 \u05d9\u05db\u05d5\u05dc \u05dc\u05d4\u05d9\u05d2\u05e8\u05dd \u05de\u05ea\u05d0\u05e8\u05d9\u05da \u05d5\u05e9\u05e2\u05d4 \u05e9\u05d2\u05d5\u05d9\u05d9\u05dd \u05d1\u05de\u05d7\u05e9\u05d1 \u05e9\u05dc\u05db\u05dd. \u05d1\u05e6\u05e2\u05d5 \u05d1\u05e0\u05d9\u05d9\u05d4 \u05de\u05d7\u05d3\u05e9 \u05e9\u05dc \u05de\u05d0\u05d2\u05e8 \u05e0\u05ea\u05d5\u05e0\u05d9 \u05d4\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05e8\u05e7 \u05d0\u05dd \u05d0\u05ea\u05dd \u05d1\u05d8\u05d5\u05d7\u05d9\u05dd \u05e9\u05d4\u05ea\u05d0\u05e8\u05d9\u05da \u05d5\u05d4\u05e9\u05e2\u05d4 \u05d1\u05de\u05d7\u05e9\u05d1\u05db\u05dd \u05e0\u05db\u05d5\u05e0\u05d9\u05dd</translation>"
      },
      {
        "sha": "adf2b3fb53c8103158a20c331f0a5fb844a08fd7",
        "filename": "src/qt/locale/bitcoin_hi.ts",
        "status": "modified",
        "additions": 65,
        "deletions": 1,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_hi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_hi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -314,18 +314,74 @@\n         <source>&amp;Change Passphrase...</source>\n         <translation>\u0914\u0930 \u092a\u093e\u0938\u092b\u093c\u094d\u0930\u0947\u091c\u093c \u092c\u0926\u0932\u0947\u0902</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u092c\u0928\u093e\u090f\u0902</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u0928\u092f\u093e \u0935\u0949\u0932\u0947\u091f \u092c\u0928\u093e\u090f\u0902</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>\u0924\u093f\u091c\u094b\u0930\u0940</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u090f\u0915\u094d\u091f\u093f\u0935\u093f\u091f\u0940 \u092c\u0902\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>\u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u090f\u0915\u094d\u091f\u093f\u0935\u093f\u091f\u0940 \u092c\u0902\u0926 \u0939\u094b \u0917\u0908 \u0939\u0948.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u090f\u0915\u094d\u091f\u093f\u0935\u093f\u091f\u0940 \u0926\u094b\u092c\u093e\u0930\u093e \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902.</translation>\n+    </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>\u0939\u0947\u0921\u0930\u094d\u0938 \u0938\u093f\u0902\u0915 \u0939\u094b \u0930\u0939\u0947 \u0939\u0948\u0902 (%1%)...</translation>\n+    </message>\n+    <message>\n+        <source>Reindexing blocks on disk...</source>\n+        <translation>\u0921\u093f\u0938\u094d\u0915 \u092a\u0930 \u092c\u094d\u0932\u0949\u0915\u094d\u0938 \u0930\u0940-\u0907\u0902\u0921\u0947\u0915\u094d\u0938\u093f\u0902\u0917 \u0939\u094b \u0930\u0939\u0947 \u0939\u0948\u0902...</translation>\n+    </message>\n+    <message>\n+        <source>Proxy is &lt;b&gt;enabled&lt;/b&gt;: %1</source>\n+        <translation>\u092a\u094d\u0930\u0949\u0915\u094d\u0938\u0940 &lt;b&gt; \u091a\u093e\u0932\u0942 \u0939\u0948 &lt;/b&gt; : %1</translation>\n+    </message>\n     <message>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>\u0907\u0938 \u092a\u0924\u0947 \u092a\u0930 \u092c\u093f\u091f\u0915\u094c\u0907\u0928 \u092d\u0947\u091c\u0947\u0902</translation>\n     </message>\n+    <message>\n+        <source>Backup wallet to another location</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u0915\u093e \u0926\u0942\u0938\u0930\u0940 \u091c\u0917\u0939 \u092a\u0930 \u092c\u0948\u0915\u0905\u092a \u0932\u0947\u0902</translation>\n+    </message>\n     <message>\n         <source>Change the passphrase used for wallet encryption</source>\n         <translation>\u092a\u0939\u091a\u093e\u0928 \u0936\u092c\u094d\u0926/\u0905\u0915\u094d\u0937\u0930 \u091c\u094b \u0935\u0949\u0932\u0947\u091f \u090f\u0928\u0915\u094d\u0930\u093f\u092a\u0936\u0928 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u0939\u0948 \u0909\u0938\u0947 \u092c\u0926\u0932\u093f\u090f!</translation>\n     </message>\n+    <message>\n+        <source>&amp;Verify message...</source>\n+        <translation>&amp;\u092e\u0948\u0938\u0947\u091c \u0935\u0948\u0930\u0940\u092b\u093c\u093e\u0908 \u0915\u0930\u0947\u0902...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;\u092d\u0947\u091c\u0947\u0902</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receive</source>\n+        <translation>&amp;\u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0947\u0902</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>&amp;\u0926\u093f\u0916\u093e\u090f\u0902/\u091b\u093f\u092a\u093e\u090f\u0902</translation>\n+    </message>\n+    <message>\n+        <source>Show or hide the main Window</source>\n+        <translation>\u092e\u0941\u0916\u094d\u092f \u0935\u093f\u0902\u0921\u094b \u0915\u094b \u0926\u093f\u0916\u093e\u090f\u0902 \u092f\u093e \u091b\u093f\u092a\u093e\u090f\u0902</translation>\n+    </message>\n     <message>\n         <source>&amp;File</source>\n         <translation>&amp;\u092b\u093e\u0907\u0932</translation>\n@@ -767,7 +823,11 @@\n     </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u0928\u092f\u093e \u0935\u0949\u0932\u0947\u091f \u092c\u0928\u093e\u090f\u0902</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n@@ -808,6 +868,10 @@\n         <source>Loading wallet...</source>\n         <translation>\u0935\u0949\u0932\u0947\u091f \u0906 \u0930\u0939\u093e \u0939\u0948...</translation>\n     </message>\n+    <message>\n+        <source>Cannot downgrade wallet</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u0915\u094b \u0921\u093e\u0909\u0928\u0917\u094d\u0930\u0947\u0921 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u0947</translation>\n+    </message>\n     <message>\n         <source>Rescanning...</source>\n         <translation>\u0930\u093f-\u0938\u094d\u0915\u0947\u0928\u0940-\u0907\u0902\u0917...</translation>"
      },
      {
        "sha": "44c774ddc4da967dd5f451c7139f939eb17e681b",
        "filename": "src/qt/locale/bitcoin_id.ts",
        "status": "modified",
        "additions": 196,
        "deletions": 0,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_id.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_id.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -2309,6 +2309,14 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 block)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>bu&amp;at Tidak ditandai</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Membuat sebagian tertanda transaksi bitcoin (PSBT) untuk digunakan dengan contoh dompet offline %1, atau dompet yang kompatibel dengan PSBT</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation>dari dompet '%1'</translation>\n@@ -2594,6 +2602,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>The signed message to verify</source>\n         <translation>Pesan yang ditandatangani untuk diverifikasi</translation>\n     </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation> Tanda tangan diberikan saat pesan telah ditandatangani</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Verifikasi pesan untuk memastikannya ditandatangani dengan alamat Bitcoin tersebut</translation>\n@@ -2696,6 +2708,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>not in memory pool</source>\n         <translation>Tidak dalam pool memory</translation>\n     </message>\n+    <message>\n+        <source>abandoned</source>\n+        <translation>ditinggalkan</translation>\n+    </message>\n     <message>\n         <source>%1/unconfirmed</source>\n         <translation>%1/belum dikonfirmasi</translation>\n@@ -2878,6 +2894,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Conflicted</source>\n         <translation>Bertentangan</translation>\n     </message>\n+    <message>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation>Belum matang (%1 konfirmasi, akan tersedia setelah %2)</translation>\n+    </message>\n     <message>\n         <source>Generated but not accepted</source>\n         <translation>Dihasilkan tapi tidak diterima</translation>\n@@ -2906,6 +2926,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>watch-only</source>\n         <translation>hanya-melihat</translation>\n     </message>\n+    <message>\n+        <source>(n/a)</source>\n+        <translation>(n/a)</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(tidak ada label)</translation>\n@@ -3255,6 +3279,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n         <translation>Tidak dapat memperoleh kunci pada direktori data %s. %s mungkin sudah berjalan.</translation>\n     </message>\n+    <message>\n+        <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n+        <translation>Tidak bisa menyediakan koneksi-koneksi spesifik dan memiliki addrman untuk mencari koneksi-koneksi yang terbuka di sama.</translation>\n+    </message>\n     <message>\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Kesalahan membaca %s! Semua kunci dibaca dengan benar, tetapi data transaksi atau entri buku alamat mungkin hilang atau salah.</translation>\n@@ -3275,6 +3303,18 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Ini adalah uji coba pra-rilis - gunakan dengan risiko anda sendiri - jangan digunakan untuk aplikasi penambangan atau penjual</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n+        <translation>Ini adalah biaya transaksi, kamu boleh menutup kalau uang kembali lebih kecil daripada debu di level ini</translation>\n+    </message>\n+    <message>\n+        <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n+        <translation>Tidak bisa mengulang blocks. Kamu harus membuat ulang database menggunakan -reindex-chainstate</translation>\n+    </message>\n+    <message>\n+        <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n+        <translation>tidak bisa memundur database ke status pre-fork. Kamu harus mengunduh ulang blockchain</translation>\n+    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Peringatan: Jaringan tampaknya tidak sepenuhnya setuju! Beberapa penambang tampaknya mengalami masalah.</translation>\n@@ -3283,10 +3323,38 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Peringatan: Kami tampaknya tidak sepenuhnya setuju dengan peers kami! Anda mungkin perlu memutakhirkan, atau nodes lain mungkin perlu dimutakhirkan.</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool harus paling sedikit %d MB</translation>\n+    </message>\n+    <message>\n+        <source>Cannot resolve -%s address: '%s'</source>\n+        <translation>Tidak bisa menyelesaikan -%s alamat: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Change index out of range</source>\n+        <translation>Indeks ganti diluar dari jangkauan</translation>\n+    </message>\n+    <message>\n+        <source>Config setting for %s only applied on %s network when in [%s] section.</source>\n+        <translation>Setting konfigurasi untuk %s hanya di terapkan di %s jaringan ketika ada di [%s] bagian.</translation>\n+    </message>\n+    <message>\n+        <source>Copyright (C) %i-%i</source>\n+        <translation>Copyright (C) %i-%i</translation>\n+    </message>\n     <message>\n         <source>Corrupted block database detected</source>\n         <translation>Menemukan database blok yang rusak</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Tidak bisa menemukan berkas asmap %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Tidak bisa mengurai berkas asmap %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Apakah Anda ingin coba membangun kembali database blok sekarang?</translation>\n@@ -3299,6 +3367,22 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Error initializing wallet database environment %s!</source>\n         <translation>Kesalahan menginisialisasi dompet pada database%s!</translation>\n     </message>\n+    <message>\n+        <source>Error loading %s</source>\n+        <translation>Error loading %s</translation>\n+    </message>\n+    <message>\n+        <source>Error loading %s: Private keys can only be disabled during creation</source>\n+        <translation>Error loading %s: Kunci privat hanya bisa dimatikan saat kreasi</translation>\n+    </message>\n+    <message>\n+        <source>Error loading %s: Wallet corrupted</source>\n+        <translation>Error loading %s: Dompet rusak</translation>\n+    </message>\n+    <message>\n+        <source>Error loading %s: Wallet requires newer version of %s</source>\n+        <translation>Error loading %s: Dompet membutuhkan versi yang lebih baru dari %s</translation>\n+    </message>\n     <message>\n         <source>Error loading block database</source>\n         <translation>Gagal memuat database blok</translation>\n@@ -3307,6 +3391,14 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Error opening block database</source>\n         <translation>Menemukan masalah membukakan database blok</translation>\n     </message>\n+    <message>\n+        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n+        <translation>Gagal untuk mendengarkan di port apapun. Gunakan -listen=0 kalau kamu mau ini.</translation>\n+    </message>\n+    <message>\n+        <source>Failed to rescan the wallet during initialization</source>\n+        <translation>Gagal untuk scan ulang dompet saat inisialisasi.</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>mengimpor...</translation>\n@@ -3315,6 +3407,38 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n         <translation>Tidak bisa cari blok pertama, atau blok pertama salah. Salah direktori untuk jaringan?</translation>\n     </message>\n+    <message>\n+        <source>Initialization sanity check failed. %s is shutting down.</source>\n+        <translation>Inisialisasi pemeriksa kewarasan gagal. %s sedang dimatikan.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>Izin P2P yang tidak sah: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -discardfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Jumlah yang tidak benar untuk -discardfee-&lt;amount&gt;: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n+        <translation>Jumlah yang tidak saf untuk -fallbackfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Specified blocks directory \"%s\" does not exist.</source>\n+        <translation>Blocks yang ditentukan directori \"%s\" tidak ada.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Tipe alamat yang tidak diketahui '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>Tipe ganti yang tidak diketahui '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Upgrading txindex database</source>\n+        <translation>Meningkatkan database txindex</translation>\n+    </message>\n     <message>\n         <source>Loading P2P addresses...</source>\n         <translation>Memuat alamat P2P....</translation>\n@@ -3331,6 +3455,18 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Prune cannot be configured with a negative value.</source>\n         <translation>Pemangkasan tidak dapat dikonfigurasi dengan nilai negatif.</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -txindex.</source>\n+        <translation>Mode prune tidak kompatibel dengan -txindex</translation>\n+    </message>\n+    <message>\n+        <source>Replaying blocks...</source>\n+        <translation>Memutar ulang blok ...</translation>\n+    </message>\n+    <message>\n+        <source>Rewinding blocks...</source>\n+        <translation>Memutar blok ...</translation>\n+    </message>\n     <message>\n         <source>The source code is available from %s.</source>\n         <translation>Kode sumber tersedia dari %s.</translation>\n@@ -3399,6 +3535,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Invalid -proxy address or hostname: '%s'</source>\n         <translation>Alamat proxy atau hostname tidak valid: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -paytxfee=&lt;amount&gt;: '%s' (must be at least %s)</source>\n+        <translation>Jumlah yang tidak sah untuk -paytxfee=&lt;amount&gt;: '%s' (Paling sedikit harus %s)</translation>\n+    </message>\n     <message>\n         <source>Invalid netmask specified in -whitelist: '%s'</source>\n         <translation>Netmask tidak valid yang ditentukan di -whitelist: '%s'</translation>\n@@ -3411,6 +3551,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Prune mode is incompatible with -blockfilterindex.</source>\n         <translation>Mode pemangkasan tidak kompatibel dengan -blockfilterindex.</translation>\n     </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>Mengurangi -maxconnections dari %d ke %d, karena limitasi sistem.</translation>\n+    </message>\n     <message>\n         <source>Section [%s] is not recognized.</source>\n         <translation>Bagian [%s] tidak dikenali.</translation>\n@@ -3419,6 +3563,18 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Signing transaction failed</source>\n         <translation>Tandatangani transaksi tergagal</translation>\n     </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" does not exist</source>\n+        <translation>-walletdir yang sudah dispesifikasi \"%s\" tidak ada.</translation>\n+    </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" is a relative path</source>\n+        <translation>-walletdir yang dispesifikasi \"%s\" adalah jalur yang relatif</translation>\n+    </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" is not a directory</source>\n+        <translation>-walletdir yang dispesifikasi \"%s\" bukan direktori</translation>\n+    </message>\n     <message>\n         <source>The specified config file %s does not exist\n </source>\n@@ -3441,14 +3597,50 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Transaction too large</source>\n         <translation>Transaksi terlalu besar</translation>\n     </message>\n+    <message>\n+        <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n+        <translation>Tidak bisa menghubungkan %s di komputer (Penghubung menghasilkan error %s)</translation>\n+    </message>\n+    <message>\n+        <source>Unable to create the PID file '%s': %s</source>\n+        <translation>Tidak dapat membuat berkas PID '%s': %s</translation>\n+    </message>\n+    <message>\n+        <source>Unable to generate initial keys</source>\n+        <translation>Tidak dapat membuat kunci awal</translation>\n+    </message>\n+    <message>\n+        <source>Unknown -blockfilterindex value %s.</source>\n+        <translation>Jumlah -blockfilterindex yang tidak diketahui %s</translation>\n+    </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n         <translation>Memverifikasi dompet...</translation>\n     </message>\n+    <message>\n+        <source>Warning: unknown new rules activated (versionbit %i)</source>\n+        <translation>Peringatan: Aturan baru yang tidak diketahui diaktifkan (versionbit %i)</translation>\n+    </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee disetel sangat tinggi! Biaya sebesar ini bisa dibayar dengan 1 transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n+        <translation>Ini adalah biaya transaksi, kamu boleh membayar saat estimasi biaya tidak tersedia</translation>\n+    </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>Panjang total dari versi string jaringan (%i) melewati panjang maximum (%i). Kurangi nomornya atau besar dari uacomments</translation>\n+    </message>\n     <message>\n         <source>%s is set very high!</source>\n         <translation>%s diset sangat tinggi!</translation>\n     </message>\n+    <message>\n+        <source>Starting network threads...</source>\n+        <translation>Memulai rangkaian jaringan ...</translation>\n+    </message>\n     <message>\n         <source>The wallet will avoid paying less than the minimum relay fee.</source>\n         <translation>Dompet akan menghindari pembayaran kurang dari biaya minimum ongkos relay.</translation>\n@@ -3481,6 +3673,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Insufficient funds</source>\n         <translation>Saldo tidak mencukupi</translation>\n     </message>\n+    <message>\n+        <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>\n+        <translation>Estimasi biaya gagal. Biaya fallback dimatikan. Tunggu beberapa blocks atau nyalakan -fallbackfee</translation>\n+    </message>\n     <message>\n         <source>Warning: Private keys detected in wallet {%s} with disabled private keys</source>\n         <translation>Peringatan: Kunci pribadi terdeteksi di dompet {%s} dengan kunci pribadi yang dinonaktifkan</translation>"
      },
      {
        "sha": "f14c826bd18abba8563c48eb68581425011a1063",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 67,
        "deletions": 2,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -7,7 +7,7 @@\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u65b0\u3057\u3044\u30a2\u30c9\u30ec\u30b9\u3092\u4f5c\u6210</translation>\n+        <translation>\u30a2\u30c9\u30ec\u30b9\u306e\u65b0\u898f\u4f5c\u6210</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n@@ -69,6 +69,11 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u3053\u308c\u3089\u306f\u3001\u3042\u306a\u305f\u304c\u77e5\u3063\u3066\u3044\u308b\u9001\u4fe1\u5148\u306e Bitcoin \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\u30b3\u30a4\u30f3\u3092\u9001\u308b\u524d\u306b\u5fc5\u305a\u3001\u91d1\u984d\u3068\u53d7\u53d6\u7528\u30a2\u30c9\u30ec\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>\u3053\u308c\u3089\u306f\u652f\u6255\u3044\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u3001\u3042\u306a\u305f\u306e Bitcoin \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\u65b0\u3057\u3044\u30a2\u30c9\u30ec\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u53d7\u53d6\u30bf\u30d6\u5185\u306e\u300c\u65b0\u3057\u3044\u53d7\u53d6\u7528\u30a2\u30c9\u30ec\u30b9\u3092\u4f5c\u6210\u300d\u30dc\u30bf\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>\u30a2\u30c9\u30ec\u30b9\u3092\u30b3\u30d4\u30fc(&amp;C)</translation>\n@@ -478,6 +483,10 @@\n         <source>Up to date</source>\n         <translation>\u30d6\u30ed\u30c3\u30af\u306f\u6700\u65b0</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>PSBT\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u8fbc (&amp;L)</translation>\n+    </message>\n     <message>\n         <source>Load PSBT from clipboard...</source>\n         <translation>PSBT\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u304b\u3089\u8aad\u307f\u8fbc\u307f</translation>\n@@ -1465,6 +1474,10 @@\n         <source>Dialog</source>\n         <translation>\u30c0\u30a4\u30a2\u30ed\u30b0</translation>\n     </message>\n+    <message>\n+        <source>Sign Tx</source>\n+        <translation>\u7f72\u540d\u3055\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3</translation>\n+    </message>\n     <message>\n         <source>Copy to Clipboard</source>\n         <translation>\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc</translation>\n@@ -1477,18 +1490,42 @@\n         <source>Close</source>\n         <translation>\u9589\u3058\u308b</translation>\n     </message>\n+    <message>\n+        <source>Failed to load transaction: %1</source>\n+        <translation>%1 : \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u8aad\u8fbc\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation>%1 : \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7f72\u540d\u5931\u6557</translation>\n+    </message>\n     <message>\n         <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n         <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3078\u306e\u7f72\u540d\u304c\u6210\u529f\u3057\u307e\u3057\u305f\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306e\u6e96\u5099\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u3002</translation>\n     </message>\n+    <message>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation>PSBT\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3057\u305f.</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>\u90e8\u5206\u7684\u306b\u7f72\u540d\u3055\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb (*.psbt)</translation>\n+    </message>\n     <message>\n         <source>PSBT saved to disk.</source>\n         <translation>PSBT\u306f\u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002</translation>\n     </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation> *  %1 \u304b\u3089 %2 \u3078\u9001\u4fe1</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u624b\u6570\u6599: </translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>\u5408\u8a08</translation>\n@@ -1497,7 +1534,11 @@\n         <source>or</source>\n         <translation>\u307e\u305f\u306f</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u304c\u4e0d\u660e\u3067\u3059.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1852,6 +1893,10 @@\n         <source>Increase font size</source>\n         <translation>\u6587\u5b57\u30b5\u30a4\u30ba\u3092\u62e1\u5927</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>\u30b5\u30fc\u30d3\u30b9</translation>\n@@ -2404,6 +2449,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Save Transaction Data</source>\n         <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>\u90e8\u5206\u7684\u306b\u7f72\u540d\u3055\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb (*.psbt)</translation>\n+    </message>\n     <message>\n         <source>PSBT saved</source>\n         <translation>PSBT\u306f\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002</translation>\n@@ -3323,6 +3372,18 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Load Transaction Data</source>\n         <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>\u90e8\u5206\u7684\u306b\u7f72\u540d\u3055\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3 (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation>PSBT\u30d5\u30a1\u30a4\u30eb\u306f\u3001100MB\u3088\u308a\u5c0f\u3055\u3044\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059.</translation>\n+    </message>\n+    <message>\n+        <source>Unable to decode PSBT</source>\n+        <translation>PSBT\u30d5\u30a1\u30a4\u30eb\u3092\u5fa9\u53f7\u3067\u304d\u307e\u305b\u3093.</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7</translation>\n@@ -3666,6 +3727,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>-whitebind \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059: '%s'</translation>\n     </message>\n+    <message>\n+        <source>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</source>\n+        <translation>\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u304c\u6307\u5b9a\u3055\u308c\u3066\u307e\u305b\u3093. -proxy=&lt;ip&gt; \u304b -proxy=&lt;ip:port&gt; \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044.</translation>\n+    </message>\n     <message>\n         <source>Prune mode is incompatible with -blockfilterindex.</source>\n         <translation>\u526a\u5b9a\u30e2\u30fc\u30c9\u306f -blockfilterindex \u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002</translation>"
      },
      {
        "sha": "fa14a43f9de9745bcffa73d39fbae2388556155d",
        "filename": "src/qt/locale/bitcoin_ko.ts",
        "status": "modified",
        "additions": 268,
        "deletions": 231,
        "changes": 499,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ko.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ko.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8"
      },
      {
        "sha": "dfadaa80b3a4c70df0445d099fa12d149084594b",
        "filename": "src/qt/locale/bitcoin_ku_IQ.ts",
        "status": "modified",
        "additions": 386,
        "deletions": 4,
        "changes": 390,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ku_IQ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ku_IQ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ku_IQ.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -1,6 +1,10 @@\n <TS language=\"ku_IQ\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u06a9\u0631\u062a\u06d5\u06cc-\u0695\u0627\u0633\u062a \u0628\u06a9\u06d5 \u0628\u06c6 \u062f\u06d5\u0633\u06a9\u0627\u0631\u06cc \u06a9\u0631\u062f\u0646\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646 \u06cc\u0627\u0646 \u067e\u06ce\u0646\u0627\u0633\u06d5</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0646\u0627\u0648\u0648\u0646\u06cc\u0634\u0627\u0646\u06ce\u06a9\u06cc \u0646\u0648\u06ce \u062f\u0631\u0648\u0633\u062a \u0628\u06a9\u06d5</translation>\n@@ -9,6 +13,10 @@\n         <source>&amp;New</source>\n         <translation>&amp;\u0646\u0648\u06ce</translation>\n     </message>\n+    <message>\n+        <source>Copy the currently selected address to the system clipboard</source>\n+        <translation>\u06a9\u06c6\u067e\u06cc\u06a9\u0631\u062f\u0646\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0647\u06d5\u06b5\u0628\u0698\u06ce\u0631\u062f\u0631\u0627\u0648\u06cc \u0626\u06ce\u0633\u062a\u0627 \u0628\u06c6 \u06a9\u0644\u06cc\u067e \u0628\u06c6\u0631\u062f\u06cc \u0633\u06cc\u0633\u062a\u06d5\u0645</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy</source>\n         <translation>&amp;\u0695\u0648\u0648\u0646\u0648\u0648\u0633</translation>\n@@ -17,6 +25,18 @@\n         <source>C&amp;lose</source>\n         <translation>C&amp;\u062f\u0627\u062e\u0633\u062a\u0646</translation>\n     </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>\u0633\u0695\u06cc\u0646\u06d5\u0648\u06d5\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0647\u06d5\u06b5\u0628\u0698\u06ce\u0631\u062f\u0631\u0627\u0648\u06cc \u0626\u06ce\u0633\u062a\u0627 \u0644\u06d5 \u0644\u06cc\u0633\u062a\u06d5\u06a9\u06d5</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06ce\u06a9 \u0628\u0646\u0648\u0648\u0633\u06d5 \u06cc\u0627\u0646 \u067e\u06ce\u0646\u0627\u0633\u06d5\u06cc\u06d5\u06a9 \u062f\u0627\u062e\u06b5 \u0628\u06a9\u06d5 \u0628\u06c6 \u06af\u06d5\u0695\u0627\u0646</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u0646\u0627\u0631\u062f\u0646\u06cc \u062f\u0627\u062a\u0627 \u0644\u06d5 \u062e\u0634\u062a\u06d5\u0628\u06d5\u0646\u062f\u06cc \u0626\u06ce\u0633\u062a\u0627 \u0628\u06c6 \u0641\u0627\u06cc\u0644\u06ce\u06a9</translation>\n+    </message>\n     <message>\n         <source>&amp;Export</source>\n         <translation>&amp;\u0647\u06d5\u0646\u0627\u0631\u062f\u0646</translation>\n@@ -25,15 +45,53 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;\u0633\u0695\u06cc\u0646\u06d5\u0648\u06d5</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u06d5 \u0647\u06d5\u06b5\u0628\u0698\u06ce\u0631\u06d5 \u0628\u06c6 \u0646\u0627\u0631\u062f\u0646\u06cc \u062f\u0631\u0627\u0648\u06d5\u06a9\u0627\u0646 \u0628\u06c6</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u06d5 \u0647\u06d5\u06b5\u0628\u0698\u06ce\u0631\u06d5 \u0628\u06c6 \u0648\u06d5\u0631\u06af\u0631\u062a\u0646\u06cc \u062f\u0631\u0627\u0648\u06d5\u06a9\u0627\u0646 \u0644\u06d5\u06af\u06d5\u06b5</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;\u0647\u06d5\u06b5\u0628\u0698\u06ce\u0631\u06d5</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0646\u0627\u0631\u062f\u0646\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u0627\u0646</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u0648\u06d5\u0631\u06af\u0631\u062a\u0646\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u0627\u0646</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0626\u06d5\u0645\u0627\u0646\u06d5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u06a9\u06c6\u0628\u06cc\u062a\u06d5\u06a9\u0627\u0646\u06cc \u062a\u06c6\u0646\u06d5 \u0628\u06c6 \u0646\u0627\u0631\u062f\u0646\u06cc \u067e\u0627\u0631\u06d5\u062f\u0627\u0646\u06d5\u06a9\u0627\u0646. \u0647\u06d5\u0645\u06cc\u0634\u06d5 \u0628\u0695\u06cc \u0648 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0648\u06d5\u0631\u06af\u0631\u06d5\u06a9\u0627\u0646 \u0628\u067e\u0634\u06a9\u0646\u06d5 \u067e\u06ce\u0634 \u0646\u0627\u0631\u062f\u0646\u06cc \u062f\u0631\u0627\u0648\u06d5\u06a9\u0627\u0646.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>\u0626\u06d5\u0645\u0627\u0646\u06d5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0628\u06cc\u062a\u06a9\u06c6\u0628\u06cc\u062a\u06d5\u06a9\u0627\u0646\u06cc \u062a\u06c6\u0646\u06d5 \u0628\u06c6 \u0648\u06d5\u0631\u06af\u0631\u062a\u0646\u06cc \u067e\u0627\u0631\u06d5\u062f\u0627\u0646\u06d5\u06a9\u0627\u0646. \u062f\u0648\u06af\u0645\u06d5\u06cc '\u062f\u0631\u0648\u0633\u062a\u06a9\u0631\u062f\u0646\u06cc\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0648\u06d5\u0631\u06af\u0631\u062a\u0646\u06cc \u0646\u0648\u06ce' \u0644\u06d5 \u062a\u0627\u0628\u06cc \u0648\u06d5\u0631\u06af\u0631\u062a\u0646\u062f\u0627 \u0628\u06c6 \u062f\u0631\u0648\u0633\u062a\u06a9\u0631\u062f\u0646\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0646\u0648\u06ce \u0628\u06d5\u06a9\u0627\u0631\u0628\u06ce\u0646\u06d5.\n+\u0648\u0627\u0698\u0648\u0648\u06a9\u0631\u062f\u0646 \u062a\u06d5\u0646\u0647\u0627 \u062f\u06d5\u06a9\u0631\u06ce\u062a \u0644\u06d5\u06af\u06d5\u06b5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u0627\u0646\u06cc \u062c\u06c6\u0631\u06cc '\u0645\u06cc\u0631\u0627\u062a'.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;\u0695\u0648\u0648\u0646\u0648\u0648\u0633\u06a9\u0631\u062f\u0646 \u0646\u0627\u0648\u0648\u0646\u06cc\u0634\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>\u06a9\u06c6\u067e\u06cc &amp;\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646</translation>\n+    </message>\n     <message>\n         <source>&amp;Edit</source>\n         <translation>&amp;\u062f\u06d5\u0633\u06a9\u0627\u0631\u06cc\u06a9\u0631\u062f\u0646</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u0647\u06d5\u06b5\u06d5\u06cc\u06d5\u06a9 \u0695\u0648\u0648\u06cc\u062f\u0627 \u0644\u06d5 \u0647\u06d5\u0648\u06b5\u06cc \u062e\u06d5\u0632\u0646\u06a9\u0631\u062f\u0646\u06cc \u0644\u06cc\u0633\u062a\u06cc \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u06d5 \u0628\u06c6 %1. \u062a\u06a9\u0627\u06cc\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u0647\u06d5\u0648\u06b5 \u062f\u06d5\u0648\u06d5.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -43,12 +101,32 @@\n     </context>\n <context>\n     <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u062f\u06d5\u0633\u062a\u06d5\u0648\u0627\u0698\u06d5\u06cc \u062a\u06ce\u067e\u06d5\u0695\u06d5\u0648\u06cc \u0646\u0648\u06ce \u062a\u06ce\u0628\u0646\u0648\u0648\u0633\u06d5 \u0628\u06c6 \u062c\u0632\u062f\u0627\u0646.1 \u062a\u06a9\u0627\u06cc\u06d5 \u062f\u06d5\u0633\u062a\u06d5\u0648\u0627\u0698\u06d5\u06cc \u062a\u06ce\u067e\u06d5\u0695\u06ce\u06a9 \u0628\u06d5\u06a9\u0627\u0631\u0628\u06ce\u0646\u06d5 \u0644\u06d5 2ten \u06cc\u0627\u0646 \u0632\u06cc\u0627\u062a\u0631 \u0644\u06d5 \u0647\u06ce\u0645\u0627 \u0647\u06d5\u0695\u06d5\u0645\u06d5\u06a9\u06cc\u06d5\u06a9\u0627\u06462\u060c \u06cc\u0627\u0646 38 \u06cc\u0627\u0646 \u0632\u06cc\u0627\u062a\u0631 \u0648\u0648\u0634\u06d5\u06a9\u0627\u06463.</translation>\n+    </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u0628\u06cc\u0631\u062a \u0628\u06ce\u062a \u06a9\u06d5 \u0695\u06d5\u0645\u0632\u0627\u0646\u062f\u0646\u06cc \u062c\u0632\u062f\u0627\u0646\u06d5\u06a9\u06d5\u062a \u0646\u0627\u062a\u0648\u0627\u0646\u06ce\u062a \u0628\u06d5\u062a\u06d5\u0648\u0627\u0648\u06cc \u0628\u06cc\u062a\u06a9\u06c6\u0628\u06cc\u062a\u06d5\u06a9\u0627\u0646\u062a \u0628\u067e\u0627\u0631\u06ce\u0632\u06ce\u062a \u0644\u06d5 \u062f\u0632\u0631\u0627\u0628\u0648\u0648\u0646 \u0644\u06d5\u0644\u0627\u06cc\u06d5\u0646 \u0648\u0648\u0631\u0646\u06d5\u0631\u06cc \u062a\u0648\u0648\u0634\u06a9\u0631\u062f\u0646\u06cc \u06a9\u06c6\u0645\u067e\u06cc\u0648\u062a\u06d5\u0631\u06d5\u06a9\u06d5\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>\u06af\u0631\u0646\u06af: \u0647\u06d5\u0631 \u067e\u0627\u06b5\u067e\u0634\u062a\u06ce\u06a9\u06cc \u067e\u06ce\u0634\u0648\u0648\u062a \u062f\u0631\u0648\u0633\u062a \u06a9\u0631\u062f\u0648\u0648\u06d5 \u0644\u06d5 \u0641\u0627\u06cc\u0644\u06cc \u062c\u0632\u062f\u0627\u0646\u06d5\u06a9\u06d5\u062a \u062f\u06d5\u0628\u06ce\u062a \u062c\u06ce\u06af\u06c6\u0695\u06a9\u06ce\u06cc \u067e\u06ce \u0628\u06a9\u0631\u06ce\u062a \u0644\u06d5\u06af\u06d5\u06b5 \u0641\u0627\u06cc\u0644\u06cc \u062c\u0632\u062f\u0627\u0646\u06cc \u0646\u0647\u06ce\u0646\u06cc \u062a\u0627\u0632\u06d5 \u062f\u0631\u0648\u0633\u062a\u06a9\u0631\u0627\u0648. \u0644\u06d5\u0628\u06d5\u0631 \u0647\u06c6\u06a9\u0627\u0631\u06cc \u067e\u0627\u0631\u0627\u0633\u062a\u0646\u060c \u067e\u0627\u06b5\u067e\u0634\u062a\u06d5\u06a9\u0627\u0646\u06cc \u067e\u06ce\u0634\u0648\u0648\u06cc \u0641\u0627\u06cc\u0644\u06cc \u062c\u0632\u062f\u0627\u0646\u06ce\u06a9\u06cc \u0646\u0647\u06ce\u0646\u06cc \u0646\u06d5\u06a9\u0631\u0627\u0648 \u0628\u06ce \u0633\u0648\u0648\u062f \u062f\u06d5\u0628\u0646 \u0647\u06d5\u0631 \u06a9\u06d5 \u062f\u06d5\u0633\u062a\u062a \u06a9\u0631\u062f \u0628\u06d5 \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u0627\u0646\u06cc \u062c\u0632\u062f\u0627\u0646\u06cc \u0646\u0648\u06ce\u06cc \u06a9\u06c6\u062f\u06a9\u0631\u0627\u0648.</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u06a9\u0631\u062a\u06d5 \u0628\u06a9\u06d5 \u0628\u06c6 \u0646\u0627\u0686\u0627\u0644\u0627\u06a9\u06a9\u0631\u062f\u0646\u06cc \u0686\u0627\u0644\u0627\u06a9\u06cc \u062a\u06c6\u0695.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u06a9\u0631\u062a\u06d5 \u0628\u06a9\u06d5 \u0628\u06c6 \u0686\u0627\u0644\u0627\u06a9\u06a9\u0631\u062f\u0646\u06cc \u0686\u0627\u0644\u0627\u06a9\u06cc \u062a\u06c6\u0695\u06cc \u062f\u0648\u0648\u0628\u0627\u0631\u06d5.</translation>\n+    </message>\n     <message>\n         <source>&amp;Send</source>\n         <translation>&amp;\u0646\u0627\u0631\u062f\u0646</translation>\n@@ -100,6 +178,42 @@\n         <source>Copy address</source>\n         <translation>\u0695\u0648\u0648\u0646\u0648\u0648\u0633\u06a9\u0631\u062f\u0646 \u0646\u0627\u0648\u0648\u0646\u06cc\u0634\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copy label</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copy amount</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Copy transaction ID</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Copy quantity</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copy fee</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copy after fee</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copy bytes</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Copy dust</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Copy change</translation>\n+    </message>\n     <message>\n         <source>yes</source>\n         <translation>\u0628\u06d5\u06b5\u06ce</translation>\n@@ -117,14 +231,26 @@\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n+    <message>\n+        <source>Address \"%1\" already exists as a receiving address with label \"%2\" and so cannot be added as a sending address.</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646 \"%1\" \u067e\u06ce\u0634\u062a\u0631 \u0647\u06d5\u0628\u0648\u0648 \u0648\u06d5\u06a9 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0648\u06d5\u0631\u06af\u0631\u062a\u0646 \u0644\u06d5\u06af\u06d5\u06b5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \"%2\" \u0648 \u0628\u06c6\u06cc\u06d5 \u0646\u0627\u062a\u0648\u0627\u0646\u0631\u06ce\u062a \u0632\u06cc\u0627\u062f \u0628\u06a9\u0631\u06ce\u062a \u0648\u06d5\u06a9 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0646\u0627\u0631\u062f\u0646.</translation>\n+    </message>\n     </context>\n <context>\n     <name>FreespaceChecker</name>\n     <message>\n         <source>name</source>\n         <translation>\u0646\u0627\u0648</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation>\u062f\u0627\u06cc\u06d5\u0631\u06ce\u06a9\u062a\u06c6\u0631\u06cc \u067e\u06ce\u0634 \u0626\u06ce\u0633\u062a\u0627 \u0647\u06d5\u06cc\u06d5. %1 \u0632\u06cc\u0627\u062f \u0628\u06a9\u06d5 \u0626\u06d5\u06af\u06d5\u0631 \u0628\u06d5\u062a\u06d5\u0645\u0627 \u0628\u06cc\u062a \u0644\u06ce\u0631\u06d5 \u0695\u06ce\u0646\u06cc\u0634\u0627\u0646\u062f\u06d5\u0631\u06ce\u06a9\u06cc \u0646\u0648\u06ce \u062f\u0631\u0648\u0633\u062a \u0628\u06a9\u06d5\u06cc\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot create data directory here.</source>\n+        <translation>\u0646\u0627\u062a\u0648\u0627\u0646\u06cc\u062a \u0644\u06ce\u0631\u06d5 \u062f\u0627\u062a\u0627 \u062f\u0631\u0648\u0633\u062a \u0628\u06a9\u06d5\u06cc\u062a.</translation>\n+    </message>\n+</context>\n <context>\n     <name>HelpMessageDialog</name>\n     <message>\n@@ -138,13 +264,37 @@\n         <source>Welcome</source>\n         <translation>\u0628\u06d5\u062e\u06ce\u0631\u0628\u06ce\u0646</translation>\n     </message>\n+    <message>\n+        <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n+        <translation>\u06a9\u0627\u062a\u06ce\u06a9 \u06a9\u0631\u062a\u06d5 \u0644\u06d5 \u067e\u06d5\u0633\u06d5\u0646\u062f\u06d5 \u062f\u06d5\u06a9\u06d5\u06cc\u062a\u060c %1 \u062f\u06d5\u0633\u062a \u062f\u06d5\u06a9\u0627\u062a \u0628\u06d5 \u062f\u0627\u06af\u0631\u062a\u0646 \u0648 \u067e\u0631\u06c6\u0633\u06d5\u06cc \u0632\u0646\u062c\u06cc\u0631\u06d5\u0628\u0644\u06c6\u06a9\u06cc %4 (%2GB) \u0628\u06d5 \u0633\u06d5\u0631\u06d5\u062a\u0627\u06cc\u06cc\u062a\u0631\u06cc\u0646 \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06a9\u0627\u0646 \u0644\u06d5 %3 \u062f\u06d5\u0633\u062a \u067e\u06ce\u062f\u06d5\u06a9\u0627\u062a \u06a9\u0627\u062a\u06ce\u06a9 %4 \u0644\u06d5 \u0633\u06d5\u0631\u06d5\u062a\u0627\u062f\u0627 \u062f\u06d5\u0633\u062a\u06cc \u067e\u06ce\u06a9\u0631\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>\u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u0626\u06d5\u0645 \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5 \u067e\u06ce\u0648\u06cc\u0633\u062a\u06cc \u0628\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u062f\u0627\u06af\u0631\u062a\u0646\u06cc \u062a\u06d5\u0648\u0627\u0648\u06cc \u0628\u06d5\u0631\u0628\u06d5\u0633\u062a\u06d5\u06a9\u06d5 \u0647\u06d5\u06cc\u06d5. \u062e\u06ce\u0631\u0627\u062a\u0631\u06d5 \u0628\u06c6 \u062f\u0627\u06af\u0631\u062a\u0646\u06cc \u0632\u0646\u062c\u06cc\u0631\u06d5\u06cc \u062a\u06d5\u0648\u0627\u0648 \u0633\u06d5\u0631\u06d5\u062a\u0627 \u0648 \u062f\u0627\u06af\u0631\u062a\u0646\u06cc \u062f\u0648\u0627\u062a\u0631. \u0647\u06d5\u0646\u062f\u06ce\u06a9 \u062a\u0627\u06cc\u0628\u06d5\u062a\u0645\u06d5\u0646\u062f\u06cc \u067e\u06ce\u0634\u06a9\u06d5\u0648\u062a\u0648\u0648 \u0644\u06d5 \u06a9\u0627\u0631 \u062f\u06d5\u0647\u06ce\u0646\u06ce\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n+        <translation>\u0626\u06d5\u0645 \u0647\u0627\u0648\u06a9\u0627\u062a\u06a9\u0631\u062f\u0646\u06d5 \u0633\u06d5\u0631\u06d5\u062a\u0627\u06cc\u06cc\u06d5 \u0632\u06c6\u0631 \u062f\u0627\u0648\u0627\u06cc \u062f\u06d5\u06a9\u0627\u062a\u060c \u0648 \u0644\u06d5\u0648\u0627\u0646\u06d5\u06cc\u06d5 \u06a9\u06ce\u0634\u06d5\u06a9\u0627\u0646\u06cc \u0631\u06d5\u0642\u06d5\u0648\u0627\u06b5\u06d5 \u0644\u06d5\u06af\u06d5\u06b5 \u06a9\u06c6\u0645\u067e\u06cc\u0648\u062a\u06d5\u0631\u06d5\u06a9\u06d5\u062a \u062f\u0627\u0628\u062e\u0627\u062a \u06a9\u06d5 \u067e\u06ce\u0634\u062a\u0631 \u062a\u06ce\u0628\u06cc\u0646\u06cc \u0646\u06d5\u06a9\u0631\u0627\u0648 \u0628\u0648\u0648. \u0647\u06d5\u0631 \u062c\u0627\u0631\u06ce\u06a9 \u06a9\u06d5 %1 \u0631\u0627\u062f\u06d5\u062f\u06d5\u06cc\u062a\u060c \u0628\u06d5\u0631\u062f\u06d5\u0648\u0627\u0645 \u062f\u06d5\u0628\u06ce\u062a \u0644\u06d5 \u062f\u0627\u06af\u0631\u062a\u0646 \u0644\u06d5\u0648 \u0634\u0648\u06ce\u0646\u06d5\u06cc \u06a9\u06d5 \u0628\u06d5\u062c\u06ce\u06cc \u0647\u06ce\u0634\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</source>\n+        <translation>\u0626\u06d5\u06af\u06d5\u0631 \u062a\u06c6 \u062f\u06cc\u0627\u0631\u06cc\u062a \u06a9\u0631\u062f\u0648\u0648\u06d5 \u0628\u06c6 \u0633\u0646\u0648\u0648\u0631\u062f\u0627\u0631\u06a9\u0631\u062f\u0646\u06cc \u06a9\u06c6\u06af\u06d5 \u0632\u0646\u062c\u06cc\u0631\u06d5\u06cc \u0628\u0644\u06c6\u06a9 (\u06a9\u06ce\u06b5\u06a9\u0631\u062f\u0646)\u060c \u0647\u06ce\u0634\u062a\u0627 \u062f\u0627\u062a\u0627\u06cc \u0645\u06ce\u0698\u0648\u0648\u06cc \u062f\u06d5\u0628\u06ce\u062a \u062f\u0627\u0628\u06d5\u0632\u06ce\u0646\u0631\u06ce\u062a \u0648 \u067e\u0631\u06c6\u0633\u06d5\u06cc \u0628\u06c6 \u0628\u06a9\u0631\u06ce\u062a\u060c \u0628\u06d5\u06b5\u0627\u0645 \u062f\u0648\u0627\u062a\u0631 \u062f\u06d5\u0633\u0695\u062f\u0631\u06ce\u062a\u06d5\u0648\u06d5 \u0628\u06c6 \u0626\u06d5\u0648\u06d5\u06cc \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u0627\u0646\u06cc \u062f\u06cc\u0633\u06a9\u06d5\u06a9\u06d5\u062a \u06a9\u06d5\u0645 \u0628\u06ce\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>%1 will download and store a copy of the Bitcoin block chain.</source>\n+        <translation>%1 \u06a9\u06c6\u067e\u06cc\u06d5\u06a9\u06cc \u0632\u0646\u062c\u06cc\u0631\u06d5\u06cc \u0628\u0644\u06c6\u06a9\u06cc \u0628\u06cc\u062a\u06a9\u06c6\u067e \u062f\u0627\u0626\u06d5\u0628\u06d5\u0632\u06ce\u0646\u06ce\u062a \u0648 \u062e\u06d5\u0632\u0646\u06cc \u062f\u06d5\u06a9\u0627\u062a.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u0647\u06d5\u06b5\u06d5</translation>\n     </message>\n     </context>\n <context>\n     <name>ModalOverlay</name>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 \u0644\u06d5 \u0626\u06ce\u0633\u062a\u0627\u062f\u0627 \u0647\u0627\u0648\u06a9\u0627\u062a \u062f\u06d5\u06a9\u0631\u06ce\u062a.  \u0633\u06d5\u0631\u067e\u06d5\u0695 \u0648 \u0628\u0644\u06c6\u06a9\u06d5\u06a9\u0627\u0646 \u0644\u06d5 \u0647\u0627\u0648\u062a\u06d5\u0645\u06d5\u0646\u06d5\u06a9\u0627\u0646 \u062f\u0627\u0628\u06d5\u0632\u06ce\u0646\u06ce\u062a \u0648 \u06a9\u0627\u0631\u0627\u06cc\u0627\u0646 \u062f\u06d5\u06a9\u0627\u062a \u062a\u0627 \u06af\u06d5\u06cc\u0634\u062a\u0646 \u0628\u06d5 \u0633\u06d5\u0631\u06d5\u06cc \u0632\u0646\u062c\u06cc\u0631\u06d5\u06cc \u0628\u0644\u06c6\u06a9.</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n@@ -158,6 +308,30 @@\n         <source>Options</source>\n         <translation>\u0647\u06d5\u06b5\u0628\u0698\u0627\u0631\u062f\u0646\u06d5\u06a9\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation>\u06cc\u0648 \u0626\u06ce\u0695 \u0626\u06ce\u06b5\u06d5\u06a9\u0627\u0646\u06cc \u0644\u0627\u06cc\u06d5\u0646\u06cc \u0633\u06ce\u06cc\u06d5\u0645. (\u0628\u06c6 \u0648\u06ce\u0646\u06d5 \u06af\u06d5\u0695\u0627\u06b5\u06cc \u0628\u0644\u06c6\u06a9) \u06a9\u06d5 \u0644\u06d5 \u062a\u0627\u0628\u06cc \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06a9\u0627\u0646 \u0648\u06d5\u06a9 \u0628\u0695\u06af\u06d5\u06a9\u0627\u0646 \u067e\u06ce\u0631\u0633\u062a\u06cc \u062f\u06d5\u0642 \u062f\u06d5\u0631\u062f\u06d5\u06a9\u06d5\u0648\u06ce\u062a. %s \u0644\u06d5 URL \u062f\u0627 \u062c\u06ce\u06af\u06d5\u06cc \u062f\u06d5\u06af\u06c6\u0695\u062f\u0631\u06ce\u062a\u06d5\u0648\u06d5 \u0628\u06d5 \u0647\u0627\u0634.. \u0686\u06d5\u0646\u062f\u06cc\u0646 URL \u062c\u06cc\u0627\u06a9\u0631\u0627\u0648\u0646\u06d5\u062a\u06d5\u0648\u06d5 \u0628\u06d5 \u0634\u0631\u06cc\u062a\u06cc \u0633\u062a\u0648\u0648\u0646\u06cc |.</translation>\n+    </message>\n+    <message>\n+        <source>Disables some advanced features but all blocks will still be fully validated. Reverting this setting requires re-downloading the entire blockchain. Actual disk usage may be somewhat higher.</source>\n+        <translation>\u0647\u06d5\u0646\u062f\u06ce\u06a9 \u062a\u0627\u06cc\u0628\u06d5\u062a\u0645\u06d5\u0646\u062f\u06cc \u067e\u06ce\u0634\u06a9\u06d5\u0648\u062a\u0648\u0648 \u0644\u06d5 \u06a9\u0627\u0631\u0628\u062e\u06d5 \u0628\u06d5\u06b5\u0627\u0645 \u0647\u06d5\u0645\u0648\u0648 \u0628\u0644\u06c6\u06a9\u06d5\u06a9\u0627\u0646 \u0647\u06ce\u0634\u062a\u0627 \u0628\u06d5 \u062a\u06d5\u0648\u0627\u0648\u06cc \u0633\u0627\u063a \u062f\u06d5\u06a9\u0631\u0627\u0646\u06d5\u0648\u06d5. \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u0626\u06d5\u0645 \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5 \u067e\u06ce\u0648\u06cc\u0633\u062a\u06cc \u0628\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u062f\u0627\u06af\u0631\u062a\u0646\u06cc \u062a\u06d5\u0648\u0627\u0648\u06cc \u0628\u06d5\u0631\u0628\u06d5\u0633\u062a\u06d5\u06a9\u06d5 \u0647\u06d5\u06cc\u06d5. \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u0627\u0646\u06cc \u0695\u0627\u0633\u062a\u06d5\u0642\u06cc\u0646\u06d5\u06cc \u062f\u06cc\u0633\u06a9 \u0644\u06d5\u0648\u0627\u0646\u06d5\u06cc\u06d5 \u062a\u0627 \u0631\u0627\u062f\u06d5\u06cc\u06d5\u06a9 \u0632\u06cc\u0627\u062a\u0631 \u0628\u06ce\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain.</source>\n+        <translation>\u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u0626\u06d5\u0645 \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5 \u067e\u06ce\u0648\u06cc\u0633\u062a\u06cc \u0628\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u062f\u0627\u06af\u0631\u062a\u0646\u06cc \u062a\u06d5\u0648\u0627\u0648\u06cc \u0628\u06d5\u0631\u0628\u06d5\u0633\u062a\u06d5\u06a9\u06d5 \u0647\u06d5\u06cc\u06d5.</translation>\n+    </message>\n+    <message>\n+        <source>User Interface &amp;language:</source>\n+        <translation>\u0695\u0648\u0648\u06a9\u0627\u0631\u06cc \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u06d5\u0631 &amp;\u0632\u0645\u0627\u0646:</translation>\n+    </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting %1.</source>\n+        <translation>\u0632\u0645\u0627\u0646\u06cc \u0695\u0648\u0648\u06a9\u0627\u0631\u06cc \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u06d5\u0631 \u062f\u06d5\u06a9\u0631\u06ce\u062a \u0644\u06ce\u0631\u06d5 \u062f\u0627\u0628\u0646\u0631\u06ce\u062a. \u0626\u06d5\u0645 \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5 \u06a9\u0627\u0631\u06cc\u06af\u06d5\u0631 \u062f\u06d5\u0628\u06ce\u062a \u067e\u0627\u0634 \u062f\u06d5\u0633\u062a\u067e\u06ce\u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc %1.</translation>\n+    </message>\n+    <message>\n+        <source>The configuration file is used to specify advanced user options which override GUI settings. Additionally, any command-line options will override this configuration file.</source>\n+        <translation>\u0641\u0627\u06cc\u0644\u06cc \u0634\u06ce\u0648\u06d5\u067e\u06ce\u062f\u0627\u0646 \u0628\u06d5\u06a9\u0627\u0631\u062f\u06ce\u062a \u0628\u06c6 \u062f\u06cc\u0627\u0631\u06cc\u06a9\u0631\u062f\u0646\u06cc \u0647\u06d5\u06b5\u0628\u0698\u0627\u0631\u062f\u0646\u06d5\u06a9\u0627\u0646\u06cc \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u06d5\u0631\u06cc \u067e\u06ce\u0634\u06a9\u06d5\u0648\u062a\u0648\u0648 \u06a9\u06d5 \u0632\u06cc\u0627\u062f\u06d5\u0695\u06d5\u0648\u06cc \u0644\u06d5 \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5\u06a9\u0627\u0646\u06cc GUI \u062f\u06d5\u06a9\u0627\u062a. \u0644\u06d5\u06af\u06d5\u06b5 \u0626\u06d5\u0648\u06d5\u0634\u060c \u0647\u06d5\u0631 \u0628\u0698\u0627\u0631\u062f\u06d5\u06a9\u0627\u0646\u06cc \u0647\u06ce\u06b5\u06cc \u0641\u06d5\u0631\u0645\u0627\u0646 \u0632\u06cc\u0627\u062f\u06d5\u0695\u06d5\u0648\u06cc \u062f\u06d5\u06a9\u0627\u062a \u0644\u06d5 \u0633\u06d5\u0631 \u0626\u06d5\u0645 \u0641\u0627\u06cc\u0644\u06d5 \u0634\u06ce\u0648\u06d5\u067e\u06ce\u062f\u0627\u0646\u06d5.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u0647\u06d5\u06b5\u06d5</translation>\n@@ -169,16 +343,28 @@\n         <source>Total:</source>\n         <translation>\u06af\u0634\u062a\u06cc</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</source>\n+        <translation>\u062f\u06c6\u062e\u06cc \u062a\u0627\u06cc\u0628\u06d5\u062a\u0645\u06d5\u0646\u062f\u06cc \u0686\u0627\u0644\u0627\u06a9 \u06a9\u0631\u0627 \u0628\u06c6 \u062a\u0627\u0628\u06cc \u06af\u0634\u062a\u06cc. \u0628\u06c6 \u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u0628\u06d5\u0647\u0627\u06a9\u0627\u0646\u060c \u0628\u06d5\u0647\u0627\u06a9\u0627\u0646 \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5\u06a9\u0627\u0646&gt;\u0645\u0627\u0633\u06a9.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PSBTOperationsDialog</name>\n+    <message>\n+        <source>Copy to Clipboard</source>\n+        <translation>Copy to Clipboard</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\u06cc\u0627\u0646</translation>\n     </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n+    <message>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n+        <translation>\u0646\u0627\u062a\u0648\u0627\u0646\u06ce\u062a \u062f\u06d5\u0633\u062a \u0628\u06a9\u0627\u062a \u0628\u06d5 bitcoin: \u06a9\u0631\u062a\u06d5 \u0628\u06a9\u06d5 \u0628\u06c6-\u067e\u0627\u0631\u06d5\u062f\u0627\u0646\u06cc \u06a9\u0627\u0631</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -193,9 +379,21 @@\n         <source>Amount</source>\n         <translation>\u0633\u06d5\u0631\u062c\u06d5\u0645</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>\u0647\u06d5\u06b5\u06d5 \u0644\u06d5 \u062f\u06d5\u0633\u062a\u067e\u06ce\u06a9\u0631\u062f\u0646\u06cc \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5\u06a9\u0627\u0646: %1</translation>\n+    </message>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n+    <message>\n+        <source>&amp;Copy Image</source>\n+        <translation>&amp;Copy Image</translation>\n+    </message>\n+    <message>\n+        <source>Resulting URI too long, try to reduce the text for label / message.</source>\n+        <translation>\u0626\u06d5\u0646\u062c\u0627\u0645\u06cc URL \u0632\u06c6\u0631 \u062f\u0631\u06ce\u0698\u06d5\u060c \u0647\u06d5\u0648\u06b5 \u0628\u062f\u06d5 \u062f\u06d5\u0642\u06d5\u06a9\u06d5 \u06a9\u06d5\u0645 \u0628\u06a9\u06d5\u06cc\u062a\u06d5\u0648\u06d5 \u0628\u06c6 \u067e\u06ce\u0646\u0627\u0633\u06d5 / \u0646\u0627\u0645\u06d5.</translation>\n+    </message>\n     </context>\n <context>\n     <name>RPCConsole</name>\n@@ -278,6 +476,10 @@\n         <source>Clear</source>\n         <translation>\u067e\u0627\u06a9\u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5</translation>\n     </message>\n+    <message>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation>\u067e\u06cc\u0634\u0627\u0646\u062f\u0627\u0646\u06cc \u062f\u0627\u0648\u0627\u06a9\u0627\u0631\u06cc\u06cc\u06d5 \u062f\u06cc\u0627\u0631\u06cc\u06a9\u0631\u0627\u0648\u06d5\u06a9\u0627\u0646 (\u0647\u06d5\u0645\u0627\u0646 \u06a9\u0631\u062a\u06d5\u06cc \u062f\u0648\u0648\u0627\u0646\u06cc \u06a9\u0631\u062a\u06d5\u06a9\u0631\u062f\u0646 \u062f\u06d5\u06a9\u0627\u062a \u0644\u06d5 \u062a\u06c6\u0645\u0627\u0631\u06ce\u06a9)</translation>\n+    </message>\n     <message>\n         <source>Show</source>\n         <translation>\u067e\u06cc\u0634\u0627\u0646\u062f\u0627\u0646</translation>\n@@ -286,6 +488,22 @@\n         <source>Remove</source>\n         <translation>\u0633\u0695\u06cc\u0646\u06d5\u0648\u06d5</translation>\n     </message>\n+    <message>\n+        <source>Copy URI</source>\n+        <translation>Copy URI</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copy label</translation>\n+    </message>\n+    <message>\n+        <source>Copy message</source>\n+        <translation>Copy message</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copy amount</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -297,6 +515,14 @@\n         <source>Message:</source>\n         <translation>\u067e\u06d5\u06cc\u0627\u0645:</translation>\n     </message>\n+    <message>\n+        <source>Copy &amp;URI</source>\n+        <translation>Copy &amp;URI</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Address</source>\n+        <translation>Copy &amp;Address</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n@@ -319,10 +545,62 @@\n         <source>Fee:</source>\n         <translation>\u062a\u06ce\u0686\u0648\u0648\u0646:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>\u0634\u0627\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u0695\u06ce\u06a9\u062e\u0633\u062a\u0646\u06d5\u06a9\u0627\u0646\u06cc \u0628\u0627\u062c\u06cc \u0645\u0627\u0645\u06d5\u06b5\u06d5</translation>\n+    </message>\n+    <message>\n+        <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n+        <translation>\u06a9\u0627\u062a\u06ce\u06a9 \u0642\u06d5\u0628\u0627\u0631\u06d5\u06cc \u0645\u0627\u0645\u06d5\u06b5\u06d5 \u06a9\u06d5\u0645\u062a\u0631 \u0628\u06ce\u062a \u0644\u06d5 \u0628\u06c6\u0634\u0627\u06cc\u06cc \u0628\u0644\u06c6\u06a9\u06d5\u06a9\u0627\u0646\u060c \u0644\u06d5\u0648\u0627\u0646\u06d5\u06cc\u06d5 \u06a9\u0627\u0646\u06d5\u06a9\u0627\u0646 \u0648 \u06af\u0631\u06ce\u06a9\u0627\u0646\u06cc \u06af\u0648\u0627\u0633\u062a\u0646\u06d5\u0648\u06d5 \u06a9\u06d5\u0645\u062a\u0631\u06cc\u0646 \u06a9\u0631\u06ce \u062c\u06ce\u0628\u06d5\u062c\u06ce \u0628\u06a9\u06d5\u0646. \u067e\u06ce\u062f\u0627\u0646\u06cc \u062a\u06d5\u0646\u06cc\u0627 \u0626\u06d5\u0645 \u06a9\u06d5\u0645\u062a\u0631\u06cc\u0646 \u06a9\u0631\u06ce\u06cc\u06d5 \u062a\u06d5\u0646\u06cc\u0627 \u0628\u0627\u0634\u06d5\u060c \u0628\u06d5\u06b5\u0627\u0645 \u0626\u0627\u06af\u0627\u062f\u0627\u0631\u0628\u06d5 \u06a9\u06d5 \u0626\u06d5\u0645\u06d5 \u062f\u06d5\u062a\u0648\u0627\u0646\u06ce\u062a \u0628\u0628\u06ce\u062a\u06d5 \u0647\u06c6\u06cc \u0626\u06d5\u0648\u06d5\u06cc \u06a9\u06d5 \u0647\u06d5\u0631\u06af\u06cc\u0632 \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06cc\u06d5\u06a9\u06cc \u067e\u0634\u062a\u0695\u0627\u0633\u062a\u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5 \u0626\u06d5\u0646\u062c\u0627\u0645 \u0628\u062f\u0631\u06ce\u062a \u062c\u0627\u0631\u06ce\u06a9 \u062f\u0627\u0648\u0627\u06a9\u0627\u0631\u06cc \u0632\u06cc\u0627\u062a\u0631 \u0647\u06d5\u06cc\u06d5 \u0628\u06c6 \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06a9\u0627\u0646\u06cc \u0628\u06cc\u062a \u06a9\u06c6\u0628\u06cc\u062a\u06a9\u06c6 \u0644\u06d5\u0648\u06d5\u06cc \u06a9\u06d5 \u062a\u06c6\u0695\u06d5\u06a9\u06d5 \u062f\u06d5\u062a\u0648\u0627\u0646\u06ce\u062a \u0626\u06d5\u0646\u062c\u0627\u0645\u06cc \u0628\u062f\u0627\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Copy quantity</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copy amount</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copy fee</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copy after fee</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copy bytes</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Copy dust</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Copy change</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\u06cc\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>\u062a\u06a9\u0627\u06cc\u06d5\u060c \u067e\u06ce\u062f\u0627\u0686\u0648\u0648\u0646\u06d5\u0648\u06d5 \u0628\u06a9\u06d5 \u0628\u06d5 \u067e\u06ce\u0634\u0646\u06cc\u0627\u0631\u06d5\u06a9\u0627\u0646\u06cc \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06a9\u06d5\u062a. \u0626\u06d5\u0645\u06d5 \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06cc\u06d5\u06a9\u06cc \u0628\u06cc\u062a\u06a9\u06c6\u067e\u06d5\u06a9\u06cc \u06a9\u06d5\u0628\u06d5\u0634\u06cc\u0648\u0646\u06a9\u0631\u0627\u0648 (PSBT) \u0628\u06d5\u0631\u0647\u06d5\u0645\u062f\u06d5\u0647\u06ce\u0646\u06ce\u062a \u06a9\u06d5 \u062f\u06d5\u062a\u0648\u0627\u0646\u06cc\u062a \u067e\u0627\u0634\u06d5\u06a9\u06d5\u0648\u062a\u06cc \u0628\u06a9\u06d5\u06cc\u062a \u06cc\u0627\u0646 \u06a9\u06c6\u067e\u06cc \u0628\u06a9\u06d5\u06cc\u062a \u0648 \u067e\u0627\u0634\u0627\u0646 \u0648\u0627\u0698\u0648\u0648\u06cc \u0628\u06a9\u06d5\u06cc\u062a \u0644\u06d5\u06af\u06d5\u06b5 \u0628\u06c6 \u0626\u06d5\u0648\u06d5\u06cc \u0628\u06d5 \u062f\u06d5\u0631\u0647\u06ce\u06b5\u06cc %1 \u062c\u0632\u062f\u0627\u0646\u06ce\u06a9\u060c \u06cc\u0627\u0646 \u062c\u0632\u062f\u0627\u0646\u06ce\u06a9\u06cc \u0631\u06d5\u0642\u06d5\u0648\u0627\u06b5\u06d5\u06cc \u06af\u0648\u0646\u062c\u0627\u0648 \u0628\u06d5 PSBT.</translation>\n+    </message>\n+    <message>\n+        <source>Please, review your transaction.</source>\n+        <translation>\u062a\u06a9\u0627\u06cc\u06d5\u060c \u0686\u0627\u0648 \u0628\u06d5 \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06a9\u06d5\u062a\u062f\u0627 \u0628\u062e\u0634\u06ce\u0646\u06d5\u0648\u06d5.</translation>\n+    </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>\u0628\u06c6 \u067e\u06ce\u062f\u0627\u0686\u0648\u0648\u0646\u06d5\u0648\u06d5\u06cc \u0644\u06cc\u0633\u062a\u06cc \u0648\u06d5\u0631\u06af\u0631\u062a\u0646 \u06a9\u0631\u062a\u06d5 \u0628\u06a9\u06d5 \u0644\u06d5\u0633\u06d5\u0631 \"\u067e\u06cc\u0634\u0627\u0646\u062f\u0627\u0646\u06cc \u0648\u0631\u062f\u06d5\u06a9\u0627\u0631\u06cc\u06d5\u06a9\u0627\u0646...\"</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0648\u06d5\u0631\u06af\u0631\u062a\u0646\u06d5\u06a9\u06d5 \u062f\u0631\u0648\u0633\u062a \u0646\u06cc\u06cc\u06d5. \u062a\u06a9\u0627\u06cc\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u067e\u0634\u06a9\u0646\u06cc\u0646 \u0628\u06a9\u06d5\u0648\u06d5.</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsEntry</name>\n@@ -336,6 +614,26 @@\n     </context>\n <context>\n     <name>SignVerifyMessageDialog</name>\n+    <message>\n+        <source>Copy the current signature to the system clipboard</source>\n+        <translation>Copy the current signature to the system clipboard</translation>\n+    </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u0648\u06d5\u0631\u06af\u0631\u06d5\u06a9\u06d5 \u0628\u0646\u0648\u0648\u0633\u06d5\u060c \u0646\u0627\u0645\u06d5 (\u062f\u06b5\u0646\u06cc\u0627\u0628\u06d5 \u0644\u06d5\u0648\u06d5\u06cc \u06a9\u06d5 \u062c\u06cc\u0627\u06a9\u06d5\u0631\u06d5\u0648\u06d5\u06a9\u0627\u0646\u06cc \u0647\u06ce\u06b5\u060c \u0645\u06d5\u0648\u062f\u0627\u06a9\u0627\u0646\u060c \u062a\u0627\u0628\u06d5\u06a9\u0627\u0646\u060c \u0648 \u0647\u062a\u062f \u0628\u06d5 \u062a\u06d5\u0648\u0627\u0648\u06cc \u06a9\u06c6\u067e\u06cc \u0628\u06a9\u06d5) \u0648 \u0644\u06d5 \u062e\u0648\u0627\u0631\u06d5\u0648\u06d5 \u0648\u0627\u0698\u0648\u0648\u06cc \u0628\u06a9\u06d5 \u0628\u06c6 \u0633\u06d5\u0644\u0645\u0627\u0646\u062f\u0646\u06cc \u0646\u0627\u0645\u06d5\u06a9\u06d5. \u0648\u0631\u06cc\u0627\u0628\u06d5 \u0644\u06d5\u0648\u06d5\u06cc \u06a9\u06d5 \u0632\u06cc\u0627\u062a\u0631 \u0646\u06d5\u06cc\u062e\u0648\u06ce\u0646\u06cc\u062a\u06d5\u0648\u06d5 \u0628\u06c6 \u0646\u0627\u0648 \u0648\u0627\u0698\u0648\u0648\u06d5\u06a9\u06d5 \u0644\u06d5\u0648\u06d5\u06cc \u06a9\u06d5 \u0644\u06d5 \u062e\u0648\u062f\u06cc \u067e\u06d5\u06cc\u0627\u0645\u06d5 \u0648\u0627\u0698\u0648\u0648\u06d5\u06a9\u06d5\u062f\u0627\u06cc\u06d5\u060c \u0628\u06c6 \u0626\u06d5\u0648\u06d5\u06cc \u062e\u06c6\u062a \u0628\u06d5\u062f\u0648\u0648\u0631 \u0628\u06af\u0631\u06cc\u062a \u0644\u06d5 \u0641\u06ce\u06b5\u06a9\u0631\u062f\u0646 \u0644\u06d5 \u0647\u06ce\u0631\u0634\u06cc \u067e\u06cc\u0627\u0648\u0627\u0646 \u0644\u06d5 \u0646\u0627\u0648\u06d5\u0646\u062f\u062f\u0627. \u0633\u06d5\u0631\u0646\u062c \u0628\u062f\u06d5 \u06a9\u06d5 \u0626\u06d5\u0645\u06d5 \u062a\u06d5\u0646\u06cc\u0627 \u0644\u0627\u06cc\u06d5\u0646\u06cc \u0648\u0627\u0698\u0648\u0648\u06a9\u0631\u062f\u0646 \u0628\u06d5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u06d5 \u0648\u06d5\u0631\u0628\u06af\u0631\u06d5\u060c \u0646\u0627\u062a\u0648\u0627\u0646\u06ce\u062a \u0646\u06ce\u0631\u06d5\u0631\u06cc \u0647\u06cc\u0686 \u0645\u0627\u0645\u06d5\u06b5\u06d5\u06cc\u06d5\u06a9 \u0628\u0633\u06d5\u0644\u0645\u06ce\u0646\u06ce\u062a!</translation>\n+    </message>\n+    <message>\n+        <source>Click \"Sign Message\" to generate signature</source>\n+        <translation>\u06a9\u0631\u062a\u06d5 \u0628\u06a9\u06d5 \u0644\u06d5\u0633\u06d5\u0631 \"\u0646\u0627\u0645\u06d5\u06cc \u0648\u0627\u0698\u0648\u0648\" \u0628\u06c6 \u062f\u0631\u0648\u0633\u062a\u06a9\u0631\u062f\u0646\u06cc \u0648\u0627\u0698\u0648\u0648</translation>\n+    </message>\n+    <message>\n+        <source>Please check the address and try again.</source>\n+        <translation>\u062a\u06a9\u0627\u06cc\u06d5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06d5\u06a9\u06d5 \u0628\u067e\u0634\u06a9\u0646\u06d5 \u0648 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u0647\u06d5\u0648\u06b5 \u062f\u06d5\u0648\u06d5.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the signature and try again.</source>\n+        <translation>\u062a\u06a9\u0627\u06cc\u06d5 \u0648\u0627\u0698\u0648\u0648\u06d5\u06a9\u06d5 \u0628\u067e\u0634\u06a9\u0646\u06d5 \u0648 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u0647\u06d5\u0648\u06b5 \u062f\u06d5\u0648\u06d5.</translation>\n+    </message>\n     </context>\n <context>\n     <name>TrafficGraphWidget</name>\n@@ -403,10 +701,34 @@\n         <source>Sent to</source>\n         <translation>\u0646\u0627\u0631\u062f\u0646 \u0628\u06c6</translation>\n     </message>\n+    <message>\n+        <source>Enter address, transaction id, or label to search</source>\n+        <translation>\u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06ce\u06a9 \u0628\u0646\u0648\u0648\u0633\u06d5\u060c \u0646\u0627\u0633\u0646\u0627\u0645\u06d5\u06cc \u0645\u0627\u0645\u06d5\u06b5\u06d5\u060c \u06cc\u0627\u0646 \u0646\u0627\u0648\u0644\u06ce\u0646\u0627\u0646\u06ce\u06a9 \u0628\u06c6 \u06af\u06d5\u0695\u0627\u0646 \u0628\u0646\u0648\u0648\u0633\u06d5</translation>\n+    </message>\n     <message>\n         <source>Copy address</source>\n         <translation>\u0695\u0648\u0648\u0646\u0648\u0648\u0633\u06a9\u0631\u062f\u0646 \u0646\u0627\u0648\u0648\u0646\u06cc\u0634\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copy label</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copy amount</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Copy transaction ID</translation>\n+    </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Copy raw transaction</translation>\n+    </message>\n+    <message>\n+        <source>Copy full transaction details</source>\n+        <translation>Copy full transaction details</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>\u0631\u06ce\u06a9\u06d5\u062a</translation>\n@@ -426,7 +748,11 @@\n </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n-    </context>\n+    <message>\n+        <source>Unit to show amounts in. Click to select another unit.</source>\n+        <translation>\u06cc\u06d5\u06a9\u06d5 \u0628\u06c6 \u0646\u06cc\u0634\u0627\u0646\u062f\u0627\u0646\u06cc \u0628\u0695\u06cc \u06a9\u0631\u062a\u06d5 \u0628\u06a9\u06d5 \u0628\u06c6 \u062f\u06cc\u0627\u0631\u06cc\u06a9\u0631\u062f\u0646\u06cc \u06cc\u06d5\u06a9\u06d5\u06cc\u06d5\u06a9\u06cc \u062a\u0631.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletController</name>\n     </context>\n@@ -442,12 +768,68 @@\n         <source>&amp;Export</source>\n         <translation>&amp;\u0647\u06d5\u0646\u0627\u0631\u062f\u0646</translation>\n     </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u0646\u0627\u0631\u062f\u0646\u06cc \u062f\u0627\u062a\u0627 \u0644\u06d5 \u062e\u0634\u062a\u06d5\u0628\u06d5\u0646\u062f\u06cc \u0626\u06ce\u0633\u062a\u0627 \u0628\u06c6 \u0641\u0627\u06cc\u0644\u06ce\u06a9</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u0647\u06d5\u06b5\u06d5</translation>\n     </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>\u067e\u0695\u06d5 \u0644\u06d5 \u062e\u0648\u0627\u0631\u06d5\u0648\u06d5\u06cc \u06a9\u06d5\u0645\u062a\u0631\u06cc\u0646 %d MiB \u0634\u06ce\u0648\u06d5\u0628\u06d5\u0646\u062f \u06a9\u0631\u0627\u0648\u06d5.  \u062a\u06a9\u0627\u06cc\u06d5 \u0698\u0645\u0627\u0631\u06d5\u06cc\u06d5\u06a9\u06cc \u0628\u06d5\u0631\u0632\u062a\u0631 \u0628\u06d5\u06a9\u0627\u0631\u0628\u06ce\u0646\u06d5.</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>\u067e\u0631\u06d5: \u062f\u0648\u0627\u06cc\u06cc\u0646 \u0647\u0627\u0648\u062f\u06d5\u0645\u06a9\u0631\u062f\u0646\u06cc \u062c\u0632\u062f\u0627\u0646 \u0644\u06d5 \u062f\u0627\u062a\u0627\u06cc \u0628\u06d5\u067e\u06ce\u0632 \u062f\u06d5\u0686\u06ce\u062a. \u067e\u06ce\u0648\u06cc\u0633\u062a\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 -\u0626\u06cc\u0646\u062f\u06ce\u06a9\u0633 \u0628\u06a9\u06d5\u06cc\u062a\u06d5\u0648\u06d5 (\u0647\u06d5\u0645\u0648\u0648 \u0628\u06d5\u0631\u0628\u06d5\u0633\u062a\u06d5\u06a9\u06d5 \u062f\u0627\u0628\u06d5\u0632\u06ce\u0646\u06d5 \u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u0644\u06d5 \u062d\u0627\u06b5\u06d5\u062a\u06cc \u06af\u0631\u06ce\u06cc \u0647\u06d5\u06b5\u06a9\u0631\u0627\u0648)</translation>\n+    </message>\n+    <message>\n+        <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n+        <translation>\u0646\u0627\u062a\u0648\u0627\u0646\u06ce\u062a \u06af\u0631\u06ce\u062f\u0627\u0646\u06ce\u06a9\u06cc \u062a\u0627\u06cc\u0628\u06d5\u062a \u062f\u0627\u0628\u06cc\u0646 \u0628\u06a9\u0627\u062a \u0648 \u067e\u06d5\u06cc\u0648\u06d5\u0646\u062f\u06cc \u062f\u06d5\u0631\u06a9\u06d5\u0648\u06cc \u0647\u06d5\u0628\u06ce\u062a \u0644\u06d5 \u0647\u06d5\u0645\u0627\u0646 \u06a9\u0627\u062a\u062f\u0627.</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n+        <translation>\u062a\u06a9\u0627\u06cc\u06d5 \u0628\u067e\u0634\u06a9\u0646\u06d5 \u06a9\u06d5 \u0628\u06d5\u0631\u0648\u0627\u0631 \u0648 \u06a9\u0627\u062a\u06cc \u06a9\u06c6\u0645\u067e\u06cc\u0648\u062a\u06d5\u0631\u06d5\u06a9\u06d5\u062a \u0695\u0627\u0633\u062a\u06d5! \u0626\u06d5\u06af\u06d5\u0631 \u06a9\u0627\u0698\u06ce\u0631\u06d5\u06a9\u06d5\u062a \u0647\u06d5\u06b5\u06d5 \u0628\u0648\u0648\u060c %s \u0628\u06d5 \u062f\u0631\u0648\u0633\u062a\u06cc \u06a9\u0627\u0631 \u0646\u0627\u06a9\u0627\u062a.</translation>\n+    </message>\n+    <message>\n+        <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n+        <translation>\u062a\u06a9\u0627\u06cc\u06d5 \u0628\u06d5\u0634\u062f\u0627\u0631\u06cc \u0628\u06a9\u06d5 \u0626\u06d5\u06af\u06d5\u0631 %s \u0628\u06d5\u0633\u0648\u0648\u062f\u062a \u062f\u06c6\u0632\u06cc\u06d5\u0648\u06d5. \u0633\u06d5\u0631\u062f\u0627\u0646\u06cc %s \u0628\u06a9\u06d5 \u0628\u06c6 \u0632\u0627\u0646\u06cc\u0627\u0631\u06cc \u0632\u06cc\u0627\u062a\u0631 \u062f\u06d5\u0631\u0628\u0627\u0631\u06d5\u06cc \u0646\u06d5\u0631\u0645\u0648\u0627\u06b5\u06d5\u06a9\u06d5.</translation>\n+    </message>\n+    <message>\n+        <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n+        <translation>\u0646\u0627\u062a\u0648\u0627\u0646\u06ce\u062a \u062f\u0627\u062a\u0627\u0628\u06d5\u06cc\u0633 \u0628\u06c6 \u062f\u06c6\u062e\u06cc \u067e\u06ce\u0634\u0648\u06d5\u062e\u062a\u06d5 \u0647\u06d5\u06b5\u0628\u0648\u0648\u06d5\u0634\u06ce\u062a\u06d5\u0648\u06d5. \u062a\u06c6 \u067e\u06ce\u0648\u06cc\u0633\u062a\u06d5 \u0632\u0646\u062c\u06cc\u0631\u06d5 \u0628\u0644\u06c6\u06a9\u06d5\u06a9\u06d5 \u062f\u0627\u0628\u06af\u0631\u06cc\u062a\u06d5\u0648\u06d5</translation>\n+    </message>\n+    <message>\n+        <source>Copyright (C) %i-%i</source>\n+        <translation>\u0645\u0627\u0641\u06cc \u0686\u0627\u067e (C) %i-%i</translation>\n+    </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>\u0626\u0627\u0633\u0645\u0627\u067e \u0628\u062f\u06c6\u0632\u0631\u06ce\u062a\u06d5\u0648\u06d5 %s \u0646\u06d5\u062a\u0648\u0627\u0646\u0631\u0627 \u0641\u0627\u06cc\u0644\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</source>\n+        <translation>\u0646\u0627\u062a\u0648\u0627\u0646\u06ce\u062a \u062c\u0632\u062f\u0627\u0646\u06cc \u062f\u0627\u0628\u06d5\u0634\u06a9\u0631\u062f\u0646\u06cc \u0646\u0627 \u0626\u06ce\u062c \u062f\u06cc \u0628\u06d5\u0631\u0632\u0628\u06a9\u0631\u06ce\u062a\u06d5\u0648\u06d5 \u0628\u06d5\u0628\u06ce \u0628\u06d5\u0631\u0632\u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u0628\u06c6 \u067e\u0634\u062a\u06af\u06cc\u0631\u06cc \u067e\u06ce\u0634\u0648\u06d5\u062e\u062a \u062f\u0627\u0628\u06d5\u0634\u06a9\u0631\u062f\u0646\u06cc \u06a9\u0644\u06cc\u0644\u06d5\u06a9\u06d5. \u062a\u06a9\u0627\u06cc\u06d5 \u0648\u06d5\u0634\u0627\u0646\u06cc 169900 \u0628\u06d5\u06a9\u0627\u0631\u0628\u06ce\u0646\u06d5 \u06cc\u0627\u0646 \u0647\u06cc\u0686 \u0648\u06d5\u0634\u0627\u0646\u06ce\u06a9\u06cc \u062f\u06cc\u0627\u0631\u06cc \u06a9\u0631\u0627\u0648.</translation>\n+    </message>\n+    <message>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation>\u0626\u06d5\u0645 \u0647\u06d5\u06b5\u06d5\u06cc\u06d5 \u0644\u06d5\u0648\u0627\u0646\u06d5\u06cc\u06d5 \u0695\u0648\u0648\u0628\u062f\u0627\u062a \u0626\u06d5\u06af\u06d5\u0631 \u0626\u06d5\u0645 \u062c\u0632\u062f\u0627\u0646\u06d5 \u0628\u06d5 \u062e\u0627\u0648\u06ce\u0646\u06cc \u062f\u0627\u0646\u06d5\u0628\u06d5\u0632\u06ce\u0646\u0631\u0627\u0628\u06ce\u062a \u0648 \u062f\u0648\u0627\u062c\u0627\u0631 \u0628\u0627\u0631\u06a9\u0631\u0627 \u0628\u06ce\u062a \u0628\u06d5 \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u0627\u0646\u06cc \u0628\u0646\u06cc\u0627\u062a\u06ce\u06a9 \u0628\u06d5 \u0648\u06d5\u0634\u0627\u0646\u06ce\u06a9\u06cc \u0646\u0648\u06ce\u062a\u0631\u06cc \u0628\u06ce\u0631\u06a9\u0644\u06cc DB. \u0626\u06d5\u06af\u06d5\u0631 \u0648\u0627\u06cc\u06d5\u060c \u062a\u06a9\u0627\u06cc\u06d5 \u0626\u06d5\u0648 \u0633\u06c6\u0641\u062a\u0648\u06ce\u0631\u06d5 \u0628\u06d5\u06a9\u0627\u0631\u0628\u0647\u06ce\u0646\u06d5 \u06a9\u06d5 \u062f\u0648\u0627\u062c\u0627\u0631 \u0626\u06d5\u0645 \u062c\u0632\u062f\u0627\u0646\u06d5 \u0628\u0627\u0631\u06a9\u0631\u0627 \u0628\u0648\u0648</translation>\n+    </message>\n+    <message>\n+        <source>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</source>\n+        <translation>\u0645\u0627\u0645\u06d5\u06b5\u06d5 \u067e\u06ce\u0648\u06cc\u0633\u062a\u06cc \u0628\u06d5 \u0646\u0627\u0648\u0646\u06cc\u0634\u0627\u0646\u06cc \u06af\u06c6\u0695\u06cc\u0646\u06d5\u060c \u0628\u06d5\u06b5\u0627\u0645 \u0646\u0627\u062a\u0648\u0627\u0646\u06cc\u0646 \u062f\u0631\u0648\u0633\u062a\u06cc \u0628\u06a9\u06d5\u06cc\u0646. \u062a\u06a9\u0627\u06cc\u06d5 \u0633\u06d5\u0631\u06d5\u062a\u0627 \u067e\u06d5\u06cc\u0648\u06d5\u0646\u062f\u06cc \u0628\u06a9\u06d5 \u0628\u06d5 \u067e\u0695\u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u06a9\u0644\u06cc\u0644\u06d5\u06a9\u06d5.</translation>\n+    </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>\u067e\u06ce\u0648\u06cc\u0633\u062a\u06d5 \u0628\u0646\u06a9\u06d5\u06cc \u0632\u0627\u0646\u06cc\u0627\u0631\u06cc\u06cc\u06d5\u06a9\u0627\u0646 \u062f\u0631\u0648\u0633\u062a \u0628\u06a9\u06d5\u06cc\u062a\u06d5\u0648\u06d5 \u0628\u06d5 \u0628\u06d5\u06a9\u0627\u0631\u0647\u06ce\u0646\u0627\u0646\u06cc -\u062f\u0648\u0648\u0628\u0627\u0631\u06d5 \u0626\u06cc\u0646\u062f\u06ce\u06a9\u0633 \u0628\u06c6 \u06af\u06d5\u0695\u0627\u0646\u06d5\u0648\u06d5 \u0628\u06c6 \u062f\u06c6\u062e\u06cc \u0646\u06d5\u067e\u0695\u0627\u0648.  \u0626\u06d5\u0645\u06d5 \u0647\u06d5\u0645\u0648\u0648 \u0628\u06d5\u0631\u0628\u06d5\u0633\u062a\u06d5\u06a9\u06d5 \u062f\u0627\u0626\u06d5\u0628\u06d5\u0632\u06ce\u0646\u06ce\u062a</translation>\n+    </message>\n+    <message>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation>\u0647\u06d5\u06b5\u06d5: \u06a9\u0644\u06cc\u0644\u06cc \u067e\u0648\u0648\u0644 \u0695\u0627\u06cc\u06a9\u0631\u062f\u060c \u062a\u06a9\u0627\u06cc\u06d5 \u0633\u06d5\u0631\u06d5\u062a\u0627 \u067e\u06d5\u06cc\u0648\u06d5\u0646\u062f\u06cc \u0628\u06a9\u06d5 \u0628\u06d5 \u067e\u0695\u06a9\u0631\u062f\u0646\u06d5\u0648\u06d5\u06cc \u06a9\u0644\u06cc\u0644</translation>\n+    </message>\n     </context>\n </TS>\n\\ No newline at end of file"
      },
      {
        "sha": "b3d7179f3bf4ca277e62f61d0cc0d325e5b08735",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 231,
        "deletions": 9,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Rechtermuisklik om het adres of label te wijzigen</translation>\n+        <translation>rechts klikken op adres of label te wijzigen</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -47,11 +47,11 @@\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>Kies het adres om de munten naar te versturen</translation>\n+        <translation>Kies het adres om de munten te versturen</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation>Kies het adres om munten op te ontvangen</translation>\n+        <translation>Kies het adres om munten te ontvangen</translation>\n     </message>\n     <message>\n         <source>C&amp;hoose</source>\n@@ -89,7 +89,7 @@ Ondertekenen is alleen mogelijk met adressen van het type 'legacy'.</translation\n     </message>\n     <message>\n         <source>Export Address List</source>\n-        <translation>Exporteer adreslijst</translation>\n+        <translation>Exporteer adressenlijst</translation>\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n@@ -101,7 +101,7 @@ Ondertekenen is alleen mogelijk met adressen van het type 'legacy'.</translation\n     </message>\n     <message>\n         <source>There was an error trying to save the address list to %1. Please try again.</source>\n-        <translation>Een fout is opgetreden tijdens het opslaan van deze adreslijst naar %1. Probeer het nogmaals.</translation>\n+        <translation>Een fout is opgetreden tijdens het opslaan van deze adreslijst naar %1. Probeer nogmaals.</translation>\n     </message>\n </context>\n <context>\n@@ -885,7 +885,11 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Create</source>\n         <translation>Cre\u00eber</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Compiled without sqlite support (required for descriptor wallets)</source>\n+        <translation>Gecompileerd zonder ondersteuning van sqlite (noodzakelijk voor beschrijvende portemonees)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1543,6 +1547,10 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Could not sign any more inputs.</source>\n         <translation>Kon geen inputs meer ondertekenen.</translation>\n     </message>\n+    <message>\n+        <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n+        <translation>Transactie succesvol getekend. Transactie is klaar voor verzending.</translation>\n+    </message>\n     <message>\n         <source>Unknown error processing transaction.</source>\n         <translation>Onbekende fout bij verwerken van transactie.</translation>\n@@ -1563,6 +1571,26 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Save Transaction Data</source>\n         <translation>Transactiedata Opslaan</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Gedeeltelijk Ondertekende Transactie (Binair) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved to disk.</source>\n+        <translation>PSBT opgeslagen op de schijf</translation>\n+    </message>\n+    <message>\n+        <source> * Sends %1 to %2</source>\n+        <translation>Verstuur %1 naar %2</translation>\n+    </message>\n+    <message>\n+        <source>Unable to calculate transaction fee or total transaction amount.</source>\n+        <translation>Onmogelijk om de transactie kost of totale bedrag te berekenen.</translation>\n+    </message>\n+    <message>\n+        <source>Pays transaction fee: </source>\n+        <translation>Betaald transactiekosten:</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Totaalbedrag</translation>\n@@ -1571,7 +1599,35 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>or</source>\n         <translation>of</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation>Transactie heeft %1 niet ondertekende ingaves.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>Transactie heeft nog ontbrekende informatie over ingaves.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction still needs signature(s).</source>\n+        <translation>Transactie heeft nog handtekening(en) nodig.</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>(Deze wallet kan geen transacties tekenen.)</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>(Maar deze portemonnee heeft niet de juiste sleutels.)</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>Transactie is volledig getekend en is klaar voor verzending</translation>\n+    </message>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>Transactie status is onbekend</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1736,6 +1792,10 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Error: %1</source>\n         <translation>Fout: %1</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>Fout bij het initializeren van de gegevens: %1</translation>\n+    </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n         <translation>%1 sloot nog niet veilig af...</translation>\n@@ -1914,6 +1974,10 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Node window</source>\n         <translation>Nodevenster</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>Huidige block hoogte</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Open het %1 debug-logbestand van de huidige gegevensmap. Dit kan een aantal seconden duren voor grote logbestanden.</translation>\n@@ -1926,6 +1990,10 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Increase font size</source>\n         <translation>Vergroot lettergrootte</translation>\n     </message>\n+    <message>\n+        <source>Permissions</source>\n+        <translation>Rechten</translation>\n+    </message>\n     <message>\n         <source>Services</source>\n         <translation>Diensten</translation>\n@@ -2181,9 +2249,21 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Could not unlock wallet.</source>\n         <translation>Kon de portemonnee niet openen.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>Kan geen nieuw %1 adres genereren</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Request payment to ...</source>\n+        <translation>Verzoek tot betaling aan ...</translation>\n+    </message>\n+    <message>\n+        <source>Address:</source>\n+        <translation>Adres:</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Bedrag:</translation>\n@@ -2466,10 +2546,22 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Are you sure you want to send?</source>\n         <translation>Weet u zeker dat u wilt verzenden?</translation>\n     </message>\n+    <message>\n+        <source>Create Unsigned</source>\n+        <translation>Cre\u00ebr ongetekende</translation>\n+    </message>\n     <message>\n         <source>Save Transaction Data</source>\n         <translation>Transactiedata Opslaan</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation>Gedeeltelijk Ondertekende Tansactie (Binair) (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT saved</source>\n+        <translation>PSBT opgeslagen</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>of</translation>\n@@ -2478,6 +2570,11 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>You can increase the fee later (signals Replace-By-Fee, BIP-125).</source>\n         <translation>Je kunt de vergoeding later verhogen (signaleert Replace-By-Fee, BIP-125).</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Gelieve uw transactie voorstel te controleren. Deze actie zal een Gedeeltelijk Getekende Bitcoin Transactie (PSBT) produceren die je kan opslaan of kopi\u00ebre en vervolgends ondertekenen.\n+Vb. een offline %1 portemonee, of een PSBT-combatiebele hardware portemonee.</translation>\n+    </message>\n     <message>\n         <source>Please, review your transaction.</source>\n         <translation>Controleer uw transactie aub.</translation>\n@@ -3296,9 +3393,21 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Close all wallets</source>\n         <translation>Sluit alle portemonnees</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation>Ben je zeker dat je alle portefeuilles wilt sluiten?</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n+    <message>\n+        <source>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</source>\n+        <translation>Geen portemonee is geladen.\n+Ga naar Bestand &gt; Open portemonee om er \u00e9\u00e9n te openen.\n+- OF -</translation>\n+    </message>\n     <message>\n         <source>Create a new wallet</source>\n         <translation>Nieuwe wallet cre\u00ebren</translation>\n@@ -3377,6 +3486,26 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Error</source>\n         <translation>Fout</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>Onmogelijk om het PSBT te ontcijferen van het klembord (ongeldige base64)</translation>\n+    </message>\n+    <message>\n+        <source>Load Transaction Data</source>\n+        <translation>Laad Transactie Data</translation>\n+    </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>Gedeeltelijk ondertekende transactie (*.psbt)</translation>\n+    </message>\n+    <message>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation>Het PSBT bestand moet kleiner dan 100 MiB te zijn.</translation>\n+    </message>\n+    <message>\n+        <source>Unable to decode PSBT</source>\n+        <translation>Niet in staat om de PSBT te decoderen</translation>\n+    </message>\n     <message>\n         <source>Backup Wallet</source>\n         <translation>Portemonnee backuppen</translation>\n@@ -3444,6 +3573,10 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Waarschuwing: Fout bij het lezen van %s! Alle sleutels zijn in goede orde uitgelezen, maar transactiedata of adresboeklemma's zouden kunnen ontbreken of fouten bevatten.</translation>\n     </message>\n+    <message>\n+        <source>More than one onion bind address is provided. Using %s for the automatically created Tor onion service.</source>\n+        <translation>Meer dan \u00e9\u00e9n onion bind adres is voorzien. %s wordt gebruik voor het automatisch gecre\u00eberde Tor onion service.</translation>\n+    </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n         <translation>Waarschuwing: Controleer dat de datum en tijd van uw computer correct zijn ingesteld! Bij een onjuist ingestelde klok zal %s niet goed werken.</translation>\n@@ -3452,6 +3585,18 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Gelieve bij te dragen als je %s nuttig vindt. Bezoek %s voor meer informatie over de software.</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLite Databank: Mislukt om het statement voor te bereiden dat het sqlite portemonnee schema versie ophaalt: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s</source>\n+        <translation>SQLite Databank: mislukt om het statement voor te bereiden dat de applicatie id ophaalt: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported</source>\n+        <translation>SQLite Databank: Onbekende sqlite portemonee schema versie %d. Enkel %d wordt ondersteund.</translation>\n+    </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>De blokdatabase bevat een blok dat lijkt uit de toekomst te komen. Dit kan gebeuren omdat de datum en tijd van uw computer niet goed staat. Herbouw de blokdatabase pas nadat u de datum en tijd van uw computer correct heeft ingesteld.</translation>\n@@ -3556,6 +3701,14 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Failed to rescan the wallet during initialization</source>\n         <translation>Portemonnee herscannen tijdens initialisatie mislukt</translation>\n     </message>\n+    <message>\n+        <source>Failed to verify database</source>\n+        <translation>Mislukt om de databank te controleren</translation>\n+    </message>\n+    <message>\n+        <source>Ignoring duplicate -wallet %s.</source>\n+        <translation>Negeren gedupliceerde -portemonnee %s</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importeren...</translation>\n@@ -3584,6 +3737,30 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Ongeldig bedrag voor -fallbackfee=&lt;bedrag&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to execute statement to verify database: %s</source>\n+        <translation>SQLite Databank: mislukt om het statement uit te voeren dat de de databank verifieert: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s</source>\n+        <translation>SQLite Databank: mislukt om het sqlite portemonee schema op te halen: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to fetch the application id: %s</source>\n+        <translation>SQLite Databank: mislukt om de applicatie id op te halen: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to prepare statement to verify database: %s</source>\n+        <translation>SQLite Databank: mislukt om de databank verificatie statement voor te bereiden: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n+        <translation>SQLite Databank: mislukt om de databank verificatie code op te halen: %s</translation>\n+    </message>\n+    <message>\n+        <source>SQLiteDatabase: Unexpected application id. Expected %u, got %u</source>\n+        <translation>SQLite Databank: Onverwachte applicatie id. Verwacht werd %u, maar kreeg %u</translation>\n+    </message>\n     <message>\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>Opgegeven blocks map \"%s\" bestaat niet.</translation>\n@@ -3668,6 +3845,14 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Fout: luisteren naar binnenkomende verbindingen mislukt (luisteren gaf foutmelding %s)</translation>\n     </message>\n+    <message>\n+        <source>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</source>\n+        <translation>%s is corrupt. Probeer de portemonnee tool bitcoin-portemonnee om het probleem op te lossen of een backup terug te zetten.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</source>\n+        <translation>Niet mogelijk om een niet HD gesplitste portefeuille up te daten, zonder de pre split keypool te ondersteunen. Gelieve versie 1699000 of 'geen versie gespecifieerd' te gebruiken.</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n         <translation>ongeldig bedrag voor -maxtxfee=&lt;bedrag&gt;: '%s' (moet ten minste de minimale doorgeefvergoeding van %s zijn om vastgelopen transacties te voorkomen)</translation>\n@@ -3676,10 +3861,35 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>Het transactiebedrag is te klein om te versturen nadat de transactievergoeding in mindering is gebracht</translation>\n     </message>\n+    <message>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation>Deze fout komt mogelijks voor wanneer de portefeuille niet correct is afgesloten en dat deze de laatste keer geladen werd met een nieuwere versie van de Berkeley DB. \n+Indien dit het geval is, gelieve de software te gebruiken waarmee deze portefeuille de laatste keer werd geladen.</translation>\n+    </message>\n+    <message>\n+        <source>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</source>\n+        <translation>Dit is de maximale transactie kost die je betaalt (bovenop de normale kosten) om een hogere prioriteit te geven aan het vermijden van gedeeltelijke uitgaven dan de reguliere munt selectie.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.</source>\n+        <translation>De transactie heeft een 'change' adres nodig, maar we kunnen er geen genereren. Gelieve eest keypoolrefill op te roepen.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>U moet de database herbouwen met -reindex om terug te gaan naar de niet-prune modus. Dit zal de gehele blokketen opnieuw downloaden.</translation>\n     </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Een fatale interne fout heeft zich voor gedaan, zie debug.log voor details</translation>\n+    </message>\n+    <message>\n+        <source>Cannot set -peerblockfilters without -blockfilterindex.</source>\n+        <translation>Kan -peerblockfilters niet zetten zonder -blockfilterindex</translation>\n+    </message>\n+    <message>\n+        <source>Disk space is too low!</source>\n+        <translation>Schijfruimte is te klein!</translation>\n+    </message>\n     <message>\n         <source>Error reading from database, shutting down.</source>\n         <translation>Fout bij het lezen van de database, afsluiten.</translation>\n@@ -3692,6 +3902,14 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Error: Disk space is low for %s</source>\n         <translation>Fout: Weinig schijfruimte voor %s</translation>\n     </message>\n+    <message>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Keypool op geraakt, roep alsjeblieft eerst keypoolrefill functie aan</translation>\n+    </message>\n+    <message>\n+        <source>Fee rate (%s) is lower than the minimum fee rate setting (%s)</source>\n+        <translation>Tarief (%s) is lager dan het minimum tarief (%s)</translation>\n+    </message>\n     <message>\n         <source>Invalid -onion address or hostname: '%s'</source>\n         <translation>Ongeldig -onion adress of hostnaam: '%s'</translation>\n@@ -3712,6 +3930,10 @@ Notitie: Omdat de vergoeding per byte wordt gerekend, zal een vergoeding van \"10\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>Verplicht een poort met -whitebind op te geven: '%s'</translation>\n     </message>\n+    <message>\n+        <source>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</source>\n+        <translation>Geen proxy server gedefinieerd. Gebruik -proxy=&lt;ip&gt;of -proxy=&lt;ip:port&gt;.</translation>\n+    </message>\n     <message>\n         <source>Prune mode is incompatible with -blockfilterindex.</source>\n         <translation>Prune-modus is niet compatible met -blockfilterindex.</translation>"
      },
      {
        "sha": "2b7cb995aa59d61af1ab464d9a732831b9689d71",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -1,6 +1,10 @@\n <TS language=\"ru\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435 \u043f\u0440\u0430\u0432\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 \u0438\u043b\u0438 \u043c\u0435\u0442\u043a\u0438</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441</translation>"
      },
      {
        "sha": "066e9d85e53b45b0e3be19b942bbbb5ae8fa4122",
        "filename": "src/qt/locale/bitcoin_sq.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_sq.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_sq.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sq.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -21,6 +21,10 @@\n         <source>&amp;Copy</source>\n         <translation>&amp;Kopjo</translation>\n     </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>afer</translation>\n+    </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n         <translation>Fshi adresen e selektuar nga lista</translation>\n@@ -65,6 +69,11 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>K\u00ebto jan\u00eb Bitcoin adresat e juaja p\u00ebr t\u00eb d\u00ebrguar pagesa. Gjithmon kontrolloni shum\u00ebn dhe adres\u00ebn pranuese para se t\u00eb d\u00ebrgoni monedha.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type 'legacy'.</source>\n+        <translation>K\u00ebto jan\u00eb adresat tuaja t\u00eb Bitcoin p\u00ebr t\u00eb marr\u00eb pagesa. P\u00ebrdorni butonin 'Krijo adres\u00eb t\u00eb re marr\u00ebse' n\u00eb sked\u00ebn e marrjes p\u00ebr t\u00eb krijuar adresa t\u00eb reja. N\u00ebnshkrimi \u00ebsht\u00eb i mundur vet\u00ebm me adresa t\u00eb tipit 'trash\u00ebgimi'.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopjo adresen</translation>\n@@ -111,6 +120,10 @@\n </context>\n <context>\n     <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>Dialog i Fjal\u00ebkalimit</translation>\n+    </message>\n     <message>\n         <source>Enter passphrase</source>\n         <translation>Futni fjal\u00ebkalimin</translation>"
      },
      {
        "sha": "bce945cd9cb5aa13937d33f17d3947e341b5349c",
        "filename": "src/qt/locale/bitcoin_ta.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ta.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_ta.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ta.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -477,6 +477,15 @@\n         <source>Up to date</source>\n         <translation>\u0ba4\u0bc7\u0ba4\u0bbf \u0bb5\u0bb0\u0bc8</translation>\n     </message>\n+    <message>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation>118&amp; \u0b95\u0bcb\u0baa\u0bcd\u0baa\u0bbf\u0bb2\u0bbf\u0bb0\u0bc1\u0ba8\u0bcd\u0ba4\u0bc1 PSBT \u0b90 \u0b8f\u0bb1\u0bcd\u0bb1\u0bb5\u0bc1\u0bae\u0bcd ..</translation>\n+    </message>\n+    <message>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation> \u0b93\u0bb0\u0bb3\u0bb5\u0bc1 \u0b95\u0bc8\u0baf\u0bca\u0baa\u0bcd\u0baa\u0bae\u0bbf\u0b9f\u0baa\u0bcd\u0baa\u0b9f\u0bcd\u0b9f \u0baa\u0bbf\u0b9f\u0bcd\u0b95\u0bbe\u0baf\u0bbf\u0ba9\u0bcd \u0baa\u0bb0\u0bbf\u0bb5\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0ba9\u0bc8\u0baf\u0bc8 \u0b8f\u0bb1\u0bcd\u0bb1\u0bb5\u0bc1\u0bae\u0bcd\n+</translation>\n+    </message>\n     <message>\n         <source>Node window</source>\n         <translation>\u0ba8\u0bcb\u0b9f\u0bcd \u0bb5\u0bbf\u0ba3\u0bcd\u0b9f\u0bcb</translation>"
      },
      {
        "sha": "fa2534bca9be79a88abd6398e67494bce9d4e454",
        "filename": "src/qt/locale/bitcoin_te.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_te.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_te.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_te.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -3,11 +3,11 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>\u0c1a\u0c3f\u0c30\u0c41\u0c28\u0c3e\u0c2e\u0c3e \u0c32\u0c47\u0c26\u0c3e \u0c32\u0c47\u0c2c\u0c41\u0c32\u0c4d \u0c38\u0c35\u0c30\u0c3f\u0c02\u0c1a\u0c21\u0c3e\u0c28\u0c3f\u0c15\u0c3f \u0c30\u0c48\u0c1f\u0c4d-\u0c15\u0c4d\u0c32\u0c3f\u0c15\u0c4d \u0c1a\u0c47\u0c2f\u0c02\u0c21\u0c3f</translation>\n+        <translation>\u0c1a\u0c3f\u0c30\u0c41\u0c28\u0c3e\u0c2e\u0c3e \u0c32\u0c47\u0c26\u0c3e \u0c32\u0c47\u0c2c\u0c41\u0c32\u0c4d \u0c38\u0c35\u0c30\u0c3f\u0c02\u0c1a\u0c41 -\u0c15\u0c4d\u0c32\u0c3f\u0c15\u0c4d \u0c1a\u0c47\u0c2f\u0c02\u0c21\u0c3f</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u0c15\u0c4d\u0c30\u0c4a\u0c24\u0c4d\u0c24 \u0c1a\u0c3f\u0c30\u0c41\u0c28\u0c3e\u0c2e\u0c3e \u0c38\u0c43\u0c37\u0c4d\u0c1f\u0c3f\u0c02\u0c1a\u0c02\u0c21\u0c3f</translation>\n+        <translation>\u0c15\u0c4d\u0c30\u0c4a\u0c24\u0c4d\u0c24 \u0c1a\u0c3f\u0c30\u0c41\u0c28\u0c3e\u0c2e\u0c3e \u0c38\u0c43\u0c37\u0c4d\u0c1f\u0c3f\u0c02\u0c1a\u0c41</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>"
      },
      {
        "sha": "d8d671dc621613b15b970a12f731b217f4302446",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -3,11 +3,11 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Adres veya etiketi d\u00fczenlemek i\u00e7in sa\u011f t\u0131klay\u0131n\u0131z.</translation>\n+        <translation>Adresi veya etiketi d\u00fczenlemek i\u00e7in sa\u011f t\u0131klay\u0131n\u0131z.</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>Yeni adres olu\u015fturun</translation>\n+        <translation>Yeni bir adres olu\u015fturun</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>"
      },
      {
        "sha": "3a1636223c5a05d65d0633b0b6ded1eede65f1f0",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 991,
        "deletions": 976,
        "changes": 1967,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8"
      },
      {
        "sha": "8118ece0497c8e366e6e15f25d22d640e81944ce",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93ce429f0e6ab6e09051fd947c898ecbbf907cd8/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "patch": "@@ -549,7 +549,7 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n     </message>\n     <message>\n         <source>&amp;Mask values</source>\n-        <translation>\u4e0d\u660e\u6587\u663e\u793a\u6570\u503c(&amp;M)</translation>\n+        <translation>\u906e\u4f4f\u6570\u503c(&amp;M)</translation>\n     </message>\n     <message>\n         <source>Mask the values in the Overview tab</source>\n@@ -3753,7 +3753,7 @@ Go to File &gt; Open Wallet to load a wallet.\n     </message>\n     <message>\n         <source>SQLiteDatabase: Failed to read database verification error: %s</source>\n-        <translation>SQLiteDatabase: \u8bfb\u53d6\u6570\u636e\u5e93\u5931\u8d25\u6821\u9a8c\u9519\u8bef: %s</translation>\n+        <translation>SQLiteDatabase: \u8bfb\u53d6\u6570\u636e\u5e93\u5931\u8d25\uff0c\u6821\u9a8c\u9519\u8bef: %s</translation>\n     </message>\n     <message>\n         <source>SQLiteDatabase: Unexpected application id. Expected %u, got %u</source>"
      }
    ]
  },
  {
    "sha": "212525337eda5d628da34a4f29d78d7ccde86f94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTI1MjUzMzdlZGE1ZDYyOGRhMzRhNGYyOWQ3OGQ3Y2NkZTg2Zjk0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-03T12:42:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-03T12:43:03Z"
      },
      "message": "build: Bump RC to rc4\n\nTree-SHA512: f22375573f1737d64b62351cdec58f0f3e17d9f21b044430f366cbf272514369b73f24cc34e499e2637f0a0fa57ce5b925dd2df8ba0265b1b9c37beb7c8b8e22",
      "tree": {
        "sha": "16e9ebee01f6f69e5822faf29a9a767791ad8f56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16e9ebee01f6f69e5822faf29a9a767791ad8f56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/212525337eda5d628da34a4f29d78d7ccde86f94",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/xu9cACgkQHkrtYphs\n0l29VwgAnifnvUOC30f8AvPMCSQvnL83IFIDOOh4UWbzXE8OR2ing9xiJuwNokea\n3xC4fEERa3pLgytWZgyMsAQnFM6GwunH15IoanU1zVRsaQG12A2RCfrSBkmHvtwl\nAfVEuMVC7vlAcmuXsH2iqql1Ospp8aboSWqbPpoWIDswWLt0JjIbgJN8f14vwqtz\nWf6BRKRjwkmhVFJ6WiKyjV2BEQQ7xUsmJmaEAuDTmGZokpO7LZfcTKUPiJihUym7\nXqX3ZRCaZjBYlgj6BPlmhXW+sBv53UThP27PqTYS+oK9dWfzgm8kVW6AA5IhuEbw\nm+ERM/ANvQJr0y4OzxbT4pDLHYCxVQ==\n=p//T\n-----END PGP SIGNATURE-----",
        "payload": "tree 16e9ebee01f6f69e5822faf29a9a767791ad8f56\nparent 93ce429f0e6ab6e09051fd947c898ecbbf907cd8\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609677770 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609677783 +0100\n\nbuild: Bump RC to rc4\n\nTree-SHA512: f22375573f1737d64b62351cdec58f0f3e17d9f21b044430f366cbf272514369b73f24cc34e499e2637f0a0fa57ce5b925dd2df8ba0265b1b9c37beb7c8b8e22\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/212525337eda5d628da34a4f29d78d7ccde86f94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/212525337eda5d628da34a4f29d78d7ccde86f94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/212525337eda5d628da34a4f29d78d7ccde86f94/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93ce429f0e6ab6e09051fd947c898ecbbf907cd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93ce429f0e6ab6e09051fd947c898ecbbf907cd8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a48427a5dfcc7e8ab0607492e199a4b59ed128ad",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/212525337eda5d628da34a4f29d78d7ccde86f94/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/212525337eda5d628da34a4f29d78d7ccde86f94/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=212525337eda5d628da34a4f29d78d7ccde86f94",
        "patch": "@@ -3,7 +3,7 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 21)\n define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 3)\n+define(_CLIENT_VERSION_RC, 4)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])"
      }
    ]
  },
  {
    "sha": "e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmFkOGE2MjIwYmYwNzZkMmIxYzJmNzg1NjYyYjhhYTllNTJmODNh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-03T15:14:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-03T15:16:56Z"
      },
      "message": "doc: Generate manual pages for 0.21.0rc4\n\nTree-SHA512: c2ff50dbb54c42db9d56f1fcb0d8a2ce9c89089254f1a6b6f2aa98959f47699cd72c7771b53490232938b45d9bb030ce7fe08707c62190e68ada0ddbd8b6e13a",
      "tree": {
        "sha": "eae6a5ad880c7de98091ded93facbbdd981fc299",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eae6a5ad880c7de98091ded93facbbdd981fc299"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/x3+gACgkQHkrtYphs\n0l1Z7wgAmUmOyZPpOoLmRvUjxFPXNqxPof4CoBkZmsPxFwVJizcKcD6ARDDvu6IF\nC1kGr0LkXYwsjVn++vvTYZTMxpsPCNFo7/FUUAH6f8H14XBZyQuo/h8RHtcfK4s8\njVIHOR/pY3jIeEvDXmqQSM51afqeyvTbE+UU80S8pOIdPxltOwiiNiEzWBQBkime\nny4rLgUE5PaMOAH19eaKKE1IiRd8M2oVI6yEf4YohBTgAdz/mYmgZr29OSNx4dx5\n8zGg0JTlAkyT6FLkp6sxkwiFNocHJdAKrM+a5SsxXi9NiS+NqV6eSAYxkOdW3Nii\n5ycXJROBuQGqBACy6PFRgpc1cWjiwQ==\n=laAQ\n-----END PGP SIGNATURE-----",
        "payload": "tree eae6a5ad880c7de98091ded93facbbdd981fc299\nparent 212525337eda5d628da34a4f29d78d7ccde86f94\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609686866 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609687016 +0100\n\ndoc: Generate manual pages for 0.21.0rc4\n\nTree-SHA512: c2ff50dbb54c42db9d56f1fcb0d8a2ce9c89089254f1a6b6f2aa98959f47699cd72c7771b53490232938b45d9bb030ce7fe08707c62190e68ada0ddbd8b6e13a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "212525337eda5d628da34a4f29d78d7ccde86f94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/212525337eda5d628da34a4f29d78d7ccde86f94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/212525337eda5d628da34a4f29d78d7ccde86f94"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "50ef3ef96fe2d38bad8501e13a4021da2912aeb8",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,5 +1,5 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n-.TH BITCOIN-CLI \"1\" \"November 2020\" \"bitcoin-cli v0.21.0.0\" \"User Commands\"\n+.TH BITCOIN-CLI \"1\" \"January 2021\" \"bitcoin-cli v0.21.0.0\" \"User Commands\"\n .SH NAME\n bitcoin-cli \\- manual page for bitcoin-cli v0.21.0.0\n .SH SYNOPSIS"
      },
      {
        "sha": "9141b9399eae937e86b05105ba8aaf173f3e97fe",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,5 +1,5 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n-.TH BITCOIN-QT \"1\" \"November 2020\" \"bitcoin-qt v0.21.0.0\" \"User Commands\"\n+.TH BITCOIN-QT \"1\" \"January 2021\" \"bitcoin-qt v0.21.0.0\" \"User Commands\"\n .SH NAME\n bitcoin-qt \\- manual page for bitcoin-qt v0.21.0.0\n .SH SYNOPSIS\n@@ -286,8 +286,9 @@ Relay non\\-P2SH multisig (default: 1)\n .HP\n \\fB\\-port=\\fR<port>\n .IP\n-Listen for connections on <port> (default: 8333, testnet: 18333 signet:\n-38333, regtest: 18444)\n+Listen for connections on <port>. Nodes not using the default ports\n+(default: 8333, testnet: 18333, signet: 38333, regtest: 18444)\n+are unlikely to get incoming connections.\n .HP\n \\fB\\-proxy=\\fR<ip:port>\n .IP"
      },
      {
        "sha": "cf1dbd6757328323883910c681ce8f71dc294b01",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,5 +1,5 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n-.TH BITCOIN-TX \"1\" \"November 2020\" \"bitcoin-tx v0.21.0.0\" \"User Commands\"\n+.TH BITCOIN-TX \"1\" \"January 2021\" \"bitcoin-tx v0.21.0.0\" \"User Commands\"\n .SH NAME\n bitcoin-tx \\- manual page for bitcoin-tx v0.21.0.0\n .SH SYNOPSIS"
      },
      {
        "sha": "84c596c128e8aa08993c5bf928ca0d63d3e16545",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,5 +1,5 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n-.TH BITCOIN-WALLET \"1\" \"November 2020\" \"bitcoin-wallet v0.21.0.0\" \"User Commands\"\n+.TH BITCOIN-WALLET \"1\" \"January 2021\" \"bitcoin-wallet v0.21.0.0\" \"User Commands\"\n .SH NAME\n bitcoin-wallet \\- manual page for bitcoin-wallet v0.21.0.0\n .SH DESCRIPTION"
      },
      {
        "sha": "c4a7b30b1c4ee081ad2afaf5951793d0c37ed9a4",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,5 +1,5 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.\n-.TH BITCOIND \"1\" \"November 2020\" \"bitcoind v0.21.0.0\" \"User Commands\"\n+.TH BITCOIND \"1\" \"January 2021\" \"bitcoind v0.21.0.0\" \"User Commands\"\n .SH NAME\n bitcoind \\- manual page for bitcoind v0.21.0.0\n .SH SYNOPSIS\n@@ -286,8 +286,9 @@ Relay non\\-P2SH multisig (default: 1)\n .HP\n \\fB\\-port=\\fR<port>\n .IP\n-Listen for connections on <port> (default: 8333, testnet: 18333 signet:\n-38333, regtest: 18444)\n+Listen for connections on <port>. Nodes not using the default ports\n+(default: 8333, testnet: 18333, signet: 38333, regtest: 18444)\n+are unlikely to get incoming connections.\n .HP\n \\fB\\-proxy=\\fR<ip:port>\n .IP"
      }
    ]
  },
  {
    "sha": "3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzA4NzE4YTZiNDFmMDllOWRkM2M3Y2FhOTk4NmNkNmNiOGYyZWVi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-01-05T00:34:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-05T08:47:47Z"
      },
      "message": "Revert \"Add patch to make codesign_allocate compatible with Apple's\"\n\nThis reverts commit a4118c6e200e02e7560f8bc213697aa2909d95b1.\n\nGithub-Pull: #20855\nRebased-From: a0eb4c551ebf8adfacb8c38c4ce56641fe379667",
      "tree": {
        "sha": "77a2c7538d6469fe58c7725306056fd3caf13e28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77a2c7538d6469fe58c7725306056fd3caf13e28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 2,
      "deletions": 22
    },
    "files": [
      {
        "sha": "d56b636695508699d998191f8220e47fe01df6d1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
        "patch": "@@ -4,7 +4,7 @@ $(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n $(package)_sha256_hash=e51995a843533a3dac155dd0c71362dd471597a2d23f13dff194c6285362f875\n $(package)_build_subdir=cctools\n-$(package)_patches=ld64_disable_threading.patch segalign.patch\n+$(package)_patches=ld64_disable_threading.patch\n \n ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n $(package)_clang_version=8.0.0\n@@ -80,8 +80,7 @@ endef\n define $(package)_preprocess_cmds\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/build.sh && \\\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/install.sh && \\\n-  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch && \\\n-  patch -p1 < $($(package)_patch_dir)/segalign.patch\n+  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "bcdbd67a6c5a0f26164bbff4743479e9645ab776",
        "filename": "depends/patches/native_cctools/segalign.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/depends/patches/native_cctools/segalign.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/depends/patches/native_cctools/segalign.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/segalign.patch?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,19 +0,0 @@\n-commit 7f2eb11ce6ebec7eb9b8e1429535e453054143e5\n-Author: Pieter Wuille <pieter@wuille.net>\n-Date:   Sun Dec 13 11:34:21 2020 -0800\n-\n-    Make cctools_port's codesign_allocate compatible with Apple's\n-\n-diff --git a/cctools/libstuff/arch.c b/cctools/libstuff/arch.c\n-index 6f2332f..d85c25c 100644\n---- a/cctools/libstuff/arch.c\n-+++ b/cctools/libstuff/arch.c\n-@@ -134,7 +134,7 @@ static const struct cpu_entry cpu_entries[] = {\n-     { CPU_TYPE_ARM,\t    LITTLE_ENDIAN_BYTE_SEX, 0,\t\t       0x4000 },\n-     \n-     /* desktop */\n--    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x1000 },\n-+    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x2000 /* Used to be 0x1000; changed to 0x2000 to match Apple's distributed codesign_allocate. */},\n-     { CPU_TYPE_I386,\t    LITTLE_ENDIAN_BYTE_SEX, 0xc0000000,        0x1000 },\n-     { CPU_TYPE_POWERPC,\t    BIG_ENDIAN_BYTE_SEX,    0xc0000000,\t       0x1000 },\n-     { CPU_TYPE_POWERPC64,   BIG_ENDIAN_BYTE_SEX,    0x7ffff00000000LL, 0x1000 },"
      }
    ]
  },
  {
    "sha": "6e28714da357146379e23f0d5ccf9751fff77706",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTI4NzE0ZGEzNTcxNDYzNzllMjNmMGQ1Y2NmOTc1MWZmZjc3NzA2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-05T14:23:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-05T14:23:48Z"
      },
      "message": "Merge #20850: [0.21] final rc5 backports\n\n3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb Revert \"Add patch to make codesign_allocate compatible with Apple's\" (Pieter Wuille)\n\nPull request description:\n\nACKs for top commit:\n  jonasschnelli:\n    ACK 3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb\n  fanquake:\n    ACK 3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb\n\nTree-SHA512: 2a1002499e6f0da6e9ac7ae393e478bd34e55390ff1a41c5b16b4e91e339fef4b82642237af6725507337cadf9ddc1f2f23b2512d8dd47e5a345770c6c0d1b02",
      "tree": {
        "sha": "77a2c7538d6469fe58c7725306056fd3caf13e28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77a2c7538d6469fe58c7725306056fd3caf13e28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e28714da357146379e23f0d5ccf9751fff77706",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/0dnQACgkQHkrtYphs\n0l0JvAgAo8wDlRTsDQAivGgR4P6YUP6oavohKURFiGsaMrjZNSgSNV9x2Yf2w4hp\nbzPPba07//YCF7PKT1i+uTG7uJ1ED2U+bKvhZuNtYZMXEza/QrWq2jp7NPGVl/ee\nPwCCviq9DCC86pP5nifHa9DM9OF2+3p9qZd6mjt/bdDeVSFQUcP27PCUGKRLytq+\n6vAUbWPUsGxWoIouQSGx+MfZd0bI8rQMOBiqCL5z2i0e7GJyfAZitmm0q1EZzaiR\nRs0l+1vlHAYLo2FkhyGX2LxeMG9cBkKeiw+DmSo6XYpVaoHIxZg3JUiCVJfP2b2i\njPaQlf6OEQHRz7ixIIetg3B9TkPdXg==\n=HxAm\n-----END PGP SIGNATURE-----",
        "payload": "tree 77a2c7538d6469fe58c7725306056fd3caf13e28\nparent e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a\nparent 3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609856614 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609856628 +0100\n\nMerge #20850: [0.21] final rc5 backports\n\n3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb Revert \"Add patch to make codesign_allocate compatible with Apple's\" (Pieter Wuille)\n\nPull request description:\n\nACKs for top commit:\n  jonasschnelli:\n    ACK 3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb\n  fanquake:\n    ACK 3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb\n\nTree-SHA512: 2a1002499e6f0da6e9ac7ae393e478bd34e55390ff1a41c5b16b4e91e339fef4b82642237af6725507337cadf9ddc1f2f23b2512d8dd47e5a345770c6c0d1b02\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e28714da357146379e23f0d5ccf9751fff77706",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e28714da357146379e23f0d5ccf9751fff77706",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e28714da357146379e23f0d5ccf9751fff77706/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a"
      },
      {
        "sha": "3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3308718a6b41f09e9dd3c7caa9986cd6cb8f2eeb"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 2,
      "deletions": 22
    },
    "files": [
      {
        "sha": "d56b636695508699d998191f8220e47fe01df6d1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e28714da357146379e23f0d5ccf9751fff77706/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e28714da357146379e23f0d5ccf9751fff77706/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=6e28714da357146379e23f0d5ccf9751fff77706",
        "patch": "@@ -4,7 +4,7 @@ $(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n $(package)_sha256_hash=e51995a843533a3dac155dd0c71362dd471597a2d23f13dff194c6285362f875\n $(package)_build_subdir=cctools\n-$(package)_patches=ld64_disable_threading.patch segalign.patch\n+$(package)_patches=ld64_disable_threading.patch\n \n ifeq ($(strip $(FORCE_USE_SYSTEM_CLANG)),)\n $(package)_clang_version=8.0.0\n@@ -80,8 +80,7 @@ endef\n define $(package)_preprocess_cmds\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/build.sh && \\\n   CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/install.sh && \\\n-  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch && \\\n-  patch -p1 < $($(package)_patch_dir)/segalign.patch\n+  patch -p1 < $($(package)_patch_dir)/ld64_disable_threading.patch\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "bcdbd67a6c5a0f26164bbff4743479e9645ab776",
        "filename": "depends/patches/native_cctools/segalign.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/depends/patches/native_cctools/segalign.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a/depends/patches/native_cctools/segalign.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/segalign.patch?ref=e6ad8a6220bf076d2b1c2f785662b8aa9e52f83a",
        "patch": "@@ -1,19 +0,0 @@\n-commit 7f2eb11ce6ebec7eb9b8e1429535e453054143e5\n-Author: Pieter Wuille <pieter@wuille.net>\n-Date:   Sun Dec 13 11:34:21 2020 -0800\n-\n-    Make cctools_port's codesign_allocate compatible with Apple's\n-\n-diff --git a/cctools/libstuff/arch.c b/cctools/libstuff/arch.c\n-index 6f2332f..d85c25c 100644\n---- a/cctools/libstuff/arch.c\n-+++ b/cctools/libstuff/arch.c\n-@@ -134,7 +134,7 @@ static const struct cpu_entry cpu_entries[] = {\n-     { CPU_TYPE_ARM,\t    LITTLE_ENDIAN_BYTE_SEX, 0,\t\t       0x4000 },\n-     \n-     /* desktop */\n--    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x1000 },\n-+    { CPU_TYPE_X86_64,\t    LITTLE_ENDIAN_BYTE_SEX, 0x7fff5fc00000LL,  0x2000 /* Used to be 0x1000; changed to 0x2000 to match Apple's distributed codesign_allocate. */},\n-     { CPU_TYPE_I386,\t    LITTLE_ENDIAN_BYTE_SEX, 0xc0000000,        0x1000 },\n-     { CPU_TYPE_POWERPC,\t    BIG_ENDIAN_BYTE_SEX,    0xc0000000,\t       0x1000 },\n-     { CPU_TYPE_POWERPC64,   BIG_ENDIAN_BYTE_SEX,    0x7ffff00000000LL, 0x1000 },"
      }
    ]
  },
  {
    "sha": "4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTdiNGNlN2ViMTdlNDdhZDliOTBkMTcyZDZkNmRlM2E0NzcwMGQ5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-05T14:25:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-05T14:25:43Z"
      },
      "message": "build: Bump RC to rc5\n\nTree-SHA512: ed01a7a66e5d064c77c948b87afce832b33852005ec1dc556bf4fcc69fa3743aaa6dea4c03a5d2d520682d8de9c7596f1eec3db326caf754726d1ca4aab2cec3",
      "tree": {
        "sha": "c7d4b45c904ff38c679bb85417397b459a672fd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7d4b45c904ff38c679bb85417397b459a672fd0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/0ducACgkQHkrtYphs\n0l2wxwgAjEcDOFUn3MmJkpUO5grLV2HO5ScfIvxAcsPJTzETzzXTDw4E/cSsI/tD\nWk+2CQ7QvEwqsscOqwS5n/2DM1FzmKC32AKKGg1PkWVPYA/dITwsbzc14E34nFYQ\nnFJuobSqGV4sEE8t/cUE60ljd9Tk8x5/cHIcXY6ONZ2cK2LT1AxmE8XHZZsprKP6\nfZHwHexJ4ABnmeI748iwfrDoZlNHbD0QGU0u1KO7lN+aqeJcnyb0t0MA/BY2PGtT\nZlg/PDNusXo1L7r7OxaYEcdIQT4QEMlFyxZaCRLYrhfZrTz6FAzNkE+REqm21i8f\nt3P86JthgP3aYxYqMnLA0RlYSYArDg==\n=0fgX\n-----END PGP SIGNATURE-----",
        "payload": "tree c7d4b45c904ff38c679bb85417397b459a672fd0\nparent 6e28714da357146379e23f0d5ccf9751fff77706\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609856736 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609856743 +0100\n\nbuild: Bump RC to rc5\n\nTree-SHA512: ed01a7a66e5d064c77c948b87afce832b33852005ec1dc556bf4fcc69fa3743aaa6dea4c03a5d2d520682d8de9c7596f1eec3db326caf754726d1ca4aab2cec3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e28714da357146379e23f0d5ccf9751fff77706",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e28714da357146379e23f0d5ccf9751fff77706",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e28714da357146379e23f0d5ccf9751fff77706"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b2f97fafff161d572faa1b69a9f3ed6a23af278f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
        "patch": "@@ -3,7 +3,7 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 21)\n define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 4)\n+define(_CLIENT_VERSION_RC, 5)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])"
      }
    ]
  },
  {
    "sha": "15877d160cb8aaa53742fbfeea7296077e30edea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTg3N2QxNjBjYjhhYWE1Mzc0MmZiZmVlYTcyOTYwNzdlMzBlZGVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-05T15:45:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-05T15:46:14Z"
      },
      "message": "qt: Pre-rc5 translations update\n\nTree-SHA512: f6986d00a9565ee7fbf8dd2766dca9c90af931e2dc2fdc0faf5734a2e9be1a0e0774031a20207aa2afa645f1d6229aac9751c84ada324a8dcb463497fb9f237f",
      "tree": {
        "sha": "19464c0ec78ccb6f63f4dc050ba2fbd314e9e2a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19464c0ec78ccb6f63f4dc050ba2fbd314e9e2a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15877d160cb8aaa53742fbfeea7296077e30edea",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl/0icYACgkQHkrtYphs\n0l3ynAgAhTaulLLO2AV7WTeoG84B30fYuzOMWl9vTIofOxgtkUL185Lth3wB/Isl\nFEA+9kUaPsAs/peIgJZ1wtubWd869hwVdcsVnSnytvHtU8D24lvafMz010KjUzaY\nliEhGTIl7/r3/0XWxu0H0uhmf39tFU8En3lAR4+cQb7I6WDvsQ0gVXssZJaoueg0\nb0boJe78esSTUVTObbxTkNsvY198NwlQrSVC5WZY+XCglvJTOT5fHXafF6wd1Yhq\nSnpPCUGUUvmmjxixikhJ+GGaLKcE13VnRlg8yuUHT6horjzFIRCz3HtpCL1RB6NT\neS2VJoZHhoGqQQPFXVSQkhIk7Fz8aQ==\n=dmTF\n-----END PGP SIGNATURE-----",
        "payload": "tree 19464c0ec78ccb6f63f4dc050ba2fbd314e9e2a9\nparent 4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1609861546 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1609861574 +0100\n\nqt: Pre-rc5 translations update\n\nTree-SHA512: f6986d00a9565ee7fbf8dd2766dca9c90af931e2dc2fdc0faf5734a2e9be1a0e0774031a20207aa2afa645f1d6229aac9751c84ada324a8dcb463497fb9f237f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15877d160cb8aaa53742fbfeea7296077e30edea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/15877d160cb8aaa53742fbfeea7296077e30edea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15877d160cb8aaa53742fbfeea7296077e30edea/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e7b4ce7eb17e47ad9b90d172d6d6de3a47700d9"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 74,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9c76d93b723e153f5adff3441f60136ab7c5a775",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 74,
        "deletions": 2,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15877d160cb8aaa53742fbfeea7296077e30edea/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15877d160cb8aaa53742fbfeea7296077e30edea/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=15877d160cb8aaa53742fbfeea7296077e30edea",
        "patch": "@@ -1340,6 +1340,14 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Whether to show coin control features or not.</source>\n         <translation>Wybierz pokazywanie lub nie funkcji kontroli monet.</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n+        <translation>Po\u0142\u0105cz si\u0119 z sieci\u0105 Bitcoin przy pomocy oddzielnego SOCKS5 proxy dla sieci TOR.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor onion services:</source>\n+        <translation>U\u017cyj oddzielnego proxy SOCKS&amp;5 aby osi\u0105gn\u0105\u0107 w\u0119z\u0142y w ukrytych us\u0142ugach Tor:</translation>\n+    </message>\n     <message>\n         <source>&amp;Third party transaction URLs</source>\n         <translation>&amp;Zewn\u0119trzny URL podgl\u0105du transakcji</translation>\n@@ -1502,6 +1510,14 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Failed to sign transaction: %1</source>\n         <translation>Nie uda\u0142o si\u0119 podpisa\u0107 transakcji: %1</translation>\n     </message>\n+    <message>\n+        <source>Could not sign any more inputs.</source>\n+        <translation>Nie uda\u0142o si\u0119 podpisa\u0107 wi\u0119cej wej\u015b\u0107.</translation>\n+    </message>\n+    <message>\n+        <source>Signed %1 inputs, but more signatures are still required.</source>\n+        <translation>Podpisano %1 wej\u015b\u0107, ale potrzebnych jest wi\u0119cej podpis\u00f3w.</translation>\n+    </message>\n     <message>\n         <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n         <translation>transakcja</translation>\n@@ -1510,6 +1526,10 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Unknown error processing transaction.</source>\n         <translation>Nieznany b\u0142\u0105d podczas przetwarzania transakcji.</translation>\n     </message>\n+    <message>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation>Nie uda\u0142o si\u0119 rozg\u0142osi\u0107 transakscji: %1</translation>\n+    </message>\n     <message>\n         <source>PSBT copied to clipboard.</source>\n         <translation>PSBT skopiowane do schowka</translation>\n@@ -1542,11 +1562,35 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>or</source>\n         <translation>lub</translation>\n     </message>\n+    <message>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation>Transakcja ma %1 niepodpisane wej\u015bcia.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation>Transakcja ma niekompletne informacje o niekt\u00f3rych wej\u015bciach.</translation>\n+    </message>\n     <message>\n         <source>Transaction still needs signature(s).</source>\n         <translation>Transakcja ci\u0105gle oczekuje na podpis(y).</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation>(Ale ten portfel nie mo\u017ce podipisa\u0107 transakcji.)</translation>\n+    </message>\n+    <message>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation>(Ale ten portfel nie posiada wla\u015bciwych kluczy.)</translation>\n+    </message>\n+    <message>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation>Transakcja jest w pe\u0142ni podpisana i gotowa do rozg\u0142oszenia.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction status is unknown.</source>\n+        <translation>Status transakcji nie jest znany.</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n     <message>\n@@ -1711,6 +1755,10 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Error: %1</source>\n         <translation>B\u0142\u0105d: %1</translation>\n     </message>\n+    <message>\n+        <source>Error initializing settings: %1</source>\n+        <translation>B\u0142\u0105d inicjowania ustawie\u0144: %1</translation>\n+    </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n         <translation>%1 jeszcze si\u0119 bezpiecznie nie zamkn\u0105\u0142...</translation>\n@@ -1889,6 +1937,10 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Node window</source>\n         <translation>Okno w\u0119z\u0142a</translation>\n     </message>\n+    <message>\n+        <source>Current block height</source>\n+        <translation>Obecna ilo\u015b\u0107 blok\u00f3w</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Otw\u00f3rz plik dziennika debugowania %1 z obecnego katalogu z danymi. Mo\u017ce to potrwa\u0107 kilka sekund przy wi\u0119kszych plikach.</translation>\n@@ -2160,7 +2212,11 @@ Podpisywanie jest mo\u017cliwe tylko z adresami typu \u201elegacy\u201d.</translation>\n         <source>Could not unlock wallet.</source>\n         <translation>Nie mo\u017cna by\u0142o odblokowa\u0107 portfela.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not generate new %1 address</source>\n+        <translation>Nie uda\u0142o si\u0119 wygenerowa\u0107 nowego adresu %1</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -2474,6 +2530,10 @@ Uwaga: Poniewa\u017c op\u0142ata jest naliczana za ka\u017cdy bajt, op\u0142ata \"100 satoshi za\n         <source>You can increase the fee later (signals Replace-By-Fee, BIP-125).</source>\n         <translation>Mo\u017cesz p\u00f3\u017aniej zwi\u0119kszy\u0107 op\u0142at\u0119 (sygnalizuje podmie\u0144-przez-op\u0142at\u0119 (RBF), BIP 125).</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Prosz\u0119 przejrze\u0107 propozycj\u0119 transakcji. Zostanie utworzona cz\u0119\u015bciowo podpisana transakcja (ang. PSBT), kt\u00f3r\u0105 mo\u017cna skopiowa\u0107, a nast\u0119pnie podpisa\u0107 np. offline z portfelem %1 lub z innym portfelem zgodnym z PSBT.</translation>\n+    </message>\n     <message>\n         <source>Please, review your transaction.</source>\n         <translation>Prosz\u0119, zweryfikuj swoj\u0105 transakcj\u0119.</translation>\n@@ -3378,10 +3438,18 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>Error</source>\n         <translation>B\u0142\u0105d</translation>\n     </message>\n+    <message>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation>Nie uda\u0142o si\u0119 za\u0142adowa\u0107 cz\u0119\u015bciowo podpisanej transakcji (niewa\u017cny base64)</translation>\n+    </message>\n     <message>\n         <source>Load Transaction Data</source>\n         <translation>Wczytaj dane transakcji</translation>\n     </message>\n+    <message>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation>Cz\u0119\u015bciowo Podpisana Transakcja (*.psbt)</translation>\n+    </message>\n     <message>\n         <source>PSBT file must be smaller than 100 MiB</source>\n         <translation>PSBT musi by\u0107 mniejsze ni\u017c 100MB</translation>\n@@ -3722,6 +3790,10 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation>Musisz przebudowa\u0107 baz\u0119 u\u017cywaj\u0105c parametru -reindex aby wr\u00f3ci\u0107 do trybu pe\u0142nego. To spowoduje ponowne pobranie ca\u0142ego \u0142a\u0144cucha blok\u00f3w</translation>\n     </message>\n+    <message>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation>B\u0142\u0105d: Wyst\u0105pi\u0142 fatalny b\u0142\u0105d wewn\u0119trzny, sprawd\u017a szczeg\u00f3\u0142y w debug.log</translation>\n+    </message>\n     <message>\n         <source>Disk space is too low!</source>\n         <translation>Zbyt ma\u0142o miejsca na dysku!</translation>"
      }
    ]
  },
  {
    "sha": "66e6742a273796e9bdab37b4ad9e05cf18a99981",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmU2NzQyYTI3Mzc5NmU5YmRhYjM3YjRhZDllMDVjZjE4YTk5OTgx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-13T18:43:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-13T18:43:29Z"
      },
      "message": "doc: Move 0.21.0 release notes from wiki",
      "tree": {
        "sha": "4cc864fda5808cf36c902c5d09d18f272b79cef1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4cc864fda5808cf36c902c5d09d18f272b79cef1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66e6742a273796e9bdab37b4ad9e05cf18a99981",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66e6742a273796e9bdab37b4ad9e05cf18a99981",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66e6742a273796e9bdab37b4ad9e05cf18a99981",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66e6742a273796e9bdab37b4ad9e05cf18a99981/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15877d160cb8aaa53742fbfeea7296077e30edea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15877d160cb8aaa53742fbfeea7296077e30edea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15877d160cb8aaa53742fbfeea7296077e30edea"
      }
    ],
    "stats": {
      "total": 994,
      "additions": 922,
      "deletions": 72
    },
    "files": [
      {
        "sha": "66aee77643bacee6e31dfeb73dfce5a3e3a14efb",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 922,
        "deletions": 72,
        "changes": 994,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66e6742a273796e9bdab37b4ad9e05cf18a99981/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66e6742a273796e9bdab37b4ad9e05cf18a99981/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=66e6742a273796e9bdab37b4ad9e05cf18a99981",
        "patch": "@@ -1,23 +1,9 @@\n-*After branching off for a major version release of Bitcoin Core, use this\n-template to create the initial release notes draft.*\n+0.21.0 Release Notes\n+====================\n \n-*The release notes draft is a temporary file that can be added to by anyone. See\n-[/doc/developer-notes.md#release-notes](/doc/developer-notes.md#release-notes)\n-for the process.*\n+Bitcoin Core version 0.21.0 is now available from:\n \n-*Create the draft, named* \"*version* Release Notes Draft\"\n-*(e.g. \"0.20.0 Release Notes Draft\"), as a collaborative wiki in:*\n-\n-https://github.com/bitcoin-core/bitcoin-devwiki/wiki/\n-\n-*Before the final release, move the notes back to this git repository.*\n-\n-*version* Release Notes Draft\n-===============================\n-\n-Bitcoin Core version *version* is now available from:\n-\n-  <https://bitcoincore.org/bin/bitcoin-core-*version*/>\n+  <https://bitcoincore.org/bin/bitcoin-core-0.21.0/>\n \n This release includes new features, various bug fixes and performance\n improvements, as well as updated translations.\n@@ -45,11 +31,6 @@ wallet versions of Bitcoin Core are generally supported.\n Compatibility\n ==============\n \n-During this release cycle, work has been done to ensure that the codebase is fully\n-compatible with C++17. The intention is to begin using C++17 features starting\n-with the 0.22.0 release. This means that a compiler that supports C++17 will be\n-required to compile 0.22.0.\n-\n Bitcoin Core is supported and extensively tested on operating systems\n using the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin\n Core should also work on most other Unix-like systems but is not as\n@@ -66,7 +47,7 @@ accommodate the storage of Tor v3 and other BIP155 addresses. This means that if\n the file is modified by 0.21.0 or newer then older versions will not be able to\n read it. Those old versions, in the event of a downgrade, will log an error\n message \"Incorrect keysize in addrman deserialization\" and will continue normal\n-operation as if the file was missing, creating a new empty one. (#19954)\n+operation as if the file was missing, creating a new empty one. (#19954, #20284)\n \n Notable changes\n ===============\n@@ -90,22 +71,64 @@ P2P and network changes\n   be enabled using the command line option `-whitelist=relay@127.0.0.1`.\n   (#19988)\n \n+- This release adds support for Tor version 3 hidden services, and rumoring them\n+  over the network to other peers using\n+  [BIP155](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki).\n+  Version 2 hidden services are still fully supported by Bitcoin Core, but the\n+  Tor network will start\n+  [deprecating](https://blog.torproject.org/v2-deprecation-timeline) them in the\n+  coming months. (#19954)\n+\n - The Tor onion service that is automatically created by setting the\n   `-listenonion` configuration parameter will now be created as a Tor v3 service\n   instead of Tor v2. The private key that was used for Tor v2 (if any) will be\n   left untouched in the `onion_private_key` file in the data directory (see\n   `-datadir`) and can be removed if not needed. Bitcoin Core will no longer\n   attempt to read it. The private key for the Tor v3 service will be saved in a\n   file named `onion_v3_private_key`. To use the deprecated Tor v2 service (not\n-  recommended), then `onion_private_key` can be copied over\n+  recommended), the `onion_private_key` can be copied over\n   `onion_v3_private_key`, e.g.\n   `cp -f onion_private_key onion_v3_private_key`. (#19954)\n \n+- The client writes a file (`anchors.dat`) at shutdown with the network addresses\n+  of the node\u2019s two outbound block-relay-only peers (so called \"anchors\"). The\n+  next time the node starts, it reads this file and attempts to reconnect to those\n+  same two peers. This prevents an attacker from using node restarts to trigger a\n+  complete change in peers, which would be something they could use as part of an\n+  eclipse attack. (#17428)\n+\n+- This release adds support for serving\n+  [BIP157](https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki) compact\n+  filters to peers on the network when enabled using\n+  `-blockfilterindex=1 -peercfilters=1`. (#16442)\n+\n+- This release adds support for signets\n+  ([BIP325](https://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki)) in\n+  addition to the existing mainnet, testnet, and regtest networks. Signets are\n+  centrally-controlled test networks, allowing them to be more predictable\n+  test environments than the older testnet. One public signet is maintained, and\n+  selectable using `-signet`. It is also possible to create personal signets.\n+  (#18267).\n+\n+- This release implements\n+  [BIP339](https://github.com/bitcoin/bips/blob/master/bip-0339.mediawiki)\n+  wtxid relay. When negotiated, transactions are announced using their wtxid\n+  instead of their txid. (#18044).\n+\n+- This release implements the proposed Taproot consensus rules\n+  ([BIP341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki) and\n+  [BIP342](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki)),\n+  without activation on mainnet. Experimentation with Taproot can be done on\n+  signet, where its rules are already active. (#19553)\n+\n Updated RPCs\n ------------\n \n+- The `getpeerinfo` RPC has a new `network` field that provides the type of\n+  network (\"ipv4\", \"ipv6\", or \"onion\") that the peer connected through. (#20002)\n+\n - The `getpeerinfo` RPC now has additional `last_block` and `last_transaction`\n-  fields that return the UNIX epoch time of the last block and the last valid\n+  fields that return the UNIX epoch time of the last block and the last *valid*\n   transaction received from each peer. (#19731)\n \n - `getnetworkinfo` now returns two new fields, `connections_in` and\n@@ -117,7 +140,7 @@ Updated RPCs\n   integers instead of signed 32-bit integers. This matches their treatment in\n   consensus logic. Versions greater than 2 continue to be non-standard\n   (matching previous behavior of smaller than 1 or greater than 2 being\n-  non-standard). Note that this includes the joinpsbt command, which combines\n+  non-standard). Note that this includes the `joinpsbt` command, which combines\n   partially-signed transactions by selecting the highest version number.\n   (#16525)\n \n@@ -131,17 +154,6 @@ Updated RPCs\n   whether initial broadcast of the transaction has been acknowledged by a\n   peer. `getmempoolancestors` and `getmempooldescendants` are also updated.\n \n-- The `bumpfee`, `fundrawtransaction`, `sendmany`, `sendtoaddress`, and `walletcreatefundedpsbt`\n-RPC commands have been updated to include two new fee estimation methods \"BTC/kB\" and \"sat/B\".\n-The target is the fee expressed explicitly in the given form. Note that use of this feature\n-will trigger BIP 125 (replace-by-fee) opt-in. (#11413)\n-\n-- In addition, the `estimate_mode` parameter is now case insensitive for all of\n-  the above RPC commands. (#11413)\n-\n-- The `bumpfee` command now uses `conf_target` rather than `confTarget` in the\n-  options. (#11413)\n-\n - The `getpeerinfo` RPC no longer returns the `banscore` field unless the configuration\n   option `-deprecatedrpc=banscore` is used. The `banscore` field will be fully\n   removed in the next major release. (#19469)\n@@ -160,6 +172,12 @@ will trigger BIP 125 (replace-by-fee) opt-in. (#11413)\n   it is recommended to instead use the `connection_type` field (it will return\n   `manual` when addnode is true). (#19725)\n \n+- The `getpeerinfo` RPC no longer returns the `whitelisted` field by default. \n+  This field will be fully removed in the next major release. It can be accessed \n+  with the configuration option `-deprecatedrpc=getpeerinfo_whitelisted`. However, \n+  it is recommended to instead use the `permissions` field to understand if specific \n+  privileges have been granted to the peer. (#19770)\n+\n - The `walletcreatefundedpsbt` RPC call will now fail with\n   `Insufficient funds` when inputs are manually selected but are not enough to cover\n   the outputs and fee. Additional inputs can automatically be added through the\n@@ -175,7 +193,7 @@ New RPCs\n \n - The `getindexinfo` RPC returns the actively running indices of the node,\n   including their current sync status and height. It also accepts an `index_name`\n-  to specify returning only the status of that index. (#19550)\n+  to specify returning the status of that index only. (#19550)\n \n Build System\n ------------\n@@ -206,24 +224,31 @@ Updated settings\n   according to RFC 4632. Netmasks are used in the `-rpcallowip` and `-whitelist`\n   configuration options and in the `setban` RPC. (#19628)\n \n-Changes to Wallet or GUI related settings can be found in the GUI or Wallet  section below.\n+- The `-blocksonly` setting now completely disables fee estimation. (#18766)\n+\n+Changes to Wallet or GUI related settings can be found in the GUI or Wallet section below.\n \n Tools and Utilities\n -------------------\n \n-- The `connections` field of `bitcoin-cli -getinfo` is expanded to return a JSON\n-  object with `in`, `out` and `total` numbers of peer connections. It previously\n-  returned a single integer value for the total number of peer connections. (#19405)\n+- A new `bitcoin-cli -netinfo` command provides a network peer connections\n+  dashboard that displays data from the `getpeerinfo` and `getnetworkinfo` RPCs\n+  in a human-readable format. An optional integer argument from `0` to `4` may\n+  be passed to see increasing levels of detail. (#19643)\n \n - A new `bitcoin-cli -generate` command, equivalent to RPC `generatenewaddress`\n   followed by `generatetoaddress`, can generate blocks for command line testing\n-  purposes. This is a client-side version of the\n-  former `generate` RPC. See the help for details. (#19133)\n+  purposes. This is a client-side version of the former `generate` RPC. See the\n+  help for details. (#19133)\n \n - The `bitcoin-cli -getinfo` command now displays the wallet name and balance for\n   each of the loaded wallets when more than one is loaded (e.g. in multiwallet\n   mode) and a wallet is not specified with `-rpcwallet`. (#18594)\n \n+- The `connections` field of `bitcoin-cli -getinfo` is now expanded to return a JSON\n+  object with `in`, `out` and `total` numbers of peer connections. It previously\n+  returned a single integer value for the total number of peer connections. (#19405)\n+\n New settings\n ------------\n \n@@ -273,10 +298,15 @@ Wallet\n   methods remain backwards compatible. (#15937)\n \n - A new `send` RPC with similar syntax to `walletcreatefundedpsbt`, including\n-  support for coin selection and a custom fee rate. The `send` RPC is\n-  experimental and may change in subsequent releases. Using it is encouraged\n-  once it's no longer experimental: `sendmany` and `sendtoaddress` may be\n-  deprecated in a future release. (#16378)\n+  support for coin selection and a custom fee rate, is added. The `send` RPC is\n+  experimental and may change in subsequent releases. (#16378)\n+\n+- The `estimate_mode` parameter is now case-insensitive in the `bumpfee`,\n+  `fundrawtransaction`, `sendmany`, `sendtoaddress`, `send` and\n+  `walletcreatefundedpsbt` RPCs. (#11413)\n+\n+- The `bumpfee` RPC now uses `conf_target` rather than `confTarget` in the\n+  options. (#11413)\n \n - `fundrawtransaction` and `walletcreatefundedpsbt` when used with the\n   `lockUnspents` argument now lock manually selected coins, in addition to\n@@ -285,8 +315,9 @@ Wallet\n \n - The `-zapwallettxes` startup option has been removed and its functionality\n   removed from the wallet.  This option was originally intended to allow for\n-  the fee bumping of transactions that did not signal RBF. This functionality\n-  has been superseded with the abandon transaction feature. (#19671)\n+  rescuing wallets which were affected by a malleability attack. More recently,\n+  it has been used in the fee bumping of transactions that did not signal RBF.\n+  This functionality has been superseded with the abandon transaction feature. (#19671)\n \n - The error code when no wallet is loaded, but a wallet RPC is called, has been\n   changed from `-32601` (method not found) to `-18` (wallet not found).\n@@ -303,7 +334,7 @@ new keys and addresses like previous releases did.\n \n New wallets can be created through the GUI (which has a more prominent create\n wallet option), through the `bitcoin-cli createwallet` or `bitcoin-wallet\n-create` commands, or the `createwallet` RPC. (#15454)\n+create` commands, or the `createwallet` RPC. (#15454, #20186)\n \n ### Experimental Descriptor Wallets\n \n@@ -312,16 +343,16 @@ is available. Additionally there may be some bugs and current functions may chan\n Bugs and missing functionality can be reported to the [issue tracker](https://github.com/bitcoin/bitcoin/issues).\n \n 0.21 introduces a new type of wallet - Descriptor Wallets. Descriptor Wallets store\n-scriptPubKey information using descriptors. This is in contrast to the Legacy Wallet\n-structure where keys are used to generate scriptPubKeys and addresses. Because of this\n+scriptPubKey information using output descriptors. This is in contrast to the Legacy Wallet\n+structure where keys are used to implicitly generate scriptPubKeys and addresses. Because of this\n shift to being script based instead of key based, many of the confusing things that Legacy\n Wallets do are not possible with Descriptor Wallets. Descriptor Wallets use a definition\n of \"mine\" for scripts which is simpler and more intuitive than that used by Legacy Wallets.\n Descriptor Wallets also uses different semantics for watch-only things and imports.\n \n As Descriptor Wallets are a new type of wallet, their introduction does not affect existing wallets.\n Users who already have a Bitcoin Core wallet can continue to use it as they did before without\n-any change in behavior. Newly created Legacy Wallets (which is the default type of wallet) will\n+any change in behavior. Newly created Legacy Wallets (which remains the default type of wallet) will\n behave as they did in previous versions of Bitcoin Core.\n \n The differences between Descriptor Wallets and Legacy Wallets are largely limited to non user facing\n@@ -330,15 +361,13 @@ as described below.\n \n #### Creating Descriptor Wallets\n \n-Descriptor Wallets are not created by default. They must be explicitly created using the\n-`createwallet` RPC or via the GUI. A `descriptors` option has been added to `createwallet`.\n-Setting `descriptors` to `true` will create a Descriptor Wallet instead of a Legacy Wallet.\n+Descriptor wallets are not the default type of wallet.\n \n In the GUI, a checkbox has been added to the Create Wallet Dialog to indicate that a\n-Descriptor Wallet should be created.\n+Descriptor Wallet should be created. And a `descriptors` option has been added to `createwallet` RPC.\n+Setting `descriptors` to `true` will create a Descriptor Wallet instead of a Legacy Wallet.\n \n-Without those options being set, a Legacy Wallet will be created instead. Additionally the\n-Default Wallet created upon first startup of Bitcoin Core will be a Legacy Wallet.\n+Without those options being set, a Legacy Wallet will be created instead.\n \n #### `IsMine` Semantics\n \n@@ -354,7 +383,7 @@ what scripts the wallet will consider to belong to it. Additionally the implemen\n in Descriptor Wallets is far simpler than for Legacy Wallets. Notably, in Legacy Wallets, `IsMine`\n allowed for users to take one type of address (e.g. P2PKH), mutate it into another address type\n (e.g. P2WPKH), and the wallet would still detect outputs sending to the new address type\n-even without that address being requested from the wallet. Descriptor Wallets does not\n+even without that address being requested from the wallet. Descriptor Wallets do not\n allow for this and will only watch for the addresses that were explicitly requested from the wallet.\n \n These changes to `IsMine` will make it easier to reason about what scripts the wallet will\n@@ -382,15 +411,15 @@ New export RPCs for Descriptor Wallets have not yet been added.\n \n The following RPCs are disabled for Descriptor Wallets:\n \n-* importprivkey\n-* importpubkey\n-* importaddress\n-* importwallet\n-* dumpprivkey\n-* dumpwallet\n-* importmulti\n-* addmultisigaddress\n-* sethdseed\n+* `importprivkey`\n+* `importpubkey`\n+* `importaddress`\n+* `importwallet`\n+* `dumpprivkey`\n+* `dumpwallet`\n+* `importmulti`\n+* `addmultisigaddress`\n+* `sethdseed`\n \n #### Watchonly Wallets\n \n@@ -410,7 +439,7 @@ workflow but the typical GUI Send, `sendtoaddress`, etc. workflows would still b\n non-functional.\n \n This issue is worsened if the wallet contains both single key (e.g. `wpkh(...)`) descriptors and such\n-multiple key descriptors as some transactions could be signed and broadast and others not. This is\n+multiple key descriptors as some transactions could be signed and broadcast and others not. This is\n due to some transactions containing only single key inputs, while others would contain both single\n key and multiple key inputs, depending on which are available and how the coin selection algorithm\n selects inputs. However this is not considered to be a supported use case; multisigs\n@@ -423,14 +452,42 @@ The change to using descriptors changes the default derivation paths used by Bit\n to adhere to BIP 44/49/84. Descriptors with different derivation paths can be imported without\n issue.\n \n+#### SQLite Database Backend\n+\n+Descriptor wallets use SQLite for the wallet file instead of the Berkeley DB used in legacy wallets.\n+This will break compatibility with any existing tooling that operates on wallets, however compatibility\n+was already being broken by the move to descriptors.\n+\n ### Wallet RPC changes\n \n - The `upgradewallet` RPC replaces the `-upgradewallet` command line option.\n   (#15761)\n+\n - The `settxfee` RPC will fail if the fee was set higher than the `-maxtxfee`\n   command line setting. The wallet will already fail to create transactions\n   with fees higher than `-maxtxfee`. (#18467)\n \n+- A new `fee_rate` parameter/option denominated in satoshis per vbyte (sat/vB)\n+  is introduced to the `sendtoaddress`, `sendmany`, `fundrawtransaction` and\n+  `walletcreatefundedpsbt` RPCs as well as to the experimental new `send`\n+  RPC. The legacy `feeRate` option in `fundrawtransaction` and\n+  `walletcreatefundedpsbt` still exists for setting a fee rate in BTC per 1,000\n+  vbytes (BTC/kvB), but it is expected to be deprecated soon to avoid\n+  confusion. For these RPCs, the fee rate error message is updated from BTC/kB\n+  to sat/vB and the help documentation in BTC/kB is updated to BTC/kvB. The\n+  `send` and `sendtoaddress` RPC examples are updated to aid users in creating\n+  transactions with explicit fee rates. (#20305, #11413)\n+\n+- The `bumpfee` RPC `fee_rate` option is changed from BTC/kvB to sat/vB and the\n+  help documentation is updated. Users are warned that this is a breaking API\n+  change, but it should be relatively benign: the large (100,000 times)\n+  difference between BTC/kvB and sat/vB units means that a transaction with a\n+  fee rate mistakenly calculated in BTC/kvB rather than sat/vB should raise an\n+  error due to the fee rate being set too low. In the worst case, the\n+  transaction may send at 1 sat/vB, but as Replace-by-Fee (BIP125 RBF) is active\n+  by default when an explicit fee rate is used, the transaction fee can be\n+  bumped. (#20305)\n+\n GUI changes\n -----------\n \n@@ -476,11 +533,804 @@ Tests\n   setting. The settings `-signetchallenge` and `-signetseednode` allow\n   enabling a custom signet.\n \n+- The `generateblock` RPC allows testers using regtest mode to\n+  generate blocks that consist of a custom set of transactions. (#17693)\n+\n+0.21.0 change log\n+=================\n+\n+### Consensus\n+- #18267 BIP-325: Signet (kallewoof)\n+- #20016 uint256: 1 is a constant (ajtowns)\n+- #20006 Fix misleading error message: Clean stack rule (sanket1729)\n+- #19953 Implement BIP 340-342 validation (Schnorr/taproot/tapscript) (sipa)\n+- #20169 Taproot follow-up: Make ComputeEntrySchnorr and ComputeEntryECDSA const to clarify contract (practicalswift)\n+\n+### Policy\n+- #18766 Disable fee estimation in blocksonly mode (darosior)\n+- #19630 Cleanup fee estimation code (darosior)\n+- #20165 Only relay Taproot spends if next block has it active (sipa)\n+\n+### Mining\n+- #17946 Fix GBT: Restore \"!segwit\" and \"csv\" to \"rules\" key (luke-jr)\n+\n+### Privacy\n+- #16432 Add privacy to the Overview page (hebasto)\n+- #18861 Do not answer GETDATA for to-be-announced tx (sipa)\n+- #18038 Mempool tracks locally submitted transactions to improve wallet privacy (amitiuttarwar)\n+- #19109 Only allow getdata of recently announced invs (sipa)\n+\n+### Block and transaction handling\n+- #17737 Add ChainstateManager, remove BlockManager global (jamesob)\n+- #18960 indexes: Add compact block filter headers cache (jnewbery)\n+- #13204 Faster sigcache nonce (JeremyRubin)\n+- #19088 Use std::chrono throughout some validation functions (fanquake)\n+- #19142 Make VerifyDB level 4 interruptible (MarcoFalke)\n+- #17994 Flush undo files after last block write (kallewoof)\n+- #18990 log: Properly log txs rejected from mempool (MarcoFalke)\n+- #18984 Remove unnecessary input blockfile SetPos (dgenr8)\n+- #19526 log: Avoid treating remote misbehvior as local system error (MarcoFalke)\n+- #18044 Use wtxid for transaction relay (sdaftuar)\n+- #18637 coins: allow cache resize after init (jamesob)\n+- #19854 Avoid locking CTxMemPool::cs recursively in simple cases (hebasto)\n+- #19478 Remove CTxMempool::mapLinks data structure member (JeremyRubin)\n+- #19927 Reduce direct `g_chainman` usage (dongcarl)\n+- #19898 log: print unexpected version warning in validation log category (n-thumann)\n+- #20036 signet: Add assumed values for default signet (MarcoFalke)\n+- #20048 chainparams: do not log signet startup messages for other chains (jonatack)\n+- #19339 re-delegate absurd fee checking from mempool to clients (glozow)\n+- #20035 signet: Fix uninitialized read in validation (MarcoFalke)\n+- #20157 Bugfix: chainparams: Add missing (always enabled) Taproot deployment for Signet (luke-jr)\n+- #20263 Update assumed chain params (MarcoFalke)\n+- #20372 Avoid signed integer overflow when loading a mempool.dat file with a malformed time field (practicalswift)\n+- #18621 script: Disallow silent bool -> cscript conversion (MarcoFalke)\n+- #18612, #18732 script: Remove undocumented and unused operator+ (MarcoFalke)\n+- #19317 Add a left-justified width field to `log2_work` component for a uniform debug.log output (jamesgmorgan)\n+\n+### P2P protocol and network code\n+- #18544 Limit BIP37 filter lifespan (active between `filterload`..`filterclear`) (theStack)\n+- #18806 Remove is{Empty,Full} flags from CBloomFilter, clarify CVE fix (theStack)\n+- #18512 Improve asmap checks and add sanity check (sipa)\n+- #18877 Serve cfcheckpt requests (jnewbery)\n+- #18895 Unbroadcast followups: rpcs, nLastResend, mempool sanity check (gzhao408)\n+- #19010 net processing: Add support for `getcfheaders` (jnewbery)\n+- #16939 Delay querying DNS seeds (ajtowns)\n+- #18807 Unbroadcast follow-ups (amitiuttarwar)\n+- #19044 Add support for getcfilters (jnewbery)\n+- #19084 improve code documentation for dns seed behaviour (ajtowns)\n+- #19260 disconnect peers that send filterclear + update existing filter msg disconnect logic (gzhao408)\n+- #19284 Add seed.bitcoin.wiz.biz to DNS seeds (wiz)\n+- #19322 split PushInventory() (jnewbery)\n+- #19204 Reduce inv traffic during IBD (MarcoFalke)\n+- #19470 banlist: log post-swept banlist size at startup (fanquake)\n+- #19191 Extract download permission from noban (MarcoFalke)\n+- #14033 Drop `CADDR_TIME_VERSION` checks now that `MIN_PEER_PROTO_VERSION` is greater (Empact)\n+- #19464 net, rpc: remove -banscore option, deprecate banscore in getpeerinfo (jonatack)\n+- #19514 [net/net processing] check banman pointer before dereferencing (jnewbery)\n+- #19512 banscore updates to gui, tests, release notes (jonatack)\n+- #19360 improve encapsulation of CNetAddr (vasild)\n+- #19217 disambiguate block-relay-only variable names from blocksonly variables (glowang)\n+- #19473 Add -networkactive option (hebasto)\n+- #19472 [net processing] Reduce `cs_main` scope in MaybeDiscourageAndDisconnect() (jnewbery)\n+- #19583 clean up Misbehaving() (jnewbery)\n+- #19534 save the network type explicitly in CNetAddr (vasild)\n+- #19569 Enable fetching of orphan parents from wtxid peers (sipa)\n+- #18991 Cache responses to GETADDR to prevent topology leaks (naumenkogs)\n+- #19596 Deduplicate parent txid loop of requested transactions and missing parents of orphan transactions (sdaftuar)\n+- #19316 Cleanup logic around connection types (amitiuttarwar)\n+- #19070 Signal support for compact block filters with `NODE_COMPACT_FILTERS` (jnewbery)\n+- #19705 Shrink CAddress from 48 to 40 bytes on x64 (vasild)\n+- #19704 Move ProcessMessage() to PeerLogicValidation (jnewbery)\n+- #19628 Change CNetAddr::ip to have flexible size (vasild)\n+- #19797 Remove old check for 3-byte shifted IP addresses from pre-0.2.9 nodes (#19797)\n+- #19607 Add Peer struct for per-peer data in net processing (jnewbery)\n+- #19857 improve nLastBlockTime and nLastTXTime documentation (jonatack)\n+- #19724 Cleanup connection types- followups (amitiuttarwar)\n+- #19670 Protect localhost and block-relay-only peers from eviction (sdaftuar)\n+- #19728 Increase the ip address relay branching factor for unreachable networks (sipa)\n+- #19879 Miscellaneous wtxid followups (amitiuttarwar)\n+- #19697 Improvements on ADDR caching (naumenkogs)\n+- #17785 Unify Send and Receive protocol versions (hebasto)\n+- #19845 CNetAddr: add support to (un)serialize as ADDRv2 (vasild)\n+- #19107 Move all header verification into the network layer, extend logging (troygiorshev)\n+- #20003 Exit with error message if -proxy is specified without arguments (instead of continuing without proxy server) (practicalswift)\n+- #19991 Use alternative port for incoming Tor connections (hebasto)\n+- #19723 Ignore unknown messages before VERACK (sdaftuar)\n+- #19954 Complete the BIP155 implementation and upgrade to TORv3 (vasild)\n+- #20119 BIP155 follow-ups (sipa)\n+- #19988 Overhaul transaction request logic (sipa)\n+- #17428 Try to preserve outbound block-relay-only connections during restart (hebasto)\n+- #19911 Guard `vRecvGetData` with `cs_vRecv` and `orphan_work_set` with `g_cs_orphans` (narula)\n+- #19753 Don't add AlreadyHave transactions to recentRejects (troygiorshev)\n+- #20187 Test-before-evict bugfix and improvements for block-relay-only peers (sdaftuar)\n+- #20237 Hardcoded seeds update for 0.21 (laanwj)\n+- #20212 Fix output of peer address in version message (vasild)\n+- #20284 Ensure old versions don't parse peers.dat (vasild)\n+- #20405 Avoid calculating onion address checksum when version is not 3 (lontivero)\n+- #20564 Don't send 'sendaddrv2' to pre-70016 software, and send before 'verack' (sipa)\n+- #20660 Move signet onion seed from v2 to v3 (Sjors)\n+\n+### Wallet\n+- #18262 Exit selection when `best_waste` is 0 (achow101)\n+- #17824 Prefer full destination groups in coin selection (fjahr)\n+- #17219 Allow transaction without change if keypool is empty (Sjors)\n+- #15761 Replace -upgradewallet startup option with upgradewallet RPC (achow101)\n+- #18671 Add BlockUntilSyncedToCurrentChain to dumpwallet (MarcoFalke)\n+- #16528 Native Descriptor Wallets using DescriptorScriptPubKeyMan (achow101)\n+- #18777 Recommend absolute path for dumpwallet (MarcoFalke)\n+- #16426 Reverse `cs_main`, `cs_wallet` lock order and reduce `cs_main` locking (ariard)\n+- #18699 Avoid translating RPC errors (MarcoFalke)\n+- #18782 Make sure no DescriptorScriptPubKeyMan or WalletDescriptor members are left uninitialized after construction (practicalswift)\n+- #9381 Remove CWalletTx merging logic from AddToWallet (ryanofsky)\n+- #16946 Include a checksum of encrypted private keys (achow101)\n+- #17681 Keep inactive seeds after sethdseed and derive keys from them as needed (achow101)\n+- #18918 Move salvagewallet into wallettool (achow101)\n+- #14988 Fix for confirmed column in csv export for payment to self transactions (benthecarman)\n+- #18275 Error if an explicit fee rate was given but the needed fee rate differed (kallewoof)\n+- #19054 Skip hdKeypath of 'm' when determining inactive hd seeds (achow101)\n+- #17938 Disallow automatic conversion between disparate hash types (Empact)\n+- #19237 Check size after unserializing a pubkey (elichai)\n+- #11413 sendtoaddress/sendmany: Add explicit feerate option (kallewoof)\n+- #18850 Fix ZapSelectTx to sync wallet spends (bvbfan)\n+- #18923 Never schedule MaybeCompactWalletDB when `-flushwallet` is off (MarcoFalke)\n+- #19441 walletdb: Don't reinitialize desc cache with multiple cache entries (achow101)\n+- #18907 walletdb: Don't remove database transaction logs and instead error (achow101)\n+- #19334 Introduce WalletDatabase abstract class (achow101)\n+- #19335 Cleanup and separate BerkeleyDatabase and BerkeleyBatch (achow101)\n+- #19102 Introduce and use DummyDatabase instead of dummy BerkeleyDatabase (achow101)\n+- #19568 Wallet should not override signing errors (fjahr)\n+- #17204 Do not turn `OP_1NEGATE` in scriptSig into `0x0181` in signing code (sipa) (meshcollider)\n+- #19457 Cleanup wallettool salvage and walletdb extraneous declarations (achow101)\n+- #15937 Add loadwallet and createwallet `load_on_startup` options (ryanofsky)\n+- #16841 Replace GetScriptForWitness with GetScriptForDestination (meshcollider)\n+- #14582 always do avoid partial spends if fees are within a specified range (kallewoof)\n+- #19743 -maxapsfee follow-up (kallewoof)\n+- #19289 GetWalletTx and IsMine require `cs_wallet` lock (promag)\n+- #19671 Remove -zapwallettxes (achow101)\n+- #19805 Avoid deserializing unused records when salvaging (achow101)\n+- #19754 wallet, gui: Reload previously loaded wallets on startup (achow101)\n+- #19738 Avoid multiple BerkeleyBatch in DelAddressBook (promag)\n+- #19919 bugfix: make LoadWallet assigns status always (AkioNak)\n+- #16378 The ultimate send RPC (Sjors)\n+- #15454 Remove the automatic creation and loading of the default wallet (achow101)\n+- #19501 `send*` RPCs in the wallet returns the \"fee reason\" (stackman27)\n+- #20130 Remove db mode string (S3RK)\n+- #19077 Add sqlite as an alternative wallet database and use it for new descriptor wallets (achow101)\n+- #20125 Expose database format in getwalletinfo (promag)\n+- #20198 Show name, format and if uses descriptors in bitcoin-wallet tool (jonasschnelli)\n+- #20216 Fix buffer over-read in SQLite file magic check (theStack)\n+- #20186 Make -wallet setting not create wallets (ryanofsky)\n+- #20230 Fix bug when just created encrypted wallet cannot get address (hebasto)\n+- #20282 Change `upgradewallet` return type to be an object (jnewbery)\n+- #20220 Explicit fee rate follow-ups/fixes for 0.21 (jonatack)\n+- #20199 Ignore (but warn) on duplicate -wallet parameters (jonasschnelli)\n+- #20324 Set DatabaseStatus::SUCCESS in MakeSQLiteDatabase (MarcoFalke)\n+- #20266 Fix change detection of imported internal descriptors (achow101)\n+- #20153 Do not import a descriptor with hardened derivations into a watch-only wallet (S3RK)\n+- #20344 Fix scanning progress calculation for single block range (theStack)\n+- #19502 Bugfix: Wallet: Soft-fail exceptions within ListWalletDir file checks (luke-jr)\n+- #20378 Fix potential division by 0 in WalletLogPrintf (jonasschnelli)\n+- #18836 Upgradewallet fixes and additional tests (achow101)\n+- #20139 Do not return warnings from UpgradeWallet() (stackman27)\n+- #20305 Introduce `fee_rate` sat/vB param/option (jonatack)\n+- #20426 Allow zero-fee fundrawtransaction/walletcreatefundedpsbt and other fixes (jonatack)\n+- #20573 wallet, bugfix: allow send with string `fee_rate` amounts (jonatack)\n+\n+### RPC and other APIs\n+- #18574 cli: Call getbalances.ismine.trusted instead of getwalletinfo.balance (jonatack)\n+- #17693 Add `generateblock` to mine a custom set of transactions (andrewtoth)\n+- #18495 Remove deprecated migration code (vasild)\n+- #18493 Remove deprecated \"size\" from mempool txs (vasild)\n+- #18467 Improve documentation and return value of settxfee (fjahr)\n+- #18607 Fix named arguments in documentation (MarcoFalke)\n+- #17831 doc: Fix and extend getblockstats examples (asoltys)\n+- #18785 Prevent valgrind false positive in `rest_blockhash_by_height` (ryanofsky)\n+- #18999 log: Remove \"No rpcpassword set\" from logs (MarcoFalke)\n+- #19006 Avoid crash when `g_thread_http` was never started (MarcoFalke)\n+- #18594 cli: Display multiwallet balances in -getinfo (jonatack)\n+- #19056 Make gettxoutsetinfo/GetUTXOStats interruptible (MarcoFalke)\n+- #19112 Remove special case for unknown service flags (MarcoFalke)\n+- #18826 Expose txinwitness for coinbase in JSON form from RPC (rvagg)\n+- #19282 Rephrase generatetoaddress help, and use `PACKAGE_NAME` (luke-jr)\n+- #16377 don't automatically append inputs in walletcreatefundedpsbt (Sjors)\n+- #19200 Remove deprecated getaddressinfo fields (jonatack)\n+- #19133 rpc, cli, test: add bitcoin-cli -generate command (jonatack)\n+- #19469 Deprecate banscore field in getpeerinfo (jonatack)\n+- #16525 Dump transaction version as an unsigned integer in RPC/TxToUniv (TheBlueMatt)\n+- #19555 Deduplicate WriteHDKeypath() used in decodepsbt (theStack)\n+- #19589 Avoid useless mempool query in gettxoutproof (MarcoFalke)\n+- #19585 RPCResult Type of MempoolEntryDescription should be OBJ (stylesuxx)\n+- #19634 Document getwalletinfo's `unlocked_until` field as optional (justinmoon)\n+- #19658 Allow RPC to fetch all addrman records and add records to addrman (jnewbery)\n+- #19696 Fix addnode remove command error (fjahr)\n+- #18654 Separate bumpfee's psbt creation function into psbtbumpfee (achow101)\n+- #19655 Catch listsinceblock `target_confirmations` exceeding block count (adaminsky)\n+- #19644 Document returned error fields as optional if applicable (theStack)\n+- #19455 rpc generate: print useful help and error message (jonatack)\n+- #19550 Add listindices RPC (fjahr)\n+- #19169 Validate provided keys for `query_options` parameter in listunspent (PastaPastaPasta)\n+- #18244 fundrawtransaction and walletcreatefundedpsbt also lock manually selected coins (Sjors)\n+- #14687 zmq: Enable TCP keepalive (mruddy)\n+- #19405 Add network in/out connections to `getnetworkinfo` and `-getinfo` (jonatack)\n+- #19878 rawtransaction: Fix argument in combinerawtransaction help message (pinheadmz)\n+- #19940 Return fee and vsize from testmempoolaccept (gzhao408)\n+- #13686 zmq: Small cleanups in the ZMQ code (domob1812)\n+- #19386, #19528, #19717, #19849, #19994 Assert that RPCArg names are equal to CRPCCommand ones (MarcoFalke)\n+- #19725 Add connection type to getpeerinfo, improve logs (amitiuttarwar)\n+- #19969 Send RPC bug fix and touch-ups (Sjors)\n+- #18309 zmq: Add support to listen on multiple interfaces (n-thumann)\n+- #20055 Set HTTP Content-Type in bitcoin-cli (laanwj)\n+- #19956 Improve invalid vout value rpc error message (n1rna)\n+- #20101 Change no wallet loaded message to be clearer (achow101)\n+- #19998 Add `via_tor` to `getpeerinfo` output (hebasto)\n+- #19770 getpeerinfo: Deprecate \"whitelisted\" field (replaced by \"permissions\") (luke-jr)\n+- #20120 net, rpc, test, bugfix: update GetNetworkName, GetNetworksInfo, regression tests (jonatack)\n+- #20595 Improve heuristic hex transaction decoding (sipa)\n+- #20731 Add missing description of vout in getrawtransaction help text (benthecarman)\n+- #19328 Add gettxoutsetinfo `hash_type` option (fjahr)\n+- #19731 Expose nLastBlockTime/nLastTXTime as last `block/last_transaction` in getpeerinfo (jonatack)\n+- #19572 zmq: Create \"sequence\" notifier, enabling client-side mempool tracking (instagibbs)\n+- #20002 Expose peer network in getpeerinfo; simplify/improve -netinfo (jonatack)\n+\n+### GUI\n+- #17905 Avoid redundant tx status updates (ryanofsky)\n+- #18646 Use `PACKAGE_NAME` in exception message (fanquake)\n+- #17509 Save and load PSBT (Sjors)\n+- #18769 Remove bug fix for Qt < 5.5 (10xcryptodev)\n+- #15768 Add close window shortcut (IPGlider)\n+- #16224 Bilingual GUI error messages (hebasto)\n+- #18922 Do not translate InitWarning messages in debug.log (hebasto)\n+- #18152 Use NotificationStatus enum for signals to GUI (hebasto)\n+- #18587 Avoid wallet tryGetBalances calls in WalletModel::pollBalanceChanged (ryanofsky)\n+- #17597 Fix height of QR-less ReceiveRequestDialog (hebasto)\n+- #17918 Hide non PKHash-Addresses in signing address book (emilengler)\n+- #17956 Disable unavailable context menu items in transactions tab (kristapsk)\n+- #17968 Ensure that ModalOverlay is resized properly (hebasto)\n+- #17993 Balance/TxStatus polling update based on last block hash (furszy)\n+- #18424 Use parent-child relation to manage lifetime of OptionsModel object (hebasto)\n+- #18452 Fix shutdown when `waitfor*` cmds are called from RPC console (hebasto)\n+- #15202 Add Close All Wallets action (promag)\n+- #19132 lock `cs_main`, `m_cached_tip_mutex` in that order (vasild)\n+- #18898 Display warnings as rich text (hebasto)\n+- #19231 add missing translation.h include to fix build (fanquake)\n+- #18027 \"PSBT Operations\" dialog (gwillen)\n+- #19256 Change combiner for signals to `optional_last_value` (fanquake)\n+- #18896 Reset toolbar after all wallets are closed (hebasto)\n+- #18993 increase console command max length (10xcryptodev)\n+- #19323 Fix regression in *txoutset* in GUI console (hebasto)\n+- #19210 Get rid of cursor in out-of-focus labels (hebasto)\n+- #19011 Reduce `cs_main` lock accumulation during GUI startup (jonasschnelli)\n+- #19844 Remove usage of boost::bind (fanquake)\n+- #20479 Fix QPainter non-determinism on macOS (0.21 backport) (laanwj)\n+- gui#6 Do not truncate node flag strings in debugwindow peers details tab (Saibato)\n+- gui#8 Fix regression in TransactionTableModel (hebasto)\n+- gui#17 doc: Remove outdated comment in TransactionTablePriv (MarcoFalke)\n+- gui#20 Wrap tooltips in the intro window (hebasto)\n+- gui#30 Disable the main window toolbar when the modal overlay is shown (hebasto)\n+- gui#34 Show permissions instead of whitelisted (laanwj)\n+- gui#35 Parse params directly instead of through node (ryanofsky)\n+- gui#39 Add visual accenting for the 'Create new receiving address' button (hebasto)\n+- gui#40 Clarify block height label (hebasto)\n+- gui#43 bugfix: Call setWalletActionsEnabled(true) only for the first wallet (hebasto)\n+- gui#97 Relax GUI freezes during IBD (jonasschnelli)\n+- gui#71 Fix visual quality of text in QR image (hebasto)\n+- gui#96 Slight improve create wallet dialog (Sjors)\n+- gui#102 Fix SplashScreen crash when run with -disablewallet (hebasto)\n+- gui#116 Fix unreasonable default size of the main window without loaded wallets (hebasto)\n+- gui#120 Fix multiwallet transaction notifications (promag)\n+\n+### Build system\n+- #18504 Drop bitcoin-tx and bitcoin-wallet dependencies on libevent (ryanofsky)\n+- #18586 Bump gitian descriptors to 0.21 (laanwj)\n+- #17595 guix: Enable building for `x86_64-w64-mingw32` target (dongcarl)\n+- #17929 add linker optimisation flags to gitian & guix (Linux) (fanquake)\n+- #18556 Drop make dist in gitian builds (hebasto)\n+- #18088 ensure we aren't using GNU extensions (fanquake)\n+- #18741 guix: Make source tarball using git-archive (dongcarl)\n+- #18843 warn on potentially uninitialized reads (vasild)\n+- #17874 make linker checks more robust (fanquake)\n+- #18535 remove -Qunused-arguments workaround for clang + ccache (fanquake)\n+- #18743 Add --sysroot option to mac os native compile flags (ryanofsky)\n+- #18216 test, build: Enable -Werror=sign-compare (Empact)\n+- #18928 don't pass -w when building for Windows (fanquake)\n+- #16710 Enable -Wsuggest-override if available (hebasto)\n+- #18738 Suppress -Wdeprecated-copy warnings (hebasto)\n+- #18862 Remove fdelt_chk back-compat code and sanity check (fanquake)\n+- #18887 enable -Werror=gnu (vasild)\n+- #18956 enforce minimum required Windows version (7) (fanquake)\n+- #18958 guix: Make V=1 more powerful for debugging (dongcarl)\n+- #18677 Multiprocess build support (ryanofsky)\n+- #19094 Only allow ASCII identifiers (laanwj)\n+- #18820 Propagate well-known vars into depends (dongcarl)\n+- #19173 turn on --enable-c++17 by --enable-fuzz (vasild)\n+- #18297 Use pkg-config in BITCOIN_QT_CONFIGURE for all hosts including Windows (hebasto)\n+- #19301 don't warn when doxygen isn't found (fanquake)\n+- #19240 macOS toolchain simplification and bump (dongcarl)\n+- #19356 Fix search for brew-installed BDB 4 on OS X (gwillen)\n+- #19394 Remove unused `RES_IMAGES` (Bushstar)\n+- #19403 improve `__builtin_clz*` detection (fanquake)\n+- #19375 target Windows 7 when building libevent and fix ipv6 usage (fanquake)\n+- #19331 Do not include server symbols in wallet (MarcoFalke)\n+- #19257 remove BIP70 configure option (fanquake)\n+- #18288 Add MemorySanitizer (MSan) in Travis to detect use of uninitialized memory (practicalswift)\n+- #18307 Require pkg-config for all of the hosts (hebasto)\n+- #19445 Update msvc build to use ISO standard C++17 (sipsorcery)\n+- #18882 fix -Wformat-security check when compiling with GCC (fanquake)\n+- #17919 Allow building with system clang (dongcarl)\n+- #19553 pass -fcommon when building genisoimage (fanquake)\n+- #19565 call `AC_PATH_TOOL` for dsymutil in macOS cross-compile (fanquake)\n+- #19530 build LTO support into Apple's ld64 (theuni)\n+- #19525 add -Wl,-z,separate-code to hardening flags (fanquake)\n+- #19667 set minimum required Boost to 1.58.0 (fanquake)\n+- #19672 make clean removes .gcda and .gcno files from fuzz directory (Crypt-iQ)\n+- #19622 Drop ancient hack in gitian-linux descriptor (hebasto)\n+- #19688 Add support for llvm-cov (hebasto)\n+- #19718 Add missed gcov files to 'make clean' (hebasto)\n+- #19719 Add Werror=range-loop-analysis (MarcoFalke)\n+- #19015 Enable some commonly enabled compiler diagnostics (practicalswift)\n+- #19689 build, qt: Add Qt version checking (hebasto)\n+- #17396 modest Android improvements (icota)\n+- #18405 Drop all of the ZeroMQ patches (hebasto)\n+- #15704 Move Win32 defines to configure.ac to ensure they are globally defined (luke-jr)\n+- #19761 improve sed robustness by not using sed (fanquake)\n+- #19758 Drop deprecated and unused `GUARDED_VAR` and `PT_GUARDED_VAR` annotations (hebasto)\n+- #18921 add stack-clash and control-flow protection options to hardening flags (fanquake)\n+- #19803 Bugfix: Define and use `HAVE_FDATASYNC` correctly outside LevelDB (luke-jr)\n+- #19685 CMake invocation cleanup (dongcarl)\n+- #19861 add /usr/local/ to `LCOV_FILTER_PATTERN` for macOS builds (Crypt-iQ)\n+- #19916 allow user to specify `DIR_FUZZ_SEED_CORPUS` for `cov_fuzz` (Crypt-iQ)\n+- #19944 Update secp256k1 subtree (including BIP340 support) (sipa)\n+- #19558 Split pthread flags out of ldflags and dont use when building libconsensus (fanquake)\n+- #19959 patch qt libpng to fix powerpc build (fanquake)\n+- #19868 Fix target name (hebasto)\n+- #19960 The vcpkg tool has introduced a proper way to use manifests (sipsorcery)\n+- #20065 fuzz: Configure check for main function (MarcoFalke)\n+- #18750 Optionally skip external warnings (vasild)\n+- #20147 Update libsecp256k1 (endomorphism, test improvements) (sipa)\n+- #20156 Make sqlite support optional (compile-time) (luke-jr)\n+- #20318 Ensure source tarball has leading directory name (MarcoFalke)\n+- #20447 Patch `qt_intersect_spans` to avoid non-deterministic behavior in LLVM 8 (achow101)\n+- #20505 Avoid secp256k1.h include from system (dergoegge)\n+- #20527 Do not ignore Homebrew's SQLite on macOS (hebasto)\n+- #20478 Don't set BDB flags when configuring without (jonasschnelli)\n+- #20563 Check that Homebrew's berkeley-db4 package is actually installed (hebasto)\n+- #19493 Fix clang build on Mac (bvbfan)\n+\n+### Tests and QA\n+- #18593 Complete impl. of `msg_merkleblock` and `wait_for_merkleblock` (theStack)\n+- #18609 Remove REJECT message code (hebasto)\n+- #18584 Check that the version message does not leak the local address (MarcoFalke)\n+- #18597 Extend `wallet_dump` test to cover comments (MarcoFalke)\n+- #18596 Try once more when RPC connection fails on Windows (MarcoFalke)\n+- #18451 shift coverage from getunconfirmedbalance to getbalances (jonatack)\n+- #18631 appveyor: Disable functional tests for now (MarcoFalke)\n+- #18628 Add various low-level p2p tests (MarcoFalke)\n+- #18615 Avoid accessing free'd memory in `validation_chainstatemanager_tests` (MarcoFalke)\n+- #18571 fuzz: Disable debug log file (MarcoFalke)\n+- #18653 add coverage for bitcoin-cli -rpcwait (jonatack)\n+- #18660 Verify findCommonAncestor always initializes outputs (ryanofsky)\n+- #17669 Have coins simulation test also use CCoinsViewDB (jamesob)\n+- #18662 Replace gArgs with local argsman in bench (MarcoFalke)\n+- #18641 Create cached blocks not in the future (MarcoFalke)\n+- #18682 fuzz: `http_request` workaround for libevent < 2.1.1 (theStack)\n+- #18692 Bump timeout in `wallet_import_rescan` (MarcoFalke)\n+- #18695 Replace boost::mutex with std::mutex (hebasto)\n+- #18633 Properly raise FailedToStartError when rpc shutdown before warmup finished (MarcoFalke)\n+- #18675 Don't initialize PrecomputedTransactionData in txvalidationcache tests (jnewbery)\n+- #18691 Add `wait_for_cookie_credentials()` to framework for rpcwait tests (jonatack)\n+- #18672 Add further BIP37 size limit checks to `p2p_filter.py` (theStack)\n+- #18721 Fix linter issue (hebasto)\n+- #18384 More specific `feature_segwit` test error messages and fixing incorrect comments (gzhao408)\n+- #18575 bench: Remove requirement that all benches use same testing setup (MarcoFalke)\n+- #18690 Check object hashes in `wait_for_getdata` (robot-visions)\n+- #18712 display command line options passed to `send_cli()` in debug log (jonatack)\n+- #18745 Check submitblock return values (MarcoFalke)\n+- #18756 Use `wait_for_getdata()` in `p2p_compactblocks.py` (theStack)\n+- #18724 Add coverage for -rpcwallet cli option (jonatack)\n+- #18754 bench: Add caddrman benchmarks (vasild)\n+- #18585 Use zero-argument super() shortcut (Python 3.0+) (theStack)\n+- #18688 fuzz: Run in parallel (MarcoFalke)\n+- #18770 Remove raw-tx byte juggling in `mempool_reorg` (MarcoFalke)\n+- #18805 Add missing `sync_all` to `wallet_importdescriptors.py` (achow101)\n+- #18759 bench: Start nodes with -nodebuglogfile (MarcoFalke)\n+- #18774 Added test for upgradewallet RPC (brakmic)\n+- #18485 Add `mempool_updatefromblock.py` (hebasto)\n+- #18727 Add CreateWalletFromFile test (ryanofsky)\n+- #18726 Check misbehavior more independently in `p2p_filter.py` (robot-visions)\n+- #18825 Fix message for `ECC_InitSanityCheck` test (fanquake)\n+- #18576 Use unittest for `test_framework` unit testing (gzhao408)\n+- #18828 Strip down previous releases boilerplate (MarcoFalke)\n+- #18617 Add factor option to adjust test timeouts (brakmic)\n+- #18855 `feature_backwards_compatibility.py` test downgrade after upgrade (achow101)\n+- #18864 Add v0.16.3 backwards compatibility test, bump v0.19.0.1 to v0.19.1 (Sjors)\n+- #18917 fuzz: Fix vector size problem in system fuzzer (brakmic)\n+- #18901 fuzz: use std::optional for `sep_pos_opt` variable (brakmic)\n+- #18888 Remove RPCOverloadWrapper boilerplate (MarcoFalke)\n+- #18952 Avoid os-dependent path (fametrano)\n+- #18938 Fill fuzzing coverage gaps for functions in consensus/validation.h, primitives/block.h and util/translation.h (practicalswift)\n+- #18986 Add capability to disable RPC timeout in functional tests (rajarshimaitra)\n+- #18530 Add test for -blocksonly and -whitelistforcerelay param interaction (glowang)\n+- #19014 Replace `TEST_PREVIOUS_RELEASES` env var with `test_framework` option (MarcoFalke)\n+- #19052 Don't limit fuzzing inputs to 1 MB for afl-fuzz (now: \u221e \u2200 fuzzers) (practicalswift)\n+- #19060 Remove global `wait_until` from `p2p_getdata` (MarcoFalke)\n+- #18926 Pass ArgsManager into `getarg_tests` (glowang)\n+- #19110 Explain that a bug should be filed when the tests fail (MarcoFalke)\n+- #18965 Implement `base58_decode` (10xcryptodev)\n+- #16564 Always define the `raii_event_tests` test suite (candrews)\n+- #19122 Add missing `sync_blocks` to `wallet_hd` (MarcoFalke)\n+- #18875 fuzz: Stop nodes in `process_message*` fuzzers (MarcoFalke)\n+- #18974 Check that invalid witness destinations can not be imported (MarcoFalke)\n+- #18210 Type hints in Python tests (kiminuo)\n+- #19159 Make valgrind.supp work on aarch64 (MarcoFalke)\n+- #19082 Moved the CScriptNum asserts into the unit test in script.py (gillichu)\n+- #19172 Do not swallow flake8 exit code (hebasto)\n+- #19188 Avoid overwriting the NodeContext member of the testing setup [-Wshadow-field] (MarcoFalke)\n+- #18890 `disconnect_nodes` should warn if nodes were already disconnected (robot-visions)\n+- #19227 change blacklist to blocklist (TrentZ)\n+- #19230 Move base58 to own module to break circular dependency (sipa)\n+- #19083 `msg_mempool`, `fRelay`, and other bloomfilter tests (gzhao408)\n+- #16756 Connection eviction logic tests (mzumsande)\n+- #19177 Fix and clean `p2p_invalid_messages` functional tests (troygiorshev)\n+- #19264 Don't import asyncio to test magic bytes (jnewbery)\n+- #19178 Make `mininode_lock` non-reentrant (jnewbery)\n+- #19153 Mempool compatibility test (S3RK)\n+- #18434 Add a test-security target and run it in CI (fanquake)\n+- #19252 Wait for disconnect in `disconnect_p2ps` + bloomfilter test followups (gzhao408)\n+- #19298 Add missing `sync_blocks` (MarcoFalke)\n+- #19304 Check that message sends successfully when header is split across two buffers (troygiorshev)\n+- #19208 move `sync_blocks` and `sync_mempool` functions to `test_framework.py` (ycshao)\n+- #19198 Check that peers with forcerelay permission are not asked to feefilter (MarcoFalke)\n+- #19351 add two edge case tests for CSubNet (vasild)\n+- #19272 net, test: invalid p2p messages and test framework improvements (jonatack)\n+- #19348 Bump linter versions (duncandean)\n+- #19366 Provide main(\u2026) function in fuzzer. Allow building uninstrumented harnesses with --enable-fuzz (practicalswift)\n+- #19412 move `TEST_RUNNER_EXTRA` into native tsan setup (fanquake)\n+- #19368 Improve functional tests compatibility with BSD/macOS (S3RK)\n+- #19028 Set -logthreadnames in unit tests (MarcoFalke)\n+- #18649 Add std::locale::global to list of locale dependent functions (practicalswift)\n+- #19140 Avoid fuzzer-specific nullptr dereference in libevent when handling PROXY requests (practicalswift)\n+- #19214 Auto-detect SHA256 implementation in benchmarks (sipa)\n+- #19353 Fix mistakenly swapped \"previous\" and \"current\" lock orders (hebasto)\n+- #19533 Remove unnecessary `cs_mains` in `denialofservice_tests` (jnewbery)\n+- #19423 add functional test for txrelay during and after IBD (gzhao408)\n+- #16878 Fix non-deterministic coverage of test `DoS_mapOrphans` (davereikher)\n+- #19548 fuzz: add missing overrides to `signature_checker` (jonatack)\n+- #19562 Fix fuzzer compilation on macOS (freenancial)\n+- #19370 Static asserts for consistency of fee defaults (domob1812)\n+- #19599 clean `message_count` and `last_message` (troygiorshev)\n+- #19597 test decodepsbt fee calculation (count input value only once per UTXO) (theStack)\n+- #18011 Replace current benchmarking framework with nanobench (martinus)\n+- #19489 Fail `wait_until` early if connection is lost (MarcoFalke)\n+- #19340 Preserve the `LockData` initial state if \"potential deadlock detected\" exception thrown (hebasto)\n+- #19632 Catch decimal.InvalidOperation from `TestNodeCLI#send_cli` (Empact)\n+- #19098 Remove duplicate NodeContext hacks (ryanofsky)\n+- #19649 Restore test case for p2p transaction blinding (instagibbs)\n+- #19657 Wait until `is_connected` in `add_p2p_connection` (MarcoFalke)\n+- #19631 Wait for 'cmpctblock' in `p2p_compactblocks` when it is expected (Empact)\n+- #19674 use throwaway _ variable for unused loop counters (theStack)\n+- #19709 Fix 'make cov' with clang (hebasto)\n+- #19564 `p2p_feefilter` improvements (logging, refactoring, speedup) (theStack)\n+- #19756 add `sync_all` to fix race condition in wallet groups test (kallewoof)\n+- #19727 Removing unused classes from `p2p_leak.py` (dhruv)\n+- #19722 Add test for getblockheader verboseness (torhte)\n+- #19659 Add a seed corpus generation option to the fuzzing `test_runner` (darosior)\n+- #19775 Activate segwit in TestChain100Setup (MarcoFalke)\n+- #19760 Remove confusing mininode terminology (jnewbery)\n+- #19752 Update `wait_until` usage in tests not to use the one from utils (slmtpz)\n+- #19839 Set appveyor VM version to previous Visual Studio 2019 release (sipsorcery)\n+- #19830 Add tsan supp for leveldb::DBImpl::DeleteObsoleteFiles (MarcoFalke)\n+- #19710 bench: Prevent thread oversubscription and decreases the variance of result values (hebasto)\n+- #19842 Update the vcpkg checkout commit ID in appveyor config (sipsorcery)\n+- #19507 Expand functional zmq transaction tests (instagibbs)\n+- #19816 Rename wait until helper to `wait_until_helper` (MarcoFalke)\n+- #19859 Fixes failing functional test by changing version (n-thumann)\n+- #19887 Fix flaky `wallet_basic` test (fjahr)\n+- #19897 Change `FILE_CHAR_BLOCKLIST` to `FILE_CHARS_DISALLOWED` (verretor)\n+- #19800 Mockwallet (MarcoFalke)\n+- #19922 Run `rpc_txoutproof.py` even with wallet disabled (MarcoFalke)\n+- #19936 batch rpc with params (instagibbs)\n+- #19971 create default wallet in extended tests (Sjors)\n+- #19781 add parameterized constructor for `msg_sendcmpct()` (theStack)\n+- #19963 Clarify blocksonly whitelistforcerelay test (t-bast)\n+- #20022 Use explicit p2p objects where available (guggero)\n+- #20028 Check that invalid peer traffic is accounted for (MarcoFalke)\n+- #20004 Add signet witness commitment section parse tests (MarcoFalke)\n+- #20034 Get rid of default wallet hacks (ryanofsky)\n+- #20069 Mention commit id in scripted diff error (laanwj)\n+- #19947 Cover `change_type` option of \"walletcreatefundedpsbt\" RPC (guggero)\n+- #20126 `p2p_leak_tx.py` improvements (use MiniWallet, add `p2p_lock` acquires) (theStack)\n+- #20129 Don't export `in6addr_loopback` (vasild)\n+- #20131 Remove unused nVersion=1 in p2p tests (MarcoFalke)\n+- #20161 Minor Taproot follow-ups (sipa)\n+- #19401 Use GBT to get block versions correct (luke-jr)\n+- #20159 `mining_getblocktemplate_longpoll.py` improvements (use MiniWallet, add logging) (theStack)\n+- #20039 Convert amounts from float to decimal (prayank23)\n+- #20112 Speed up `wallet_resendwallettransactions` with mockscheduler RPC (MarcoFalke)\n+- #20247 fuzz: Check for addrv1 compatibility before using addrv1 serializer. Fuzz addrv2 serialization (practicalswift)\n+- #20167 Add test for -blockversion (MarcoFalke)\n+- #19877 Clarify `rpc_net` & `p2p_disconnect_ban functional` tests (amitiuttarwar)\n+- #20258 Remove getnettotals/getpeerinfo consistency test (jnewbery)\n+- #20242 fuzz: Properly initialize PrecomputedTransactionData (MarcoFalke)\n+- #20262 Skip --descriptor tests if sqlite is not compiled (achow101)\n+- #18788 Update more tests to work with descriptor wallets (achow101)\n+- #20289 fuzz: Check for addrv1 compatibility before using addrv1 serializer/deserializer on CService (practicalswift)\n+- #20290 fuzz: Fix DecodeHexTx fuzzing harness issue (practicalswift)\n+- #20245 Run `script_assets_test` even if built --with-libs=no (MarcoFalke)\n+- #20300 fuzz: Add missing `ECC_Start` to `descriptor_parse` test (S3RK)\n+- #20283 Only try witness deser when checking for witness deser failure (MarcoFalke)\n+- #20303 fuzz: Assert expected DecodeHexTx behaviour when using legacy decoding (practicalswift)\n+- #20316 Fix `wallet_multiwallet` test issue on Windows (MarcoFalke)\n+- #20326 Fix `ecdsa_verify` in test framework (stepansnigirev)\n+- #20328 cirrus: Skip tasks on the gui repo main branch (MarcoFalke)\n+- #20355 fuzz: Check for addrv1 compatibility before using addrv1 serializer/deserializer on CSubNet (practicalswift)\n+- #20332 Mock IBD in `net_processing` fuzzers (MarcoFalke)\n+- #20218 Suppress `epoll_ctl` data race (MarcoFalke)\n+- #20375 fuzz: Improve coverage for CPartialMerkleTree fuzzing harness (practicalswift)\n+- #19669 contrib: Fixup valgrind suppressions file (MarcoFalke)\n+- #18879 valgrind: remove outdated suppressions (fanquake)\n+- #19226 Add BerkeleyDatabase tsan suppression (MarcoFalke)\n+- #20379 Remove no longer needed UBSan suppression (float divide-by-zero in validation.cpp) (practicalswift)\n+- #18190, #18736, #18744, #18775, #18783, #18867, #18994, #19065,\n+  #19067, #19143, #19222, #19247, #19286, #19296, #19379, #19934,\n+  #20188, #20395 Add fuzzing harnessses (practicalswift)\n+- #18638 Use mockable time for ping/pong, add tests (MarcoFalke)\n+- #19951 CNetAddr scoped ipv6 test coverage, rename scopeId to `m_scope_id` (jonatack)\n+- #20027 Use mockable time everywhere in `net_processing` (sipa)\n+- #19105 Add Muhash3072 implementation in Python (fjahr)\n+- #18704, #18752, #18753, #18765, #18839, #18866, #18873, #19022,\n+  #19023, #19429, #19552, #19778, #20176, #20179, #20214, #20292,\n+  #20299, #20322 Fix intermittent test issues (MarcoFalke)\n+- #20390 CI/Cirrus: Skip `merge_base` step for non-PRs (luke-jr)\n+- #18634 ci: Add fuzzbuzz integration configuration file (practicalswift)\n+- #18591 Add C++17 build to Travis (sipa)\n+- #18581, #18667, #18798, #19495, #19519, #19538 CI improvements (hebasto)\n+- #18683, #18705, #18735, #18778, #18799, #18829, #18912, #18929,\n+  #19008, #19041, #19164, #19201, #19267, #19276, #19321, #19371,\n+  #19427, #19730, #19746, #19881, #20294, #20339, #20368 CI improvements (MarcoFalke)\n+- #20489, #20506 MSVC CI improvements (sipsorcery)\n+\n+### Miscellaneous\n+- #18713 scripts: Add macho stack canary check to security-check.py (fanquake)\n+- #18629 scripts: Add pe .reloc section check to security-check.py (fanquake)\n+- #18437 util: `Detect posix_fallocate()` instead of assuming (vasild)\n+- #18413 script: Prevent ub when computing abs value for num opcode serialize (pierreN)\n+- #18443 lockedpool: avoid sensitive data in core files (FreeBSD) (vasild)\n+- #18885 contrib: Move optimize-pngs.py script to the maintainer repo (MarcoFalke)\n+- #18317 Serialization improvements step 6 (all except wallet/gui) (sipa)\n+- #16127 More thread safety annotation coverage (ajtowns)\n+- #19228 Update libsecp256k1 subtree (sipa)\n+- #19277 util: Add assert identity function (MarcoFalke)\n+- #19491 util: Make assert work with any value (MarcoFalke)\n+- #19205 script: `previous_release.sh` rewritten in python (bliotti)\n+- #15935 Add <datadir>/settings.json persistent settings storage (ryanofsky)\n+- #19439 script: Linter to check commit message formatting (Ghorbanian)\n+- #19654 lint: Improve commit message linter in travis (fjahr)\n+- #15382 util: Add runcommandparsejson (Sjors)\n+- #19614 util: Use `have_fdatasync` to determine fdatasync() use (fanquake)\n+- #19813 util, ci: Hard code previous release tarball checksums (hebasto)\n+- #19841 Implement Keccak and `SHA3_256` (sipa)\n+- #19643 Add -netinfo peer connections dashboard (jonatack)\n+- #15367 feature: Added ability for users to add a startup command (benthecarman)\n+- #19984 log: Remove static log message \"Initializing chainstate Chainstate [ibd] @ height -1 (null)\" (practicalswift)\n+- #20092 util: Do not use gargs global in argsmanager member functions (hebasto)\n+- #20168 contrib: Fix `gen_key_io_test_vectors.py` imports (MarcoFalke)\n+- #19624 Warn on unknown `rw_settings` (MarcoFalke)\n+- #20257 Update secp256k1 subtree to latest master (sipa)\n+- #20346 script: Modify security-check.py to use \"==\" instead of \"is\" for literal comparison (tylerchambers)\n+- #18881 Prevent UB in DeleteLock() function (hebasto)\n+- #19180, #19189, #19190, #19220, #19399 Replace RecursiveMutex with Mutex (hebasto)\n+- #19347 Make `cs_inventory` nonrecursive (jnewbery)\n+- #19773 Avoid recursive lock in IsTrusted (promag)\n+- #18790 Improve thread naming (hebasto)\n+- #20140 Restore compatibility with old CSubNet serialization (sipa)\n+- #17775 DecodeHexTx: Try case where txn has inputs first (instagibbs)\n+\n+### Documentation\n+- #18502 Update docs for getbalance (default minconf should be 0) (uzyn)\n+- #18632 Fix macos comments in release-notes (MarcoFalke)\n+- #18645 Update thread information in developer docs (jnewbery)\n+- #18709 Note why we can't use `thread_local` with glibc back compat (fanquake)\n+- #18410 Improve commenting for coins.cpp|h (jnewbery)\n+- #18157 fixing init.md documentation to not require rpcpassword (jkcd)\n+- #18739 Document how to fuzz Bitcoin Core using Honggfuzz (practicalswift)\n+- #18779 Better explain GNU ld's dislike of ld64's options (fanquake)\n+- #18663 Mention build docs in README.md (saahilshangle)\n+- #18810 Update rest info on block size and json (chrisabrams)\n+- #18939 Add c++17-enable flag to fuzzing instructions (mzumsande)\n+- #18957 Add a link from ZMQ doc to ZMQ example in contrib/ (meeDamian)\n+- #19058 Drop protobuf stuff (hebasto)\n+- #19061 Add link to Visual Studio build readme (maitrebitcoin)\n+- #19072 Expand section on Getting Started (MarcoFalke)\n+- #18968 noban precludes maxuploadtarget disconnects (MarcoFalke)\n+- #19005 Add documentation for 'checklevel' argument in 'verifychain' RPC\u2026 (kcalvinalvin)\n+- #19192 Extract net permissions doc (MarcoFalke)\n+- #19071 Separate repository for the gui (MarcoFalke)\n+- #19018 fixing description of the field sequence in walletcreatefundedpsbt RPC method (limpbrains)\n+- #19367 Span pitfalls (sipa)\n+- #19408 Windows WSL build recommendation to temporarily disable Win32 PE support (sipsorcery)\n+- #19407 explain why passing -mlinker-version is required when cross-compiling (fanquake)\n+- #19452 afl fuzzing comment about afl-gcc and afl-g++ (Crypt-iQ)\n+- #19258 improve subtree check instructions (Sjors)\n+- #19474 Use precise permission flags where possible (MarcoFalke)\n+- #19494 CONTRIBUTING.md improvements (jonatack)\n+- #19268 Add non-thread-safe note to FeeFilterRounder::round() (hebasto)\n+- #19547 Update macOS cross compilation dependencies for Focal (hebasto)\n+- #19617 Clang 8 or later is required with `FORCE_USE_SYSTEM_CLANG` (fanquake)\n+- #19639 Remove Reference Links #19582 (RobertHosking)\n+- #19605 Set `CC_FOR_BUILD` when building on OpenBSD (fanquake)\n+- #19765 Fix getmempoolancestors RPC result doc (MarcoFalke)\n+- #19786 Remove label from good first issue template (MarcoFalke)\n+- #19646 Updated outdated help command for getblocktemplate (jakeleventhal)\n+- #18817 Document differences in bitcoind and bitcoin-qt locale handling (practicalswift)\n+- #19870 update PyZMQ install instructions, fix `zmq_sub.py` file permissions (jonatack)\n+- #19903 Update build-openbsd.md with GUI support (grubles)\n+- #19241 help: Generate checkpoint height from chainparams (luke-jr)\n+- #18949 Add CODEOWNERS file to automatically nominate PR reviewers (adamjonas)\n+- #20014 Mention signet in -help output (hebasto)\n+- #20015 Added default signet config for linearize script (gr0kchain)\n+- #19958 Better document features of feelers (naumenkogs)\n+- #19871 Clarify scope of eviction protection of outbound block-relay peers (ariard)\n+- #20076 Update and improve files.md (hebasto)\n+- #20107 Collect release-notes snippets (MarcoFalke)\n+- #20109 Release notes and followups from 19339 (glozow)\n+- #20090 Tiny followups to new getpeerinfo connection type field (amitiuttarwar)\n+- #20152 Update wallet files in files.md (hebasto)\n+- #19124 Document `ALLOW_HOST_PACKAGES` dependency option (skmcontrib)\n+- #20271 Document that wallet salvage is experimental (MarcoFalke)\n+- #20281 Correct getblockstats documentation for `(sw)total_weight` (shesek)\n+- #20279 release process updates/fixups (jonatack)\n+- #20238 Missing comments for signet parameters (decryp2kanon)\n+- #20756 Add missing field (permissions) to the getpeerinfo help (amitiuttarwar)\n+- #20668 warn that incoming conns are unlikely when not using default ports (adamjonas)\n+- #19961 tor.md updates (jonatack)\n+- #19050 Add warning for rest interface limitation (fjahr)\n+- #19390 doc/REST-interface: Remove stale info (luke-jr)\n+- #19344 docs: update testgen usage example (Bushstar)\n+\n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n+- 10xcryptodev\n+- Aaron Clauson\n+- Aaron Hook\n+- Adam Jonas\n+- Adam Soltys\n+- Adam Stein\n+- Akio Nakamura\n+- Alex Willmer\n+- Amir Ghorbanian\n+- Amiti Uttarwar\n+- Andrew Chow\n+- Andrew Toth\n+- Anthony Fieroni\n+- Anthony Towns\n+- Antoine Poinsot\n+- Antoine Riard\n+- Ben Carman\n+- Ben Woosley\n+- Benoit Verret\n+- Brian Liotti\n+- Bushstar\n+- Calvin Kim\n+- Carl Dong\n+- Chris Abrams\n+- Chris L\n+- Christopher Coverdale\n+- codeShark149\n+- Cory Fields\n+- Craig Andrews\n+- Damian Mee\n+- Daniel Kraft\n+- Danny Lee\n+- David Reikher\n+- DesWurstes\n+- Dhruv Mehta\n+- Duncan Dean\n+- Elichai Turkel\n+- Elliott Jin\n+- Emil Engler\n+- Ethan Heilman\n+- eugene\n+- Fabian Jahr\n+- fanquake\n+- Ferdinando M. Ametrano\n+- freenancial\n+- furszy\n+- Gillian Chu\n+- Gleb Naumenko\n+- Glenn Willen\n+- Gloria Zhao\n+- glowang\n+- gr0kchain\n+- Gregory Sanders\n+- grubles\n+- gzhao408\n+- Harris\n+- Hennadii Stepanov\n+- Hugo Nguyen\n+- Igor Cota\n+- Ivan Metlushko\n+- Ivan Vershigora\n+- Jake Leventhal\n+- James O'Beirne\n+- Jeremy Rubin\n+- jgmorgan\n+- Jim Posen\n+- \u201cjkcd\u201d\n+- jmorgan\n+- John Newbery\n+- Johnson Lau\n+- Jon Atack\n+- Jonas Schnelli\n+- Jonathan Schoeller\n+- Jo\u00e3o Barbosa\n+- Justin Moon\n+- kanon\n+- Karl-Johan Alm\n+- Kiminuo\n+- Kristaps Kaupe\n+- lontivero\n+- Luke Dashjr\n+- Marcin Jachymiak\n+- MarcoFalke\n+- Martin Ankerl\n+- Martin Zumsande\n+- maskoficarus\n+- Matt Corallo\n+- Matthew Zipkin\n+- MeshCollider\n+- Miguel Herranz\n+- MIZUTA Takeshi\n+- mruddy\n+- Nadav Ivgi\n+- Neha Narula\n+- Nicolas Thumann\n+- Niklas G\u00f6gge\n+- Nima Yazdanmehr\n+- nsa\n+- nthumann\n+- Oliver Gugger\n+- pad\n+- pasta\n+- Peter Bushnell\n+- pierrenn\n+- Pieter Wuille\n+- practicalswift\n+- Prayank\n+- Ra\u00fal Mart\u00ednez (RME)\n+- RandyMcMillan\n+- Rene Pickhardt\n+- Riccardo Masutti\n+- Robert\n+- Rod Vagg\n+- Roy Shao\n+- Russell Yanofsky\n+- Saahil Shangle\n+- sachinkm77\n+- saibato\n+- Samuel Dobson\n+- sanket1729\n+- Sebastian Falbesoner\n+- Seleme Topuz\n+- Sishir Giri\n+- Sjors Provoost\n+- skmcontrib\n+- Stepan Snigirev\n+- Stephan Oeste\n+- Suhas Daftuar\n+- t-bast\n+- Tom Harding\n+- Torhte Butler\n+- TrentZ\n+- Troy Giorshev\n+- tryphe\n+- Tyler Chambers\n+- U-Zyn Chua\n+- Vasil Dimov\n+- wiz\n+- Wladimir J. van der Laan\n \n As well as to everyone that helped with translations on\n [Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      }
    ]
  },
  {
    "sha": "91f06324640bdc99a005d23e70b34b703184fb4f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWYwNjMyNDY0MGJkYzk5YTAwNWQyM2U3MGIzNGI3MDMxODRmYjRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-13T21:51:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-13T21:51:42Z"
      },
      "message": "Merge #20929: doc: Move 0.21.0 release notes from wiki\n\n66e6742a273796e9bdab37b4ad9e05cf18a99981 doc: Move 0.21.0 release notes from wiki (Wladimir J. van der Laan)\n\nPull request description:\n\n  These were the contents of https://github.com/bitcoin-core/bitcoin-devwiki/wiki/0.21.0-Release-Notes-Draft, minus the paragraph about gauging how fast taproot can be deployed.\n\nTop commit has no ACKs.\n\nTree-SHA512: d7bb61a76d87cb9d9e43602bf81b51ea463e3a098748e42440950d08e6f6e84bf6c02b07b297ac959f979aa72682775dd2ae2be6d30b22977ed60ed454b9c66d",
      "tree": {
        "sha": "4cc864fda5808cf36c902c5d09d18f272b79cef1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4cc864fda5808cf36c902c5d09d18f272b79cef1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91f06324640bdc99a005d23e70b34b703184fb4f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl//a24ACgkQHkrtYphs\n0l3IZQf/UaT2wM3UWlga8KwemZZrPp5ldZqwwSr2PKqAiGacjkCcrvxA615v/GcH\nKX9ta7rpvodzMMtrWKE3wShCw9VXSq/PVx84RXM+lxJMCpu7PimEQSFKobhlGwFp\n30cLV+skBLDVA1lTkp8Zlf/cF95YOtkjywHyuTo4Nog/3nuYcYdv5Kt8qniN48xI\nso9NAlk8tT/batsaY7wYeqOWosKeWr47GyXAEaY5r7spj4eJAM9NO5wzRGVCwfNG\nIGikQrx5tBzieQOTqAAmBmRivpOCe7cuWmdSeC5Ov4uxb+Llk3/1dzcxC1c9rv9M\nagaYT8d9a7kXxf/mmiBEmZ2bPTLwfg==\n=2OK1\n-----END PGP SIGNATURE-----",
        "payload": "tree 4cc864fda5808cf36c902c5d09d18f272b79cef1\nparent 15877d160cb8aaa53742fbfeea7296077e30edea\nparent 66e6742a273796e9bdab37b4ad9e05cf18a99981\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1610574692 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1610574702 +0100\n\nMerge #20929: doc: Move 0.21.0 release notes from wiki\n\n66e6742a273796e9bdab37b4ad9e05cf18a99981 doc: Move 0.21.0 release notes from wiki (Wladimir J. van der Laan)\n\nPull request description:\n\n  These were the contents of https://github.com/bitcoin-core/bitcoin-devwiki/wiki/0.21.0-Release-Notes-Draft, minus the paragraph about gauging how fast taproot can be deployed.\n\nTop commit has no ACKs.\n\nTree-SHA512: d7bb61a76d87cb9d9e43602bf81b51ea463e3a098748e42440950d08e6f6e84bf6c02b07b297ac959f979aa72682775dd2ae2be6d30b22977ed60ed454b9c66d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91f06324640bdc99a005d23e70b34b703184fb4f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91f06324640bdc99a005d23e70b34b703184fb4f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91f06324640bdc99a005d23e70b34b703184fb4f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15877d160cb8aaa53742fbfeea7296077e30edea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15877d160cb8aaa53742fbfeea7296077e30edea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15877d160cb8aaa53742fbfeea7296077e30edea"
      },
      {
        "sha": "66e6742a273796e9bdab37b4ad9e05cf18a99981",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66e6742a273796e9bdab37b4ad9e05cf18a99981",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66e6742a273796e9bdab37b4ad9e05cf18a99981"
      }
    ],
    "stats": {
      "total": 994,
      "additions": 922,
      "deletions": 72
    },
    "files": [
      {
        "sha": "66aee77643bacee6e31dfeb73dfce5a3e3a14efb",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 922,
        "deletions": 72,
        "changes": 994,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91f06324640bdc99a005d23e70b34b703184fb4f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91f06324640bdc99a005d23e70b34b703184fb4f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=91f06324640bdc99a005d23e70b34b703184fb4f",
        "patch": "@@ -1,23 +1,9 @@\n-*After branching off for a major version release of Bitcoin Core, use this\n-template to create the initial release notes draft.*\n+0.21.0 Release Notes\n+====================\n \n-*The release notes draft is a temporary file that can be added to by anyone. See\n-[/doc/developer-notes.md#release-notes](/doc/developer-notes.md#release-notes)\n-for the process.*\n+Bitcoin Core version 0.21.0 is now available from:\n \n-*Create the draft, named* \"*version* Release Notes Draft\"\n-*(e.g. \"0.20.0 Release Notes Draft\"), as a collaborative wiki in:*\n-\n-https://github.com/bitcoin-core/bitcoin-devwiki/wiki/\n-\n-*Before the final release, move the notes back to this git repository.*\n-\n-*version* Release Notes Draft\n-===============================\n-\n-Bitcoin Core version *version* is now available from:\n-\n-  <https://bitcoincore.org/bin/bitcoin-core-*version*/>\n+  <https://bitcoincore.org/bin/bitcoin-core-0.21.0/>\n \n This release includes new features, various bug fixes and performance\n improvements, as well as updated translations.\n@@ -45,11 +31,6 @@ wallet versions of Bitcoin Core are generally supported.\n Compatibility\n ==============\n \n-During this release cycle, work has been done to ensure that the codebase is fully\n-compatible with C++17. The intention is to begin using C++17 features starting\n-with the 0.22.0 release. This means that a compiler that supports C++17 will be\n-required to compile 0.22.0.\n-\n Bitcoin Core is supported and extensively tested on operating systems\n using the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin\n Core should also work on most other Unix-like systems but is not as\n@@ -66,7 +47,7 @@ accommodate the storage of Tor v3 and other BIP155 addresses. This means that if\n the file is modified by 0.21.0 or newer then older versions will not be able to\n read it. Those old versions, in the event of a downgrade, will log an error\n message \"Incorrect keysize in addrman deserialization\" and will continue normal\n-operation as if the file was missing, creating a new empty one. (#19954)\n+operation as if the file was missing, creating a new empty one. (#19954, #20284)\n \n Notable changes\n ===============\n@@ -90,22 +71,64 @@ P2P and network changes\n   be enabled using the command line option `-whitelist=relay@127.0.0.1`.\n   (#19988)\n \n+- This release adds support for Tor version 3 hidden services, and rumoring them\n+  over the network to other peers using\n+  [BIP155](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki).\n+  Version 2 hidden services are still fully supported by Bitcoin Core, but the\n+  Tor network will start\n+  [deprecating](https://blog.torproject.org/v2-deprecation-timeline) them in the\n+  coming months. (#19954)\n+\n - The Tor onion service that is automatically created by setting the\n   `-listenonion` configuration parameter will now be created as a Tor v3 service\n   instead of Tor v2. The private key that was used for Tor v2 (if any) will be\n   left untouched in the `onion_private_key` file in the data directory (see\n   `-datadir`) and can be removed if not needed. Bitcoin Core will no longer\n   attempt to read it. The private key for the Tor v3 service will be saved in a\n   file named `onion_v3_private_key`. To use the deprecated Tor v2 service (not\n-  recommended), then `onion_private_key` can be copied over\n+  recommended), the `onion_private_key` can be copied over\n   `onion_v3_private_key`, e.g.\n   `cp -f onion_private_key onion_v3_private_key`. (#19954)\n \n+- The client writes a file (`anchors.dat`) at shutdown with the network addresses\n+  of the node\u2019s two outbound block-relay-only peers (so called \"anchors\"). The\n+  next time the node starts, it reads this file and attempts to reconnect to those\n+  same two peers. This prevents an attacker from using node restarts to trigger a\n+  complete change in peers, which would be something they could use as part of an\n+  eclipse attack. (#17428)\n+\n+- This release adds support for serving\n+  [BIP157](https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki) compact\n+  filters to peers on the network when enabled using\n+  `-blockfilterindex=1 -peercfilters=1`. (#16442)\n+\n+- This release adds support for signets\n+  ([BIP325](https://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki)) in\n+  addition to the existing mainnet, testnet, and regtest networks. Signets are\n+  centrally-controlled test networks, allowing them to be more predictable\n+  test environments than the older testnet. One public signet is maintained, and\n+  selectable using `-signet`. It is also possible to create personal signets.\n+  (#18267).\n+\n+- This release implements\n+  [BIP339](https://github.com/bitcoin/bips/blob/master/bip-0339.mediawiki)\n+  wtxid relay. When negotiated, transactions are announced using their wtxid\n+  instead of their txid. (#18044).\n+\n+- This release implements the proposed Taproot consensus rules\n+  ([BIP341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki) and\n+  [BIP342](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki)),\n+  without activation on mainnet. Experimentation with Taproot can be done on\n+  signet, where its rules are already active. (#19553)\n+\n Updated RPCs\n ------------\n \n+- The `getpeerinfo` RPC has a new `network` field that provides the type of\n+  network (\"ipv4\", \"ipv6\", or \"onion\") that the peer connected through. (#20002)\n+\n - The `getpeerinfo` RPC now has additional `last_block` and `last_transaction`\n-  fields that return the UNIX epoch time of the last block and the last valid\n+  fields that return the UNIX epoch time of the last block and the last *valid*\n   transaction received from each peer. (#19731)\n \n - `getnetworkinfo` now returns two new fields, `connections_in` and\n@@ -117,7 +140,7 @@ Updated RPCs\n   integers instead of signed 32-bit integers. This matches their treatment in\n   consensus logic. Versions greater than 2 continue to be non-standard\n   (matching previous behavior of smaller than 1 or greater than 2 being\n-  non-standard). Note that this includes the joinpsbt command, which combines\n+  non-standard). Note that this includes the `joinpsbt` command, which combines\n   partially-signed transactions by selecting the highest version number.\n   (#16525)\n \n@@ -131,17 +154,6 @@ Updated RPCs\n   whether initial broadcast of the transaction has been acknowledged by a\n   peer. `getmempoolancestors` and `getmempooldescendants` are also updated.\n \n-- The `bumpfee`, `fundrawtransaction`, `sendmany`, `sendtoaddress`, and `walletcreatefundedpsbt`\n-RPC commands have been updated to include two new fee estimation methods \"BTC/kB\" and \"sat/B\".\n-The target is the fee expressed explicitly in the given form. Note that use of this feature\n-will trigger BIP 125 (replace-by-fee) opt-in. (#11413)\n-\n-- In addition, the `estimate_mode` parameter is now case insensitive for all of\n-  the above RPC commands. (#11413)\n-\n-- The `bumpfee` command now uses `conf_target` rather than `confTarget` in the\n-  options. (#11413)\n-\n - The `getpeerinfo` RPC no longer returns the `banscore` field unless the configuration\n   option `-deprecatedrpc=banscore` is used. The `banscore` field will be fully\n   removed in the next major release. (#19469)\n@@ -160,6 +172,12 @@ will trigger BIP 125 (replace-by-fee) opt-in. (#11413)\n   it is recommended to instead use the `connection_type` field (it will return\n   `manual` when addnode is true). (#19725)\n \n+- The `getpeerinfo` RPC no longer returns the `whitelisted` field by default. \n+  This field will be fully removed in the next major release. It can be accessed \n+  with the configuration option `-deprecatedrpc=getpeerinfo_whitelisted`. However, \n+  it is recommended to instead use the `permissions` field to understand if specific \n+  privileges have been granted to the peer. (#19770)\n+\n - The `walletcreatefundedpsbt` RPC call will now fail with\n   `Insufficient funds` when inputs are manually selected but are not enough to cover\n   the outputs and fee. Additional inputs can automatically be added through the\n@@ -175,7 +193,7 @@ New RPCs\n \n - The `getindexinfo` RPC returns the actively running indices of the node,\n   including their current sync status and height. It also accepts an `index_name`\n-  to specify returning only the status of that index. (#19550)\n+  to specify returning the status of that index only. (#19550)\n \n Build System\n ------------\n@@ -206,24 +224,31 @@ Updated settings\n   according to RFC 4632. Netmasks are used in the `-rpcallowip` and `-whitelist`\n   configuration options and in the `setban` RPC. (#19628)\n \n-Changes to Wallet or GUI related settings can be found in the GUI or Wallet  section below.\n+- The `-blocksonly` setting now completely disables fee estimation. (#18766)\n+\n+Changes to Wallet or GUI related settings can be found in the GUI or Wallet section below.\n \n Tools and Utilities\n -------------------\n \n-- The `connections` field of `bitcoin-cli -getinfo` is expanded to return a JSON\n-  object with `in`, `out` and `total` numbers of peer connections. It previously\n-  returned a single integer value for the total number of peer connections. (#19405)\n+- A new `bitcoin-cli -netinfo` command provides a network peer connections\n+  dashboard that displays data from the `getpeerinfo` and `getnetworkinfo` RPCs\n+  in a human-readable format. An optional integer argument from `0` to `4` may\n+  be passed to see increasing levels of detail. (#19643)\n \n - A new `bitcoin-cli -generate` command, equivalent to RPC `generatenewaddress`\n   followed by `generatetoaddress`, can generate blocks for command line testing\n-  purposes. This is a client-side version of the\n-  former `generate` RPC. See the help for details. (#19133)\n+  purposes. This is a client-side version of the former `generate` RPC. See the\n+  help for details. (#19133)\n \n - The `bitcoin-cli -getinfo` command now displays the wallet name and balance for\n   each of the loaded wallets when more than one is loaded (e.g. in multiwallet\n   mode) and a wallet is not specified with `-rpcwallet`. (#18594)\n \n+- The `connections` field of `bitcoin-cli -getinfo` is now expanded to return a JSON\n+  object with `in`, `out` and `total` numbers of peer connections. It previously\n+  returned a single integer value for the total number of peer connections. (#19405)\n+\n New settings\n ------------\n \n@@ -273,10 +298,15 @@ Wallet\n   methods remain backwards compatible. (#15937)\n \n - A new `send` RPC with similar syntax to `walletcreatefundedpsbt`, including\n-  support for coin selection and a custom fee rate. The `send` RPC is\n-  experimental and may change in subsequent releases. Using it is encouraged\n-  once it's no longer experimental: `sendmany` and `sendtoaddress` may be\n-  deprecated in a future release. (#16378)\n+  support for coin selection and a custom fee rate, is added. The `send` RPC is\n+  experimental and may change in subsequent releases. (#16378)\n+\n+- The `estimate_mode` parameter is now case-insensitive in the `bumpfee`,\n+  `fundrawtransaction`, `sendmany`, `sendtoaddress`, `send` and\n+  `walletcreatefundedpsbt` RPCs. (#11413)\n+\n+- The `bumpfee` RPC now uses `conf_target` rather than `confTarget` in the\n+  options. (#11413)\n \n - `fundrawtransaction` and `walletcreatefundedpsbt` when used with the\n   `lockUnspents` argument now lock manually selected coins, in addition to\n@@ -285,8 +315,9 @@ Wallet\n \n - The `-zapwallettxes` startup option has been removed and its functionality\n   removed from the wallet.  This option was originally intended to allow for\n-  the fee bumping of transactions that did not signal RBF. This functionality\n-  has been superseded with the abandon transaction feature. (#19671)\n+  rescuing wallets which were affected by a malleability attack. More recently,\n+  it has been used in the fee bumping of transactions that did not signal RBF.\n+  This functionality has been superseded with the abandon transaction feature. (#19671)\n \n - The error code when no wallet is loaded, but a wallet RPC is called, has been\n   changed from `-32601` (method not found) to `-18` (wallet not found).\n@@ -303,7 +334,7 @@ new keys and addresses like previous releases did.\n \n New wallets can be created through the GUI (which has a more prominent create\n wallet option), through the `bitcoin-cli createwallet` or `bitcoin-wallet\n-create` commands, or the `createwallet` RPC. (#15454)\n+create` commands, or the `createwallet` RPC. (#15454, #20186)\n \n ### Experimental Descriptor Wallets\n \n@@ -312,16 +343,16 @@ is available. Additionally there may be some bugs and current functions may chan\n Bugs and missing functionality can be reported to the [issue tracker](https://github.com/bitcoin/bitcoin/issues).\n \n 0.21 introduces a new type of wallet - Descriptor Wallets. Descriptor Wallets store\n-scriptPubKey information using descriptors. This is in contrast to the Legacy Wallet\n-structure where keys are used to generate scriptPubKeys and addresses. Because of this\n+scriptPubKey information using output descriptors. This is in contrast to the Legacy Wallet\n+structure where keys are used to implicitly generate scriptPubKeys and addresses. Because of this\n shift to being script based instead of key based, many of the confusing things that Legacy\n Wallets do are not possible with Descriptor Wallets. Descriptor Wallets use a definition\n of \"mine\" for scripts which is simpler and more intuitive than that used by Legacy Wallets.\n Descriptor Wallets also uses different semantics for watch-only things and imports.\n \n As Descriptor Wallets are a new type of wallet, their introduction does not affect existing wallets.\n Users who already have a Bitcoin Core wallet can continue to use it as they did before without\n-any change in behavior. Newly created Legacy Wallets (which is the default type of wallet) will\n+any change in behavior. Newly created Legacy Wallets (which remains the default type of wallet) will\n behave as they did in previous versions of Bitcoin Core.\n \n The differences between Descriptor Wallets and Legacy Wallets are largely limited to non user facing\n@@ -330,15 +361,13 @@ as described below.\n \n #### Creating Descriptor Wallets\n \n-Descriptor Wallets are not created by default. They must be explicitly created using the\n-`createwallet` RPC or via the GUI. A `descriptors` option has been added to `createwallet`.\n-Setting `descriptors` to `true` will create a Descriptor Wallet instead of a Legacy Wallet.\n+Descriptor wallets are not the default type of wallet.\n \n In the GUI, a checkbox has been added to the Create Wallet Dialog to indicate that a\n-Descriptor Wallet should be created.\n+Descriptor Wallet should be created. And a `descriptors` option has been added to `createwallet` RPC.\n+Setting `descriptors` to `true` will create a Descriptor Wallet instead of a Legacy Wallet.\n \n-Without those options being set, a Legacy Wallet will be created instead. Additionally the\n-Default Wallet created upon first startup of Bitcoin Core will be a Legacy Wallet.\n+Without those options being set, a Legacy Wallet will be created instead.\n \n #### `IsMine` Semantics\n \n@@ -354,7 +383,7 @@ what scripts the wallet will consider to belong to it. Additionally the implemen\n in Descriptor Wallets is far simpler than for Legacy Wallets. Notably, in Legacy Wallets, `IsMine`\n allowed for users to take one type of address (e.g. P2PKH), mutate it into another address type\n (e.g. P2WPKH), and the wallet would still detect outputs sending to the new address type\n-even without that address being requested from the wallet. Descriptor Wallets does not\n+even without that address being requested from the wallet. Descriptor Wallets do not\n allow for this and will only watch for the addresses that were explicitly requested from the wallet.\n \n These changes to `IsMine` will make it easier to reason about what scripts the wallet will\n@@ -382,15 +411,15 @@ New export RPCs for Descriptor Wallets have not yet been added.\n \n The following RPCs are disabled for Descriptor Wallets:\n \n-* importprivkey\n-* importpubkey\n-* importaddress\n-* importwallet\n-* dumpprivkey\n-* dumpwallet\n-* importmulti\n-* addmultisigaddress\n-* sethdseed\n+* `importprivkey`\n+* `importpubkey`\n+* `importaddress`\n+* `importwallet`\n+* `dumpprivkey`\n+* `dumpwallet`\n+* `importmulti`\n+* `addmultisigaddress`\n+* `sethdseed`\n \n #### Watchonly Wallets\n \n@@ -410,7 +439,7 @@ workflow but the typical GUI Send, `sendtoaddress`, etc. workflows would still b\n non-functional.\n \n This issue is worsened if the wallet contains both single key (e.g. `wpkh(...)`) descriptors and such\n-multiple key descriptors as some transactions could be signed and broadast and others not. This is\n+multiple key descriptors as some transactions could be signed and broadcast and others not. This is\n due to some transactions containing only single key inputs, while others would contain both single\n key and multiple key inputs, depending on which are available and how the coin selection algorithm\n selects inputs. However this is not considered to be a supported use case; multisigs\n@@ -423,14 +452,42 @@ The change to using descriptors changes the default derivation paths used by Bit\n to adhere to BIP 44/49/84. Descriptors with different derivation paths can be imported without\n issue.\n \n+#### SQLite Database Backend\n+\n+Descriptor wallets use SQLite for the wallet file instead of the Berkeley DB used in legacy wallets.\n+This will break compatibility with any existing tooling that operates on wallets, however compatibility\n+was already being broken by the move to descriptors.\n+\n ### Wallet RPC changes\n \n - The `upgradewallet` RPC replaces the `-upgradewallet` command line option.\n   (#15761)\n+\n - The `settxfee` RPC will fail if the fee was set higher than the `-maxtxfee`\n   command line setting. The wallet will already fail to create transactions\n   with fees higher than `-maxtxfee`. (#18467)\n \n+- A new `fee_rate` parameter/option denominated in satoshis per vbyte (sat/vB)\n+  is introduced to the `sendtoaddress`, `sendmany`, `fundrawtransaction` and\n+  `walletcreatefundedpsbt` RPCs as well as to the experimental new `send`\n+  RPC. The legacy `feeRate` option in `fundrawtransaction` and\n+  `walletcreatefundedpsbt` still exists for setting a fee rate in BTC per 1,000\n+  vbytes (BTC/kvB), but it is expected to be deprecated soon to avoid\n+  confusion. For these RPCs, the fee rate error message is updated from BTC/kB\n+  to sat/vB and the help documentation in BTC/kB is updated to BTC/kvB. The\n+  `send` and `sendtoaddress` RPC examples are updated to aid users in creating\n+  transactions with explicit fee rates. (#20305, #11413)\n+\n+- The `bumpfee` RPC `fee_rate` option is changed from BTC/kvB to sat/vB and the\n+  help documentation is updated. Users are warned that this is a breaking API\n+  change, but it should be relatively benign: the large (100,000 times)\n+  difference between BTC/kvB and sat/vB units means that a transaction with a\n+  fee rate mistakenly calculated in BTC/kvB rather than sat/vB should raise an\n+  error due to the fee rate being set too low. In the worst case, the\n+  transaction may send at 1 sat/vB, but as Replace-by-Fee (BIP125 RBF) is active\n+  by default when an explicit fee rate is used, the transaction fee can be\n+  bumped. (#20305)\n+\n GUI changes\n -----------\n \n@@ -476,11 +533,804 @@ Tests\n   setting. The settings `-signetchallenge` and `-signetseednode` allow\n   enabling a custom signet.\n \n+- The `generateblock` RPC allows testers using regtest mode to\n+  generate blocks that consist of a custom set of transactions. (#17693)\n+\n+0.21.0 change log\n+=================\n+\n+### Consensus\n+- #18267 BIP-325: Signet (kallewoof)\n+- #20016 uint256: 1 is a constant (ajtowns)\n+- #20006 Fix misleading error message: Clean stack rule (sanket1729)\n+- #19953 Implement BIP 340-342 validation (Schnorr/taproot/tapscript) (sipa)\n+- #20169 Taproot follow-up: Make ComputeEntrySchnorr and ComputeEntryECDSA const to clarify contract (practicalswift)\n+\n+### Policy\n+- #18766 Disable fee estimation in blocksonly mode (darosior)\n+- #19630 Cleanup fee estimation code (darosior)\n+- #20165 Only relay Taproot spends if next block has it active (sipa)\n+\n+### Mining\n+- #17946 Fix GBT: Restore \"!segwit\" and \"csv\" to \"rules\" key (luke-jr)\n+\n+### Privacy\n+- #16432 Add privacy to the Overview page (hebasto)\n+- #18861 Do not answer GETDATA for to-be-announced tx (sipa)\n+- #18038 Mempool tracks locally submitted transactions to improve wallet privacy (amitiuttarwar)\n+- #19109 Only allow getdata of recently announced invs (sipa)\n+\n+### Block and transaction handling\n+- #17737 Add ChainstateManager, remove BlockManager global (jamesob)\n+- #18960 indexes: Add compact block filter headers cache (jnewbery)\n+- #13204 Faster sigcache nonce (JeremyRubin)\n+- #19088 Use std::chrono throughout some validation functions (fanquake)\n+- #19142 Make VerifyDB level 4 interruptible (MarcoFalke)\n+- #17994 Flush undo files after last block write (kallewoof)\n+- #18990 log: Properly log txs rejected from mempool (MarcoFalke)\n+- #18984 Remove unnecessary input blockfile SetPos (dgenr8)\n+- #19526 log: Avoid treating remote misbehvior as local system error (MarcoFalke)\n+- #18044 Use wtxid for transaction relay (sdaftuar)\n+- #18637 coins: allow cache resize after init (jamesob)\n+- #19854 Avoid locking CTxMemPool::cs recursively in simple cases (hebasto)\n+- #19478 Remove CTxMempool::mapLinks data structure member (JeremyRubin)\n+- #19927 Reduce direct `g_chainman` usage (dongcarl)\n+- #19898 log: print unexpected version warning in validation log category (n-thumann)\n+- #20036 signet: Add assumed values for default signet (MarcoFalke)\n+- #20048 chainparams: do not log signet startup messages for other chains (jonatack)\n+- #19339 re-delegate absurd fee checking from mempool to clients (glozow)\n+- #20035 signet: Fix uninitialized read in validation (MarcoFalke)\n+- #20157 Bugfix: chainparams: Add missing (always enabled) Taproot deployment for Signet (luke-jr)\n+- #20263 Update assumed chain params (MarcoFalke)\n+- #20372 Avoid signed integer overflow when loading a mempool.dat file with a malformed time field (practicalswift)\n+- #18621 script: Disallow silent bool -> cscript conversion (MarcoFalke)\n+- #18612, #18732 script: Remove undocumented and unused operator+ (MarcoFalke)\n+- #19317 Add a left-justified width field to `log2_work` component for a uniform debug.log output (jamesgmorgan)\n+\n+### P2P protocol and network code\n+- #18544 Limit BIP37 filter lifespan (active between `filterload`..`filterclear`) (theStack)\n+- #18806 Remove is{Empty,Full} flags from CBloomFilter, clarify CVE fix (theStack)\n+- #18512 Improve asmap checks and add sanity check (sipa)\n+- #18877 Serve cfcheckpt requests (jnewbery)\n+- #18895 Unbroadcast followups: rpcs, nLastResend, mempool sanity check (gzhao408)\n+- #19010 net processing: Add support for `getcfheaders` (jnewbery)\n+- #16939 Delay querying DNS seeds (ajtowns)\n+- #18807 Unbroadcast follow-ups (amitiuttarwar)\n+- #19044 Add support for getcfilters (jnewbery)\n+- #19084 improve code documentation for dns seed behaviour (ajtowns)\n+- #19260 disconnect peers that send filterclear + update existing filter msg disconnect logic (gzhao408)\n+- #19284 Add seed.bitcoin.wiz.biz to DNS seeds (wiz)\n+- #19322 split PushInventory() (jnewbery)\n+- #19204 Reduce inv traffic during IBD (MarcoFalke)\n+- #19470 banlist: log post-swept banlist size at startup (fanquake)\n+- #19191 Extract download permission from noban (MarcoFalke)\n+- #14033 Drop `CADDR_TIME_VERSION` checks now that `MIN_PEER_PROTO_VERSION` is greater (Empact)\n+- #19464 net, rpc: remove -banscore option, deprecate banscore in getpeerinfo (jonatack)\n+- #19514 [net/net processing] check banman pointer before dereferencing (jnewbery)\n+- #19512 banscore updates to gui, tests, release notes (jonatack)\n+- #19360 improve encapsulation of CNetAddr (vasild)\n+- #19217 disambiguate block-relay-only variable names from blocksonly variables (glowang)\n+- #19473 Add -networkactive option (hebasto)\n+- #19472 [net processing] Reduce `cs_main` scope in MaybeDiscourageAndDisconnect() (jnewbery)\n+- #19583 clean up Misbehaving() (jnewbery)\n+- #19534 save the network type explicitly in CNetAddr (vasild)\n+- #19569 Enable fetching of orphan parents from wtxid peers (sipa)\n+- #18991 Cache responses to GETADDR to prevent topology leaks (naumenkogs)\n+- #19596 Deduplicate parent txid loop of requested transactions and missing parents of orphan transactions (sdaftuar)\n+- #19316 Cleanup logic around connection types (amitiuttarwar)\n+- #19070 Signal support for compact block filters with `NODE_COMPACT_FILTERS` (jnewbery)\n+- #19705 Shrink CAddress from 48 to 40 bytes on x64 (vasild)\n+- #19704 Move ProcessMessage() to PeerLogicValidation (jnewbery)\n+- #19628 Change CNetAddr::ip to have flexible size (vasild)\n+- #19797 Remove old check for 3-byte shifted IP addresses from pre-0.2.9 nodes (#19797)\n+- #19607 Add Peer struct for per-peer data in net processing (jnewbery)\n+- #19857 improve nLastBlockTime and nLastTXTime documentation (jonatack)\n+- #19724 Cleanup connection types- followups (amitiuttarwar)\n+- #19670 Protect localhost and block-relay-only peers from eviction (sdaftuar)\n+- #19728 Increase the ip address relay branching factor for unreachable networks (sipa)\n+- #19879 Miscellaneous wtxid followups (amitiuttarwar)\n+- #19697 Improvements on ADDR caching (naumenkogs)\n+- #17785 Unify Send and Receive protocol versions (hebasto)\n+- #19845 CNetAddr: add support to (un)serialize as ADDRv2 (vasild)\n+- #19107 Move all header verification into the network layer, extend logging (troygiorshev)\n+- #20003 Exit with error message if -proxy is specified without arguments (instead of continuing without proxy server) (practicalswift)\n+- #19991 Use alternative port for incoming Tor connections (hebasto)\n+- #19723 Ignore unknown messages before VERACK (sdaftuar)\n+- #19954 Complete the BIP155 implementation and upgrade to TORv3 (vasild)\n+- #20119 BIP155 follow-ups (sipa)\n+- #19988 Overhaul transaction request logic (sipa)\n+- #17428 Try to preserve outbound block-relay-only connections during restart (hebasto)\n+- #19911 Guard `vRecvGetData` with `cs_vRecv` and `orphan_work_set` with `g_cs_orphans` (narula)\n+- #19753 Don't add AlreadyHave transactions to recentRejects (troygiorshev)\n+- #20187 Test-before-evict bugfix and improvements for block-relay-only peers (sdaftuar)\n+- #20237 Hardcoded seeds update for 0.21 (laanwj)\n+- #20212 Fix output of peer address in version message (vasild)\n+- #20284 Ensure old versions don't parse peers.dat (vasild)\n+- #20405 Avoid calculating onion address checksum when version is not 3 (lontivero)\n+- #20564 Don't send 'sendaddrv2' to pre-70016 software, and send before 'verack' (sipa)\n+- #20660 Move signet onion seed from v2 to v3 (Sjors)\n+\n+### Wallet\n+- #18262 Exit selection when `best_waste` is 0 (achow101)\n+- #17824 Prefer full destination groups in coin selection (fjahr)\n+- #17219 Allow transaction without change if keypool is empty (Sjors)\n+- #15761 Replace -upgradewallet startup option with upgradewallet RPC (achow101)\n+- #18671 Add BlockUntilSyncedToCurrentChain to dumpwallet (MarcoFalke)\n+- #16528 Native Descriptor Wallets using DescriptorScriptPubKeyMan (achow101)\n+- #18777 Recommend absolute path for dumpwallet (MarcoFalke)\n+- #16426 Reverse `cs_main`, `cs_wallet` lock order and reduce `cs_main` locking (ariard)\n+- #18699 Avoid translating RPC errors (MarcoFalke)\n+- #18782 Make sure no DescriptorScriptPubKeyMan or WalletDescriptor members are left uninitialized after construction (practicalswift)\n+- #9381 Remove CWalletTx merging logic from AddToWallet (ryanofsky)\n+- #16946 Include a checksum of encrypted private keys (achow101)\n+- #17681 Keep inactive seeds after sethdseed and derive keys from them as needed (achow101)\n+- #18918 Move salvagewallet into wallettool (achow101)\n+- #14988 Fix for confirmed column in csv export for payment to self transactions (benthecarman)\n+- #18275 Error if an explicit fee rate was given but the needed fee rate differed (kallewoof)\n+- #19054 Skip hdKeypath of 'm' when determining inactive hd seeds (achow101)\n+- #17938 Disallow automatic conversion between disparate hash types (Empact)\n+- #19237 Check size after unserializing a pubkey (elichai)\n+- #11413 sendtoaddress/sendmany: Add explicit feerate option (kallewoof)\n+- #18850 Fix ZapSelectTx to sync wallet spends (bvbfan)\n+- #18923 Never schedule MaybeCompactWalletDB when `-flushwallet` is off (MarcoFalke)\n+- #19441 walletdb: Don't reinitialize desc cache with multiple cache entries (achow101)\n+- #18907 walletdb: Don't remove database transaction logs and instead error (achow101)\n+- #19334 Introduce WalletDatabase abstract class (achow101)\n+- #19335 Cleanup and separate BerkeleyDatabase and BerkeleyBatch (achow101)\n+- #19102 Introduce and use DummyDatabase instead of dummy BerkeleyDatabase (achow101)\n+- #19568 Wallet should not override signing errors (fjahr)\n+- #17204 Do not turn `OP_1NEGATE` in scriptSig into `0x0181` in signing code (sipa) (meshcollider)\n+- #19457 Cleanup wallettool salvage and walletdb extraneous declarations (achow101)\n+- #15937 Add loadwallet and createwallet `load_on_startup` options (ryanofsky)\n+- #16841 Replace GetScriptForWitness with GetScriptForDestination (meshcollider)\n+- #14582 always do avoid partial spends if fees are within a specified range (kallewoof)\n+- #19743 -maxapsfee follow-up (kallewoof)\n+- #19289 GetWalletTx and IsMine require `cs_wallet` lock (promag)\n+- #19671 Remove -zapwallettxes (achow101)\n+- #19805 Avoid deserializing unused records when salvaging (achow101)\n+- #19754 wallet, gui: Reload previously loaded wallets on startup (achow101)\n+- #19738 Avoid multiple BerkeleyBatch in DelAddressBook (promag)\n+- #19919 bugfix: make LoadWallet assigns status always (AkioNak)\n+- #16378 The ultimate send RPC (Sjors)\n+- #15454 Remove the automatic creation and loading of the default wallet (achow101)\n+- #19501 `send*` RPCs in the wallet returns the \"fee reason\" (stackman27)\n+- #20130 Remove db mode string (S3RK)\n+- #19077 Add sqlite as an alternative wallet database and use it for new descriptor wallets (achow101)\n+- #20125 Expose database format in getwalletinfo (promag)\n+- #20198 Show name, format and if uses descriptors in bitcoin-wallet tool (jonasschnelli)\n+- #20216 Fix buffer over-read in SQLite file magic check (theStack)\n+- #20186 Make -wallet setting not create wallets (ryanofsky)\n+- #20230 Fix bug when just created encrypted wallet cannot get address (hebasto)\n+- #20282 Change `upgradewallet` return type to be an object (jnewbery)\n+- #20220 Explicit fee rate follow-ups/fixes for 0.21 (jonatack)\n+- #20199 Ignore (but warn) on duplicate -wallet parameters (jonasschnelli)\n+- #20324 Set DatabaseStatus::SUCCESS in MakeSQLiteDatabase (MarcoFalke)\n+- #20266 Fix change detection of imported internal descriptors (achow101)\n+- #20153 Do not import a descriptor with hardened derivations into a watch-only wallet (S3RK)\n+- #20344 Fix scanning progress calculation for single block range (theStack)\n+- #19502 Bugfix: Wallet: Soft-fail exceptions within ListWalletDir file checks (luke-jr)\n+- #20378 Fix potential division by 0 in WalletLogPrintf (jonasschnelli)\n+- #18836 Upgradewallet fixes and additional tests (achow101)\n+- #20139 Do not return warnings from UpgradeWallet() (stackman27)\n+- #20305 Introduce `fee_rate` sat/vB param/option (jonatack)\n+- #20426 Allow zero-fee fundrawtransaction/walletcreatefundedpsbt and other fixes (jonatack)\n+- #20573 wallet, bugfix: allow send with string `fee_rate` amounts (jonatack)\n+\n+### RPC and other APIs\n+- #18574 cli: Call getbalances.ismine.trusted instead of getwalletinfo.balance (jonatack)\n+- #17693 Add `generateblock` to mine a custom set of transactions (andrewtoth)\n+- #18495 Remove deprecated migration code (vasild)\n+- #18493 Remove deprecated \"size\" from mempool txs (vasild)\n+- #18467 Improve documentation and return value of settxfee (fjahr)\n+- #18607 Fix named arguments in documentation (MarcoFalke)\n+- #17831 doc: Fix and extend getblockstats examples (asoltys)\n+- #18785 Prevent valgrind false positive in `rest_blockhash_by_height` (ryanofsky)\n+- #18999 log: Remove \"No rpcpassword set\" from logs (MarcoFalke)\n+- #19006 Avoid crash when `g_thread_http` was never started (MarcoFalke)\n+- #18594 cli: Display multiwallet balances in -getinfo (jonatack)\n+- #19056 Make gettxoutsetinfo/GetUTXOStats interruptible (MarcoFalke)\n+- #19112 Remove special case for unknown service flags (MarcoFalke)\n+- #18826 Expose txinwitness for coinbase in JSON form from RPC (rvagg)\n+- #19282 Rephrase generatetoaddress help, and use `PACKAGE_NAME` (luke-jr)\n+- #16377 don't automatically append inputs in walletcreatefundedpsbt (Sjors)\n+- #19200 Remove deprecated getaddressinfo fields (jonatack)\n+- #19133 rpc, cli, test: add bitcoin-cli -generate command (jonatack)\n+- #19469 Deprecate banscore field in getpeerinfo (jonatack)\n+- #16525 Dump transaction version as an unsigned integer in RPC/TxToUniv (TheBlueMatt)\n+- #19555 Deduplicate WriteHDKeypath() used in decodepsbt (theStack)\n+- #19589 Avoid useless mempool query in gettxoutproof (MarcoFalke)\n+- #19585 RPCResult Type of MempoolEntryDescription should be OBJ (stylesuxx)\n+- #19634 Document getwalletinfo's `unlocked_until` field as optional (justinmoon)\n+- #19658 Allow RPC to fetch all addrman records and add records to addrman (jnewbery)\n+- #19696 Fix addnode remove command error (fjahr)\n+- #18654 Separate bumpfee's psbt creation function into psbtbumpfee (achow101)\n+- #19655 Catch listsinceblock `target_confirmations` exceeding block count (adaminsky)\n+- #19644 Document returned error fields as optional if applicable (theStack)\n+- #19455 rpc generate: print useful help and error message (jonatack)\n+- #19550 Add listindices RPC (fjahr)\n+- #19169 Validate provided keys for `query_options` parameter in listunspent (PastaPastaPasta)\n+- #18244 fundrawtransaction and walletcreatefundedpsbt also lock manually selected coins (Sjors)\n+- #14687 zmq: Enable TCP keepalive (mruddy)\n+- #19405 Add network in/out connections to `getnetworkinfo` and `-getinfo` (jonatack)\n+- #19878 rawtransaction: Fix argument in combinerawtransaction help message (pinheadmz)\n+- #19940 Return fee and vsize from testmempoolaccept (gzhao408)\n+- #13686 zmq: Small cleanups in the ZMQ code (domob1812)\n+- #19386, #19528, #19717, #19849, #19994 Assert that RPCArg names are equal to CRPCCommand ones (MarcoFalke)\n+- #19725 Add connection type to getpeerinfo, improve logs (amitiuttarwar)\n+- #19969 Send RPC bug fix and touch-ups (Sjors)\n+- #18309 zmq: Add support to listen on multiple interfaces (n-thumann)\n+- #20055 Set HTTP Content-Type in bitcoin-cli (laanwj)\n+- #19956 Improve invalid vout value rpc error message (n1rna)\n+- #20101 Change no wallet loaded message to be clearer (achow101)\n+- #19998 Add `via_tor` to `getpeerinfo` output (hebasto)\n+- #19770 getpeerinfo: Deprecate \"whitelisted\" field (replaced by \"permissions\") (luke-jr)\n+- #20120 net, rpc, test, bugfix: update GetNetworkName, GetNetworksInfo, regression tests (jonatack)\n+- #20595 Improve heuristic hex transaction decoding (sipa)\n+- #20731 Add missing description of vout in getrawtransaction help text (benthecarman)\n+- #19328 Add gettxoutsetinfo `hash_type` option (fjahr)\n+- #19731 Expose nLastBlockTime/nLastTXTime as last `block/last_transaction` in getpeerinfo (jonatack)\n+- #19572 zmq: Create \"sequence\" notifier, enabling client-side mempool tracking (instagibbs)\n+- #20002 Expose peer network in getpeerinfo; simplify/improve -netinfo (jonatack)\n+\n+### GUI\n+- #17905 Avoid redundant tx status updates (ryanofsky)\n+- #18646 Use `PACKAGE_NAME` in exception message (fanquake)\n+- #17509 Save and load PSBT (Sjors)\n+- #18769 Remove bug fix for Qt < 5.5 (10xcryptodev)\n+- #15768 Add close window shortcut (IPGlider)\n+- #16224 Bilingual GUI error messages (hebasto)\n+- #18922 Do not translate InitWarning messages in debug.log (hebasto)\n+- #18152 Use NotificationStatus enum for signals to GUI (hebasto)\n+- #18587 Avoid wallet tryGetBalances calls in WalletModel::pollBalanceChanged (ryanofsky)\n+- #17597 Fix height of QR-less ReceiveRequestDialog (hebasto)\n+- #17918 Hide non PKHash-Addresses in signing address book (emilengler)\n+- #17956 Disable unavailable context menu items in transactions tab (kristapsk)\n+- #17968 Ensure that ModalOverlay is resized properly (hebasto)\n+- #17993 Balance/TxStatus polling update based on last block hash (furszy)\n+- #18424 Use parent-child relation to manage lifetime of OptionsModel object (hebasto)\n+- #18452 Fix shutdown when `waitfor*` cmds are called from RPC console (hebasto)\n+- #15202 Add Close All Wallets action (promag)\n+- #19132 lock `cs_main`, `m_cached_tip_mutex` in that order (vasild)\n+- #18898 Display warnings as rich text (hebasto)\n+- #19231 add missing translation.h include to fix build (fanquake)\n+- #18027 \"PSBT Operations\" dialog (gwillen)\n+- #19256 Change combiner for signals to `optional_last_value` (fanquake)\n+- #18896 Reset toolbar after all wallets are closed (hebasto)\n+- #18993 increase console command max length (10xcryptodev)\n+- #19323 Fix regression in *txoutset* in GUI console (hebasto)\n+- #19210 Get rid of cursor in out-of-focus labels (hebasto)\n+- #19011 Reduce `cs_main` lock accumulation during GUI startup (jonasschnelli)\n+- #19844 Remove usage of boost::bind (fanquake)\n+- #20479 Fix QPainter non-determinism on macOS (0.21 backport) (laanwj)\n+- gui#6 Do not truncate node flag strings in debugwindow peers details tab (Saibato)\n+- gui#8 Fix regression in TransactionTableModel (hebasto)\n+- gui#17 doc: Remove outdated comment in TransactionTablePriv (MarcoFalke)\n+- gui#20 Wrap tooltips in the intro window (hebasto)\n+- gui#30 Disable the main window toolbar when the modal overlay is shown (hebasto)\n+- gui#34 Show permissions instead of whitelisted (laanwj)\n+- gui#35 Parse params directly instead of through node (ryanofsky)\n+- gui#39 Add visual accenting for the 'Create new receiving address' button (hebasto)\n+- gui#40 Clarify block height label (hebasto)\n+- gui#43 bugfix: Call setWalletActionsEnabled(true) only for the first wallet (hebasto)\n+- gui#97 Relax GUI freezes during IBD (jonasschnelli)\n+- gui#71 Fix visual quality of text in QR image (hebasto)\n+- gui#96 Slight improve create wallet dialog (Sjors)\n+- gui#102 Fix SplashScreen crash when run with -disablewallet (hebasto)\n+- gui#116 Fix unreasonable default size of the main window without loaded wallets (hebasto)\n+- gui#120 Fix multiwallet transaction notifications (promag)\n+\n+### Build system\n+- #18504 Drop bitcoin-tx and bitcoin-wallet dependencies on libevent (ryanofsky)\n+- #18586 Bump gitian descriptors to 0.21 (laanwj)\n+- #17595 guix: Enable building for `x86_64-w64-mingw32` target (dongcarl)\n+- #17929 add linker optimisation flags to gitian & guix (Linux) (fanquake)\n+- #18556 Drop make dist in gitian builds (hebasto)\n+- #18088 ensure we aren't using GNU extensions (fanquake)\n+- #18741 guix: Make source tarball using git-archive (dongcarl)\n+- #18843 warn on potentially uninitialized reads (vasild)\n+- #17874 make linker checks more robust (fanquake)\n+- #18535 remove -Qunused-arguments workaround for clang + ccache (fanquake)\n+- #18743 Add --sysroot option to mac os native compile flags (ryanofsky)\n+- #18216 test, build: Enable -Werror=sign-compare (Empact)\n+- #18928 don't pass -w when building for Windows (fanquake)\n+- #16710 Enable -Wsuggest-override if available (hebasto)\n+- #18738 Suppress -Wdeprecated-copy warnings (hebasto)\n+- #18862 Remove fdelt_chk back-compat code and sanity check (fanquake)\n+- #18887 enable -Werror=gnu (vasild)\n+- #18956 enforce minimum required Windows version (7) (fanquake)\n+- #18958 guix: Make V=1 more powerful for debugging (dongcarl)\n+- #18677 Multiprocess build support (ryanofsky)\n+- #19094 Only allow ASCII identifiers (laanwj)\n+- #18820 Propagate well-known vars into depends (dongcarl)\n+- #19173 turn on --enable-c++17 by --enable-fuzz (vasild)\n+- #18297 Use pkg-config in BITCOIN_QT_CONFIGURE for all hosts including Windows (hebasto)\n+- #19301 don't warn when doxygen isn't found (fanquake)\n+- #19240 macOS toolchain simplification and bump (dongcarl)\n+- #19356 Fix search for brew-installed BDB 4 on OS X (gwillen)\n+- #19394 Remove unused `RES_IMAGES` (Bushstar)\n+- #19403 improve `__builtin_clz*` detection (fanquake)\n+- #19375 target Windows 7 when building libevent and fix ipv6 usage (fanquake)\n+- #19331 Do not include server symbols in wallet (MarcoFalke)\n+- #19257 remove BIP70 configure option (fanquake)\n+- #18288 Add MemorySanitizer (MSan) in Travis to detect use of uninitialized memory (practicalswift)\n+- #18307 Require pkg-config for all of the hosts (hebasto)\n+- #19445 Update msvc build to use ISO standard C++17 (sipsorcery)\n+- #18882 fix -Wformat-security check when compiling with GCC (fanquake)\n+- #17919 Allow building with system clang (dongcarl)\n+- #19553 pass -fcommon when building genisoimage (fanquake)\n+- #19565 call `AC_PATH_TOOL` for dsymutil in macOS cross-compile (fanquake)\n+- #19530 build LTO support into Apple's ld64 (theuni)\n+- #19525 add -Wl,-z,separate-code to hardening flags (fanquake)\n+- #19667 set minimum required Boost to 1.58.0 (fanquake)\n+- #19672 make clean removes .gcda and .gcno files from fuzz directory (Crypt-iQ)\n+- #19622 Drop ancient hack in gitian-linux descriptor (hebasto)\n+- #19688 Add support for llvm-cov (hebasto)\n+- #19718 Add missed gcov files to 'make clean' (hebasto)\n+- #19719 Add Werror=range-loop-analysis (MarcoFalke)\n+- #19015 Enable some commonly enabled compiler diagnostics (practicalswift)\n+- #19689 build, qt: Add Qt version checking (hebasto)\n+- #17396 modest Android improvements (icota)\n+- #18405 Drop all of the ZeroMQ patches (hebasto)\n+- #15704 Move Win32 defines to configure.ac to ensure they are globally defined (luke-jr)\n+- #19761 improve sed robustness by not using sed (fanquake)\n+- #19758 Drop deprecated and unused `GUARDED_VAR` and `PT_GUARDED_VAR` annotations (hebasto)\n+- #18921 add stack-clash and control-flow protection options to hardening flags (fanquake)\n+- #19803 Bugfix: Define and use `HAVE_FDATASYNC` correctly outside LevelDB (luke-jr)\n+- #19685 CMake invocation cleanup (dongcarl)\n+- #19861 add /usr/local/ to `LCOV_FILTER_PATTERN` for macOS builds (Crypt-iQ)\n+- #19916 allow user to specify `DIR_FUZZ_SEED_CORPUS` for `cov_fuzz` (Crypt-iQ)\n+- #19944 Update secp256k1 subtree (including BIP340 support) (sipa)\n+- #19558 Split pthread flags out of ldflags and dont use when building libconsensus (fanquake)\n+- #19959 patch qt libpng to fix powerpc build (fanquake)\n+- #19868 Fix target name (hebasto)\n+- #19960 The vcpkg tool has introduced a proper way to use manifests (sipsorcery)\n+- #20065 fuzz: Configure check for main function (MarcoFalke)\n+- #18750 Optionally skip external warnings (vasild)\n+- #20147 Update libsecp256k1 (endomorphism, test improvements) (sipa)\n+- #20156 Make sqlite support optional (compile-time) (luke-jr)\n+- #20318 Ensure source tarball has leading directory name (MarcoFalke)\n+- #20447 Patch `qt_intersect_spans` to avoid non-deterministic behavior in LLVM 8 (achow101)\n+- #20505 Avoid secp256k1.h include from system (dergoegge)\n+- #20527 Do not ignore Homebrew's SQLite on macOS (hebasto)\n+- #20478 Don't set BDB flags when configuring without (jonasschnelli)\n+- #20563 Check that Homebrew's berkeley-db4 package is actually installed (hebasto)\n+- #19493 Fix clang build on Mac (bvbfan)\n+\n+### Tests and QA\n+- #18593 Complete impl. of `msg_merkleblock` and `wait_for_merkleblock` (theStack)\n+- #18609 Remove REJECT message code (hebasto)\n+- #18584 Check that the version message does not leak the local address (MarcoFalke)\n+- #18597 Extend `wallet_dump` test to cover comments (MarcoFalke)\n+- #18596 Try once more when RPC connection fails on Windows (MarcoFalke)\n+- #18451 shift coverage from getunconfirmedbalance to getbalances (jonatack)\n+- #18631 appveyor: Disable functional tests for now (MarcoFalke)\n+- #18628 Add various low-level p2p tests (MarcoFalke)\n+- #18615 Avoid accessing free'd memory in `validation_chainstatemanager_tests` (MarcoFalke)\n+- #18571 fuzz: Disable debug log file (MarcoFalke)\n+- #18653 add coverage for bitcoin-cli -rpcwait (jonatack)\n+- #18660 Verify findCommonAncestor always initializes outputs (ryanofsky)\n+- #17669 Have coins simulation test also use CCoinsViewDB (jamesob)\n+- #18662 Replace gArgs with local argsman in bench (MarcoFalke)\n+- #18641 Create cached blocks not in the future (MarcoFalke)\n+- #18682 fuzz: `http_request` workaround for libevent < 2.1.1 (theStack)\n+- #18692 Bump timeout in `wallet_import_rescan` (MarcoFalke)\n+- #18695 Replace boost::mutex with std::mutex (hebasto)\n+- #18633 Properly raise FailedToStartError when rpc shutdown before warmup finished (MarcoFalke)\n+- #18675 Don't initialize PrecomputedTransactionData in txvalidationcache tests (jnewbery)\n+- #18691 Add `wait_for_cookie_credentials()` to framework for rpcwait tests (jonatack)\n+- #18672 Add further BIP37 size limit checks to `p2p_filter.py` (theStack)\n+- #18721 Fix linter issue (hebasto)\n+- #18384 More specific `feature_segwit` test error messages and fixing incorrect comments (gzhao408)\n+- #18575 bench: Remove requirement that all benches use same testing setup (MarcoFalke)\n+- #18690 Check object hashes in `wait_for_getdata` (robot-visions)\n+- #18712 display command line options passed to `send_cli()` in debug log (jonatack)\n+- #18745 Check submitblock return values (MarcoFalke)\n+- #18756 Use `wait_for_getdata()` in `p2p_compactblocks.py` (theStack)\n+- #18724 Add coverage for -rpcwallet cli option (jonatack)\n+- #18754 bench: Add caddrman benchmarks (vasild)\n+- #18585 Use zero-argument super() shortcut (Python 3.0+) (theStack)\n+- #18688 fuzz: Run in parallel (MarcoFalke)\n+- #18770 Remove raw-tx byte juggling in `mempool_reorg` (MarcoFalke)\n+- #18805 Add missing `sync_all` to `wallet_importdescriptors.py` (achow101)\n+- #18759 bench: Start nodes with -nodebuglogfile (MarcoFalke)\n+- #18774 Added test for upgradewallet RPC (brakmic)\n+- #18485 Add `mempool_updatefromblock.py` (hebasto)\n+- #18727 Add CreateWalletFromFile test (ryanofsky)\n+- #18726 Check misbehavior more independently in `p2p_filter.py` (robot-visions)\n+- #18825 Fix message for `ECC_InitSanityCheck` test (fanquake)\n+- #18576 Use unittest for `test_framework` unit testing (gzhao408)\n+- #18828 Strip down previous releases boilerplate (MarcoFalke)\n+- #18617 Add factor option to adjust test timeouts (brakmic)\n+- #18855 `feature_backwards_compatibility.py` test downgrade after upgrade (achow101)\n+- #18864 Add v0.16.3 backwards compatibility test, bump v0.19.0.1 to v0.19.1 (Sjors)\n+- #18917 fuzz: Fix vector size problem in system fuzzer (brakmic)\n+- #18901 fuzz: use std::optional for `sep_pos_opt` variable (brakmic)\n+- #18888 Remove RPCOverloadWrapper boilerplate (MarcoFalke)\n+- #18952 Avoid os-dependent path (fametrano)\n+- #18938 Fill fuzzing coverage gaps for functions in consensus/validation.h, primitives/block.h and util/translation.h (practicalswift)\n+- #18986 Add capability to disable RPC timeout in functional tests (rajarshimaitra)\n+- #18530 Add test for -blocksonly and -whitelistforcerelay param interaction (glowang)\n+- #19014 Replace `TEST_PREVIOUS_RELEASES` env var with `test_framework` option (MarcoFalke)\n+- #19052 Don't limit fuzzing inputs to 1 MB for afl-fuzz (now: \u221e \u2200 fuzzers) (practicalswift)\n+- #19060 Remove global `wait_until` from `p2p_getdata` (MarcoFalke)\n+- #18926 Pass ArgsManager into `getarg_tests` (glowang)\n+- #19110 Explain that a bug should be filed when the tests fail (MarcoFalke)\n+- #18965 Implement `base58_decode` (10xcryptodev)\n+- #16564 Always define the `raii_event_tests` test suite (candrews)\n+- #19122 Add missing `sync_blocks` to `wallet_hd` (MarcoFalke)\n+- #18875 fuzz: Stop nodes in `process_message*` fuzzers (MarcoFalke)\n+- #18974 Check that invalid witness destinations can not be imported (MarcoFalke)\n+- #18210 Type hints in Python tests (kiminuo)\n+- #19159 Make valgrind.supp work on aarch64 (MarcoFalke)\n+- #19082 Moved the CScriptNum asserts into the unit test in script.py (gillichu)\n+- #19172 Do not swallow flake8 exit code (hebasto)\n+- #19188 Avoid overwriting the NodeContext member of the testing setup [-Wshadow-field] (MarcoFalke)\n+- #18890 `disconnect_nodes` should warn if nodes were already disconnected (robot-visions)\n+- #19227 change blacklist to blocklist (TrentZ)\n+- #19230 Move base58 to own module to break circular dependency (sipa)\n+- #19083 `msg_mempool`, `fRelay`, and other bloomfilter tests (gzhao408)\n+- #16756 Connection eviction logic tests (mzumsande)\n+- #19177 Fix and clean `p2p_invalid_messages` functional tests (troygiorshev)\n+- #19264 Don't import asyncio to test magic bytes (jnewbery)\n+- #19178 Make `mininode_lock` non-reentrant (jnewbery)\n+- #19153 Mempool compatibility test (S3RK)\n+- #18434 Add a test-security target and run it in CI (fanquake)\n+- #19252 Wait for disconnect in `disconnect_p2ps` + bloomfilter test followups (gzhao408)\n+- #19298 Add missing `sync_blocks` (MarcoFalke)\n+- #19304 Check that message sends successfully when header is split across two buffers (troygiorshev)\n+- #19208 move `sync_blocks` and `sync_mempool` functions to `test_framework.py` (ycshao)\n+- #19198 Check that peers with forcerelay permission are not asked to feefilter (MarcoFalke)\n+- #19351 add two edge case tests for CSubNet (vasild)\n+- #19272 net, test: invalid p2p messages and test framework improvements (jonatack)\n+- #19348 Bump linter versions (duncandean)\n+- #19366 Provide main(\u2026) function in fuzzer. Allow building uninstrumented harnesses with --enable-fuzz (practicalswift)\n+- #19412 move `TEST_RUNNER_EXTRA` into native tsan setup (fanquake)\n+- #19368 Improve functional tests compatibility with BSD/macOS (S3RK)\n+- #19028 Set -logthreadnames in unit tests (MarcoFalke)\n+- #18649 Add std::locale::global to list of locale dependent functions (practicalswift)\n+- #19140 Avoid fuzzer-specific nullptr dereference in libevent when handling PROXY requests (practicalswift)\n+- #19214 Auto-detect SHA256 implementation in benchmarks (sipa)\n+- #19353 Fix mistakenly swapped \"previous\" and \"current\" lock orders (hebasto)\n+- #19533 Remove unnecessary `cs_mains` in `denialofservice_tests` (jnewbery)\n+- #19423 add functional test for txrelay during and after IBD (gzhao408)\n+- #16878 Fix non-deterministic coverage of test `DoS_mapOrphans` (davereikher)\n+- #19548 fuzz: add missing overrides to `signature_checker` (jonatack)\n+- #19562 Fix fuzzer compilation on macOS (freenancial)\n+- #19370 Static asserts for consistency of fee defaults (domob1812)\n+- #19599 clean `message_count` and `last_message` (troygiorshev)\n+- #19597 test decodepsbt fee calculation (count input value only once per UTXO) (theStack)\n+- #18011 Replace current benchmarking framework with nanobench (martinus)\n+- #19489 Fail `wait_until` early if connection is lost (MarcoFalke)\n+- #19340 Preserve the `LockData` initial state if \"potential deadlock detected\" exception thrown (hebasto)\n+- #19632 Catch decimal.InvalidOperation from `TestNodeCLI#send_cli` (Empact)\n+- #19098 Remove duplicate NodeContext hacks (ryanofsky)\n+- #19649 Restore test case for p2p transaction blinding (instagibbs)\n+- #19657 Wait until `is_connected` in `add_p2p_connection` (MarcoFalke)\n+- #19631 Wait for 'cmpctblock' in `p2p_compactblocks` when it is expected (Empact)\n+- #19674 use throwaway _ variable for unused loop counters (theStack)\n+- #19709 Fix 'make cov' with clang (hebasto)\n+- #19564 `p2p_feefilter` improvements (logging, refactoring, speedup) (theStack)\n+- #19756 add `sync_all` to fix race condition in wallet groups test (kallewoof)\n+- #19727 Removing unused classes from `p2p_leak.py` (dhruv)\n+- #19722 Add test for getblockheader verboseness (torhte)\n+- #19659 Add a seed corpus generation option to the fuzzing `test_runner` (darosior)\n+- #19775 Activate segwit in TestChain100Setup (MarcoFalke)\n+- #19760 Remove confusing mininode terminology (jnewbery)\n+- #19752 Update `wait_until` usage in tests not to use the one from utils (slmtpz)\n+- #19839 Set appveyor VM version to previous Visual Studio 2019 release (sipsorcery)\n+- #19830 Add tsan supp for leveldb::DBImpl::DeleteObsoleteFiles (MarcoFalke)\n+- #19710 bench: Prevent thread oversubscription and decreases the variance of result values (hebasto)\n+- #19842 Update the vcpkg checkout commit ID in appveyor config (sipsorcery)\n+- #19507 Expand functional zmq transaction tests (instagibbs)\n+- #19816 Rename wait until helper to `wait_until_helper` (MarcoFalke)\n+- #19859 Fixes failing functional test by changing version (n-thumann)\n+- #19887 Fix flaky `wallet_basic` test (fjahr)\n+- #19897 Change `FILE_CHAR_BLOCKLIST` to `FILE_CHARS_DISALLOWED` (verretor)\n+- #19800 Mockwallet (MarcoFalke)\n+- #19922 Run `rpc_txoutproof.py` even with wallet disabled (MarcoFalke)\n+- #19936 batch rpc with params (instagibbs)\n+- #19971 create default wallet in extended tests (Sjors)\n+- #19781 add parameterized constructor for `msg_sendcmpct()` (theStack)\n+- #19963 Clarify blocksonly whitelistforcerelay test (t-bast)\n+- #20022 Use explicit p2p objects where available (guggero)\n+- #20028 Check that invalid peer traffic is accounted for (MarcoFalke)\n+- #20004 Add signet witness commitment section parse tests (MarcoFalke)\n+- #20034 Get rid of default wallet hacks (ryanofsky)\n+- #20069 Mention commit id in scripted diff error (laanwj)\n+- #19947 Cover `change_type` option of \"walletcreatefundedpsbt\" RPC (guggero)\n+- #20126 `p2p_leak_tx.py` improvements (use MiniWallet, add `p2p_lock` acquires) (theStack)\n+- #20129 Don't export `in6addr_loopback` (vasild)\n+- #20131 Remove unused nVersion=1 in p2p tests (MarcoFalke)\n+- #20161 Minor Taproot follow-ups (sipa)\n+- #19401 Use GBT to get block versions correct (luke-jr)\n+- #20159 `mining_getblocktemplate_longpoll.py` improvements (use MiniWallet, add logging) (theStack)\n+- #20039 Convert amounts from float to decimal (prayank23)\n+- #20112 Speed up `wallet_resendwallettransactions` with mockscheduler RPC (MarcoFalke)\n+- #20247 fuzz: Check for addrv1 compatibility before using addrv1 serializer. Fuzz addrv2 serialization (practicalswift)\n+- #20167 Add test for -blockversion (MarcoFalke)\n+- #19877 Clarify `rpc_net` & `p2p_disconnect_ban functional` tests (amitiuttarwar)\n+- #20258 Remove getnettotals/getpeerinfo consistency test (jnewbery)\n+- #20242 fuzz: Properly initialize PrecomputedTransactionData (MarcoFalke)\n+- #20262 Skip --descriptor tests if sqlite is not compiled (achow101)\n+- #18788 Update more tests to work with descriptor wallets (achow101)\n+- #20289 fuzz: Check for addrv1 compatibility before using addrv1 serializer/deserializer on CService (practicalswift)\n+- #20290 fuzz: Fix DecodeHexTx fuzzing harness issue (practicalswift)\n+- #20245 Run `script_assets_test` even if built --with-libs=no (MarcoFalke)\n+- #20300 fuzz: Add missing `ECC_Start` to `descriptor_parse` test (S3RK)\n+- #20283 Only try witness deser when checking for witness deser failure (MarcoFalke)\n+- #20303 fuzz: Assert expected DecodeHexTx behaviour when using legacy decoding (practicalswift)\n+- #20316 Fix `wallet_multiwallet` test issue on Windows (MarcoFalke)\n+- #20326 Fix `ecdsa_verify` in test framework (stepansnigirev)\n+- #20328 cirrus: Skip tasks on the gui repo main branch (MarcoFalke)\n+- #20355 fuzz: Check for addrv1 compatibility before using addrv1 serializer/deserializer on CSubNet (practicalswift)\n+- #20332 Mock IBD in `net_processing` fuzzers (MarcoFalke)\n+- #20218 Suppress `epoll_ctl` data race (MarcoFalke)\n+- #20375 fuzz: Improve coverage for CPartialMerkleTree fuzzing harness (practicalswift)\n+- #19669 contrib: Fixup valgrind suppressions file (MarcoFalke)\n+- #18879 valgrind: remove outdated suppressions (fanquake)\n+- #19226 Add BerkeleyDatabase tsan suppression (MarcoFalke)\n+- #20379 Remove no longer needed UBSan suppression (float divide-by-zero in validation.cpp) (practicalswift)\n+- #18190, #18736, #18744, #18775, #18783, #18867, #18994, #19065,\n+  #19067, #19143, #19222, #19247, #19286, #19296, #19379, #19934,\n+  #20188, #20395 Add fuzzing harnessses (practicalswift)\n+- #18638 Use mockable time for ping/pong, add tests (MarcoFalke)\n+- #19951 CNetAddr scoped ipv6 test coverage, rename scopeId to `m_scope_id` (jonatack)\n+- #20027 Use mockable time everywhere in `net_processing` (sipa)\n+- #19105 Add Muhash3072 implementation in Python (fjahr)\n+- #18704, #18752, #18753, #18765, #18839, #18866, #18873, #19022,\n+  #19023, #19429, #19552, #19778, #20176, #20179, #20214, #20292,\n+  #20299, #20322 Fix intermittent test issues (MarcoFalke)\n+- #20390 CI/Cirrus: Skip `merge_base` step for non-PRs (luke-jr)\n+- #18634 ci: Add fuzzbuzz integration configuration file (practicalswift)\n+- #18591 Add C++17 build to Travis (sipa)\n+- #18581, #18667, #18798, #19495, #19519, #19538 CI improvements (hebasto)\n+- #18683, #18705, #18735, #18778, #18799, #18829, #18912, #18929,\n+  #19008, #19041, #19164, #19201, #19267, #19276, #19321, #19371,\n+  #19427, #19730, #19746, #19881, #20294, #20339, #20368 CI improvements (MarcoFalke)\n+- #20489, #20506 MSVC CI improvements (sipsorcery)\n+\n+### Miscellaneous\n+- #18713 scripts: Add macho stack canary check to security-check.py (fanquake)\n+- #18629 scripts: Add pe .reloc section check to security-check.py (fanquake)\n+- #18437 util: `Detect posix_fallocate()` instead of assuming (vasild)\n+- #18413 script: Prevent ub when computing abs value for num opcode serialize (pierreN)\n+- #18443 lockedpool: avoid sensitive data in core files (FreeBSD) (vasild)\n+- #18885 contrib: Move optimize-pngs.py script to the maintainer repo (MarcoFalke)\n+- #18317 Serialization improvements step 6 (all except wallet/gui) (sipa)\n+- #16127 More thread safety annotation coverage (ajtowns)\n+- #19228 Update libsecp256k1 subtree (sipa)\n+- #19277 util: Add assert identity function (MarcoFalke)\n+- #19491 util: Make assert work with any value (MarcoFalke)\n+- #19205 script: `previous_release.sh` rewritten in python (bliotti)\n+- #15935 Add <datadir>/settings.json persistent settings storage (ryanofsky)\n+- #19439 script: Linter to check commit message formatting (Ghorbanian)\n+- #19654 lint: Improve commit message linter in travis (fjahr)\n+- #15382 util: Add runcommandparsejson (Sjors)\n+- #19614 util: Use `have_fdatasync` to determine fdatasync() use (fanquake)\n+- #19813 util, ci: Hard code previous release tarball checksums (hebasto)\n+- #19841 Implement Keccak and `SHA3_256` (sipa)\n+- #19643 Add -netinfo peer connections dashboard (jonatack)\n+- #15367 feature: Added ability for users to add a startup command (benthecarman)\n+- #19984 log: Remove static log message \"Initializing chainstate Chainstate [ibd] @ height -1 (null)\" (practicalswift)\n+- #20092 util: Do not use gargs global in argsmanager member functions (hebasto)\n+- #20168 contrib: Fix `gen_key_io_test_vectors.py` imports (MarcoFalke)\n+- #19624 Warn on unknown `rw_settings` (MarcoFalke)\n+- #20257 Update secp256k1 subtree to latest master (sipa)\n+- #20346 script: Modify security-check.py to use \"==\" instead of \"is\" for literal comparison (tylerchambers)\n+- #18881 Prevent UB in DeleteLock() function (hebasto)\n+- #19180, #19189, #19190, #19220, #19399 Replace RecursiveMutex with Mutex (hebasto)\n+- #19347 Make `cs_inventory` nonrecursive (jnewbery)\n+- #19773 Avoid recursive lock in IsTrusted (promag)\n+- #18790 Improve thread naming (hebasto)\n+- #20140 Restore compatibility with old CSubNet serialization (sipa)\n+- #17775 DecodeHexTx: Try case where txn has inputs first (instagibbs)\n+\n+### Documentation\n+- #18502 Update docs for getbalance (default minconf should be 0) (uzyn)\n+- #18632 Fix macos comments in release-notes (MarcoFalke)\n+- #18645 Update thread information in developer docs (jnewbery)\n+- #18709 Note why we can't use `thread_local` with glibc back compat (fanquake)\n+- #18410 Improve commenting for coins.cpp|h (jnewbery)\n+- #18157 fixing init.md documentation to not require rpcpassword (jkcd)\n+- #18739 Document how to fuzz Bitcoin Core using Honggfuzz (practicalswift)\n+- #18779 Better explain GNU ld's dislike of ld64's options (fanquake)\n+- #18663 Mention build docs in README.md (saahilshangle)\n+- #18810 Update rest info on block size and json (chrisabrams)\n+- #18939 Add c++17-enable flag to fuzzing instructions (mzumsande)\n+- #18957 Add a link from ZMQ doc to ZMQ example in contrib/ (meeDamian)\n+- #19058 Drop protobuf stuff (hebasto)\n+- #19061 Add link to Visual Studio build readme (maitrebitcoin)\n+- #19072 Expand section on Getting Started (MarcoFalke)\n+- #18968 noban precludes maxuploadtarget disconnects (MarcoFalke)\n+- #19005 Add documentation for 'checklevel' argument in 'verifychain' RPC\u2026 (kcalvinalvin)\n+- #19192 Extract net permissions doc (MarcoFalke)\n+- #19071 Separate repository for the gui (MarcoFalke)\n+- #19018 fixing description of the field sequence in walletcreatefundedpsbt RPC method (limpbrains)\n+- #19367 Span pitfalls (sipa)\n+- #19408 Windows WSL build recommendation to temporarily disable Win32 PE support (sipsorcery)\n+- #19407 explain why passing -mlinker-version is required when cross-compiling (fanquake)\n+- #19452 afl fuzzing comment about afl-gcc and afl-g++ (Crypt-iQ)\n+- #19258 improve subtree check instructions (Sjors)\n+- #19474 Use precise permission flags where possible (MarcoFalke)\n+- #19494 CONTRIBUTING.md improvements (jonatack)\n+- #19268 Add non-thread-safe note to FeeFilterRounder::round() (hebasto)\n+- #19547 Update macOS cross compilation dependencies for Focal (hebasto)\n+- #19617 Clang 8 or later is required with `FORCE_USE_SYSTEM_CLANG` (fanquake)\n+- #19639 Remove Reference Links #19582 (RobertHosking)\n+- #19605 Set `CC_FOR_BUILD` when building on OpenBSD (fanquake)\n+- #19765 Fix getmempoolancestors RPC result doc (MarcoFalke)\n+- #19786 Remove label from good first issue template (MarcoFalke)\n+- #19646 Updated outdated help command for getblocktemplate (jakeleventhal)\n+- #18817 Document differences in bitcoind and bitcoin-qt locale handling (practicalswift)\n+- #19870 update PyZMQ install instructions, fix `zmq_sub.py` file permissions (jonatack)\n+- #19903 Update build-openbsd.md with GUI support (grubles)\n+- #19241 help: Generate checkpoint height from chainparams (luke-jr)\n+- #18949 Add CODEOWNERS file to automatically nominate PR reviewers (adamjonas)\n+- #20014 Mention signet in -help output (hebasto)\n+- #20015 Added default signet config for linearize script (gr0kchain)\n+- #19958 Better document features of feelers (naumenkogs)\n+- #19871 Clarify scope of eviction protection of outbound block-relay peers (ariard)\n+- #20076 Update and improve files.md (hebasto)\n+- #20107 Collect release-notes snippets (MarcoFalke)\n+- #20109 Release notes and followups from 19339 (glozow)\n+- #20090 Tiny followups to new getpeerinfo connection type field (amitiuttarwar)\n+- #20152 Update wallet files in files.md (hebasto)\n+- #19124 Document `ALLOW_HOST_PACKAGES` dependency option (skmcontrib)\n+- #20271 Document that wallet salvage is experimental (MarcoFalke)\n+- #20281 Correct getblockstats documentation for `(sw)total_weight` (shesek)\n+- #20279 release process updates/fixups (jonatack)\n+- #20238 Missing comments for signet parameters (decryp2kanon)\n+- #20756 Add missing field (permissions) to the getpeerinfo help (amitiuttarwar)\n+- #20668 warn that incoming conns are unlikely when not using default ports (adamjonas)\n+- #19961 tor.md updates (jonatack)\n+- #19050 Add warning for rest interface limitation (fjahr)\n+- #19390 doc/REST-interface: Remove stale info (luke-jr)\n+- #19344 docs: update testgen usage example (Bushstar)\n+\n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n+- 10xcryptodev\n+- Aaron Clauson\n+- Aaron Hook\n+- Adam Jonas\n+- Adam Soltys\n+- Adam Stein\n+- Akio Nakamura\n+- Alex Willmer\n+- Amir Ghorbanian\n+- Amiti Uttarwar\n+- Andrew Chow\n+- Andrew Toth\n+- Anthony Fieroni\n+- Anthony Towns\n+- Antoine Poinsot\n+- Antoine Riard\n+- Ben Carman\n+- Ben Woosley\n+- Benoit Verret\n+- Brian Liotti\n+- Bushstar\n+- Calvin Kim\n+- Carl Dong\n+- Chris Abrams\n+- Chris L\n+- Christopher Coverdale\n+- codeShark149\n+- Cory Fields\n+- Craig Andrews\n+- Damian Mee\n+- Daniel Kraft\n+- Danny Lee\n+- David Reikher\n+- DesWurstes\n+- Dhruv Mehta\n+- Duncan Dean\n+- Elichai Turkel\n+- Elliott Jin\n+- Emil Engler\n+- Ethan Heilman\n+- eugene\n+- Fabian Jahr\n+- fanquake\n+- Ferdinando M. Ametrano\n+- freenancial\n+- furszy\n+- Gillian Chu\n+- Gleb Naumenko\n+- Glenn Willen\n+- Gloria Zhao\n+- glowang\n+- gr0kchain\n+- Gregory Sanders\n+- grubles\n+- gzhao408\n+- Harris\n+- Hennadii Stepanov\n+- Hugo Nguyen\n+- Igor Cota\n+- Ivan Metlushko\n+- Ivan Vershigora\n+- Jake Leventhal\n+- James O'Beirne\n+- Jeremy Rubin\n+- jgmorgan\n+- Jim Posen\n+- \u201cjkcd\u201d\n+- jmorgan\n+- John Newbery\n+- Johnson Lau\n+- Jon Atack\n+- Jonas Schnelli\n+- Jonathan Schoeller\n+- Jo\u00e3o Barbosa\n+- Justin Moon\n+- kanon\n+- Karl-Johan Alm\n+- Kiminuo\n+- Kristaps Kaupe\n+- lontivero\n+- Luke Dashjr\n+- Marcin Jachymiak\n+- MarcoFalke\n+- Martin Ankerl\n+- Martin Zumsande\n+- maskoficarus\n+- Matt Corallo\n+- Matthew Zipkin\n+- MeshCollider\n+- Miguel Herranz\n+- MIZUTA Takeshi\n+- mruddy\n+- Nadav Ivgi\n+- Neha Narula\n+- Nicolas Thumann\n+- Niklas G\u00f6gge\n+- Nima Yazdanmehr\n+- nsa\n+- nthumann\n+- Oliver Gugger\n+- pad\n+- pasta\n+- Peter Bushnell\n+- pierrenn\n+- Pieter Wuille\n+- practicalswift\n+- Prayank\n+- Ra\u00fal Mart\u00ednez (RME)\n+- RandyMcMillan\n+- Rene Pickhardt\n+- Riccardo Masutti\n+- Robert\n+- Rod Vagg\n+- Roy Shao\n+- Russell Yanofsky\n+- Saahil Shangle\n+- sachinkm77\n+- saibato\n+- Samuel Dobson\n+- sanket1729\n+- Sebastian Falbesoner\n+- Seleme Topuz\n+- Sishir Giri\n+- Sjors Provoost\n+- skmcontrib\n+- Stepan Snigirev\n+- Stephan Oeste\n+- Suhas Daftuar\n+- t-bast\n+- Tom Harding\n+- Torhte Butler\n+- TrentZ\n+- Troy Giorshev\n+- tryphe\n+- Tyler Chambers\n+- U-Zyn Chua\n+- Vasil Dimov\n+- wiz\n+- Wladimir J. van der Laan\n \n As well as to everyone that helped with translations on\n [Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      }
    ]
  },
  {
    "sha": "95ea54ba089610019a74c1176a2c7c0dba144b1c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWVhNTRiYTA4OTYxMDAxOWE3NGMxMTc2YTJjN2MwZGJhMTQ0YjFj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-13T21:52:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-13T21:52:34Z"
      },
      "message": "build: Bump RC to 0 (-final)\n\nTree-SHA512: 1a626b9bb7fb04ece4acb24ffcfed178cc5128d16af6860ed37097b6ed36be8b33797bd70a6da0364cd6a9246ebc02fbb83f9523abf5f8dc3c7a524a58416a8f",
      "tree": {
        "sha": "5fcc0d3e2772b2eb95eb43fd99fdd2eaeca8d754",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5fcc0d3e2772b2eb95eb43fd99fdd2eaeca8d754"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95ea54ba089610019a74c1176a2c7c0dba144b1c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl//a6IACgkQHkrtYphs\n0l3YGQgApmsekGp/AM5im5XWf/zJeoGwLKmvjPQiSJ/8LXmH2BMk62W4nnTFcSJi\nA3HI0OMb45S4HjOSJ2MKZUCoOxAB1+yYA58oocKCJT39pW6XxOszx/Q3D9x349rf\n+us5gvlNNRifPzHGeyjpZmZ6nSaZHQkJLgPJLzKngEv/bQHtOLPdmIJVnYdGGqp4\neHTcoeXB4ZL/DlV7fF4m1cLRkSHMcfH4KrUUZEXh9YSZ9/9njvFkLjwcmCT/owQL\nC9W0BSijl1iT7H+yXSLQHZ2+Bmn2LEZFuf2kc3Ufi2Cn7TieoF+VDgeTa8pL+lJ0\nLvaFb8oAWfe6U0A/p7HDT8kk4/aDSg==\n=QJWv\n-----END PGP SIGNATURE-----",
        "payload": "tree 5fcc0d3e2772b2eb95eb43fd99fdd2eaeca8d754\nparent 91f06324640bdc99a005d23e70b34b703184fb4f\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1610574731 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1610574754 +0100\n\nbuild: Bump RC to 0 (-final)\n\nTree-SHA512: 1a626b9bb7fb04ece4acb24ffcfed178cc5128d16af6860ed37097b6ed36be8b33797bd70a6da0364cd6a9246ebc02fbb83f9523abf5f8dc3c7a524a58416a8f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95ea54ba089610019a74c1176a2c7c0dba144b1c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95ea54ba089610019a74c1176a2c7c0dba144b1c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95ea54ba089610019a74c1176a2c7c0dba144b1c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91f06324640bdc99a005d23e70b34b703184fb4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91f06324640bdc99a005d23e70b34b703184fb4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91f06324640bdc99a005d23e70b34b703184fb4f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0116a662cafa4184ac394d7d0ed228db2a56d3a1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95ea54ba089610019a74c1176a2c7c0dba144b1c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95ea54ba089610019a74c1176a2c7c0dba144b1c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=95ea54ba089610019a74c1176a2c7c0dba144b1c",
        "patch": "@@ -3,7 +3,7 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 21)\n define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_RC, 5)\n+define(_CLIENT_VERSION_RC, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])"
      }
    ]
  },
  {
    "sha": "d37d06b507803edc82fc79a15f512fc5fc21718d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzdkMDZiNTA3ODAzZWRjODJmYzc5YTE1ZjUxMmZjNWZjMjE3MThk",
    "commit": {
      "author": {
        "name": "a2terminator",
        "email": "a2terminator@mail.ru",
        "date": "2021-08-15T17:26:04Z"
      },
      "committer": {
        "name": "a2terminator",
        "email": "a2terminator@mail.ru",
        "date": "2021-08-15T17:26:04Z"
      },
      "message": "Add PoS",
      "tree": {
        "sha": "389a7c74bb8d64f695ac89690299d6598271ba28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/389a7c74bb8d64f695ac89690299d6598271ba28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d37d06b507803edc82fc79a15f512fc5fc21718d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d37d06b507803edc82fc79a15f512fc5fc21718d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d37d06b507803edc82fc79a15f512fc5fc21718d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d37d06b507803edc82fc79a15f512fc5fc21718d/comments",
    "author": {
      "login": "Bitaltyn-project",
      "id": 15166908,
      "node_id": "MDQ6VXNlcjE1MTY2OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15166908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bitaltyn-project",
      "html_url": "https://github.com/Bitaltyn-project",
      "followers_url": "https://api.github.com/users/Bitaltyn-project/followers",
      "following_url": "https://api.github.com/users/Bitaltyn-project/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bitaltyn-project/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bitaltyn-project/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bitaltyn-project/subscriptions",
      "organizations_url": "https://api.github.com/users/Bitaltyn-project/orgs",
      "repos_url": "https://api.github.com/users/Bitaltyn-project/repos",
      "events_url": "https://api.github.com/users/Bitaltyn-project/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bitaltyn-project/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Bitaltyn-project",
      "id": 15166908,
      "node_id": "MDQ6VXNlcjE1MTY2OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15166908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bitaltyn-project",
      "html_url": "https://github.com/Bitaltyn-project",
      "followers_url": "https://api.github.com/users/Bitaltyn-project/followers",
      "following_url": "https://api.github.com/users/Bitaltyn-project/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bitaltyn-project/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bitaltyn-project/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bitaltyn-project/subscriptions",
      "organizations_url": "https://api.github.com/users/Bitaltyn-project/orgs",
      "repos_url": "https://api.github.com/users/Bitaltyn-project/repos",
      "events_url": "https://api.github.com/users/Bitaltyn-project/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bitaltyn-project/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "95ea54ba089610019a74c1176a2c7c0dba144b1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95ea54ba089610019a74c1176a2c7c0dba144b1c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95ea54ba089610019a74c1176a2c7c0dba144b1c"
      }
    ],
    "stats": {
      "total": 10150,
      "additions": 8237,
      "deletions": 1913
    },
    "files": [
      {
        "sha": "321370fb4359f43c99b2b4418f0426174a21ac8b",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -127,8 +127,14 @@ AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n       [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n     )\n \n+    dnl some arches may advertise a cpu type that doesn't line up with their\n+    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n+    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n+    dnl value for an extra chance of finding the correct path.\n+    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n+\n     dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl this location is chosen if boost libraries are installed with the --layout=system option\n     dnl or if you install boost with RPM\n     AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n         AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])"
      },
      {
        "sha": "4cd3b860410f83d28d9174c0d16e53e93b098334",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_CHRONO\n+#\n+# DESCRIPTION\n+#\n+#   Test for Chrono library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CHRONO_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_CHRONO\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 5\n+\n+AC_DEFUN([AX_BOOST_CHRONO],\n+[\n+\tAC_ARG_WITH([boost-chrono],\n+\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n+                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_chrono_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_chrono_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n+\t\t\t\t\t   ax_cv_boost_chrono,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n+                                   [[boost::chrono::system_clock::time_point* time = new boost::chrono::system_clock::time_point; delete time;]])],\n+                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_chrono\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                   [link_chrono=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Chrono library!)\n+            fi\n+\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "7dba44f81bf9b97901c6e0f771a08f12ea58b9b9",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -33,7 +33,7 @@\n #define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n \n /* Copyright year */\n-#define COPYRIGHT_YEAR 2019\n+#define COPYRIGHT_YEAR 2020\n \n /* Define to 1 to enable wallet functions */\n #define ENABLE_WALLET 1\n@@ -44,6 +44,9 @@\n /* define if the Boost library is available */\n #define HAVE_BOOST /**/\n \n+/* define if the Boost::Chrono library is available */\n+#define HAVE_BOOST_CHRONO /**/\n+\n /* define if the Boost::Filesystem library is available */\n #define HAVE_BOOST_FILESYSTEM /**/\n "
      },
      {
        "sha": "2bd2b7b8d26a26f8c2527d125035c723ab39b9da",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 68,
        "deletions": 10,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -5,10 +5,10 @@ define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_RC, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n-define(_COPYRIGHT_YEAR, 2020)\n+define(_COPYRIGHT_YEAR, 2021)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoinpos/bitcoinpos/issues],[bitcoin],[https://bitcoincore.org/])\n AC_CONFIG_SRCDIR([src/validation.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n@@ -149,7 +149,7 @@ AC_ARG_ENABLE([upnp-default],\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n-    [use_tests=yes])\n+    [use_tests=no])\n \n AC_ARG_ENABLE(gui-tests,\n     AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n@@ -591,20 +591,20 @@ AC_ARG_WITH([daemon],\n case $host in\n   *mingw*)\n      TARGET_OS=windows\n-     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n+     AC_CHECK_LIB([kernel32], [main],, AC_MSG_ERROR(libkernel32 missing))\n      AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n      AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n      AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n      AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n-     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n+     AC_CHECK_LIB([shell32],  [main],, AC_MSG_ERROR(libshell32 missing))\n      AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n-     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n+     AC_CHECK_LIB([ole32],    [main],, AC_MSG_ERROR(libole32 missing))\n      AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n      AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n-     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n-     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n-     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n-     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n+     AC_CHECK_LIB([advapi32], [main],, AC_MSG_ERROR(libadvapi32 missing))\n+     AC_CHECK_LIB([ws2_32],   [main],, AC_MSG_ERROR(libws2_32 missing))\n+     AC_CHECK_LIB([shlwapi],  [main],, AC_MSG_ERROR(libshlwapi missing))\n+     AC_CHECK_LIB([iphlpapi], [main],, AC_MSG_ERROR(libiphlpapi missing))\n \n      dnl -static is interpreted by libtool, where it has a different meaning.\n      dnl In libtool-speak, it's -all-static.\n@@ -646,6 +646,14 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n+         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n+         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n+         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n+         if test x$openssl_prefix != x; then\n+           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+\n          if test \"x$use_bdb\" != xno && $BREW list --versions berkeley-db4 >/dev/null && test \"x$BDB_CFLAGS\" = \"x\" && test \"x$BDB_LIBS\" = \"x\"; then\n            bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n            dnl This must precede the call to BITCOIN_FIND_BDB48 below.\n@@ -1301,6 +1309,7 @@ fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n+AX_BOOST_CHRONO\n \n dnl Opt-in to boost-process\n AS_IF([ test x$with_boost_process != x ], [ AX_BOOST_PROCESS ], [ ax_cv_boost_process=no ] )\n@@ -1353,6 +1362,54 @@ if test x$use_tests = xyes; then\n   fi\n fi\n \n+if test x$use_boost = xyes; then\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+\n+\n+dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n+dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n+dnl the abi. This was fixed in 1.57.\n+\n+dnl When building against that installed version using c++11, the headers pick up\n+dnl on the native c++11 scoped enum support and enable it, however it will fail to\n+dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n+dnl fail.\n+dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n+\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <boost/config.hpp>\n+  #include <boost/version.hpp>\n+  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n+  #define BOOST_NO_SCOPED_ENUMS\n+  #define BOOST_NO_CXX11_SCOPED_ENUMS\n+  #define CHECK\n+  #endif\n+  #include <boost/filesystem.hpp>\n+  ]],[[\n+  #if defined(CHECK)\n+    boost::filesystem::copy_file(\"foo\", \"bar\");\n+  #else\n+    choke;\n+  #endif\n+  ]])],\n+  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+fi\n+\n+dnl libcrypto check\n+\n+PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n+AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n+AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n+\n dnl libevent check\n \n if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n@@ -1678,6 +1735,7 @@ AC_SUBST(SQLITE_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(CRYPTO_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)"
      },
      {
        "sha": "5afc52237dd4e773eb6634da3fdcdadc8eeab8d7",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -66,6 +66,11 @@ Files: src/qt/res/icons/tx_mined.png\n Copyright: Jonas Schnelli\n License: Expat\n \n+Files: src/qt/res/icons/tx_cold.png\n+Copyright: Icon made by bqlqn from www.flaticon.com\n+License: Expat\n+Comment: Site: https://www.flaticon.com/authors/bqlqn\n+\n Files: src/qt/res/icons/clock*.png\n        src/qt/res/icons/eye_*.png\n        src/qt/res/icons/tx_in*.png"
      },
      {
        "sha": "02e2f3dee99dd89d888385384a59e6046058975d",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -26,7 +26,7 @@ ifneq (,$(findstring clang,$($(package)_cxx)))\n    $(package)_toolset_$(host_os)=clang\n endif\n $(package)_archiver_$(host_os)=$($(package)_ar)\n-$(package)_config_libraries=filesystem,system,thread,test\n+$(package)_config_libraries=chrono,filesystem,system,thread,test\n $(package)_cxxflags=-std=c++11 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n $(package)_cxxflags_android=-fPIC"
      },
      {
        "sha": "3e8a22a1b0b61d9d07dc635e836575286a552f72",
        "filename": "depends/packages/openssl.mk",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,83 @@\n+package=openssl\n+$(package)_version=1.0.1k\n+$(package)_download_path=https://www.openssl.org/source\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n+$(package)_patches=0001-Add-OpenSSL-termios-fix-for-musl-libc.patch\n+\n+define $(package)_set_vars\n+$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n+$(package)_config_opts+=no-camellia\n+$(package)_config_opts+=no-capieng\n+$(package)_config_opts+=no-cast\n+$(package)_config_opts+=no-comp\n+$(package)_config_opts+=no-dso\n+$(package)_config_opts+=no-dtls1\n+$(package)_config_opts+=no-ec_nistp_64_gcc_128\n+$(package)_config_opts+=no-gost\n+$(package)_config_opts+=no-gmp\n+$(package)_config_opts+=no-heartbeats\n+$(package)_config_opts+=no-idea\n+$(package)_config_opts+=no-jpake\n+$(package)_config_opts+=no-krb5\n+$(package)_config_opts+=no-libunbound\n+$(package)_config_opts+=no-md2\n+$(package)_config_opts+=no-mdc2\n+$(package)_config_opts+=no-rc4\n+$(package)_config_opts+=no-rc5\n+$(package)_config_opts+=no-rdrand\n+$(package)_config_opts+=no-rfc3779\n+$(package)_config_opts+=no-rsax\n+$(package)_config_opts+=no-sctp\n+$(package)_config_opts+=no-seed\n+$(package)_config_opts+=no-sha0\n+$(package)_config_opts+=no-shared\n+$(package)_config_opts+=no-ssl-trace\n+$(package)_config_opts+=no-ssl2\n+$(package)_config_opts+=no-ssl3\n+$(package)_config_opts+=no-static_engine\n+$(package)_config_opts+=no-store\n+$(package)_config_opts+=no-unit-test\n+$(package)_config_opts+=no-weak-ssl-ciphers\n+$(package)_config_opts+=no-whirlpool\n+$(package)_config_opts+=no-zlib\n+$(package)_config_opts+=no-zlib-dynamic\n+$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n+$(package)_config_opts_x86_64_linux=linux-x86_64\n+$(package)_config_opts_i686_linux=linux-generic32\n+$(package)_config_opts_arm_linux=linux-generic32\n+$(package)_config_opts_armv7l_linux=linux-generic32\n+$(package)_config_opts_aarch64_linux=linux-generic64\n+$(package)_config_opts_mipsel_linux=linux-generic32\n+$(package)_config_opts_mips_linux=linux-generic32\n+$(package)_config_opts_powerpc_linux=linux-generic32\n+$(package)_config_opts_riscv32_linux=linux-generic32\n+$(package)_config_opts_riscv64_linux=linux-generic64\n+$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n+$(package)_config_opts_x86_64_mingw32=mingw64\n+$(package)_config_opts_i686_mingw32=mingw\n+endef\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch && \\\n+  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n+  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n+endef\n+\n+define $(package)_config_cmds\n+  ./Configure $($(package)_config_opts)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share bin etc\n+endef"
      },
      {
        "sha": "626b34dff063a0ff4430bde2fc57995273949e0d",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1,4 +1,4 @@\n-packages:=boost libevent\n+packages:=boost openssl libevent\n \n qt_packages = zlib\n "
      },
      {
        "sha": "495897de7be792cd8d07e22b79c1a5be05b427cf",
        "filename": "depends/packages/sqlite.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/sqlite.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/packages/sqlite.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/sqlite.mk?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -9,6 +9,10 @@ $(package)_config_opts=--disable-shared --disable-readline --disable-dynamic-ext\n $(package)_config_opts_linux=--with-pic\n endef\n \n+define $(package)_preprocess_cmds\n+  sed -i \"s/PACKAGE_STRING='sqlite /PACKAGE_STRING='sqlite/\" configure\n+endef\n+\n define $(package)_config_cmds\n   $($(package)_autoconf)\n endef"
      },
      {
        "sha": "003099bdc20095d4050287d4457b8369b630fd62",
        "filename": "depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,17 @@\n+diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c\n+index a38c758..d99edc2 100644\n+--- a/crypto/ui/ui_openssl.c\n++++ b/crypto/ui/ui_openssl.c\n+@@ -190,9 +190,9 @@\n+ # undef  SGTTY\n+ #endif\n+ \n+-#if defined(linux) && !defined(TERMIO)\n+-# undef  TERMIOS\n+-# define TERMIO\n++#if defined(linux)\n++# define TERMIOS\n++# undef  TERMIO\n+ # undef  SGTTY\n+ #endif\n+ "
      },
      {
        "sha": "46b29139fa735d5c874bb57decb17381563d4740",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -33,6 +33,7 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n+ libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n  libboost    | Utility          | Library for threading, data structures, etc\n  libevent    | Networking       | OS independent asynchronous networking\n \n@@ -81,7 +82,7 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\n+    sudo apt-get install libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n \n BerkeleyDB is required for the wallet.\n \n@@ -131,7 +132,7 @@ built by default.\n \n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n+    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n "
      },
      {
        "sha": "92aaa38e074c8e226991f2a031f4d71c2dfb44a0",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -20,7 +20,7 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) -I$(srcdir)/secp256k1/include $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) -I$(srcdir)/secp256k1/include $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS)\n \n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n \n@@ -106,6 +106,7 @@ endif\n BITCOIN_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n+  addressbook.h \\\n   attributes.h \\\n   banman.h \\\n   base58.h \\\n@@ -117,6 +118,7 @@ BITCOIN_CORE_H = \\\n   chainparams.h \\\n   chainparamsbase.h \\\n   chainparamsseeds.h \\\n+  checkpoints.h \\\n   checkqueue.h \\\n   clientversion.h \\\n   coins.h \\\n@@ -178,6 +180,7 @@ BITCOIN_CORE_H = \\\n   policy/rbf.h \\\n   policy/settings.h \\\n   pow.h \\\n+  pos.h \\\n   protocol.h \\\n   psbt.h \\\n   random.h \\\n@@ -289,6 +292,7 @@ libbitcoin_server_a_SOURCES = \\\n   blockencodings.cpp \\\n   blockfilter.cpp \\\n   chain.cpp \\\n+  checkpoints.cpp \\\n   consensus/tx_verify.cpp \\\n   dbwrapper.cpp \\\n   flatfile.cpp \\\n@@ -314,6 +318,7 @@ libbitcoin_server_a_SOURCES = \\\n   policy/rbf.cpp \\\n   policy/settings.cpp \\\n   pow.cpp \\\n+  pos.cpp \\\n   rest.cpp \\\n   rpc/blockchain.cpp \\\n   rpc/mining.cpp \\\n@@ -359,6 +364,7 @@ libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(SQLITE_CFLAG\n libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_wallet_a_SOURCES = \\\n   interfaces/wallet.cpp \\\n+  addressbook.cpp \\\n   wallet/bdb.cpp \\\n   wallet/coincontrol.cpp \\\n   wallet/context.cpp \\\n@@ -582,7 +588,9 @@ bitcoin_daemon_sources += bitcoind-res.rc\n endif\n \n bitcoin_bin_ldadd = \\\n+  $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBUNIVALUE) \\\n@@ -594,7 +602,7 @@ bitcoin_bin_ldadd = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n+bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n \n bitcoind_SOURCES = $(bitcoin_daemon_sources)\n bitcoind_CPPFLAGS = $(bitcoin_bin_cppflags)\n@@ -624,7 +632,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(EVENT_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n@@ -645,15 +653,15 @@ bitcoin_tx_LDADD = \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS)\n+bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n # bitcoin-wallet binary #\n bitcoin_wallet_SOURCES = bitcoin-wallet.cpp\n bitcoin_wallet_CPPFLAGS = $(bitcoin_bin_cppflags)\n bitcoin_wallet_CXXFLAGS = $(bitcoin_bin_cxxflags)\n bitcoin_wallet_LDFLAGS = $(bitcoin_bin_ldflags)\n-bitcoin_wallet_LDADD = $(LIBBITCOIN_WALLET_TOOL) $(bitcoin_bin_ldadd)\n+bitcoin_wallet_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET_TOOL) $(bitcoin_bin_ldadd)\n \n if TARGET_WINDOWS\n bitcoin_wallet_SOURCES += bitcoin-wallet-res.rc"
      },
      {
        "sha": "85df21db6f62c41bd492a1797b5b7d6fc21b120d",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -74,7 +74,7 @@ bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "b6d0c56aa62be132e49e74f31b7dcf743fcada09",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -29,6 +29,7 @@ QT_FORMS_UI = \\\n   qt/forms/receivecoinsdialog.ui \\\n   qt/forms/receiverequestdialog.ui \\\n   qt/forms/debugwindow.ui \\\n+  qt/forms/stakepage.ui \\\n   qt/forms/sendcoinsdialog.ui \\\n   qt/forms/sendcoinsentry.ui \\\n   qt/forms/signverifymessagedialog.ui \\\n@@ -41,6 +42,7 @@ QT_MOC_CPP = \\\n   qt/moc_createwalletdialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n+  qt/moc_bitcoinaddresstypes.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n   qt/moc_bitcoin.cpp \\\n   qt/moc_bitcoingui.cpp \\\n@@ -64,12 +66,14 @@ QT_MOC_CPP = \\\n   qt/moc_paymentserver.cpp \\\n   qt/moc_psbtoperationsdialog.cpp \\\n   qt/moc_qrimagewidget.cpp \\\n+  qt/moc_qswitchcontrol.cpp \\\n   qt/moc_qvalidatedlineedit.cpp \\\n   qt/moc_qvaluecombobox.cpp \\\n   qt/moc_receivecoinsdialog.cpp \\\n   qt/moc_receiverequestdialog.cpp \\\n   qt/moc_recentrequeststablemodel.cpp \\\n   qt/moc_rpcconsole.cpp \\\n+  qt/moc_stakepage.cpp \\\n   qt/moc_sendcoinsdialog.cpp \\\n   qt/moc_sendcoinsentry.cpp \\\n   qt/moc_signverifymessagedialog.cpp \\\n@@ -95,7 +99,8 @@ QT_MOC = \\\n   qt/bitcoinamountfield.moc \\\n   qt/intro.moc \\\n   qt/overviewpage.moc \\\n-  qt/rpcconsole.moc\n+  qt/rpcconsole.moc \\\n+  qt/walletmodel.moc\n \n QT_QRC_CPP = qt/qrc_bitcoin.cpp\n QT_QRC = qt/bitcoin.qrc\n@@ -108,6 +113,7 @@ BITCOIN_QT_H = \\\n   qt/askpassphrasedialog.h \\\n   qt/bantablemodel.h \\\n   qt/bitcoinaddressvalidator.h \\\n+  qt/bitcoinaddresstypes.h \\\n   qt/bitcoinamountfield.h \\\n   qt/bitcoin.h \\\n   qt/bitcoingui.h \\\n@@ -136,6 +142,7 @@ BITCOIN_QT_H = \\\n   qt/platformstyle.h \\\n   qt/psbtoperationsdialog.h \\\n   qt/qrimagewidget.h \\\n+  qt/qswitchcontrol.h \\\n   qt/qvalidatedlineedit.h \\\n   qt/qvaluecombobox.h \\\n   qt/receivecoinsdialog.h \\\n@@ -147,6 +154,7 @@ BITCOIN_QT_H = \\\n   qt/sendcoinsrecipient.h \\\n   qt/signverifymessagedialog.h \\\n   qt/splashscreen.h \\\n+  qt/stakepage.h \\\n   qt/trafficgraphwidget.h \\\n   qt/transactiondesc.h \\\n   qt/transactiondescdialog.h \\\n@@ -208,12 +216,17 @@ RES_ICONS = \\\n   qt/res/icons/tx_input.png \\\n   qt/res/icons/tx_output.png \\\n   qt/res/icons/tx_mined.png \\\n-  qt/res/icons/warning.png\n+  qt/res/icons/tx_cold.png \\\n+  qt/res/icons/warning.png \\\n+  qt/res/icons/staking_on.png \\\n+  qt/res/icons/staking_off.png \\\n+  qt/res/icons/lock_staking.png\n \n BITCOIN_QT_BASE_CPP = \\\n   qt/bantablemodel.cpp \\\n   qt/bitcoin.cpp \\\n   qt/bitcoinaddressvalidator.cpp \\\n+  qt/bitcoinaddresstypes.cpp \\\n   qt/bitcoinamountfield.cpp \\\n   qt/bitcoingui.cpp \\\n   qt/bitcoinunits.cpp \\\n@@ -228,6 +241,7 @@ BITCOIN_QT_BASE_CPP = \\\n   qt/optionsmodel.cpp \\\n   qt/peertablemodel.cpp \\\n   qt/platformstyle.cpp \\\n+  qt/qswitchcontrol.cpp \\\n   qt/qvalidatedlineedit.cpp \\\n   qt/qvaluecombobox.cpp \\\n   qt/rpcconsole.cpp \\\n@@ -253,6 +267,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/receivecoinsdialog.cpp \\\n   qt/receiverequestdialog.cpp \\\n   qt/recentrequeststablemodel.cpp \\\n+  qt/stakepage.cpp \\\n   qt/sendcoinsdialog.cpp \\\n   qt/sendcoinsentry.cpp \\\n   qt/signverifymessagedialog.cpp \\\n@@ -320,7 +335,7 @@ if ENABLE_ZMQ\n bitcoin_qt_ldadd += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n bitcoin_qt_ldadd += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)\n bitcoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n bitcoin_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX"
      },
      {
        "sha": "166250ea28a7d519d973bd1cc8d02bd0aaebf8c7",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -55,7 +55,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(QR_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)"
      },
      {
        "sha": "8546df51cdbb21eaf37fcff38bb6b3cd2c949bf4",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -204,6 +204,7 @@ FUZZ_SUITE_LD_COMMON = \\\n  $(LIBMEMENV) \\\n  $(LIBSECP256K1) \\\n  $(EVENT_LIBS) \\\n+ $(CRYPTO_LIBS) \\\n  $(EVENT_PTHREADS_LIBS)\n \n # test_bitcoin binary #\n@@ -319,7 +320,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n+test_test_bitcoin_LDADD += $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS) -static\n \n if ENABLE_ZMQ"
      },
      {
        "sha": "9ab792b08468f95a049b61ecaa1ea1832da28483",
        "filename": "src/addressbook.cpp",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/addressbook.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/addressbook.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addressbook.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The BitcoinPoS Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"addressbook.h\"\n+#include <string>\n+\n+namespace AddressBook {\n+\n+    namespace AddressBookPurpose {\n+        const std::string UNKNOWN{\"unknown\"};\n+        const std::string RECEIVE{\"receive\"};\n+        const std::string SEND{\"send\"};\n+    }\n+\n+    bool CAddressBookData::isSendPurpose() const\n+    {\n+        return purpose == AddressBookPurpose::SEND;\n+    }\n+\n+    bool CAddressBookData::isReceivePurpose() const\n+    {\n+        return purpose == AddressBookPurpose::RECEIVE;\n+    }\n+}\n+"
      },
      {
        "sha": "0e3946ad7cfdf0826676df9e57e30d59f2370429",
        "filename": "src/addressbook.h",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/addressbook.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/addressbook.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addressbook.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The BitcoinPoS Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ADDRESSBOOK_H\n+#define BITCOIN_ADDRESSBOOK_H\n+\n+#include <map>\n+#include <string>\n+\n+namespace AddressBook {\n+\n+    namespace AddressBookPurpose {\n+        extern const std::string UNKNOWN;\n+        extern const std::string RECEIVE;\n+        extern const std::string SEND;\n+    }\n+\n+    /** Address book data */\n+    class CAddressBookData\n+    {\n+    private:\n+        bool m_change{true};\n+        std::string m_label;\n+    public:\n+        std::string purpose;\n+\n+        CAddressBookData() : purpose(AddressBook::AddressBookPurpose::UNKNOWN) {}\n+\n+        typedef std::map<std::string, std::string> StringMap;\n+        StringMap destdata;\n+\n+        bool IsChange() const { return m_change; }\n+        const std::string& GetLabel() const { return m_label; }\n+        void SetLabel(const std::string& label) {\n+            m_change = false;\n+            m_label = label;\n+        }\n+        bool isSendPurpose() const;\n+        bool isReceivePurpose() const;\n+    };\n+\n+}\n+\n+#endif //BITCOIN_ADDRESSBOOK_H"
      },
      {
        "sha": "23b8ddc5486c8cd45624c7baf299ca9896206a6c",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -41,7 +41,7 @@ bool CAddrInfo::IsTerrible(int64_t nNow) const\n     if (nLastTry && nLastTry >= nNow - 60) // never remove things tried in the last minute\n         return false;\n \n-    if (nTime > nNow + 10 * 60) // came in a flying DeLorean\n+    if (nTime > nNow + 3 * 60) // came in a flying DeLorean\n         return true;\n \n     if (nTime == 0 || nNow - nTime > ADDRMAN_HORIZON_DAYS * 24 * 60 * 60) // not seen in recent history\n@@ -62,7 +62,7 @@ double CAddrInfo::GetChance(int64_t nNow) const\n     int64_t nSinceLastTry = std::max<int64_t>(nNow - nLastTry, 0);\n \n     // deprioritize very recent attempts away\n-    if (nSinceLastTry < 60 * 10)\n+    if (nSinceLastTry < 3 * 60)\n         fChance *= 0.01;\n \n     // deprioritize 66% after each failed attempt, but at most 1/28th to avoid the search taking forever or overly penalizing outages."
      },
      {
        "sha": "f7a13e43654898f0792ca8756812f4b669c71489",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -12,6 +12,7 @@\n typedef int64_t CAmount;\n \n static const CAmount COIN = 100000000;\n+static const CAmount CENT = 1000000;\n \n /** No amount larger than this (in satoshi) is valid.\n  *"
      },
      {
        "sha": "3d675ed7b0c67c8b2c10d3de346e4fd5d0f00949",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -34,7 +34,7 @@ static void AssembleBlock(benchmark::Bench& bench)\n     const CScript SCRIPT_PUB{CScript(OP_0) << std::vector<unsigned char>{witness_program.begin(), witness_program.end()}};\n \n     // Collect some loose transactions that spend the coinbases of our mined blocks\n-    constexpr size_t NUM_BLOCKS{200};\n+    constexpr size_t NUM_BLOCKS{600};\n     std::array<CTransactionRef, NUM_BLOCKS - COINBASE_MATURITY + 1> txs;\n     for (size_t b{0}; b < NUM_BLOCKS; ++b) {\n         CMutableTransaction tx;"
      },
      {
        "sha": "b2b3bef47c12cd106208c6e332c79f3dbfef991d",
        "filename": "src/bench/data/block413567.raw",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bench/data/block413567.raw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bench/data/block413567.raw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/data/block413567.raw?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "76986680c4259a87d2ab2fdac5c8918e04735404",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -70,7 +70,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u, testnet: %u, signet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), signetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:48931/wallet/<walletname>\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password. When combined with -stdinwalletpassphrase, -stdinrpcpass consumes the first line, and -stdinwalletpassphrase consumes the second.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-stdinwalletpassphrase\", \"Read wallet passphrase from standard input as a single line. When combined with -stdin, the first line from standard input is used for the wallet passphrase.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -235,6 +235,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     const int ID_BLOCKCHAININFO = 1;\n     const int ID_WALLETINFO = 2;\n     const int ID_BALANCES = 3;\n+    const int ID_GETDIFFICULTY = 4;\n \n     /** Create a simulated `getinfo` request. */\n     UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n@@ -247,6 +248,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n         result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n         result.push_back(JSONRPCRequestObj(\"getbalances\", NullUniValue, ID_BALANCES));\n+        result.push_back(JSONRPCRequestObj(\"getdifficulty\", NullUniValue, ID_GETDIFFICULTY));\n         return result;\n     }\n \n@@ -279,6 +281,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n         result.pushKV(\"chain\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"]));\n         if (!batch[ID_WALLETINFO][\"result\"].isNull()) {\n+            result.pushKV(\"stake\", batch[ID_WALLETINFO][\"result\"][\"stake\"]);\n             result.pushKV(\"keypoolsize\", batch[ID_WALLETINFO][\"result\"][\"keypoolsize\"]);\n             if (!batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"].isNull()) {\n                 result.pushKV(\"unlocked_until\", batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"]);\n@@ -618,6 +621,8 @@ static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, co\n         } else {\n             throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");\n         }\n+    } else if (response.status == HTTP_SERVICE_UNAVAILABLE) {\n+        throw std::runtime_error(strprintf(\"Server response: %s\", response.body));        \n     } else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n         throw std::runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\n     else if (response.body.empty())"
      },
      {
        "sha": "100731a28f96e44c6588779be4fc46a2a5552ee1",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -647,7 +647,7 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n         SignatureData sigdata = DataFromTransaction(mergedTx, i, coin.out);\n         // Only sign SIGHASH_SINGLE if there's a corresponding output:\n         if (!fHashSingle || (i < mergedTx.vout.size()))\n-            ProduceSignature(keystore, MutableTransactionSignatureCreator(&mergedTx, i, amount, nHashType), prevPubKey, sigdata);\n+            ProduceSignature(keystore, MutableTransactionSignatureCreator(&mergedTx, i, amount, nHashType), prevPubKey, sigdata, false);\n \n         UpdateInput(txin, sigdata);\n     }"
      },
      {
        "sha": "1fc61cb9a094666dcbdd00c3b39e7140cbba8fc0",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -143,6 +143,9 @@ class CBlockIndex\n     //! pointer to the index of the predecessor of this block\n     CBlockIndex* pprev{nullptr};\n \n+    //! pointer to the index of the successor of this block\n+    CBlockIndex* pnext;\n+\n     //! pointer to the index of some further predecessor of this block\n     CBlockIndex* pskip{nullptr};\n \n@@ -180,12 +183,49 @@ class CBlockIndex\n     uint32_t nBits{0};\n     uint32_t nNonce{0};\n \n+    // Proof of stake\n+    COutPoint prevoutStake;\n+    // block signature - proof-of-stake protect the block by signing the block using a stake holder private key\n+    std::vector<unsigned char> vchBlockSig;\n+    uint256 nStakeModifier;\n+    uint256 hashProof;\n+    uint64_t nMoneySupply;\n+\n     //! (memory only) Sequential id assigned to distinguish order in which blocks are received.\n     int32_t nSequenceId{0};\n \n     //! (memory only) Maximum nTime in the chain up to and including this block.\n     unsigned int nTimeMax{0};\n \n+    void SetNull()\n+    {\n+        phashBlock = nullptr;\n+        pprev = nullptr;\n+        pnext = nullptr;\n+        pskip = nullptr;\n+        nHeight = 0;\n+        nFile = 0;\n+        nDataPos = 0;\n+        nUndoPos = 0;\n+        nChainWork = arith_uint256();\n+        nTx = 0;\n+        nChainTx = 0;\n+        nStatus = 0;\n+        nSequenceId = 0;\n+        nTimeMax = 0;\n+\n+        nVersion       = 0;\n+        hashMerkleRoot = uint256();\n+        nTime          = 0;\n+        nBits          = 0;\n+        nNonce         = 0;\n+        prevoutStake.SetNull();\n+        vchBlockSig.clear();\n+        nStakeModifier = uint256();\n+        hashProof = uint256();\n+        nMoneySupply = 0;\n+    }\n+\n     CBlockIndex()\n     {\n     }\n@@ -197,6 +237,18 @@ class CBlockIndex\n           nBits{block.nBits},\n           nNonce{block.nNonce}\n     {\n+        SetNull();\n+\n+        nVersion       = block.nVersion;\n+        hashMerkleRoot = block.hashMerkleRoot;\n+        nTime          = block.nTime;\n+        nBits          = block.nBits;\n+        nNonce         = block.nNonce;\n+        prevoutStake   = block.prevoutStake;\n+        vchBlockSig    = block.vchBlockSig;\n+        nStakeModifier = uint256();\n+        hashProof = uint256(); \n+        nMoneySupply   = 0;\n     }\n \n     FlatFilePos GetBlockPos() const {\n@@ -227,6 +279,8 @@ class CBlockIndex\n         block.nTime          = nTime;\n         block.nBits          = nBits;\n         block.nNonce         = nNonce;\n+        block.vchBlockSig    = vchBlockSig;\n+        block.prevoutStake   = prevoutStake;\n         return block;\n     }\n \n@@ -270,6 +324,16 @@ class CBlockIndex\n         return pbegin[(pend - pbegin)/2];\n     }\n \n+    bool IsProofOfWork() const\n+    {\n+        return !IsProofOfStake();\n+    }\n+\n+    bool IsProofOfStake() const\n+    {\n+        return !prevoutStake.IsNull();\n+    }\n+\n     std::string ToString() const\n     {\n         return strprintf(\"CBlockIndex(pprev=%p, nHeight=%d, merkle=%s, hashBlock=%s)\",\n@@ -349,6 +413,11 @@ class CDiskBlockIndex : public CBlockIndex\n         READWRITE(obj.nTime);\n         READWRITE(obj.nBits);\n         READWRITE(obj.nNonce);\n+        READWRITE(obj.prevoutStake);\n+        READWRITE(obj.vchBlockSig);\n+        READWRITE(obj.nStakeModifier);\n+        READWRITE(obj.hashProof);\n+        READWRITE(VARINT(obj.nMoneySupply));\n     }\n \n     uint256 GetBlockHash() const\n@@ -360,6 +429,8 @@ class CDiskBlockIndex : public CBlockIndex\n         block.nTime           = nTime;\n         block.nBits           = nBits;\n         block.nNonce          = nNonce;\n+        block.prevoutStake    = prevoutStake;\n+        block.vchBlockSig     = vchBlockSig;\n         return block.GetHash();\n     }\n "
      },
      {
        "sha": "838faf63349be9e668a035e45d04ad740cd0f4ff",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 117,
        "deletions": 94,
        "changes": 211,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <consensus/consensus.h>\n #include <hash.h> // for signet block challenge hash\n #include <tinyformat.h>\n #include <util/system.h>\n@@ -18,6 +19,9 @@\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n \n+#include \"serialize.h\"\n+#include <streams.h>\n+\n static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     CMutableTransaction txNew;\n@@ -52,7 +56,7 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n  */\n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const char* pszTimestamp = \"The development was started on 04/04/2021\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n@@ -67,21 +71,35 @@ class CMainParams : public CChainParams {\n         consensus.signet_blocks = false;\n         consensus.signet_challenge.clear();\n         consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n-        consensus.BIP34Height = 227931;\n-        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n-        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n-        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n-        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n-        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n-        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n-        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.BIP16Exception = uint256S(\"0x00000740f289b7ed8f99c50d4b0005534fde2337b04d193583f73242118be238\");\n+        consensus.BIP34Height = 1;\n+        consensus.BIP34Hash = uint256S(\"0x\");\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n+        consensus.BTCRewardMatchStep = 40000;\n+        consensus.BTCRewardMatchHeight = 3 * consensus.BTCRewardMatchStep;\n+        consensus.BTCDiffAdjHeight = 130000;\n+        consensus.BTCColdStakeEnableHeight = 1000;\n+        consensus.powLimit = uint256S(\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.posLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 60; // every 1 minutes\n+        consensus.nPowTargetSpacing = 5;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n+        consensus.fPoSNoRetargeting = false;\n         consensus.nRuleChangeActivationThreshold = 1916; // 95% of 2016\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.nLastPOWBlock = 100;\n+        consensus.nMPoSRewardRecipients = 10;\n+        consensus.nFirstMPoSBlock = consensus.nLastPOWBlock + \n+                                    consensus.nMPoSRewardRecipients + \n+                                    COINBASE_MATURITY;\n+        consensus.nLastMPoSBlock = consensus.BTCColdStakeEnableHeight;\n+        consensus.nEnableHeaderSignatureHeight = 0;\n+        consensus.nCheckpointSpan = COINBASE_MATURITY;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n@@ -91,8 +109,8 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1230767999; // December 31, 2008\n \n-        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000001533efd8d716a517fe2c5008\");\n-        consensus.defaultAssumeValid = uint256S(\"0x0000000000000000000b9d2ec5a352ecba0592946514a92f14319dc2b367fc72\"); // 654683\n+        consensus.nMinimumChainWork = uint256S(\"0x\"); //block 236,425\n+        consensus.defaultAssumeValid = uint256S(\"0x\"); //block 236,425\n \n         /**\n          * The message start string is designed to be unlikely to occur in normal data.\n@@ -105,28 +123,20 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         nDefaultPort = 8333;\n         nPruneAfterHeight = 100000;\n-        m_assumed_blockchain_size = 350;\n-        m_assumed_chain_state_size = 6;\n+        m_assumed_blockchain_size = 2;\n+        m_assumed_chain_state_size = 1;\n \n-        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1617483600, 2083383968, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000740f289b7ed8f99c50d4b0005534fde2337b04d193583f73242118be238\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0xd57b437536653229a55c5768664ba86d97c405bde72d6cb4246f8dc5d452cdd1\"));\n \n         // Note that of those which support the service bits prefix, most only support a subset of\n         // possible options.\n         // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n         // service bits we want, but we should get them updated to support all service bits wanted by any\n         // release ASAP to avoid it where possible.\n-        vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"dnsseed.bluematt.me\"); // Matt Corallo, only supports x9\n-        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\"); // Luke Dashjr\n-        vSeeds.emplace_back(\"seed.bitcoinstats.com\"); // Christian Decker, supports x1 - xf\n-        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"seed.btc.petertodd.org\"); // Peter Todd, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl\"); // Sjors Provoost\n-        vSeeds.emplace_back(\"dnsseed.emzy.de\"); // Stephan Oeste\n-        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz\"); // Jason Maurice\n+        vSeeds.emplace_back(\"192.168.100.39\");\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n@@ -145,27 +155,15 @@ class CMainParams : public CChainParams {\n \n         checkpointData = {\n             {\n-                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n-                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n-                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n-                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n-                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n-                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n-                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n-                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n-                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n-                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n-                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n-                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n-                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+                { 5, \t uint256S(\"0x000001b674dd8d63d3c9e4c078be5cdb5edaf3155eb293c3bdf04769e7ae6c61\")},\n             }\n         };\n \n         chainTxData = ChainTxData{\n-            // Data from RPC: getchaintxstats 4096 0000000000000000000b9d2ec5a352ecba0592946514a92f14319dc2b367fc72\n-            /* nTime    */ 1603995752,\n-            /* nTxCount */ 582083445,\n-            /* dTxRate  */ 3.508976121410527,\n+            // Data from RPC: getchaintxstats 236424 f24b2bc2f0476da8a42042610524991c66871ae065dac162b47de60ac379f934\n+            /* nTime    */ 1628970847,\n+            /* nTxCount */ 4,\n+            /* dTxRate  */ 0.0261437908496732,\n         };\n     }\n };\n@@ -179,22 +177,36 @@ class CTestNetParams : public CChainParams {\n         strNetworkID = CBaseChainParams::TESTNET;\n         consensus.signet_blocks = false;\n         consensus.signet_challenge.clear();\n-        consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\n-        consensus.BIP34Height = 21111;\n-        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n-        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n-        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n-        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n-        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n-        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n-        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.nSubsidyHalvingInterval = 700000;\n+        consensus.BIP16Exception = uint256S(\"0x00000fe2acf48e35c5b594d9ff7db2a7bbafa1b73205b2789a6833be70595818\");\n+        consensus.BIP34Height = 1;\n+        consensus.BIP34Hash = uint256S(\"0x00000fe2acf48e35c5b594d9ff7db2a7bbafa1b73205b2789a6833be70595818\");\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n+        consensus.BTCRewardMatchStep = 400;\n+        consensus.BTCRewardMatchHeight = 3 * consensus.BTCRewardMatchStep;\n+        consensus.BTCDiffAdjHeight = 1500;\n+        consensus.BTCColdStakeEnableHeight = 2000;\n+        consensus.powLimit = uint256S(\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.posLimit = uint256S(\"0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 10 * 3 * 60; // every 10 blocks\n+        consensus.nPowTargetSpacing = 3 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = false;\n+        consensus.fPoSNoRetargeting = false;\n         consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.nLastPOWBlock = 501;\n+        consensus.nMPoSRewardRecipients = 10;\n+        consensus.nFirstMPoSBlock = consensus.nLastPOWBlock + \n+                                    consensus.nMPoSRewardRecipients + \n+                                    COINBASE_MATURITY;\n+        consensus.nLastMPoSBlock = consensus.BTCColdStakeEnableHeight;\n+        consensus.nEnableHeaderSignatureHeight = 0;\n+        consensus.nCheckpointSpan = COINBASE_MATURITY;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n@@ -204,38 +216,36 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1230767999; // December 31, 2008\n \n-        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000001db6ec4ac88cf2272c6\");\n-        consensus.defaultAssumeValid = uint256S(\"0x000000000000006433d1efec504c53ca332b64963c425395515b01977bd7b3b0\"); // 1864000\n+        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000000000000000000000000\"); // 0\n+        consensus.defaultAssumeValid = uint256S(\"0x00000fe2acf48e35c5b594d9ff7db2a7bbafa1b73205b2789a6833be70595818\"); // 0\n \n-        pchMessageStart[0] = 0x0b;\n-        pchMessageStart[1] = 0x11;\n-        pchMessageStart[2] = 0x09;\n-        pchMessageStart[3] = 0x07;\n-        nDefaultPort = 18333;\n+        pchMessageStart[0] = 0xd5;\n+        pchMessageStart[1] = 0x1f;\n+        pchMessageStart[2] = 0x35;\n+        pchMessageStart[3] = 0x29;\n+        nDefaultPort = 48932;\n         nPruneAfterHeight = 1000;\n         m_assumed_blockchain_size = 40;\n         m_assumed_chain_state_size = 2;\n \n-        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1617483600, 2083383968, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000740f289b7ed8f99c50d4b0005534fde2337b04d193583f73242118be238\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0xd57b437536653229a55c5768664ba86d97c405bde72d6cb4246f8dc5d452cdd1\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n         // nodes with support for servicebits filtering should be at the top\n-        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch\");\n-        vSeeds.emplace_back(\"seed.tbtc.petertodd.org\");\n-        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl\");\n-        vSeeds.emplace_back(\"testnet-seed.bluematt.me\"); // Just a static list of stable node(s), only supports x9\n+        vSeeds.emplace_back(\"testnet-seed1.bitcoinpos.net\");\n+        vSeeds.emplace_back(\"testnet-seed2.bitcoinpos.net\");\n \n-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n-        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,65);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,78);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,130);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n-        bech32_hrp = \"tb\";\n+        bech32_hrp = \"bt\";\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n \n@@ -246,15 +256,15 @@ class CTestNetParams : public CChainParams {\n \n         checkpointData = {\n             {\n-                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+                {0, uint256S(\"0x00000fe2acf48e35c5b594d9ff7db2a7bbafa1b73205b2789a6833be70595818\")},\n             }\n         };\n \n         chainTxData = ChainTxData{\n-            // Data from RPC: getchaintxstats 4096 000000000000006433d1efec504c53ca332b64963c425395515b01977bd7b3b0\n-            /* nTime    */ 1603359686,\n-            /* nTxCount */ 58090238,\n-            /* dTxRate  */ 0.1232886622799463,\n+            // Data from RPC: getchaintxstats 4096 00000000000000b7ab6ce61eb6d571003fbe5fe892da4c9b740c49a07542462d\n+            /* nTime    */ 1588417200,\n+            /* nTxCount */ 0,\n+            /* dTxRate  */ 0.0,\n         };\n     }\n };\n@@ -346,8 +356,9 @@ class SigNetParams : public CChainParams {\n \n         genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        // BTCTODO - generate these\n+        //assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        //assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n         vFixedSeeds.clear();\n \n@@ -384,13 +395,25 @@ class CRegTestParams : public CChainParams {\n         consensus.CSVHeight = 432; // CSV activated on regtest (Used in rpc activation tests)\n         consensus.SegwitHeight = 0; // SEGWIT is always activated on regtest unless overridden\n         consensus.MinBIP9WarningHeight = 0;\n+        consensus.BTCRewardMatchStep = 400;\n+        consensus.BTCRewardMatchHeight = 3 * consensus.BTCRewardMatchStep;\n+        consensus.BTCDiffAdjHeight = 1500;\n+        consensus.BTCColdStakeEnableHeight = 2000;\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.posLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 10 * 3 * 60; // every 10 blocks\n+        consensus.nPowTargetSpacing = 3 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = true;\n+        consensus.fPoSNoRetargeting = true;\n         consensus.nRuleChangeActivationThreshold = 108; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 144; // Faster than normal for regtest (144 instead of 2016)\n+        consensus.nLastPOWBlock = 0x7fffffff;\n+        consensus.nMPoSRewardRecipients = 10;\n+        consensus.nFirstMPoSBlock = 5000;\n+        consensus.nLastMPoSBlock = consensus.BTCColdStakeEnableHeight;\n+        consensus.nEnableHeaderSignatureHeight = 0;\n+        consensus.nCheckpointSpan = COINBASE_MATURITY;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n@@ -405,17 +428,17 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n-        nDefaultPort = 18444;\n+        nDefaultPort = 48934;\n         nPruneAfterHeight = 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n         UpdateActivationParametersFromArgs(args);\n \n-        genesis = CreateGenesisBlock(1296688602, 2, 0x207fffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1617483600, 2083383968, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000740f289b7ed8f99c50d4b0005534fde2337b04d193583f73242118be238\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0xd57b437536653229a55c5768664ba86d97c405bde72d6cb4246f8dc5d452cdd1\"));\n \n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n@@ -427,23 +450,23 @@ class CRegTestParams : public CChainParams {\n \n         checkpointData = {\n             {\n-                {0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\")},\n+                {0, uint256S(\"0x2b8d445931aa4ea9b52db1488d3641fa2d4f7a3c1f8151bfa99d017493129e97\")},\n             }\n         };\n \n         chainTxData = ChainTxData{\n-            0,\n+            1588417200,\n             0,\n             0\n         };\n \n-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n-        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,65);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,78);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,130);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n-        bech32_hrp = \"bcrt\";\n+        bech32_hrp = \"bpt\";\n     }\n \n     /**"
      },
      {
        "sha": "1a59791bc35df5cfdddaec5f1111c1ac568a2ec2",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1171,
        "changes": 1171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "430d1901591036c772384e0da9f5bb839044a02f",
        "filename": "src/checkpoints.cpp",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <checkpoints.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <reverse_iterator.h>\n+#include <validation.h>\n+\n+#include <stdint.h>\n+\n+namespace Checkpoints {\n+\n+    bool CheckHardened(int nHeight, const uint256& hash, const CCheckpointData& data)\n+    {\n+        const MapCheckpoints& checkpoints = data.mapCheckpoints;\n+\n+        MapCheckpoints::const_iterator i = checkpoints.find(nHeight);\n+        if (i == checkpoints.end()) return true;\n+        return hash == i->second;\n+    }\n+\n+    //! Returns last CBlockIndex* that is a checkpoint\n+    CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+    {\n+        const MapCheckpoints& checkpoints = data.mapCheckpoints;\n+\n+        for (const MapCheckpoints::value_type& i : reverse_iterate(checkpoints))\n+        {\n+            const uint256& hash = i.second;\n+            CBlockIndex* pindex = LookupBlockIndex(hash);\n+            if (pindex) {\n+                return pindex;\n+            }\n+        }\n+        return nullptr;\n+    }\n+\n+    // Automatically select a suitable sync-checkpoint \n+    const CBlockIndex* AutoSelectSyncCheckpoint()\n+    {\n+        const CBlockIndex *pindexBest = ::ChainActive().Tip();\n+        const CBlockIndex *pindex = pindexBest;\n+        // Search backward for a block within max span and maturity window\n+        while (pindex && pindex->pprev && pindex->nHeight + Params().GetConsensus().nCheckpointSpan > pindexBest->nHeight)\n+            pindex = pindex->pprev;\n+        return pindex;\n+    }\n+\n+    // Check against synchronized checkpoint\n+    bool CheckSync(int nHeight)\n+    {\n+        const CBlockIndex* pindexSync;\n+        if(nHeight)\n+            pindexSync = AutoSelectSyncCheckpoint();\n+\n+        if(nHeight && pindexSync && nHeight <= pindexSync->nHeight)\n+            return false;\n+        return true;\n+    }\n+} // namespace Checkpoints"
      },
      {
        "sha": "1df3057e44c02ab1d937d49f470de5e7f4d66b67",
        "filename": "src/checkpoints.h",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CHECKPOINTS_H\n+#define BITCOIN_CHECKPOINTS_H\n+\n+#include <uint256.h>\n+\n+#include <map>\n+\n+class CBlockIndex;\n+struct CCheckpointData;\n+\n+/**\n+ * Block-chain checkpoints are compiled-in sanity checks.\n+ * They are updated every release or three.\n+ */\n+namespace Checkpoints\n+{\n+\n+//! Checks that the block hash at height nHeight matches the expected hardened checkpoint\n+bool CheckHardened(int nHeight, const uint256& hash, const CCheckpointData& data);\n+\n+//! Returns last CBlockIndex* that is a checkpoint\n+CBlockIndex* GetLastCheckpoint(const CCheckpointData& data);\n+\n+//! Returns last CBlockIndex* from the auto selected checkpoint\n+const CBlockIndex* AutoSelectSyncCheckpoint();\n+\n+//! Check against automatically selected checkpoint\n+bool CheckSync(int nHeight);\n+} //namespace Checkpoints\n+\n+#endif // BITCOIN_CHECKPOINTS_H"
      },
      {
        "sha": "41c363179f08a076683ef682d027e4b5278af51f",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -101,12 +101,13 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void AddCoins(CCoinsViewCache& cache, const CTransaction &tx, int nHeight, bool check_for_overwrite) {\n     bool fCoinbase = tx.IsCoinBase();\n+    bool fCoinstake = tx.IsCoinStake();\n     const uint256& txid = tx.GetHash();\n     for (size_t i = 0; i < tx.vout.size(); ++i) {\n         bool overwrite = check_for_overwrite ? cache.HaveCoin(COutPoint(txid, i)) : fCoinbase;\n         // Coinbase transactions can always be overwritten, in order to correctly\n         // deal with the pre-BIP30 occurrences of duplicate coinbase transactions.\n-        cache.AddCoin(COutPoint(txid, i), Coin(tx.vout[i], nHeight, fCoinbase), overwrite);\n+        cache.AddCoin(COutPoint(txid, i), Coin(tx.vout[i], nHeight, fCoinbase, fCoinstake), overwrite);\n     }\n }\n \n@@ -233,6 +234,18 @@ unsigned int CCoinsViewCache::GetCacheSize() const {\n     return cacheCoins.size();\n }\n \n+CAmount CCoinsViewCache::GetValueIn(const CTransaction& tx) const\n+{\n+    if (tx.IsCoinBase())\n+        return 0;\n+\n+    CAmount nResult = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+        nResult += AccessCoin(tx.vin[i].prevout).out.nValue;\n+\n+    return nResult;\n+}\n+\n bool CCoinsViewCache::HaveInputs(const CTransaction& tx) const\n {\n     if (!tx.IsCoinBase()) {"
      },
      {
        "sha": "1a7e16eaccdd94d550b5e05854c4e4b8047bbf3d",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 24,
        "deletions": 6,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -25,6 +25,7 @@\n  *\n  * Serialized format:\n  * - VARINT((coinbase ? 1 : 0) | (height << 1))\n+ * - VARINT((coinstake ? 2 : 0) | (height << 2))\n  * - the non-spent CTxOut (via TxOutCompression)\n  */\n class Coin\n@@ -35,31 +36,37 @@ class Coin\n \n     //! whether containing transaction was a coinbase\n     unsigned int fCoinBase : 1;\n+    unsigned int fCoinStake : 1;\n \n     //! at which height this containing transaction was included in the active block chain\n-    uint32_t nHeight : 31;\n+    uint32_t nHeight : 30;\n \n     //! construct a Coin from a CTxOut and height/coinbase information.\n-    Coin(CTxOut&& outIn, int nHeightIn, bool fCoinBaseIn) : out(std::move(outIn)), fCoinBase(fCoinBaseIn), nHeight(nHeightIn) {}\n-    Coin(const CTxOut& outIn, int nHeightIn, bool fCoinBaseIn) : out(outIn), fCoinBase(fCoinBaseIn),nHeight(nHeightIn) {}\n+    Coin(CTxOut&& outIn, int nHeightIn, bool fCoinBaseIn, bool fCoinStakeIn) : out(std::move(outIn)), fCoinBase(fCoinBaseIn), fCoinStake(fCoinStakeIn), nHeight(nHeightIn) {}\n+    Coin(const CTxOut& outIn, int nHeightIn, bool fCoinBaseIn, bool fCoinStakeIn) : out(outIn), fCoinBase(fCoinBaseIn), fCoinStake(fCoinStakeIn), nHeight(nHeightIn) {}\n \n     void Clear() {\n         out.SetNull();\n         fCoinBase = false;\n+        fCoinStake = false;\n         nHeight = 0;\n     }\n \n     //! empty constructor\n-    Coin() : fCoinBase(false), nHeight(0) { }\n+    Coin() : fCoinBase(false), fCoinStake(false), nHeight(0) { }\n \n     bool IsCoinBase() const {\n         return fCoinBase;\n     }\n \n+    bool IsCoinStake() const {\n+        return fCoinStake;\n+    }\n+\n     template<typename Stream>\n     void Serialize(Stream &s) const {\n         assert(!IsSpent());\n-        uint32_t code = nHeight * uint32_t{2} + fCoinBase;\n+        uint32_t code = (nHeight << 2) + (fCoinBase ? 1u : 0u) + (fCoinStake ? 2u : 0u);\n         ::Serialize(s, VARINT(code));\n         ::Serialize(s, Using<TxOutCompression>(out));\n     }\n@@ -68,8 +75,9 @@ class Coin\n     void Unserialize(Stream &s) {\n         uint32_t code = 0;\n         ::Unserialize(s, VARINT(code));\n-        nHeight = code >> 1;\n+        nHeight = code >> 2;\n         fCoinBase = code & 1;\n+        fCoinStake = (code >> 1) & 1;\n         ::Unserialize(s, Using<TxOutCompression>(out));\n     }\n \n@@ -315,6 +323,16 @@ class CCoinsViewCache : public CCoinsViewBacked\n     //! Calculate the size of the cache (in bytes)\n     size_t DynamicMemoryUsage() const;\n \n+    /**\n+     * Amount of bitcoins coming in to a transaction\n+     * Note that lightweight clients may not know anything besides the hash of previous transactions,\n+     * so may not be able to calculate this.\n+     *\n+     * @param[in] tx    transaction for which we are checking input total\n+     * @return  Sum of value of all inputs (scriptSigs)\n+     */\n+    CAmount GetValueIn(const CTransaction& tx) const;\n+\n     //! Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n     bool HaveInputs(const CTransaction& tx) const;\n "
      },
      {
        "sha": "2554bd828e67d2fb92463e1dc3867fa790250ef1",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -16,7 +16,7 @@ static const unsigned int MAX_BLOCK_WEIGHT = 4000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n-static const int COINBASE_MATURITY = 100;\n+static const int COINBASE_MATURITY = 10;\n \n static const int WITNESS_SCALE_FACTOR = 4;\n "
      },
      {
        "sha": "d0f6ba7e29264cf61435d7ffeebef2b51bb707be",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -72,12 +72,17 @@ uint256 BlockMerkleRoot(const CBlock& block, bool* mutated)\n     return ComputeMerkleRoot(std::move(leaves), mutated);\n }\n \n-uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated)\n+uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated, bool* pfProofOfStake)\n {\n+    bool fProofOfStake = pfProofOfStake ? *pfProofOfStake : block.IsProofOfStake();\n     std::vector<uint256> leaves;\n     leaves.resize(block.vtx.size());\n     leaves[0].SetNull(); // The witness hash of the coinbase is 0.\n-    for (size_t s = 1; s < block.vtx.size(); s++) {\n+    if(fProofOfStake)\n+    {\n+        leaves[1].SetNull(); // The witness hash of the coinstake is 0.\n+    }\n+    for (size_t s = 1 + (fProofOfStake ? 1 : 0); s < block.vtx.size(); s++) {\n         leaves[s] = block.vtx[s]->GetWitnessHash();\n     }\n     return ComputeMerkleRoot(std::move(leaves), mutated);"
      },
      {
        "sha": "134e5cc33aeb58424abefe8914de320d14a8627b",
        "filename": "src/consensus/merkle.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -22,6 +22,6 @@ uint256 BlockMerkleRoot(const CBlock& block, bool* mutated = nullptr);\n  * Compute the Merkle root of the witness transactions in a block.\n  * *mutated is set to true if a duplicated subtree was found.\n  */\n-uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated = nullptr);\n+uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated = nullptr, bool* pfProofOfStake = nullptr);\n \n #endif // BITCOIN_CONSENSUS_MERKLE_H"
      },
      {
        "sha": "5fabcc90ffbe8371b02367465b135836f65702a1",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -64,6 +64,18 @@ struct Params {\n     /** Don't warn about unknown BIP 9 activations below this height.\n      * This prevents us from warning about the CSV and segwit activations. */\n     int MinBIP9WarningHeight;\n+    /** The size of the step going towards reward matching - rewards from\n+     * both chains, bitcoin and bitcoin pos are coming in sync with steps of this size. */\n+    int BTCRewardMatchStep;\n+    /** Block height at which BTCRewardMatch becomes active - rewards from\n+     * both chains, bitcoin and bitcoin pos are in sync as of this height. */\n+    int BTCRewardMatchHeight;\n+    /** Block height at which BTCDiffAdj becomes active - difficulty adjustment\n+     * formula is changed so that block times are more reliable. */\n+    int BTCDiffAdjHeight;\n+    /** Block height at which BTCColdStakeEnable becomes active - cold staking\n+     * will be enabled, allowing wallets to use delegations for staking. */\n+    int BTCColdStakeEnableHeight;\n     /**\n      * Minimum blocks including miner confirmation of the total of 2016 blocks in a retargeting period,\n      * (nPowTargetTimespan / nPowTargetSpacing) which is also used for BIP9 deployments.\n@@ -78,11 +90,31 @@ struct Params {\n     bool fPowNoRetargeting;\n     int64_t nPowTargetSpacing;\n     int64_t nPowTargetTimespan;\n-    int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }\n+    int64_t DifficultyAdjustmentInterval(const int height) const\n+    {\n+        int64_t targetTimeSpan;\n+        if (height < BTCDiffAdjHeight) {\n+            targetTimeSpan = nPowTargetSpacing;\n+        } else {\n+            targetTimeSpan = nPowTargetTimespan;\n+        }\n+\n+        return targetTimeSpan / nPowTargetSpacing;\n+    }\n     /** The best chain should have at least this much work */\n     uint256 nMinimumChainWork;\n     /** By default assume that the signatures in ancestors of this block are valid */\n     uint256 defaultAssumeValid;\n+    /** Proof of stake parameters */\n+    uint256 posLimit;\n+    bool fPoSNoRetargeting;\n+    int nLastPOWBlock;\n+    int nFirstMPoSBlock;\n+    int nLastMPoSBlock;\n+    int nMPoSRewardRecipients;\n+    int nEnableHeaderSignatureHeight;\n+    /** Block sync-checkpoint span*/\n+    int nCheckpointSpan;\n \n     /**\n      * If true, witness commitments contain a payload equal to a Bitcoin Script solution"
      },
      {
        "sha": "05c414b9e3d4fbe62354fa20232725bcf67cc466",
        "filename": "src/consensus/tx_check.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/tx_check.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/tx_check.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_check.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -7,7 +7,7 @@\n #include <primitives/transaction.h>\n #include <consensus/validation.h>\n \n-bool CheckTransaction(const CTransaction& tx, TxValidationState& state)\n+bool CheckTransaction(const CTransaction& tx, TxValidationState& state, bool fColdStakingActive)\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n@@ -22,13 +22,21 @@ bool CheckTransaction(const CTransaction& tx, TxValidationState& state)\n     CAmount nValueOut = 0;\n     for (const auto& txout : tx.vout)\n     {\n+        if (txout.IsEmpty() && !tx.IsCoinBase() && !tx.IsCoinStake())\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vout-empty\");\n         if (txout.nValue < 0)\n             return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vout-negative\");\n         if (txout.nValue > MAX_MONEY)\n             return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vout-toolarge\");\n         nValueOut += txout.nValue;\n         if (!MoneyRange(nValueOut))\n             return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-txouttotal-toolarge\");\n+        // check cold staking enforcement (for delegations)\n+        if (txout.scriptPubKey.IsPayToColdStaking())\n+        {\n+            if (!fColdStakingActive)\n+                return state.Invalid(TxValidationResult::TX_CONSENSUS, \"cold-stake-inactive\");\n+        }\n     }\n \n     // Check for duplicate inputs (see CVE-2018-17144)"
      },
      {
        "sha": "9af5932a92b6678cfc57fd2734f5b5a363fa2ef2",
        "filename": "src/consensus/tx_check.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/tx_check.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/tx_check.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_check.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -15,6 +15,6 @@\n class CTransaction;\n class TxValidationState;\n \n-bool CheckTransaction(const CTransaction& tx, TxValidationState& state);\n+bool CheckTransaction(const CTransaction& tx, TxValidationState& state, bool fColdStakingActive = false);\n \n #endif // BITCOIN_CONSENSUS_TX_CHECK_H"
      },
      {
        "sha": "68038ec4d7cbd3254a6f87fab4dd9b501b3df4ee",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 12,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -171,7 +171,7 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, TxValidationState& state,\n         assert(!coin.IsSpent());\n \n         // If prev is coinbase, check that it's matured\n-        if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n+        if ((coin.IsCoinBase() || coin.IsCoinStake()) && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n             return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"bad-txns-premature-spend-of-coinbase\",\n                 strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n         }\n@@ -183,18 +183,22 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, TxValidationState& state,\n         }\n     }\n \n-    const CAmount value_out = tx.GetValueOut();\n-    if (nValueIn < value_out) {\n-        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-in-belowout\",\n-            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n-    }\n+    if (!tx.IsCoinStake())\n+    {\n+        const CAmount value_out = tx.GetValueOut();\n+        if (nValueIn < value_out) {\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-in-belowout\",\n+                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n+        }\n \n-    // Tally transaction fees\n-    const CAmount txfee_aux = nValueIn - value_out;\n-    if (!MoneyRange(txfee_aux)) {\n-        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-fee-outofrange\");\n-    }\n+        // Tally transaction fees\n+        const CAmount txfee_aux = nValueIn - value_out;\n+        if (!MoneyRange(txfee_aux)) {\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-fee-outofrange\");\n+        }\n \n-    txfee = txfee_aux;\n+        txfee = txfee_aux;\n+    }\n+    \n     return true;\n }"
      },
      {
        "sha": "06418bf107f61d4be3b92551bee021c65f7d238b",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -78,6 +78,9 @@ enum class BlockValidationResult {\n     BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n     BLOCK_TIME_FUTURE,       //!< block timestamp was > 2 hours in the future (or our clock is bad)\n     BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    BLOCK_HEADER_SPAM,       //!< reject block header from the spam filter\n+    BLOCK_HEADER_REJECT,     //!< reject only the block header, but not ban the node\n+    BLOCK_HEADER_SYNC,       //!< reject the block header due to synchronization problems, used to punish the node less\n };\n \n "
      },
      {
        "sha": "516700dbf09e392ba852d1df721060cdf7fcef7c",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -171,8 +171,13 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n     out.pushKV(\"type\", GetTxnOutputType(type));\n \n     UniValue a(UniValue::VARR);\n-    for (const CTxDestination& addr : addresses) {\n-        a.push_back(EncodeDestination(addr));\n+    if (type == TxoutType::COLDSTAKE && addresses.size() == 2) {\n+        a.push_back(EncodeDestination(addresses[0]));\n+        a.push_back(EncodeDestination(addresses[1]));\n+    } else {\n+        for (const CTxDestination& addr : addresses) {\n+            a.push_back(EncodeDestination(addr));\n+        }\n     }\n     out.pushKV(\"addresses\", a);\n }"
      },
      {
        "sha": "6ef39c3a52b89b0c7166104db70bce3ee75e035c",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -72,10 +72,10 @@ class WorkQueue\n private:\n     /** Mutex protects entire object */\n     Mutex cs;\n-    std::condition_variable cond;\n-    std::deque<std::unique_ptr<WorkItem>> queue;\n-    bool running;\n-    size_t maxDepth;\n+    std::condition_variable cond GUARDED_BY(cs);\n+    std::deque<std::unique_ptr<WorkItem>> queue GUARDED_BY(cs);\n+    bool running GUARDED_BY(cs);\n+    const size_t maxDepth;\n \n public:\n     explicit WorkQueue(size_t _maxDepth) : running(true),\n@@ -91,7 +91,7 @@ class WorkQueue\n     bool Enqueue(WorkItem* item)\n     {\n         LOCK(cs);\n-        if (queue.size() >= maxDepth) {\n+        if (!running || queue.size() >= maxDepth) {\n             return false;\n         }\n         queue.emplace_back(std::unique_ptr<WorkItem>(item));\n@@ -107,7 +107,7 @@ class WorkQueue\n                 WAIT_LOCK(cs, lock);\n                 while (running && queue.empty())\n                     cond.wait(lock);\n-                if (!running)\n+                if (!running && queue.empty())\n                     break;\n                 i = std::move(queue.front());\n                 queue.pop_front();\n@@ -265,11 +265,11 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n     if (i != iend) {\n         std::unique_ptr<HTTPWorkItem> item(new HTTPWorkItem(std::move(hreq), path, i->handler));\n         assert(workQueue);\n-        if (workQueue->Enqueue(item.get()))\n+        if (workQueue->Enqueue(item.get())) {\n             item.release(); /* if true, queue took ownership */\n-        else {\n+        } else {\n             LogPrintf(\"WARNING: request rejected because http work queue depth exceeded, it can be increased with the -rpcworkqueue= setting\\n\");\n-            item->req->WriteReply(HTTP_INTERNAL_SERVER_ERROR, \"Work queue depth exceeded\");\n+            item->req->WriteReply(HTTP_SERVICE_UNAVAILABLE, \"Work queue depth exceeded\");\n         }\n     } else {\n         hreq->WriteReply(HTTP_NOT_FOUND);\n@@ -456,8 +456,7 @@ void StopHTTPServer()\n             thread.join();\n         }\n         g_thread_http_workers.clear();\n-        delete workQueue;\n-        workQueue = nullptr;\n+\n     }\n     // Unlisten sockets, these are what make the event loop running, which means\n     // that after this and all connections are closed the event loop will quit.\n@@ -477,6 +476,10 @@ void StopHTTPServer()\n         event_base_free(eventBase);\n         eventBase = nullptr;\n     }\n+    if (workQueue) {\n+        delete workQueue;\n+        workQueue = nullptr;\n+    }    \n     LogPrint(BCLog::HTTP, \"Stopped HTTP server\\n\");\n }\n "
      },
      {
        "sha": "617cc535d8c0fa839cb49b0cb4f7a98f71e6e037",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 3,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -61,6 +61,9 @@\n #include <validation.h>\n \n #include <validationinterface.h>\n+#ifdef ENABLE_WALLET\n+#include <wallet/wallet.h>\n+#endif\n #include <walletinitinterface.h>\n \n #include <functional>\n@@ -580,6 +583,12 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-rpcwhitelistdefault\", \"Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.\", ArgsManager::ALLOW_BOOL, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n+    argsman.AddArg(\"-headerspamfilter=<n>\", strprintf(\"Use header spam filter (default: %u)\", DEFAULT_HEADER_SPAM_FILTER), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-headerspamfiltermaxsize=<n>\", strprintf(\"Maximum size of the list of indexes in the header spam filter (default: %u)\", DEFAULT_HEADER_SPAM_FILTER_MAX_SIZE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-headerspamfiltermaxavg=<n>\", strprintf(\"Maximum average size of an index occurrence in the header spam filter (default: %u)\", DEFAULT_HEADER_SPAM_FILTER_MAX_AVG), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-headerspamfilterignoreport=<n>\", strprintf(\"Ignore the port in the ip address when looking for header spam, determine whether or not multiple nodes can be on the same IP (default: %u)\", DEFAULT_HEADER_SPAM_FILTER_IGNORE_PORT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-cleanblockindex=<n>\", \"Clean block index. 0 = disabled, 1 = enabled (default: enabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-cleanblockindextimeout=<n>\", \"Clean block index periodically after some time (default 600 seconds)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n #if HAVE_DECL_DAEMON\n     argsman.AddArg(\"-daemon\", \"Run in the background as a daemon and accept commands\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -593,9 +602,9 @@ void SetupServerArgs(NodeContext& node)\n \n std::string LicenseInfo()\n {\n-    const std::string URL_SOURCE_CODE = \"<https://github.com/bitcoin/bitcoin>\";\n+    const std::string URL_SOURCE_CODE = \"<https://github.com/bitcoinpos/bitcoinpos>\";\n \n-    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\").translated, 2009, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n+    return CopyrightHolders(strprintf(_(\"Copyright (C) %i\").translated, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n            \"\\n\" +\n            strprintf(_(\"Please contribute if you find %s useful. \"\n                        \"Visit %s for further information about the software.\").translated,\n@@ -1194,7 +1203,11 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     if (args.GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) > 1)\n         return InitError(Untranslated(\"Unknown rpcserialversion requested.\"));\n \n-    nMaxTipAge = args.GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n+    if (args.IsArgSet(\"-maxtipage\")) {\n+        nMaxTipAge = args.GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n+    } else {\n+        nMaxTipAge = std::min((int64_t)(0.8 * chainparams.GetConsensus().nPowTargetSpacing * COINBASE_MATURITY), DEFAULT_MAX_TIP_AGE);\n+    }\n \n     if (args.IsArgSet(\"-proxy\") && args.GetArg(\"-proxy\", \"\").empty()) {\n         return InitError(_(\"No proxy server specified. Use -proxy=<ip> or -proxy=<ip:port>.\"));\n@@ -1407,6 +1420,12 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     node.peerman.reset(new PeerManager(chainparams, *node.connman, node.banman.get(), *node.scheduler, chainman, *node.mempool));\n     RegisterValidationInterface(node.peerman.get());\n \n+#ifdef ENABLE_WALLET\n+    CWallet::defaultConnman = node.connman.get();\n+    CWallet::defaultChainman = node.chainman;\n+    CWallet::defaultMempool = node.mempool.get();\n+#endif\n+\n     // sanitize comments per BIP-0014, format user agent and check total size\n     std::vector<std::string> uacomments;\n     for (const std::string& cmt : args.GetArgs(\"-uacomment\")) {\n@@ -1881,6 +1900,9 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         ThreadImport(chainman, vImportFiles, args);\n     });\n \n+    if(gArgs.GetBoolArg(\"-cleanblockindex\", DEFAULT_CLEANBLOCKINDEX))\n+        threadGroup.create_thread(std::bind(&CleanBlockIndex));\n+\n     // Wait for genesis block to be processed\n     {\n         WAIT_LOCK(g_genesis_wait_mutex, lock);"
      },
      {
        "sha": "0544abbf8251ed27b6dbcc19e0782b59bd39a106",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -235,6 +235,35 @@ class NodeImpl : public Node\n     {\n         return *Assert(m_context->wallet_client);\n     }\n+    void getSyncInfo(int& numBlocks, bool& isSyncing) override\n+    {\n+        LOCK(::cs_main);\n+        // Get node synchronization information with minimal locks\n+        numBlocks = ::ChainActive().Height();\n+        int64_t blockTime = ::ChainActive().Tip() ? ::ChainActive().Tip()->GetBlockTime() :\n+                                                  Params().GenesisBlock().GetBlockTime();\n+        int64_t secs = GetTime() - blockTime;\n+        isSyncing = secs >= 10 * Params().GetConsensus().nPowTargetSpacing ? true : false;\n+    }\n+    int64_t getBlockSubsidy(int nHeight) override\n+    {\n+        const CChainParams& chainparams = Params();\n+        return GetBlockSubsidy(nHeight, chainparams.GetConsensus());\n+    }\n+    uint64_t getNetworkStakeWeight() override\n+    {\n+        LOCK(::cs_main);\n+        return GetPoSKernelPS();\n+    }\n+    double getEstimatedAnnualROI() override\n+    {\n+        LOCK(::cs_main);\n+        return GetEstimatedAnnualROI();\n+    }\n+    int64_t getMoneySupply() override\n+    {\n+        return pindexBestHeader ? pindexBestHeader->nMoneySupply : 0;\n+    }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n         return MakeHandler(::uiInterface.InitMessage_connect(fn));"
      },
      {
        "sha": "bc6e5467ce5288eb6d284ede793688d6b48f5f3b",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -175,6 +175,21 @@ class Node\n     //! Get wallet client.\n     virtual WalletClient& walletClient() = 0;\n \n+    //! Get node synchronization information.\n+    virtual void getSyncInfo(int& numBlocks, bool& isSyncing) = 0;\n+\n+    //! Get the reward for the block at some specific height\n+    virtual int64_t getBlockSubsidy(int nHeight) = 0;\n+\n+    //! Get the network stake weight\n+    virtual uint64_t getNetworkStakeWeight() = 0;\n+\n+    //! Get the estimated annual roi\n+    virtual double getEstimatedAnnualROI() = 0;\n+\n+    //! Get the money supply\n+    virtual int64_t getMoneySupply() = 0;\n+\n     //! Register handler for init messages.\n     using InitMessageFn = std::function<void(const std::string& message)>;\n     virtual std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) = 0;"
      },
      {
        "sha": "ee8b3d0d062385b7ade3f0a8ea47f505087106e4",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 2,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -25,6 +25,7 @@\n #include <wallet/load.h>\n #include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n+#include <key_io.h>\n \n #include <memory>\n #include <string>\n@@ -60,6 +61,8 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n     result.time = wtx.GetTxTime();\n     result.value_map = wtx.mapValue;\n     result.is_coinbase = wtx.IsCoinBase();\n+    result.is_coinstake = wtx.IsCoinStake();\n+    result.is_in_main_chain = wtx.IsInMainChain();\n     return result;\n }\n \n@@ -76,6 +79,7 @@ WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n     result.is_trusted = wtx.IsTrusted();\n     result.is_abandoned = wtx.isAbandoned();\n     result.is_coinbase = wtx.IsCoinBase();\n+    result.is_coinstake = wtx.IsCoinStake();\n     result.is_in_main_chain = wtx.IsInMainChain();\n     return result;\n }\n@@ -353,6 +357,15 @@ class WalletImpl : public Wallet\n         result.balance = bal.m_mine_trusted;\n         result.unconfirmed_balance = bal.m_mine_untrusted_pending;\n         result.immature_balance = bal.m_mine_immature;\n+        result.stake = bal.m_mine_stake;\n+        result.stakeable = bal.m_mine_stakeable;\n+        result.immature_stakeable = bal.m_mine_immature_stakeable;\n+        result.stakeable_delegations = bal.m_mine_stakeable_delegations;\n+        result.immature_stakeable_delegations = bal.m_mine_immature_stakeable_delegations;\n+        result.cold_stake = bal.m_mine_cold_stake;\n+        result.immature_cold_stake = bal.m_mine_immature_cold_stake;\n+        result.delegated = bal.m_mine_delegated;\n+        result.immature_delegated = bal.m_mine_immature_delegated;\n         result.have_watch_only = haveWatchOnly();\n         if (result.have_watch_only) {\n             result.watch_only_balance = bal.m_watchonly_trusted;\n@@ -372,9 +385,9 @@ class WalletImpl : public Wallet\n         return true;\n     }\n     CAmount getBalance() override { return m_wallet->GetBalance().m_mine_trusted; }\n-    CAmount getAvailableBalance(const CCoinControl& coin_control) override\n+    CAmount getAvailableBalance(const CCoinControl& coin_control, bool fIncludeDelegated) override\n     {\n-        return m_wallet->GetAvailableBalance(&coin_control);\n+        return m_wallet->GetAvailableBalance(&coin_control, fIncludeDelegated);\n     }\n     isminetype txinIsMine(const CTxIn& txin) override\n     {\n@@ -449,7 +462,45 @@ class WalletImpl : public Wallet\n     {\n         RemoveWallet(m_wallet, false /* load_on_start */);\n     }\n+\n     bool isLegacy() override { return m_wallet->IsLegacy(); }\n+\n+    bool tryGetStakeWeight(uint64_t& nWeight) override\n+    {\n+        TRY_LOCK(m_wallet->cs_wallet, locked_wallet);\n+        if (!locked_wallet) {\n+            return false;\n+        }\n+\n+        nWeight = m_wallet->GetStakeWeight();\n+        return true;\n+    }\n+    uint64_t getStakeWeight() override\n+    {\n+        LOCK(m_wallet->cs_wallet);\n+        return m_wallet->GetStakeWeight();\n+    }\n+    int64_t getLastCoinStakeSearchInterval() override \n+    { \n+        return m_wallet->m_last_coin_stake_search_interval;\n+    }\n+    bool getWalletUnlockStakingOnly() override\n+    {\n+        return m_wallet->m_wallet_unlock_staking_only;\n+    }\n+    void setWalletUnlockStakingOnly(bool unlock) override\n+    {\n+        m_wallet->m_wallet_unlock_staking_only = unlock;\n+    }\n+    void setEnabledStaking(bool enabled) override\n+    {\n+        m_wallet->m_enabled_staking = enabled;\n+    }\n+    bool getEnabledStaking() override\n+    {\n+        return m_wallet->m_enabled_staking;\n+    }\n+\n     std::unique_ptr<Handler> handleUnload(UnloadFn fn) override\n     {\n         return MakeHandler(m_wallet->NotifyUnload.connect(fn));"
      },
      {
        "sha": "bc8ebe68496cc519c7535d9c41d02bf822413d40",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 39,
        "deletions": 4,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -212,7 +212,7 @@ class Wallet\n     virtual CAmount getBalance() = 0;\n \n     //! Get available balance.\n-    virtual CAmount getAvailableBalance(const CCoinControl& coin_control) = 0;\n+    virtual CAmount getAvailableBalance(const CCoinControl& coin_control, bool fIncludeDelegated) = 0;\n \n     //! Return whether transaction input belongs to wallet.\n     virtual isminetype txinIsMine(const CTxIn& txin) = 0;\n@@ -267,6 +267,27 @@ class Wallet\n     //! Return whether is a legacy wallet\n     virtual bool isLegacy() = 0;\n \n+    //! Try get the stake weight\n+    virtual bool tryGetStakeWeight(uint64_t& nWeight) = 0;\n+\n+    //! Get the stake weight\n+    virtual uint64_t getStakeWeight() = 0;\n+\n+    //! Get last coin stake search interval\n+    virtual int64_t getLastCoinStakeSearchInterval() = 0;\n+\n+    //! Get wallet unlock for staking only\n+    virtual bool getWalletUnlockStakingOnly() = 0;\n+\n+    //! Set wallet unlock for staking only\n+    virtual void setWalletUnlockStakingOnly(bool unlock) = 0;\n+\n+    //! Set wallet enabled for staking\n+    virtual void setEnabledStaking(bool enabled) = 0;\n+\n+    //! Get wallet enabled for staking\n+    virtual bool getEnabledStaking() = 0;\n+\n     //! Register handler for unload message.\n     using UnloadFn = std::function<void()>;\n     virtual std::unique_ptr<Handler> handleUnload(UnloadFn fn) = 0;\n@@ -351,16 +372,27 @@ struct WalletBalances\n     CAmount balance = 0;\n     CAmount unconfirmed_balance = 0;\n     CAmount immature_balance = 0;\n+    CAmount stake = 0;\n+    CAmount stakeable = 0;\n+    CAmount immature_stakeable = 0;\n+    CAmount stakeable_delegations = 0;\n+    CAmount immature_stakeable_delegations = 0;\n+    CAmount cold_stake = 0;\n+    CAmount immature_cold_stake = 0;\n+    CAmount delegated = 0;\n+    CAmount immature_delegated = 0;\n     bool have_watch_only = false;\n     CAmount watch_only_balance = 0;\n     CAmount unconfirmed_watch_only_balance = 0;\n     CAmount immature_watch_only_balance = 0;\n \n     bool balanceChanged(const WalletBalances& prev) const\n     {\n-        return balance != prev.balance || unconfirmed_balance != prev.unconfirmed_balance ||\n-               immature_balance != prev.immature_balance || watch_only_balance != prev.watch_only_balance ||\n-               unconfirmed_watch_only_balance != prev.unconfirmed_watch_only_balance ||\n+        return balance != prev.balance || unconfirmed_balance != prev.unconfirmed_balance || immature_balance != prev.immature_balance || stake != prev.stake ||\n+               stakeable != prev.stakeable || immature_stakeable != prev.immature_stakeable || stakeable_delegations !=  prev.stakeable_delegations ||\n+               immature_stakeable_delegations != prev.immature_stakeable_delegations || cold_stake != prev.cold_stake ||\n+               immature_cold_stake != prev.immature_cold_stake || delegated != prev.delegated || immature_delegated != prev.immature_delegated ||\n+               watch_only_balance != prev.watch_only_balance || unconfirmed_watch_only_balance != prev.unconfirmed_watch_only_balance ||\n                immature_watch_only_balance != prev.immature_watch_only_balance;\n     }\n };\n@@ -379,6 +411,8 @@ struct WalletTx\n     int64_t time;\n     std::map<std::string, std::string> value_map;\n     bool is_coinbase;\n+    bool is_coinstake;\n+    bool is_in_main_chain;\n };\n \n //! Updated transaction status.\n@@ -393,6 +427,7 @@ struct WalletTxStatus\n     bool is_trusted;\n     bool is_abandoned;\n     bool is_coinbase;\n+    bool is_coinstake;\n     bool is_in_main_chain;\n };\n "
      },
      {
        "sha": "21159910201500ff8016cd2fe404248270af7e53",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -12,8 +12,25 @@\n #include <secp256k1.h>\n #include <secp256k1_recovery.h>\n \n+#include <openssl/bn.h>\n+#include <openssl/ecdsa.h>\n+#include <openssl/rand.h>\n+#include <openssl/obj_mac.h>\n+#include <openssl/opensslv.h>\n+\n static secp256k1_context* secp256k1_context_sign = nullptr;\n \n+#if OPENSSL_VERSION_NUMBER < 0x10100000L\n+// Compatibility Layer for older versions of Open SSL\n+void ECDSA_SIG_get0(const ECDSA_SIG *sig, const BIGNUM **pr, const BIGNUM **ps)\n+ {\n+    if (pr != NULL)\n+        *pr = sig->r;\n+    if (ps != NULL)\n+        *ps = sig->s;\n+ }\n+#endif\n+\n /** These functions are taken from the libsecp256k1 distribution and are very ugly. */\n \n /**\n@@ -370,3 +387,42 @@ void ECC_Stop() {\n         secp256k1_context_destroy(ctx);\n     }\n }\n+\n+const unsigned char vchOrder[32] = {\n+    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xba,0xae,0xdc,0xe6,0xaf,0x48,0xa0,0x3b,0xbf,0xd2,0x5e,0x8c,0xd0,0x36,0x41,0x41\n+};\n+\n+const unsigned char vchHalfOrder[32] = {\n+    0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x5d,0x57,0x6e,0x73,0x57,0xa4,0x50,0x1d,0xdf,0xe9,0x2f,0x46,0x68,0x1b,0x20,0xa0\n+};\n+\n+bool EnsureLowS(std::vector<unsigned char>& vchSig) {\n+    unsigned char *pos;\n+\n+    if (vchSig.empty())\n+        return false;\n+\n+    pos = &vchSig[0];\n+    ECDSA_SIG *sig = d2i_ECDSA_SIG(NULL, (const unsigned char **)&pos, vchSig.size());\n+    if (sig == NULL)\n+        return false;\n+\n+    BIGNUM *order = BN_bin2bn(vchOrder, sizeof(vchOrder), NULL);\n+    BIGNUM *halforder = BN_bin2bn(vchHalfOrder, sizeof(vchHalfOrder), NULL);\n+\n+    BIGNUM *s = 0;\n+    ECDSA_SIG_get0(sig, 0, (const BIGNUM **)&s);\n+    if (BN_cmp(s, halforder) > 0) {\n+        // enforce low S values, by negating the value (modulo the order) if above order/2.\n+        BN_sub(s, order, s);\n+    }\n+\n+    BN_free(halforder);\n+    BN_free(order);\n+\n+    pos = &vchSig[0];\n+    unsigned int nSize = i2d_ECDSA_SIG(sig, &pos);\n+    ECDSA_SIG_free(sig);\n+    vchSig.resize(nSize); // Shrink to fit actual size\n+    return true;\n+}"
      },
      {
        "sha": "005a6214653cf8695611f04eea39407ef7a15d97",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -173,4 +173,7 @@ void ECC_Stop();\n /** Check that required EC support is available at runtime. */\n bool ECC_InitSanityCheck();\n \n+/** Ensure that the signature is LowS */\n+bool EnsureLowS(std::vector<unsigned char>& vchSig);\n+\n #endif // BITCOIN_KEY_H"
      },
      {
        "sha": "d6c21a91534b210111c2e684320975fab1bffa2d",
        "filename": "src/key_io.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -217,12 +217,13 @@ CTxDestination DecodeDestination(const std::string& str)\n     return DecodeDestination(str, Params());\n }\n \n-bool IsValidDestinationString(const std::string& str, const CChainParams& params)\n+bool IsValidDestinationString(const std::string& str)\n {\n-    return IsValidDestination(DecodeDestination(str, params));\n+    return IsValidDestinationString(str, Params());\n }\n \n-bool IsValidDestinationString(const std::string& str)\n+bool IsValidDestinationString(const std::string& str, const CChainParams& params)\n {\n-    return IsValidDestinationString(str, Params());\n+    return IsValidDestination(DecodeDestination(str, params));\n }\n+"
      },
      {
        "sha": "b66ccd15a057cea85db6feb10fba59c6ac569fa7",
        "filename": "src/key_io.h",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/key_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -26,4 +26,32 @@ CTxDestination DecodeDestination(const std::string& str);\n bool IsValidDestinationString(const std::string& str);\n bool IsValidDestinationString(const std::string& str, const CChainParams& params);\n \n+/**\n+ * Wrapper class for every supported address\n+ */\n+struct Destination {\n+public:\n+    explicit Destination() {}\n+    explicit Destination(const CTxDestination& _dest, bool _isP2CS) : dest(_dest), isP2CS(_isP2CS) {}\n+\n+    CTxDestination dest{CNoDestination()};\n+    bool isP2CS{false};\n+\n+    Destination& operator=(const Destination& from)\n+    {\n+        this->dest = from.dest;\n+        this->isP2CS = from.isP2CS;\n+        return *this;\n+    }\n+\n+    std::string ToString()\n+    {\n+        if (!IsValidDestination(dest)) {\n+            // Invalid address\n+            return \"\";\n+        }\n+        return EncodeDestination(dest);\n+    }\n+};\n+\n #endif // BITCOIN_KEY_IO_H"
      },
      {
        "sha": "5a26d44806363e66624eae634f7e2a74b41657aa",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -155,6 +155,7 @@ const CLogCategoryDesc LogCategories[] =\n     {BCLog::QT, \"qt\"},\n     {BCLog::LEVELDB, \"leveldb\"},\n     {BCLog::VALIDATION, \"validation\"},\n+    {BCLog::COINSTAKE, \"coinstake\"},\n     {BCLog::ALL, \"1\"},\n     {BCLog::ALL, \"all\"},\n };"
      },
      {
        "sha": "42c337c2f0bfc675b809ee4702569d54d580a88e",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -56,6 +56,7 @@ namespace BCLog {\n         QT          = (1 << 19),\n         LEVELDB     = (1 << 20),\n         VALIDATION  = (1 << 21),\n+        COINSTAKE   = (1 << 22),\n         ALL         = ~(uint32_t)0,\n     };\n "
      },
      {
        "sha": "bc6011abaa03c824853ce5bb4ede188fe67aa4c6",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 280,
        "deletions": 20,
        "changes": 300,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -13,17 +13,24 @@\n #include <consensus/merkle.h>\n #include <consensus/tx_verify.h>\n #include <consensus/validation.h>\n+#include <net.h>\n #include <policy/feerate.h>\n #include <policy/policy.h>\n #include <pow.h>\n+#include <pos.h>\n #include <primitives/transaction.h>\n #include <timedata.h>\n #include <util/moneystr.h>\n #include <util/system.h>\n+#ifdef ENABLE_WALLET\n+#include <wallet/wallet.h>\n+#endif\n \n #include <algorithm>\n #include <utility>\n \n+unsigned int nMinerSleep = STAKER_POLLING_PERIOD;\n+\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n     int64_t nOldTime = pblock->nTime;\n@@ -34,7 +41,7 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n \n     // Updating time can change work required on testnet:\n     if (consensusParams.fPowAllowMinDifficultyBlocks)\n-        pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, consensusParams);\n+        pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, consensusParams, pblock->IsProofOfStake());\n \n     return nNewTime - nOldTime;\n }\n@@ -99,10 +106,8 @@ void BlockAssembler::resetBlock()\n Optional<int64_t> BlockAssembler::m_last_block_num_txs{nullopt};\n Optional<int64_t> BlockAssembler::m_last_block_weight{nullopt};\n \n-std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n+std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fProofOfStake, int64_t* pTotalFees, int32_t nTime, bool fAddTxs)\n {\n-    int64_t nTimeStart = GetTimeMicros();\n-\n     resetBlock();\n \n     pblocktemplate.reset(new CBlockTemplate());\n@@ -113,6 +118,9 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n \n     // Add dummy coinbase tx as first transaction\n     pblock->vtx.emplace_back();\n+    // Add dummy coinstake tx as second transaction\n+    if(fProofOfStake)\n+        pblock->vtx.emplace_back();\n     pblocktemplate->vTxFees.push_back(-1); // updated at end\n     pblocktemplate->vTxSigOpsCost.push_back(-1); // updated at end\n \n@@ -127,7 +135,10 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     if (chainparams.MineBlocksOnDemand())\n         pblock->nVersion = gArgs.GetArg(\"-blockversion\", pblock->nVersion);\n \n-    pblock->nTime = GetAdjustedTime();\n+    uint32_t txProofTime = nTime == 0 ? GetAdjustedTime() : nTime;\n+    if(fProofOfStake)\n+        txProofTime &= ~STAKE_TIMESTAMP_MASK;\n+    pblock->nTime = txProofTime;\n     const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n \n     nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n@@ -145,11 +156,11 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     // transaction (which in most cases can be a no-op).\n     fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus());\n \n-    int nPackagesSelected = 0;\n-    int nDescendantsUpdated = 0;\n-    addPackageTxs(nPackagesSelected, nDescendantsUpdated);\n-\n-    int64_t nTime1 = GetTimeMicros();\n+    if (fAddTxs) {\n+        int nPackagesSelected = 0;\n+        int nDescendantsUpdated = 0;\n+        addPackageTxs(nPackagesSelected, nDescendantsUpdated);\n+    }\n \n     m_last_block_num_txs = nBlockTx;\n     m_last_block_weight = nBlockWeight;\n@@ -159,29 +170,52 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     coinbaseTx.vin.resize(1);\n     coinbaseTx.vin[0].prevout.SetNull();\n     coinbaseTx.vout.resize(1);\n-    coinbaseTx.vout[0].scriptPubKey = scriptPubKeyIn;\n-    coinbaseTx.vout[0].nValue = nFees + GetBlockSubsidy(nHeight, chainparams.GetConsensus());\n+    if (fProofOfStake)\n+    {\n+        // Make the coinbase tx empty in case of proof of stake\n+        coinbaseTx.vout[0].SetEmpty();\n+    }\n+    else\n+    {\n+        coinbaseTx.vout[0].scriptPubKey = scriptPubKeyIn;\n+        coinbaseTx.vout[0].nValue = nFees + GetBlockSubsidy(nHeight, chainparams.GetConsensus());\n+    }\n     coinbaseTx.vin[0].scriptSig = CScript() << nHeight << OP_0;\n     pblock->vtx[0] = MakeTransactionRef(std::move(coinbaseTx));\n-    pblocktemplate->vchCoinbaseCommitment = GenerateCoinbaseCommitment(*pblock, pindexPrev, chainparams.GetConsensus());\n+\n+    // Create coinstake transaction.\n+    if(fProofOfStake)\n+    {\n+        CMutableTransaction coinstakeTx;\n+        coinstakeTx.vout.resize(2);\n+        coinstakeTx.vout[0].SetEmpty();\n+        coinstakeTx.vout[1].scriptPubKey = scriptPubKeyIn;\n+        pblock->vtx[1] = MakeTransactionRef(std::move(coinstakeTx));\n+\n+        //this just makes CBlock::IsProofOfStake to return true\n+        //real prevoutstake info is filled in later in SignBlock\n+        pblock->prevoutStake.n = 0;\n+\n+    }\n+\n+    pblocktemplate->vchCoinbaseCommitment = GenerateCoinbaseCommitment(*pblock, pindexPrev, chainparams.GetConsensus(), fProofOfStake);\n     pblocktemplate->vTxFees[0] = -nFees;\n \n-    LogPrintf(\"CreateNewBlock(): block weight: %u txs: %u fees: %ld sigops %d\\n\", GetBlockWeight(*pblock), nBlockTx, nFees, nBlockSigOpsCost);\n+    if (pTotalFees)\n+        *pTotalFees = nFees;\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n-    UpdateTime(pblock, chainparams.GetConsensus(), pindexPrev);\n-    pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock, chainparams.GetConsensus());\n+    if (!fProofOfStake)\n+        UpdateTime(pblock, chainparams.GetConsensus(), pindexPrev);\n+    pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock, chainparams.GetConsensus(), fProofOfStake);\n     pblock->nNonce         = 0;\n     pblocktemplate->vTxSigOpsCost[0] = WITNESS_SCALE_FACTOR * GetLegacySigOpCount(*pblock->vtx[0]);\n \n     BlockValidationState state;\n-    if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n+    if (!fProofOfStake && !TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n         throw std::runtime_error(strprintf(\"%s: TestBlockValidity failed: %s\", __func__, state.ToString()));\n     }\n-    int64_t nTime2 = GetTimeMicros();\n-\n-    LogPrint(BCLog::BENCH, \"CreateNewBlock() packages: %.2fms (%d packages, %d updated descendants), validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), nPackagesSelected, nDescendantsUpdated, 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }\n@@ -453,3 +487,229 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));\n     pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n }\n+\n+#ifdef ENABLE_WALLET\n+//////////////////////////////////////////////////////////////////////////////\n+//\n+// Proof of Stake miner\n+//\n+\n+//\n+// Looking for suitable coins for creating new block.\n+//\n+\n+bool CheckStake(const std::shared_ptr<const CBlock> pblock, CWallet& wallet, ChainstateManager* chainman)\n+{\n+    uint256 proofHash, hashTarget;\n+    uint256 hashBlock = pblock->GetHash();\n+\n+    if(!pblock->IsProofOfStake())\n+        return error(\"CheckStake() : %s is not a proof-of-stake block\", hashBlock.GetHex());\n+\n+    // verify hash target and signature of coinstake tx\n+    BlockValidationState state;\n+    if (!CheckProofOfStake(::BlockIndex()[pblock->hashPrevBlock], state, *pblock->vtx[1], pblock->nBits, pblock->nTime, proofHash, hashTarget, ::ChainstateActive().CoinsTip()))\n+        return error(\"CheckStake() : proof-of-stake checking failed\");\n+\n+    //// debug print\n+    LogPrint(BCLog::COINSTAKE, \"CheckStake() : new proof-of-stake block found  \\n  hash: %s \\nproofhash: %s  \\ntarget: %s\\n\", hashBlock.GetHex(), proofHash.GetHex(), hashTarget.GetHex());\n+    LogPrint(BCLog::COINSTAKE, \"%s\\n\", pblock->ToString());\n+    LogPrint(BCLog::COINSTAKE, \"out %s\\n\", FormatMoney(pblock->vtx[1]->GetValueOut()));\n+\n+    // Found a solution\n+    {\n+        if (pblock->hashPrevBlock != ::ChainActive().Tip()->GetBlockHash())\n+            return error(\"CheckStake() : generated block is stale\");\n+\n+        for(const CTxIn& vin : pblock->vtx[1]->vin) {\n+            if (wallet.IsSpent(vin.prevout.hash, vin.prevout.n)) {\n+                return error(\"CheckStake() : generated block became invalid due to stake UTXO being spent\");\n+            }\n+        }\n+    }\n+\n+    // Process this block the same as if we had received it from another node\n+    bool fNewBlock = false;\n+    if (!chainman->ProcessNewBlock(Params(), pblock, true, &fNewBlock))\n+        return error(\"CheckStake() : ProcessBlock, block not accepted\");\n+\n+    return true;\n+}\n+\n+void ThreadStakeMiner(CWallet *pwallet, CConnman* connman, ChainstateManager* chainman, CTxMemPool* mempool)\n+{\n+    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+    // Make this thread recognisable as the mining thread\n+    std::string threadName = \"bpsstake\";\n+    if (pwallet && pwallet->GetName() != \"\")\n+    {\n+        threadName = threadName + \"-\" + pwallet->GetName();\n+    }\n+    RenameThread(threadName.c_str());\n+\n+    bool fTryToSync = true;\n+    bool regtestMode = Params().MineBlocksOnDemand();\n+    if (regtestMode) {\n+        nMinerSleep = 30000; //limit regtest to 30s, otherwise it'll create 2 blocks per second\n+    }\n+\n+    std::set<std::pair<const CWalletTx*,unsigned int> > setCoins;\n+    uint256 chainTipForCoins;\n+\n+    while (true)\n+    {\n+        while (pwallet->IsLocked() || !pwallet->m_enabled_staking)\n+        {\n+            pwallet->m_last_coin_stake_search_interval = 0;\n+            UninterruptibleSleep(std::chrono::milliseconds{10000});\n+        }\n+        // Check if the last PoW block has been mined yet\n+        if (::ChainActive().Tip()->nHeight < Params().GetConsensus().nLastPOWBlock) {\n+            UninterruptibleSleep(std::chrono::milliseconds{Params().GetConsensus().nPowTargetSpacing * 1000});// sleep one block\n+            continue;\n+        }\n+        // Don't disable PoS mining for no connections if in regtest mode\n+        if (!regtestMode && !gArgs.GetBoolArg(\"-emergencystaking\", false)) {\n+            while (connman->GetNodeCount(CConnman::CONNECTIONS_ALL) < 4 || ::ChainstateActive().IsInitialBlockDownload()) {\n+                pwallet->m_last_coin_stake_search_interval = 0;\n+                fTryToSync = true;\n+                UninterruptibleSleep(std::chrono::milliseconds{1000});\n+            }\n+            if (fTryToSync) {\n+                fTryToSync = false;\n+                if (connman->GetNodeCount(CConnman::CONNECTIONS_ALL) < 4 ||\n+                    ::ChainActive().Tip()->GetBlockTime() < GetTime() - Params().GetConsensus().nPowTargetSpacing ||\n+                    !::ChainActive().Tip()->HaveTxsDownloaded() ||\n+                    !::ChainActive().Tip()->IsValid(BLOCK_VALID_TRANSACTIONS)) {\n+                    UninterruptibleSleep(std::chrono::milliseconds{Params().GetConsensus().nPowTargetSpacing / 10 * 1000});\n+                    continue;\n+                }\n+            }\n+        }\n+        //\n+        // Select the suitable coins\n+        //\n+        if (chainTipForCoins != ::ChainActive().Tip()->GetBlockHash()) {\n+            int64_t start_time = GetTimeMillis();\n+            LogPrint(BCLog::COINSTAKE, \"Chain tip changed since previous coin selection, selecting new coins for staking...\\n\");\n+            LOCK(pwallet->cs_wallet);\n+            setCoins.clear();\n+            chainTipForCoins = ::ChainActive().Tip()->GetBlockHash();\n+            pwallet->SelectCoinsForStaking(setCoins);\n+            LogPrint(BCLog::COINSTAKE, \"Selecting coins for staking completed in %15dms\\n\", GetTimeMillis() - start_time);\n+        } else {\n+            LogPrint(BCLog::COINSTAKE, \"Chain tip unchanged since previous coin selection, using previously selected coins...\\n\");\n+        }\n+\n+        //\n+        // Create new block\n+        //\n+        if (setCoins.size() > 0)\n+        {\n+            int64_t nTotalFees = 0;\n+            // First just create an empty block. No need to process transactions until we know we can create a block\n+            std::unique_ptr<CBlockTemplate> pblocktemplate(BlockAssembler(*mempool, Params()).CreateNewBlock(CScript(), true, &nTotalFees, 0, false));\n+            if (!pblocktemplate.get()) {\n+                LogPrintf(\"ThreadStakeMiner(): Failed to create block template; thread exiting...\\n\");\n+                return;\n+            }\n+\n+            CBlockIndex* pindexPrev = ::ChainActive().Tip();\n+\n+            uint32_t beginningTime=GetAdjustedTime();\n+            beginningTime &= ~STAKE_TIMESTAMP_MASK;\n+            for (uint32_t i=beginningTime;i<beginningTime + MAX_STAKE_LOOKAHEAD;i+=STAKE_TIMESTAMP_MASK+1) {\n+                // The information is needed for status bar to determine if the staker is trying to create block and when it will be created approximately,\n+                if (pwallet->m_last_coin_stake_search_time == 0) pwallet->m_last_coin_stake_search_time = GetAdjustedTime(); // startup timestamp\n+                // nLastCoinStakeSearchInterval > 0 mean that the staker is running\n+                pwallet->m_last_coin_stake_search_interval = i - pwallet->m_last_coin_stake_search_time;\n+\n+                // Try to sign a block (this also checks for a PoS stake)\n+                pblocktemplate->block.nTime = i;\n+                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>(pblocktemplate->block);\n+                if (SignBlock(pblock, *pwallet, nTotalFees, i, setCoins)) {\n+                    // increase priority so we can build the full PoS block ASAP to ensure the timestamp doesn't expire\n+                    SetThreadPriority(THREAD_PRIORITY_ABOVE_NORMAL);\n+\n+                    if (::ChainActive().Tip()->GetBlockHash() != pblock->hashPrevBlock) {\n+                        //another block was received while building ours, scrap progress\n+                        LogPrintf(\"ThreadStakeMiner(): Valid future PoS block was orphaned before becoming valid\\n\");\n+                        break;\n+                    }\n+                    // Create a block that's properly populated with transactions\n+                    std::unique_ptr<CBlockTemplate> pblocktemplatefilled(\n+                            BlockAssembler(*mempool, Params()).CreateNewBlock(pblock->vtx[1]->vout[1].scriptPubKey, true, &nTotalFees, i));\n+                    if (!pblocktemplatefilled.get()) {\n+                        LogPrintf(\"ThreadStakeMiner(): Failed to create block template; thread exiting...\\n\");\n+                        return;\n+                    }\n+                    if (::ChainActive().Tip()->GetBlockHash() != pblock->hashPrevBlock) {\n+                        //another block was received while building ours, scrap progress\n+                        LogPrintf(\"ThreadStakeMiner(): Valid future PoS block was orphaned before becoming valid\\n\");\n+                        break;\n+                    }\n+                    // Sign the full block and use the timestamp from earlier for a valid stake\n+                    std::shared_ptr<CBlock> pblockfilled = std::make_shared<CBlock>(pblocktemplatefilled->block);\n+                    if (SignBlock(pblockfilled, *pwallet, nTotalFees, i, setCoins)) {\n+                        // Should always reach here unless we spent too much time processing transactions and the timestamp is now invalid\n+                        // CheckStake also does CheckBlock and AcceptBlock to propogate it to the network\n+                        bool validBlock = false;\n+                        while (!validBlock) {\n+                            if (::ChainActive().Tip()->GetBlockHash() != pblockfilled->hashPrevBlock) {\n+                                //another block was received while building ours, scrap progress\n+                                LogPrintf(\"ThreadStakeMiner(): Valid future PoS block was orphaned before becoming valid\\n\");\n+                                break;\n+                            }\n+                            //check timestamps\n+                            if (pblockfilled->GetBlockTime() <= pindexPrev->GetBlockTime() ||\n+                                FutureDrift(pblockfilled->GetBlockTime()) < pindexPrev->GetBlockTime()) {\n+                                LogPrintf(\"ThreadStakeMiner(): Valid PoS block took too long to create and has expired\\n\");\n+                                break; //timestamp too late, so ignore\n+                            }\n+                            if (pblockfilled->GetBlockTime() > FutureDrift(GetAdjustedTime())) {\n+                                if (gArgs.IsArgSet(\"-aggressivestaking\")) {\n+                                    //if being agressive, then check more often to publish immediately when valid. This might allow you to find more blocks, \n+                                    //but also increases the chance of broadcasting invalid blocks and getting DoS banned by nodes,\n+                                    //or receiving more stale/orphan blocks than normal. Use at your own risk.\n+                                    UninterruptibleSleep(std::chrono::milliseconds{100});\n+                                } else {\n+                                    //too early, so wait 3 seconds and try again\n+                                    UninterruptibleSleep(std::chrono::milliseconds{3000});\n+                                }\n+                                continue;\n+                            }\n+                            validBlock=true;\n+                        }\n+                        if (validBlock) {\n+                            CheckStake(pblockfilled, *pwallet, chainman);\n+                            // Update the search time when new valid block is created, needed for status bar icon\n+                            pwallet->m_last_coin_stake_search_time = pblockfilled->GetBlockTime();\n+                        }\n+                        break;\n+                    }\n+                    //return back to low priority\n+                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+                }\n+            }\n+        }\n+        UninterruptibleSleep(std::chrono::milliseconds{nMinerSleep});\n+    }\n+}\n+\n+void StakeBTCs(bool fStake, CWallet *pwallet, CConnman* connman, ChainstateManager* chainman, CTxMemPool* mempool, boost::thread_group*& stakeThread)\n+{\n+    if (stakeThread != nullptr)\n+    {\n+        stakeThread->interrupt_all();\n+        delete stakeThread;\n+        stakeThread = nullptr;\n+    }\n+\n+    if(fStake)\n+    {\n+        stakeThread = new boost::thread_group();\n+        stakeThread->create_thread(boost::bind(&ThreadStakeMiner, pwallet, connman, chainman, mempool));\n+    }\n+}\n+#endif"
      },
      {
        "sha": "26303f241b2b672b862f1aa641fec1de060d82b4",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 31,
        "deletions": 2,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -16,15 +16,39 @@\n \n #include <boost/multi_index_container.hpp>\n #include <boost/multi_index/ordered_index.hpp>\n+#include <boost/thread.hpp>\n \n class CBlockIndex;\n class CChainParams;\n class CScript;\n \n-namespace Consensus { struct Params; };\n+namespace Consensus { struct Params; }\n \n static const bool DEFAULT_PRINTPRIORITY = false;\n \n+//! Default for -staking\n+static const bool DEFAULT_STAKE = true;\n+\n+//! Default for -coldstaking\n+static const bool DEFAULT_COLDSTAKING = true;\n+\n+static const bool DEFAULT_STAKE_CACHE = true;\n+\n+//How many seconds to look ahead and prepare a block for staking\n+//Look ahead up to 3 \"timeslots\" in the future, 48 seconds\n+//Reduce this to reduce computational waste for stakers, increase this to increase the amount of time available to construct full blocks\n+static const int32_t MAX_STAKE_LOOKAHEAD = 16 * 3;\n+\n+//How often to try to stake blocks in milliseconds\n+//Note this is overridden for regtest mode\n+static const int32_t STAKER_POLLING_PERIOD = 5000;\n+\n+//How much time to spend trying to process transactions when using the generate RPC call\n+static const int32_t POW_MINER_MAX_TIME = 60;\n+\n+//When staking delegations, what percent of the reward goes to the staker\n+static const int32_t COLD_STAKER_FEE = 7;\n+\n struct CBlockTemplate\n {\n     CBlock block;\n@@ -158,7 +182,7 @@ class BlockAssembler\n     explicit BlockAssembler(const CTxMemPool& mempool, const CChainParams& params, const Options& options);\n \n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n-    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn);\n+    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn, bool fProofOfStake = false, int64_t* pTotalFees = 0, int32_t nTime = 0, bool fAddTxs = true);\n \n     static Optional<int64_t> m_last_block_num_txs;\n     static Optional<int64_t> m_last_block_weight;\n@@ -204,4 +228,9 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n /** Update an old GenerateCoinbaseCommitment from CreateNewBlock after the block txs have changed */\n void RegenerateCommitments(CBlock& block);\n \n+#ifdef ENABLE_WALLET\n+/** Generate a new block, without valid proof-of-work */\n+void StakeBTCs(bool fStake, CWallet *pwallet, CConnman* connman, ChainstateManager* chainman, CTxMemPool* mempool, boost::thread_group*& stakeThread);\n+#endif\n+\n #endif // BITCOIN_MINER_H"
      },
      {
        "sha": "375c8725f3e1b68565a77c015d0e90f1bd906d54",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 481,
        "deletions": 16,
        "changes": 497,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -30,6 +30,9 @@\n #include <util/strencodings.h>\n #include <util/system.h>\n #include <validation.h>\n+#include <consensus/merkle.h>\n+#include <shutdown.h>\n+#include <checkpoints.h>\n \n #include <memory>\n #include <typeinfo>\n@@ -51,9 +54,9 @@ static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/head\n  */\n static constexpr int32_t MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4;\n /** Timeout for (unprotected) outbound peers to sync to our chainwork, in seconds */\n-static constexpr int64_t CHAIN_SYNC_TIMEOUT = 20 * 60; // 20 minutes\n+static constexpr int64_t CHAIN_SYNC_TIMEOUT = 6 * 60; // 6 minutes\n /** How frequently to check for stale tips, in seconds */\n-static constexpr int64_t STALE_CHECK_INTERVAL = 10 * 60; // 10 minutes\n+static constexpr int64_t STALE_CHECK_INTERVAL = 3 * 60; // 3 minutes\n /** How frequently to check for extra outbound peers and disconnect, in seconds */\n static constexpr int64_t EXTRA_PEER_CHECK_INTERVAL = 45;\n /** Minimum time an outbound-peer-eviction candidate must be connected for, in order to evict, in seconds */\n@@ -166,6 +169,20 @@ std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUA\n \n void EraseOrphansFor(NodeId peer);\n \n+struct COrphanBlock {\n+    uint256 hashBlock;\n+    uint256 hashPrev;\n+    std::pair<COutPoint, unsigned int> stake;\n+    std::vector<unsigned char> vchBlock;\n+};\n+std::map<uint256, COrphanBlock*> mapOrphanBlocks GUARDED_BY(cs_main);\n+std::multimap<uint256, COrphanBlock*> mapOrphanBlocksByPrev GUARDED_BY(cs_main);\n+std::set<std::pair<COutPoint, unsigned int>> setStakeSeenOrphan GUARDED_BY(cs_main);\n+size_t nOrphanBlocksSize = 0;\n+\n+/** Increase a node's misbehavior score. */\n+void Misbehaving(const NodeId nodeid, const int howmuch, const std::string& message=\"\") EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n // Internal stuff\n namespace {\n     /** Number of nodes with fSyncStarted. */\n@@ -281,6 +298,93 @@ namespace {\n } // namespace\n \n namespace {\n+class CNodeHeaders\n+{\n+public:\n+    CNodeHeaders():\n+        maxSize(0),\n+        maxAvg(0)\n+    {\n+        maxSize = gArgs.GetArg(\"-headerspamfiltermaxsize\", DEFAULT_HEADER_SPAM_FILTER_MAX_SIZE);\n+        maxAvg = gArgs.GetArg(\"-headerspamfiltermaxavg\", DEFAULT_HEADER_SPAM_FILTER_MAX_AVG);\n+    }\n+\n+    bool addHeaders(const CBlockIndex *pindexFirst, const CBlockIndex *pindexLast)\n+    {\n+        if(pindexFirst && pindexLast && maxSize && maxAvg)\n+        {\n+            // Get the begin block index\n+            int nBegin = pindexFirst->nHeight;\n+\n+            // Get the end block index\n+            int nEnd = pindexLast->nHeight;\n+\n+            for(int point = nBegin; point<= nEnd; point++)\n+            {\n+                addPoint(point);\n+            }\n+\n+            return true;\n+        }\n+\n+        return false;\n+    }\n+\n+    bool updateState(BlockValidationState& state, bool ret)\n+    {\n+        // No headers\n+        size_t size = points.size();\n+        if(size == 0)\n+            return ret;\n+\n+        // Compute the number of the received headers\n+        size_t nHeaders = 0;\n+        for(auto point : points)\n+        {\n+            nHeaders += point.second;\n+        }\n+\n+        // Compute the average value per height\n+        double nAvgValue = (double)nHeaders / size;\n+\n+        // Ban the node if try to spam\n+        bool banNode = (nAvgValue >= 1.5 * maxAvg && size >= maxAvg) ||\n+                       (nAvgValue >= maxAvg && nHeaders >= maxSize) ||\n+                       (nHeaders >= maxSize * 4.1);\n+        if(banNode)\n+        {\n+            // Clear the points and ban the node\n+            points.clear();\n+            return state.Invalid(BlockValidationResult::BLOCK_HEADER_SPAM, \"header-spam\", \"ban node for sending spam\");\n+        }\n+\n+        return ret;\n+    }\n+\n+private:\n+    void addPoint(int height)\n+    {\n+        // Erace the last element in the list\n+        if(points.size() == maxSize)\n+        {\n+            points.erase(points.begin());\n+        }\n+\n+        // Add the point to the list\n+        int occurrence = 0;\n+        auto mi = points.find(height);\n+        if (mi != points.end())\n+            occurrence = (*mi).second;\n+        occurrence++;\n+        points[height] = occurrence;\n+    }\n+\n+private:\n+    std::map<int,int> points;\n+    size_t maxSize;\n+    size_t maxAvg;\n+};\n+\n /**\n  * Maintain validation-specific state about nodes, protected by cs_main, instead\n  * by CNode's own locks. This simplifies asynchronous operation, where\n@@ -417,6 +521,7 @@ struct CNodeState {\n \n /** Map maintaining per-node state. */\n static std::map<NodeId, CNodeState> mapNodeState GUARDED_BY(cs_main);\n+static std::map<CService, CNodeHeaders> mapServiceHeaders GUARDED_BY(cs_main);\n \n static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     std::map<NodeId, CNodeState>::iterator it = mapNodeState.find(pnode);\n@@ -425,6 +530,27 @@ static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     return &it->second;\n }\n \n+static CNodeHeaders &ServiceHeaders(const CService& address) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+    unsigned short port =\n+            gArgs.GetBoolArg(\"-headerspamfilterignoreport\", DEFAULT_HEADER_SPAM_FILTER_IGNORE_PORT) ? 0 : address.GetPort();\n+    CService addr(address, port);\n+    return mapServiceHeaders[addr];\n+}\n+\n+static void CleanAddressHeaders(const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+    CSubNet subNet(addr);\n+    for (std::map<CService, CNodeHeaders>::iterator it=mapServiceHeaders.begin(); it!=mapServiceHeaders.end();){\n+        if(subNet.Match(it->first))\n+        {\n+            it = mapServiceHeaders.erase(it);\n+        }\n+        else{\n+            it++;\n+        }\n+    }\n+}\n+\n+\n /**\n  * Data structure for an individual peer. This struct is not protected by\n  * cs_main since it does not contain validation-critical data.\n@@ -686,7 +812,7 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n-    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < ::ChainActive().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork <= ::ChainActive().Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n         // This peer has nothing interesting.\n         return;\n     }\n@@ -1097,15 +1223,23 @@ bool PeerManager::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationSt\n     case BlockValidationResult::BLOCK_INVALID_HEADER:\n     case BlockValidationResult::BLOCK_CHECKPOINT:\n     case BlockValidationResult::BLOCK_INVALID_PREV:\n+    case BlockValidationResult::BLOCK_HEADER_SPAM:\n         Misbehaving(nodeid, 100, message);\n         return true;\n     // Conflicting (but not necessarily invalid) data or different policy:\n     case BlockValidationResult::BLOCK_MISSING_PREV:\n         // TODO: Handle this much more gracefully (10 DoS points is super arbitrary)\n         Misbehaving(nodeid, 10, message);\n         return true;\n+    case BlockValidationResult::BLOCK_HEADER_SYNC:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 1, message);\n+        }\n+        return true;\n     case BlockValidationResult::BLOCK_RECENT_CONSENSUS_CHANGE:\n     case BlockValidationResult::BLOCK_TIME_FUTURE:\n+    case BlockValidationResult::BLOCK_HEADER_REJECT:\n         break;\n     }\n     if (message != \"\") {\n@@ -1843,7 +1977,8 @@ void PeerManager::ProcessHeadersMessage(CNode& pfrom, const std::vector<CBlockHe\n     }\n \n     BlockValidationState state;\n-    if (!m_chainman.ProcessNewBlockHeaders(headers, state, m_chainparams, &pindexLast)) {\n+    CBlockHeader first_invalid_header;\n+    if (!ProcessNetBlockHeaders(m_chainman, pfrom, headers, state, m_chainparams, &pindexLast, &first_invalid_header)) {\n         if (state.IsInvalid()) {\n             MaybePunishNodeForBlock(pfrom.GetId(), state, via_compact_block, \"invalid header received\");\n             return;\n@@ -2271,6 +2406,25 @@ static void ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv, const CChainPar\n     connman.PushMessage(&peer, std::move(msg));\n }\n \n+static bool IsValidNodeProtocolVersion(CNode& pfrom, const int nVersion, const CChainParams& chain_params)\n+{\n+    int minPeerProtoVersion;\n+    if (::ChainActive().Height() < chain_params.GetConsensus().BTCColdStakeEnableHeight) {\n+        minPeerProtoVersion = OLD_MIN_PEER_PROTO_VERSION;\n+    } else {\n+        minPeerProtoVersion = MIN_PEER_PROTO_VERSION;\n+    }\n+\n+    if (nVersion < minPeerProtoVersion) {\n+        // disconnect from peers older than this proto version\n+        LogPrint(BCLog::NET, \"peer=%d using obsolete version %i; disconnecting\\n\", pfrom.GetId(), nVersion);\n+        pfrom.fDisconnect = true;\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n                                          const std::chrono::microseconds time_received,\n                                          const std::atomic<bool>& interruptMsgProc)\n@@ -2282,6 +2436,11 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (pfrom.nVersion != 0) {\n+        if (!IsValidNodeProtocolVersion(pfrom, pfrom.nVersion, m_chainparams))\n+            return;\n+    }\n+\n     PeerRef peer = GetPeerRef(pfrom.GetId());\n     if (peer == nullptr) return;\n \n@@ -2317,12 +2476,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        if (nVersion < MIN_PEER_PROTO_VERSION) {\n-            // disconnect from peers older than this proto version\n-            LogPrint(BCLog::NET, \"peer=%d using obsolete version %i; disconnecting\\n\", pfrom.GetId(), nVersion);\n-            pfrom.fDisconnect = true;\n+        if (!IsValidNodeProtocolVersion(pfrom, nVersion, m_chainparams))\n             return;\n-        }\n \n         if (!vRecv.empty())\n             vRecv >> addrFrom >> nNonce;\n@@ -2587,7 +2742,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // Store the new addresses\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n-        int64_t nSince = nNow - 10 * 60;\n+        int64_t nSince = nNow - 3 * 60;\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n@@ -2599,7 +2754,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             if (!MayHaveUsefulAddressDB(addr.nServices) && !HasAllDesirableServiceFlags(addr.nServices))\n                 continue;\n \n-            if (addr.nTime <= 100000000 || addr.nTime > nNow + 10 * 60)\n+            if (addr.nTime <= 100000000 || addr.nTime > nNow + 3 * 60)\n                 addr.nTime = nNow - 5 * 24 * 60 * 60;\n             pfrom.AddAddressKnown(addr);\n             if (m_banman && (m_banman->IsDiscouraged(addr) || m_banman->IsBanned(addr))) {\n@@ -3183,7 +3338,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n         const CBlockIndex *pindex = nullptr;\n         BlockValidationState state;\n-        if (!m_chainman.ProcessNewBlockHeaders({cmpctblock.header}, state, m_chainparams, &pindex)) {\n+        if (!ProcessNetBlockHeaders(m_chainman, pfrom, {cmpctblock.header}, state, m_chainparams, &pindex)) {\n             if (state.IsInvalid()) {\n                 MaybePunishNodeForBlock(pfrom.GetId(), state, /*via_compact_block*/ true, \"invalid header via cmpctblock\");\n                 return;\n@@ -3356,7 +3511,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // we have a chain with at least nMinimumChainWork), and we ignore\n             // compact blocks with less work than our tip, it is safe to treat\n             // reconstructed compact blocks as having been requested.\n-            m_chainman.ProcessNewBlock(m_chainparams, pblock, /*fForceProcessing=*/true, &fNewBlock);\n+            ProcessNetBlock(m_chainman, m_chainparams, pblock, /*fForceProcessing=*/true, &fNewBlock, pfrom, m_connman);\n             if (fNewBlock) {\n                 pfrom.nLastBlockTime = GetTime();\n             } else {\n@@ -3446,7 +3601,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // disk-space attacks), but this should be safe due to the\n             // protections in the compact block handler -- see related comment\n             // in compact block optimistic reconstruction handling.\n-            m_chainman.ProcessNewBlock(m_chainparams, pblock, /*fForceProcessing=*/true, &fNewBlock);\n+            ProcessNetBlock(m_chainman, m_chainparams, pblock, /*fForceProcessing=*/true, &fNewBlock, pfrom, m_connman);\n             if (fNewBlock) {\n                 pfrom.nLastBlockTime = GetTime();\n             } else {\n@@ -3508,7 +3663,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             mapBlockSource.emplace(hash, std::make_pair(pfrom.GetId(), true));\n         }\n         bool fNewBlock = false;\n-        m_chainman.ProcessNewBlock(m_chainparams, pblock, forceProcessing, &fNewBlock);\n+        ProcessNetBlock(m_chainman, m_chainparams, pblock, forceProcessing, &fNewBlock, pfrom, m_connman);\n         if (fNewBlock) {\n             pfrom.nLastBlockTime = GetTime();\n         } else {\n@@ -3804,7 +3959,11 @@ bool PeerManager::MaybeDiscourageAndDisconnect(CNode& pnode)\n \n     // Normal case: Disconnect the peer and discourage all nodes sharing the address\n     LogPrintf(\"Disconnecting and discouraging peer %d!\\n\", peer_id);\n-    if (m_banman) m_banman->Discourage(pnode.addr);\n+    if (m_banman) {\n+        m_banman->Discourage(pnode.addr);\n+        // Remove all data from the header spam filter when the address is banned\n+        CleanAddressHeaders(pnode.addr);\n+    }\n     m_connman.DisconnectNode(pnode.addr);\n     return true;\n }\n@@ -4615,6 +4774,309 @@ bool PeerManager::SendMessages(CNode* pto)\n     return true;\n }\n \n+void PushGetBlocks(CNode& pnode, const CBlockIndex* pindexBegin, const uint256& hashEnd, CConnman& connman)\n+{\n+    const CNetMsgMaker msgMaker(pnode.GetCommonVersion());\n+    connman.PushMessage(&pnode, msgMaker.Make(NetMsgType::GETBLOCKS, ::ChainActive().GetLocator(pindexBegin), hashEnd));\n+}\n+\n+uint256 static GetOrphanRoot(const uint256& hash)\n+{\n+    std::map<uint256, COrphanBlock*>::iterator it = mapOrphanBlocks.find(hash);\n+    if (it == mapOrphanBlocks.end())\n+        return hash;\n+\n+    // Work back to the first block in the orphan chain\n+    do {\n+        std::map<uint256, COrphanBlock*>::iterator it2 = mapOrphanBlocks.find(it->second->hashPrev);\n+        if (it2 == mapOrphanBlocks.end())\n+            return it->first;\n+        it = it2;\n+    } while(true);\n+}\n+\n+// ppcoin: find block wanted by given orphan block\n+uint256 WantedByOrphan(const COrphanBlock* pblockOrphan)\n+{\n+    // Work back to the first block in the orphan chain\n+    while (mapOrphanBlocks.count(pblockOrphan->hashPrev))\n+        pblockOrphan = mapOrphanBlocks[pblockOrphan->hashPrev];\n+    return pblockOrphan->hashPrev;\n+}\n+\n+// Remove a random orphan block (which does not have any dependent orphans).\n+void static PruneOrphanBlocks()\n+{\n+    size_t nMaxOrphanBlocksSize = gArgs.GetArg(\"-maxorphanblocksmib\", DEFAULT_MAX_ORPHAN_BLOCKS) * ((size_t) 1 << 20);\n+    while (nOrphanBlocksSize > nMaxOrphanBlocksSize)\n+    {\n+        // Pick a random orphan block.\n+        uint256 randomhash = GetRandHash();\n+        std::multimap<uint256, COrphanBlock*>::iterator it = mapOrphanBlocksByPrev.lower_bound(randomhash);\n+        if (it == mapOrphanBlocksByPrev.end())\n+            it = mapOrphanBlocksByPrev.begin();\n+\n+        // As long as this block has other orphans depending on it, move to one of those successors.\n+        do {\n+            std::multimap<uint256, COrphanBlock*>::iterator it2 = mapOrphanBlocksByPrev.find(it->second->hashBlock);\n+            if (it2 == mapOrphanBlocksByPrev.end())\n+                break;\n+            it = it2;\n+        } while(1);\n+\n+        setStakeSeenOrphan.erase(it->second->stake);\n+        uint256 hash = it->second->hashBlock;\n+        nOrphanBlocksSize -= it->second->vchBlock.size();\n+        delete it->second;\n+        mapOrphanBlocksByPrev.erase(it);\n+        mapOrphanBlocks.erase(hash);\n+    }\n+}\n+\n+bool PeerManager::ProcessNetBlock(ChainstateManager& chainman, const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool* fNewBlock, CNode& pfrom, CConnman& connman)\n+{\n+    // Check that the coinstake transaction exist in the received block\n+    if(pblock->IsProofOfStake() && !(pblock->vtx.size() > 1 && pblock->vtx[1]->IsCoinStake()))\n+    {\n+        return error(\"ProcessNetBlock() : coinstake transaction does not exist\");\n+    }\n+\n+    // Check for duplicate orphan block\n+    // Duplicate stake allowed only when there is orphan child block\n+    // if the block header is already known, allow it (to account for headers being sent before the block itself)\n+    uint256 hash = pblock->GetHash();\n+    {\n+        LOCK(cs_main);\n+        if (!fReindex && !fImporting && pblock->IsProofOfStake() && ::StakeSeen().count(pblock->GetProofOfStake()) && !::BlockIndex().count(hash) && !mapOrphanBlocksByPrev.count(hash))\n+            return error(\"ProcessNetBlock() : duplicate proof-of-stake (%s, %d) for block %s\", pblock->GetProofOfStake().first.ToString(), pblock->GetProofOfStake().second, hash.ToString());\n+    }\n+\n+    // Process the header before processing the block\n+    const CBlockIndex *pindex = nullptr;\n+    BlockValidationState state;\n+    if (!ProcessNetBlockHeaders(chainman, pfrom, {*pblock}, state, chainparams, &pindex)) {\n+        if (state.IsInvalid()) {\n+            MaybePunishNodeForBlock(pfrom.GetId(), state, false, strprintf(\"Peer %d sent us invalid header\\n\", pfrom.GetId()));\n+            return error(\"ProcessNetBlock() : invalid header received\");\n+        }\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+\n+        if (mapOrphanBlocks.count(hash))\n+            return error(\"ProcessNetBlock() : already have block (orphan) %s\", hash.ToString());\n+\n+        // Check for the checkpoint\n+        if (::ChainActive().Tip() && pblock->hashPrevBlock != ::ChainActive().Tip()->GetBlockHash())\n+        {\n+            // Extra checks to prevent \"fill up memory by spamming with bogus blocks\"\n+            const CBlockIndex* pcheckpoint = Checkpoints::AutoSelectSyncCheckpoint();\n+            int64_t deltaTime = pblock->GetBlockTime() - pcheckpoint->nTime;\n+            if (deltaTime < 0)\n+            {\n+                return error(\"ProcessNetBlock() : block with timestamp before last checkpoint\");\n+            }\n+        }\n+\n+        // Check for the signiture encoding\n+        if (!CheckCanonicalBlockSignature(pblock.get())) \n+        {\n+            return error(\"ProcessNetBlock(): bad block signature encoding\");\n+        }\n+\n+        // If we don't already have its previous block, shunt it off to holding area until we get it\n+        if (!::BlockIndex().count(pblock->hashPrevBlock))\n+        {\n+            LogPrintf(\"ProcessNetBlock: ORPHAN BLOCK %lu, prev=%s\\n\", (unsigned long)mapOrphanBlocks.size(), pblock->hashPrevBlock.ToString());\n+            \n+            // ppcoin: check proof-of-stake\n+            if (pblock->IsProofOfStake())\n+            {\n+                // Limited duplicity on stake: prevents block flood attack\n+                // Duplicate stake allowed only when there is orphan child block\n+                if (setStakeSeenOrphan.count(pblock->GetProofOfStake()) && !mapOrphanBlocksByPrev.count(hash))\n+                    return error(\"ProcessNetBlock() : duplicate proof-of-stake (%s, %d) for orphan block %s\", pblock->GetProofOfStake().first.ToString(), pblock->GetProofOfStake().second, hash.ToString());\n+            }\n+            PruneOrphanBlocks();\n+            COrphanBlock* pblock2 = new COrphanBlock();\n+            {\n+                CDataStream ss(SER_DISK, CLIENT_VERSION);\n+                ss << *pblock;\n+                pblock2->vchBlock = std::vector<unsigned char>(ss.begin(), ss.end());\n+            }\n+            pblock2->hashBlock = hash;\n+            pblock2->hashPrev = pblock->hashPrevBlock;\n+            pblock2->stake = pblock->GetProofOfStake();\n+            nOrphanBlocksSize += pblock2->vchBlock.size();\n+            mapOrphanBlocks.insert(std::make_pair(hash, pblock2));\n+            mapOrphanBlocksByPrev.insert(std::make_pair(pblock2->hashPrev, pblock2));\n+            if (pblock->IsProofOfStake())\n+                setStakeSeenOrphan.insert(pblock->GetProofOfStake());\n+\n+            // Ask this guy to fill in what we're missing\n+            PushGetBlocks(pfrom, pindexBestHeader, GetOrphanRoot(hash), connman);\n+            \n+            return true;\n+        }\n+    }\n+\n+    if(!chainman.ProcessNewBlock(chainparams, pblock, fForceProcessing, fNewBlock))\n+        return error(\"%s: ProcessNewBlock FAILED\", __func__);\n+\n+    std::vector<uint256> vWorkQueue;\n+    vWorkQueue.push_back(pblock->GetHash());\n+    for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+    {\n+        uint256 hashPrev = vWorkQueue[i];\n+        for (std::multimap<uint256, COrphanBlock*>::iterator mi = mapOrphanBlocksByPrev.lower_bound(hashPrev);\n+             mi != mapOrphanBlocksByPrev.upper_bound(hashPrev);\n+             ++mi)\n+        {\n+            CBlock block;\n+            {\n+                CDataStream ss(mi->second->vchBlock, SER_DISK, CLIENT_VERSION);\n+                ss >> block;\n+            }\n+            block.hashMerkleRoot = BlockMerkleRoot(block);\n+\n+            bool fNewBlockOrphan = false;\n+            std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(block);\n+            if (chainman.ProcessNewBlock(chainparams, shared_pblock, fForceProcessing, &fNewBlockOrphan))\n+                vWorkQueue.push_back(mi->second->hashBlock);\n+\n+            LOCK(cs_main);\n+            mapOrphanBlocks.erase(mi->second->hashBlock);\n+            setStakeSeenOrphan.erase(block.GetProofOfStake());\n+            nOrphanBlocksSize -= mi->second->vchBlock.size();\n+            delete mi->second;\n+        }\n+\n+        LOCK(cs_main);\n+        mapOrphanBlocksByPrev.erase(hashPrev);\n+    }\n+\n+    LogPrintf(\"ProcessNetBlock: ACCEPTED\\n\");\n+\n+    return true;\n+}\n+\n+bool PeerManager::ProcessNetBlockHeaders(ChainstateManager& chainman, CNode& pfrom, const std::vector<CBlockHeader>& block, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex, CBlockHeader *first_invalid)\n+{\n+    const CBlockIndex *pindexFirst = nullptr;\n+    bool ret = chainman.ProcessNewBlockHeaders(block, state, chainparams, ppindex, first_invalid, &pindexFirst);\n+    if(gArgs.GetBoolArg(\"-headerspamfilter\", DEFAULT_HEADER_SPAM_FILTER))\n+    {\n+        LOCK(cs_main);\n+        CNodeState *nodestate = State(pfrom.GetId());\n+        CNodeHeaders& headers = ServiceHeaders(nodestate->address);\n+        const CBlockIndex *pindexLast = ppindex == nullptr ? nullptr : *ppindex;\n+        headers.addHeaders(pindexFirst, pindexLast);\n+        return headers.updateState(state, ret);\n+    }\n+    return ret;\n+}\n+\n+bool RemoveNetBlockIndex(CBlockIndex *pindex)\n+{\n+    // Make sure it's not listed somewhere already.\n+    MarkBlockAsReceived(pindex->GetBlockHash());\n+\n+    for (std::map<NodeId, CNodeState>::iterator it=mapNodeState.begin(); it!=mapNodeState.end(); it++)\n+    {\n+        CNodeState * state = &it->second;\n+\n+        if(state->pindexBestKnownBlock == pindex)\n+            state->pindexBestKnownBlock = nullptr;\n+\n+        if(state->pindexLastCommonBlock == pindex)\n+            state->pindexLastCommonBlock = nullptr;\n+\n+        if(state->pindexBestHeaderSent == pindex)\n+            state->pindexBestHeaderSent = nullptr;\n+\n+        if(state->m_chain_sync.m_work_header == pindex)\n+            state->m_chain_sync.m_work_header = nullptr;\n+    }\n+\n+    return true;\n+}\n+\n+bool NeedToEraseBlockIndex(const CBlockIndex *pindex, const CBlockIndex *pindexCheck)\n+{\n+    if(!::ChainActive().Contains(pindex))\n+    {\n+        if(pindex->nHeight <= pindexCheck->nHeight) return true;\n+        const CBlockIndex *pindexBlock = pindex;\n+        while(pindexBlock)\n+        {\n+           pindexBlock = pindexBlock->pprev;\n+           if(pindexBlock->nHeight == pindexCheck->nHeight) return pindexBlock != pindexCheck;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool RemoveBlockIndex(CBlockIndex *pindex)\n+{\n+    bool ret = RemoveStateBlockIndex(pindex);\n+    ret &= RemoveNetBlockIndex(pindex);\n+    return ret;\n+}\n+\n+void CleanBlockIndex()\n+{\n+    unsigned int cleanTimeout = gArgs.GetArg(\"-cleanblockindextimeout\", DEFAULT_CLEANBLOCKINDEXTIMEOUT) * 1000;\n+    if(cleanTimeout == 0) cleanTimeout = DEFAULT_CLEANBLOCKINDEXTIMEOUT * 1000;\n+\n+    while(!ShutdownRequested())\n+    {\n+        if(!::ChainstateActive().IsInitialBlockDownload())\n+        {\n+            // Select block indexes to delete\n+            std::vector<uint256> indexNeedErase;\n+            {\n+                LOCK(cs_main);\n+                const CBlockIndex *pindexCheck = ::ChainActive()[::ChainActive().Height() - Params().GetConsensus().nCheckpointSpan -1];\n+                if(pindexCheck)\n+                {\n+                    for (BlockMap::iterator it=::BlockIndex().begin(); it!=::BlockIndex().end(); it++)\n+                    {\n+                        CBlockIndex *pindex = (*it).second;\n+                        if(NeedToEraseBlockIndex(pindex, pindexCheck))\n+                        {\n+                            indexNeedErase.push_back(pindex->GetBlockHash());\n+                        }\n+                    }\n+                }\n+            }\n+\n+            // Delete selected block indexes\n+            if(indexNeedErase.size() > 0)\n+            {\n+                SyncWithValidationInterfaceQueue();\n+\n+                LOCK(cs_main);\n+                for(uint256 blockHash : indexNeedErase)\n+                {\n+                    BlockMap::iterator it=::BlockIndex().find(blockHash);\n+                    if(it!=::BlockIndex().end())\n+                    {\n+                        CBlockIndex *pindex = (*it).second;\n+                        if(RemoveBlockIndex(pindex))\n+                        {\n+                            delete pindex;\n+                            ::BlockIndex().erase(it);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        InterruptibleSleep(std::chrono::milliseconds{cleanTimeout});\n+    }\n+}\n+\n class CNetProcessingCleanup\n {\n public:\n@@ -4623,6 +5085,9 @@ class CNetProcessingCleanup\n         // orphan transactions\n         mapOrphanTransactions.clear();\n         mapOrphanTransactionsByPrev.clear();\n+        mapOrphanBlocks.clear();\n+        mapOrphanBlocksByPrev.clear();\n+        setStakeSeenOrphan.clear();\n         g_orphans_by_wtxid.clear();\n     }\n };"
      },
      {
        "sha": "03ad355c92dfd48ab8da69508547db569778444d",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -6,11 +6,13 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n+#include <consensus/consensus.h>\n #include <consensus/params.h>\n #include <net.h>\n #include <sync.h>\n #include <txrequest.h>\n #include <validationinterface.h>\n+#include <chainparams.h>\n \n class BlockTransactionsRequest;\n class BlockValidationState;\n@@ -31,6 +33,21 @@ static const bool DEFAULT_PEERBLOOMFILTERS = false;\n static const bool DEFAULT_PEERBLOCKFILTERS = false;\n /** Threshold for marking a node to be discouraged, e.g. disconnected and added to the discouragement filter. */\n static const int DISCOURAGEMENT_THRESHOLD{100};\n+/** Default maximum orphan blocks */\n+static const unsigned int DEFAULT_MAX_ORPHAN_BLOCKS = 40;\n+/** Default for -headerspamfilter, use header spam filter */\n+static const bool DEFAULT_HEADER_SPAM_FILTER = true;\n+/** Default for -headerspamfiltermaxsize, maximum size of the list of indexes in the header spam filter */\n+static const unsigned int DEFAULT_HEADER_SPAM_FILTER_MAX_SIZE = COINBASE_MATURITY;\n+/** Default for -headerspamfiltermaxavg, maximum average size of an index occurrence in the header spam filter */\n+static const unsigned int DEFAULT_HEADER_SPAM_FILTER_MAX_AVG = 10;\n+/** Default for -headerspamfilterignoreport, ignore the port in the ip address when looking for header spam,\n+ multiple nodes on the same ip will be treated as the one when computing the filter*/\n+static const unsigned int DEFAULT_HEADER_SPAM_FILTER_IGNORE_PORT = true;\n+/** Default for -cleanblockindex. */\n+static const bool DEFAULT_CLEANBLOCKINDEX = true;\n+/** Default for -cleanblockindextimeout. */\n+static const unsigned int DEFAULT_CLEANBLOCKINDEXTIMEOUT = 600;\n \n class PeerManager final : public CValidationInterface, public NetEventsInterface {\n public:\n@@ -128,6 +145,11 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n \n     void SendBlockTransactions(CNode& pfrom, const CBlock& block, const BlockTransactionsRequest& req);\n \n+    /** Process network block received from a given node */\n+    bool ProcessNetBlock(ChainstateManager& chainman, const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool* fNewBlock, CNode& pfrom, CConnman& connman);\n+\n+    bool ProcessNetBlockHeaders(ChainstateManager& chainman, CNode& pfrom, const std::vector<CBlockHeader>& block, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex=nullptr, CBlockHeader *first_invalid=nullptr);\n+    \n     /** Register with TxRequestTracker that an INV has been received from a\n      *  peer. The announcement parameters are decided in PeerManager and then\n      *  passed to TxRequestTracker. */\n@@ -158,4 +180,7 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Relay transaction to every node */\n void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/** Clean block index */\n+void CleanBlockIndex();\n+\n #endif // BITCOIN_NET_PROCESSING_H"
      },
      {
        "sha": "0e8c6a7a173278b07f49f9927e0df98eaf65a6be",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -28,11 +28,11 @@ static void ApplyStats(CCoinsStats& stats, CHashWriter& ss, const uint256& hash,\n {\n     assert(!outputs.empty());\n     ss << hash;\n-    ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase ? 1u : 0u);\n+    ss << VARINT((outputs.begin()->second.nHeight << 2) + (outputs.begin()->second.fCoinBase ? 1u : 0u) + (outputs.begin()->second.fCoinStake ? 2u : 0u));\n     stats.nTransactions++;\n     for (const auto& output : outputs) {\n         ss << VARINT(output.first + 1);\n-        ss << output.second.out.scriptPubKey;\n+        ss << *(const CScriptBase*)(&output.second.out.scriptPubKey);\n         ss << VARINT_MODE(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);\n         stats.nTransactionOutputs++;\n         stats.nTotalAmount += output.second.out.nValue;"
      },
      {
        "sha": "7af43f474da9d95e9b6e5662818b067e97850ace",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -186,6 +186,13 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs,\n         } else if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n             // Don't allow Taproot spends unless Taproot is active.\n             if (!taproot_active) return false;\n+        } else if (whichType == TxoutType::COLDSTAKE) {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE))\n+                return false;\n+            if (stack.size() != 3)\n+                return false;\n         }\n     }\n "
      },
      {
        "sha": "541b79fe07ae986e174c6e1b12c7cc78a5576f5f",
        "filename": "src/pos.cpp",
        "status": "added",
        "additions": 460,
        "deletions": 0,
        "changes": 460,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pos.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pos.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pos.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,460 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// BPSTODO Move this to compiler flags\n+#define BOOST_VARIANT_USE_RELAXED_GET_BY_DEFAULT\n+#include <boost/assign/list_of.hpp>\n+\n+#include <pos.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <arith_uint256.h>\n+#include <hash.h>\n+#include <timedata.h>\n+#include <chainparams.h>\n+#include <script/sign.h>\n+#include <script/standard.h>\n+#include <consensus/consensus.h>\n+\n+using namespace std;\n+\n+// Stake Modifier (hash modifier of proof-of-stake):\n+// The purpose of stake modifier is to prevent a txout (coin) owner from\n+// computing future proof-of-stake generated by this txout at the time\n+// of transaction confirmation. To meet kernel protocol, the txout\n+// must hash with a future stake modifier to generate the proof.\n+uint256 ComputeStakeModifier(const CBlockIndex* pindexPrev, const uint256& kernel)\n+{\n+    if (!pindexPrev)\n+        return uint256();  // genesis block's modifier is 0\n+\n+    CDataStream ss(SER_GETHASH, 0);\n+    ss << kernel << pindexPrev->nStakeModifier;\n+    return Hash(ss);\n+}\n+\n+// BTC kernel protocol\n+// coinstake must meet hash target according to the protocol:\n+// kernel (input 0) must meet the formula\n+//     hash(nStakeModifier + blockFrom.nTime + txPrev.vout.hash + txPrev.vout.n + nTime) < bnTarget * nWeight\n+// this ensures that the chance of getting a coinstake is proportional to the\n+// amount of coins one owns.\n+// The reason this hash is chosen is the following:\n+//   nStakeModifier: scrambles computation to make it very difficult to precompute\n+//                   future proof-of-stake\n+//   blockFrom.nTime: slightly scrambles computation\n+//   txPrev.vout.hash: hash of txPrev, to reduce the chance of nodes\n+//                     generating coinstake at the same time\n+//   txPrev.vout.n: output number of txPrev, to reduce the chance of nodes\n+//                  generating coinstake at the same time\n+//   nTime: current timestamp\n+//   block/tx hash should not be used here as they can be generated in vast\n+//   quantities so as to generate blocks faster, degrading the system back into\n+//   a proof-of-work situation.\n+//\n+bool CheckStakeKernelHash(CBlockIndex* pindexPrev, unsigned int nBits, uint32_t blockFromTime, CAmount prevoutValue, const COutPoint& prevout, unsigned int nTimeBlock, uint256& hashProofOfStake, uint256& targetProofOfStake, bool fPrintProofOfStake)\n+{\n+    if (nTimeBlock < blockFromTime)  // Transaction timestamp violation\n+        return error(\"CheckStakeKernelHash() : nTime violation\");\n+\n+    // Base target\n+    arith_uint256 bnTarget;\n+    bnTarget.SetCompact(nBits);\n+\n+    // Weighted target\n+    int64_t nValueIn = prevoutValue;\n+    arith_uint256 bnWeight = arith_uint256(nValueIn);\n+    bnTarget *= bnWeight;\n+\n+    targetProofOfStake = ArithToUint256(bnTarget);\n+\n+    uint256 nStakeModifier = pindexPrev->nStakeModifier;\n+\n+    // Calculate hash\n+    CDataStream ss(SER_GETHASH, 0);\n+    ss << nStakeModifier;\n+    ss << blockFromTime << prevout.hash << prevout.n << nTimeBlock;\n+    hashProofOfStake = Hash(ss);\n+\n+    if (fPrintProofOfStake) {\n+        LogPrint(BCLog::COINSTAKE, \"CheckStakeKernelHash() : check modifier=%s nTimeBlockFrom=%u nPrevout=%u nTimeBlock=%u hashProof=%s\\n\",\n+            nStakeModifier.GetHex().c_str(),\n+            blockFromTime, prevout.n, nTimeBlock,\n+            hashProofOfStake.ToString());\n+    }\n+\n+    // Now check if proof-of-stake hash meets target protocol\n+    if (UintToArith256(hashProofOfStake) > bnTarget)\n+        return false;\n+\n+    return true;\n+}\n+\n+// Check kernel hash target and coinstake signature\n+bool CheckProofOfStake(CBlockIndex* pindexPrev, BlockValidationState& state, const CTransaction& tx, unsigned int nBits, uint32_t nTimeBlock, uint256& hashProofOfStake, uint256& targetProofOfStake, CCoinsViewCache& view)\n+{\n+    if (!tx.IsCoinStake())\n+        return error(\"CheckProofOfStake() : called on non-coinstake %s\", tx.GetHash().ToString());\n+\n+    // Kernel (input 0) must match the stake hash target (nBits)\n+    const CTxIn& txin = tx.vin[0];\n+\n+    Coin coinPrev;\n+\n+    if (!view.GetCoin(txin.prevout, coinPrev))\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-stake-prevout-doesnotexist\", \n+                            strprintf(\"CheckProofOfStake() : Stake prevout does not exist %s\", txin.prevout.hash.ToString()));\n+\n+    if (pindexPrev->nHeight + 1 - coinPrev.nHeight < COINBASE_MATURITY)\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-stake-prevout-notmature\", \n+                            strprintf(\"CheckProofOfStake() : Stake prevout is not mature, expecting %i and only matured to %i\", COINBASE_MATURITY, pindexPrev->nHeight + 1 - coinPrev.nHeight));\n+    \n+    CBlockIndex* blockFrom = pindexPrev->GetAncestor(coinPrev.nHeight);\n+    if (!blockFrom) \n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-stake-prevout-couldnotload\", \n+                            strprintf(\"CheckProofOfStake() : Block at height %i for prevout can not be loaded\", coinPrev.nHeight));\n+\n+    // Verify signature\n+    if (!VerifySignature(coinPrev, txin.prevout.hash, tx, 0, SCRIPT_VERIFY_NONE))\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-stake-signature-verify\", \n+                            strprintf(\"CheckProofOfStake() : VerifySignature failed on coinstake %s\", tx.GetHash().ToString()));\n+\n+    if (!CheckStakeKernelHash(pindexPrev, nBits, blockFrom->nTime, coinPrev.out.nValue, txin.prevout, nTimeBlock, hashProofOfStake, targetProofOfStake, true))\n+        // may occur during initial download or if behind on block chain sync\n+        return state.Invalid(BlockValidationResult::BLOCK_HEADER_SYNC, \"bad-stake-kernel-check\", \n+                            strprintf(\"CheckProofOfStake() : INFO: check kernel failed on coinstake %s, hashProof=%s\", tx.GetHash().ToString(), hashProofOfStake.ToString()));\n+        \n+    return true;\n+}\n+\n+// Check whether the coinstake timestamp meets protocol\n+bool CheckCoinStakeTimestamp(uint32_t nTimeBlock)\n+{\n+    return (nTimeBlock & STAKE_TIMESTAMP_MASK) == 0;\n+}\n+\n+bool CheckBlockInputPubKeyMatchesOutputPubKey(const CBlock& block, CCoinsViewCache& view) {\n+    Coin coinIn;\n+    if(!view.GetCoin(block.prevoutStake, coinIn)) {\n+        return error(\"%s: Could not fetch prevoutStake from UTXO set\", __func__);\n+    }\n+\n+    CTransactionRef coinstakeTx = block.vtx[1];\n+    if(coinstakeTx->vout.size() < 2) {\n+        return error(\"%s: coinstake transaction does not have the minimum number of outputs\", __func__);\n+    }\n+\n+    const CTxOut& txout = coinstakeTx->vout[1];\n+\n+    if(coinIn.out.scriptPubKey == txout.scriptPubKey) {\n+        return true;\n+    }\n+\n+    // If the input does not exactly match the output, it MUST be on P2PKH spent and P2PK out.\n+    CTxDestination inputAddress;\n+    TxoutType inputTxType=TxoutType::NONSTANDARD;\n+    if(!ExtractDestination(coinIn.out.scriptPubKey, inputAddress, &inputTxType)) {\n+        return error(\"%s: Could not extract address from input\", __func__);\n+    }\n+\n+    if(inputTxType != TxoutType::PUBKEYHASH || inputAddress.type() != typeid(PKHash)) {\n+        return error(\"%s: non-exact match input must be P2PKH\", __func__);\n+    }\n+\n+    CTxDestination outputAddress;\n+    TxoutType outputTxType=TxoutType::NONSTANDARD;\n+    if(!ExtractDestination(txout.scriptPubKey, outputAddress, &outputTxType)) {\n+        return error(\"%s: Could not extract address from output\", __func__);\n+    }\n+\n+    if(outputTxType != TxoutType::PUBKEY || outputAddress.type() != typeid(PKHash)) {\n+        return error(\"%s: non-exact match output must be P2PK\", __func__);\n+    }\n+\n+    if(boost::get<PKHash>(inputAddress) != boost::get<PKHash>(outputAddress)) {\n+        return error(\"%s: input P2PKH pubkey does not match output P2PK pubkey\", __func__);\n+    }\n+\n+    return true;\n+}\n+\n+bool CheckRecoveredPubKeyFromBlockSignature(CBlockIndex* pindexPrev, const CBlockHeader& block, CCoinsViewCache& view) {\n+    Coin coinPrev;\n+    if(!view.GetCoin(block.prevoutStake, coinPrev)){\n+        if(!GetSpentCoinFromMainChain(pindexPrev, block.prevoutStake, &coinPrev)) {\n+            return error(\"CheckRecoveredPubKeyFromBlockSignature(): Could not find %s and it was not at the tip\", block.prevoutStake.hash.GetHex());\n+        }\n+    }\n+\n+    uint256 hash = block.GetHashWithoutSign();\n+    CPubKey pubkey;\n+\n+    if(block.vchBlockSig.empty()) {\n+        return error(\"CheckRecoveredPubKeyFromBlockSignature(): Signature is empty\\n\");\n+    }\n+\n+    for(uint8_t recid = 0; recid <= 3; ++recid) {\n+        for(uint8_t compressed = 0; compressed < 2; ++compressed) {\n+            if(!pubkey.RecoverLaxDER(hash, block.vchBlockSig, recid, compressed)) {\n+                continue;\n+            }\n+\n+            CTxDestination address;\n+            TxoutType txType=TxoutType::NONSTANDARD;\n+            if(ExtractDestination(coinPrev.out.scriptPubKey, address, &txType, true)){\n+                if ((txType == TxoutType::PUBKEY || txType == TxoutType::PUBKEYHASH || txType == TxoutType::COLDSTAKE) && address.type() == typeid(PKHash)) {\n+                    if(PKHash(pubkey.GetID()) == boost::get<PKHash>(address)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool CheckKernel(CBlockIndex* pindexPrev, unsigned int nBits, uint32_t nTimeBlock, const COutPoint& prevout, CCoinsViewCache& view)\n+{\n+    std::map<COutPoint, CStakeCache> tmp;\n+    return CheckKernel(pindexPrev, nBits, nTimeBlock, prevout, view, tmp);\n+}\n+\n+bool CheckKernel(CBlockIndex* pindexPrev, unsigned int nBits, uint32_t nTimeBlock, const COutPoint& prevout, CCoinsViewCache& view, const std::map<COutPoint, CStakeCache>& cache)\n+{\n+    uint256 hashProofOfStake, targetProofOfStake;\n+    auto it=cache.find(prevout);\n+    if(it == cache.end()) {\n+        //not found in cache (shouldn't happen during staking, only during verification which does not use cache)\n+        Coin coinPrev;\n+        if(!view.GetCoin(prevout, coinPrev)){\n+            if(!GetSpentCoinFromMainChain(pindexPrev, prevout, &coinPrev)) {\n+                return error(\"CheckKernel(): Could not find coin and it was not at the tip\");\n+            }\n+        }\n+\n+        if(pindexPrev->nHeight + 1 - coinPrev.nHeight < COINBASE_MATURITY){\n+            return error(\"CheckKernel(): Coin not matured\");\n+        }\n+        CBlockIndex* blockFrom = pindexPrev->GetAncestor(coinPrev.nHeight);\n+        if(!blockFrom) {\n+            return error(\"CheckKernel(): Could not find block\");\n+        }\n+        if(coinPrev.IsSpent()){\n+            return error(\"CheckKernel(): Coin is spent\");\n+        }\n+\n+        return CheckStakeKernelHash(pindexPrev, nBits, blockFrom->nTime, coinPrev.out.nValue, prevout,\n+                                    nTimeBlock, hashProofOfStake, targetProofOfStake);\n+    }else{\n+        //found in cache\n+        const CStakeCache& stake = it->second;\n+        if(CheckStakeKernelHash(pindexPrev, nBits, stake.blockFromTime, stake.amount, prevout,\n+                                    nTimeBlock, hashProofOfStake, targetProofOfStake)){\n+            //Cache could potentially cause false positive stakes in the event of deep reorgs, so check without cache also\n+            return CheckKernel(pindexPrev, nBits, nTimeBlock, prevout, view);\n+        }\n+    }\n+    return false;\n+}\n+\n+void CacheKernel(std::map<COutPoint, CStakeCache>& cache, const COutPoint& prevout, CBlockIndex* pindexPrev, CCoinsViewCache& view){\n+    if(cache.find(prevout) != cache.end()){\n+        //already in cache\n+        return;\n+    }\n+\n+    Coin coinPrev;\n+    if(!view.GetCoin(prevout, coinPrev)){\n+        return;\n+    }\n+\n+    if(pindexPrev->nHeight + 1 - coinPrev.nHeight < COINBASE_MATURITY){\n+        return;\n+    }\n+    CBlockIndex* blockFrom = pindexPrev->GetAncestor(coinPrev.nHeight);\n+    if(!blockFrom) {\n+        return;\n+    }\n+\n+    CStakeCache c(blockFrom->nTime, coinPrev.out.nValue);\n+    cache.insert({prevout, c});\n+}\n+\n+/**\n+ * Proof-of-stake functions needed in the wallet but wallet independent\n+ */\n+struct ScriptsElement{\n+    CScript script;\n+    uint256 hash;\n+};\n+\n+/**\n+ * Cache of the recent mpos scripts for the block reward recipients\n+ * The max size of the map is 2 * nCacheScripts - nMPoSRewardRecipients, so in this case it is 20\n+ */\n+std::map<int, ScriptsElement> scriptsMap;\n+\n+unsigned int GetStakeMaxCombineInputs() { return 40; }\n+\n+int64_t GetStakeCombineThreshold() { return 50 * COIN; }\n+\n+unsigned int GetStakeSplitOutputs() { return 2; }\n+\n+int64_t GetStakeSplitThreshold() { return 500 * COIN; }\n+\n+bool NeedToEraseScriptFromCache(int nBlockHeight, int nCacheScripts, int nScriptHeight, const ScriptsElement& scriptElement)\n+{\n+    // Erase element from cache if not in range [nBlockHeight - nCacheScripts, nBlockHeight + nCacheScripts]\n+    if(nScriptHeight < (nBlockHeight - nCacheScripts) ||\n+            nScriptHeight > (nBlockHeight + nCacheScripts))\n+        return true;\n+\n+    // Erase element from cache if hash different\n+    CBlockIndex* pblockindex = ::ChainActive()[nScriptHeight];\n+    if(pblockindex && pblockindex->GetBlockHash() != scriptElement.hash)\n+        return true;\n+\n+    return false;\n+}\n+\n+void CleanScriptCache(int nHeight, const Consensus::Params& consensusParams)\n+{\n+    int nCacheScripts = consensusParams.nMPoSRewardRecipients * 1.5;\n+\n+    // Remove the scripts from cache that are not used\n+    for (std::map<int, ScriptsElement>::iterator it=scriptsMap.begin(); it!=scriptsMap.end();){\n+        if(NeedToEraseScriptFromCache(nHeight, nCacheScripts, it->first, it->second))\n+        {\n+            it = scriptsMap.erase(it);\n+        }\n+        else{\n+            it++;\n+        }\n+    }\n+}\n+\n+bool ReadFromScriptCache(CScript &script, CBlockIndex* pblockindex, int nHeight, const Consensus::Params& consensusParams)\n+{\n+    CleanScriptCache(nHeight, consensusParams);\n+\n+    // Find the script in the cache\n+    std::map<int, ScriptsElement>::iterator it = scriptsMap.find(nHeight);\n+    if(it != scriptsMap.end())\n+    {\n+        if(it->second.hash == pblockindex->GetBlockHash())\n+        {\n+            script = it->second.script;\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+void AddToScriptCache(CScript script, CBlockIndex* pblockindex, int nHeight, const Consensus::Params& consensusParams)\n+{\n+    CleanScriptCache(nHeight, consensusParams);\n+\n+    // Add the script into the cache\n+    ScriptsElement listElement;\n+    listElement.script = script;\n+    listElement.hash = pblockindex->GetBlockHash();\n+    scriptsMap.insert(std::pair<int, ScriptsElement>(nHeight, listElement));\n+}\n+\n+bool AddMPoSScript(std::vector<CScript> &mposScriptList, int nHeight, const Consensus::Params& consensusParams)\n+{\n+    // Check if the block index exist into the active chain\n+    CBlockIndex* pblockindex = ::ChainActive()[nHeight];\n+    if(!pblockindex)\n+    {\n+        LogPrint(BCLog::COINSTAKE, \"Block index not found\\n\");\n+        return false;\n+    }\n+\n+    // Try find the script from the cache\n+    CScript script;\n+    if(ReadFromScriptCache(script, pblockindex, nHeight, consensusParams))\n+    {\n+        mposScriptList.push_back(script);\n+        return true;\n+    }\n+\n+    // Read the block\n+    uint160 stakeAddress;\n+    if(!pblocktree->ReadStakeIndex(nHeight, stakeAddress)){\n+        return false;\n+    }\n+\n+    // The block reward for PoS is in the second transaction (coinstake) and the second or third output\n+    if(pblockindex->IsProofOfStake())\n+    {\n+        if(stakeAddress == uint160())\n+        {\n+            LogPrint(BCLog::COINSTAKE, \"Fail to solve script for mpos reward recipient\\n\");\n+            //This should never fail, but in case it somehow did we don't want it to bring the network to a halt\n+            //So, use an OP_RETURN script to burn the coins for the unknown staker\n+            script = CScript() << OP_RETURN;\n+        }else{\n+            // Make public key hash script\n+            script = CScript() << OP_DUP << OP_HASH160 << ToByteVector(stakeAddress) << OP_EQUALVERIFY << OP_CHECKSIG;\n+        }\n+\n+        // Add the script into the list\n+        mposScriptList.push_back(script);\n+\n+        // Update script cache\n+        AddToScriptCache(script, pblockindex, nHeight, consensusParams);\n+    }\n+    else\n+    {\n+        if(Params().MineBlocksOnDemand()){\n+            //this could happen in regtest. Just ignore and add an empty script\n+            script = CScript() << OP_RETURN;\n+            mposScriptList.push_back(script);\n+            return true;\n+\n+        }\n+        LogPrint(BCLog::COINSTAKE, \"The block is not proof-of-stake\\n\");\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+bool GetMPoSOutputScripts(std::vector<CScript>& mposScriptList, int nHeight, const Consensus::Params& consensusParams)\n+{\n+    bool ret = true;\n+    nHeight -= COINBASE_MATURITY;\n+\n+    // Populate the list of scripts for the reward recipients\n+    for(int i = 0; (i < consensusParams.nMPoSRewardRecipients - 1) && ret; i++)\n+    {\n+        ret &= AddMPoSScript(mposScriptList, nHeight - i, consensusParams);\n+    }\n+\n+    return ret;\n+}\n+\n+bool CreateMPoSOutputs(CMutableTransaction& txNew, int64_t nRewardPiece, int nHeight, const Consensus::Params& consensusParams)\n+{\n+    std::vector<CScript> mposScriptList;\n+    if(!GetMPoSOutputScripts(mposScriptList, nHeight, consensusParams))\n+    {\n+        LogPrint(BCLog::COINSTAKE, \"Fail to get the list of recipients\\n\");\n+        return false;\n+    }\n+\n+    // Split the block reward with the recipients\n+    for(unsigned int i = 0; i < mposScriptList.size(); i++)\n+    {\n+        CTxOut txOut(CTxOut(0, mposScriptList[i]));\n+        txOut.nValue = nRewardPiece;\n+        txNew.vout.push_back(txOut);\n+    }\n+\n+    return true;\n+}"
      },
      {
        "sha": "104d098a49a91dcb95f2ed5cc71b41d708d811e8",
        "filename": "src/pos.h",
        "status": "added",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pos.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pos.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pos.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POS_H\n+#define BITCOIN_POS_H\n+\n+#include <chain.h>\n+#include <primitives/transaction.h>\n+#include <consensus/validation.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <arith_uint256.h>\n+#include <hash.h>\n+#include <timedata.h>\n+#include <chainparams.h>\n+#include <script/sign.h>\n+#include <consensus/consensus.h>\n+\n+class CBlockHeader;\n+class CBlockIndex;\n+class uint256;\n+\n+// To decrease granularity of timestamp\n+// Supposed to be 2^n-1\n+static const uint32_t STAKE_TIMESTAMP_MASK = 15;\n+\n+struct CStakeCache{\n+    CStakeCache(uint32_t blockFromTime_, CAmount amount_) : blockFromTime(blockFromTime_), amount(amount_){\n+    }\n+    uint32_t blockFromTime;\n+    CAmount amount;\n+};\n+\n+void CacheKernel(std::map<COutPoint, CStakeCache>& cache, const COutPoint& prevout, CBlockIndex* pindexPrev, CCoinsViewCache& view);\n+\n+// Compute the hash modifier for proof-of-stake\n+uint256 ComputeStakeModifier(const CBlockIndex* pindexPrev, const uint256& kernel);\n+\n+// Check whether stake kernel meets hash target\n+// Sets hashProofOfStake on success return\n+bool CheckStakeKernelHash(CBlockIndex* pindexPrev, unsigned int nBits, uint32_t blockFromTime, CAmount prevoutAmount, const COutPoint& prevout, unsigned int nTimeTx, uint256& hashProofOfStake, uint256& targetProofOfStake, bool fPrintProofOfStake = false);\n+\n+// Check kernel hash target and coinstake signature\n+// Sets hashProofOfStake on success return\n+bool CheckProofOfStake(CBlockIndex* pindexPrev, BlockValidationState& state, const CTransaction& tx, unsigned int nBits, uint32_t nTimeBlock, uint256& hashProofOfStake, uint256& targetProofOfStake, CCoinsViewCache& view);\n+\n+// Check whether the coinstake timestamp meets protocol\n+bool CheckCoinStakeTimestamp(uint32_t nTimeBlock);\n+\n+// Should be called in ConnectBlock to make sure that the input pubkey == output pubkey\n+// Since it is only used in ConnectBlock, we know that we have access to the full contextual utxo set\n+bool CheckBlockInputPubKeyMatchesOutputPubKey(const CBlock& block, CCoinsViewCache& view);\n+\n+// Recover the pubkey and check that it matches the prevoutStake's scriptPubKey.\n+bool CheckRecoveredPubKeyFromBlockSignature(CBlockIndex* pindexPrev, const CBlockHeader& block, CCoinsViewCache& view);\n+\n+// Wrapper around CheckStakeKernelHash()\n+// Also checks existence of kernel input and min age\n+// Convenient for searching a kernel\n+bool CheckKernel(CBlockIndex* pindexPrev, unsigned int nBits, uint32_t nTimeBlock, const COutPoint& prevout, CCoinsViewCache& view);\n+bool CheckKernel(CBlockIndex* pindexPrev, unsigned int nBits, uint32_t nTimeBlock, const COutPoint& prevout, CCoinsViewCache& view, const std::map<COutPoint, CStakeCache>& cache);\n+\n+unsigned int GetStakeMaxCombineInputs();\n+\n+int64_t GetStakeCombineThreshold();\n+\n+unsigned int GetStakeSplitOutputs();\n+\n+int64_t GetStakeSplitThreshold();\n+\n+bool GetMPoSOutputScripts(std::vector<CScript> &mposScroptList, int nHeight, const Consensus::Params& consensusParams);\n+\n+bool CreateMPoSOutputs(CMutableTransaction& txNew, int64_t nRewardPiece, int nHeight, const Consensus::Params& consensusParams);\n+\n+#endif // BITCOIN_POS_H"
      },
      {
        "sha": "170b3acc05415e3c46a1e0393ccbb4e615b1dd84",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 94,
        "deletions": 43,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -10,68 +10,119 @@\n #include <primitives/block.h>\n #include <uint256.h>\n \n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n-{\n-    assert(pindexLast != nullptr);\n-    unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n-\n-    // Only change once per difficulty adjustment interval\n-    if ((pindexLast->nHeight+1) % params.DifficultyAdjustmentInterval() != 0)\n+namespace {\n+    // returns a * exp(p/q) where |p/q| is small\n+    arith_uint256 mul_exp(arith_uint256 a, int64_t p, int64_t q)\n     {\n-        if (params.fPowAllowMinDifficultyBlocks)\n-        {\n-            // Special difficulty rule for testnet:\n-            // If the new block's timestamp is more than 2* 10 minutes\n-            // then allow mining of a min-difficulty block.\n-            if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + params.nPowTargetSpacing*2)\n-                return nProofOfWorkLimit;\n-            else\n-            {\n-                // Return the last non-special-min-difficulty-rules-block\n-                const CBlockIndex* pindex = pindexLast;\n-                while (pindex->pprev && pindex->nHeight % params.DifficultyAdjustmentInterval() != 0 && pindex->nBits == nProofOfWorkLimit)\n-                    pindex = pindex->pprev;\n-                return pindex->nBits;\n+        bool isNegative = p < 0;\n+        uint64_t abs_p = p >= 0 ? p : -p;\n+        arith_uint256 result = a;\n+        uint64_t n = 0;\n+        while (a > 0) {\n+            ++n;\n+            a = a * abs_p / q / n;\n+            if (isNegative && (n % 2 == 1)) {\n+                result -= a;\n+            } else {\n+                result += a;\n             }\n         }\n-        return pindexLast->nBits;\n+        return result;\n     }\n+}\n \n-    // Go back by what we want to be 14 days worth of blocks\n-    int nHeightFirst = pindexLast->nHeight - (params.DifficultyAdjustmentInterval()-1);\n-    assert(nHeightFirst >= 0);\n-    const CBlockIndex* pindexFirst = pindexLast->GetAncestor(nHeightFirst);\n-    assert(pindexFirst);\n+// ppcoin: find last block index up to pindex\n+const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfStake)\n+{\n+    //CBlockIndex will be updated with information about the proof type later\n+    while (pindex && pindex->pprev && (pindex->IsProofOfStake() != fProofOfStake))\n+        pindex = pindex->pprev;\n+    return pindex;\n+}\n \n-    return CalculateNextWorkRequired(pindexLast, pindexFirst->GetBlockTime(), params);\n+inline arith_uint256 GetLimit(int nHeight, const Consensus::Params& params, bool fProofOfStake)\n+{\n+    if (fProofOfStake) {\n+        return UintToArith256(params.posLimit);\n+    } else {\n+        return UintToArith256(params.powLimit);\n+    }\n }\n \n-unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params)\n+unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params, bool fProofOfStake)\n {\n-    if (params.fPowNoRetargeting)\n-        return pindexLast->nBits;\n+    unsigned int nTargetLimit = GetLimit(pindexLast ? pindexLast->nHeight+1 : 0, params, fProofOfStake).GetCompact();\n \n-    // Limit adjustment step\n-    int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n-    if (nActualTimespan < params.nPowTargetTimespan/4)\n-        nActualTimespan = params.nPowTargetTimespan/4;\n-    if (nActualTimespan > params.nPowTargetTimespan*4)\n-        nActualTimespan = params.nPowTargetTimespan*4;\n+    // genesis block\n+    if (pindexLast == NULL)\n+        return nTargetLimit;\n+\n+    // first block\n+    const CBlockIndex* pindexPrev = GetLastBlockIndex(pindexLast, fProofOfStake);\n+    if (pindexPrev->pprev == NULL)\n+        return nTargetLimit;\n \n+    // second block\n+    const CBlockIndex* pindexPrevPrev = GetLastBlockIndex(pindexPrev->pprev, fProofOfStake);\n+    if (pindexPrevPrev->pprev == NULL)\n+        return nTargetLimit;\n+\n+    if (params.fPowAllowMinDifficultyBlocks)\n+    {\n+        // Special difficulty rule for testnet:\n+        // If the new block's timestamp is more than 2* 10 minutes\n+        // then allow mining of a min-difficulty block.\n+        if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + params.nPowTargetSpacing*2) {                \n+            return nTargetLimit;\n+        } else {\n+            // Return the last non-special-min-difficulty-rules-block\n+            const CBlockIndex* pindex = pindexLast;\n+            while (pindex->pprev && pindex->nHeight % params.DifficultyAdjustmentInterval(pindex->nHeight) != 0 && pindex->nBits == nTargetLimit)\n+                pindex = pindex->pprev;\n+            return pindex->nBits;\n+        }\n+    }\n+\n+    return CalculateNextWorkRequired(pindexPrev, pindexPrevPrev->GetBlockTime(), params, fProofOfStake);\n+}\n+\n+unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params, bool fProofOfStake)\n+{\n+    if (fProofOfStake) {\n+        if (params.fPoSNoRetargeting)\n+            return pindexLast->nBits;\n+    } else {\n+        if (params.fPowNoRetargeting)\n+            return pindexLast->nBits;\n+    }\n+\n+    // Limit adjustment step\n+    int64_t nTargetSpacing;\n+    if (pindexLast && pindexLast->nHeight < params.BTCRewardMatchHeight)\n+        nTargetSpacing = STAKE_V1_TARGET_SPACING;\n+    else\n+        nTargetSpacing = params.nPowTargetSpacing;\n+    int64_t nActualSpacing = pindexLast->GetBlockTime() - nFirstBlockTime;\n+    int64_t nInterval = params.DifficultyAdjustmentInterval(pindexLast->nHeight + 1);\n+    \n     // Retarget\n-    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n+    const arith_uint256 bnTargetLimit = GetLimit(pindexLast->nHeight + 1, params, fProofOfStake);\n     arith_uint256 bnNew;\n     bnNew.SetCompact(pindexLast->nBits);\n-    bnNew *= nActualTimespan;\n-    bnNew /= params.nPowTargetTimespan;\n \n-    if (bnNew > bnPowLimit)\n-        bnNew = bnPowLimit;\n+    if (nActualSpacing < 0)\n+        nActualSpacing = nTargetSpacing;\n+    if (nActualSpacing > nTargetSpacing * 20)\n+        nActualSpacing = nTargetSpacing * 20;\n+    bnNew = mul_exp(bnNew, 2 * (nActualSpacing - nTargetSpacing) / 16, (nInterval + 1) * nTargetSpacing / 16);\n+\n+    if (bnNew <= 0 || bnNew > bnTargetLimit)\n+        bnNew = bnTargetLimit;\n \n     return bnNew.GetCompact();\n }\n \n-bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params& params)\n+bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params& params, bool fProofOfStake)\n {\n     bool fNegative;\n     bool fOverflow;"
      },
      {
        "sha": "42b53f24b28fabb93499a2400b41694fd8f134ac",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -14,10 +14,14 @@ class CBlockHeader;\n class CBlockIndex;\n class uint256;\n \n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params&);\n-unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params&);\n+// The target spacing used up to the synchronization block\n+static const int64_t STAKE_V1_TARGET_SPACING = 15;\n+\n+const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfStake);\n+unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params&, bool fProofOfStake = false);\n+unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params&, bool fProofOfStake = false);\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n-bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&);\n+bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&, bool fProofOfStake = false);\n \n #endif // BITCOIN_POW_H"
      },
      {
        "sha": "04dff7a6fb525df20b730dd6ffbcc43b27d12629",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -7,21 +7,30 @@\n \n #include <hash.h>\n #include <tinyformat.h>\n+#include <util/strencodings.h>\n \n uint256 CBlockHeader::GetHash() const\n {\n     return SerializeHash(*this);\n }\n \n+uint256 CBlockHeader::GetHashWithoutSign() const\n+{\n+    return SerializeHash(*(CBlockHeaderBase*)this, SER_GETHASH);\n+}\n+\n std::string CBlock::ToString() const\n {\n     std::stringstream s;\n-    s << strprintf(\"CBlock(hash=%s, ver=0x%08x, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%u)\\n\",\n+    s << strprintf(\"CBlock(hash=%s, ver=0x%08x, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, proof=%s, prevoutStake=%s, blockSig=%s, vtx=%u)\\n\",\n         GetHash().ToString(),\n         nVersion,\n         hashPrevBlock.ToString(),\n         hashMerkleRoot.ToString(),\n         nTime, nBits, nNonce,\n+        IsProofOfStake() ? \"PoS\" : \"PoW\",\n+        prevoutStake.ToString(),\n+        HexStr(vchBlockSig),\n         vtx.size());\n     for (const auto& tx : vtx) {\n         s << \"  \" << tx->ToString() << \"\\n\";"
      },
      {
        "sha": "8ca05beddf0384042a6f69a046b9286afeeda7a3",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 65,
        "deletions": 3,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -17,23 +17,37 @@\n  * in the block is a special one that creates a new coin owned by the creator\n  * of the block.\n  */\n-class CBlockHeader\n+\n+// Base class for block header, used to serialize the header without signature\n+// Workaround due to removing serialization templates in Bitcoin Core 0.18\n+class CBlockHeaderBase\n {\n public:\n-    // header\n+    // header without signature\n     int32_t nVersion;\n     uint256 hashPrevBlock;\n     uint256 hashMerkleRoot;\n     uint32_t nTime;\n     uint32_t nBits;\n     uint32_t nNonce;\n+    // proof-of-stake specific fields\n+    COutPoint prevoutStake;\n+\n+    SERIALIZE_METHODS(CBlockHeaderBase, obj) { READWRITE(obj.nVersion, obj.hashPrevBlock, obj.hashMerkleRoot, obj.nTime, obj.nBits, obj.nNonce, obj.prevoutStake); }\n+};\n+\n+class CBlockHeader : public CBlockHeaderBase\n+{\n+public:\n+    // header\n+    std::vector<unsigned char> vchBlockSig;\n \n     CBlockHeader()\n     {\n         SetNull();\n     }\n \n-    SERIALIZE_METHODS(CBlockHeader, obj) { READWRITE(obj.nVersion, obj.hashPrevBlock, obj.hashMerkleRoot, obj.nTime, obj.nBits, obj.nNonce); }\n+    SERIALIZE_METHODS(CBlockHeader, obj) { READWRITE(obj.nVersion, obj.hashPrevBlock, obj.hashMerkleRoot, obj.nTime, obj.nBits, obj.nNonce, obj.prevoutStake, obj.vchBlockSig); }\n \n     void SetNull()\n     {\n@@ -43,6 +57,8 @@ class CBlockHeader\n         nTime = 0;\n         nBits = 0;\n         nNonce = 0;\n+        vchBlockSig.clear();\n+        prevoutStake.SetNull();\n     }\n \n     bool IsNull() const\n@@ -52,10 +68,49 @@ class CBlockHeader\n \n     uint256 GetHash() const;\n \n+    uint256 GetHashWithoutSign() const;\n+\n     int64_t GetBlockTime() const\n     {\n         return (int64_t)nTime;\n     }\n+\n+    // ppcoin: two types of block: proof-of-work or proof-of-stake\n+    virtual bool IsProofOfStake() const\n+    {\n+        return !prevoutStake.IsNull();\n+    }\n+\n+    virtual bool IsProofOfWork() const\n+    {\n+        return !IsProofOfStake();\n+    }\n+    \n+    virtual uint32_t StakeTime() const\n+    {\n+        uint32_t ret = 0;\n+        if(IsProofOfStake())\n+        {\n+            ret = nTime;\n+        }\n+        return ret;\n+    }\n+\n+    CBlockHeader& operator=(const CBlockHeader& other)\n+    {\n+        if (this != &other)\n+        {\n+            this->nVersion       = other.nVersion;\n+            this->hashPrevBlock  = other.hashPrevBlock;\n+            this->hashMerkleRoot = other.hashMerkleRoot;\n+            this->nTime          = other.nTime;\n+            this->nBits          = other.nBits;\n+            this->nNonce         = other.nNonce;\n+            this->vchBlockSig    = other.vchBlockSig;\n+            this->prevoutStake   = other.prevoutStake;\n+        }\n+        return *this;\n+    }\n };\n \n \n@@ -101,9 +156,16 @@ class CBlock : public CBlockHeader\n         block.nTime          = nTime;\n         block.nBits          = nBits;\n         block.nNonce         = nNonce;\n+        block.prevoutStake   = prevoutStake;\n+        block.vchBlockSig    = vchBlockSig;\n         return block;\n     }\n \n+    std::pair<COutPoint, unsigned int> GetProofOfStake() const\n+    {\n+        return IsProofOfStake() ? std::make_pair(prevoutStake, nTime) : std::make_pair(COutPoint(), (unsigned int)0);\n+    }\n+\n     std::string ToString() const;\n };\n "
      },
      {
        "sha": "6719bb943dacd6d70d0ea2383030363adbaae8df",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -64,6 +64,30 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n+bool CMutableTransaction::CheckColdStake(const CScript& script) const\n+{\n+    // tx is a coinstake tx\n+    if (!IsCoinStake())\n+        return false;\n+\n+    // all inputs have the same scriptSig\n+    CScript firstScript = vin[0].scriptSig;\n+    if (vin.size() > 1) {\n+        for (unsigned int i=1; i<vin.size(); i++)\n+            if (vin[i].scriptSig != firstScript) return false;\n+    }\n+\n+    // all outputs except first (coinstake marker) and last (staker payout)\n+    // have the same pubKeyScript and it matches the script we are spending\n+    if (vout[1].scriptPubKey != script) return false;\n+    if (vin.size() > 3) {\n+        for (unsigned int i=2; i<vout.size()-1; i++)\n+            if (vout[i].scriptPubKey != script) return false;\n+    }\n+\n+    return true;\n+}\n+\n uint256 CTransaction::ComputeHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n@@ -99,6 +123,39 @@ unsigned int CTransaction::GetTotalSize() const\n     return ::GetSerializeSize(*this, PROTOCOL_VERSION);\n }\n \n+bool CTransaction::CheckColdStake(const CScript& script) const\n+{\n+    // tx is a coinstake tx\n+    if (!IsCoinStake())\n+        return false;\n+\n+    // all inputs have the same scriptSig\n+    CScript firstScript = vin[0].scriptSig;\n+    if (vin.size() > 1) {\n+        for (unsigned int i=1; i<vin.size(); i++)\n+            if (vin[i].scriptSig != firstScript) return false;\n+    }\n+\n+    // all outputs except first (coinstake marker) and last (staker payout)\n+    // have the same pubKeyScript and it matches the script we are spending\n+    if (vout[1].scriptPubKey != script) return false;\n+    if (vin.size() > 3) {\n+        for (unsigned int i=2; i<vout.size()-1; i++)\n+            if (vout[i].scriptPubKey != script) return false;\n+    }\n+\n+    return true;\n+}\n+\n+bool CTransaction::HasP2CSOutputs() const\n+{\n+    for(const CTxOut& txout : vout) {\n+        if (txout.scriptPubKey.IsPayToColdStaking())\n+            return true;\n+    }\n+    return false;\n+}\n+\n std::string CTransaction::ToString() const\n {\n     std::string str;"
      },
      {
        "sha": "c3260d081e1d99c6a4419e72c7dac41255a9c9fc",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 29,
        "deletions": 1,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -151,6 +151,17 @@ class CTxOut\n         return (nValue == -1);\n     }\n \n+    void SetEmpty()\n+    {\n+        nValue = 0;\n+        scriptPubKey.clear();\n+    }\n+\n+    bool IsEmpty() const\n+    {\n+        return (nValue == 0 && scriptPubKey.empty());\n+    }\n+\n     friend bool operator==(const CTxOut& a, const CTxOut& b)\n     {\n         return (a.nValue       == b.nValue &&\n@@ -323,9 +334,18 @@ class CTransaction\n \n     bool IsCoinBase() const\n     {\n-        return (vin.size() == 1 && vin[0].prevout.IsNull());\n+        return (vin.size() == 1 && vin[0].prevout.IsNull() && vout.size() >= 1);\n     }\n \n+    bool IsCoinStake() const\n+    {\n+        // ppcoin: the coin stake transaction is marked with the first output empty\n+        return (vin.size() > 0 && (!vin[0].prevout.IsNull()) && vout.size() >= 2 && vout[0].IsEmpty());\n+    }\n+\n+    bool CheckColdStake(const CScript& script) const;\n+    bool HasP2CSOutputs() const;\n+\n     friend bool operator==(const CTransaction& a, const CTransaction& b)\n     {\n         return a.hash == b.hash;\n@@ -381,6 +401,14 @@ struct CMutableTransaction\n      */\n     uint256 GetHash() const;\n \n+    bool IsCoinStake() const\n+    {\n+        // ppcoin: the coin stake transaction is marked with the first output empty\n+        return (vin.size() > 0 && (!vin[0].prevout.IsNull()) && vout.size() >= 2 && vout[0].IsEmpty());\n+    }\n+\n+    bool CheckColdStake(const CScript& script) const;\n+\n     bool HasWitness() const\n     {\n         for (size_t i = 0; i < vin.size(); i++) {"
      },
      {
        "sha": "050c03a75241ecb21c840e7f593ed7d30f21548a",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -218,7 +218,7 @@ void UpdatePSBTOutput(const SigningProvider& provider, PartiallySignedTransactio\n     // Note that ProduceSignature is used to fill in metadata (not actual signatures),\n     // so provider does not need to provide any private keys (it can be a HidingSigningProvider).\n     MutableTransactionSignatureCreator creator(psbt.tx.get_ptr(), /* index */ 0, out.nValue, SIGHASH_ALL);\n-    ProduceSignature(provider, creator, out.scriptPubKey, sigdata);\n+    ProduceSignature(provider, creator, out.scriptPubKey, sigdata, false);\n \n     // Put redeem_script, witness_script, key paths, into PSBTOutput.\n     psbt_out.FromSignatureData(sigdata);\n@@ -265,10 +265,10 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     sigdata.witness = false;\n     bool sig_complete;\n     if (use_dummy) {\n-        sig_complete = ProduceSignature(provider, DUMMY_SIGNATURE_CREATOR, utxo.scriptPubKey, sigdata);\n+        sig_complete = ProduceSignature(provider, DUMMY_SIGNATURE_CREATOR, utxo.scriptPubKey, sigdata, false);\n     } else {\n         MutableTransactionSignatureCreator creator(&tx, index, utxo.nValue, sighash);\n-        sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, sigdata);\n+        sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, sigdata, false);\n     }\n     // Verify that a witness signature was produced in case one was required.\n     if (require_witness_sig && !sigdata.witness) return false;"
      },
      {
        "sha": "42558b2938221e0b674312e892a9f42a6aa5c5c8",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -206,6 +206,22 @@ bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchS\n     return secp256k1_ecdsa_verify(secp256k1_context_verify, &sig, hash.begin(), &pubkey);\n }\n \n+bool CPubKey::RecoverLaxDER(const uint256 &hash, const std::vector<unsigned char>& vchSig, uint8_t recid, bool fComp) {\n+    secp256k1_ecdsa_signature sig;\n+    if (!ecdsa_signature_parse_der_lax(secp256k1_context_verify, &sig, vchSig.data(), vchSig.size())) {\n+        return false;\n+    }\n+\n+    std::vector<unsigned char> strictVchSig(65);\n+    strictVchSig[0] = recid | (fComp ? 4 : 0);\n+    strictVchSig[0] += 27;\n+    if(!secp256k1_ecdsa_signature_serialize_compact(secp256k1_context_verify, strictVchSig.data()+1, &sig)) {\n+        return false;\n+    }\n+\n+    return RecoverCompact(hash, strictVchSig);\n+}\n+\n bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) {\n     if (vchSig.size() != COMPACT_SIGNATURE_SIZE)\n         return false;"
      },
      {
        "sha": "bdcc3326a57dfb9c654583017e2b8752ae8a579e",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -112,6 +112,10 @@ class CPubKey\n     const unsigned char* begin() const { return vch; }\n     const unsigned char* end() const { return vch + size(); }\n     const unsigned char& operator[](unsigned int pos) const { return vch[pos]; }\n+    std::vector<unsigned char> getvch() const\n+    {\n+        return std::vector<unsigned char>(begin(), end());\n+    }\n \n     //! Comparator implementation.\n     friend bool operator==(const CPubKey& a, const CPubKey& b)\n@@ -197,6 +201,9 @@ class CPubKey\n      */\n     static bool CheckLowS(const std::vector<unsigned char>& vchSig);\n \n+    //! Recover public key from a lax DER signature\n+    bool RecoverLaxDER(const uint256 &hash, const std::vector<unsigned char>& vchSig, uint8_t recid, bool fComp);\n+\n     //! Recover a public key from a compact signature.\n     bool RecoverCompact(const uint256& hash, const std::vector<unsigned char>& vchSig);\n "
      },
      {
        "sha": "17f89161a19445b08e363e451faa563c4cb3b303",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 10,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -22,12 +22,12 @@\n \n class AddressBookSortFilterProxyModel final : public QSortFilterProxyModel\n {\n-    const QString m_type;\n+    const QStringList m_types;\n \n public:\n-    AddressBookSortFilterProxyModel(const QString& type, QObject* parent)\n+    AddressBookSortFilterProxyModel(const QStringList& types, QObject* parent)\n         : QSortFilterProxyModel(parent)\n-        , m_type(type)\n+        , m_types(types)\n     {\n         setDynamicSortFilter(true);\n         setFilterCaseSensitivity(Qt::CaseInsensitive);\n@@ -40,7 +40,8 @@ class AddressBookSortFilterProxyModel final : public QSortFilterProxyModel\n         auto model = sourceModel();\n         auto label = model->index(row, AddressTableModel::Label, parent);\n \n-        if (model->data(label, AddressTableModel::TypeRole).toString() != m_type) {\n+        auto type = model->data(label, AddressTableModel::TypeRole).toString();\n+        if (!m_types.contains(type)) {\n             return false;\n         }\n \n@@ -151,8 +152,18 @@ void AddressBookPage::setModel(AddressTableModel *_model)\n     if(!_model)\n         return;\n \n-    auto type = tab == ReceivingTab ? AddressTableModel::Receive : AddressTableModel::Send;\n-    proxyModel = new AddressBookSortFilterProxyModel(type, this);\n+    QStringList types;\n+    switch(tab)\n+    {\n+    case ReceivingTab:\n+        types = QStringList({AddressTableModel::Receive});\n+        break;\n+    case SendingTab:\n+        types = QStringList({AddressTableModel::Send});\n+        break;\n+    }\n+\n+    proxyModel = new AddressBookSortFilterProxyModel(types, this);\n     proxyModel->setSourceModel(_model);\n \n     connect(ui->searchLineEdit, &QLineEdit::textChanged, proxyModel, &QSortFilterProxyModel::setFilterWildcard);\n@@ -194,10 +205,19 @@ void AddressBookPage::onEditAction()\n     if(indexes.isEmpty())\n         return;\n \n-    EditAddressDialog dlg(\n-        tab == SendingTab ?\n-        EditAddressDialog::EditSendingAddress :\n-        EditAddressDialog::EditReceivingAddress, this);\n+    EditAddressDialog::Mode editAddressMode;\n+    switch(tab)\n+    {\n+    case SendingTab:\n+        editAddressMode = EditAddressDialog::EditSendingAddress;\n+        break;\n+    case ReceivingTab:\n+    default:\n+        editAddressMode = EditAddressDialog::EditReceivingAddress;\n+        break;\n+    }\n+\n+    EditAddressDialog dlg(editAddressMode, this);\n     dlg.setModel(model);\n     QModelIndex origIndex = proxyModel->mapToSource(indexes.at(0));\n     dlg.loadRow(origIndex.row());"
      },
      {
        "sha": "0929be196382200b9993f2fc4da646d7a962ee87",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 6,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -7,6 +7,7 @@\n #include <qt/guiutil.h>\n #include <qt/walletmodel.h>\n \n+#include <addressbook.h>\n #include <key_io.h>\n #include <wallet/wallet.h>\n \n@@ -57,15 +58,29 @@ static AddressTableEntry::Type translateTransactionType(const QString &strPurpos\n {\n     AddressTableEntry::Type addressType = AddressTableEntry::Hidden;\n     // \"refund\" addresses aren't shown, and change addresses aren't returned by getAddresses at all.\n-    if (strPurpose == \"send\")\n+    if (strPurpose == QString::fromStdString(AddressBook::AddressBookPurpose::SEND))\n         addressType = AddressTableEntry::Sending;\n-    else if (strPurpose == \"receive\")\n+    else if (strPurpose == QString::fromStdString(AddressBook::AddressBookPurpose::RECEIVE))\n         addressType = AddressTableEntry::Receiving;\n-    else if (strPurpose == \"unknown\" || strPurpose == \"\") // if purpose not set, guess\n+    else if (strPurpose == QString::fromStdString(AddressBook::AddressBookPurpose::UNKNOWN) || strPurpose == \"\") // if purpose not set, guess\n         addressType = (isMine ? AddressTableEntry::Receiving : AddressTableEntry::Sending);\n     return addressType;\n }\n \n+static QString translateTypeToString(AddressTableEntry::Type type)\n+{\n+    switch (type) {\n+        case AddressTableEntry::Sending:\n+            return QObject::tr(\"Contact\");\n+        case AddressTableEntry::Receiving:\n+            return QObject::tr(\"Receiving\");\n+        case AddressTableEntry::Hidden:\n+            return QObject::tr(\"Hidden\");\n+        default:\n+            return QObject::tr(\"Unknown\");\n+    }\n+}\n+\n // Private implementation\n class AddressTablePriv\n {\n@@ -209,6 +224,8 @@ QVariant AddressTableModel::data(const QModelIndex &index, int role) const\n             }\n         case Address:\n             return rec->address;\n+        case Type:\n+            return translateTypeToString(rec->type);\n         }\n     }\n     else if (role == Qt::FontRole)\n@@ -239,7 +256,18 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n     if(!index.isValid())\n         return false;\n     AddressTableEntry *rec = static_cast<AddressTableEntry*>(index.internalPointer());\n-    std::string strPurpose = (rec->type == AddressTableEntry::Sending ? \"send\" : \"receive\");\n+    std::string strPurpose;\n+    switch(rec->type)\n+    {\n+    case AddressTableEntry::Sending:\n+        strPurpose = AddressBook::AddressBookPurpose::SEND;\n+        break;\n+    case AddressTableEntry::Receiving:\n+    default:\n+        strPurpose = AddressBook::AddressBookPurpose::RECEIVE;\n+        break;\n+    }\n+\n     editStatus = OK;\n \n     if(role == Qt::EditRole)\n@@ -312,7 +340,7 @@ Qt::ItemFlags AddressTableModel::flags(const QModelIndex &index) const\n     // Can edit address and label for sending addresses,\n     // and only label for receiving addresses.\n     if(rec->type == AddressTableEntry::Sending ||\n-      (rec->type == AddressTableEntry::Receiving && index.column()==Label))\n+        (rec->type == AddressTableEntry::Receiving && index.column()==Label))\n     {\n         retval |= Qt::ItemIsEditable;\n     }\n@@ -365,7 +393,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n         }\n \n         // Add entry\n-        walletModel->wallet().setAddressBook(DecodeDestination(strAddress), strLabel, \"send\");\n+        walletModel->wallet().setAddressBook(DecodeDestination(strAddress), strLabel, AddressBook::AddressBookPurpose::SEND);\n     }\n     else if(type == Receive)\n     {"
      },
      {
        "sha": "74bccdbf2eac4a56b122ae6919fd175c0bcd519c",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -30,7 +30,8 @@ class AddressTableModel : public QAbstractTableModel\n \n     enum ColumnIndex {\n         Label = 0,   /**< User specified label */\n-        Address = 1  /**< Bitcoin address */\n+        Address = 1,  /**< Bitcoin address */\n+        Type = 2    /**< Address Type */\n     };\n \n     enum RoleIndex {"
      },
      {
        "sha": "b15935748f3c2fa594c2d056302ef343273b4ddb",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -42,6 +42,8 @@ AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent, SecureStri\n     ui->passEdit2->installEventFilter(this);\n     ui->passEdit3->installEventFilter(this);\n \n+    ui->stakingCheckBox->hide();\n+\n     switch(mode)\n     {\n         case Encrypt: // Ask passphrase x2\n@@ -50,6 +52,10 @@ AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent, SecureStri\n             ui->passEdit1->hide();\n             setWindowTitle(tr(\"Encrypt wallet\"));\n             break;\n+        case UnlockStaking:\n+            ui->stakingCheckBox->setChecked(true);\n+            ui->stakingCheckBox->show();\n+            // Fall through to Unlock case\n         case Unlock: // Ask passphrase\n             ui->warningLabel->setText(tr(\"This operation needs your wallet passphrase to unlock the wallet.\"));\n             ui->passLabel2->hide();\n@@ -89,6 +95,8 @@ AskPassphraseDialog::~AskPassphraseDialog()\n void AskPassphraseDialog::setModel(WalletModel *_model)\n {\n     this->model = _model;\n+    if  (model) \n+        ui->stakingCheckBox->setChecked(model->getWalletUnlockStakingOnly() || mode == UnlockStaking);\n }\n \n void AskPassphraseDialog::accept()\n@@ -164,12 +172,14 @@ void AskPassphraseDialog::accept()\n             QDialog::reject(); // Cancelled\n         }\n         } break;\n+    case UnlockStaking:\n     case Unlock:\n         try {\n             if (!model->setWalletLocked(false, oldpass)) {\n                 QMessageBox::critical(this, tr(\"Wallet unlock failed\"),\n                                       tr(\"The passphrase entered for the wallet decryption was incorrect.\"));\n             } else {\n+                model->setWalletUnlockStakingOnly(ui->stakingCheckBox->isChecked());\n                 QDialog::accept(); // Success\n             }\n         } catch (const std::runtime_error& e) {\n@@ -220,6 +230,7 @@ void AskPassphraseDialog::textChanged()\n     case Encrypt: // New passphrase x2\n         acceptable = !ui->passEdit2->text().isEmpty() && !ui->passEdit3->text().isEmpty();\n         break;\n+    case UnlockStaking:\n     case Unlock: // Old passphrase x1\n     case Decrypt:\n         acceptable = !ui->passEdit1->text().isEmpty();"
      },
      {
        "sha": "e5459f18e33f435df05e8d625a06a300b755fa4a",
        "filename": "src/qt/askpassphrasedialog.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/askpassphrasedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/askpassphrasedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -23,10 +23,11 @@ class AskPassphraseDialog : public QDialog\n \n public:\n     enum Mode {\n-        Encrypt,    /**< Ask passphrase twice and encrypt */\n-        Unlock,     /**< Ask passphrase and unlock */\n-        ChangePass, /**< Ask old passphrase + new passphrase twice */\n-        Decrypt     /**< Ask passphrase and decrypt wallet */\n+        Encrypt,        /**< Ask passphrase twice and encrypt */\n+        UnlockStaking,  /**< Ask passphrase and unlock staking only */\n+        Unlock,         /**< Ask passphrase and unlock */\n+        ChangePass,     /**< Ask old passphrase + new passphrase twice */\n+        Decrypt         /**< Ask passphrase and decrypt wallet */\n     };\n \n     explicit AskPassphraseDialog(Mode mode, QWidget *parent, SecureString* passphrase_out = nullptr);"
      },
      {
        "sha": "125671940e9f7ce36c681cc0d25bea5a99eed37e",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -30,11 +30,13 @@\n         <file alias=\"synced\">res/icons/synced.png</file>\n         <file alias=\"remove\">res/icons/remove.png</file>\n         <file alias=\"tx_mined\">res/icons/tx_mined.png</file>\n+        <file alias=\"tx_cold\">res/icons/tx_cold.png</file>\n         <file alias=\"tx_input\">res/icons/tx_input.png</file>\n         <file alias=\"tx_output\">res/icons/tx_output.png</file>\n         <file alias=\"tx_inout\">res/icons/tx_inout.png</file>\n         <file alias=\"lock_closed\">res/icons/lock_closed.png</file>\n         <file alias=\"lock_open\">res/icons/lock_open.png</file>\n+        <file alias=\"lock_staking\">res/icons/lock_staking.png</file>\n         <file alias=\"warning\">res/icons/warning.png</file>\n         <file alias=\"fontbigger\">res/icons/fontbigger.png</file>\n         <file alias=\"fontsmaller\">res/icons/fontsmaller.png</file>\n@@ -44,6 +46,8 @@\n         <file alias=\"hd_disabled\">res/icons/hd_disabled.png</file>\n         <file alias=\"network_disabled\">res/icons/network_disabled.png</file>\n         <file alias=\"proxy\">res/icons/proxy.png</file>\n+        <file alias=\"staking_on\">res/icons/staking_on.png</file>\n+        <file alias=\"staking_off\">res/icons/staking_off.png</file>\n     </qresource>\n     <qresource prefix=\"/animation\">\n         <file alias=\"spinner-000\">res/animation/spinner-000.png</file>"
      },
      {
        "sha": "7dda2191350163906e5d885cf5ae4267d7b19da1",
        "filename": "src/qt/bitcoinaddresstypes.cpp",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinaddresstypes.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinaddresstypes.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddresstypes.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/bitcoinaddresstypes.h>\n+\n+#include <QStringList>\n+\n+BitcoinAddressTypes::BitcoinAddressTypes(QObject *parent):\n+        QAbstractListModel(parent),\n+        addressTypeList(availableAddressTypes())\n+{\n+}\n+\n+QList<BitcoinAddressTypes::AddressType> BitcoinAddressTypes::availableAddressTypes()\n+{\n+    QList<BitcoinAddressTypes::AddressType> addressTypeList;\n+    addressTypeList.append(LEGACY);\n+    addressTypeList.append(NESTED_SEGWIT);\n+    addressTypeList.append(NATIVE_SEGWIT);\n+    return addressTypeList;\n+}\n+\n+bool BitcoinAddressTypes::valid(int addressType)\n+{\n+    switch(addressType)\n+    {\n+    case LEGACY:\n+    case NESTED_SEGWIT:\n+    case NATIVE_SEGWIT:\n+        return true;\n+    default:\n+        return false;\n+    }\n+}\n+\n+QString BitcoinAddressTypes::longName(int addressType)\n+{\n+    switch(addressType)\n+    {\n+    case LEGACY: return QString(\"Legacy\");\n+    case NESTED_SEGWIT: return QString(\"Nested Segwit\");\n+    case NATIVE_SEGWIT: return QString(\"Native Segwit\");\n+    default: return QString(\"???\");\n+    }\n+}\n+\n+QString BitcoinAddressTypes::shortName(int addressType)\n+{\n+    return longName(addressType);\n+}\n+\n+QString BitcoinAddressTypes::description(int addressType)\n+{\n+    switch(addressType)\n+    {\n+    case LEGACY: return QString(\"Legacy bitcoin address. P2PKH\");\n+    case NESTED_SEGWIT: return QString(\"Nested Segwit address. P2SH\");\n+    case NATIVE_SEGWIT: return QString(\"Native Segwit address. P2WPKH\");\n+    default: return QString(\"???\");\n+    }\n+}\n+\n+int BitcoinAddressTypes::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return addressTypeList.size();\n+}\n+\n+QVariant BitcoinAddressTypes::data(const QModelIndex &index, int role) const\n+{\n+    int row = index.row();\n+    if(row >= 0 && row < addressTypeList.size())\n+    {\n+        AddressType addressType = addressTypeList.at(row);\n+        switch(role)\n+        {\n+        case Qt::EditRole:\n+        case Qt::DisplayRole:\n+            return QVariant(longName(addressType));\n+        case Qt::ToolTipRole:\n+            return QVariant(description(addressType));\n+        case AddressTypeRole:\n+            return QVariant(static_cast<int>(addressType));\n+        }\n+    }\n+    return QVariant();\n+}"
      },
      {
        "sha": "d52ba8dd0e4221c7316bd332a49c405ef02670c8",
        "filename": "src/qt/bitcoinaddresstypes.h",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinaddresstypes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinaddresstypes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddresstypes.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,92 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_BITCOINADDRESSTYPES_H\n+#define BITCOIN_QT_BITCOINADDRESSTYPES_H\n+\n+#include <amount.h>\n+\n+#include <QAbstractListModel>\n+#include <QString>\n+\n+// U+2009 THIN SPACE = UTF-8 E2 80 89\n+#define REAL_THIN_SP_CP 0x2009\n+#define REAL_THIN_SP_UTF8 \"\\xE2\\x80\\x89\"\n+#define REAL_THIN_SP_HTML \"&thinsp;\"\n+\n+// U+200A HAIR SPACE = UTF-8 E2 80 8A\n+#define HAIR_SP_CP 0x200A\n+#define HAIR_SP_UTF8 \"\\xE2\\x80\\x8A\"\n+#define HAIR_SP_HTML \"&#8202;\"\n+\n+// U+2006 SIX-PER-EM SPACE = UTF-8 E2 80 86\n+#define SIXPEREM_SP_CP 0x2006\n+#define SIXPEREM_SP_UTF8 \"\\xE2\\x80\\x86\"\n+#define SIXPEREM_SP_HTML \"&#8198;\"\n+\n+// U+2007 FIGURE SPACE = UTF-8 E2 80 87\n+#define FIGURE_SP_CP 0x2007\n+#define FIGURE_SP_UTF8 \"\\xE2\\x80\\x87\"\n+#define FIGURE_SP_HTML \"&#8199;\"\n+\n+// QMessageBox seems to have a bug whereby it doesn't display thin/hair spaces\n+// correctly.  Workaround is to display a space in a small font.  If you\n+// change this, please test that it doesn't cause the parent span to start\n+// wrapping.\n+#define HTML_HACK_SP \"<span style='white-space: nowrap; font-size: 6pt'> </span>\"\n+\n+// Define THIN_SP_* variables to be our preferred type of thin space\n+#define THIN_SP_CP   REAL_THIN_SP_CP\n+#define THIN_SP_UTF8 REAL_THIN_SP_UTF8\n+#define THIN_SP_HTML HTML_HACK_SP\n+\n+/** Bitcoin adress type definitions. Encapsulates parsing\n+   and serves as list model for drop-down selection boxes.\n+*/\n+class BitcoinAddressTypes: public QAbstractListModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit BitcoinAddressTypes(QObject *parent);\n+\n+    enum AddressType\n+    {\n+        LEGACY,\n+        NESTED_SEGWIT,\n+        NATIVE_SEGWIT\n+    };\n+\n+    //! @name Static API\n+    //! Address type conversion\n+    ///@{\n+\n+    //! Get list of address types, for drop-down box\n+    static QList<AddressType> availableAddressTypes();\n+    //! Is address type ID valid?\n+    static bool valid(int addressType);\n+    //! Long name\n+    static QString longName(int addressType);\n+    //! Short name\n+    static QString shortName(int addressType);\n+    //! Longer description\n+    static QString description(int addressType);\n+    ///@}\n+\n+    //! @name AbstractListModel implementation\n+    //! List model for address type drop-down selection box.\n+    ///@{\n+    enum RoleIndex {\n+        /** Address type identifier */\n+        AddressTypeRole = Qt::UserRole\n+    };\n+    int rowCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    ///@}\n+private:\n+    QList<BitcoinAddressTypes::AddressType> addressTypeList;\n+};\n+typedef BitcoinAddressTypes::AddressType BitcoinAddressType;\n+\n+#endif // BITCOIN_QT_BITCOINADDRESSTYPES_H"
      },
      {
        "sha": "9e5671ebcea48a5395c1740096a6236b90a389e9",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 114,
        "deletions": 5,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -18,12 +18,14 @@\n #include <qt/platformstyle.h>\n #include <qt/rpcconsole.h>\n #include <qt/utilitydialog.h>\n+#include <rpc/server.h>\n \n #ifdef ENABLE_WALLET\n #include <qt/walletcontroller.h>\n #include <qt/walletframe.h>\n #include <qt/walletmodel.h>\n #include <qt/walletview.h>\n+#include <rpc/server.h>\n #endif // ENABLE_WALLET\n \n #ifdef Q_OS_MAC\n@@ -152,6 +154,7 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n     labelProxyIcon = new GUIUtil::ClickableLabel();\n     connectionsControl = new GUIUtil::ClickableLabel();\n     labelBlocksIcon = new GUIUtil::ClickableLabel();\n+    labelStakingIcon = new QLabel();\n     if(enableWallet)\n     {\n         frameBlocksLayout->addStretch();\n@@ -162,11 +165,24 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n     }\n     frameBlocksLayout->addWidget(labelProxyIcon);\n     frameBlocksLayout->addStretch();\n+    frameBlocksLayout->addWidget(labelStakingIcon);\n+    frameBlocksLayout->addStretch();\n     frameBlocksLayout->addWidget(connectionsControl);\n     frameBlocksLayout->addStretch();\n     frameBlocksLayout->addWidget(labelBlocksIcon);\n     frameBlocksLayout->addStretch();\n \n+#ifdef ENABLE_WALLET\n+    if (gArgs.GetBoolArg(\"-staking\", true))\n+    {\n+        QTimer *timerStakingIcon = new QTimer(labelStakingIcon);\n+        connect(timerStakingIcon, SIGNAL(timeout()), this, SLOT(updateStakingIcon()));\n+        timerStakingIcon->start(1000);\n+\n+        updateStakingIcon();\n+    }\n+#endif // ENABLE_WALLET\n+\n     // Progress bar and label for blocks download\n     progressBarLabel = new QLabel();\n     progressBarLabel->setVisible(false);\n@@ -270,11 +286,18 @@ void BitcoinGUI::createActions()\n     receiveCoinsMenuAction->setStatusTip(receiveCoinsAction->statusTip());\n     receiveCoinsMenuAction->setToolTip(receiveCoinsMenuAction->statusTip());\n \n+    stakeAction = new QAction(platformStyle->SingleColorIcon(\":/icons/tx_mined\"), tr(\"&Stake\"), this);\n+    stakeAction->setStatusTip(tr(\"Show stake of wallet\"));\n+    stakeAction->setToolTip(stakeAction->statusTip());\n+    stakeAction->setCheckable(true);\n+    stakeAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_4));\n+    tabGroup->addAction(stakeAction);\n+\n     historyAction = new QAction(platformStyle->SingleColorIcon(\":/icons/history\"), tr(\"&Transactions\"), this);\n     historyAction->setStatusTip(tr(\"Browse transaction history\"));\n     historyAction->setToolTip(historyAction->statusTip());\n     historyAction->setCheckable(true);\n-    historyAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_4));\n+    historyAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_6));\n     tabGroup->addAction(historyAction);\n \n #ifdef ENABLE_WALLET\n@@ -290,6 +313,8 @@ void BitcoinGUI::createActions()\n     connect(receiveCoinsAction, &QAction::triggered, this, &BitcoinGUI::gotoReceiveCoinsPage);\n     connect(receiveCoinsMenuAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n     connect(receiveCoinsMenuAction, &QAction::triggered, this, &BitcoinGUI::gotoReceiveCoinsPage);\n+    connect(stakeAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(stakeAction, &QAction::triggered, this, &BitcoinGUI::gotoStakePage);\n     connect(historyAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n     connect(historyAction, &QAction::triggered, this, &BitcoinGUI::gotoHistoryPage);\n #endif // ENABLE_WALLET\n@@ -549,6 +574,7 @@ void BitcoinGUI::createToolBars()\n         toolbar->addAction(overviewAction);\n         toolbar->addAction(sendCoinsAction);\n         toolbar->addAction(receiveCoinsAction);\n+        toolbar->addAction(stakeAction);\n         toolbar->addAction(historyAction);\n         overviewAction->setChecked(true);\n \n@@ -745,6 +771,7 @@ void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n     usedSendingAddressesAction->setEnabled(enabled);\n     usedReceivingAddressesAction->setEnabled(enabled);\n     openAction->setEnabled(enabled);\n+    stakeAction->setEnabled(enabled);\n     m_close_wallet_action->setEnabled(enabled);\n     m_close_all_wallets_action->setEnabled(enabled);\n }\n@@ -882,6 +909,12 @@ void BitcoinGUI::gotoSendCoinsPage(QString addr)\n     if (walletFrame) walletFrame->gotoSendCoinsPage(addr);\n }\n \n+void BitcoinGUI::gotoStakePage()\n+{\n+    stakeAction->setChecked(true);\n+    if (walletFrame) walletFrame->gotoStakePage();\n+}\n+\n void BitcoinGUI::gotoSignMessageTab(QString addr)\n {\n     if (walletFrame) walletFrame->gotoSignMessageTab(addr);\n@@ -1261,8 +1294,9 @@ void BitcoinGUI::setHDStatus(bool privkeyDisabled, int hdEnabled)\n     labelWalletHDStatusIcon->setEnabled(hdEnabled);\n }\n \n-void BitcoinGUI::setEncryptionStatus(int status)\n+void BitcoinGUI::setEncryptionStatus(WalletModel *walletModel)\n {\n+    int status = walletModel->getEncryptionStatus();\n     switch(status)\n     {\n     case WalletModel::Unencrypted:\n@@ -1273,8 +1307,16 @@ void BitcoinGUI::setEncryptionStatus(int status)\n         break;\n     case WalletModel::Unlocked:\n         labelWalletEncryptionIcon->show();\n-        labelWalletEncryptionIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/lock_open\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n-        labelWalletEncryptionIcon->setToolTip(tr(\"Wallet is <b>encrypted</b> and currently <b>unlocked</b>\"));\n+        if(walletModel->getWalletUnlockStakingOnly())\n+        {\n+            labelWalletEncryptionIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/lock_staking\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n+            labelWalletEncryptionIcon->setToolTip(tr(\"Wallet is <b>encrypted</b> and currently <b>unlocked for staking only</b>\"));\n+        }\n+        else\n+        {\n+            labelWalletEncryptionIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/lock_open\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n+            labelWalletEncryptionIcon->setToolTip(tr(\"Wallet is <b>encrypted</b> and currently <b>unlocked</b>\"));\n+        }\n         encryptWalletAction->setChecked(true);\n         changePassphraseAction->setEnabled(true);\n         encryptWalletAction->setEnabled(false);\n@@ -1300,7 +1342,7 @@ void BitcoinGUI::updateWalletStatus()\n         return;\n     }\n     WalletModel * const walletModel = walletView->getWalletModel();\n-    setEncryptionStatus(walletModel->getEncryptionStatus());\n+    setEncryptionStatus(walletModel);\n     setHDStatus(walletModel->wallet().privateKeysDisabled(), walletModel->wallet().hdEnabled());\n }\n #endif // ENABLE_WALLET\n@@ -1340,6 +1382,73 @@ void BitcoinGUI::updateWindowTitle()\n     setWindowTitle(window_title);\n }\n \n+#ifdef ENABLE_WALLET\n+void BitcoinGUI::updateStakingIcon()\n+{\n+    if(m_node.shutdownRequested())\n+        return;\n+\n+    WalletView * const walletView = walletFrame ? walletFrame->currentWalletView() : 0;\n+    if (!walletView) {\n+        // Not staking because wallet is closed\n+        labelStakingIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/staking_off\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n+        labelStakingIcon->setToolTip(tr(\"Not staking\"));\n+        return;\n+    }\n+    WalletModel * const walletModel = walletView->getWalletModel();\n+\n+    uint64_t nWeight= walletModel->getStakeWeight();\n+    if (walletModel->wallet().getLastCoinStakeSearchInterval() &&\n+            walletModel->wallet().getEnabledStaking() && nWeight)\n+    {\n+        uint64_t nNetworkWeight = GetPoSKernelPS();\n+        const Consensus::Params& consensusParams = Params().GetConsensus();\n+        int64_t nTargetSpacing = consensusParams.nPowTargetSpacing;\n+\n+        unsigned nEstimateTime = nTargetSpacing * nNetworkWeight / nWeight;\n+\n+        QString text;\n+        if (nEstimateTime < 60)\n+        {\n+            text = tr(\"%n second(s)\", \"\", nEstimateTime);\n+        }\n+        else if (nEstimateTime < 60*60)\n+        {\n+            text = tr(\"%n minute(s)\", \"\", nEstimateTime/60);\n+        }\n+        else if (nEstimateTime < 24*60*60)\n+        {\n+            text = tr(\"%n hour(s)\", \"\", nEstimateTime/(60*60));\n+        }\n+        else\n+        {\n+            text = tr(\"%n day(s)\", \"\", nEstimateTime/(60*60*24));\n+        }\n+\n+        nWeight /= COIN;\n+        nNetworkWeight /= COIN;\n+\n+        labelStakingIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/staking_on\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n+        labelStakingIcon->setToolTip(tr(\"Staking.<br>Your weight is %1<br>Network weight is %2<br>Expected time to earn reward is %3\").arg(nWeight).arg(nNetworkWeight).arg(text));\n+    }\n+    else\n+    {\n+        labelStakingIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/staking_off\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n+\n+        if (m_node.getNodeCount(CConnman::CONNECTIONS_ALL) < 4)\n+            labelStakingIcon->setToolTip(tr(\"Not staking because wallet is offline\"));\n+        else if (m_node.isInitialBlockDownload())\n+            labelStakingIcon->setToolTip(tr(\"Not staking because wallet is syncing\"));\n+        else if (!nWeight)\n+            labelStakingIcon->setToolTip(tr(\"Not staking because you don't have mature coins\"));\n+        else if (walletModel->wallet().isLocked())\n+            labelStakingIcon->setToolTip(tr(\"Not staking because wallet is locked\"));\n+        else\n+            labelStakingIcon->setToolTip(tr(\"Not staking\"));\n+    }\n+}\n+#endif // ENABLE_WALLET\n+\n void BitcoinGUI::showNormalIfMinimized(bool fToggleHidden)\n {\n     if(!clientModel)"
      },
      {
        "sha": "4a63339d0b271c2a568c3a4e8bcb398f82cca0a6",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -128,6 +128,7 @@ class BitcoinGUI : public QMainWindow\n     QLabel* progressBarLabel = nullptr;\n     GUIUtil::ClickableProgressBar* progressBar = nullptr;\n     QProgressDialog* progressDialog = nullptr;\n+    QLabel *labelStakingIcon = nullptr;\n \n     QMenuBar* appMenuBar = nullptr;\n     QToolBar* appToolBar = nullptr;\n@@ -162,6 +163,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* m_wallet_selector_label_action = nullptr;\n     QAction* m_wallet_selector_action = nullptr;\n     QAction* m_mask_values_action{nullptr};\n+    QAction* stakeAction = nullptr;\n \n     QLabel *m_wallet_selector_label = nullptr;\n     QComboBox* m_wallet_selector = nullptr;\n@@ -243,10 +245,10 @@ public Q_SLOTS:\n \n private:\n     /** Set the encryption status as shown in the UI.\n-       @param[in] status            current encryption status\n+       @param[in] walletModel            wallet model\n        @see WalletModel::EncryptionStatus\n     */\n-    void setEncryptionStatus(int status);\n+    void setEncryptionStatus(WalletModel *walletModel);\n \n     /** Set the hd-enabled status as shown in the UI.\n      @param[in] hdEnabled         current hd enabled status\n@@ -276,6 +278,8 @@ public Q_SLOTS:\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n     void gotoSendCoinsPage(QString addr = \"\");\n+    /** Switch to stake page */\n+    void gotoStakePage();\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n     void gotoSignMessageTab(QString addr = \"\");\n@@ -305,6 +309,11 @@ public Q_SLOTS:\n     void macosDockIconActivated();\n #endif\n \n+#ifdef ENABLE_WALLET\n+    /** Update staking icon **/\n+    void updateStakingIcon();\n+#endif // ENABLE_WALLET\n+\n     /** Show window if hidden, unminimize when minimized, rise when obscured or show if hidden and fToggleHidden is true */\n     void showNormalIfMinimized() { showNormalIfMinimized(false); }\n     void showNormalIfMinimized(bool fToggleHidden);"
      },
      {
        "sha": "e61c283a320e82f66f9181c332311f1258469524",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -214,6 +214,38 @@ QString BitcoinUnits::getAmountColumnTitle(int unit)\n     return amountTitle;\n }\n \n+QString BitcoinUnits::getDelegatedColumnTitle(int unit)\n+{\n+    QString amountTitle = QObject::tr(\"Delegated\");\n+    if (BitcoinUnits::valid(unit))\n+    {\n+        amountTitle += \" (\"+BitcoinUnits::shortName(unit) + \")\";\n+    }\n+    return amountTitle;\n+}\n+\n+QString BitcoinUnits::formatInt(const int64_t &nIn, bool fPlus, BitcoinUnits::SeparatorStyle separators)\n+{\n+    qint64 n = (qint64)nIn;\n+    qint64 quotient = (n > 0 ? n : -n);\n+    QString quotient_str = QString::number(quotient);\n+\n+    // Use SI-style thin space separators as these are locale independent and can't be\n+    // confused with the decimal marker.\n+    QChar thin_sp(THIN_SP_CP);\n+    int q_size = quotient_str.size();\n+    if (separators == SeparatorStyle::ALWAYS || (separators == SeparatorStyle::STANDARD && q_size > 4))\n+        for (int i = 3; i < q_size; i += 3)\n+            quotient_str.insert(q_size - i, thin_sp);\n+\n+    if (n < 0)\n+        quotient_str.insert(0, '-');\n+    else if (fPlus && n > 0)\n+        quotient_str.insert(0, '+');\n+\n+    return quotient_str;\n+}\n+\n int BitcoinUnits::rowCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);"
      },
      {
        "sha": "21b7bb2f60cb5fe8f8e530daf4f3462adcac8a36",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -83,6 +83,10 @@ class BitcoinUnits: public QAbstractListModel\n     static bool parse(int unit, const QString &value, CAmount *val_out);\n     //! Gets title for amount column including current display unit if optionsModel reference available */\n     static QString getAmountColumnTitle(int unit);\n+    //! Gets title for delegated column including current display unit if optionsModel reference available */\n+    static QString getDelegatedColumnTitle(int unit);\n+    //! Format integer number as string (with and without separator)\n+    static QString formatInt(const int64_t& number, bool plussign=false, SeparatorStyle separators=SeparatorStyle::STANDARD);\n     ///@}\n \n     //! @name AbstractListModel implementation"
      },
      {
        "sha": "497585089dcc6a36502b02c16b4b6327f00d4f2d",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 9,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -392,7 +392,7 @@ void CoinControlDialog::updateLabelLocked()\n     else ui->labelLocked->setVisible(false);\n }\n \n-void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *model, QDialog* dialog)\n+void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *model, QDialog* dialog, bool forDelegation)\n {\n     if (!model)\n         return;\n@@ -464,13 +464,23 @@ void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *\n                 nBytesInputs += 148; // in all error cases, simply assume 148 here\n         }\n         else nBytesInputs += 148;\n+\n+        // Additional byte for P2CS\n+        if (out.txout.scriptPubKey.IsPayToColdStaking())\n+            nBytesInputs++;\n     }\n \n     // calculation\n+    const int P2PKH_OUT_SIZE = 34;\n+    const int P2CS_OUT_SIZE = 61;\n     if (nQuantity > 0)\n     {\n-        // Bytes\n-        nBytes = nBytesInputs + ((CoinControlDialog::payAmounts.size() > 0 ? CoinControlDialog::payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n+        // Bytes: nBytesInputs + (num_of_outputs * bytes_per_output)\n+        nBytes = nBytesInputs + std::max(1, payAmounts.size()) * (forDelegation ? P2CS_OUT_SIZE : P2PKH_OUT_SIZE);\n+        // always assume +1 (p2pkh) output for change here\n+        nBytes += P2PKH_OUT_SIZE;\n+        // nVersion, nLockTime and vin/vout len sizes\n+        nBytes += 10;\n         if (fWitness)\n         {\n             // there is some fudging in these numbers related to the actual virtual transaction size calculation that will keep this estimate from being exact.\n@@ -483,7 +493,7 @@ void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *\n         // in the subtract fee from amount case, we can tell if zero change already and subtract the bytes, so that fee calculation afterwards is accurate\n         if (CoinControlDialog::fSubtractFeeFromAmount)\n             if (nAmount - nPayAmount == 0)\n-                nBytes -= 34;\n+                nBytes -= P2PKH_OUT_SIZE;\n \n         // Fee\n         nPayFee = model->wallet().getMinimumFee(nBytes, m_coin_control, nullptr /* returned_target */, nullptr /* reason */);\n@@ -504,12 +514,12 @@ void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *\n                     nPayFee += nChange;\n                     nChange = 0;\n                     if (CoinControlDialog::fSubtractFeeFromAmount)\n-                        nBytes -= 34; // we didn't detect lack of change above\n+                        nBytes -= P2PKH_OUT_SIZE; // we didn't detect lack of change above\n                 }\n             }\n \n             if (nChange == 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n-                nBytes -= 34;\n+                nBytes -= P2PKH_OUT_SIZE;\n         }\n \n         // after fee\n@@ -631,14 +641,37 @@ void CoinControlDialog::updateView()\n \n             // address\n             CTxDestination outputAddress;\n+            CTxDestination outputAddressStaker;\n             QString sAddress = \"\";\n-            if(ExtractDestination(out.txout.scriptPubKey, outputAddress))\n+            const bool isP2CS = out.txout.scriptPubKey.IsPayToColdStaking();\n+            bool haveDest = false;\n+\n+            if (isP2CS)\n+            {\n+                TxoutType type;\n+                std::vector<CTxDestination> addresses;\n+                int nRequired;\n+                haveDest = (ExtractDestinations(out.txout.scriptPubKey, type, addresses, nRequired)\n+                            && addresses.size() == 2);\n+                if (haveDest) {\n+                    outputAddressStaker = addresses[0];\n+                    outputAddress = addresses[1];\n+                }\n+            }\n+            else\n+            {\n+                haveDest = ExtractDestination(out.txout.scriptPubKey, outputAddress);\n+            }\n+\n+            if (haveDest)\n             {\n                 sAddress = QString::fromStdString(EncodeDestination(outputAddress));\n \n                 // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n                 if (!treeMode || (!(sAddress == sWalletAddress)))\n                     itemOutput->setText(COLUMN_ADDRESS, sAddress);\n+                else\n+                    itemOutput->setToolTip(COLUMN_ADDRESS, sAddress);\n             }\n \n             // label\n@@ -674,8 +707,9 @@ void CoinControlDialog::updateView()\n             // vout index\n             itemOutput->setData(COLUMN_ADDRESS, VOutRole, output.n);\n \n-             // disable locked coins\n-            if (model->wallet().isLockedCoin(output))\n+            // disable locked coins\n+            const bool isLockedCoin = model->wallet().isLockedCoin(output);\n+            if (isLockedCoin)\n             {\n                 m_coin_control.UnSelect(output); // just to be sure\n                 itemOutput->setDisabled(true);\n@@ -685,6 +719,17 @@ void CoinControlDialog::updateView()\n             // set checkbox\n             if (m_coin_control.IsSelected(output))\n                 itemOutput->setCheckState(COLUMN_CHECKBOX, Qt::Checked);\n+\n+            // outputs delegated (for cold staking)\n+            if (isP2CS) {\n+                itemOutput->setData(COLUMN_CHECKBOX, Qt::UserRole, QString(\"Delegated\"));\n+                if (!isLockedCoin)\n+                    itemOutput->setIcon(COLUMN_CHECKBOX, QIcon(\"://ic-check-cold-staking-off\"));\n+                if (haveDest) {\n+                    sAddress = QString::fromStdString(EncodeDestination(outputAddressStaker));\n+                    itemOutput->setToolTip(COLUMN_CHECKBOX, tr(\"delegated to %1 for cold staking\").arg(sAddress));\n+                }\n+            }\n         }\n \n         // amount"
      },
      {
        "sha": "c580c8d4aefa336c219fed794aad3f9aedb2bd4e",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -46,7 +46,7 @@ class CoinControlDialog : public QDialog\n     ~CoinControlDialog();\n \n     // static because also called from sendcoinsdialog\n-    static void updateLabels(CCoinControl& m_coin_control, WalletModel*, QDialog*);\n+    static void updateLabels(CCoinControl& m_coin_control, WalletModel*, QDialog*, bool forDelegation = false);\n \n     static QList<CAmount> payAmounts;\n     static bool fSubtractFeeFromAmount;"
      },
      {
        "sha": "c129bb72bd571a3ed54eabdfe88e7f6578b7a1f1",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -8,6 +8,8 @@\n #include <qt/addresstablemodel.h>\n #include <qt/guiutil.h>\n \n+#include <addressbook.h>\n+\n #include <QDataWidgetMapper>\n #include <QMessageBox>\n \n@@ -20,7 +22,6 @@ EditAddressDialog::EditAddressDialog(Mode _mode, QWidget *parent) :\n     model(nullptr)\n {\n     ui->setupUi(this);\n-\n     GUIUtil::setupAddressWidget(ui->addressEdit, this);\n \n     switch(mode)\n@@ -141,7 +142,7 @@ QString EditAddressDialog::getDuplicateAddressWarning() const\n     QString existing_label = model->labelForAddress(dup_address);\n     QString existing_purpose = model->purposeForAddress(dup_address);\n \n-    if (existing_purpose == \"receive\" &&\n+    if (existing_purpose == QString::fromStdString(AddressBook::AddressBookPurpose::RECEIVE) &&\n             (mode == NewSendingAddress || mode == EditSendingAddress)) {\n         return tr(\n             \"Address \\\"%1\\\" already exists as a receiving address with label \""
      },
      {
        "sha": "aa452dbf1eed039f621c4db22185f97c215b45c7",
        "filename": "src/qt/forms/askpassphrasedialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/askpassphrasedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/askpassphrasedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/askpassphrasedialog.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -115,6 +115,16 @@\n        </property>\n       </widget>\n      </item>\n+     <item row=\"5\" column=\"0\" colspan=\"2\">\n+      <widget class=\"QCheckBox\" name=\"stakingCheckBox\">\n+       <property name=\"toolTip\">\n+        <string>Serves to disable the trivial sendmoney when OS account compromised. Provides no real security.</string>\n+       </property>\n+       <property name=\"text\">\n+        <string>For staking only.</string>\n+       </property>\n+      </widget>\n+     </item>\n     </layout>\n    </item>\n    <item>"
      },
      {
        "sha": "d5148d757d51ea0b3dad6165baa3387d6ac304b4",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -206,6 +206,16 @@\n           <string>Expert</string>\n          </property>\n          <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+          <item>\n+           <widget class=\"QCheckBox\" name=\"coldStakerControlFeatures\">\n+            <property name=\"toolTip\">\n+             <string>Whether to show cold staker control features or not.</string>\n+            </property>\n+            <property name=\"text\">\n+             <string>Enable cold s&amp;taker control features</string>\n+            </property>\n+           </widget>\n+          </item>\n           <item>\n            <widget class=\"QCheckBox\" name=\"coinControlFeatures\">\n             <property name=\"toolTip\">\n@@ -897,6 +907,11 @@\n    <extends>QComboBox</extends>\n    <header>qt/qvaluecombobox.h</header>\n   </customwidget>\n+  <customwidget>\n+   <class>BitcoinAmountField</class>\n+   <extends>QSpinBox</extends>\n+   <header>qt/bitcoinamountfield.h</header>\n+  </customwidget>\n  </customwidgets>\n  <resources/>\n  <connections/>"
      },
      {
        "sha": "4aa0ea9732079ccbd6d12d3bfe0f0bdb4e86f05b",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 144,
        "deletions": 11,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -114,7 +114,7 @@\n             <property name=\"spacing\">\n              <number>12</number>\n             </property>\n-            <item row=\"2\" column=\"2\">\n+            <item row=\"3\" column=\"2\">\n              <widget class=\"QLabel\" name=\"labelWatchPending\">\n               <property name=\"font\">\n                <font>\n@@ -140,7 +140,7 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"2\" column=\"1\">\n+            <item row=\"3\" column=\"1\">\n              <widget class=\"QLabel\" name=\"labelUnconfirmed\">\n               <property name=\"font\">\n                <font>\n@@ -166,7 +166,7 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"3\" column=\"2\">\n+            <item row=\"4\" column=\"2\">\n              <widget class=\"QLabel\" name=\"labelWatchImmature\">\n               <property name=\"font\">\n                <font>\n@@ -192,14 +192,14 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"4\" column=\"0\" colspan=\"2\">\n+            <item row=\"7\" column=\"0\" colspan=\"2\">\n              <widget class=\"Line\" name=\"line\">\n               <property name=\"orientation\">\n                <enum>Qt::Horizontal</enum>\n               </property>\n              </widget>\n             </item>\n-            <item row=\"4\" column=\"2\">\n+            <item row=\"7\" column=\"2\">\n              <widget class=\"Line\" name=\"lineWatchBalance\">\n               <property name=\"sizePolicy\">\n                <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Fixed\">\n@@ -218,14 +218,14 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"5\" column=\"0\">\n+            <item row=\"8\" column=\"0\">\n              <widget class=\"QLabel\" name=\"labelTotalText\">\n               <property name=\"text\">\n                <string>Total:</string>\n               </property>\n              </widget>\n             </item>\n-            <item row=\"3\" column=\"1\">\n+            <item row=\"4\" column=\"1\">\n              <widget class=\"QLabel\" name=\"labelImmature\">\n               <property name=\"font\">\n                <font>\n@@ -251,7 +251,7 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"2\" column=\"3\">\n+            <item row=\"3\" column=\"3\">\n              <spacer name=\"horizontalSpacer_2\">\n               <property name=\"orientation\">\n                <enum>Qt::Horizontal</enum>\n@@ -264,14 +264,147 @@\n               </property>\n              </spacer>\n             </item>\n-            <item row=\"3\" column=\"0\">\n+            <item row=\"4\" column=\"0\">\n              <widget class=\"QLabel\" name=\"labelImmatureText\">\n               <property name=\"text\">\n                <string>Immature:</string>\n               </property>\n              </widget>\n             </item>\n             <item row=\"5\" column=\"1\">\n+             <widget class=\"QLabel\" name=\"labelStake\">\n+              <property name=\"font\">\n+               <font>\n+                <weight>30</weight>\n+               </font>\n+              </property>\n+              <property name=\"cursor\">\n+               <cursorShape>IBeamCursor</cursorShape>\n+              </property>\n+              <property name=\"toolTip\">\n+               <string>Stake</string>\n+              </property>\n+              <property name=\"text\">\n+               <string notr=\"true\">0.00000000 BTC</string>\n+              </property>\n+              <property name=\"alignment\">\n+               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+              </property>\n+              <property name=\"textInteractionFlags\">\n+               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+              </property>\n+             </widget>\n+            </item>\n+            <item row=\"5\" column=\"3\">\n+             <spacer name=\"horizontalSpacer_4\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Horizontal</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>40</width>\n+                <height>20</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+            <item row=\"5\" column=\"0\">\n+             <widget class=\"QLabel\" name=\"labelStakeText\">\n+              <property name=\"text\">\n+                <string>Immature Stakes:</string>\n+              </property>\n+             </widget>\n+            </item>\n+            <item row=\"6\" column=\"1\">\n+             <widget class=\"QLabel\" name=\"labelImmatureDelegated\">\n+              <property name=\"font\">\n+               <font>\n+                <weight>30</weight>\n+               </font>\n+              </property>\n+              <property name=\"cursor\">\n+               <cursorShape>IBeamCursor</cursorShape>\n+              </property>\n+              <property name=\"toolTip\">\n+               <string>Immature Delegations</string>\n+              </property>\n+              <property name=\"text\">\n+               <string notr=\"true\">0.00000000 BTC</string>\n+              </property>\n+              <property name=\"alignment\">\n+               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+              </property>\n+              <property name=\"textInteractionFlags\">\n+               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+              </property>\n+             </widget>\n+            </item>\n+            <item row=\"6\" column=\"3\">\n+             <spacer name=\"horizontalSpacer_6\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Horizontal</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>40</width>\n+                <height>20</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+            <item row=\"6\" column=\"0\">\n+             <widget class=\"QLabel\" name=\"labelImmatureDelegatedText\">\n+              <property name=\"text\">\n+                <string>Immature Delegations:</string>\n+              </property>\n+             </widget>\n+            </item>\n+            <item row=\"2\" column=\"1\">\n+             <widget class=\"QLabel\" name=\"labelDelegated\">\n+              <property name=\"font\">\n+               <font>\n+                <weight>75</weight>\n+                <bold>true</bold>\n+               </font>\n+              </property>\n+              <property name=\"cursor\">\n+               <cursorShape>IBeamCursor</cursorShape>\n+              </property>\n+              <property name=\"toolTip\">\n+               <string>Delegated</string>\n+              </property>\n+              <property name=\"text\">\n+               <string notr=\"true\">0.00000000 BTC</string>\n+              </property>\n+              <property name=\"alignment\">\n+               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+              </property>\n+              <property name=\"textInteractionFlags\">\n+               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+              </property>\n+             </widget>\n+            </item>\n+            <item row=\"2\" column=\"3\">\n+             <spacer name=\"horizontalSpacer_5\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Horizontal</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>40</width>\n+                <height>20</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+            <item row=\"2\" column=\"0\">\n+             <widget class=\"QLabel\" name=\"labelDelegatedText\">\n+              <property name=\"text\">\n+                <string>Delegated:</string>\n+              </property>\n+             </widget>\n+            </item>\n+            <item row=\"8\" column=\"1\">\n              <widget class=\"QLabel\" name=\"labelTotal\">\n               <property name=\"font\">\n                <font>\n@@ -297,7 +430,7 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"5\" column=\"2\">\n+            <item row=\"8\" column=\"2\">\n              <widget class=\"QLabel\" name=\"labelWatchTotal\">\n               <property name=\"font\">\n                <font>\n@@ -392,7 +525,7 @@\n               </property>\n              </widget>\n             </item>\n-            <item row=\"2\" column=\"0\">\n+            <item row=\"3\" column=\"0\">\n              <widget class=\"QLabel\" name=\"labelPendingText\">\n               <property name=\"text\">\n                <string>Pending:</string>"
      },
      {
        "sha": "804ffa14655910e276fc54b620349574d3b93dfe",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 13,
        "deletions": 26,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -145,6 +145,18 @@\n             </property>\n            </widget>\n           </item>\n+          <item>\n+           <widget class=\"QComboBox\" name=\"addressTypeSelector\">\n+            <property name=\"sizeAdjustPolicy\">\n+             <enum>QComboBox::AdjustToContents</enum>\n+            </property>\n+            <item>\n+             <property name=\"text\">\n+              <string>(none)</string>\n+             </property>\n+            </item>\n+           </widget>\n+          </item>\n           <item>\n            <spacer name=\"horizontalSpacer\">\n             <property name=\"orientation\">\n@@ -194,31 +206,6 @@\n             </property>\n            </widget>\n           </item>\n-          <item>\n-           <widget class=\"QCheckBox\" name=\"useBech32\">\n-            <property name=\"sizePolicy\">\n-             <sizepolicy hsizetype=\"Fixed\" vsizetype=\"Fixed\">\n-              <horstretch>0</horstretch>\n-              <verstretch>0</verstretch>\n-             </sizepolicy>\n-            </property>\n-            <property name=\"maximumSize\">\n-             <size>\n-              <width>1000</width>\n-              <height>16777215</height>\n-             </size>\n-            </property>\n-            <property name=\"focusPolicy\">\n-             <enum>Qt::StrongFocus</enum>\n-            </property>\n-            <property name=\"toolTip\">\n-             <string>Native segwit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</string>\n-            </property>\n-            <property name=\"text\">\n-             <string>Generate native segwit (Bech32) address</string>\n-            </property>\n-           </widget>\n-          </item>\n           <item>\n            <spacer name=\"horizontalSpacer_3\">\n             <property name=\"orientation\">\n@@ -366,10 +353,10 @@\n  <tabstops>\n   <tabstop>reqLabel</tabstop>\n   <tabstop>reqAmount</tabstop>\n-  <tabstop>useBech32</tabstop>\n   <tabstop>reqMessage</tabstop>\n   <tabstop>receiveButton</tabstop>\n   <tabstop>clearButton</tabstop>\n+  <tabstop>addressTypeSelector</tabstop>\n   <tabstop>recentRequestsView</tabstop>\n   <tabstop>showRequestButton</tabstop>\n   <tabstop>removeRequestButton</tabstop>"
      },
      {
        "sha": "5f4fc84f669135ff05e95b8170da17315d98176e",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1172,17 +1172,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n       </widget>\n      </item>\n      <item>\n-      <spacer name=\"horizontalSpacer\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Horizontal</enum>\n+      <widget class=\"QCheckBox\" name=\"checkboxIncludeDelegations\">\n+       <property name=\"toolTip\">\n+        <string>When calculating the available balance, take into account delegations also. If unchecked, the available balance will reflect only the coins currently in the wallet.</string>\n        </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>40</width>\n-         <height>20</height>\n-        </size>\n+       <property name=\"text\">\n+        <string>I&amp;nclude delegations</string>\n        </property>\n-      </spacer>\n+      </widget>\n      </item>\n      <item>\n       <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">"
      },
      {
        "sha": "87c270ebc9ac91d5808d6619b2d631b78d9f581c",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 80,
        "deletions": 4,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -150,6 +150,79 @@\n      </widget>\n     </item>\n     <item row=\"2\" column=\"0\">\n+     <widget class=\"QLabel\" name=\"ownerLabel\">\n+      <property name=\"text\">\n+       <string>&amp;Owner Address:</string>\n+      </property>\n+      <property name=\"alignment\">\n+       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+      </property>\n+      <property name=\"buddy\">\n+       <cstring>ownerLabel</cstring>\n+      </property>\n+     </widget>\n+    </item>\n+    <item row=\"2\" column=\"1\">\n+     <layout class=\"QHBoxLayout\" name=\"ownerLayout\">\n+      <property name=\"spacing\">\n+       <number>0</number>\n+      </property>\n+      <item>\n+       <widget class=\"QValidatedLineEdit\" name=\"ownerAddress\">\n+        <property name=\"toolTip\">\n+         <string>The BitcoinPoS owner address</string>\n+        </property>\n+       </widget>\n+      </item>\n+      <item>\n+       <widget class=\"QToolButton\" name=\"ownerAddressBookButton\">\n+        <property name=\"toolTip\">\n+         <string>Choose previously used address</string>\n+        </property>\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"icon\">\n+         <iconset resource=\"../bitcoin.qrc\">\n+          <normaloff>:/icons/address-book</normaloff>:/icons/address-book</iconset>\n+        </property>\n+        <property name=\"iconSize\">\n+         <size>\n+          <width>22</width>\n+          <height>22</height>\n+         </size>\n+        </property>\n+        <property name=\"shortcut\">\n+         <string>Alt+A</string>\n+        </property>\n+       </widget>\n+      </item>\n+      <item>\n+       <widget class=\"QToolButton\" name=\"ownerPasteButton\">\n+        <property name=\"toolTip\">\n+         <string>Paste address from clipboard</string>\n+        </property>\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"icon\">\n+         <iconset resource=\"../bitcoin.qrc\">\n+          <normaloff>:/icons/editpaste</normaloff>:/icons/editpaste</iconset>\n+        </property>\n+        <property name=\"iconSize\">\n+         <size>\n+          <width>22</width>\n+          <height>22</height>\n+         </size>\n+        </property>\n+        <property name=\"shortcut\">\n+         <string>Alt+P</string>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n+    </item>\n+    <item row=\"3\" column=\"0\">\n      <widget class=\"QLabel\" name=\"amountLabel\">\n       <property name=\"text\">\n        <string>A&amp;mount:</string>\n@@ -162,8 +235,11 @@\n       </property>\n      </widget>\n     </item>\n-    <item row=\"2\" column=\"1\">\n+    <item row=\"3\" column=\"1\">\n      <layout class=\"QHBoxLayout\" name=\"horizontalLayoutAmount\" stretch=\"0,1,0\">\n+      <property name=\"spacing\">\n+       <number>10</number>\n+      </property>\n       <item>\n        <widget class=\"BitcoinAmountField\" name=\"payAmount\">\n          <property name=\"toolTip\">\n@@ -190,7 +266,7 @@\n       </item>\n      </layout>\n     </item>\n-    <item row=\"3\" column=\"0\">\n+    <item row=\"4\" column=\"0\">\n      <widget class=\"QLabel\" name=\"messageLabel\">\n       <property name=\"text\">\n        <string>Message:</string>\n@@ -200,7 +276,7 @@\n       </property>\n      </widget>\n     </item>\n-    <item row=\"3\" column=\"1\">\n+    <item row=\"4\" column=\"1\">\n      <widget class=\"QLabel\" name=\"messageTextLabel\">\n       <property name=\"toolTip\">\n        <string>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</string>\n@@ -210,7 +286,7 @@\n       </property>\n      </widget>\n     </item>\n-    <item row=\"4\" column=\"0\" colspan=\"2\">\n+    <item row=\"5\" column=\"0\" colspan=\"2\">\n      <widget class=\"Line\" name=\"line\">\n       <property name=\"orientation\">\n        <enum>Qt::Horizontal</enum>"
      },
      {
        "sha": "00f20044a055b9dc9fe27adfe04e9a4739ef793d",
        "filename": "src/qt/forms/stakepage.ui",
        "status": "added",
        "additions": 759,
        "deletions": 0,
        "changes": 759,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/stakepage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/forms/stakepage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/stakepage.ui?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,759 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+    <class>StakePage</class>\n+    <widget class=\"QWidget\" name=\"StakePage\">\n+        <property name=\"geometry\">\n+            <rect>\n+                <x>0</x>\n+                <y>0</y>\n+                <width>714</width>\n+                <height>450</height>\n+            </rect>\n+        </property>\n+        <property name=\"windowTitle\">\n+            <string>Form</string>\n+        </property>\n+        <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+            <item>\n+                <widget class=\"QTabWidget\" name=\"tabWidget\">\n+                    <property name=\"currentIndex\">\n+                        <number>0</number>\n+                    </property>\n+                    <widget class=\"QWidget\" name=\"tab_stake\">\n+                        <attribute name=\"title\">\n+                            <string>&amp;Stake</string>\n+                        </attribute>\n+                        <layout class=\"QVBoxLayout\" name=\"verticalLayoutTab1\">\n+                            <item>\n+                                <widget class=\"QFrame\" name=\"frameStakeInfo\">\n+                                    <property name=\"frameShape\">\n+                                        <enum>QFrame::StyledPanel</enum>\n+                                    </property>\n+                                    <property name=\"frameShadow\">\n+                                        <enum>QFrame::Raised</enum>\n+                                    </property>\n+                                    <layout class=\"QVBoxLayout\" name=\"verticalLayoutTab1_1\">\n+                                        <property name=\"spacing\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"leftMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"topMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"rightMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"bottomMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <item>\n+                                            <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n+                                                <property name=\"spacing\">\n+                                                    <number>6</number>\n+                                                </property>\n+                                                <item row=\"1\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelAssets\">\n+                                                        <property name=\"font\">\n+                                                            <font>\n+                                                                <pointsize>17</pointsize>\n+                                                                <bold>true</bold>\n+                                                            </font>\n+                                                        </property>\n+                                                        <property name=\"cursor\">\n+                                                            <cursorShape>IBeamCursor</cursorShape>\n+                                                        </property>\n+                                                        <property name=\"toolTip\">\n+                                                            <string>Your current spendable balance</string>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                        <property name=\"textInteractionFlags\">\n+                                                            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"2\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelOwnedAssets\">\n+                                                        <property name=\"font\">\n+                                                            <font>\n+                                                                <pointsize>10</pointsize>\n+                                                                <bold>true</bold>\n+                                                            </font>\n+                                                        </property>\n+                                                        <property name=\"cursor\">\n+                                                            <cursorShape>IBeamCursor</cursorShape>\n+                                                        </property>\n+                                                        <property name=\"toolTip\">\n+                                                            <string>Staking assets that this wallet owns</string>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                        <property name=\"textInteractionFlags\">\n+                                                            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"2\" column=\"1\">\n+                                                    <widget class=\"QLabel\" name=\"labelDelegations\">\n+                                                        <property name=\"font\">\n+                                                            <font>\n+                                                                <pointsize>10</pointsize>\n+                                                                <bold>true</bold>\n+                                                            </font>\n+                                                        </property>\n+                                                        <property name=\"cursor\">\n+                                                            <cursorShape>IBeamCursor</cursorShape>\n+                                                        </property>\n+                                                        <property name=\"toolTip\">\n+                                                            <string>Staking assets from delegations</string>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                        <property name=\"textInteractionFlags\">\n+                                                            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"3\" column=\"0\" colspan=\"2\">\n+                                                    <widget class=\"Line\" name=\"line\">\n+                                                        <property name=\"orientation\">\n+                                                            <enum>Qt::Horizontal</enum>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"4\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelAssetsImmatureText\">\n+                                                        <property name=\"sizePolicy\">\n+                                                            <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Preferred\">\n+                                                                <horstretch>0</horstretch>\n+                                                                <verstretch>0</verstretch>\n+                                                            </sizepolicy>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string>Immature:</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"4\" column=\"1\">\n+                                                    <widget class=\"QLabel\" name=\"labelAssetsImmature\">\n+                                                        <property name=\"cursor\">\n+                                                            <cursorShape>IBeamCursor</cursorShape>\n+                                                        </property>\n+                                                        <property name=\"toolTip\">\n+                                                            <string>Your immature balance</string>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                        <property name=\"textInteractionFlags\">\n+                                                            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"0\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelAssetsText\">\n+                                                        <property name=\"font\">\n+                                                            <font>\n+                                                                <weight>75</weight>\n+                                                                <bold>true</bold>\n+                                                            </font>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string>Staking assets</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"1\" column=\"2\">\n+                                                    <spacer name=\"horizontalSpacer_2\">\n+                                                        <property name=\"orientation\">\n+                                                            <enum>Qt::Horizontal</enum>\n+                                                        </property>\n+                                                        <property name=\"sizeHint\" stdset=\"0\">\n+                                                            <size>\n+                                                                <width>40</width>\n+                                                                <height>20</height>\n+                                                            </size>\n+                                                        </property>\n+                                                    </spacer>\n+                                                </item>\n+                                                <item row=\"5\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelStakeText\">\n+                                                        <property name=\"sizePolicy\">\n+                                                            <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Preferred\">\n+                                                                <horstretch>0</horstretch>\n+                                                                <verstretch>0</verstretch>\n+                                                            </sizepolicy>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string>Stake:</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"5\" column=\"1\">\n+                                                    <widget class=\"QLabel\" name=\"labelStake\">\n+                                                        <property name=\"text\">\n+                                                            <string>0.000\u2009000\u200900 BTC</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                        <property name=\"textInteractionFlags\">\n+                                                            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"1\" column=\"4\">\n+                                                    <widget class=\"QLabel\" name=\"labelStaking\">\n+                                                        <property name=\"text\">\n+                                                            <string>Staking</string>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"1\" column=\"5\">\n+                                                    <widget class=\"QSwitchControl\" name=\"checkStake\">\n+                                                        <property name=\"enabled\">\n+                                                            <bool>false</bool>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                            </layout>\n+                                        </item>\n+                                        <item>\n+                                            <widget class=\"Line\" name=\"hLine\">\n+                                                <property name=\"orientation\">\n+                                                    <enum>Qt::Horizontal</enum>\n+                                                </property>\n+                                            </widget>\n+                                        </item>\n+                                        <item>\n+                                            <layout class=\"QGridLayout\" name=\"gridLayout\">\n+                                                <property name=\"verticalSpacing\">\n+                                                    <number>6</number>\n+                                                </property>\n+                                                <item row=\"0\" column=\"0\">\n+                                                    <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+                                                        <property name=\"spacing\">\n+                                                            <number>6</number>\n+                                                        </property>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelHeightText\">\n+                                                                <property name=\"sizePolicy\">\n+                                                                    <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Preferred\">\n+                                                                        <horstretch>0</horstretch>\n+                                                                        <verstretch>0</verstretch>\n+                                                                    </sizepolicy>\n+                                                                </property>\n+                                                                <property name=\"text\">\n+                                                                    <string>Block height:</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelHeight\">\n+                                                                <property name=\"text\">\n+                                                                    <string>0</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                                <property name=\"textInteractionFlags\">\n+                                                                    <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <spacer name=\"horizontalSpacer_4\">\n+                                                                <property name=\"orientation\">\n+                                                                    <enum>Qt::Horizontal</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeType\">\n+                                                                    <enum>QSizePolicy::Minimum</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeHint\" stdset=\"0\">\n+                                                                    <size>\n+                                                                        <width>0</width>\n+                                                                        <height>0</height>\n+                                                                    </size>\n+                                                                </property>\n+                                                            </spacer>\n+                                                        </item>\n+                                                    </layout>\n+                                                </item>\n+                                                <item row=\"0\" column=\"1\">\n+                                                    <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n+                                                        <property name=\"spacing\">\n+                                                            <number>6</number>\n+                                                        </property>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelRewardText\">\n+                                                                <property name=\"sizePolicy\">\n+                                                                    <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Preferred\">\n+                                                                        <horstretch>0</horstretch>\n+                                                                        <verstretch>0</verstretch>\n+                                                                    </sizepolicy>\n+                                                                </property>\n+                                                                <property name=\"text\">\n+                                                                    <string>Block reward:</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelReward\">\n+                                                                <property name=\"text\">\n+                                                                    <string>6.25 BTC/Block</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                                <property name=\"textInteractionFlags\">\n+                                                                    <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <spacer name=\"horizontalSpacer_6\">\n+                                                                <property name=\"orientation\">\n+                                                                    <enum>Qt::Horizontal</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeType\">\n+                                                                    <enum>QSizePolicy::Minimum</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeHint\" stdset=\"0\">\n+                                                                    <size>\n+                                                                        <width>0</width>\n+                                                                        <height>0</height>\n+                                                                    </size>\n+                                                                </property>\n+                                                            </spacer>\n+                                                        </item>\n+                                                    </layout>\n+                                                </item>\n+                                                <item row=\"0\" column=\"2\" rowspan=\"2\">\n+                                                    <spacer name=\"horizontalSpacer\">\n+                                                        <property name=\"orientation\">\n+                                                            <enum>Qt::Horizontal</enum>\n+                                                        </property>\n+                                                        <property name=\"sizeHint\" stdset=\"0\">\n+                                                            <size>\n+                                                                <width>40</width>\n+                                                                <height>20</height>\n+                                                            </size>\n+                                                        </property>\n+                                                    </spacer>\n+                                                </item>\n+                                                <item row=\"1\" column=\"0\">\n+                                                    <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n+                                                        <property name=\"spacing\">\n+                                                            <number>6</number>\n+                                                        </property>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelWeightText\">\n+                                                                <property name=\"sizePolicy\">\n+                                                                    <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Preferred\">\n+                                                                        <horstretch>0</horstretch>\n+                                                                        <verstretch>0</verstretch>\n+                                                                    </sizepolicy>\n+                                                                </property>\n+                                                                <property name=\"text\">\n+                                                                    <string>Network weight:</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelWeight\">\n+                                                                <property name=\"text\">\n+                                                                    <string>0</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                                <property name=\"textInteractionFlags\">\n+                                                                    <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <spacer name=\"horizontalSpacer_5\">\n+                                                                <property name=\"orientation\">\n+                                                                    <enum>Qt::Horizontal</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeType\">\n+                                                                    <enum>QSizePolicy::Minimum</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeHint\" stdset=\"0\">\n+                                                                    <size>\n+                                                                        <width>0</width>\n+                                                                        <height>0</height>\n+                                                                    </size>\n+                                                                </property>\n+                                                            </spacer>\n+                                                        </item>\n+                                                    </layout>\n+                                                </item>\n+                                                <item row=\"1\" column=\"1\">\n+                                                    <layout class=\"QHBoxLayout\" name=\"horizontalLayout_4\">\n+                                                        <property name=\"spacing\">\n+                                                            <number>6</number>\n+                                                        </property>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelROIText\">\n+                                                                <property name=\"sizePolicy\">\n+                                                                    <sizepolicy hsizetype=\"Maximum\" vsizetype=\"Preferred\">\n+                                                                        <horstretch>0</horstretch>\n+                                                                        <verstretch>0</verstretch>\n+                                                                    </sizepolicy>\n+                                                                </property>\n+                                                                <property name=\"text\">\n+                                                                    <string>Expected annualized ROI:</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <widget class=\"QLabel\" name=\"labelROI\">\n+                                                                <property name=\"text\">\n+                                                                    <string>7.9 %</string>\n+                                                                </property>\n+                                                                <property name=\"alignment\">\n+                                                                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                                </property>\n+                                                                <property name=\"textInteractionFlags\">\n+                                                                    <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                                </property>\n+                                                            </widget>\n+                                                        </item>\n+                                                        <item>\n+                                                            <spacer name=\"horizontalSpacer_7\">\n+                                                                <property name=\"orientation\">\n+                                                                    <enum>Qt::Horizontal</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeType\">\n+                                                                    <enum>QSizePolicy::Minimum</enum>\n+                                                                </property>\n+                                                                <property name=\"sizeHint\" stdset=\"0\">\n+                                                                    <size>\n+                                                                        <width>0</width>\n+                                                                        <height>0</height>\n+                                                                    </size>\n+                                                                </property>\n+                                                            </spacer>\n+                                                        </item>\n+                                                    </layout>\n+                                                </item>\n+                                            </layout>\n+                                        </item>\n+                                    </layout>\n+                                </widget>\n+                            </item>\n+                            <item>\n+                                <spacer name=\"verticalSpacer\">\n+                                    <property name=\"orientation\">\n+                                        <enum>Qt::Vertical</enum>\n+                                    </property>\n+                                    <property name=\"sizeType\">\n+                                        <enum>QSizePolicy::Fixed</enum>\n+                                    </property>\n+                                    <property name=\"sizeHint\" stdset=\"0\">\n+                                        <size>\n+                                            <width>20</width>\n+                                            <height>10</height>\n+                                        </size>\n+                                    </property>\n+                                </spacer>\n+                            </item>\n+                            <item>\n+                                <widget class=\"QFrame\" name=\"frameStakeRecords\">\n+                                    <property name=\"frameShape\">\n+                                        <enum>QFrame::StyledPanel</enum>\n+                                    </property>\n+                                    <property name=\"frameShadow\">\n+                                        <enum>QFrame::Raised</enum>\n+                                    </property>\n+                                    <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+                                        <item>\n+                                            <widget class=\"QLabel\" name=\"labelRecordsText\">\n+                                                <property name=\"font\">\n+                                                    <font>\n+                                                        <weight>75</weight>\n+                                                        <bold>true</bold>\n+                                                    </font>\n+                                                </property>\n+                                                <property name=\"text\">\n+                                                    <string>Stake records</string>\n+                                                </property>\n+                                            </widget>\n+                                        </item>\n+                                    </layout>\n+                                </widget>\n+                            </item>\n+                        </layout>\n+                    </widget>\n+                    <widget class=\"QWidget\" name=\"tab_create_delegation\">\n+                        <attribute name=\"title\">\n+                            <string>&amp;Delegate</string>\n+                        </attribute>\n+                        <layout class=\"QVBoxLayout\" name=\"verticalLayoutTab2\">\n+                            <property name=\"spacing\">\n+                                <number>0</number>\n+                            </property>\n+                            <property name=\"leftMargin\">\n+                                <number>0</number>\n+                            </property>\n+                            <property name=\"topMargin\">\n+                                <number>0</number>\n+                            </property>\n+                            <property name=\"rightMargin\">\n+                                <number>0</number>\n+                            </property>\n+                            <property name=\"bottomMargin\">\n+                                <number>0</number>\n+                            </property>\n+                        </layout>\n+                    </widget>\n+                    <widget class=\"QWidget\" name=\"tab_my_delegations\">\n+                        <attribute name=\"title\">\n+                            <string>&amp;My Delegations</string>\n+                        </attribute>\n+                        <layout class=\"QVBoxLayout\" name=\"verticalLayoutTab3\">\n+                            <item>\n+                                <widget class=\"QFrame\" name=\"frameDelegationsInfo\">\n+                                    <property name=\"frameShape\">\n+                                        <enum>QFrame::StyledPanel</enum>\n+                                    </property>\n+                                    <property name=\"frameShadow\">\n+                                        <enum>QFrame::Raised</enum>\n+                                    </property>\n+                                    <layout class=\"QVBoxLayout\" name=\"verticalLayoutTab3_1\">\n+                                        <property name=\"spacing\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"leftMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"topMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"rightMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <property name=\"bottomMargin\">\n+                                            <number>15</number>\n+                                        </property>\n+                                        <item>\n+                                            <layout class=\"QGridLayout\" name=\"gridLayout_3\">\n+                                                <property name=\"spacing\">\n+                                                    <number>6</number>\n+                                                </property>\n+                                                <item row=\"0\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelDelegatedAssetsText\">\n+                                                        <property name=\"font\">\n+                                                            <font>\n+                                                                <weight>75</weight>\n+                                                                <bold>true</bold>\n+                                                            </font>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string>Delegated assets</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item row=\"1\" column=\"0\">\n+                                                    <widget class=\"QLabel\" name=\"labelDelegatedAssets\">\n+                                                        <property name=\"font\">\n+                                                            <font>\n+                                                                <pointsize>17</pointsize>\n+                                                                <bold>true</bold>\n+                                                            </font>\n+                                                        </property>\n+                                                        <property name=\"cursor\">\n+                                                            <cursorShape>IBeamCursor</cursorShape>\n+                                                        </property>\n+                                                        <property name=\"toolTip\">\n+                                                            <string>Your current delegated balance</string>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+                                                        </property>\n+                                                        <property name=\"alignment\">\n+                                                            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                                                        </property>\n+                                                        <property name=\"textInteractionFlags\">\n+                                                            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                            </layout>\n+                                        </item>\n+                                    </layout>\n+                                </widget>\n+                            </item>\n+                            <item>\n+                                <spacer name=\"verticalSpacer3\">\n+                                    <property name=\"orientation\">\n+                                        <enum>Qt::Vertical</enum>\n+                                    </property>\n+                                    <property name=\"sizeType\">\n+                                        <enum>QSizePolicy::Fixed</enum>\n+                                    </property>\n+                                    <property name=\"sizeHint\" stdset=\"0\">\n+                                        <size>\n+                                            <width>20</width>\n+                                            <height>10</height>\n+                                        </size>\n+                                    </property>\n+                                </spacer>\n+                            </item>\n+                            <item>\n+                                <widget class=\"QFrame\" name=\"frameTabMyDelegations\">\n+                                    <property name=\"frameShape\">\n+                                        <enum>QFrame::StyledPanel</enum>\n+                                    </property>\n+                                    <property name=\"frameShadow\">\n+                                        <enum>QFrame::Raised</enum>\n+                                    </property>\n+                                    <layout class=\"QVBoxLayout\" name=\"verticalLayout_3\">\n+                                        <item>\n+                                            <widget class=\"QLabel\" name=\"labelMyDelegationsText\">\n+                                                <property name=\"font\">\n+                                                    <font>\n+                                                        <weight>75</weight>\n+                                                        <bold>true</bold>\n+                                                    </font>\n+                                                </property>\n+                                                <property name=\"text\">\n+                                                    <string>My delegations</string>\n+                                                </property>\n+                                            </widget>\n+                                        </item>\n+                                    </layout>\n+                                </widget>\n+                            </item>\n+                        </layout>\n+                    </widget>\n+                    <widget class=\"QWidget\" name=\"tab_received_delegations\">\n+                        <attribute name=\"title\">\n+                            <string>&amp;Received Delegations</string>\n+                        </attribute>\n+                        <layout class=\"QVBoxLayout\" name=\"verticalLayoutTab4\">\n+                            <item>\n+                                <widget class=\"QFrame\" name=\"frameTabReceivedDelegations\">\n+                                    <property name=\"frameShape\">\n+                                        <enum>QFrame::StyledPanel</enum>\n+                                    </property>\n+                                    <property name=\"frameShadow\">\n+                                        <enum>QFrame::Raised</enum>\n+                                    </property>\n+                                    <layout class=\"QVBoxLayout\" name=\"verticalLayout_4\">\n+                                        <item>\n+                                            <layout class=\"QHBoxLayout\" name=\"horizontalLayout_6\">\n+                                                <item>\n+                                                    <widget class=\"QPushButton\" name=\"newAddressButton\">\n+                                                        <property name=\"minimumSize\">\n+                                                            <size>\n+                                                                <width>150</width>\n+                                                                <height>0</height>\n+                                                            </size>\n+                                                        </property>\n+                                                        <property name=\"text\">\n+                                                            <string>&amp;Create new staking address</string>\n+                                                        </property>\n+                                                        <property name=\"icon\">\n+                                                            <iconset resource=\"../bitcoin.qrc\">\n+                                                                <normaloff>:/icons/receiving_addresses</normaloff>:/icons/receiving_addresses</iconset>\n+                                                        </property>\n+                                                        <property name=\"autoDefault\">\n+                                                            <bool>false</bool>\n+                                                        </property>\n+                                                        <property name=\"default\">\n+                                                            <bool>true</bool>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item>\n+                                                    <widget class=\"QLabel\" name=\"newAddressLabelLabel\">\n+                                                        <property name=\"text\">\n+                                                            <string> with label:</string>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                                <item>\n+                                                    <widget class=\"QLineEdit\" name=\"newAddressLabel\">\n+                                                        <property name=\"toolTip\">\n+                                                            <string>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</string>\n+                                                        </property>\n+                                                    </widget>\n+                                                </item>\n+                                            </layout>\n+                                        </item>\n+                                        <item>\n+                                            <widget class=\"QLabel\" name=\"labelColdStakeDelegationsText\">\n+                                                <property name=\"font\">\n+                                                    <font>\n+                                                        <weight>75</weight>\n+                                                        <bold>true</bold>\n+                                                    </font>\n+                                                </property>\n+                                                <property name=\"text\">\n+                                                    <string>ColdStake delegations</string>\n+                                                </property>\n+                                            </widget>\n+                                        </item>\n+                                    </layout>\n+                                </widget>\n+                            </item>\n+                        </layout>\n+                    </widget>\n+                </widget>\n+            </item>\n+        </layout>\n+    </widget>\n+    <customwidgets>\n+        <customwidget>\n+            <class>QSwitchControl</class>\n+            <extends>QCheckBox</extends>\n+            <header>qt/qswitchcontrol.h</header>\n+        </customwidget>\n+    </customwidgets>\n+    <resources/>\n+    <connections/>\n+</ui>"
      },
      {
        "sha": "b70c5f2b1c5353d6eb068b2e35e3db518900638b",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -43,7 +43,7 @@ static const int TOOLTIP_WRAP_THRESHOLD = 80;\n #define SPINNER_FRAMES 36\n \n #define QAPP_ORG_NAME \"Bitcoin\"\n-#define QAPP_ORG_DOMAIN \"bitcoin.org\"\n+#define QAPP_ORG_DOMAIN \"bitcoinpos.net\"\n #define QAPP_APP_NAME_DEFAULT \"Bitcoin-Qt\"\n #define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n #define QAPP_APP_NAME_SIGNET \"Bitcoin-Qt-signet\""
      },
      {
        "sha": "564366631897f9b5d5790946a162e43dbaf40e05",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -105,7 +105,7 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n     widget->setFont(fixedPitchFont());\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied.\n-    widget->setPlaceholderText(QObject::tr(\"Enter a Bitcoin address (e.g. %1)\").arg(\n+    widget->setPlaceholderText(QObject::tr(\"Enter a BitcoinPoS address (e.g. %1)\").arg(\n         QString::fromStdString(DummyAddress(Params()))));\n     widget->setValidator(new BitcoinAddressEntryValidator(parent));\n     widget->setCheckValidator(new BitcoinAddressCheckValidator(parent));"
      },
      {
        "sha": "b853f8b32f1b2feecf969bd91f01506464b7e8f6",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -134,7 +134,7 @@ Intro::Intro(QWidget *parent, int64_t blockchain_size_gb, int64_t chain_state_si\n     ui->lblExplanation1->setText(ui->lblExplanation1->text()\n         .arg(PACKAGE_NAME)\n         .arg(m_blockchain_size_gb)\n-        .arg(2009)\n+        .arg(2021)\n         .arg(tr(\"Bitcoin\"))\n     );\n     ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(PACKAGE_NAME));"
      },
      {
        "sha": "d831c1adc692e2f1c49817814b9f01a05c4beead",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1145,6 +1145,14 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n         <source>Open wallet warning</source>\n         <translation>Wallet \u00f6ffnen Warnung</translation>\n     </message>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Wallet \u00f6ffnen fehlgeschlagen</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Wallet \u00f6ffnen Warnung</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>Standard-Wallet</translation>\n@@ -1657,6 +1665,14 @@ Das Signieren ist nur mit Adressen vom Typ 'Legacy' m\u00f6glich.</translation>\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>Wenn du diese Fehlermeldung erh\u00e4lst, solltest du Kontakt mit dem H\u00e4ndler aufnehmen und eine mit BIP21 kompatible URL zur Verwendung nachfragen.</translation>\n     </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Aufgrund der weit verbreiteten Sicherheitsm\u00e4ngel in BIP70 wird dringend empfohlen, dass alle Anweisungen des H\u00e4ndlers zum Wechseln von Wallets ignoriert werden.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Wenn du diese Fehlermeldung erh\u00e4lst, solltest du Kontakt mit dem H\u00e4ndler aufnehmen und eine mit BIP21 kompatible URL zur Verwendung nachfragen.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Ung\u00fcltige Zahlungsadresse %1</translation>"
      },
      {
        "sha": "4ec164971604cabf055f7a6728c878e9b71053de",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -3867,12 +3867,12 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <location line=\"+12\"/>\n         <location line=\"+54\"/>\n         <location line=\"+30\"/>\n-        <location line=\"+60\"/>\n+        <location line=\"+68\"/>\n         <source>Credit</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"-154\"/>\n+        <location line=\"-162\"/>\n         <source>matures in %n more block(s)</source>\n         <translation>\n             <numerusform>matures in %n more block</numerusform>\n@@ -3887,12 +3887,12 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n     <message>\n         <location line=\"+60\"/>\n         <location line=\"+26\"/>\n-        <location line=\"+63\"/>\n+        <location line=\"+71\"/>\n         <source>Debit</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-79\"/>\n+        <location line=\"-87\"/>\n         <source>Total debit</source>\n         <translation type=\"unfinished\"></translation>\n     </message>"
      },
      {
        "sha": "afdf8d35a3dd62ecb8a9a1c608e7c076d0d2b386",
        "filename": "src/qt/locale/bitcoin_en_GB.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_en_GB.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_en_GB.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_GB.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1141,6 +1141,14 @@ Signing is only possible with addresses of the type 'legacy'.</translation>\n         <source>Open wallet warning</source>\n         <translation>Open wallet warning</translation>\n     </message>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Open wallet failed</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Open wallet warning</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>default wallet</translation>\n@@ -1657,6 +1665,14 @@ Signing is only possible with addresses of the type 'legacy'.</translation>\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</translation>\n     </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Invalid payment address %1</translation>"
      },
      {
        "sha": "dba4702ee17e9483960f58e1dcb5dd48b089dc14",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 44,
        "deletions": 28,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -163,7 +163,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Change passphrase</source>\n-        <translation>Cambiar contrase\u00f1a</translation>\n+        <translation>Cambiar frase secreta</translation>\n     </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n@@ -289,7 +289,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>&amp;About %1</source>\n-        <translation>&amp;Acerca de %1</translation>\n+        <translation>%Acerca de%1</translation>\n     </message>\n     <message>\n         <source>Show information about %1</source>\n@@ -389,7 +389,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n-        <translation>&amp;Mostrar / Ocultar</translation>\n+        <translation>Mo&amp;strar/ocultar</translation>\n     </message>\n     <message>\n         <source>Show or hide the main Window</source>\n@@ -417,7 +417,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>&amp;Help</source>\n-        <translation>&amp;Ayuda</translation>\n+        <translation>A&amp;yuda</translation>\n     </message>\n     <message>\n         <source>Tabs toolbar</source>\n@@ -645,11 +645,11 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>HD key generation is &lt;b&gt;enabled&lt;/b&gt;</source>\n-        <translation>La generaci\u00f3n de clave HD est\u00e1 &lt;b&gt;habilitada&lt;/b&gt;</translation>\n+        <translation>La generaci\u00f3n de la clave HD est\u00e1 &lt;b&gt; activada &lt;/ b&gt;</translation>\n     </message>\n     <message>\n         <source>HD key generation is &lt;b&gt;disabled&lt;/b&gt;</source>\n-        <translation>La generaci\u00f3n de clave HD est\u00e1 &lt;b&gt;deshabilitada&lt;/b&gt;</translation>\n+        <translation>La generaci\u00f3n de la clave HD est\u00e1 &lt;b&gt; desactivada &lt;/ b&gt;</translation>\n     </message>\n     <message>\n         <source>Private key &lt;b&gt;disabled&lt;/b&gt;</source>\n@@ -692,7 +692,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Fee:</source>\n-        <translation>Comisi\u00f3n:</translation>\n+        <translation>Tasa:</translation>\n     </message>\n     <message>\n         <source>Dust:</source>\n@@ -712,7 +712,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Tree mode</source>\n-        <translation>Modo \u00e1rbol</translation>\n+        <translation>Modo arbol</translation>\n     </message>\n     <message>\n         <source>List mode</source>\n@@ -760,11 +760,11 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Lock unspent</source>\n-        <translation>Bloquear lo no gastado</translation>\n+        <translation>Bloquear no utilizado</translation>\n     </message>\n     <message>\n         <source>Unlock unspent</source>\n-        <translation>Desbloquear lo no gastado</translation>\n+        <translation>Desbloquear no utilizado</translation>\n     </message>\n     <message>\n         <source>Copy quantity</source>\n@@ -796,7 +796,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>yes</source>\n-        <translation>s\u00ed</translation>\n+        <translation>si</translation>\n     </message>\n     <message>\n         <source>no</source>\n@@ -808,7 +808,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n-        <translation>Puede variar +/- %1 satoshi(s) por entrada.</translation>\n+        <translation>Puede variar +/- %1 satoshi (s) por entrada.</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n@@ -937,7 +937,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Could not unlock wallet.</source>\n-        <translation>No se pudo desbloquear el monedero.</translation>\n+        <translation>No se pudo desbloquear la billetera.</translation>\n     </message>\n     <message>\n         <source>New key generation failed.</source>\n@@ -979,7 +979,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Command-line options</source>\n-        <translation>Opciones de la l\u00ednea de comandos</translation>\n+        <translation>Opciones de la l\u00ednea de \u00f3rdenes</translation>\n     </message>\n </context>\n <context>\n@@ -1069,7 +1069,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     <name>ModalOverlay</name>\n     <message>\n         <source>Form</source>\n-        <translation>Formulario</translation>\n+        <translation>Desde</translation>\n     </message>\n     <message>\n         <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n@@ -1109,7 +1109,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Hide</source>\n-        <translation>Ocultar</translation>\n+        <translation>Esconder</translation>\n     </message>\n     <message>\n         <source>Esc</source>\n@@ -1145,6 +1145,14 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n         <source>Open wallet warning</source>\n         <translation>Ver aviso sobre la billetera</translation>\n     </message>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>La apertura del monedero fall\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Advertencia sobre apertura de monedero</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>Monedero predeterminado</translation>\n@@ -1198,7 +1206,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n-        <translation>Minimizar en lugar de salir de la aplicaci\u00f3n cuando la ventana est\u00e1 cerrada. Cuando se activa esta opci\u00f3n, la aplicaci\u00f3n s\u00f3lo se cerrar\u00e1 despu\u00e9s de seleccionar Salir en el men\u00fa.</translation>\n+        <translation>Minimice en lugar de salir de la aplicaci\u00f3n cuando la ventana est\u00e9 cerrada. Cuando esta opci\u00f3n est\u00e1 habilitada, la aplicaci\u00f3n se cerrar\u00e1 solo despu\u00e9s de seleccionar Salir en el men\u00fa.</translation>\n     </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n@@ -1398,7 +1406,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Client restart required to activate changes.</source>\n-        <translation>Se necesita reiniciar el cliente para activar los cambios.</translation>\n+        <translation>Reinicio del cliente para activar cambios.</translation>\n     </message>\n     <message>\n         <source>Client will be shut down. Do you want to proceed?</source>\n@@ -1661,6 +1669,14 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>Si est\u00e1 recibiendo este error deber\u00eda solicitar al comerciante que le proporcione una URI compatible con BIP21</translation>\n     </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Debido a fallos de seguridad conocidos en BIP70 se recomienda encarecidamente que se ignore cualquier instrucci\u00f3n sobre el intercambio de monederos.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Si est\u00e1 recibiendo este error deber\u00eda pedir al comerciante que le proporcione una URI compatible con BIP21</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Direcci\u00f3n de pago inv\u00e1lida %1</translation>\n@@ -1694,7 +1710,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Sent</source>\n-        <translation>Enviado</translation>\n+        <translation>Expedido</translation>\n     </message>\n     <message>\n         <source>Received</source>\n@@ -1923,7 +1939,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Sent</source>\n-        <translation>Enviado</translation>\n+        <translation>Expedido</translation>\n     </message>\n     <message>\n         <source>&amp;Peers</source>\n@@ -2367,7 +2383,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Fee:</source>\n-        <translation>Comisi\u00f3n:</translation>\n+        <translation>Tasa:</translation>\n     </message>\n     <message>\n         <source>After Fee:</source>\n@@ -2399,7 +2415,7 @@ Firmar solo es posible con correos del tipo Legacy.</translation>\n     </message>\n     <message>\n         <source>Warning: Fee estimation is currently not possible.</source>\n-        <translation>Advertencia: En este momento no se puede estimar la comisi\u00f3n.</translation>\n+        <translation>Advertencia: En este momento no se puede estimar la cuota.</translation>\n     </message>\n     <message>\n         <source>Specify a custom fee per kB (1,000 bytes) of the transaction's virtual size.\n@@ -2415,7 +2431,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Hide</source>\n-        <translation>Ocultar</translation>\n+        <translation>Esconder</translation>\n     </message>\n     <message>\n         <source>Recommended:</source>\n@@ -3239,7 +3255,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>To yourself</source>\n-        <translation>A usted mismo</translation>\n+        <translation>A ti mismo</translation>\n     </message>\n     <message>\n         <source>Mined</source>\n@@ -3343,7 +3359,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Exporting Successful</source>\n-        <translation>Exportaci\u00f3n finalizada</translation>\n+        <translation>Exportaci\u00f3n exitosa</translation>\n     </message>\n     <message>\n         <source>The transaction history was successfully saved to %1.</source>\n@@ -3411,15 +3427,15 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n     </message>\n     <message>\n         <source>Fee bump error</source>\n-        <translation>Error de incremento de comisi\u00f3n</translation>\n+        <translation>Error de incremento de cuota</translation>\n     </message>\n     <message>\n         <source>Increasing transaction fee failed</source>\n         <translation>Ha fallado el incremento de la comisi\u00f3n por transacci\u00f3n.</translation>\n     </message>\n     <message>\n         <source>Do you want to increase the fee?</source>\n-        <translation>\u00bfDesea incrementar la comisi\u00f3n?</translation>\n+        <translation>\u00bfDesea incrementar la cuota?</translation>\n     </message>\n     <message>\n         <source>Do you want to draft a transaction with fee increase?</source>\n@@ -4079,7 +4095,7 @@ Vaya a Archivo&gt; Abrir monedero para cargar un monedero.\n     </message>\n     <message>\n         <source>Done loading</source>\n-        <translation>Se termin\u00f3 de cargar</translation>\n+        <translation>Generado pero no aceptado</translation>\n     </message>\n </context>\n </TS>\n\\ No newline at end of file"
      },
      {
        "sha": "0b389e7f9cdaf0e6771576d394edb938414105b5",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -3459,7 +3459,7 @@ Acc\u00e9dez \u00e0 Fichier &gt; Ouvrir un porte-monnaie pour en charger un.\n     </message>\n     <message>\n         <source>PSBT copied</source>\n-        <translation>La TBPS a \u00e9t\u00e9 copi\u00e9e</translation>\n+        <translation>La TBTC a \u00e9t\u00e9 copi\u00e9e</translation>\n     </message>\n     <message>\n         <source>Can't sign transaction.</source>"
      },
      {
        "sha": "b84e73679d2bfa55932ce1cd14b64ed1458c58c4",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1102,6 +1102,14 @@\n         <source>Open wallet warning</source>\n         <translation>Upozorenje kod otvaranja nov\u010danika</translation>\n     </message>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Neuspje\u0161no otvaranje nov\u010danika</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Upozorenje kod otvaranja nov\u010danika</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>uobi\u010dajeni nov\u010danik</translation>\n@@ -1494,6 +1502,14 @@\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>Ako dobivate ovu gre\u0161ku, trebali biste zatra\u017eiti od trgovca BIP21 kompatibilan URI.</translation>\n     </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Zbog rasprostranjenih sigurnosnih mana u BIP70-u, strogo se preporu\u010duje da se ignoriraju bilo kakve naredbe o zamjeni nov\u010danika sa strane trgovca.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Ako dobivate ovu gre\u0161ku, trebali biste zatra\u017eiti od trgovca BIP21 kompatibilan URI.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Neva\u017ee\u0107a adresa za pla\u0107anje %1</translation>"
      },
      {
        "sha": "fe66424e22f4959e4b47f033ac7deefe8e29e11b",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1145,6 +1145,14 @@ Somente \u00e9 poss\u00edvel assinar com endere\u00e7os do tipo 'legado'.</translation>\n         <source>Open wallet warning</source>\n         <translation>Abrir carteira alerta</translation>\n     </message>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Abrir carteira falhou</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Abrir carteira alerta</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>carteira padr\u00e3o</translation>\n@@ -1661,6 +1669,14 @@ Somente \u00e9 poss\u00edvel assinar com endere\u00e7os do tipo 'legado'.</translation>\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>Se voc\u00ea est\u00e1 recebendo este erro voc\u00ea deve requisitar ao comerciante oferecer uma URI compat\u00edvel com o BIP21.</translation>\n     </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Devido a falha de seguran\u00e7a divulgada no BIP70 \u00e9 fortemente recomendado que qualquer instru\u00e7\u00e3o para comerciantes para mudar de carteira seja ignorado</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Se voc\u00ea est\u00e1 recebendo este erro voc\u00ea deve requisitar ao comerciante oferecer uma URI compat\u00edvel com o BIP21.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Endere\u00e7o de pagamento %1 inv\u00e1lido</translation>"
      },
      {
        "sha": "59f8d96ce0120fca8c64e5a0dee3e8b69a309af2",
        "filename": "src/qt/locale/bitcoin_sl.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_sl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_sl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -75,6 +75,10 @@ Signing is only possible with addresses of the type 'legacy'.</source>\n         <translation>To so va\u0161i bitcoin-naslovi, ki jih uporabljate za prejemanje pla\u010dil. Za tvorbo novega naslova uporabite gumb \"Ustvari nov prejemni naslov\" v zavihku Prejmi.\n Podpisovanje je mo\u017eno le s podedovanimi (\"legacy\") naslovi.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>To so va\u0161i naslovi za prejemanje Bitcoinov. \u010ce \u017eelite ustvariti nov naslov za prejemanje, uporabite gumb za ustvarjanje novih naslovov v zavihku \"prejemanje\".</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopiraj naslov</translation>\n@@ -1004,6 +1008,10 @@ Podpisovanje je mo\u017eno le s podedovanimi (\"legacy\") naslovi.</translation>\n         <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n         <translation>\u010ce spremenite to nastavitev, morate ponovno nalo\u017eiti celotno verigo blokov. Hitreje je najprej prenesti celotno verigo in jo obrezati pozneje. Ta nastavitev onemogo\u010di nekatere napredne funkcije.</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>\u010ce spremenite to nastavitev, morate ponovno nalo\u017eiti celotno verigo blokov. Hitreje je najprej prenesti celotno verigo in jo obrezati pozneje. Onemogo\u010di nekatere napredne funkcije.</translation>\n+    </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>Za\u010detna sinhronizacija je zelo zahtevna in lahko odkrije probleme s strojno opremo v va\u0161em ra\u010dunalniku, ki so prej bili neopa\u017eeni. Vsaki\u010d, ko za\u017eenete %1, bo le-ta nadaljeval s prenosom, kjer je prej\u0161nji\u010d ostal.</translation>\n@@ -1661,6 +1669,14 @@ Podpisovanje je mo\u017eno le s podedovanimi (\"legacy\") naslovi.</translation>\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>\u010ce ste prejeli to napako, zaprosite prejemnika za URI, ki je zdru\u017eljiv z BIP21.</translation>\n     </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Zaradi varnostnih napak v BIP70 priporo\u010damo, da se kakr\u0161na koli navodila trgovca za zamenjavo denarnic ne upo\u0161tevajo.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>\u010ce ste prejeli to napako, zaprosite za URI, ki je zdru\u017eljiv z BIP21.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Neveljaven naslov za pla\u010dilo %1</translation>\n@@ -3639,6 +3655,10 @@ Za odpiranje denarnice kliknite Datoteka &gt; Odpri denarnico\n         <source>Config setting for %s only applied on %s network when in [%s] section.</source>\n         <translation>Konfiguracijske nastavitve za %s se upo\u0161tevajo le na omre\u017eju %s v sekciji [%s].</translation>\n     </message>\n+    <message>\n+        <source>Config setting for %s only applied on %s network when in [%s] section.</source>\n+        <translation>Konfiguracijske nastavitve za %s se upo\u0161tevajo le na omre\u017eju %s v sekciji [%s].</translation>\n+    </message>\n     <message>\n         <source>Copyright (C) %i-%i</source>\n         <translation>Copyright (C) %i-%i</translation>\n@@ -3997,6 +4017,10 @@ Za odpiranje denarnice kliknite Datoteka &gt; Odpri denarnico\n         <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n         <translation>To je transakcijska provizija, ki jo lahko pla\u010date, kadar ocene provizij niso na voljo.</translation>\n     </message>\n+    <message>\n+        <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit %s and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n+        <translation>Ta izdelek vklju\u010duje programsko opremo, ki jo je razvil OpenSSL Project za uporabo v orodju OpenSSL Toolkit %s in kriptografsko programsko opremo, ki jo je napisal Eric Young, in programsko opremo UPnP, ki jo je napisal Thomas Bernard.</translation>\n+    </message>\n     <message>\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation>Skupna dol\u017eina niza razli\u010dice omre\u017eja (%i) presega najve\u010djo dol\u017eino (%i). Zmanj\u0161ajte \u0161tevilo ali velikost ur.</translation>"
      },
      {
        "sha": "ce115994f1f99f78999abfc2b90a209881fad6e5",
        "filename": "src/qt/locale/bitcoin_uz@Latn.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_uz@Latn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/locale/bitcoin_uz@Latn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uz@Latn.ts?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1,6 +1,10 @@\n <TS language=\"uz@Latn\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u06a9\u0644\u06cc\u06a9\u00a0\u0631\u0627\u0633\u062a\u00a0\u0628\u0631\u0627\u06cc\u00a0\u0648\u06cc\u0631\u0627\u06cc\u0634\u00a0\u0646\u0634\u0627\u0646\u06cc\u00a0\u06cc\u0627\u00a0\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Yangi manzil yaratish</translation>\n@@ -166,6 +170,14 @@\n     </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>\u0635\u0627\u062f\u0631 \u06a9\u0631\u062f\u0646</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>\u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0628\u0631\u06af\u0647 \u0641\u0639\u0644\u06cc \u0631\u0627 \u0628\u0647 \u06cc\u06a9 \u0641\u0627\u06cc\u0644 \u0635\u0627\u062f\u0631 \u06a9\u0646\u06cc\u062f</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "ac617003bc121cae65db918bafcaee6f114c6703",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -13,7 +13,7 @@ @implementation NSBundle(returnCorrectIdentifier)\n - (NSString *)__bundleIdentifier\n {\n     if (self == [NSBundle mainBundle]) {\n-        return @\"org.bitcoinfoundation.Bitcoin-Qt\";\n+        return @\"net.bitcoinpos.Bitcoin-Qt\";\n     } else {\n         return [self __bundleIdentifier];\n     }"
      },
      {
        "sha": "a481f7e2cf9b0728b2b75e69d7a102356ddd8068",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -211,6 +211,7 @@ void OptionsDialog::setMapper()\n     /* Wallet */\n     mapper->addMapping(ui->spendZeroConfChange, OptionsModel::SpendZeroConfChange);\n     mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n+    mapper->addMapping(ui->coldStakerControlFeatures, OptionsModel::ColdStakerControlFeatures);\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);"
      },
      {
        "sha": "cd49aa6b9f0692a796248f09ff8315cb3c7c2c04",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -19,6 +19,12 @@\n #include <txdb.h> // for -dbcache defaults\n #include <util/string.h>\n \n+#ifdef ENABLE_WALLET\n+#include <wallet/wallet.h>\n+#include <wallet/walletdb.h>\n+#include <util/moneystr.h>\n+#endif\n+\n #include <QDebug>\n #include <QSettings>\n #include <QStringList>\n@@ -80,6 +86,10 @@ void OptionsModel::Init(bool resetSettings)\n         settings.setValue(\"fCoinControlFeatures\", false);\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();\n \n+    if (!settings.contains(\"fColdStakerControlFeatures\"))\n+        settings.setValue(\"fColdStakerControlFeatures\", false);\n+    fColdStakerControlFeatures = settings.value(\"fColdStakerControlFeatures\", false).toBool();\n+\n     // These are shared with the core or have a command-line parameter\n     // and we want command-line parameters to overwrite the GUI settings.\n     //\n@@ -313,6 +323,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"language\");\n         case CoinControlFeatures:\n             return fCoinControlFeatures;\n+        case ColdStakerControlFeatures:\n+            return fColdStakerControlFeatures;\n         case Prune:\n             return settings.value(\"bPrune\");\n         case PruneSize:\n@@ -441,6 +453,11 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"fCoinControlFeatures\", fCoinControlFeatures);\n             Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n+        case ColdStakerControlFeatures:\n+            fColdStakerControlFeatures = value.toBool();\n+            settings.setValue(\"fColdStakerControlFeatures\", fColdStakerControlFeatures);\n+            Q_EMIT coldStakerControlFeaturesChanged(fColdStakerControlFeatures);\n+            break;\n         case Prune:\n             if (settings.value(\"bPrune\") != value) {\n                 settings.setValue(\"bPrune\", value);"
      },
      {
        "sha": "71669fb1744c83c44a9edd6bc103eec00d80d833",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -59,6 +59,7 @@ class OptionsModel : public QAbstractListModel\n         ThirdPartyTxUrls,       // QString\n         Language,               // QString\n         CoinControlFeatures,    // bool\n+        ColdStakerControlFeatures, //bool\n         ThreadsScriptVerif,     // int\n         Prune,                  // bool\n         PruneSize,              // int\n@@ -84,6 +85,7 @@ class OptionsModel : public QAbstractListModel\n     int getDisplayUnit() const { return nDisplayUnit; }\n     QString getThirdPartyTxUrls() const { return strThirdPartyTxUrls; }\n     bool getCoinControlFeatures() const { return fCoinControlFeatures; }\n+    bool getColdStakerControlFeatures() const { return fColdStakerControlFeatures; }\n     const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n \n     /* Explicit setters */\n@@ -107,6 +109,7 @@ class OptionsModel : public QAbstractListModel\n     int nDisplayUnit;\n     QString strThirdPartyTxUrls;\n     bool fCoinControlFeatures;\n+    bool fColdStakerControlFeatures;\n     /* settings that were overridden by command-line */\n     QString strOverriddenByCommandLine;\n \n@@ -118,6 +121,7 @@ class OptionsModel : public QAbstractListModel\n Q_SIGNALS:\n     void displayUnitChanged(int unit);\n     void coinControlFeaturesChanged(bool);\n+    void coldStakerControlFeaturesChanged(bool);\n     void hideTrayIconChanged(bool);\n };\n "
      },
      {
        "sha": "1e3702d5353bc077738d2cc02388801be14f34cd",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -188,7 +188,10 @@ void OverviewPage::setBalance(const interfaces::WalletBalances& balances)\n             ui->labelBalance->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n             ui->labelUnconfirmed->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n             ui->labelImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n-            ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+            ui->labelStake->setText(BitcoinUnits::formatWithPrivacy(unit, balances.stake, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+            ui->labelDelegated->setText(BitcoinUnits::formatWithPrivacy(unit, balances.delegated, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+            ui->labelImmatureDelegated->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_delegated, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+            ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance + balances.delegated, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n             ui->labelWatchAvailable->setText(BitcoinUnits::formatWithPrivacy(unit, balances.watch_only_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n             ui->labelWatchPending->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_watch_only_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n             ui->labelWatchImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_watch_only_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n@@ -198,17 +201,29 @@ void OverviewPage::setBalance(const interfaces::WalletBalances& balances)\n         ui->labelBalance->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n         ui->labelUnconfirmed->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n         ui->labelImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n-        ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+        ui->labelStake->setText(BitcoinUnits::formatWithPrivacy(unit, balances.stake, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+        ui->labelDelegated->setText(BitcoinUnits::formatWithPrivacy(unit, balances.delegated, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+        ui->labelImmatureDelegated->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_delegated, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n+        ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance + balances.delegated, BitcoinUnits::SeparatorStyle::ALWAYS, m_privacy));\n     }\n     // only show immature (newly mined) balance if it's non-zero, so as not to complicate things\n     // for the non-mining users\n     bool showImmature = balances.immature_balance != 0;\n+    bool showStake = balances.stake != 0;\n+    bool showDelegated = balances.delegated != 0;\n+    bool showImmatureDelegated = balances.immature_delegated != 0;\n     bool showWatchOnlyImmature = balances.immature_watch_only_balance != 0;\n \n     // for symmetry reasons also show immature label when the watch-only one is shown\n     ui->labelImmature->setVisible(showImmature || showWatchOnlyImmature);\n     ui->labelImmatureText->setVisible(showImmature || showWatchOnlyImmature);\n     ui->labelWatchImmature->setVisible(!walletModel->wallet().privateKeysDisabled() && showWatchOnlyImmature); // show watch-only immature balance\n+    ui->labelStake->setVisible(showStake);\n+    ui->labelStakeText->setVisible(showStake);\n+    ui->labelDelegated->setVisible(showDelegated);\n+    ui->labelDelegatedText->setVisible(showDelegated);\n+    ui->labelImmatureDelegated->setVisible(showImmatureDelegated);\n+    ui->labelImmatureDelegatedText->setVisible(showImmatureDelegated);\n }\n \n // show/hide watch-only labels\n@@ -221,8 +236,9 @@ void OverviewPage::updateWatchOnlyLabels(bool showWatchOnly)\n     ui->labelWatchPending->setVisible(showWatchOnly);   // show watch-only pending balance\n     ui->labelWatchTotal->setVisible(showWatchOnly);     // show watch-only total balance\n \n-    if (!showWatchOnly)\n+    if (!showWatchOnly) {\n         ui->labelWatchImmature->hide();\n+    }\n }\n \n void OverviewPage::setClientModel(ClientModel *model)"
      },
      {
        "sha": "2544864ff586f5416753a61d5a58b97e4e56389f",
        "filename": "src/qt/qswitchcontrol.cpp",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/qswitchcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/qswitchcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qswitchcontrol.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,90 @@\n+#include \"qswitchcontrol.h\"\r\n+\r\n+#include <QPushButton>\r\n+#include <QPropertyAnimation>\r\n+#include <QStyleOption>\r\n+#include <QPainter>\r\n+\r\n+static const QSize FrameSize = QSize(68, 30);\r\n+static const QSize SwitchSize = QSize (26, 26);\r\n+static const int SwitchOffset = (FrameSize.height() - SwitchSize.height()) / 2;\r\n+\r\n+static const QString CustomFrameOnStlye = QString(\"QAbstractButton { border: none; border-radius: %1; background-color: #4697d9;}\").arg(FrameSize.height() / 2);\r\n+static const QString CustomFrameOffStlye = QString(\"QAbstractButton { border: none; border-radius: %1; background-color: #a09f9d;}\").arg(FrameSize.height() / 2);\r\n+static const QString CustomButtonStlye = QString(\"QPushButton { min-width: 0em; border-radius: %1; background-color: white;}\").arg(SwitchSize.height() / 2);\r\n+\r\n+QSwitchControl::QSwitchControl(QWidget *parent):\r\n+    QAbstractButton(parent)\r\n+{\r\n+    this->setFixedSize(FrameSize);\r\n+\r\n+    pbSwitch = new QPushButton(this);\r\n+    pbSwitch->setFixedSize(SwitchSize);\r\n+    pbSwitch->setStyleSheet(CustomButtonStlye);\r\n+\r\n+    animation = new QPropertyAnimation(pbSwitch, \"geometry\", this);\r\n+    animation->setDuration(200);\r\n+\r\n+    connect(this, &QSwitchControl::mouseClicked, this, &QSwitchControl::onStatusChanged);\r\n+    connect(pbSwitch, &QPushButton::clicked, this, &QSwitchControl::onStatusChanged);\r\n+    setCheckable(true);\r\n+    setChecked(false);\r\n+}\r\n+\r\n+void QSwitchControl::setChecked(bool checked)\r\n+{\r\n+    if(checked)\r\n+    {\r\n+        pbSwitch->move(this->width() - pbSwitch->width() - SwitchOffset, this->y() + SwitchOffset);\r\n+        this->setStyleSheet(CustomFrameOnStlye);\r\n+    }\r\n+    else\r\n+    {\r\n+        pbSwitch->move(this->x() + SwitchOffset, this->y() + SwitchOffset);\r\n+        this->setStyleSheet(CustomFrameOffStlye);\r\n+    }\r\n+\r\n+    QAbstractButton::setChecked(checked);\r\n+}\r\n+\r\n+void QSwitchControl::onStatusChanged()\r\n+{\r\n+    bool checked = !isChecked();\r\n+\r\n+    QRect currentGeometry(pbSwitch->x(), pbSwitch->y(), pbSwitch->width(), pbSwitch->height());\r\n+\r\n+    if(animation->state() == QAbstractAnimation::Running)\r\n+        animation->stop();\r\n+\r\n+    if(checked)\r\n+    {\r\n+        this->setStyleSheet(CustomFrameOnStlye);\r\n+\r\n+        animation->setStartValue(currentGeometry);\r\n+        animation->setEndValue(QRect(this->width() - pbSwitch->width() - SwitchOffset, pbSwitch->y(), pbSwitch->width(), pbSwitch->height()));\r\n+    }\r\n+    else\r\n+    {\r\n+        this->setStyleSheet(CustomFrameOffStlye);\r\n+\r\n+        animation->setStartValue(currentGeometry);\r\n+        animation->setEndValue(QRect(SwitchOffset, pbSwitch->y(), pbSwitch->width(), pbSwitch->height()));\r\n+    }\r\n+    animation->start();\r\n+\r\n+    setChecked(checked);\r\n+    Q_EMIT clicked(checked);\r\n+}\r\n+\r\n+void QSwitchControl::mousePressEvent(QMouseEvent *)\r\n+{\r\n+    Q_EMIT mouseClicked();\r\n+}\r\n+\r\n+void QSwitchControl::paintEvent(QPaintEvent *)\r\n+{\r\n+    QStyleOption opt;\r\n+    opt.init(this);\r\n+    QPainter p(this);\r\n+    style()->drawPrimitive(QStyle::PE_Widget, &opt, &p, this);\r\n+}\r"
      },
      {
        "sha": "a1abe8d4eb2ea62716f35ca56af24bddaa961de6",
        "filename": "src/qt/qswitchcontrol.h",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/qswitchcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/qswitchcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qswitchcontrol.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,31 @@\n+#ifndef QSWITCHCONTROL_H\r\n+#define QSWITCHCONTROL_H\r\n+\r\n+#include <QAbstractButton>\r\n+\r\n+class QPushButton;\r\n+class QPropertyAnimation;\r\n+\r\n+class QSwitchControl : public QAbstractButton\r\n+{\r\n+    Q_OBJECT\r\n+public:\r\n+    QSwitchControl(QWidget *parent = nullptr);\r\n+\r\n+public Q_SLOTS:\r\n+    void setChecked(bool);\r\n+    void onStatusChanged();\r\n+\r\n+Q_SIGNALS:\r\n+    void mouseClicked();\r\n+\r\n+protected:\r\n+    void mousePressEvent(QMouseEvent *event) override;\r\n+    void paintEvent(QPaintEvent *event) override;\r\n+\r\n+private:\r\n+    QPushButton *pbSwitch;\r\n+    QPropertyAnimation *animation;\r\n+};\r\n+\r\n+#endif // QSWITCHCONTROL_H\r"
      },
      {
        "sha": "a9fc8ea89baff4371420e408106ac81f0a1d6acb",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -8,6 +8,7 @@\n #include <qt/forms/ui_receivecoinsdialog.h>\n \n #include <qt/addresstablemodel.h>\n+#include <qt/bitcoinaddresstypes.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n #include <qt/receiverequestdialog.h>\n@@ -92,10 +93,15 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n         // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n \n+        ui->addressTypeSelector->setModel(new BitcoinAddressTypes(this));\n+        \n+        // user explicitly set the type, use it\n         if (model->wallet().getDefaultAddressType() == OutputType::BECH32) {\n-            ui->useBech32->setCheckState(Qt::Checked);\n+            ui->addressTypeSelector->setCurrentIndex(BitcoinAddressType::NATIVE_SEGWIT);\n+        } else if (model->wallet().getDefaultAddressType() == OutputType::P2SH_SEGWIT){\n+            ui->addressTypeSelector->setCurrentIndex(BitcoinAddressType::NESTED_SEGWIT);\n         } else {\n-            ui->useBech32->setCheckState(Qt::Unchecked);\n+            ui->addressTypeSelector->setCurrentIndex(BitcoinAddressType::LEGACY);\n         }\n \n         // Set the button to be enabled or disabled based on whether the wallet can give out new addresses.\n@@ -148,13 +154,13 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n     QString label = ui->reqLabel->text();\n     /* Generate new receiving address */\n     OutputType address_type;\n-    if (ui->useBech32->isChecked()) {\n+    BitcoinAddressType address_type_selected = (BitcoinAddressType)ui->addressTypeSelector->currentIndex();\n+    if (BitcoinAddressType::NATIVE_SEGWIT == address_type_selected) {\n         address_type = OutputType::BECH32;\n+    } else if (BitcoinAddressType::NESTED_SEGWIT == address_type_selected) {\n+        address_type = OutputType::P2SH_SEGWIT;\n     } else {\n-        address_type = model->wallet().getDefaultAddressType();\n-        if (address_type == OutputType::BECH32) {\n-            address_type = OutputType::P2SH_SEGWIT;\n-        }\n+        address_type = OutputType::LEGACY;\n     }\n     address = model->getAddressTableModel()->addRow(AddressTableModel::Receive, label, \"\", address_type);\n "
      },
      {
        "sha": "9e1d417c0bee224177fd6469e2f38a53a23c2048",
        "filename": "src/qt/res/icons/bitcoin.icns",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin.icns",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin.icns",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.icns?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "660c0bd52a89d41e05bfe8debf781d70c5facac8",
        "filename": "src/qt/res/icons/bitcoin.ico",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.ico?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "dc6fb3236990d16141173ad1c22d8179560bbf49",
        "filename": "src/qt/res/icons/bitcoin.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.png?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "fbe7fc0b3bba81f52f954109c98246ae05cbfd5b",
        "filename": "src/qt/res/icons/bitcoin_testnet.ico",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin_testnet.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/bitcoin_testnet.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin_testnet.ico?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "a0adb25c48b88c7d7f1511935336ea15d699932e",
        "filename": "src/qt/res/icons/lock_staking.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/lock_staking.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/lock_staking.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/lock_staking.png?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "eac34ca0a115a1b03837443543bc2237bc3a69ab",
        "filename": "src/qt/res/icons/staking_off.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/staking_off.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/staking_off.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/staking_off.png?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "dd817f1344b0801246aa7f05359afdd1dd831277",
        "filename": "src/qt/res/icons/staking_on.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/staking_on.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/staking_on.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/staking_on.png?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "18df6d0a2e0bb35369beb0d819af361a4479fbdc",
        "filename": "src/qt/res/icons/tx_cold.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/tx_cold.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/icons/tx_cold.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/tx_cold.png?ref=d37d06b507803edc82fc79a15f512fc5fc21718d"
      },
      {
        "sha": "2a2fe520e576ca2ee3bb5e36306e513be3cd9236",
        "filename": "src/qt/res/src/bitcoin.svg",
        "status": "modified",
        "additions": 1,
        "deletions": 58,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/src/bitcoin.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/res/src/bitcoin.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/src/bitcoin.svg?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1,58 +1 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-\r\n-<!-- Designer: Jonas Schnelli\r\n-  \t License: MIT\r\n--->\r\n-\r\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n-<svg version=\"1.1\"\r\n-\t id=\"svg2\" sodipodi:docname=\"bitcoin-logo-noshadow.svg\" inkscape:version=\"0.48.2 r9819\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n-\t xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"1024px\" height=\"1024px\"\r\n-\t viewBox=\"-34 -34 580 580\" enable-background=\"new 0 0 1024 1024\" xml:space=\"preserve\">\r\n-\r\n-\t<!-- nice shadow with alpha 0.35 -->\r\n-\t<filter id=\"dropShadowAlpha\">\r\n-\t\t<feColorMatrix result=\"matrixOut\" in=\"SourceAlpha\" type=\"saturate\"\r\n-\t      values=\"0.1\" />\r\n-\t\t<feGaussianBlur in=\"matrixOut\" result=\"blur-out\" stdDeviation=\"6\" />\r\n-\t\t<feColorMatrix in=\"blur-out\" result=\"color-out\" type=\"matrix\"\r\n-\t\t      values=\"0 0 0 0   0\r\n-\t\t              0 0 0 0   0 \r\n-\t\t              0 0 0 0   0 \r\n-\t\t              0 0 0 0.35 0\"/>\r\n-\t\t<feBlend in=\"SourceGraphic\" in2=\"color-out\" mode=\"normal\" />\r\n-\t</filter>\r\n-\t\r\n-\t<g>\r\n-\t\t<!-- white background circle for making B not transparent but still keep inner shadows -->\r\n-\t\t<circle cx=\"255\" cy=\"255\" r=\"200\" stroke-width=\"2\" fill=\"white\"/>\r\n-\t\r\n-\t\t<radialGradient id=\"innerBtop\" cx=\"277.4905\" cy=\"196.4412\" r=\"34.3969\" gradientUnits=\"userSpaceOnUse\">\r\n-\t\t\t<stop offset=\"0\" style=\"stop-color:#F9AA4B\"/>\r\n-\t\t\t<stop offset=\"1\" style=\"stop-color:#F7931A\"/>\r\n-\t\t</radialGradient>\r\n-\t\t<path fill=\"url(#innerBtop)\" filter=\"url(#dropShadowAlpha)\" d=\"M254.647,174.6l-13.983,56.08c15.855,3.951,64.735,20.071,72.656-11.656\r\n-\t\t\tC321.568,185.928,270.503,178.552,254.647,174.6z\"/>\r\n-\t\t\r\n-\t\t<radialGradient id=\"innerBbottom\" cx=\"261.9153\" cy=\"284.5671\" r=\"39.8381\" gradientUnits=\"userSpaceOnUse\">\r\n-\t\t\t<stop offset=\"0\" style=\"stop-color:#F9AA4B\"/>\r\n-\t\t\t<stop offset=\"1\" style=\"stop-color:#F7931A\"/>\r\n-\t\t</radialGradient>\r\n-\t\t<path fill=\"url(#innerBbottom)\" filter=\"url(#dropShadowAlpha)\" d=\"M233.608,258.984l-15.425,61.832c19.04,4.729,77.769,23.584,86.448-11.296\r\n-\t\t\tC313.703,273.144,252.647,263.736,233.608,258.984z\"/>\r\n-\t\t\t\t\r\n-\t\t<radialGradient id=\"coinShape\" cx=\"256.0276\" cy=\"256.0027\" r=\"255.9878\" gradientUnits=\"userSpaceOnUse\">\r\n-\t\t\t<stop offset=\"0\" style=\"stop-color:#F9AA4B\"/>\r\n-\t\t\t<stop offset=\"1\" style=\"stop-color:#F7931A\"/>\r\n-\t\t</radialGradient>\r\n-\t\t<path fill=\"url(#coinShape)\" filter=\"url(#dropShadowAlpha)\" d=\"M317.871,7.656c-137.12-34.192-276.024,49.28-310.2,186.44\r\n-\t\t\tc-34.208,137.136,49.256,276.048,186.36,310.24c137.16,34.199,276.063-49.265,310.256-186.408\r\n-\t\t\tC538.479,180.776,455.023,41.848,317.871,7.656z M368.807,219.528c-3.688,24.936-17.512,37.008-35.864,41.24\r\n-\t\t\tc25.2,13.12,38.024,33.239,25.809,68.12c-15.16,43.319-51.176,46.976-99.072,37.912l-11.624,46.584l-28.088-7l11.472-45.96\r\n-\t\t\tc-7.279-1.809-14.72-3.729-22.384-5.809l-11.512,46.177l-28.056-7l11.624-46.673c-6.561-1.68-13.225-3.464-20.024-5.168\r\n-\t\t\tl-36.552-9.111l13.943-32.152c0,0,20.696,5.504,20.416,5.096c7.952,1.969,11.48-3.216,12.872-6.672l18.368-73.64l0.048-0.2\r\n-\t\t\tl13.104-52.568c0.344-5.968-1.712-13.496-13.088-16.336c0.439-0.296-20.4-5.072-20.4-5.072l7.472-30l38.736,9.673l-0.032,0.144\r\n-\t\t\tc5.824,1.448,11.824,2.824,17.937,4.216L245.423,89.2l28.072,7l-11.28,45.224c7.536,1.721,15.12,3.456,22.504,5.297l11.2-44.929\r\n-\t\t\tl28.088,7l-11.504,46.145C347.967,167.152,373.904,185.464,368.807,219.528z\"/>\r\n-\t</g>\r\n-</svg>\r\n+<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 220.23 220.23\"><defs><style>.cls-1{fill:#f18c21;}.cls-2{fill:#fff;}.cls-3{fill:#fffffd;}</style></defs><title>Logo Bitcoin</title><circle class=\"cls-1\" cx=\"110.12\" cy=\"110.12\" r=\"110.12\"/><path class=\"cls-2\" d=\"M448.1,275.31c-2,21-17.72,26.69-40.14,27.92l0,22.16-13.35,0,.07-21.85c-3.47,0-7,0-10.68-.1l0,21.95-13.36-.05.07-22.18c-3.13,0-6.34-.07-9.54-.07L343.69,303l1.85-11,.81-4.74h37.93c.69,0,1.48,0,2.38,0,.73,0,1.52,0,2.37,0,11.62.12,32.69-.42,32.69-14.68,0-5.27-2.61-8.71-6.52-10.92a44.16,44.16,0,0,0,13.73-5.14,26,26,0,0,0,6.27-4.75c.47-.47.92-.95,1.35-1.45C444.73,254.48,449.36,262,448.1,275.31Z\" transform=\"translate(-285.88 -142.87)\"/><path class=\"cls-3\" d=\"M440.46,225.23a22,22,0,0,0-.61-3.8c-3.18-12.91-16-17.46-31.75-18.88l0-21.93-13.33,0L394.77,202c-3.51,0-7.12.07-10.68.12l.08-21.47-13.36,0-.07,21.95c-2.07.05-4.13.09-6.15.09-.78,0-1.56,0-2.32,0v0l-18.41-.05,0,14.26s4.3-.07,7.17-.07a22.46,22.46,0,0,1,2.54.07c5.41,0,7.14,3.18,7.64,5.89l0,25,0,34.87h23.17l.05-24.6h.17c1,0,6.5.74,13.57.74,1.92,0,4-.05,6.05-.19,7.57-.48,15.94-2,22.49-6a21.25,21.25,0,0,0,5.24-3.93C437.29,243,441.32,234.1,440.46,225.23Zm-50.24,19.26c-2.38,0-4.44-.07-5.89-.07l.07-26.64c1.74,0,4.32-.12,7.29-.12,9.89,0,23.91,1.37,23.89,13.5S400.13,244.49,390.22,244.49Z\" transform=\"translate(-285.88 -142.87)\"/></svg>\n\\ No newline at end of file"
      },
      {
        "sha": "950a5fb913d8fd11b65b921fa69296f1305af663",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 6,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -54,15 +54,16 @@ int getIndexForConfTarget(int target) {\n     return confTargets.size() - 1;\n }\n \n-SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n+SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent, bool _forDelegation) :\n     QDialog(parent),\n     ui(new Ui::SendCoinsDialog),\n     clientModel(nullptr),\n     model(nullptr),\n     m_coin_control(new CCoinControl),\n     fNewRecipientAllowed(true),\n     fFeeMinimized(true),\n-    platformStyle(_platformStyle)\n+    platformStyle(_platformStyle),\n+    forDelegation(_forDelegation)\n {\n     ui->setupUi(this);\n \n@@ -76,6 +77,12 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n         ui->sendButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/send\"));\n     }\n \n+    if (forDelegation)\n+    {\n+        ui->sendButton->setText(\"&Delegate\");\n+        ui->addButton->hide();\n+    }\n+\n     GUIUtil::setupAddressWidget(ui->lineEditCoinControlChange, this);\n \n     addEntry();\n@@ -160,6 +167,7 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         connect(_model, &WalletModel::balanceChanged, this, &SendCoinsDialog::setBalance);\n         connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::updateDisplayUnit);\n         updateDisplayUnit();\n+        connect(ui->checkboxIncludeDelegations, &QCheckBox::stateChanged, this, &SendCoinsDialog::updateBalanceWithDelegations);\n \n         // Coin Control\n         connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n@@ -263,8 +271,9 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n     WalletModel::SendCoinsReturn prepareStatus;\n \n     updateCoinControlState(*m_coin_control);\n+    const bool fIncludeDelegations = (ui->checkboxIncludeDelegations->checkState() == Qt::Checked);\n \n-    prepareStatus = model->prepareTransaction(*m_current_transaction, *m_coin_control);\n+    prepareStatus = model->prepareTransaction(*m_current_transaction, *m_coin_control, fIncludeDelegations);\n \n     // process prepareStatus and on error generate message shown to user\n     processSendCoinsReturn(prepareStatus,\n@@ -373,6 +382,12 @@ void SendCoinsDialog::on_sendButton_clicked()\n     if(!model || !model->getOptionsModel())\n         return;\n \n+    if (forDelegation && model->wallet().wallet()->GetLastBlockHeight() < Params().GetConsensus().BTCColdStakeEnableHeight)\n+    {\n+        Q_EMIT message(tr(\"Cold Staking not enabled\"), tr(\"Cold staking is enabled at block %1\").arg(Params().GetConsensus().BTCColdStakeEnableHeight), CClientUIInterface::MSG_ERROR);\n+        return;\n+    }\n+\n     QString question_string, informative_text, detailed_text;\n     if (!PrepareSendText(question_string, informative_text, detailed_text)) return;\n     assert(m_current_transaction);\n@@ -491,7 +506,7 @@ void SendCoinsDialog::accept()\n \n SendCoinsEntry *SendCoinsDialog::addEntry()\n {\n-    SendCoinsEntry *entry = new SendCoinsEntry(platformStyle, this);\n+    SendCoinsEntry *entry = new SendCoinsEntry(platformStyle, this, forDelegation);\n     entry->setModel(model);\n     ui->entries->addWidget(entry);\n     connect(entry, &SendCoinsEntry::removeEntry, this, &SendCoinsDialog::removeEntry);\n@@ -608,6 +623,9 @@ void SendCoinsDialog::setBalance(const interfaces::WalletBalances& balances)\n             balance = balances.watch_only_balance;\n             ui->labelBalanceName->setText(tr(\"Watch-only balance:\"));\n         }\n+        if (ui->checkboxIncludeDelegations->checkState() == Qt::Checked) {\n+            balance += balances.delegated;\n+        }\n         ui->labelBalance->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), balance));\n     }\n }\n@@ -619,6 +637,11 @@ void SendCoinsDialog::updateDisplayUnit()\n     updateSmartFeeLabel();\n }\n \n+void SendCoinsDialog::updateBalanceWithDelegations()\n+{\n+    setBalance(model->wallet().getBalances());\n+}\n+\n void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn &sendCoinsReturn, const QString &msgArg)\n {\n     QPair<QString, CClientUIInterface::MessageBoxFlags> msgParams;\n@@ -655,6 +678,14 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n         msgParams.first = tr(\"Payment request expired.\");\n         msgParams.second = CClientUIInterface::MSG_ERROR;\n         break;\n+    case WalletModel::OwnerAddressNotInWallet:\n+        msgParams.first = tr(\"The provided owner address is not present in this wallet. WARNING: Only the owner of the key to owner address will be allowed to spend these coins after the delegation.\");\n+        msgParams.second = CClientUIInterface::MSG_ERROR;\n+        break;\n+    case WalletModel::StakerAddressInWallet:\n+        msgParams.first = tr(\"The provided staker address is present in this wallet. You can already stake the coins, there is no need to delegate them to yourself.\");\n+        msgParams.second = CClientUIInterface::MSG_ERROR;\n+        break;\n     // included to prevent a compiler warning.\n     case WalletModel::OK:\n     default:\n@@ -689,9 +720,10 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n {\n     // Include watch-only for wallets without private key\n     m_coin_control->fAllowWatchOnly = model->wallet().privateKeysDisabled();\n+    const bool fIncludeDelegations = (ui->checkboxIncludeDelegations->checkState() == Qt::Checked);\n \n     // Calculate available amount to send.\n-    CAmount amount = model->wallet().getAvailableBalance(*m_coin_control);\n+    CAmount amount = model->wallet().getAvailableBalance(*m_coin_control, fIncludeDelegations);\n     for (int i = 0; i < ui->entries->count(); ++i) {\n         SendCoinsEntry* e = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n         if (e && !e->isHidden() && e != entry) {\n@@ -940,7 +972,7 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     if (m_coin_control->HasSelected())\n     {\n         // actual coin control calculation\n-        CoinControlDialog::updateLabels(*m_coin_control, model, this);\n+        CoinControlDialog::updateLabels(*m_coin_control, model, this, forDelegation);\n \n         // show coin control stats\n         ui->labelCoinControlAutomaticallySelected->hide();"
      },
      {
        "sha": "d44e88c48db082097591117cc7d4be4b8bf165c1",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -33,7 +33,7 @@ class SendCoinsDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent = nullptr, bool forDelegation = false);\n     ~SendCoinsDialog();\n \n     void setClientModel(ClientModel *clientModel);\n@@ -67,6 +67,7 @@ public Q_SLOTS:\n     bool fNewRecipientAllowed;\n     bool fFeeMinimized;\n     const PlatformStyle *platformStyle;\n+    bool forDelegation;\n \n     // Process WalletModel::SendCoinsReturn and generate a pair consisting\n     // of a message and message flags for use in Q_EMIT message().\n@@ -86,6 +87,7 @@ private Q_SLOTS:\n     void removeEntry(SendCoinsEntry* entry);\n     void useAvailableBalance(SendCoinsEntry* entry);\n     void updateDisplayUnit();\n+    void updateBalanceWithDelegations();\n     void coinControlFeatureChanged(bool);\n     void coinControlButtonClicked();\n     void coinControlChangeChecked(int);"
      },
      {
        "sha": "3dd3cfc7a4f0f057e37747d82496f0b37dca0cb5",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 5,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -19,11 +19,12 @@\n #include <QApplication>\n #include <QClipboard>\n \n-SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *parent) :\n+SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *parent, bool _forDelegation) :\n     QStackedWidget(parent),\n     ui(new Ui::SendCoinsEntry),\n     model(nullptr),\n-    platformStyle(_platformStyle)\n+    platformStyle(_platformStyle),\n+    forDelegation(_forDelegation)\n {\n     ui->setupUi(this);\n \n@@ -32,6 +33,16 @@ SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *par\n     ui->deleteButton->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n     ui->deleteButton_is->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n     ui->deleteButton_s->setIcon(platformStyle->SingleColorIcon(\":/icons/remove\"));\n+    ui->ownerAddressBookButton->setIcon(platformStyle->SingleColorIcon(\":/icons/address-book\"));\n+    ui->ownerPasteButton->setIcon(platformStyle->SingleColorIcon(\":/icons/editpaste\"));\n+\n+    if (!forDelegation)\n+    {\n+        ui->ownerLabel->hide();\n+        ui->ownerAddress->hide();\n+        ui->ownerAddressBookButton->hide();\n+        ui->ownerPasteButton->hide();\n+    }\n \n     setCurrentWidget(ui->SendCoins);\n \n@@ -40,6 +51,11 @@ SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *par\n \n     // normal bitcoin address field\n     GUIUtil::setupAddressWidget(ui->payTo, this);\n+    GUIUtil::setupAddressWidget(ui->ownerAddress, this);\n+\n+    if (forDelegation)\n+        ui->payToLabel->setText(\"&Staker Address:\");\n+\n     // just a label for displaying bitcoin address(es)\n     ui->payTo_is->setFont(GUIUtil::fixedPitchFont());\n \n@@ -63,6 +79,12 @@ void SendCoinsEntry::on_pasteButton_clicked()\n     ui->payTo->setText(QApplication::clipboard()->text());\n }\n \n+void SendCoinsEntry::on_ownerPasteButton_clicked()\n+{\n+    // Paste text from clipboard into recipient field\n+    ui->ownerAddress->setText(QApplication::clipboard()->text());\n+}\n+\n void SendCoinsEntry::on_addressBookButton_clicked()\n {\n     if(!model)\n@@ -76,11 +98,29 @@ void SendCoinsEntry::on_addressBookButton_clicked()\n     }\n }\n \n+void SendCoinsEntry::on_ownerAddressBookButton_clicked()\n+{\n+    if(!model)\n+        return;\n+    AddressBookPage dlg(platformStyle, AddressBookPage::ForSelection, AddressBookPage::ReceivingTab, this);\n+    dlg.setModel(model->getAddressTableModel());\n+    if(dlg.exec())\n+    {\n+        ui->ownerAddress->setText(dlg.getReturnValue());\n+        ui->payAmount->setFocus();\n+    }\n+}\n+\n void SendCoinsEntry::on_payTo_textChanged(const QString &address)\n {\n     updateLabel(address);\n }\n \n+void SendCoinsEntry::on_ownerAddress_textChanged(const QString &address)\n+{\n+    updateLabel(address);\n+}\n+\n void SendCoinsEntry::setModel(WalletModel *_model)\n {\n     this->model = _model;\n@@ -137,10 +177,27 @@ bool SendCoinsEntry::validate(interfaces::Node& node)\n     // Check input validity\n     bool retval = true;\n \n-    if (!model->validateAddress(ui->payTo->text()))\n+    if (forDelegation)\n     {\n-        ui->payTo->setValid(false);\n-        retval = false;\n+        if (!model->validateAddress(ui->payTo->text()))\n+        {\n+            ui->payTo->setValid(false);\n+            retval = false;\n+        }\n+\n+        if (!model->validateAddress(ui->ownerAddress->text()))\n+        {\n+            ui->ownerAddress->setValid(false);\n+            retval = false;\n+        }\n+    }\n+    else\n+    {\n+        if (!model->validateAddress(ui->payTo->text()))\n+        {\n+            ui->payTo->setValid(false);\n+            retval = false;\n+        }\n     }\n \n     if (!ui->payAmount->validate())\n@@ -169,6 +226,8 @@ SendCoinsRecipient SendCoinsEntry::getValue()\n     recipient.address = ui->payTo->text();\n     recipient.label = ui->addAsLabel->text();\n     recipient.amount = ui->payAmount->value();\n+    recipient.isP2CS = forDelegation;\n+    recipient.ownerAddress = ui->ownerAddress->text();\n     recipient.message = ui->messageTextLabel->text();\n     recipient.fSubtractFeeFromAmount = (ui->checkboxSubtractFeeFromAmount->checkState() == Qt::Checked);\n "
      },
      {
        "sha": "8a819bb1487f53675196e5174cd19c32d20a9275",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -30,7 +30,7 @@ class SendCoinsEntry : public QStackedWidget\n     Q_OBJECT\n \n public:\n-    explicit SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *parent = nullptr, bool forDelegation = false);\n     ~SendCoinsEntry();\n \n     void setModel(WalletModel *model);\n@@ -65,15 +65,19 @@ private Q_SLOTS:\n     void deleteClicked();\n     void useAvailableBalanceClicked();\n     void on_payTo_textChanged(const QString &address);\n+    void on_ownerAddress_textChanged(const QString &address);\n     void on_addressBookButton_clicked();\n+    void on_ownerAddressBookButton_clicked();\n     void on_pasteButton_clicked();\n+    void on_ownerPasteButton_clicked();\n     void updateDisplayUnit();\n \n private:\n     SendCoinsRecipient recipient;\n     Ui::SendCoinsEntry *ui;\n     WalletModel *model;\n     const PlatformStyle *platformStyle;\n+    bool forDelegation;\n \n     bool updateLabel(const QString &address);\n };"
      },
      {
        "sha": "2b815da1642319b18c43b0692413701cf6731558",
        "filename": "src/qt/sendcoinsrecipient.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsrecipient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/sendcoinsrecipient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsrecipient.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -39,6 +39,10 @@ class SendCoinsRecipient\n     // Empty if no authentication or invalid signature/cert/etc.\n     QString authenticatedMerchant;\n \n+    // Cold staking.\n+    bool isP2CS = false;\n+    QString ownerAddress;\n+\n     bool fSubtractFeeFromAmount; // memory only\n \n     static const int CURRENT_VERSION = 1;"
      },
      {
        "sha": "3d82414db4e10c73895253e37e5872776f7c8fea",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -41,7 +41,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     // define text to place\n     QString titleText       = PACKAGE_NAME;\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QString::fromUtf8(CopyrightHolders(strprintf(\"\\xc2\\xA9 %u-%u \", 2009, COPYRIGHT_YEAR)).c_str());\n+    QString copyrightText   = QString::fromUtf8(CopyrightHolders(strprintf(\"\\xc2\\xA9 %u \", COPYRIGHT_YEAR)).c_str());\n     QString titleAddText    = networkStyle->getTitleAddText();\n \n     QString font            = QApplication::font().toString();\n@@ -97,7 +97,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n \n     // draw copyright stuff\n     {\n-        pixPaint.setFont(QFont(font, 10*fontFactor));\n+        pixPaint.setFont(QFont(font, 12*fontFactor));\n         const int x = pixmap.width()/devicePixelRatio-titleTextWidth-paddingRight;\n         const int y = paddingTop+titleCopyrightVSpace;\n         QRect copyrightRect(x, y, pixmap.width() - x - paddingRight, pixmap.height() - y);"
      },
      {
        "sha": "29fdd21842d3f6201ce672314eab34cf8d81198a",
        "filename": "src/qt/stakepage.cpp",
        "status": "added",
        "additions": 279,
        "deletions": 0,
        "changes": 279,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/stakepage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/stakepage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/stakepage.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,279 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/stakepage.h>\n+#include <qt/forms/ui_stakepage.h>\n+\n+#include <qt/addresstablemodel.h>\n+#include <qt/bitcoinunits.h>\n+#include <qt/clientmodel.h>\n+#include <qt/guiconstants.h>\n+#include <qt/guiutil.h>\n+#include <qt/optionsmodel.h>\n+#include <qt/platformstyle.h>\n+#include <qt/transactionfilterproxy.h>\n+#include <qt/transactiontablemodel.h>\n+#include <qt/receiverequestdialog.h>\n+#include <qt/recentrequeststablemodel.h>\n+#include <qt/walletmodel.h>\n+#include <interfaces/wallet.h>\n+#include <interfaces/node.h>\n+#include <qt/transactiondescdialog.h>\n+#include <qt/transactionview.h>\n+#include <qt/sendcoinsdialog.h>\n+#include <amount.h>\n+#include <miner.h>\n+#include <wallet/wallet.h>\n+\n+#include <QSortFilterProxyModel>\n+#include <QDialog>\n+\n+Q_DECLARE_METATYPE(interfaces::WalletBalances)\n+\n+StakePage::StakePage(const PlatformStyle *_platformStyle, QWidget *parent) :\n+    QWidget(parent),\n+    ui(new Ui::StakePage),\n+    clientModel(nullptr),\n+    walletModel(nullptr),\n+    platformStyle(_platformStyle),\n+    transactionView(nullptr),\n+    receivedDelegationsView(nullptr),\n+    myDelegationsView(nullptr),\n+    sendCoinsDialog(nullptr),\n+    m_subsidy(0),\n+    m_networkWeight(0),\n+    m_expectedAnnualROI(0)\n+{\n+    ui->setupUi(this);\n+\n+    if (!_platformStyle->getImagesOnButtons()) {\n+        ui->newAddressButton->setIcon(QIcon());\n+    } else {\n+        ui->newAddressButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"));\n+    }\n+\n+    ui->checkStake->setEnabled(gArgs.GetBoolArg(\"-staking\", DEFAULT_STAKE));\n+    transactionView = new TransactionView(platformStyle, this, true);\n+    ui->frameStakeRecords->layout()->addWidget(transactionView);\n+\n+    receivedDelegationsView = new TransactionView(platformStyle, this, true);\n+    ui->frameTabReceivedDelegations->layout()->addWidget(receivedDelegationsView);\n+    myDelegationsView = new TransactionView(platformStyle, this, true, true);\n+    ui->frameTabMyDelegations->layout()->addWidget(myDelegationsView);\n+    sendCoinsDialog = new SendCoinsDialog(platformStyle, nullptr, true);\n+    ui->tab_create_delegation->layout()->addWidget(sendCoinsDialog);\n+}\n+\n+StakePage::~StakePage()\n+{\n+    delete ui;\n+    delete transactionView;\n+    delete receivedDelegationsView;\n+    delete myDelegationsView;\n+    delete sendCoinsDialog;\n+}\n+\n+void StakePage::setClientModel(ClientModel *_clientModel)\n+{\n+    this->clientModel = _clientModel;\n+\n+    if (_clientModel) {\n+        connect(_clientModel, &ClientModel::numBlocksChanged, this, &StakePage::numBlocksChanged);\n+        int height = _clientModel->node().getNumBlocks();\n+        ui->labelHeight->setText(QString::number(height));\n+        m_subsidy = _clientModel->node().getBlockSubsidy(height);\n+        m_networkWeight = _clientModel->node().getNetworkStakeWeight();\n+        m_expectedAnnualROI = _clientModel->node().getEstimatedAnnualROI();\n+        updateNetworkWeight();\n+        updateAnnualROI();\n+    }\n+\n+    this->sendCoinsDialog->setClientModel(_clientModel);\n+}\n+\n+void StakePage::setWalletModel(WalletModel *model)\n+{\n+    this->walletModel = model;\n+    if(model && model->getOptionsModel())\n+    {\n+        transactionView->setModel(model);\n+        transactionView->chooseType(4); // Mined blocks\n+\n+        receivedDelegationsView->setModel(model);\n+        receivedDelegationsView->chooseType(8); // The staker sees received delegations\n+\n+        myDelegationsView->setModel(model);\n+        myDelegationsView->chooseType(7); // My delegations to others\n+\n+        ui->checkStake->setChecked(model->wallet().getEnabledStaking());\n+        // Set the button to be enabled or disabled based on whether the wallet can give out new addresses.\n+        ui->newAddressButton->setEnabled(model->wallet().canGetAddresses());\n+\n+        // Keep up to date with wallet\n+        interfaces::Wallet& wallet = model->wallet();\n+        interfaces::WalletBalances balances = wallet.getBalances();\n+        setBalance(balances);\n+        connect(model, &WalletModel::balanceChanged, this, &StakePage::setBalance);\n+\n+        // Re-emit coinsSent signal from sendCoinsDialog.\n+        connect(sendCoinsDialog, &SendCoinsDialog::coinsSent, this, &StakePage::coinsSent);\n+\n+        // Re-emit message signal from sendCoinsDialog.\n+        connect(sendCoinsDialog, &SendCoinsDialog::message, this, &StakePage::message);\n+\n+        connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &StakePage::updateDisplayUnit);\n+\n+        // Enable/disable the receive button if the wallet is now able/unable to give out new addresses.\n+        connect(model, &WalletModel::canGetAddressesChanged, [this] {\n+            ui->newAddressButton->setEnabled(walletModel->wallet().canGetAddresses());\n+        });\n+\n+        connect(model->getOptionsModel(), &OptionsModel::coldStakerControlFeaturesChanged, this, &StakePage::coldStakerControlFeaturesChanged);\n+        coldStakerControlFeaturesChanged(model->getOptionsModel()->getColdStakerControlFeatures());\n+    }\n+\n+    this->sendCoinsDialog->setModel(model);\n+\n+    // update the display unit, to not use the default (\"BTC\")\n+    updateDisplayUnit();\n+}\n+\n+void StakePage::setBalance(const interfaces::WalletBalances& balances)\n+{\n+    int unit = walletModel->getOptionsModel()->getDisplayUnit();\n+    m_balances = balances;\n+    ui->labelAssets->setText(BitcoinUnits::formatWithUnit(unit, balances.stakeable, false, BitcoinUnits::SeparatorStyle::ALWAYS));\n+    ui->labelOwnedAssets->setText(BitcoinUnits::formatWithUnit(unit, balances.stakeable - balances.stakeable_delegations, false, BitcoinUnits::SeparatorStyle::ALWAYS));\n+    ui->labelDelegations->setText(BitcoinUnits::formatWithUnit(unit, balances.stakeable_delegations, false, BitcoinUnits::SeparatorStyle::ALWAYS));\n+    ui->labelAssetsImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_stakeable, false, BitcoinUnits::SeparatorStyle::ALWAYS));\n+    ui->labelAssetsImmature->setVisible(balances.immature_stakeable != 0);\n+    ui->labelAssetsImmatureText->setVisible(balances.immature_stakeable != 0);\n+    ui->labelStake->setText(BitcoinUnits::formatWithUnit(unit, balances.stake, false, BitcoinUnits::SeparatorStyle::ALWAYS));\n+    ui->labelDelegatedAssets->setText(BitcoinUnits::formatWithUnit(unit, balances.delegated + balances.immature_delegated, false, BitcoinUnits::SeparatorStyle::ALWAYS));\n+}\n+\n+void StakePage::on_checkStake_clicked(bool checked)\n+{\n+    if(!walletModel)\n+        return;\n+\n+    this->walletModel->wallet().setEnabledStaking(checked);\n+\n+    if(checked && WalletModel::Locked == walletModel->getEncryptionStatus())\n+        Q_EMIT requireUnlock(true);\n+}\n+\n+void StakePage::updateDisplayUnit()\n+{\n+    if(walletModel && walletModel->getOptionsModel())\n+    {\n+        if (m_balances.balance != -1) {\n+            setBalance(m_balances);\n+        }\n+        updateSubsidy();\n+    }\n+}\n+\n+void StakePage::numBlocksChanged(int count, const QDateTime &, double, bool headers)\n+{\n+    if(!headers && clientModel && walletModel)\n+    {\n+        ui->labelHeight->setText(BitcoinUnits::formatInt(count));\n+        m_subsidy = clientModel->node().getBlockSubsidy(count);\n+        m_networkWeight = clientModel->node().getNetworkStakeWeight();\n+        m_expectedAnnualROI = clientModel->node().getEstimatedAnnualROI();\n+        updateSubsidy();\n+        updateNetworkWeight();\n+        updateAnnualROI();\n+    }\n+}\n+\n+void StakePage::updateSubsidy()\n+{\n+    int unit = walletModel->getOptionsModel()->getDisplayUnit();\n+    QString strSubsidy = BitcoinUnits::formatWithUnit(unit, m_subsidy, false, BitcoinUnits::SeparatorStyle::ALWAYS) + \"/Block\";\n+    ui->labelReward->setText(strSubsidy);\n+}\n+\n+void StakePage::updateNetworkWeight()\n+{\n+    ui->labelWeight->setText(BitcoinUnits::formatInt(m_networkWeight / COIN));\n+}\n+\n+void StakePage::updateAnnualROI()\n+{\n+    ui->labelROI->setText(QString::number(m_expectedAnnualROI, 'f', 2) + \"%\");\n+}\n+\n+void StakePage::updateEncryptionStatus()\n+{\n+    if(!walletModel)\n+        return;\n+\n+    int status = walletModel->getEncryptionStatus();\n+    switch(status)\n+    {\n+    case WalletModel::Locked:\n+        bool checked = ui->checkStake->isChecked();\n+        if(checked) ui->checkStake->onStatusChanged();\n+        break;\n+    }\n+}\n+\n+void StakePage::on_newAddressButton_clicked()\n+{\n+    if(!walletModel || !walletModel->getOptionsModel() || !walletModel->getAddressTableModel() || !walletModel->getRecentRequestsTableModel())\n+        return;\n+\n+    QString address;\n+    QString label = ui->newAddressLabel->text();\n+    /* Generate new staking address */\n+    OutputType address_type = OutputType::LEGACY;\n+    address = walletModel->getAddressTableModel()->addRow(AddressTableModel::Receive, label, \"\", address_type);\n+\n+    switch(walletModel->getAddressTableModel()->getEditStatus())\n+    {\n+    case AddressTableModel::EditStatus::OK: {\n+        // Success\n+        SendCoinsRecipient info(address, label, 0, \"\");\n+        ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n+        dialog->setAttribute(Qt::WA_DeleteOnClose);\n+        dialog->setModel(walletModel);\n+        dialog->setInfo(info);\n+        dialog->show();\n+        break;\n+    }\n+    case AddressTableModel::EditStatus::WALLET_UNLOCK_FAILURE:\n+        QMessageBox::critical(this, windowTitle(),\n+            tr(\"Could not unlock wallet.\"),\n+            QMessageBox::Ok, QMessageBox::Ok);\n+        break;\n+    case AddressTableModel::EditStatus::KEY_GENERATION_FAILURE:\n+        QMessageBox::critical(this, windowTitle(),\n+            tr(\"Could not generate new %1 address\").arg(QString::fromStdString(FormatOutputType(address_type))),\n+            QMessageBox::Ok, QMessageBox::Ok);\n+        break;\n+    // These aren't valid return values for our action\n+    case AddressTableModel::EditStatus::INVALID_ADDRESS:\n+    case AddressTableModel::EditStatus::DUPLICATE_ADDRESS:\n+    case AddressTableModel::EditStatus::NO_CHANGES:\n+        assert(false);\n+    }\n+    ui->newAddressLabel->setText(\"\");\n+}\n+\n+// ColdStake Control: settings menu - cold staker control enabled/disabled by user\n+void StakePage::coldStakerControlFeaturesChanged(bool checked)\n+{\n+    int index = ui->tabWidget->indexOf(ui->tab_received_delegations);\n+\n+    if (checked && index == -1)\n+    {\n+        ui->tabWidget->addTab(ui->tab_received_delegations, \"Received Delegations\");\n+    }\n+    else if (!checked && index != -1)\n+    {\n+        ui->tabWidget->removeTab(index);\n+    }\n+}"
      },
      {
        "sha": "b16509f01c1c57c01b17f2864f8c556f1a24d70a",
        "filename": "src/qt/stakepage.h",
        "status": "added",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/stakepage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/stakepage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/stakepage.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_STAKEPAGE_H\n+#define BITCOIN_QT_STAKEPAGE_H\n+\n+#include <interfaces/wallet.h>\n+#include <qt/sendcoinsdialog.h>\n+\n+#include <QWidget>\n+#include <memory>\n+\n+class ClientModel;\n+class TransactionFilterProxy;\n+class PlatformStyle;\n+class WalletModel;\n+class TransactionView;\n+\n+namespace Ui {\n+    class StakePage;\n+}\n+\n+QT_BEGIN_NAMESPACE\n+class QModelIndex;\n+QT_END_NAMESPACE\n+\n+/** Stake page widget */\n+class StakePage : public QWidget\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit StakePage(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    ~StakePage();\n+\n+    void setClientModel(ClientModel *clientModel);\n+    void setWalletModel(WalletModel *walletModel);\n+\n+public Q_SLOTS:\n+    void setBalance(const interfaces::WalletBalances& balances);\n+    void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers);\n+    void updateEncryptionStatus();\n+\n+Q_SIGNALS:\n+    void requireUnlock(bool fromMenu);\n+    void coinsSent(const uint256& txid);\n+    void message(const QString &title, const QString &message, unsigned int style);\n+\n+private:\n+    Ui::StakePage *ui;\n+    ClientModel *clientModel;\n+    WalletModel *walletModel;\n+    const PlatformStyle* const platformStyle;\n+    TransactionView* transactionView;\n+    TransactionView* receivedDelegationsView;\n+    TransactionView* myDelegationsView;\n+    SendCoinsDialog* sendCoinsDialog;\n+    interfaces::WalletBalances m_balances;\n+    int64_t m_subsidy;\n+    uint64_t m_networkWeight;\n+    double m_expectedAnnualROI;\n+\n+private Q_SLOTS:\n+    void updateDisplayUnit();\n+    void on_checkStake_clicked(bool checked);\n+    void on_newAddressButton_clicked();\n+    void coldStakerControlFeaturesChanged(bool);\n+\n+private:\n+    void updateSubsidy();\n+    void updateNetworkWeight();\n+    void updateAnnualROI();\n+};\n+\n+#endif // BITCOIN_QT_STAKEPAGE_H"
      },
      {
        "sha": "d2f4fd582169dc08f7df9d9656e255d3a749cb08",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 6,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -103,7 +103,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n     //\n     // From\n     //\n-    if (wtx.is_coinbase)\n+    if (wtx.is_coinbase || wtx.is_coinstake)\n     {\n         strHTML += \"<b>\" + tr(\"Source\") + \":</b> \" + tr(\"Generated\") + \"<br>\";\n     }\n@@ -157,7 +157,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n     //\n     // Amount\n     //\n-    if (wtx.is_coinbase && nCredit == 0)\n+    if ((wtx.is_coinbase || wtx.is_coinstake) && nCredit == 0)\n     {\n         //\n         // Coinbase\n@@ -174,10 +174,27 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n     }\n     else if (nNet > 0)\n     {\n-        //\n-        // Credit\n-        //\n-        strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nNet) + \"<br>\";\n+        if (wtx.is_coinstake)\n+        {\n+            //\n+            // Credit\n+            //\n+            strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nCredit);\n+            if (status.blocks_to_maturity > 0)\n+                strHTML += \" (\" + tr(\"matures in %n more block(s)\", \"\", status.blocks_to_maturity) + \")\";\n+            strHTML += \"<br>\";\n+            //\n+            // Debit\n+            //\n+            strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -nDebit) + \"<br>\";\n+        }\n+        else\n+        {\n+            //\n+            // Credit\n+            //\n+            strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nNet) + \"<br>\";\n+        }\n     }\n     else\n     {"
      },
      {
        "sha": "ba83577fbf2d0e54bc4f52dffc8c6a353119bae2",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 161,
        "deletions": 10,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -8,24 +8,28 @@\n #include <interfaces/wallet.h>\n #include <key_io.h>\n #include <wallet/ismine.h>\n+#include <wallet/wallet.h>\n \n #include <stdint.h>\n \n #include <QDateTime>\n \n /* Return positive answer if transaction should be shown in list.\n  */\n-bool TransactionRecord::showTransaction()\n+bool TransactionRecord::showTransaction(const interfaces::WalletTx& wtx)\n {\n-    // There are currently no cases where we hide transactions, but\n-    // we may want to use this in the future for things like RBF.\n+    // Ensures we show generated coins / mined transactions at depth 1\n+    if((wtx.is_coinbase || wtx.is_coinstake) && !wtx.is_in_main_chain)\n+    {\n+        return false;\n+    }\n     return true;\n }\n \n /*\n  * Decompose CWallet transaction to model transaction records.\n  */\n-QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interfaces::WalletTx& wtx)\n+QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet* wallet, const interfaces::WalletTx& wtx)\n {\n     QList<TransactionRecord> parts;\n     int64_t nTime = wtx.time;\n@@ -35,7 +39,15 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     uint256 hash = wtx.tx->GetHash();\n     std::map<std::string, std::string> mapValue = wtx.value_map;\n \n-    if (nNet > 0 || wtx.is_coinbase)\n+    {\n+        LOCK(wallet->cs_wallet);\n+        // Decompose cold staking related transactions\n+        if (decomposeP2CS(wallet, wallet->GetWalletTx(hash), nCredit, nDebit, parts)) {\n+            return parts;\n+        }\n+    }\n+\n+    if (nNet > 0 || wtx.is_coinbase || wtx.is_coinstake)\n     {\n         //\n         // Credit\n@@ -47,8 +59,16 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n             if(mine)\n             {\n                 TransactionRecord sub(hash, nTime);\n-                sub.idx = i; // vout index\n-                sub.credit = txout.nValue;\n+                if(wtx.is_coinstake) // Combine into single output for coinstake\n+                {\n+                    sub.idx = 1; // vout index\n+                    sub.credit = nNet;\n+                }\n+                else\n+                {\n+                    sub.idx = i; // vout index\n+                    sub.credit = txout.nValue;\n+                }\n                 sub.involvesWatchAddress = mine & ISMINE_WATCH_ONLY;\n                 if (wtx.txout_address_is_mine[i])\n                 {\n@@ -62,13 +82,16 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n                     sub.type = TransactionRecord::RecvFromOther;\n                     sub.address = mapValue[\"from\"];\n                 }\n-                if (wtx.is_coinbase)\n+                if (wtx.is_coinbase || wtx.is_coinstake)\n                 {\n                     // Generated\n                     sub.type = TransactionRecord::Generated;\n                 }\n \n                 parts.append(sub);\n+\n+                if(wtx.is_coinstake)\n+                    break; // Single output for coinstake\n             }\n         }\n     }\n@@ -161,14 +184,139 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     return parts;\n }\n \n+bool TransactionRecord::decomposeP2CS(const CWallet* wallet, const CWalletTx* wtx,\n+                                           const CAmount& nCredit, const CAmount& nDebit,\n+                                           QList<TransactionRecord>& parts)\n+{\n+    if (wtx->HasP2CSOutputs()) {\n+        // Delegate tx.\n+        TransactionRecord sub(wtx->GetHash(), wtx->GetTxTime());\n+        sub.credit = nCredit;\n+        sub.debit = -nDebit;\n+        loadHotOrColdStakeOrContract(wallet, wtx, sub, !wtx->IsCoinStake());\n+        parts.append(sub);\n+        return true;\n+    } else if (wtx->HasP2CSInputs()) {\n+        // Delegation unlocked\n+        TransactionRecord sub(wtx->GetHash(), wtx->GetTxTime());\n+        loadUnlockColdStake(wallet, wtx, sub);\n+        parts.append(sub);\n+        return true;\n+    }\n+    return false;\n+}\n+\n+void TransactionRecord::loadUnlockColdStake(const CWallet* wallet, const CWalletTx* wtx, TransactionRecord& record)\n+{\n+    record.involvesWatchAddress = false;\n+\n+    // Get the p2cs\n+    const CScript* p2csScript = nullptr;\n+    bool isSpendable = false;\n+\n+    for (const auto &input : wtx->tx->vin) {\n+        const CWalletTx* wallettx = wallet->GetWalletTx(input.prevout.hash);\n+        if (wallettx && wallettx->tx->vout[input.prevout.n].scriptPubKey.IsPayToColdStaking()) {\n+            p2csScript = &wallettx->tx->vout[input.prevout.n].scriptPubKey;\n+            isSpendable = wallet->IsMine(input) & ISMINE_SPENDABLE_ALL;\n+            break;\n+        }\n+    }\n+\n+    if (isSpendable) {\n+        // owner unlocked the cold stake\n+        record.type = TransactionRecord::P2CSUnlockOwner;\n+        record.debit = -(wtx->GetStakeDelegationDebit());\n+        record.credit = wtx->GetCredit(ISMINE_ALL);\n+    } else {\n+        // hot node watching the unlock\n+        record.type = TransactionRecord::P2CSUnlockStaker;\n+        record.debit = -(wtx->GetColdStakingDebit());\n+        record.credit = -(wtx->GetColdStakingCredit());\n+    }\n+\n+    // Extract and set the owner address\n+    if (p2csScript) {\n+        ExtractAddress(*p2csScript, false, record.address);\n+    }\n+}\n+\n+void TransactionRecord::loadHotOrColdStakeOrContract(\n+        const CWallet* wallet,\n+        const CWalletTx* wtx,\n+        TransactionRecord& record,\n+        bool isContract)\n+{\n+    record.involvesWatchAddress = false;\n+\n+    // Get the p2cs\n+    CTxOut p2csUtxo;\n+    unsigned int p2csUtxoIndex = 0;\n+    for (const auto & txout : wtx->tx->vout) {\n+        if (txout.scriptPubKey.IsPayToColdStaking()) {\n+            p2csUtxo = txout;\n+            break;\n+        }\n+        p2csUtxoIndex++;\n+    }\n+\n+    bool isSpendable = wallet->IsMine(p2csUtxo) & ISMINE_SPENDABLE_DELEGATED;\n+    bool isFromMe = wtx->IsFromMe(ISMINE_ALL);\n+    bool isSpent = wallet->IsSpent(wtx->GetHash(), p2csUtxoIndex);\n+\n+    if (isContract) {\n+        if (isSpendable && isFromMe) {\n+            // Wallet delegating balance\n+            record.type = isSpent ? TransactionRecord::P2CSSpentDelegationSentOwner : TransactionRecord::P2CSDelegationSentOwner;\n+            record.delegated = wtx->GetCredit(ISMINE_SPENDABLE_DELEGATED);\n+        } else if (isFromMe){\n+            // Wallet delegating balance and transfering ownership\n+            record.type = isSpent ? TransactionRecord::P2CSSpentDelegationSent : TransactionRecord::P2CSDelegationSent;\n+            record.delegated = wtx->GetCredit(ISMINE_SPENDABLE_DELEGATED);\n+        } else {\n+            // Wallet receiving a delegation\n+            record.type = TransactionRecord::P2CSDelegation;\n+        }\n+    } else {\n+        // Stake\n+        if (isSpendable) {\n+            // Offline wallet receiving an stake due a delegation\n+            record.type = isSpent ? TransactionRecord::SpentStakeDelegated : TransactionRecord::StakeDelegated;\n+            record.credit = wtx->GetCredit(ISMINE_SPENDABLE_DELEGATED);\n+            record.debit = -(wtx->GetDebit(ISMINE_SPENDABLE_DELEGATED));\n+            record.delegated = record.credit;\n+        } else {\n+            // Online wallet receiving an stake due to a received utxo delegation that won a block.\n+            record.type = TransactionRecord::StakeHot;\n+            record.credit = wtx->GetCredit(ISMINE_SPENDABLE);\n+            record.debit = -(wtx->GetDebit(ISMINE_SPENDABLE));\n+        }\n+    }\n+\n+    // Extract and set the owner address\n+    ExtractAddress(p2csUtxo.scriptPubKey, false, record.address);\n+}\n+\n+bool TransactionRecord::ExtractAddress(const CScript& scriptPubKey, bool fColdStake, std::string& addressStr) {\n+    CTxDestination address;\n+    if (!ExtractDestination(scriptPubKey, address, NULL, fColdStake)) {\n+        // this shouldn't happen..\n+        addressStr = \"No available address\";\n+        return false;\n+    } else {\n+        addressStr = EncodeDestination(address);\n+        return true;\n+    }\n+}\n+\n void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, const uint256& block_hash, int numBlocks, int64_t block_time)\n {\n     // Determine transaction status\n \n     // Sort order, unrecorded transactions sort to the top\n     status.sortKey = strprintf(\"%010d-%01d-%010u-%03d\",\n         wtx.block_height,\n-        wtx.is_coinbase ? 1 : 0,\n+        (wtx.is_coinbase || wtx.is_coinstake) ? 1 : 0,\n         wtx.time_received,\n         idx);\n     status.countsForBalance = wtx.is_trusted && !(wtx.blocks_to_maturity > 0);\n@@ -188,7 +336,10 @@ void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, cons\n         }\n     }\n     // For generated transactions, determine maturity\n-    else if(type == TransactionRecord::Generated)\n+    else if(type == TransactionRecord::Generated ||\n+            type == TransactionRecord::StakeDelegated ||\n+            type == TransactionRecord::SpentStakeDelegated ||\n+            type == TransactionRecord::StakeHot)\n     {\n         if (wtx.blocks_to_maturity > 0)\n         {"
      },
      {
        "sha": "0e8da421f219f9aca2cade5235843d1a4a73293a",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 29,
        "deletions": 6,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -7,6 +7,8 @@\n \n #include <amount.h>\n #include <uint256.h>\n+#include <script/script.h>\n+#include <wallet/wallet.h>\n \n #include <QList>\n #include <QString>\n@@ -80,35 +82,55 @@ class TransactionRecord\n         SendToOther,\n         RecvWithAddress,\n         RecvFromOther,\n-        SendToSelf\n+        SendToSelf,\n+        StakeDelegated, // Received cold stake (owner)\n+        SpentStakeDelegated, // Received cold stake (owner) - spent output\n+        StakeHot, // Staked via a delegated P2CS.\n+        P2CSDelegation, // Non-spendable P2CS, staker side.\n+        P2CSDelegationSent, // Non-spendable P2CS delegated utxo. (coin-owner transferred ownership to external wallet)\n+        P2CSSpentDelegationSent, // Non-spendable P2CS delegated utxo. (coin-owner transferred ownership to external wallet) - spent output\n+        P2CSDelegationSentOwner, // Spendable P2CS delegated utxo. (coin-owner)\n+        P2CSSpentDelegationSentOwner, // Spendable P2CS delegated utxo. (coin-owner) - spent output\n+        P2CSUnlockOwner, // Coin-owner spent the delegated utxo\n+        P2CSUnlockStaker // Staker watching the owner spent the delegated utxo\n     };\n \n     /** Number of confirmation recommended for accepting a transaction */\n     static const int RecommendedNumConfirmations = 6;\n \n     TransactionRecord():\n-            hash(), time(0), type(Other), address(\"\"), debit(0), credit(0), idx(0)\n+            hash(), time(0), type(Other), address(\"\"), debit(0), credit(0), delegated(0), idx(0)\n     {\n     }\n \n     TransactionRecord(uint256 _hash, qint64 _time):\n             hash(_hash), time(_time), type(Other), address(\"\"), debit(0),\n-            credit(0), idx(0)\n+            credit(0), delegated(0), idx(0)\n     {\n     }\n \n     TransactionRecord(uint256 _hash, qint64 _time,\n                 Type _type, const std::string &_address,\n                 const CAmount& _debit, const CAmount& _credit):\n-            hash(_hash), time(_time), type(_type), address(_address), debit(_debit), credit(_credit),\n+            hash(_hash), time(_time), type(_type), address(_address), debit(_debit), credit(_credit), delegated(0),\n             idx(0)\n     {\n     }\n \n     /** Decompose CWallet transaction to model transaction records.\n      */\n-    static bool showTransaction();\n-    static QList<TransactionRecord> decomposeTransaction(const interfaces::WalletTx& wtx);\n+    static bool showTransaction(const interfaces::WalletTx& wtx);\n+    static QList<TransactionRecord> decomposeTransaction(const CWallet* wallet, const interfaces::WalletTx& wtx);\n+\n+    static bool decomposeP2CS(const CWallet* wallet, const CWalletTx* wtx, const CAmount& nCredit,\n+                                const CAmount& nDebit, QList<TransactionRecord>& parts);\n+\n+    static void loadHotOrColdStakeOrContract(const CWallet* wallet, const CWalletTx* wtx,\n+                                            TransactionRecord& record, bool isContract = false);\n+\n+    static void loadUnlockColdStake(const CWallet* wallet, const CWalletTx* wtx, TransactionRecord& record);\n+\n+    static bool ExtractAddress(const CScript& scriptPubKey, bool fColdStake, std::string& addressStr);\n \n     /** @name Immutable transaction attributes\n       @{*/\n@@ -118,6 +140,7 @@ class TransactionRecord\n     std::string address;\n     CAmount debit;\n     CAmount credit;\n+    CAmount delegated;\n     /**@}*/\n \n     /** Subtransaction index, for sort key */"
      },
      {
        "sha": "0df6683cbcb62b33aeed630f0fee60cfa130c816",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 9,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -34,6 +34,7 @@ static int column_alignments[] = {\n         Qt::AlignLeft|Qt::AlignVCenter, /* date */\n         Qt::AlignLeft|Qt::AlignVCenter, /* type */\n         Qt::AlignLeft|Qt::AlignVCenter, /* address */\n+        Qt::AlignRight|Qt::AlignVCenter, /* amount */\n         Qt::AlignRight|Qt::AlignVCenter /* amount */\n     };\n \n@@ -109,8 +110,8 @@ class TransactionTablePriv\n         cachedWallet.clear();\n         {\n             for (const auto& wtx : wallet.getWalletTxs()) {\n-                if (TransactionRecord::showTransaction()) {\n-                    cachedWallet.append(TransactionRecord::decomposeTransaction(wtx));\n+                if (TransactionRecord::showTransaction(wtx)) {\n+                    cachedWallet.append(TransactionRecord::decomposeTransaction(wallet.wallet(), wtx));\n                 }\n             }\n         }\n@@ -123,6 +124,11 @@ class TransactionTablePriv\n      */\n     void updateWallet(interfaces::Wallet& wallet, const uint256 &hash, int status, bool showTransaction)\n     {\n+        // Find transaction in wallet\n+        interfaces::WalletTx wtx = wallet.getWalletTx(hash);\n+        // Determine whether to show transaction or not (determine this here so that no relocking is needed in GUI thread)\n+        showTransaction &= TransactionRecord::showTransaction(wtx);\n+        \n         qDebug() << \"TransactionTablePriv::updateWallet: \" + QString::fromStdString(hash.ToString()) + \" \" + QString::number(status);\n \n         // Find bounds of this transaction in model\n@@ -165,7 +171,7 @@ class TransactionTablePriv\n                 }\n                 // Added -- insert at the right position\n                 QList<TransactionRecord> toInsert =\n-                        TransactionRecord::decomposeTransaction(wtx);\n+                        TransactionRecord::decomposeTransaction(wallet.wallet(), wtx);\n                 if(!toInsert.isEmpty()) /* only if something to insert */\n                 {\n                     parent->beginInsertRows(QModelIndex(), lowerIndex, lowerIndex+toInsert.size()-1);\n@@ -248,7 +254,9 @@ TransactionTableModel::TransactionTableModel(const PlatformStyle *_platformStyle\n         fProcessingQueuedTransactions(false),\n         platformStyle(_platformStyle)\n {\n-    columns << QString() << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Label\") << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n+    columns << QString() << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Label\")\n+        << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit())\n+        << BitcoinUnits::getDelegatedColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n     priv->refreshWallet(walletModel->wallet());\n \n     connect(walletModel->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &TransactionTableModel::updateDisplayUnit);\n@@ -266,6 +274,7 @@ TransactionTableModel::~TransactionTableModel()\n void TransactionTableModel::updateAmountColumnTitle()\n {\n     columns[Amount] = BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n+    columns[Delegated] = BitcoinUnits::getDelegatedColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n     Q_EMIT headerDataChanged(Qt::Horizontal,Amount,Amount);\n }\n \n@@ -379,6 +388,21 @@ QString TransactionTableModel::formatTxType(const TransactionRecord *wtx) const\n         return tr(\"Payment to yourself\");\n     case TransactionRecord::Generated:\n         return tr(\"Mined\");\n+    case TransactionRecord::StakeDelegated:\n+    case TransactionRecord::SpentStakeDelegated:\n+        return tr(\"Cold Stake\");\n+    case TransactionRecord::StakeHot:\n+        return tr(\"Stake on behalf of\");\n+    case TransactionRecord::P2CSDelegationSent:\n+    case TransactionRecord::P2CSDelegationSentOwner:\n+    case TransactionRecord::P2CSSpentDelegationSent:\n+    case TransactionRecord::P2CSSpentDelegationSentOwner:\n+        return tr(\"Stake delegation\");\n+    case TransactionRecord::P2CSDelegation:\n+        return tr(\"Delegation\");\n+    case TransactionRecord::P2CSUnlockOwner:\n+    case TransactionRecord::P2CSUnlockStaker:\n+        return tr(\"Stake delegation spent by\");\n     default:\n         return QString();\n     }\n@@ -389,7 +413,19 @@ QVariant TransactionTableModel::txAddressDecoration(const TransactionRecord *wtx\n     switch(wtx->type)\n     {\n     case TransactionRecord::Generated:\n+    case TransactionRecord::StakeDelegated:\n+    case TransactionRecord::SpentStakeDelegated:\n+    case TransactionRecord::StakeHot:\n         return QIcon(\":/icons/tx_mined\");\n+    case TransactionRecord::P2CSDelegationSent:\n+    case TransactionRecord::P2CSDelegationSentOwner:\n+    case TransactionRecord::P2CSSpentDelegationSent:\n+    case TransactionRecord::P2CSSpentDelegationSentOwner:\n+    case TransactionRecord::P2CSDelegation:\n+        return QIcon(\":/icons/tx_cold\");\n+    case TransactionRecord::P2CSUnlockOwner:\n+    case TransactionRecord::P2CSUnlockStaker:\n+\n     case TransactionRecord::RecvWithAddress:\n     case TransactionRecord::RecvFromOther:\n         return QIcon(\":/icons/tx_input\");\n@@ -419,6 +455,16 @@ QString TransactionTableModel::formatTxToAddress(const TransactionRecord *wtx, b\n         return lookupAddress(wtx->address, tooltip) + watchAddress;\n     case TransactionRecord::SendToOther:\n         return QString::fromStdString(wtx->address) + watchAddress;\n+    case TransactionRecord::P2CSDelegation:\n+    case TransactionRecord::P2CSDelegationSent:\n+    case TransactionRecord::P2CSDelegationSentOwner:\n+    case TransactionRecord::P2CSSpentDelegationSent:\n+    case TransactionRecord::P2CSSpentDelegationSentOwner:\n+    case TransactionRecord::P2CSUnlockOwner:\n+    case TransactionRecord::P2CSUnlockStaker:\n+    case TransactionRecord::StakeDelegated:\n+    case TransactionRecord::SpentStakeDelegated:\n+    case TransactionRecord::StakeHot:\n     case TransactionRecord::SendToSelf:\n         return lookupAddress(wtx->address, tooltip) + watchAddress;\n     default:\n@@ -460,6 +506,19 @@ QString TransactionTableModel::formatTxAmount(const TransactionRecord *wtx, bool\n     return QString(str);\n }\n \n+QString TransactionTableModel::formatTxDelegated(const TransactionRecord *wtx, bool showUnconfirmed, BitcoinUnits::SeparatorStyle separators) const\n+{\n+    QString str = BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), wtx->delegated, false, separators);\n+    if(showUnconfirmed)\n+    {\n+        if(!wtx->status.countsForBalance)\n+        {\n+            str = QString(\"[\") + str + QString(\"]\");\n+        }\n+    }\n+    return QString(str);\n+}\n+\n QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx) const\n {\n     switch(wtx->status.status)\n@@ -550,6 +609,8 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n             return formatTxToAddress(rec, false);\n         case Amount:\n             return formatTxAmount(rec, true, BitcoinUnits::SeparatorStyle::ALWAYS);\n+        case Delegated:\n+            return formatTxDelegated(rec, true, BitcoinUnits::SeparatorStyle::ALWAYS);\n         }\n         break;\n     case Qt::EditRole:\n@@ -568,6 +629,8 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n             return formatTxToAddress(rec, true);\n         case Amount:\n             return qint64(rec->credit + rec->debit);\n+        case Delegated:\n+            return qint64(rec->delegated);\n         }\n         break;\n     case Qt::ToolTipRole:\n@@ -589,6 +652,10 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n         {\n             return COLOR_NEGATIVE;\n         }\n+        if(index.column() == Delegated && (rec->delegated < 0))\n+        {\n+            return COLOR_NEGATIVE;\n+        }\n         if(index.column() == ToAddress)\n         {\n             return addressColor(rec);\n@@ -680,6 +747,8 @@ QVariant TransactionTableModel::headerData(int section, Qt::Orientation orientat\n                 return tr(\"User-defined intent/purpose of the transaction.\");\n             case Amount:\n                 return tr(\"Amount removed from or added to balance.\");\n+            case Delegated:\n+                return tr(\"Delegated amount.\");\n             }\n         }\n     }\n@@ -706,11 +775,7 @@ void TransactionTableModel::updateDisplayUnit()\n \n void TransactionTablePriv::NotifyTransactionChanged(const uint256 &hash, ChangeType status)\n {\n-    // Find transaction in wallet\n-    // Determine whether to show transaction or not (determine this here so that no relocking is needed in GUI thread)\n-    bool showTransaction = TransactionRecord::showTransaction();\n-\n-    TransactionNotification notification(hash, status, showTransaction);\n+    TransactionNotification notification(hash, status, true);\n \n     if (fQueueNotifications)\n     {"
      },
      {
        "sha": "1e8caa0321a7be64c576d44e356a44515f491619",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -37,7 +37,8 @@ class TransactionTableModel : public QAbstractTableModel\n         Date = 2,\n         Type = 3,\n         ToAddress = 4,\n-        Amount = 5\n+        Amount = 5,\n+        Delegated = 6\n     };\n \n     /** Roles to get specific information from a transaction row.\n@@ -102,6 +103,7 @@ class TransactionTableModel : public QAbstractTableModel\n     QString formatTxType(const TransactionRecord *wtx) const;\n     QString formatTxToAddress(const TransactionRecord *wtx, bool tooltip) const;\n     QString formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed=true, BitcoinUnits::SeparatorStyle separators=BitcoinUnits::SeparatorStyle::STANDARD) const;\n+    QString formatTxDelegated(const TransactionRecord *wtx, bool showUnconfirmed=true, BitcoinUnits::SeparatorStyle separators=BitcoinUnits::SeparatorStyle::STANDARD) const;\n     QString formatTooltip(const TransactionRecord *rec) const;\n     QVariant txStatusDecoration(const TransactionRecord *wtx) const;\n     QVariant txWatchonlyDecoration(const TransactionRecord *wtx) const;"
      },
      {
        "sha": "4811120df59cf811d7592b816d991f74686f663c",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 10,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -36,8 +36,8 @@\n #include <QUrl>\n #include <QVBoxLayout>\n \n-TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *parent) :\n-    QWidget(parent)\n+TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *parent, bool _hideFilter, bool _showDelegated) :\n+    QWidget(parent), showDelegated(_showDelegated)\n {\n     // Build filter row\n     setContentsMargins(0,0,0,0);\n@@ -89,6 +89,13 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n                                   TransactionFilterProxy::TYPE(TransactionRecord::SendToOther));\n     typeWidget->addItem(tr(\"To yourself\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToSelf));\n     typeWidget->addItem(tr(\"Mined\"), TransactionFilterProxy::TYPE(TransactionRecord::Generated));\n+    typeWidget->addItem(tr(\"Cold stakes\"), TransactionFilterProxy::TYPE(TransactionRecord::StakeDelegated) |\n+                                        TransactionFilterProxy::TYPE(TransactionRecord::SpentStakeDelegated));\n+    typeWidget->addItem(tr(\"Hot stakes\"), TransactionFilterProxy::TYPE(TransactionRecord::StakeHot));\n+    typeWidget->addItem(tr(\"Unspent Delegated\"), TransactionFilterProxy::TYPE(TransactionRecord::P2CSDelegationSent) |\n+                                        TransactionFilterProxy::TYPE(TransactionRecord::P2CSDelegationSentOwner) |\n+                                        TransactionFilterProxy::TYPE(TransactionRecord::StakeDelegated));\n+    typeWidget->addItem(tr(\"Delegations\"), TransactionFilterProxy::TYPE(TransactionRecord::P2CSDelegation));\n     typeWidget->addItem(tr(\"Other\"), TransactionFilterProxy::TYPE(TransactionRecord::Other));\n \n     hlayout->addWidget(typeWidget);\n@@ -127,8 +134,12 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     vlayout->setSpacing(0);\n \n     QTableView *view = new QTableView(this);\n-    vlayout->addLayout(hlayout);\n-    vlayout->addWidget(createDateRangeWidget());\n+    if (_hideFilter) {\n+        createDateRangeWidget();\n+    } else {\n+        vlayout->addLayout(hlayout);\n+        vlayout->addWidget(createDateRangeWidget());\n+    }\n     vlayout->addWidget(view);\n     vlayout->setSpacing(0);\n     int width = view->verticalScrollBar()->sizeHint().width();\n@@ -202,6 +213,16 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     connect(this, &TransactionView::bumpedFee, [this](const uint256& txid) {\n       focusTransaction(txid);\n     });\n+\n+    if(_hideFilter)\n+    {\n+        dateWidget->setVisible(false);\n+        typeWidget->setVisible(false);\n+        watchOnlyWidget->setVisible(false);\n+        search_widget->setVisible(false);\n+        amountWidget->setVisible(false);\n+        dateRangeWidget->setVisible(false);\n+    }\n }\n \n void TransactionView::setModel(WalletModel *_model)\n@@ -231,6 +252,12 @@ void TransactionView::setModel(WalletModel *_model)\n         transactionView->setColumnWidth(TransactionTableModel::Date, DATE_COLUMN_WIDTH);\n         transactionView->setColumnWidth(TransactionTableModel::Type, TYPE_COLUMN_WIDTH);\n         transactionView->setColumnWidth(TransactionTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n+        transactionView->setColumnWidth(TransactionTableModel::Delegated, DELEGATED_MINIMUM_COLUMN_WIDTH);\n+\n+        if (!showDelegated)\n+        {\n+            transactionView->setColumnHidden(TransactionTableModel::Delegated, true);\n+        }\n \n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(transactionView, AMOUNT_MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH, this);\n \n@@ -500,19 +527,17 @@ void TransactionView::editLabel()\n             // Determine type of address, launch appropriate editor dialog type\n             QString type = modelIdx.data(AddressTableModel::TypeRole).toString();\n \n-            EditAddressDialog dlg(\n-                type == AddressTableModel::Receive\n-                ? EditAddressDialog::EditReceivingAddress\n-                : EditAddressDialog::EditSendingAddress, this);\n+            EditAddressDialog dlg(type == AddressTableModel::Receive\n+                    ? EditAddressDialog::EditReceivingAddress\n+                    : EditAddressDialog::EditSendingAddress, this);\n             dlg.setModel(addressBook);\n             dlg.loadRow(idx);\n             dlg.exec();\n         }\n         else\n         {\n             // Add sending address\n-            EditAddressDialog dlg(EditAddressDialog::NewSendingAddress,\n-                this);\n+            EditAddressDialog dlg(EditAddressDialog::NewSendingAddress, this);\n             dlg.setModel(addressBook);\n             dlg.setAddress(address);\n             dlg.exec();"
      },
      {
        "sha": "f2b2bbe7c71ee8f15501781c6460bd6708697403",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -34,7 +34,7 @@ class TransactionView : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit TransactionView(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit TransactionView(const PlatformStyle *platformStyle, QWidget *parent = nullptr, bool _hideFilter = false, bool _showDelegated = false);\n \n     void setModel(WalletModel *model);\n \n@@ -56,13 +56,15 @@ class TransactionView : public QWidget\n         DATE_COLUMN_WIDTH = 120,\n         TYPE_COLUMN_WIDTH = 113,\n         AMOUNT_MINIMUM_COLUMN_WIDTH = 120,\n+        DELEGATED_MINIMUM_COLUMN_WIDTH = 120,\n         MINIMUM_COLUMN_WIDTH = 23\n     };\n \n private:\n     WalletModel *model{nullptr};\n     TransactionFilterProxy *transactionProxyModel{nullptr};\n     QTableView *transactionView{nullptr};\n+    bool showDelegated{false};\n \n     QComboBox *dateWidget;\n     QComboBox *typeWidget;"
      },
      {
        "sha": "c27266fe6c25492a13e6ee8702c9fd96eac95091",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -174,6 +174,13 @@ void WalletFrame::gotoSendCoinsPage(QString addr)\n         i.value()->gotoSendCoinsPage(addr);\n }\n \n+void WalletFrame::gotoStakePage()\n+{\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n+    for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n+        i.value()->gotoStakePage();\n+}\n+\n void WalletFrame::gotoSignMessageTab(QString addr)\n {\n     WalletView *walletView = currentWalletView();\n@@ -220,8 +227,10 @@ void WalletFrame::changePassphrase()\n void WalletFrame::unlockWallet()\n {\n     WalletView *walletView = currentWalletView();\n-    if (walletView)\n+    if (walletView) {\n         walletView->unlockWallet();\n+        walletView->getWalletModel()->setWalletUnlockStakingOnly(false);\n+    }\n }\n \n void WalletFrame::usedSendingAddresses()"
      },
      {
        "sha": "37437c70f17f15bf37ad6eeb377de45490f6e907",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -76,6 +76,8 @@ public Q_SLOTS:\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n     void gotoSendCoinsPage(QString addr = \"\");\n+    /** Switch to stake page */\n+    void gotoStakePage();\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n     void gotoSignMessageTab(QString addr = \"\");"
      },
      {
        "sha": "8d1515dd25162e4ce9b5b1f520d5f401be9f5f9d",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 131,
        "deletions": 9,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -35,6 +35,23 @@\n #include <QSet>\n #include <QTimer>\n \n+class WalletWorker : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    WalletModel *walletModel;\n+    WalletWorker(WalletModel *_walletModel):\n+        walletModel(_walletModel){}\n+\n+private Q_SLOTS:\n+    void updateModel()\n+    {\n+        // Update the model with results of task that take more time to be completed\n+        walletModel->checkStakeWeightChanged();\n+    }\n+};\n+\n+#include <qt/walletmodel.moc>\n \n WalletModel::WalletModel(std::unique_ptr<interfaces::Wallet> wallet, ClientModel& client_model, const PlatformStyle *platformStyle, QObject *parent) :\n     QObject(parent),\n@@ -46,25 +63,35 @@ WalletModel::WalletModel(std::unique_ptr<interfaces::Wallet> wallet, ClientModel\n     transactionTableModel(nullptr),\n     recentRequestsTableModel(nullptr),\n     cachedEncryptionStatus(Unencrypted),\n-    timer(new QTimer(this))\n+    timer(new QTimer(this)),\n+    worker(nullptr),\n+    nWeight(0),\n+    updateStakeWeight(true)\n {\n     fHaveWatchOnly = m_wallet->haveWatchOnly();\n     addressTableModel = new AddressTableModel(this);\n     transactionTableModel = new TransactionTableModel(platformStyle, this);\n     recentRequestsTableModel = new RecentRequestsTableModel(this);\n \n+    worker = new WalletWorker(this);\n+    worker->moveToThread(&(t));\n+    t.start();\n+\n     subscribeToCoreSignals();\n }\n \n WalletModel::~WalletModel()\n {\n     unsubscribeFromCoreSignals();\n+    t.quit();\n+    t.wait();\n }\n \n void WalletModel::startPollBalance()\n {\n     // This timer will be fired repeatedly to update the balance\n     connect(timer, &QTimer::timeout, this, &WalletModel::pollBalanceChanged);\n+    connect(timer, SIGNAL(timeout()), worker, SLOT(updateModel()));\n     timer->start(MODEL_UPDATE_DELAY);\n }\n \n@@ -99,24 +126,38 @@ void WalletModel::pollBalanceChanged()\n         return;\n     }\n \n+    // Get node synchronization information\n+    bool isSyncing = false;\n+    int numBlocks = -1;\n+    m_node.getSyncInfo(numBlocks, isSyncing);\n+    bool cachedTipChanged = block_hash != m_cached_last_update_tip;\n     if (fForceCheckBalanceChanged || block_hash != m_cached_last_update_tip) {\n         fForceCheckBalanceChanged = false;\n \n         // Balance and number of transactions might have changed\n         m_cached_last_update_tip = block_hash;\n \n-        checkBalanceChanged(new_balances);\n+        bool balanceChanged = checkBalanceChanged(new_balances);\n         if(transactionTableModel)\n             transactionTableModel->updateConfirmations();\n+\n+        // The stake weight is used for the staking icon status\n+        // Get the stake weight only when not syncing because it is time consuming\n+        if(!isSyncing && (balanceChanged || cachedTipChanged))\n+        {\n+            updateStakeWeight = true;\n+        }\n     }\n }\n \n-void WalletModel::checkBalanceChanged(const interfaces::WalletBalances& new_balances)\n+bool WalletModel::checkBalanceChanged(const interfaces::WalletBalances& new_balances)\n {\n     if(new_balances.balanceChanged(m_cached_balances)) {\n         m_cached_balances = new_balances;\n         Q_EMIT balanceChanged(new_balances);\n+        return true;\n     }\n+    return false;\n }\n \n void WalletModel::updateTransaction()\n@@ -143,7 +184,7 @@ bool WalletModel::validateAddress(const QString &address)\n     return IsValidDestinationString(address.toStdString());\n }\n \n-WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl& coinControl)\n+WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl& coinControl, const bool fIncludeDelegated)\n {\n     CAmount total = 0;\n     bool fSubtractFeeFromAmount = false;\n@@ -175,7 +216,46 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             setAddress.insert(rcp.address);\n             ++nAddresses;\n \n-            CScript scriptPubKey = GetScriptForDestination(DecodeDestination(rcp.address.toStdString()));\n+            CScript scriptPubKey;\n+            CTxDestination out = DecodeDestination(rcp.address.toStdString());\n+\n+            if (rcp.isP2CS) {\n+                Destination ownerAdd;\n+                if (rcp.ownerAddress.isEmpty()) {\n+                    return InvalidAddress;\n+                } else {\n+                    ownerAdd = Destination(DecodeDestination(rcp.ownerAddress.toStdString()), false);\n+                }\n+\n+                const PKHash* stakerId = boost::get<PKHash>(&out);\n+                const PKHash* ownerId = boost::get<PKHash>(&ownerAdd.dest);\n+                if (!stakerId || !ownerId) {\n+                    return InvalidAddress;\n+                }\n+\n+                LegacyScriptPubKeyMan* spk_man = m_wallet->wallet()->GetLegacyScriptPubKeyMan();\n+                if (!spk_man) {\n+                    spk_man = m_wallet->wallet()->GetOrCreateLegacyScriptPubKeyMan();\n+                }\n+\n+                if (!spk_man) {\n+                    return InvalidAddress;\n+                }\n+\n+                if (spk_man->HaveKey(ToKeyID(*stakerId))) {\n+                    return StakerAddressInWallet;\n+                }\n+\n+                if (!spk_man->HaveKey(ToKeyID(*ownerId))) {\n+                    return OwnerAddressNotInWallet;\n+                }\n+\n+                scriptPubKey = GetScriptForStakeDelegation(ToKeyID(*stakerId), ToKeyID(*ownerId));\n+            } else {\n+                // Regular P2PK or P2PKH\n+                scriptPubKey = GetScriptForDestination(out);\n+            }\n+\n             CRecipient recipient = {scriptPubKey, rcp.amount, rcp.fSubtractFeeFromAmount};\n             vecSend.push_back(recipient);\n \n@@ -187,7 +267,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         return DuplicateAddress;\n     }\n \n-    CAmount nBalance = m_wallet->getAvailableBalance(coinControl);\n+    CAmount nBalance = m_wallet->getAvailableBalance(coinControl, fIncludeDelegated);\n \n     if(total > nBalance)\n     {\n@@ -261,7 +341,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n                 if (!m_wallet->getAddress(\n                      dest, &name, /* is_mine= */ nullptr, /* purpose= */ nullptr))\n                 {\n-                    m_wallet->setAddressBook(dest, strLabel, \"send\");\n+                    m_wallet->setAddressBook(dest, strLabel, AddressBook::AddressBookPurpose::SEND);\n                 }\n                 else if (name != strLabel)\n                 {\n@@ -432,6 +512,13 @@ void WalletModel::unsubscribeFromCoreSignals()\n WalletModel::UnlockContext WalletModel::requestUnlock()\n {\n     bool was_locked = getEncryptionStatus() == Locked;\n+\n+    if ((!was_locked) && getWalletUnlockStakingOnly())\n+    {\n+       setWalletLocked(true);\n+       was_locked = getEncryptionStatus() == Locked;\n+    }\n+\n     if(was_locked)\n     {\n         // Request UI to unlock wallet\n@@ -440,14 +527,20 @@ WalletModel::UnlockContext WalletModel::requestUnlock()\n     // If wallet is still locked, unlock was failed or cancelled, mark context as invalid\n     bool valid = getEncryptionStatus() != Locked;\n \n-    return UnlockContext(this, valid, was_locked);\n+    return UnlockContext(this, valid, was_locked && !getWalletUnlockStakingOnly());\n }\n \n WalletModel::UnlockContext::UnlockContext(WalletModel *_wallet, bool _valid, bool _relock):\n         wallet(_wallet),\n         valid(_valid),\n-        relock(_relock)\n+        relock(_relock),\n+        stakingOnly(false)\n {\n+    if(!relock)\n+    {\n+        stakingOnly = wallet->getWalletUnlockStakingOnly();\n+        wallet->setWalletUnlockStakingOnly(false);\n+    }\n }\n \n WalletModel::UnlockContext::~UnlockContext()\n@@ -456,6 +549,12 @@ WalletModel::UnlockContext::~UnlockContext()\n     {\n         wallet->setWalletLocked(true);\n     }\n+\n+    if(!relock)\n+    {\n+        wallet->setWalletUnlockStakingOnly(stakingOnly);\n+        wallet->updateStatus();\n+    }\n }\n \n void WalletModel::UnlockContext::CopyFrom(UnlockContext&& rhs)\n@@ -593,3 +692,26 @@ uint256 WalletModel::getLastBlockProcessed() const\n {\n     return m_client_model ? m_client_model->getBestBlockHash() : uint256{};\n }\n+\n+uint64_t WalletModel::getStakeWeight()\n+{\n+    return nWeight;\n+}\n+\n+bool WalletModel::getWalletUnlockStakingOnly()\n+{\n+    return m_wallet->getWalletUnlockStakingOnly();\n+}\n+\n+void WalletModel::setWalletUnlockStakingOnly(bool unlock)\n+{\n+    m_wallet->setWalletUnlockStakingOnly(unlock);\n+}\n+\n+void WalletModel::checkStakeWeightChanged()\n+{\n+    if(updateStakeWeight && m_wallet->tryGetStakeWeight(nWeight))\n+    {\n+        updateStakeWeight = false;\n+    }\n+}"
      },
      {
        "sha": "5a8940486c5777d79fcdb6d33ada46e44a7f83d5",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 21,
        "deletions": 3,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -18,8 +18,10 @@\n #include <support/allocators/secure.h>\n \n #include <vector>\n+#include <atomic>\n \n #include <QObject>\n+#include <QThread>\n \n enum class OutputType;\n \n@@ -31,6 +33,7 @@ class RecentRequestsTableModel;\n class SendCoinsRecipient;\n class TransactionTableModel;\n class WalletModelTransaction;\n+class WalletWorker;\n \n class CCoinControl;\n class CKeyID;\n@@ -66,7 +69,9 @@ class WalletModel : public QObject\n         DuplicateAddress,\n         TransactionCreationFailed, // Error returned when wallet is still locked\n         AbsurdFee,\n-        PaymentRequestExpired\n+        PaymentRequestExpired,\n+        OwnerAddressNotInWallet,\n+        StakerAddressInWallet\n     };\n \n     enum EncryptionStatus\n@@ -99,7 +104,7 @@ class WalletModel : public QObject\n     };\n \n     // prepare transaction for getting txfee before sending coins\n-    SendCoinsReturn prepareTransaction(WalletModelTransaction &transaction, const CCoinControl& coinControl);\n+    SendCoinsReturn prepareTransaction(WalletModelTransaction &transaction, const CCoinControl& coinControl, const bool fIncludeDelegated);\n \n     // Send coins to a list of recipients\n     SendCoinsReturn sendCoins(WalletModelTransaction &transaction);\n@@ -109,6 +114,8 @@ class WalletModel : public QObject\n     // Passphrase only needed when unlocking\n     bool setWalletLocked(bool locked, const SecureString &passPhrase=SecureString());\n     bool changePassphrase(const SecureString &oldPass, const SecureString &newPass);\n+    bool getWalletUnlockStakingOnly();\n+    void setWalletUnlockStakingOnly(bool unlock);\n \n     // RAI object for unlocking wallet, returned by requestUnlock()\n     class UnlockContext\n@@ -128,6 +135,7 @@ class WalletModel : public QObject\n         WalletModel *wallet;\n         bool valid;\n         mutable bool relock; // mutable, as it can be set to false by copying\n+        bool stakingOnly;\n \n         UnlockContext& operator=(const UnlockContext&) = default;\n         void CopyFrom(UnlockContext&& rhs);\n@@ -152,6 +160,8 @@ class WalletModel : public QObject\n \n     bool isMultiwallet();\n \n+    uint64_t getStakeWeight();\n+\n     AddressTableModel* getAddressTableModel() const { return addressTableModel; }\n \n     void refresh(bool pk_hash_only = false);\n@@ -186,12 +196,18 @@ class WalletModel : public QObject\n     EncryptionStatus cachedEncryptionStatus;\n     QTimer* timer;\n \n+    QThread t;\n+    WalletWorker *worker;\n+\n+    uint64_t nWeight;\n+    std::atomic<bool> updateStakeWeight;\n+    \n     // Block hash denoting when the last balance update was done.\n     uint256 m_cached_last_update_tip{};\n \n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();\n-    void checkBalanceChanged(const interfaces::WalletBalances& new_balances);\n+    bool checkBalanceChanged(const interfaces::WalletBalances& new_balances);\n \n Q_SIGNALS:\n     // Signal that balance in wallet changed\n@@ -237,6 +253,8 @@ public Q_SLOTS:\n     void updateWatchOnlyFlag(bool fHaveWatchonly);\n     /* Current, immature or unconfirmed balance might have changed - emit 'balanceChanged' if so */\n     void pollBalanceChanged();\n+    /* Update stake weight when changed*/\n+    void checkStakeWeightChanged();\n };\n \n #endif // BITCOIN_QT_WALLETMODEL_H"
      },
      {
        "sha": "1dd096c4471bea2a1a9938700eb296da79c5a529",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 3,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -18,6 +18,7 @@\n #include <qt/transactiontablemodel.h>\n #include <qt/transactionview.h>\n #include <qt/walletmodel.h>\n+#include <qt/stakepage.h>\n \n #include <interfaces/node.h>\n #include <node/ui_interface.h>\n@@ -64,10 +65,13 @@ WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n     usedSendingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n     usedReceivingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n \n+    stakePage = new StakePage(platformStyle);\n+\n     addWidget(overviewPage);\n     addWidget(transactionsPage);\n     addWidget(receiveCoinsPage);\n     addWidget(sendCoinsPage);\n+    addWidget(stakePage);\n \n     connect(overviewPage, &OverviewPage::transactionClicked, this, &WalletView::transactionClicked);\n     // Clicking on a transaction on the overview pre-selects the transaction on the transaction history page\n@@ -79,13 +83,19 @@ WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n     // Highlight transaction after send\n     connect(sendCoinsPage, &SendCoinsDialog::coinsSent, transactionView, static_cast<void (TransactionView::*)(const uint256&)>(&TransactionView::focusTransaction));\n \n+    connect(stakePage, &StakePage::coinsSent, this, &WalletView::coinsSent);\n+    // Highlight transaction after delegate\n+    connect(stakePage, &StakePage::coinsSent, transactionView, static_cast<void (TransactionView::*)(const uint256&)>(&TransactionView::focusTransaction));\n+\n     // Clicking on \"Export\" allows to export the transaction list\n     connect(exportButton, &QPushButton::clicked, transactionView, &TransactionView::exportClicked);\n \n     // Pass through messages from sendCoinsPage\n     connect(sendCoinsPage, &SendCoinsDialog::message, this, &WalletView::message);\n     // Pass through messages from transactionView\n     connect(transactionView, &TransactionView::message, this, &WalletView::message);\n+    // Pass through messages from sendCoinsPage\n+    connect(stakePage, &StakePage::message, this, &WalletView::message);\n \n     connect(this, &WalletView::setPrivacy, overviewPage, &OverviewPage::setPrivacy);\n }\n@@ -100,6 +110,7 @@ void WalletView::setClientModel(ClientModel *_clientModel)\n \n     overviewPage->setClientModel(_clientModel);\n     sendCoinsPage->setClientModel(_clientModel);\n+    stakePage->setClientModel(_clientModel);\n     if (walletModel) walletModel->setClientModel(_clientModel);\n }\n \n@@ -112,6 +123,7 @@ void WalletView::setWalletModel(WalletModel *_walletModel)\n     overviewPage->setWalletModel(_walletModel);\n     receiveCoinsPage->setModel(_walletModel);\n     sendCoinsPage->setModel(_walletModel);\n+    stakePage->setWalletModel(_walletModel);\n     usedReceivingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n     usedSendingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n \n@@ -131,7 +143,8 @@ void WalletView::setWalletModel(WalletModel *_walletModel)\n         connect(_walletModel->getTransactionTableModel(), &TransactionTableModel::rowsInserted, this, &WalletView::processNewTransaction);\n \n         // Ask for passphrase if needed\n-        connect(_walletModel, &WalletModel::requireUnlock, this, &WalletView::unlockWallet);\n+        connect(_walletModel, SIGNAL(requireUnlock()), this, SLOT(unlockWallet()));\n+        connect(stakePage, SIGNAL(requireUnlock(bool)), this, SLOT(unlockWallet(bool)));\n \n         // Show progress dialog\n         connect(_walletModel, &WalletModel::showProgress, this, &WalletView::showProgress);\n@@ -181,6 +194,11 @@ void WalletView::gotoSendCoinsPage(QString addr)\n         sendCoinsPage->setAddress(addr);\n }\n \n+void WalletView::gotoStakePage()\n+{\n+    setCurrentWidget(stakePage);\n+}\n+\n void WalletView::gotoSignMessageTab(QString addr)\n {\n     // calls show() in showTab_SM()\n@@ -295,19 +313,32 @@ void WalletView::changePassphrase()\n     dlg.exec();\n }\n \n-void WalletView::unlockWallet()\n+void WalletView::unlockWallet(bool fromMenu)\n {\n     if(!walletModel)\n         return;\n     // Unlock wallet when requested by wallet model\n     if (walletModel->getEncryptionStatus() == WalletModel::Locked)\n     {\n-        AskPassphraseDialog dlg(AskPassphraseDialog::Unlock, this);\n+        AskPassphraseDialog::Mode mode = fromMenu ?\n+            AskPassphraseDialog::UnlockStaking : AskPassphraseDialog::Unlock;\n+        AskPassphraseDialog dlg(mode, this);\n         dlg.setModel(walletModel);\n         dlg.exec();\n+\n+        if (sender() == stakePage)\n+            stakePage->updateEncryptionStatus();\n     }\n }\n \n+void WalletView::lockWallet()\n+{\n+    if(!walletModel)\n+        return;\n+\n+    walletModel->setWalletLocked(true);\n+}\n+\n void WalletView::usedSendingAddresses()\n {\n     if(!walletModel)"
      },
      {
        "sha": "1454e59dea30386c8df15a0c524fb89002fb5646",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -18,6 +18,7 @@ class SendCoinsRecipient;\n class TransactionView;\n class WalletModel;\n class AddressBookPage;\n+class StakePage;\n \n QT_BEGIN_NAMESPACE\n class QModelIndex;\n@@ -63,6 +64,7 @@ class WalletView : public QStackedWidget\n     SendCoinsDialog *sendCoinsPage;\n     AddressBookPage *usedSendingAddressesPage;\n     AddressBookPage *usedReceivingAddressesPage;\n+    StakePage *stakePage;\n \n     TransactionView *transactionView;\n \n@@ -78,6 +80,8 @@ public Q_SLOTS:\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n     void gotoSendCoinsPage(QString addr = \"\");\n+    /** Switch to stake page */\n+    void gotoStakePage();\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n     void gotoSignMessageTab(QString addr = \"\");\n@@ -98,7 +102,9 @@ public Q_SLOTS:\n     /** Change encrypted wallet passphrase */\n     void changePassphrase();\n     /** Ask for passphrase to unlock wallet temporarily */\n-    void unlockWallet();\n+    void unlockWallet(bool fromMenu = false);\n+    /** Lock the wallet */\n+    void lockWallet();\n \n     /** Show used sending addresses */\n     void usedSendingAddresses();"
      },
      {
        "sha": "c79d36154e45dd88368e37e555754717c2a00b32",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 109,
        "deletions": 3,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -36,6 +36,8 @@\n #include <validation.h>\n #include <validationinterface.h>\n #include <warnings.h>\n+#include <pow.h>\n+#include <pos.h>\n \n #include <stdint.h>\n \n@@ -105,6 +107,91 @@ double GetDifficulty(const CBlockIndex* blockindex)\n     return dDiff;\n }\n \n+double GetPoWMHashPS()\n+{\n+    if (pindexBestHeader->nHeight >= Params().GetConsensus().nLastPOWBlock)\n+        return 0;\n+\n+    int nPoWInterval = 72;\n+    int64_t nTargetSpacingWorkMin = 30, nTargetSpacingWork = 30;\n+\n+    CBlockIndex* pindexGenesisBlock = ::ChainActive().Genesis();\n+    CBlockIndex* pindex = pindexGenesisBlock;\n+    CBlockIndex* pindexPrevWork = pindexGenesisBlock;\n+\n+    while (pindex)\n+    {\n+        if (pindex->IsProofOfWork())\n+        {\n+            int64_t nActualSpacingWork = pindex->GetBlockTime() - pindexPrevWork->GetBlockTime();\n+            nTargetSpacingWork = ((nPoWInterval - 1) * nTargetSpacingWork + nActualSpacingWork + nActualSpacingWork) / (nPoWInterval + 1);\n+            nTargetSpacingWork = std::max(nTargetSpacingWork, nTargetSpacingWorkMin);\n+            pindexPrevWork = pindex;\n+        }\n+\n+        pindex = pindex->pnext;\n+    }\n+\n+    return GetDifficulty(::ChainActive().Tip()) * 4294.967296 / nTargetSpacingWork;\n+}\n+\n+double GetPoSKernelPS()\n+{\n+    int nPoSInterval = 72;\n+    double dStakeKernelsTriedAvg = 0;\n+    int nStakesHandled = 0, nStakesTime = 0;\n+\n+    CBlockIndex* pindex = pindexBestHeader;\n+    CBlockIndex* pindexPrevStake = NULL;\n+\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n+\n+    while (pindex && nStakesHandled < nPoSInterval)\n+    {\n+        if (pindex->IsProofOfStake())\n+        {\n+            if (pindexPrevStake)\n+            {\n+                dStakeKernelsTriedAvg += GetDifficulty(pindexPrevStake) * 4294967296.0;\n+                nStakesHandled++;\n+            }\n+            pindexPrevStake = pindex;\n+        }\n+\n+        pindex = pindex->pprev;\n+    }\n+\n+    // Using a fixed denominator reduces the variation spikes\n+    nStakesTime = consensusParams.nPowTargetSpacing * nStakesHandled;\n+\n+    double result = 0;\n+\n+    if (nStakesTime)\n+        result = dStakeKernelsTriedAvg / nStakesTime;\n+    \n+    result *= STAKE_TIMESTAMP_MASK + 1;\n+\n+    return result;\n+}\n+\n+double GetEstimatedAnnualROI()\n+{\n+    double result = 0;\n+    double networkWeight = GetPoSKernelPS();\n+    CBlockIndex* pindex = pindexBestHeader == 0 ? ::ChainActive().Tip() : pindexBestHeader;\n+    int nHeight = pindex ? pindex->nHeight : 0;\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n+    double subsidy = GetBlockSubsidy(nHeight, consensusParams);\n+    double numberBlocksPerDay = 86400 / consensusParams.nPowTargetSpacing;\n+    if(networkWeight > 0)\n+    {\n+        // Formula: 100 * blocks per day * 365 days * subsidy / Network Weight\n+        result = 100 * numberBlocksPerDay * 365 * subsidy / networkWeight;\n+    }\n+\n+    return result;\n+}\n+\n static int ComputeNextBlockAndDepth(const CBlockIndex* tip, const CBlockIndex* blockindex, const CBlockIndex*& next)\n {\n     next = tip->GetAncestor(blockindex->nHeight + 1);\n@@ -141,6 +228,11 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n         result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n     if (pnext)\n         result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n+\n+    result.pushKV(\"flags\", strprintf(\"%s\", blockindex->IsProofOfStake()? \"proof-of-stake\" : \"proof-of-work\"));\n+    result.pushKV(\"proofhash\", blockindex->hashProof.GetHex());\n+    result.pushKV(\"modifier\", blockindex->nStakeModifier.GetHex());\n+\n     return result;\n }\n \n@@ -186,6 +278,14 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n         result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n     if (pnext)\n         result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n+\n+    result.pushKV(\"flags\", strprintf(\"%s\", blockindex->IsProofOfStake()? \"proof-of-stake\" : \"proof-of-work\"));\n+    result.pushKV(\"proofhash\", blockindex->hashProof.GetHex());\n+    result.pushKV(\"modifier\", blockindex->nStakeModifier.GetHex());\n+\n+    if (block.IsProofOfStake())\n+        result.pushKV(\"signature\", HexStr(block.vchBlockSig));\t\n+    \n     return result;\n }\n \n@@ -393,7 +493,8 @@ static RPCHelpMan syncwithvalidationinterfacequeue()\n static RPCHelpMan getdifficulty()\n {\n     return RPCHelpMan{\"getdifficulty\",\n-                \"\\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.\\n\",\n+                \"\\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.\\n\"\n+                \"\\nReturns the proof-of-stake difficulty as a multiple of the minimum difficulty.\\n\",\n                 {},\n                 RPCResult{\n                     RPCResult::Type::NUM, \"\", \"the proof-of-work difficulty as a multiple of the minimum difficulty.\"},\n@@ -404,7 +505,10 @@ static RPCHelpMan getdifficulty()\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n     LOCK(cs_main);\n-    return GetDifficulty(::ChainActive().Tip());\n+    UniValue obj(UniValue::VOBJ);\n+    obj.pushKV(\"proof-of-work\",        GetDifficulty(GetLastBlockIndex(pindexBestHeader, false)));\n+    obj.pushKV(\"proof-of-stake\",       GetDifficulty(GetLastBlockIndex(pindexBestHeader, true)));\n+    return obj;\n },\n     };\n }\n@@ -1160,6 +1264,7 @@ static RPCHelpMan gettxout()\n     ScriptPubKeyToUniv(coin.out.scriptPubKey, o, true);\n     ret.pushKV(\"scriptPubKey\", o);\n     ret.pushKV(\"coinbase\", (bool)coin.fCoinBase);\n+    ret.pushKV(\"coinstake\", (bool)coin.fCoinStake);\n \n     return ret;\n },\n@@ -1323,6 +1428,7 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"headers\",               pindexBestHeader ? pindexBestHeader->nHeight : -1);\n     obj.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n     obj.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+    obj.pushKV(\"moneysupply\",           pindexBestHeader ? pindexBestHeader->nMoneySupply / COIN : -1);\n     obj.pushKV(\"mediantime\",            (int64_t)tip->GetMedianTimePast());\n     obj.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n     obj.pushKV(\"initialblockdownload\",  ::ChainstateActive().IsInitialBlockDownload());\n@@ -1918,7 +2024,7 @@ static RPCHelpMan getblockstats()\n             }\n         }\n \n-        if (tx->IsCoinBase()) {\n+        if (tx->IsCoinBase() || tx->IsCoinStake()) {\n             continue;\n         }\n "
      },
      {
        "sha": "29608ed585946b3647e4e0b39551d165e687edf1",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -43,6 +43,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"sendtoaddress\", 8, \"avoid_reuse\" },\n     { \"sendtoaddress\", 9, \"fee_rate\"},\n     { \"sendtoaddress\", 10, \"verbose\"},\n+    { \"delegatestake\", 3, \"include_delegated\"},\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },\n@@ -65,6 +66,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listtransactions\", 2, \"skip\" },\n     { \"listtransactions\", 3, \"include_watchonly\" },\n     { \"walletpassphrase\", 1, \"timeout\" },\n+    { \"walletpassphrase\", 2, \"stakingonly\" },\n     { \"getblocktemplate\", 0, \"template_request\" },\n     { \"listsinceblock\", 1, \"target_confirmations\" },\n     { \"listsinceblock\", 2, \"include_watchonly\" },"
      },
      {
        "sha": "62f8026b1078025e9d88dc09fb4b57975a68b13d",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 176,
        "deletions": 3,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -36,6 +36,12 @@\n #include <versionbitsinfo.h>\n #include <warnings.h>\n \n+#ifdef ENABLE_WALLET\n+#include <wallet/wallet.h>\n+#include <wallet/walletdb.h>\n+#include <wallet/rpcwallet.h>\n+#endif\n+\n #include <memory>\n #include <stdint.h>\n \n@@ -55,7 +61,7 @@ static UniValue GetNetworkHashPS(int lookup, int height) {\n \n     // If lookup is -1, then use blocks since last difficulty change.\n     if (lookup <= 0)\n-        lookup = pb->nHeight % Params().GetConsensus().DifficultyAdjustmentInterval() + 1;\n+        lookup = pb->nHeight % Params().GetConsensus().DifficultyAdjustmentInterval(pb->nHeight) + 1;\n \n     // If lookup is larger than chain, then set it to chain length.\n     if (lookup > pb->nHeight)\n@@ -291,6 +297,7 @@ static RPCHelpMan generatetoaddress()\n     };\n }\n \n+\n static RPCHelpMan generateblock()\n {\n     return RPCHelpMan{\"generateblock\",\n@@ -427,19 +434,183 @@ static RPCHelpMan getmininginfo()\n     const CTxMemPool& mempool = EnsureMemPool(request.context);\n \n     UniValue obj(UniValue::VOBJ);\n+    UniValue diff(UniValue::VOBJ);\n+    UniValue weight(UniValue::VOBJ);\n+\n     obj.pushKV(\"blocks\",           (int)::ChainActive().Height());\n     if (BlockAssembler::m_last_block_weight) obj.pushKV(\"currentblockweight\", *BlockAssembler::m_last_block_weight);\n     if (BlockAssembler::m_last_block_num_txs) obj.pushKV(\"currentblocktx\", *BlockAssembler::m_last_block_num_txs);\n-    obj.pushKV(\"difficulty\",       (double)GetDifficulty(::ChainActive().Tip()));\n+\n+    uint64_t nWeight = 0;\n+    uint64_t lastCoinStakeSearchInterval = 0;\n+#ifdef ENABLE_WALLET\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+    if (pwallet)\n+    {\n+        LOCK(pwallet->cs_wallet);\n+        nWeight = pwallet->GetStakeWeight();\n+        lastCoinStakeSearchInterval = pwallet->m_last_coin_stake_search_interval;\n+    }\n+#endif\n+    diff.pushKV(\"proof-of-work\",   (double)GetDifficulty(GetLastBlockIndex(::ChainActive().Tip(), false)));\n+    diff.pushKV(\"proof-of-stake\",  (double)GetDifficulty(GetLastBlockIndex(::ChainActive().Tip(), true)));\n+    diff.pushKV(\"search-interval\", (int)lastCoinStakeSearchInterval);\n+    obj.pushKV(\"difficulty\",       diff);\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n+    obj.pushKV(\"blockvalue\",    (uint64_t)GetBlockSubsidy(::ChainActive().Height(), consensusParams));\n+    obj.pushKV(\"netmhashps\",       GetPoWMHashPS());\n+    obj.pushKV(\"netstakeweight\",   GetPoSKernelPS());\n+    obj.pushKV(\"errors\",           GetWarnings(\"statusbar\").original);\n     obj.pushKV(\"networkhashps\",    getnetworkhashps().HandleRequest(request));\n     obj.pushKV(\"pooledtx\",         (uint64_t)mempool.size());\n+    weight.pushKV(\"minimum\",       (uint64_t)nWeight);\n+    weight.pushKV(\"maximum\",       (uint64_t)0);\n+    weight.pushKV(\"combined\",      (uint64_t)nWeight);\n+    obj.pushKV(\"stakeweight\",      weight);\n     obj.pushKV(\"chain\",            Params().NetworkIDString());\n     obj.pushKV(\"warnings\",         GetWarnings(false).original);\n     return obj;\n },\n     };\n }\n \n+static UniValue getstakinginfo(const JSONRPCRequest& request)\n+{\n+            RPCHelpMan{\"getstakinginfo\",\n+                \"\\nReturns an object containing staking-related information.\",\n+                {},\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::BOOL, \"enabled\", \"'true' if staking is enabled\"},\n+                        {RPCResult::Type::BOOL, \"staking\", \"'true' if wallet is currently staking\"},\n+                        {RPCResult::Type::STR,  \"errors\", \"errors\"},\n+                        {RPCResult::Type::NUM,  \"pooledtx\", \"The size of the mempool\"},\n+                        {RPCResult::Type::NUM,  \"difficulty\", \"The current difficulty\"},\n+                        {RPCResult::Type::NUM,  \"search-interval\", \"The size of the mempool\"},\n+                        {RPCResult::Type::NUM,  \"weight\", \"The size of the mempool\"},\n+                        {RPCResult::Type::NUM,  \"netstakeweight\", \"The size of the mempool\"},\n+                        {RPCResult::Type::NUM,  \"expectedtime\", \"The size of the mempool\"},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getstakinginfo\", \"\")\n+            + HelpExampleRpc(\"getstakinginfo\", \"\")\n+                },\n+            }.Check(request);\n+\n+    LOCK(cs_main);\n+    const CTxMemPool& mempool = EnsureMemPool(request.context);\n+\n+    uint64_t nWeight = 0;\n+    uint64_t lastCoinStakeSearchInterval = 0;\n+#ifdef ENABLE_WALLET\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (pwallet)\n+    {\n+        LOCK(pwallet->cs_wallet);\n+        nWeight = pwallet->GetStakeWeight();\n+        lastCoinStakeSearchInterval = pwallet->m_enabled_staking ? pwallet->m_last_coin_stake_search_interval : 0;\n+    }\n+#endif\n+\n+    uint64_t nNetworkWeight = GetPoSKernelPS();\n+    bool staking = lastCoinStakeSearchInterval && nWeight;\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n+    int64_t nTargetSpacing = consensusParams.nPowTargetSpacing;\n+    uint64_t nExpectedTime = staking ? (nTargetSpacing * nNetworkWeight / nWeight) : 0;\n+\n+    UniValue obj(UniValue::VOBJ);\n+\n+    obj.pushKV(\"enabled\", gArgs.GetBoolArg(\"-staking\", true));\n+    obj.pushKV(\"staking\", staking);\n+    obj.pushKV(\"errors\", GetWarnings(\"statusbar\").original);\n+\n+    if (BlockAssembler::m_last_block_num_txs) obj.pushKV(\"currentblocktx\", *BlockAssembler::m_last_block_num_txs);\n+    obj.pushKV(\"pooledtx\", (uint64_t)mempool.size());\n+\n+    obj.pushKV(\"difficulty\", GetDifficulty(GetLastBlockIndex(pindexBestHeader, true)));\n+    obj.pushKV(\"search-interval\", (int)lastCoinStakeSearchInterval);\n+\n+    obj.pushKV(\"weight\", (uint64_t)nWeight);\n+    obj.pushKV(\"netstakeweight\", (uint64_t)nNetworkWeight);\n+\n+    obj.pushKV(\"expectedtime\", nExpectedTime);\n+\n+    return obj;\n+}\n+\n+static UniValue getstakingstatus(const JSONRPCRequest& request)\n+{\n+            RPCHelpMan{\"getstakingstatus\",\n+                \"\\nReturns an object containing staking status information.\",\n+                {},\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::BOOL, \"enabled\", \"'true' if staking is enabled\"},\n+                        {RPCResult::Type::BOOL, \"staking\", \"'true' if wallet is currently staking\"},\n+                        {RPCResult::Type::BOOL, \"walletstakingenabled\", \"'true' if wallet is has staking enabled\"},\n+                        {RPCResult::Type::NUM,  \"stakesearchinterval\", \"last coin stake interval\"},\n+                        {RPCResult::Type::BOOL, \"walletunlocked\", \"'true' if wallet is unlocked\"},\n+                        {RPCResult::Type::BOOL, \"nodeconnections\", \"'true' if wallet is online (has connections)\"},\n+                        {RPCResult::Type::BOOL, \"nodesynced\", \"'true' if wallet is synced\"},\n+                        {RPCResult::Type::BOOL, \"stakeablecoins\", \"'true' if there are stakeable coins\"},\n+                        {RPCResult::Type::STR,  \"errors\", \"errors\"},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getstakingstatus\", \"\")\n+            + HelpExampleRpc(\"getstakingstatus\", \"\")\n+                },\n+            }.Check(request);\n+\n+    LOCK(cs_main);\n+\n+    NodeContext& node = EnsureNodeContext(request.context);\n+    if(!node.connman)\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+\n+    uint64_t nWeight = 0;\n+    uint64_t lastCoinStakeSearchInterval = 0;\n+    bool isUnlocked = false;\n+    bool walletStakingEnabled = false;\n+#ifdef ENABLE_WALLET\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (pwallet)\n+    {\n+        LOCK(pwallet->cs_wallet);\n+        nWeight = pwallet->GetStakeWeight();\n+        lastCoinStakeSearchInterval = pwallet->m_last_coin_stake_search_interval;\n+        isUnlocked = !pwallet->IsLocked();\n+        walletStakingEnabled = pwallet->m_enabled_staking;\n+    }\n+#endif\n+\n+    bool staking = walletStakingEnabled && lastCoinStakeSearchInterval && nWeight;\n+    bool hasConnections = node.connman->GetNodeCount(CConnman::CONNECTIONS_ALL) >= 4;\n+    bool isSynced = !::ChainstateActive().IsInitialBlockDownload();\n+    bool hasCoins = nWeight != 0;\n+\n+    UniValue obj(UniValue::VOBJ);\n+\n+    obj.pushKV(\"enabled\", gArgs.GetBoolArg(\"-staking\", true));\n+    obj.pushKV(\"staking\", staking);\n+    obj.pushKV(\"walletstakingenabled\", walletStakingEnabled);\n+    obj.pushKV(\"stakesearchinterval\", lastCoinStakeSearchInterval);\n+    obj.pushKV(\"walletunlocked\", isUnlocked);\n+    obj.pushKV(\"nodeconnections\", hasConnections);\n+    obj.pushKV(\"nodesynced\", isSynced);\n+    obj.pushKV(\"stakeablecoins\", hasCoins);\n+    obj.pushKV(\"errors\", GetWarnings(\"statusbar\").original);\n+\n+    return obj;\n+}\n \n // NOTE: Unlike wallet RPC (which use BTC values), mining RPCs follow GBT (BIP 22) in using satoshi amounts\n static RPCHelpMan prioritisetransaction()\n@@ -741,7 +912,7 @@ static RPCHelpMan getblocktemplate()\n \n         // Create new block\n         CScript scriptDummy = CScript() << OP_TRUE;\n-        pblocktemplate = BlockAssembler(mempool, Params()).CreateNewBlock(scriptDummy);\n+        pblocktemplate = BlockAssembler(mempool, Params()).CreateNewBlock(scriptDummy, ::ChainActive().Tip()->nHeight>=Params().GetConsensus().nLastPOWBlock? true : false);\n         if (!pblocktemplate)\n             throw JSONRPCError(RPC_OUT_OF_MEMORY, \"Out of memory\");\n \n@@ -1222,6 +1393,8 @@ static const CRPCCommand commands[] =\n     { \"mining\",             \"submitblock\",            &submitblock,            {\"hexdata\",\"dummy\"} },\n     { \"mining\",             \"submitheader\",           &submitheader,           {\"hexdata\"} },\n \n+    { \"mining\",             \"getstakinginfo\",         &getstakinginfo,         {} },\n+    { \"mining\",             \"getstakingstatus\",       &getstakingstatus,       {} },\n \n     { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n     { \"generating\",         \"generatetodescriptor\",   &generatetodescriptor,   {\"num_blocks\",\"descriptor\",\"maxtries\"} },"
      },
      {
        "sha": "5a1bd53f95b76da76b681f6ce7337a6de9bff3b8",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -705,7 +705,7 @@ static RPCHelpMan combinerawtransaction()\n                 sigdata.MergeSignatureData(DataFromTransaction(txv, i, coin.out));\n             }\n         }\n-        ProduceSignature(DUMMY_SIGNING_PROVIDER, MutableTransactionSignatureCreator(&mergedTx, i, coin.out.nValue, 1), coin.out.scriptPubKey, sigdata);\n+        ProduceSignature(DUMMY_SIGNING_PROVIDER, MutableTransactionSignatureCreator(&mergedTx, i, coin.out.nValue, 1), coin.out.scriptPubKey, sigdata, false);\n \n         UpdateInput(txin, sigdata);\n     }"
      },
      {
        "sha": "16ad8b3d9bb0fe55d077fa7c327a349c8180c86a",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -177,6 +177,10 @@ bool IsDeprecatedRPCEnabled(const std::string& method);\n \n extern CRPCTable tableRPC;\n \n+extern double GetPoWMHashPS();\n+extern double GetPoSKernelPS();\n+extern double GetEstimatedAnnualROI();\n+\n void StartRPC();\n void InterruptRPC();\n void StopRPC();"
      },
      {
        "sha": "aca0c42b4bab657ac45f00c50819f4c5db076800",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 9,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -12,8 +12,6 @@\n #include <script/script.h>\n #include <uint256.h>\n \n-typedef std::vector<unsigned char> valtype;\n-\n namespace {\n \n inline bool set_success(ScriptError* ret)\n@@ -60,7 +58,7 @@ static inline void popstack(std::vector<valtype>& stack)\n     stack.pop_back();\n }\n \n-bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n+bool IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n     if (vchPubKey.size() < CPubKey::COMPRESSED_SIZE) {\n         //  Non-canonical public key: too short\n         return false;\n@@ -104,7 +102,7 @@ bool static IsCompressedPubKey(const valtype &vchPubKey) {\n  *\n  * This function is consensus-critical since BIP66.\n  */\n-bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig) {\n+bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig, bool haveHashType = true) {\n     // Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S] [sighash]\n     // * total-length: 1-byte length descriptor of everything that follows,\n     //   excluding the sighash byte.\n@@ -125,7 +123,7 @@ bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig) {\n     if (sig[0] != 0x30) return false;\n \n     // Make sure the length covers the entire signature.\n-    if (sig[1] != sig.size() - 3) return false;\n+    if (sig[1] != sig.size() - (haveHashType ? 3 : 2)) return false;\n \n     // Extract the length of the R element.\n     unsigned int lenR = sig[3];\n@@ -138,7 +136,7 @@ bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig) {\n \n     // Verify that the length of the signature matches the sum of the length\n     // of the elements.\n-    if ((size_t)(lenR + lenS + 7) != sig.size()) return false;\n+    if ((size_t)(lenR + lenS + (haveHashType ? 7 : 6)) != sig.size()) return false;\n \n     // Check whether the R element is an integer.\n     if (sig[2] != 0x02) return false;\n@@ -169,14 +167,14 @@ bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig) {\n     return true;\n }\n \n-bool static IsLowDERSignature(const valtype &vchSig, ScriptError* serror) {\n-    if (!IsValidSignatureEncoding(vchSig)) {\n+bool IsLowDERSignature(const valtype &vchSig, ScriptError* serror, bool haveHashType) {\n+    if (!IsValidSignatureEncoding(vchSig, haveHashType)) {\n         return set_error(serror, SCRIPT_ERR_SIG_DER);\n     }\n     // https://bitcoin.stackexchange.com/a/12556:\n     //     Also note that inside transaction signatures, an extra hashtype byte\n     //     follows the actual signature data.\n-    std::vector<unsigned char> vchSigCopy(vchSig.begin(), vchSig.begin() + vchSig.size() - 1);\n+    std::vector<unsigned char> vchSigCopy(vchSig.begin(), vchSig.begin() + vchSig.size() - (haveHashType ? 1 : 0));\n     // If the S value is above the order of the curve divided by two, its\n     // complement modulo the order could have been used instead, which is\n     // one byte shorter when encoded correctly.\n@@ -186,6 +184,13 @@ bool static IsLowDERSignature(const valtype &vchSig, ScriptError* serror) {\n     return true;\n }\n \n+bool IsDERSignature(const valtype &vchSig, ScriptError* serror, bool haveHashType) {\n+    if (!IsValidSignatureEncoding(vchSig, haveHashType)) {\n+        return set_error(serror, SCRIPT_ERR_SIG_DER);\n+    }\n+    return true;\n+}\n+\n bool static IsDefinedHashtypeSignature(const valtype &vchSig) {\n     if (vchSig.size() == 0) {\n         return false;\n@@ -1238,6 +1243,15 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                 }\n                 break;\n \n+                case OP_CHECKCOLDSTAKEVERIFY:\n+                {\n+                    // check it is used in a valid cold stake transaction.\n+                    if(!checker.CheckColdStake(script)) {\n+                        return set_error(serror, SCRIPT_ERR_CHECKCOLDSTAKEVERIFY);\n+                    }\n+                }\n+                break;\n+\n                 default:\n                     return set_error(serror, SCRIPT_ERR_BAD_OPCODE);\n             }"
      },
      {
        "sha": "c6f88a35a1ada844116b657a4f5b332b3d5e0be5",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -20,6 +20,8 @@ class CTransaction;\n class CTxOut;\n class uint256;\n \n+typedef std::vector<unsigned char> valtype;\n+\n /** Signature hash types/flags */\n enum\n {\n@@ -244,6 +246,11 @@ class BaseSignatureChecker\n          return false;\n     }\n \n+    virtual bool CheckColdStake(const CScript& script) const\n+    {\n+         return false;\n+    }\n+\n     virtual ~BaseSignatureChecker() {}\n };\n \n@@ -267,6 +274,9 @@ class GenericTransactionSignatureChecker : public BaseSignatureChecker\n     bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata, ScriptError* serror = nullptr) const override;\n     bool CheckLockTime(const CScriptNum& nLockTime) const override;\n     bool CheckSequence(const CScriptNum& nSequence) const override;\n+    bool CheckColdStake(const CScript& script) const override {\n+        return txTo->CheckColdStake(script);\n+    }\n };\n \n using TransactionSignatureChecker = GenericTransactionSignatureChecker<CTransaction>;\n@@ -280,4 +290,8 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n \n int FindAndDelete(CScript& script, const CScript& b);\n \n+bool IsLowDERSignature(const valtype &vchSig, ScriptError* serror = NULL, bool haveHashType = true);\n+bool IsDERSignature(const valtype &vchSig, ScriptError* serror = NULL, bool haveHashType = true);\n+bool IsCompressedOrUncompressedPubKey(const valtype &vchPubKey);\n+\n #endif // BITCOIN_SCRIPT_INTERPRETER_H"
      },
      {
        "sha": "a1b0a4ae2620b10d2ec8104dd98cd9161a674872",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -142,6 +142,9 @@ std::string GetOpName(opcodetype opcode)\n \n     // Opcode added by BIP 342 (Tapscript)\n     case OP_CHECKSIGADD            : return \"OP_CHECKSIGADD\";\n+    \n+    // cold staking\n+    case OP_CHECKCOLDSTAKEVERIFY   : return \"OP_CHECKCOLDSTAKEVERIFY\";\n \n     case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n@@ -207,6 +210,18 @@ bool CScript::IsPayToScriptHash() const\n             (*this)[22] == OP_EQUAL);\n }\n \n+bool CScript::IsPayToColdStaking() const\n+{\n+    // Extra-fast test for pay-to-cold-staking CScripts:\n+    return (this->size() == 51 &&\n+            (*this)[2] == OP_ROT &&\n+            (*this)[4] == OP_CHECKCOLDSTAKEVERIFY &&\n+            (*this)[5] == 0x14 &&\n+            (*this)[27] == 0x14 &&\n+            (*this)[49] == OP_EQUALVERIFY &&\n+            (*this)[50] == OP_CHECKSIG);\n+}\n+\n bool CScript::IsPayToWitnessScriptHash() const\n {\n     // Extra-fast test for pay-to-witness-script-hash CScripts:"
      },
      {
        "sha": "c438bb1ceb66ad0d4ffe966b4e7210edad656bf3",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -200,6 +200,9 @@ enum opcodetype\n \n     // Opcode added by BIP 342 (Tapscript)\n     OP_CHECKSIGADD = 0xba,\n+    \n+    // cold staking\n+    OP_CHECKCOLDSTAKEVERIFY = 0xe1,\n \n     OP_INVALIDOPCODE = 0xff,\n };\n@@ -525,6 +528,7 @@ class CScript : public CScriptBase\n     unsigned int GetSigOpCount(const CScript& scriptSig) const;\n \n     bool IsPayToScriptHash() const;\n+    bool IsPayToColdStaking() const;\n     bool IsPayToWitnessScriptHash() const;\n     bool IsWitnessProgram(int& version, std::vector<unsigned char>& program) const;\n "
      },
      {
        "sha": "4f925710afef42aa4d892f1a9c0bcbe8e74a8011",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -21,6 +21,8 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"Script failed an OP_EQUALVERIFY operation\";\n         case SCRIPT_ERR_CHECKMULTISIGVERIFY:\n             return \"Script failed an OP_CHECKMULTISIGVERIFY operation\";\n+        case SCRIPT_ERR_CHECKCOLDSTAKEVERIFY:\n+            return \"Script failed an OP_CHECKCOLDSTAKEVERIFY operation\";\n         case SCRIPT_ERR_CHECKSIGVERIFY:\n             return \"Script failed an OP_CHECKSIGVERIFY operation\";\n         case SCRIPT_ERR_NUMEQUALVERIFY:"
      },
      {
        "sha": "55590bdfa2254fd619f920a75e75711f4ff24b25",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -27,6 +27,7 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_VERIFY,\n     SCRIPT_ERR_EQUALVERIFY,\n     SCRIPT_ERR_CHECKMULTISIGVERIFY,\n+    SCRIPT_ERR_CHECKCOLDSTAKEVERIFY,\n     SCRIPT_ERR_CHECKSIGVERIFY,\n     SCRIPT_ERR_NUMEQUALVERIFY,\n "
      },
      {
        "sha": "d98886adbf4f95feb8411b2f5e3e2315a33b289b",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 13,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -96,7 +96,7 @@ static bool CreateSig(const BaseSignatureCreator& creator, SignatureData& sigdat\n  * Returns false if scriptPubKey could not be completely satisfied.\n  */\n static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator& creator, const CScript& scriptPubKey,\n-                     std::vector<valtype>& ret, TxoutType& whichTypeRet, SigVersion sigversion, SignatureData& sigdata)\n+                     std::vector<valtype>& ret, TxoutType& whichTypeRet, SigVersion sigversion, SignatureData& sigdata, bool fColdStake)\n {\n     CScript scriptRet;\n     uint160 h160;\n@@ -174,6 +174,33 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n         sigdata.missing_witness_script = uint256(vSolutions[0]);\n         return false;\n \n+    case TxoutType::COLDSTAKE: {\n+        CKeyID keyID;\n+        if (fColdStake) {\n+            // sign with the cold staker key\n+            keyID = CKeyID(uint160(vSolutions[0]));\n+        } else {\n+            // sign with the owner key\n+            keyID = CKeyID(uint160(vSolutions[1]));\n+        }\n+        CPubKey pubkey;\n+        if (!GetPubKey(provider, sigdata, keyID, pubkey)) {\n+            // Pubkey could not be found, add to missing\n+            sigdata.missing_pubkeys.push_back(keyID);\n+            return false;\n+        }\n+        if (!CreateSig(creator, sigdata, provider, sig, pubkey, scriptPubKey, sigversion))\n+            return false;\n+\n+        ret.push_back(std::move(sig));\n+        valtype oper;\n+        oper.reserve(4);\n+        oper.emplace_back((fColdStake ? (int) OP_TRUE : OP_FALSE));\n+        ret.emplace_back(oper);\n+        ret.emplace_back(ToByteVector(pubkey));\n+        return true;\n+    }\n+\n     default:\n         return false;\n     }\n@@ -196,13 +223,13 @@ static CScript PushAll(const std::vector<valtype>& values)\n     return result;\n }\n \n-bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreator& creator, const CScript& fromPubKey, SignatureData& sigdata)\n+bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreator& creator, const CScript& fromPubKey, SignatureData& sigdata, bool fColdStake)\n {\n     if (sigdata.complete) return true;\n \n     std::vector<valtype> result;\n     TxoutType whichType;\n-    bool solved = SignStep(provider, creator, fromPubKey, result, whichType, SigVersion::BASE, sigdata);\n+    bool solved = SignStep(provider, creator, fromPubKey, result, whichType, SigVersion::BASE, sigdata, fColdStake);\n     bool P2SH = false;\n     CScript subscript;\n     sigdata.scriptWitness.stack.clear();\n@@ -214,7 +241,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n         // and then the serialized subscript:\n         subscript = CScript(result[0].begin(), result[0].end());\n         sigdata.redeem_script = subscript;\n-        solved = solved && SignStep(provider, creator, subscript, result, whichType, SigVersion::BASE, sigdata) && whichType != TxoutType::SCRIPTHASH;\n+        solved = solved && SignStep(provider, creator, subscript, result, whichType, SigVersion::BASE, sigdata, fColdStake) && whichType != TxoutType::SCRIPTHASH;\n         P2SH = true;\n     }\n \n@@ -223,7 +250,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n         CScript witnessscript;\n         witnessscript << OP_DUP << OP_HASH160 << ToByteVector(result[0]) << OP_EQUALVERIFY << OP_CHECKSIG;\n         TxoutType subType;\n-        solved = solved && SignStep(provider, creator, witnessscript, result, subType, SigVersion::WITNESS_V0, sigdata);\n+        solved = solved && SignStep(provider, creator, witnessscript, result, subType, SigVersion::WITNESS_V0, sigdata, fColdStake);\n         sigdata.scriptWitness.stack = result;\n         sigdata.witness = true;\n         result.clear();\n@@ -233,7 +260,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n         CScript witnessscript(result[0].begin(), result[0].end());\n         sigdata.witness_script = witnessscript;\n         TxoutType subType;\n-        solved = solved && SignStep(provider, creator, witnessscript, result, subType, SigVersion::WITNESS_V0, sigdata) && subType != TxoutType::SCRIPTHASH && subType != TxoutType::WITNESS_V0_SCRIPTHASH && subType != TxoutType::WITNESS_V0_KEYHASH;\n+        solved = solved && SignStep(provider, creator, witnessscript, result, subType, SigVersion::WITNESS_V0, sigdata, fColdStake) && subType != TxoutType::SCRIPTHASH && subType != TxoutType::WITNESS_V0_SCRIPTHASH && subType != TxoutType::WITNESS_V0_KEYHASH;\n         result.push_back(std::vector<unsigned char>(witnessscript.begin(), witnessscript.end()));\n         sigdata.scriptWitness.stack = result;\n         sigdata.witness = true;\n@@ -373,26 +400,39 @@ void SignatureData::MergeSignatureData(SignatureData sigdata)\n     signatures.insert(std::make_move_iterator(sigdata.signatures.begin()), std::make_move_iterator(sigdata.signatures.end()));\n }\n \n-bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType)\n+bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType, bool fColdStake)\n {\n     assert(nIn < txTo.vin.size());\n \n     MutableTransactionSignatureCreator creator(&txTo, nIn, amount, nHashType);\n \n     SignatureData sigdata;\n-    bool ret = ProduceSignature(provider, creator, fromPubKey, sigdata);\n+    bool ret = ProduceSignature(provider, creator, fromPubKey, sigdata, fColdStake);\n     UpdateInput(txTo.vin.at(nIn), sigdata);\n     return ret;\n }\n \n-bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType)\n+bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType, bool fColdStake)\n {\n     assert(nIn < txTo.vin.size());\n     CTxIn& txin = txTo.vin[nIn];\n     assert(txin.prevout.n < txFrom.vout.size());\n     const CTxOut& txout = txFrom.vout[txin.prevout.n];\n \n-    return SignSignature(provider, txout.scriptPubKey, txTo, nIn, txout.nValue, nHashType);\n+    return SignSignature(provider, txout.scriptPubKey, txTo, nIn, txout.nValue, nHashType, fColdStake);\n+}\n+\n+bool VerifySignature(const Coin& coin, const uint256 txFromHash, const CTransaction& txTo, unsigned int nIn, unsigned int flags)\n+{\n+    TransactionSignatureChecker checker(&txTo, nIn, 0);\n+\t\n+    const CTxIn& txin = txTo.vin[nIn];\n+    const CTxOut& txout = coin.out;\n+\n+    if (txin.prevout.hash != txFromHash)\n+        return false;\n+\t\t\n+    return VerifyScript(txin.scriptSig, txout.scriptPubKey, NULL, flags, checker);\n }\n \n namespace {\n@@ -434,7 +474,7 @@ class DummySignatureCreator final : public BaseSignatureCreator {\n const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR = DummySignatureCreator(32, 32);\n const BaseSignatureCreator& DUMMY_MAXIMUM_SIGNATURE_CREATOR = DummySignatureCreator(33, 32);\n \n-bool IsSolvable(const SigningProvider& provider, const CScript& script)\n+bool IsSolvable(const SigningProvider& provider, const CScript& script, bool fColdStaking)\n {\n     // This check is to make sure that the script we created can actually be solved for and signed by us\n     // if we were to have the private keys. This is just to make sure that the script is valid and that,\n@@ -444,7 +484,7 @@ bool IsSolvable(const SigningProvider& provider, const CScript& script)\n     // Make sure that STANDARD_SCRIPT_VERIFY_FLAGS includes SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, the most\n     // important property this function is designed to test for.\n     static_assert(STANDARD_SCRIPT_VERIFY_FLAGS & SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, \"IsSolvable requires standard script flags to include WITNESS_PUBKEYTYPE\");\n-    if (ProduceSignature(provider, DUMMY_SIGNATURE_CREATOR, script, sigs)) {\n+    if (ProduceSignature(provider, DUMMY_SIGNATURE_CREATOR, script, sigs, fColdStaking)) {\n         // VerifyScript check is just defensive, and should never fail.\n         bool verified = VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, DUMMY_CHECKER);\n         assert(verified);\n@@ -487,10 +527,17 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n         const CScript& prevPubKey = coin->second.out.scriptPubKey;\n         const CAmount& amount = coin->second.out.nValue;\n \n+        bool haveKey = false;\n+        if (prevPubKey.IsPayToColdStaking()) {\n+            std::vector<valtype> solutions;\n+            Solver(prevPubKey, solutions);\n+            haveKey = keystore->HaveKey(CKeyID(uint160(solutions[1])));\n+        }\n+\n         SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n         // Only sign SIGHASH_SINGLE if there's a corresponding output:\n         if (!fHashSingle || (i < mtx.vout.size())) {\n-            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);\n+            ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata, !haveKey);\n         }\n \n         UpdateInput(txin, sigdata);"
      },
      {
        "sha": "81ad0cedcaf4b09d3e57a8dfdd121a3611649380",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -13,6 +13,7 @@\n #include <script/keyorigin.h>\n #include <span.h>\n #include <streams.h>\n+#include <coins.h>\n \n class CKey;\n class CKeyID;\n@@ -151,11 +152,12 @@ void SerializeHDKeypaths(Stream& s, const std::map<CPubKey, KeyOriginInfo>& hd_k\n }\n \n /** Produce a script signature using a generic signature creator. */\n-bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreator& creator, const CScript& scriptPubKey, SignatureData& sigdata);\n+bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreator& creator, const CScript& scriptPubKey, SignatureData& sigdata, bool fColdStake);\n \n /** Produce a script signature for a transaction. */\n-bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);\n-bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);\n+bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType, bool fColdStake = false);\n+bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType, bool fColdStake = false);\n+bool VerifySignature(const Coin& coin, uint256 txFromHash, const CTransaction& txTo, unsigned int nIn, unsigned int flags);\n \n /** Extract signature data from a transaction input, and insert it. */\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout);\n@@ -165,7 +167,7 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * have all private keys. While this function does not need private keys, the passed\n  * provider is used to look up public keys and redeemscripts by hash.\n  * Solvability is unrelated to whether we consider this output to be ours. */\n-bool IsSolvable(const SigningProvider& provider, const CScript& script);\n+bool IsSolvable(const SigningProvider& provider, const CScript& script, bool fColdStaking = false);\n \n /** Check whether a scriptPubKey is known to be segwit. */\n bool IsSegWitOutput(const SigningProvider& provider, const CScript& script);"
      },
      {
        "sha": "79c0ab3a0cc12321d0219297a6cd92e914a1c254",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -57,6 +57,7 @@ std::string GetTxnOutputType(TxoutType t)\n     case TxoutType::WITNESS_V0_SCRIPTHASH: return \"witness_v0_scripthash\";\n     case TxoutType::WITNESS_V1_TAPROOT: return \"witness_v1_taproot\";\n     case TxoutType::WITNESS_UNKNOWN: return \"witness_unknown\";\n+    case TxoutType::COLDSTAKE: return \"coldstake\";\n     } // no default case, so the compiler can warn about missing cases\n     assert(false);\n }\n@@ -83,6 +84,16 @@ static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n     return false;\n }\n \n+static bool MatchPayToColdStaking(const CScript& script, valtype& stakerPubKeyHash, valtype& ownerPubKeyHash)\n+{\n+    if (script.IsPayToColdStaking()) {\n+        stakerPubKeyHash = valtype(script.begin () + 6, script.begin() + 26);\n+        ownerPubKeyHash = valtype(script.begin () + 28, script.begin() + 48);\n+        return true;\n+    }\n+    return false;\n+}\n+\n /** Test for \"small positive integer\" script opcodes - OP_1 through OP_16. */\n static constexpr bool IsSmallInteger(opcodetype opcode)\n {\n@@ -164,6 +175,13 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n         return TxoutType::PUBKEYHASH;\n     }\n \n+    std::vector<unsigned char> data1;\n+    if (MatchPayToColdStaking(scriptPubKey, data, data1)) {\n+        vSolutionsRet.push_back(std::move(data));\n+        vSolutionsRet.push_back(std::move(data1));\n+        return TxoutType::COLDSTAKE;\n+    }\n+\n     unsigned int required;\n     std::vector<std::vector<unsigned char>> keys;\n     if (MatchMultisig(scriptPubKey, required, keys)) {\n@@ -177,11 +195,15 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n     return TxoutType::NONSTANDARD;\n }\n \n-bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n+bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet, TxoutType *typeRet, bool fColdStake)\n {\n     std::vector<valtype> vSolutions;\n     TxoutType whichType = Solver(scriptPubKey, vSolutions);\n \n+    if(typeRet){\n+        *typeRet = whichType;\n+    }\n+\n     if (whichType == TxoutType::PUBKEY) {\n         CPubKey pubKey(vSolutions[0]);\n         if (!pubKey.IsValid())\n@@ -216,6 +238,9 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n         unk.length = vSolutions[1].size();\n         addressRet = unk;\n         return true;\n+    } else if (whichType == TxoutType::COLDSTAKE) {\n+        addressRet = PKHash(uint160(vSolutions[!fColdStake]));\n+        return true;\n     }\n     // Multisig txns have more than one address...\n     return false;\n@@ -249,6 +274,16 @@ bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::v\n         if (addressRet.empty())\n             return false;\n     }\n+    else if (typeRet == TxoutType::COLDSTAKE)\n+    {\n+        if (vSolutions.size() < 2)\n+            return false;\n+        nRequiredRet = 2;\n+        addressRet.push_back(PKHash(uint160(vSolutions[0])));\n+        addressRet.push_back(PKHash(uint160(vSolutions[1])));\n+        return true;\n+\n+    }\n     else\n     {\n         nRequiredRet = 1;\n@@ -319,6 +354,16 @@ CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys)\n     return script;\n }\n \n+CScript GetScriptForStakeDelegation(const CKeyID& stakingKey, const CKeyID& spendingKey)\n+{\n+    CScript script;\n+    script << OP_DUP << OP_HASH160 << OP_ROT <<\n+            OP_IF << OP_CHECKCOLDSTAKEVERIFY << ToByteVector(stakingKey) <<\n+            OP_ELSE << ToByteVector(spendingKey) << OP_ENDIF <<\n+            OP_EQUALVERIFY << OP_CHECKSIG;\n+    return script;\n+}\n+\n bool IsValidDestination(const CTxDestination& dest) {\n     return dest.which() != 0;\n }"
      },
      {
        "sha": "a5193e60f5c37c3266c1e112c9423b6046655a39",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -131,6 +131,7 @@ enum class TxoutType {\n     WITNESS_V0_KEYHASH,\n     WITNESS_V1_TAPROOT,\n     WITNESS_UNKNOWN, //!< Only for Witness versions not already defined above\n+    COLDSTAKE,\n };\n \n class CNoDestination {\n@@ -237,7 +238,7 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n  * scripts, instead use ExtractDestinations. Currently only works for P2PK,\n  * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n  */\n-bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n+bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet, TxoutType* typeRet = NULL, bool fColdStake = false);\n \n /**\n  * Parse a standard scriptPubKey with one or more destination addresses. For\n@@ -265,4 +266,7 @@ CScript GetScriptForRawPubKey(const CPubKey& pubkey);\n /** Generate a multisig script. */\n CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys);\n \n+/** Generate a coldstake delegation script. */\n+CScript GetScriptForStakeDelegation(const CKeyID& stakingKey, const CKeyID& spendingKey);\n+\n #endif // BITCOIN_SCRIPT_STANDARD_H"
      },
      {
        "sha": "5175f0886d821fbc7c848234845f2d5177491e62",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -93,9 +93,9 @@ BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n \n     CBlockUndo block_undo;\n     block_undo.vtxundo.emplace_back();\n-    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(500, included_scripts[3]), 1000, true);\n-    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(600, included_scripts[4]), 10000, false);\n-    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(700, excluded_scripts[3]), 100000, false);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(500, included_scripts[3]), 1000, true, false);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(600, included_scripts[4]), 10000, false, false);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(700, excluded_scripts[3]), 100000, false, false);\n \n     BlockFilter block_filter(BlockFilterType::BASIC, block, block_undo);\n     const GCSFilter& filter = block_filter.GetFilter();\n@@ -162,7 +162,7 @@ BOOST_AUTO_TEST_CASE(blockfilters_json_test)\n         for (unsigned int ii = 0; ii < prev_scripts.size(); ii++) {\n             std::vector<unsigned char> raw_script = ParseHex(prev_scripts[ii].get_str());\n             CTxOut txout(0, CScript(raw_script.begin(), raw_script.end()));\n-            tx_undo.vprevout.emplace_back(txout, 0, false);\n+            tx_undo.vprevout.emplace_back(txout, 0, false, false);\n         }\n \n         uint256 prev_filter_header_basic;"
      },
      {
        "sha": "33dff758967d75b4382a854fd2b8aa9730affb93",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -393,7 +393,7 @@ BOOST_AUTO_TEST_CASE(updatecoins_simulation_test)\n             // Update the expected result to know about the new output coins\n             assert(tx.vout.size() == 1);\n             const COutPoint outpoint(tx.GetHash(), 0);\n-            result[outpoint] = Coin(tx.vout[0], height, CTransaction(tx).IsCoinBase());\n+            result[outpoint] = Coin(tx.vout[0], height, CTransaction(tx).IsCoinBase(), CTransaction(tx).IsCoinStake());\n \n             // Call UpdateCoins on the top cache\n             CTxUndo undo;\n@@ -739,7 +739,7 @@ static void CheckAddCoinBase(CAmount base_value, CAmount cache_value, CAmount mo\n     try {\n         CTxOut output;\n         output.nValue = modify_value;\n-        test.cache.AddCoin(OUTPOINT, Coin(std::move(output), 1, coinbase), coinbase);\n+        test.cache.AddCoin(OUTPOINT, Coin(std::move(output), 1, coinbase, false), coinbase);\n         test.cache.SelfTest();\n         GetCoinsMapEntry(test.cache.map(), result_value, result_flags);\n     } catch (std::logic_error&) {"
      },
      {
        "sha": "6320365b00da7905246eb3c2a3cbcf0d3ce86f70",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -67,8 +67,6 @@ static inline uint64_t InsecureRandBits(int bits) { return g_insecure_rand_ctx.r\n static inline uint64_t InsecureRandRange(uint64_t range) { return g_insecure_rand_ctx.randrange(range); }\n static inline bool InsecureRandBool() { return g_insecure_rand_ctx.randbool(); }\n \n-static constexpr CAmount CENT{1000000};\n-\n /** Basic testing setup.\n  * This just configures logging, data dir and chain parameters.\n  */"
      },
      {
        "sha": "de8cd12c0d9cad08e287f4edf06013f60b866532",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 84,
        "deletions": 5,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -14,14 +14,17 @@\n #include <util/system.h>\n #include <util/translation.h>\n #include <util/vector.h>\n+#include <validation.h>\n \n #include <stdint.h>\n \n+#include <boost/thread.hpp>\n+\n static const char DB_COIN = 'C';\n static const char DB_COINS = 'c';\n static const char DB_BLOCK_FILES = 'f';\n static const char DB_BLOCK_INDEX = 'b';\n-\n+static const char DB_STAKEINDEX = 's';\n static const char DB_BEST_BLOCK = 'B';\n static const char DB_HEAD_BLOCKS = 'H';\n static const char DB_FLAG = 'F';\n@@ -270,10 +273,17 @@ bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams,\n                 pindexNew->nNonce         = diskindex.nNonce;\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n+                pindexNew->nStakeModifier = diskindex.nStakeModifier;\n+                pindexNew->prevoutStake   = diskindex.prevoutStake;\n+                pindexNew->vchBlockSig    = diskindex.vchBlockSig;\n+                pindexNew->nMoneySupply   = diskindex.nMoneySupply;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, consensusParams))\n-                    return error(\"%s: CheckProofOfWork failed: %s\", __func__, pindexNew->ToString());\n+                if (!CheckIndexProof(*pindexNew, consensusParams))\n+                    return error(\"%s: CheckIndexProof failed: %s\", __func__, pindexNew->ToString());\n \n+                if (pindexNew->IsProofOfStake())\n+                    ::StakeSeen().insert(std::make_pair(pindexNew->prevoutStake, pindexNew->nTime));\n+                \n                 pcursor->Next();\n             } else {\n                 return error(\"%s: failed to read value\", __func__);\n@@ -286,6 +296,73 @@ bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams,\n     return true;\n }\n \n+bool CBlockTreeDB::WriteStakeIndex(unsigned int height, uint160 address) {\n+    CDBBatch batch(*this);\n+    batch.Write(std::make_pair(DB_STAKEINDEX, height), address);\n+    return WriteBatch(batch);\n+}\n+\n+bool CBlockTreeDB::ReadStakeIndex(unsigned int height, uint160& address){\n+    std::unique_ptr<CDBIterator> pcursor(NewIterator());\n+\n+    pcursor->Seek(std::make_pair(DB_STAKEINDEX, height));\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        std::pair<char, CHeightTxIndexKey> key;\n+        pcursor->GetKey(key); //note: it's apparently ok if this returns an error https://github.com/bitcoin/bitcoin/issues/7890\n+        if (key.first == DB_STAKEINDEX) {\n+            pcursor->GetValue(address);\n+            return true;\n+        }else{\n+            return false;\n+        }\n+    }\n+    return false;\n+}\n+bool CBlockTreeDB::ReadStakeIndex(unsigned int high, unsigned int low, std::vector<uint160> addresses){\n+    std::unique_ptr<CDBIterator> pcursor(NewIterator());\n+\n+    pcursor->Seek(std::make_pair(DB_STAKEINDEX, low));\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        std::pair<char, CHeightTxIndexKey> key;\n+        pcursor->GetKey(key); //note: it's apparently ok if this returns an error https://github.com/bitcoin/bitcoin/issues/7890\n+        if (key.first == DB_STAKEINDEX && key.second.height < high) {\n+            uint160 value;\n+            pcursor->GetValue(value);\n+            addresses.push_back(value);\n+            pcursor->Next();\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+bool CBlockTreeDB::EraseStakeIndex(unsigned int height) {\n+\n+    std::unique_ptr<CDBIterator> pcursor(NewIterator());\n+    CDBBatch batch(*this);\n+\n+    pcursor->Seek(std::make_pair(DB_STAKEINDEX, height));\n+\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        std::pair<char, CHeightTxIndexKey> key;\n+        if (pcursor->GetKey(key) && key.first == DB_STAKEINDEX && key.second.height == height) {\n+            batch.Erase(key);\n+            pcursor->Next();\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    return WriteBatch(batch);\n+}\n+\n namespace {\n \n //! Legacy class to deserialize pre-pertxout database entries without reindex.\n@@ -294,6 +371,7 @@ class CCoins\n public:\n     //! whether transaction is a coinbase\n     bool fCoinBase;\n+    bool fCoinStake;\n \n     //! unspent transaction outputs; spent outputs are .IsNull(); spent outputs at the end of the array are dropped\n     std::vector<CTxOut> vout;\n@@ -302,7 +380,7 @@ class CCoins\n     int nHeight;\n \n     //! empty constructor\n-    CCoins() : fCoinBase(false), vout(0), nHeight(0) { }\n+    CCoins() : fCoinBase(false), fCoinStake(false), vout(0), nHeight(0) { }\n \n     template<typename Stream>\n     void Unserialize(Stream &s) {\n@@ -313,6 +391,7 @@ class CCoins\n         // header code\n         ::Unserialize(s, VARINT(nCode));\n         fCoinBase = nCode & 1;\n+        fCoinStake = nCode & 16;\n         std::vector<bool> vAvail(2, false);\n         vAvail[0] = (nCode & 2) != 0;\n         vAvail[1] = (nCode & 4) != 0;\n@@ -383,7 +462,7 @@ bool CCoinsViewDB::Upgrade() {\n             COutPoint outpoint(key.second, 0);\n             for (size_t i = 0; i < old_coins.vout.size(); ++i) {\n                 if (!old_coins.vout[i].IsNull() && !old_coins.vout[i].scriptPubKey.IsUnspendable()) {\n-                    Coin newcoin(std::move(old_coins.vout[i]), old_coins.nHeight, old_coins.fCoinBase);\n+                    Coin newcoin(std::move(old_coins.vout[i]), old_coins.nHeight, old_coins.fCoinBase, old_coins.fCoinStake);\n                     outpoint.n = i;\n                     CoinEntry entry(&outpoint);\n                     batch.Write(entry, newcoin);"
      },
      {
        "sha": "ca4bfb5083f5ebfec0815cbb46412ad623fa4ec5",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -19,6 +19,7 @@\n class CBlockIndex;\n class CCoinsViewDBCursor;\n class uint256;\n+struct CHeightTxIndexKey;\n \n //! -dbcache default (MiB)\n static const int64_t nDefaultDbCache = 450;\n@@ -106,6 +107,11 @@ class CBlockTreeDB : public CDBWrapper\n     bool WriteFlag(const std::string &name, bool fValue);\n     bool ReadFlag(const std::string &name, bool &fValue);\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n+\n+    bool WriteStakeIndex(unsigned int height, uint160 address);\n+    bool ReadStakeIndex(unsigned int height, uint160& address);\n+    bool ReadStakeIndex(unsigned int high, unsigned int low, std::vector<uint160> addresses);\n+    bool EraseStakeIndex(unsigned int height);\n };\n \n #endif // BITCOIN_TXDB_H"
      },
      {
        "sha": "73e4e74bf9b61e0a30e30434c99539aa2b0ade0c",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -917,13 +917,17 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n     CTransactionRef ptx = mempool.get(outpoint.hash);\n     if (ptx) {\n         if (outpoint.n < ptx->vout.size()) {\n-            coin = Coin(ptx->vout[outpoint.n], MEMPOOL_HEIGHT, false);\n+            coin = Coin(ptx->vout[outpoint.n], MEMPOOL_HEIGHT, false, false);\n             return true;\n         } else {\n             return false;\n         }\n     }\n-    return base->GetCoin(outpoint, coin);\n+    return (base->GetCoin(outpoint, coin) && !coin.IsSpent());\n+}\n+\n+bool CCoinsViewMemPool::HaveCoin(const COutPoint &outpoint) const {\n+    return mempool.exists(outpoint) || base->HaveCoin(outpoint);\n }\n \n size_t CTxMemPool::DynamicMemoryUsage() const {"
      },
      {
        "sha": "5bb8c1eda3b9c5a6481e124966af1c5b4f5524ba",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -743,6 +743,13 @@ class CTxMemPool\n     }\n     bool exists(const uint256& txid) const { return exists(GenTxid{false, txid}); }\n \n+    bool exists(const COutPoint& outpoint) const\n+    {\n+        LOCK(cs);\n+        auto it = mapTx.find(outpoint.hash);\n+        return (it != mapTx.end() && outpoint.n < it->GetTx().vout.size());\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n     txiter get_iter_from_wtxid(const uint256& wtxid) const EXCLUSIVE_LOCKS_REQUIRED(cs)\n     {\n@@ -898,6 +905,7 @@ class CCoinsViewMemPool : public CCoinsViewBacked\n public:\n     CCoinsViewMemPool(CCoinsView* baseIn, const CTxMemPool& mempoolIn);\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override;\n+    bool HaveCoin(const COutPoint &outpoint) const override;\n };\n \n /**"
      },
      {
        "sha": "8db67b8e709b79fa93708553057371a83eaeab39",
        "filename": "src/undo.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/undo.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/undo.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/undo.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -24,7 +24,7 @@ struct TxInUndoFormatter\n {\n     template<typename Stream>\n     void Ser(Stream &s, const Coin& txout) {\n-        ::Serialize(s, VARINT(txout.nHeight * uint32_t{2} + txout.fCoinBase ));\n+        ::Serialize(s, VARINT((txout.nHeight << 2) + (txout.fCoinStake ? 2u : 0u) + (txout.fCoinBase ? 1u : 0u)));\n         if (txout.nHeight > 0) {\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n@@ -36,8 +36,9 @@ struct TxInUndoFormatter\n     void Unser(Stream &s, Coin& txout) {\n         uint32_t nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        txout.nHeight = nCode >> 1;\n+        txout.nHeight = nCode >> 2;\n         txout.fCoinBase = nCode & 1;\n+        txout.fCoinStake = (nCode >> 1) & 1;\n         if (txout.nHeight > 0) {\n             // Old versions stored the version number for the last spend of\n             // a transaction's outputs. Non-final spends were indicated with"
      },
      {
        "sha": "a956338c85634d6dd0111de160090c1b3a788711",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -1188,6 +1188,22 @@ void runCommand(const std::string& strCommand)\n }\n #endif\n \n+void RenameThread(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n #ifdef HAVE_BOOST_PROCESS\n UniValue RunCommandParseJSON(const std::string& str_command, const std::string& str_std_in)\n {"
      },
      {
        "sha": "423ee0fcc2adf95fce18f56bfb7b7f72f6107bfd",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -37,6 +37,12 @@\n \n #include <boost/thread/condition_variable.hpp> // for boost::thread_interrupted\n \n+#ifndef WIN32\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#include <sys/resource.h>\n+#endif\n+\n class UniValue;\n \n // Application startup time (used for uptime calculation)\n@@ -426,6 +432,32 @@ std::string HelpMessageOpt(const std::string& option, const std::string& message\n  */\n int GetNumCores();\n \n+#ifdef WIN32\n+inline void SetThreadPriority(int nPriority)\n+{\n+    SetThreadPriority(GetCurrentThread(), nPriority);\n+}\n+#else\n+\n+#define THREAD_PRIORITY_LOWEST          PRIO_MAX\n+#define THREAD_PRIORITY_BELOW_NORMAL    2\n+#define THREAD_PRIORITY_NORMAL          0\n+#define THREAD_PRIORITY_ABOVE_NORMAL    0\n+\n+inline void SetThreadPriority(int nPriority)\n+{\n+    // It's unclear if it's even possible to change thread priorities on Linux,\n+    // but we really and truly need it for the generation threads.\n+#ifdef PRIO_THREAD\n+    setpriority(PRIO_THREAD, 0, nPriority);\n+#else\n+    setpriority(PRIO_PROCESS, 0, nPriority);\n+#endif\n+}\n+#endif\n+\n+void RenameThread(const char* name);\n+\n /**\n  * .. and a wrapper that just calls func once\n  */"
      },
      {
        "sha": "524afbcd46d151997490f280f5002dd4e649ce82",
        "filename": "src/util/time.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/time.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/time.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -11,13 +11,16 @@\n \n #include <atomic>\n #include <boost/date_time/posix_time/posix_time.hpp>\n+#include <boost/thread.hpp>\n #include <ctime>\n #include <thread>\n \n #include <tinyformat.h>\n \n void UninterruptibleSleep(const std::chrono::microseconds& n) { std::this_thread::sleep_for(n); }\n \n+void InterruptibleSleep(const std::chrono::microseconds& n) { boost::this_thread::sleep_for(boost::chrono::microseconds(n.count())); }\n+\n static std::atomic<int64_t> nMockTime(0); //!< For unit testing\n \n int64_t GetTime()"
      },
      {
        "sha": "5a01cef42cd607bf7dda515804ef6861ea161d24",
        "filename": "src/util/time.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/time.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/util/time.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -12,6 +12,8 @@\n \n void UninterruptibleSleep(const std::chrono::microseconds& n);\n \n+void InterruptibleSleep(const std::chrono::microseconds& n);\n+\n /**\n  * Helper to count the seconds of a duration.\n  *"
      },
      {
        "sha": "136374fca5249e73a307a7547eaed62ff9c1bd03",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 853,
        "deletions": 55,
        "changes": 908,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -8,6 +8,7 @@\n #include <arith_uint256.h>\n #include <chain.h>\n #include <chainparams.h>\n+#include <checkpoints.h>\n #include <checkqueue.h>\n #include <consensus/consensus.h>\n #include <consensus/merkle.h>\n@@ -26,6 +27,8 @@\n #include <policy/policy.h>\n #include <policy/settings.h>\n #include <pow.h>\n+#include <pos.h>\n+#include <miner.h>\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n #include <random.h>\n@@ -48,6 +51,8 @@\n #include <util/translation.h>\n #include <validationinterface.h>\n #include <warnings.h>\n+#include <wallet/wallet.h>\n+#include <key.h>\n \n #include <string>\n \n@@ -382,7 +387,7 @@ static void UpdateMempoolForReorg(CTxMemPool& mempool, DisconnectedBlockTransact\n     while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n         // ignore validation errors in resurrected transactions\n         TxValidationState stateDummy;\n-        if (!fAddToMempool || (*it)->IsCoinBase() ||\n+        if (!fAddToMempool || (*it)->IsCoinBase() || (*it)->IsCoinStake() ||\n             !AcceptToMemoryPool(mempool, stateDummy, *it,\n                                 nullptr /* plTxnReplaced */, true /* bypass_limits */)) {\n             // If the transaction doesn't make it in to the mempool, remove any\n@@ -569,14 +574,20 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     CAmount& nConflictingFees = ws.m_conflicting_fees;\n     size_t& nConflictingSize = ws.m_conflicting_size;\n \n-    if (!CheckTransaction(tx, state)) {\n+    bool fColdStakingActive = ::ChainActive().Height() >= Params().GetConsensus().BTCColdStakeEnableHeight;\n+\n+    if (!CheckTransaction(tx, state, fColdStakingActive)) {\n         return false; // state filled in by CheckTransaction\n     }\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n         return state.Invalid(TxValidationResult::TX_CONSENSUS, \"coinbase\");\n \n+    // ppcoin: coinstake is also only valid in a block, not as a loose transaction\n+    if (tx.IsCoinStake())\n+        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"coinstake\");\n+\n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     std::string reason;\n     if (fRequireStandard && !IsStandardTx(tx, reason))\n@@ -641,6 +652,19 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     m_view.SetBackend(m_viewmempool);\n \n     CCoinsViewCache& coins_cache = ::ChainstateActive().CoinsTip();\n+\n+    // do we already have it?\n+    for (size_t out = 0; out < tx.vout.size(); out++) {\n+        COutPoint outpoint(hash, out);\n+        bool had_coin_in_cache = coins_cache.HaveCoinInCache(outpoint);\n+        if (m_view.HaveCoin(outpoint)) {\n+            if (!had_coin_in_cache) {\n+                coins_to_uncache.push_back(outpoint);\n+            }\n+            return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-known\");\n+        }\n+    }\n+\n     // do all inputs exist?\n     for (const CTxIn& txin : tx.vin) {\n         if (!coins_cache.HaveCoinInCache(txin.prevout)) {\n@@ -711,7 +735,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     bool fSpendsCoinbase = false;\n     for (const CTxIn &txin : tx.vin) {\n         const Coin &coin = m_view.AccessCoin(txin.prevout);\n-        if (coin.IsCoinBase()) {\n+        if (coin.IsCoinBase() || coin.IsCoinStake()) {\n             fSpendsCoinbase = true;\n             break;\n         }\n@@ -1116,6 +1140,56 @@ CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMe\n     return nullptr;\n }\n \n+bool CheckHeaderPoW(const CBlockHeader& block, const Consensus::Params& consensusParams)\n+{\n+    // Check for proof of work block header\n+    return CheckProofOfWork(block.GetHash(), block.nBits, consensusParams);\n+}\n+\n+bool CheckHeaderPoS(const CBlockHeader& block, const Consensus::Params& consensusParams)\n+{\n+    // Check for proof of stake block header\n+    // Get prev block index\n+    BlockMap::iterator mi = ::BlockIndex().find(block.hashPrevBlock);\n+    if (mi == ::BlockIndex().end())\n+        return false;\n+\n+    // Check the kernel hash\n+    CBlockIndex* pindexPrev = (*mi).second;\n+\n+    if (pindexPrev->nHeight >= consensusParams.nEnableHeaderSignatureHeight && !CheckRecoveredPubKeyFromBlockSignature(pindexPrev, block, ::ChainstateActive().CoinsTip())) {\n+        return error(\"Failed signature check\");\n+    }\n+\n+    return CheckKernel(pindexPrev, block.nBits, block.StakeTime(), block.prevoutStake, ::ChainstateActive().CoinsTip());\n+}\n+\n+bool CheckHeaderProof(const CBlockHeader& block, const Consensus::Params& consensusParams) \n+{\n+    if (block.IsProofOfWork()) {\n+        return CheckHeaderPoW(block, consensusParams);\n+    }\n+    if (block.IsProofOfStake()) {\n+        return CheckHeaderPoS(block, consensusParams);\n+    }\n+    return false;\n+}\n+\n+bool CheckIndexProof(const CBlockIndex& block, const Consensus::Params& consensusParams)\n+{\n+    // Get the hash of the proof\n+    // After validating the PoS block the computed hash proof is saved in the block index, which is used to check the index\n+    uint256 hashProof = block.IsProofOfWork() ? block.GetBlockHash() : block.hashProof;\n+    // Check for proof after the hash proof is computed\n+    if (block.IsProofOfStake()) {\n+        //blocks are loaded out of order, so checking PoS kernels here is not practical\n+        return true; //CheckKernel(block.pprev, block.nBits, block.nTime, block.prevoutStake);\n+    } else {\n+        return CheckProofOfWork(hashProof, block.nBits, consensusParams, false);\n+    }\n+}\n+\n+\n //////////////////////////////////////////////////////////////////////////////\n //\n // CBlock and CBlockIndex\n@@ -1159,9 +1233,14 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n         return error(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());\n     }\n \n+\n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    if(!block.IsProofOfStake()) {\n+        //PoS blocks can be loaded out of order from disk, which makes PoS impossible to validate. So, do not validate their headers\n+        //they will be validated later in CheckBlock and ConnectBlock anyway\n+        if (!CheckHeaderProof(block, consensusParams))\n+            return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    }\n \n     // Signet only: check block solution\n     if (consensusParams.signet_blocks && !CheckSignetBlockSolution(block, consensusParams)) {\n@@ -1314,6 +1393,18 @@ bool CChainState::IsInitialBlockDownload() const\n \n static CBlockIndex *pindexBestForkTip = nullptr, *pindexBestForkBase = nullptr;\n \n+BlockMap& BlockIndex()\n+{\n+    LOCK(::cs_main);\n+    return g_chainman.m_blockman.m_block_index;\n+}\n+\n+StakeSeenSet& StakeSeen()\n+{\n+     LOCK(::cs_main);\n+    return g_chainman.m_blockman.m_stake_seen;\n+}\n+\n static void AlertNotify(const std::string& strMessage)\n {\n     uiInterface.NotifyAlertChanged();\n@@ -1732,6 +1823,7 @@ DisconnectResult CChainState::DisconnectBlock(const CBlock& block, const CBlockI\n         const CTransaction &tx = *(block.vtx[i]);\n         uint256 hash = tx.GetHash();\n         bool is_coinbase = tx.IsCoinBase();\n+        bool is_coinstake = tx.IsCoinStake();\n \n         // Check that all outputs are available and match the outputs in the block itself\n         // exactly.\n@@ -1740,7 +1832,7 @@ DisconnectResult CChainState::DisconnectBlock(const CBlock& block, const CBlockI\n                 COutPoint out(hash, o);\n                 Coin coin;\n                 bool is_spent = view.SpendCoin(out, &coin);\n-                if (!is_spent || tx.vout[o] != coin.out || pindex->nHeight != coin.nHeight || is_coinbase != coin.fCoinBase) {\n+                if (!is_spent || tx.vout[o] != coin.out || pindex->nHeight != coin.nHeight || is_coinbase != coin.fCoinBase || is_coinstake != coin.fCoinStake) {\n                     fClean = false; // transaction output mismatch\n                 }\n             }\n@@ -1765,6 +1857,7 @@ DisconnectResult CChainState::DisconnectBlock(const CBlock& block, const CBlockI\n \n     // move best block pointer to prevout block\n     view.SetBestBlock(pindex->pprev->GetBlockHash());\n+    pblocktree->EraseStakeIndex(pindex->nHeight);\n \n     return fClean ? DISCONNECT_OK : DISCONNECT_UNCLEAN;\n }\n@@ -1940,6 +2033,216 @@ static int64_t nTimeCallbacks = 0;\n static int64_t nTimeTotal = 0;\n static int64_t nBlocksTotal = 0;\n \n+bool GetSpentCoinFromBlock(const CBlockIndex* pindex, COutPoint prevout, Coin* coin) {\n+    std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n+    CBlock& block = *pblock;\n+    if (!ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+        return error(\"GetSpentCoinFromBlock(): Could not read block from disk\");\n+    }\n+\n+    for(size_t j = 1; j < block.vtx.size(); ++j) {\n+        CTransactionRef& tx = block.vtx[j];\n+        for(size_t k = 0; k < tx->vin.size(); ++k) {\n+            const COutPoint& tmpprevout = tx->vin[k].prevout;\n+            if(tmpprevout == prevout) {\n+                CBlockUndo undo;\n+                if(!UndoReadFromDisk(undo, pindex)) {\n+                    return error(\"GetSpentCoinFromBlock(): Could not read undo block from disk\");\n+                }\n+\n+                if(undo.vtxundo.size() != block.vtx.size() - 1) {\n+                    return error(\"GetSpentCoinFromBlock(): undo tx size not equal to block tx size\");\n+                }\n+\n+                CTxUndo &txundo = undo.vtxundo[j-1]; // no vtxundo for coinbase\n+\n+                if(txundo.vprevout.size() != tx->vin.size()) {\n+                    return error(\"GetSpentCoinFromBlock(): undo tx vin size not equal to block tx vin size\");\n+                }\n+\n+                *coin = txundo.vprevout[k];\n+                return true;\n+            }\n+\n+        }\n+    }\n+    return false;\n+}\n+\n+bool GetSpentCoinFromMainChain(const CBlockIndex* pforkPrev, COutPoint prevoutStake, Coin* coin) {\n+    const CBlockIndex* pforkBase = ::ChainActive().FindFork(pforkPrev);\n+\n+    // If the forkbase is more than COINBASE_MATURITY blocks in the past, do not attempt to scan the main chain.\n+    if (::ChainActive().Tip()->nHeight - pforkBase->nHeight > COINBASE_MATURITY)\n+        return error(\"The fork's base is behind by more than %d blocks\", COINBASE_MATURITY);\n+\n+    // First, we make sure that the prevout has not been spent in any of pforktip's ancestors as the prevoutStake.\n+    // This is done to prevent a single staker building a long chain based on only a single prevout.\n+    {\n+        const CBlockIndex* pindex = pforkPrev;\n+        while (pindex && pindex != pforkBase) {\n+            // The coinstake has already been spent in the fork.\n+            if (pindex->prevoutStake == prevoutStake) {\n+                return error(\"prevout already spent in the orphan chain\");\n+            }\n+            pindex = pindex->pprev;\n+        }\n+    }\n+\n+    // Scan through blocks until we reach the forkbase to check if the prevoutStake has been spent in one of those blocks\n+    // If it not in any of those blocks, and not in the utxo set, it can't be spendable in the orphan chain.\n+    {\n+        CBlockIndex* pindex = ::ChainActive().Tip();\n+        while (pindex && pindex != pforkBase) {\n+            if (GetSpentCoinFromBlock(pindex, prevoutStake, coin)) {\n+                return true;\n+            }\n+            pindex = pindex->pprev;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool CheckReward(const CBlock& block, BlockValidationState& state, int nHeight, const Consensus::Params& consensusParams, CAmount nFees, CAmount nActualStakeReward)\n+{\n+    size_t offset = block.IsProofOfStake() ? 1 : 0;\n+\n+    // Check block reward\n+    if (block.IsProofOfWork())\n+    {\n+        // Check proof-of-work reward\n+        CAmount blockReward = nFees + GetBlockSubsidy(nHeight, consensusParams);\n+        if (block.vtx[offset]->GetValueOut() > blockReward) {\n+            LogPrintf(\"CheckReward(): coinbase pays too much (actual=%d vs limit=%d)\\n\", block.vtx[offset]->GetValueOut(), blockReward);\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cb-amount\");\n+        }\n+    }\n+    else\n+    {\n+        // Check full reward\n+        CAmount blockReward = nFees + GetBlockSubsidy(nHeight, consensusParams);\n+        if (nActualStakeReward > blockReward) {\n+            LogPrintf(\"CheckReward(): coinstake pays too much (actual=%d vs limit=%d)\\n\", nActualStakeReward, blockReward);\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-amount\");\n+        }\n+\n+        bool isColdStake = block.vtx[1]->HasP2CSOutputs();\n+        // The first proof-of-stake blocks get full reward, the rest of them are split between recipients\n+        int rewardRecipients = 1;\n+        int nPrevHeight = nHeight -1;\n+        if (nPrevHeight >= consensusParams.nFirstMPoSBlock && nPrevHeight <= consensusParams.nLastMPoSBlock)\n+            rewardRecipients = consensusParams.nMPoSRewardRecipients;\n+        else if (isColdStake)\n+            rewardRecipients = 2;\n+\n+        // Check reward recipients number\n+        if (rewardRecipients < 1)\n+            return error(\"CheckReward(): invalid reward recipients\");\n+\n+        //if only 1 then no MPoS logic required\n+        if (rewardRecipients == 1)\n+            return true;\n+\n+        if (isColdStake)\n+        {\n+            // The cold stake is the second output\n+            const CTxOut& cold_stake_tx = block.vtx[1]->vout[1];\n+\n+            // Get the staker public key\n+            std::vector<valtype> vSolutions;\n+            CScript coldStakerScriptPubKey;\n+            auto whichType = Solver(cold_stake_tx.scriptPubKey, vSolutions);\n+\n+            if (whichType != TxoutType::COLDSTAKE)\n+                return false;\n+\n+            // The reward the staker received\n+            CAmount nStakerCredit = 0;\n+            // Check all outputs and add the amounts sent to the staker\n+            for (unsigned int i = 1; i < block.vtx[1]->vout.size(); i++)\n+            {\n+                if (block.vtx[1]->vout[i].scriptPubKey != block.vtx[1]->vout[1].scriptPubKey)\n+                {\n+                    nStakerCredit += block.vtx[1]->vout[i].nValue;\n+                }\n+            }\n+\n+            int cold_staker_fee_factor = std::max(std::min(COLD_STAKER_FEE, 100), 0);\n+            // If the staker got more than the COLD_STAKER_FEE percentage, reject\n+            if (nStakerCredit != (blockReward * cold_staker_fee_factor) / 100)\n+            {\n+                LogPrintf(\"CheckReward(): staker reward is invalid\\n\");\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-coldstaking-staker-reward\");\n+            }\n+        }\n+        else\n+        {\n+            // Generate the list of script recipients including all of their parameters\n+            std::vector<CScript> mposScriptList;\n+            if (!GetMPoSOutputScripts(mposScriptList, nPrevHeight, consensusParams))\n+            {\n+                LogPrintf(\"CheckReward(): cannot create the list of MPoS output scripts\\n\");\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-mpos\");\n+            }\n+\n+            std::vector<CTxOut> vTempVouts = block.vtx[offset]->vout;\n+            CAmount splitReward = blockReward / rewardRecipients;\n+            for(size_t i = 0; i < mposScriptList.size(); i++)\n+            {\n+                std::vector<CTxOut>::iterator it=std::find(vTempVouts.begin(), vTempVouts.end(), CTxOut(splitReward,mposScriptList[i]));\n+                if(it==vTempVouts.end())\n+                {\n+                    LogPrintf(\"CheckReward(): A MPoS participant was not properly paid\\n\");\n+                    return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-mpos-missing\");\n+                }\n+                else\n+                {\n+                    vTempVouts.erase(it);\n+                }\n+            }\n+\n+            vTempVouts.clear();\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+bool CheckColdStakeOutputs(const CBlock& block)\n+{\n+    // If the block has cold stake outputs check that these are to the right recipients\n+    if (block.vtx[1]->HasP2CSOutputs())\n+    {\n+        // The cold stake is the second output\n+        const CTxOut& cold_stake_tx = block.vtx[1]->vout[1];\n+\n+        // Get the staker public key\n+        std::vector<valtype> vSolutions;\n+        CScript coldStakerScriptPubKey;\n+        auto whichType = Solver(cold_stake_tx.scriptPubKey, vSolutions);\n+\n+        if (whichType != TxoutType::COLDSTAKE)\n+            return false;\n+\n+        // Check all outputs; all should belong to the coldstake owner except one\n+        // which will go to the cold staker\n+        bool foundStakerOutput = false;\n+        for (unsigned int i = 2; i < block.vtx[1]->vout.size(); i++)\n+        {\n+            if (block.vtx[1]->vout[i].scriptPubKey != cold_stake_tx.scriptPubKey)\n+            {\n+                // An output had already been found\n+                if (foundStakerOutput)\n+                    return false;\n+                foundStakerOutput = true;\n+            }\n+        }\n+    }\n+\n+    return true;\n+}\n+\n /** Apply the effects of this block (with given index) on the UTXO set represented by coins.\n  *  Validity checks that depend on the UTXO set are also done; ConnectBlock()\n  *  can fail if those validity checks fail (among other reasons). */\n@@ -1951,6 +2254,24 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n     assert(*pindex->phashBlock == block.GetHash());\n     int64_t nTimeStart = GetTimeMicros();\n \n+    if (block.IsProofOfStake() && (pindex->nHeight <= chainparams.GetConsensus().nLastPOWBlock)) {\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-block-type\", strprintf(\"ConnectBlock() : reject proof-of-stake at height %d\", pindex->nHeight));\n+    }\n+\n+    if (block.IsProofOfWork() && (pindex->nHeight > chainparams.GetConsensus().nLastPOWBlock)) {\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-block-type\", strprintf(\"ConnectBlock() : reject proof-of-work at height %d\", pindex->nHeight));\n+    }\n+\n+    // We recheck the hardened checkpoints here since ContextualCheckBlock(Header) is not called in ConnectBlock.\n+    if(fCheckpointsEnabled && !Checkpoints::CheckHardened(pindex->nHeight, block.GetHash(), chainparams.Checkpoints())) {\n+        LogPrintf(\"%s: expected hardened checkpoint at height %d\\n\", __func__, pindex->nHeight);\n+        return state.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, \"bad-fork-hardened-checkpoint\");\n+    }\n+\n+    if (block.IsProofOfStake() && pindex->nHeight > chainparams.GetConsensus().nEnableHeaderSignatureHeight && !CheckBlockInputPubKeyMatchesOutputPubKey(block, view)) {\n+        return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-blk-coinstake-input-output-mismatch\");\n+    }\n+\n     // Check it again in case a previous version let a bad block in\n     // NOTE: We don't currently (re-)invoke ContextualCheckBlock() or\n     // ContextualCheckBlockHeader() here. This means that if we add a new\n@@ -1988,6 +2309,11 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         return true;\n     }\n \n+    // State is filled in by UpdateHashProof\n+    if (!UpdateHashProof(block, state, chainparams.GetConsensus(), pindex, view)) {\n+        return error(\"%s: ConnectBlock(): %s\", __func__, state.GetRejectReason().c_str());\n+    }\n+\n     bool fScriptChecks = true;\n     if (!hashAssumeValid.IsNull()) {\n         // We've been configured with the hash of a block which has been externally verified to have a valid history.\n@@ -2034,8 +2360,7 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n     // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n     // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n     // initial block download.\n-    bool fEnforceBIP30 = !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n-                           (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n+    bool fEnforceBIP30 = !(pindex->phashBlock);\n \n     // Once BIP34 activated it was not possible to create new duplicate coinbases and thus other than starting\n     // with the 2 existing duplicate coinbase pairs, not possible to create overwriting txs.  But by the\n@@ -2136,9 +2461,14 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n \n     std::vector<int> prevheights;\n     CAmount nFees = 0;\n+    CAmount nActualStakeReward = 0;\n     int nInputs = 0;\n     int64_t nSigOpsCost = 0;\n     blockundo.vtxundo.reserve(block.vtx.size() - 1);\n+\n+    uint64_t nValueOut=0;\n+    uint64_t nValueIn=0;\n+\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const CTransaction &tx = *(block.vtx[i]);\n@@ -2187,6 +2517,9 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n \n         if (!tx.IsCoinBase())\n         {\n+            if (tx.IsCoinStake())\n+                nActualStakeReward = tx.GetValueOut()-view.GetValueIn(tx);\n+            \n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n             TxValidationState tx_state;\n@@ -2200,6 +2533,15 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n             control.Add(vChecks);\n         }\n \n+        if(tx.IsCoinBase()){\n+            nValueOut += tx.GetValueOut();\n+        }else{\n+            int64_t nTxValueIn = view.GetValueIn(tx);\n+            int64_t nTxValueOut = tx.GetValueOut();\n+            nValueIn += nTxValueIn;\n+            nValueOut += nTxValueOut;\n+        }\n+\n         CTxUndo undoDummy;\n         if (i > 0) {\n             blockundo.vtxundo.push_back(CTxUndo());\n@@ -2209,22 +2551,28 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n     int64_t nTime3 = GetTimeMicros(); nTimeConnect += nTime3 - nTime2;\n     LogPrint(BCLog::BENCH, \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs (%.2fms/blk)]\\n\", (unsigned)block.vtx.size(), MILLI * (nTime3 - nTime2), MILLI * (nTime3 - nTime2) / block.vtx.size(), nInputs <= 1 ? 0 : MILLI * (nTime3 - nTime2) / (nInputs-1), nTimeConnect * MICRO, nTimeConnect * MILLI / nBlocksTotal);\n \n-    CAmount blockReward = nFees + GetBlockSubsidy(pindex->nHeight, chainparams.GetConsensus());\n-    if (block.vtx[0]->GetValueOut() > blockReward) {\n-        LogPrintf(\"ERROR: ConnectBlock(): coinbase pays too much (actual=%d vs limit=%d)\\n\", block.vtx[0]->GetValueOut(), blockReward);\n-        return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cb-amount\");\n-    }\n+    if (!CheckReward(block, state, pindex->nHeight, chainparams.GetConsensus(), nFees, nActualStakeReward))\n+        return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"block-reward-invalid\");\n \n-    if (!control.Wait()) {\n-        LogPrintf(\"ERROR: %s: CheckQueue failed\\n\", __func__);\n+    if (!control.Wait())\n         return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"block-validation-failed\");\n-    }\n+\n     int64_t nTime4 = GetTimeMicros(); nTimeVerify += nTime4 - nTime2;\n     LogPrint(BCLog::BENCH, \"    - Verify %u txins: %.2fms (%.3fms/txin) [%.2fs (%.2fms/blk)]\\n\", nInputs - 1, MILLI * (nTime4 - nTime2), nInputs <= 1 ? 0 : MILLI * (nTime4 - nTime2) / (nInputs-1), nTimeVerify * MICRO, nTimeVerify * MILLI / nBlocksTotal);\n \n     if (fJustCheck)\n         return true;\n \n+    pindex->nMoneySupply = (pindex->pprev? pindex->pprev->nMoneySupply : 0) + nValueOut - nValueIn;\n+    //only start checking this error after block 5000 and only on testnet and mainnet, not regtest\n+    if (pindex->nHeight > 5000 && !Params().MineBlocksOnDemand()) {\n+        //sanity check in case an exploit happens that allows new coins to be minted\n+        if(pindex->nMoneySupply > (uint64_t)(100000000 + ((pindex->nHeight - 5000) * 4)) * COIN){\n+            LogPrintf(\"ConnectBlock(): Unknown error caused actual money supply to exceed expected money supply\\n\");\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"incorrect-money-supply\");\n+        }\n+    }\n+\n     if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n         return false;\n \n@@ -2233,6 +2581,19 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         setDirtyBlockIndex.insert(pindex);\n     }\n \n+    if (block.IsProofOfStake()) {\n+        // Read the public key from the second output\n+        std::vector<unsigned char> vchPubKey;\n+        if (GetBlockPublicKey(block, vchPubKey)) {\n+            uint160 pkh = uint160(ToByteVector(CPubKey(vchPubKey).GetID()));\n+            pblocktree->WriteStakeIndex(pindex->nHeight, pkh);\n+        } else {\n+            pblocktree->WriteStakeIndex(pindex->nHeight, uint160());\n+        }\n+    } else {\n+        pblocktree->WriteStakeIndex(pindex->nHeight, uint160());\n+    }\n+\n     assert(pindex->phashBlock);\n     // add this block to the view's block chain\n     view.SetBestBlock(pindex->GetBlockHash());\n@@ -2516,6 +2877,9 @@ bool CChainState::DisconnectTip(BlockValidationState& state, const CChainParams&\n     CBlock& block = *pblock;\n     if (!ReadBlockFromDisk(block, pindexDelete, chainparams.GetConsensus()))\n         return error(\"DisconnectTip(): Failed to read block\");\n+\n+    LogPrint(BCLog::COINSTAKE, \"%s: disconnecting block %s\\n\", __func__, block.GetHash().ToString());\n+\n     // Apply the block atomically to the chain state.\n     int64_t nStart = GetTimeMicros();\n     {\n@@ -3196,6 +3560,8 @@ CBlockIndex* BlockManager::AddToBlockIndex(const CBlockHeader& block)\n     // competitive advantage.\n     pindexNew->nSequenceId = 0;\n     BlockMap::iterator mi = m_block_index.insert(std::make_pair(hash, pindexNew)).first;\n+    if (pindexNew->IsProofOfStake())\n+        ::StakeSeen().insert(std::make_pair(pindexNew->prevoutStake, pindexNew->nTime));\n     pindexNew->phashBlock = &((*mi).first);\n     BlockMap::iterator miPrev = m_block_index.find(block.hashPrevBlock);\n     if (miPrev != m_block_index.end())\n@@ -3206,6 +3572,7 @@ CBlockIndex* BlockManager::AddToBlockIndex(const CBlockHeader& block)\n     }\n     pindexNew->nTimeMax = (pindexNew->pprev ? std::max(pindexNew->pprev->nTimeMax, pindexNew->nTime) : pindexNew->nTime);\n     pindexNew->nChainWork = (pindexNew->pprev ? pindexNew->pprev->nChainWork : 0) + GetBlockProof(*pindexNew);\n+    pindexNew->nStakeModifier = ComputeStakeModifier(pindexNew->pprev, block.IsProofOfWork() ? hash : block.prevoutStake.hash);\n     pindexNew->RaiseValidity(BLOCK_VALID_TREE);\n     if (pindexBestHeader == nullptr || pindexBestHeader->nChainWork < pindexNew->nChainWork)\n         pindexBestHeader = pindexNew;\n@@ -3338,26 +3705,168 @@ static bool FindUndoPos(BlockValidationState &state, int nFile, FlatFilePos &pos\n     return true;\n }\n \n-static bool CheckBlockHeader(const CBlockHeader& block, BlockValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true)\n+bool CheckFirstCoinstakeOutput(const CBlock& block)\n+{\n+    // Coinbase output should be empty if proof-of-stake block\n+    int commitpos = GetWitnessCommitmentIndex(block);\n+    if(commitpos < 0)\n+    {\n+        if (block.vtx[0]->vout.size() != 1 || !block.vtx[0]->vout[0].IsEmpty())\n+            return false;\n+    }\n+    else\n+    {\n+        if (block.vtx[0]->vout.size() != 2 || !block.vtx[0]->vout[0].IsEmpty() || block.vtx[0]->vout[1].nValue)\n+            return false;\n+    }\n+\n+    return true;\n+}\n+\n+#ifdef ENABLE_WALLET\n+// novacoin: attempt to generate suitable proof-of-stake\n+bool SignBlock(std::shared_ptr<CBlock> pblock, CWallet& wallet, const CAmount& nTotalFees, uint32_t nTime, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoins)\n+{\n+    // if we are trying to sign\n+    //    something except proof-of-stake block template\n+    if (!CheckFirstCoinstakeOutput(*pblock))\n+        return false;\n+\n+    // if we are trying to sign\n+    //    a complete proof-of-stake block\n+    if (pblock->IsProofOfStake() && !pblock->vchBlockSig.empty())\n+        return true;\n+\n+    CKey key;\n+    CMutableTransaction txCoinStake(*pblock->vtx[1]);\n+    uint32_t nTimeBlock = nTime;\n+    nTimeBlock &= ~STAKE_TIMESTAMP_MASK;\n+    //original line:\n+    //int64_t nSearchInterval = IsProtocolV2(nBestHeight+1) ? 1 : nSearchTime - nLastCoinStakeSearchTime;\n+    //IsProtocolV2 mean POS 2 or higher, so the modified line is:\n+    LOCK(wallet.cs_wallet);\n+    if (wallet.CreateCoinStake(wallet, pblock->nBits, nTotalFees, nTimeBlock, txCoinStake, key, setCoins))\n+    {\n+        if (nTimeBlock >= ::ChainActive().Tip()->GetMedianTimePast()+1)\n+        {\n+            // make sure coinstake would meet timestamp protocol\n+            //    as it would be the same as the block timestamp\n+            pblock->nTime = nTimeBlock;\n+            pblock->vtx[1] = MakeTransactionRef(std::move(txCoinStake));\n+            pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n+            pblock->prevoutStake = pblock->vtx[1]->vin[0].prevout;\n+\n+            // Check timestamp against prev\n+            if(pblock->GetBlockTime() <= ::ChainActive().Tip()->GetBlockTime() || FutureDrift(pblock->GetBlockTime()) < ::ChainActive().Tip()->GetBlockTime())\n+            {\n+                return false;\n+            }\n+\n+            // append a signature to our block and ensure that is LowS\n+            return key.Sign(pblock->GetHashWithoutSign(), pblock->vchBlockSig) &&\n+                       EnsureLowS(pblock->vchBlockSig) &&\n+                       CheckHeaderPoS(*pblock, Params().GetConsensus());\n+        }\n+    }\n+\n+    return false;\n+}\n+#endif\n+\n+bool GetBlockPublicKey(const CBlock& block, std::vector<unsigned char>& vchPubKey)\n+{\n+    if (block.IsProofOfWork())\n+        return false;\n+\n+    if (block.vchBlockSig.empty())\n+        return false;\n+\n+    std::vector<valtype> vSolutions;\n+    const CTxOut& txout = block.vtx[1]->vout[1];\n+    TxoutType whichType = Solver(txout.scriptPubKey, vSolutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD)\n+        return false;\n+\n+    if (whichType == TxoutType::PUBKEY)\n+    {\n+        vchPubKey = vSolutions[0];\n+        return true;\n+    }\n+    else if (whichType == TxoutType::PUBKEYHASH)\n+    {\n+        // Block signing key also can be encoded in the nonspendable output\n+        // This allows to not pollute UTXO set with useless outputs e.g. in case of multisig staking\n+\n+        const CScript& script = txout.scriptPubKey;\n+        CScript::const_iterator pc = script.begin();\n+        opcodetype opcode;\n+        valtype vchPushValue;\n+\n+        if (!script.GetOp(pc, opcode, vchPubKey))\n+            return false;\n+        if (opcode != OP_RETURN)\n+            return false;\n+        if (!script.GetOp(pc, opcode, vchPubKey))\n+            return false;\n+        if (!IsCompressedOrUncompressedPubKey(vchPubKey))\n+            return false;\n+        return true;\n+    }\n+    else if (whichType == TxoutType::COLDSTAKE)\n+    {\n+        // Get the public key from the P2CS input\n+        const CTxIn& txin = block.vtx[1]->vin[0];\n+        int start = 1 + (int) *txin.scriptSig.begin(); // skip sig\n+        start += 1 + (int) *(txin.scriptSig.begin()+start); // skip flag\n+        vchPubKey = std::vector<unsigned char>(txin.scriptSig.begin()+start+1, txin.scriptSig.end());\n+        return true;\n+    }\n+\n+    return false;\n+}\n+\n+bool CheckBlockSignature(const CBlock& block)\n+{\n+    if (block.IsProofOfWork())\n+        return block.vchBlockSig.empty();\n+\n+    std::vector<unsigned char> vchPubKey;\n+    if(!GetBlockPublicKey(block, vchPubKey))\n+    {\n+        return false;\n+    }\n+\n+    return CPubKey(vchPubKey).Verify(block.GetHashWithoutSign(), block.vchBlockSig);\n+}\n+\n+static bool CheckBlockHeader(const CBlockHeader& block, BlockValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true, bool fCheckPOS = true)\n {\n     // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+    if (fCheckPOW && block.IsProofOfWork() && !CheckHeaderPoW(block, consensusParams))\n         return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"high-hash\", \"proof of work failed\");\n \n+    // Check proof of stake matches claimed amount\n+    if (fCheckPOS && !::ChainstateActive().IsInitialBlockDownload() && block.IsProofOfStake() && !CheckHeaderPoS(block, consensusParams))\n+        // May occur if behind on block chain sync\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-cb-header\", \"proof of stake failed\");\n+\n     return true;\n }\n \n-bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW, bool fCheckMerkleRoot)\n+bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW, bool fCheckMerkleRoot, bool fCheckSig)\n {\n     // These are checks that are independent of context.\n-\n     if (block.fChecked)\n         return true;\n \n     // Check that the header is valid (particularly PoW).  This is mostly\n     // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n+    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW, false))\n         return false;\n+    \n+    if (block.IsProofOfStake() &&  block.GetBlockTime() > FutureDrift(GetAdjustedTime()))\n+        return error(\"CheckBlock() : block timestamp too far in the future\");\n \n     // Signet only: check block solution\n     if (consensusParams.signet_blocks && fCheckPOW && !CheckSignetBlockSolution(block, consensusParams)) {\n@@ -3395,11 +3904,45 @@ bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensu\n         if (block.vtx[i]->IsCoinBase())\n             return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cb-multiple\", \"more than one coinbase\");\n \n+    // Second transaction must be coinbase in case of PoS block, the rest must not be\n+    if (block.IsProofOfStake())\n+    {\n+        // Coinbase output should be empty if proof-of-stake block\n+        if (!CheckFirstCoinstakeOutput(block))\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cb-missing\", \"coinbase output not empty for proof-of-stake block\");\n+\n+        // Second transaction must be coinstake\n+        if (block.vtx.empty() || block.vtx.size() < 2 || !block.vtx[1]->IsCoinStake())\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-missing\", \"second tx is not coinstake\");\n+\n+        //prevoutStake must exactly match the coinstake in the block body\n+        if (block.vtx[1]->vin.empty() || block.prevoutStake != block.vtx[1]->vin[0].prevout)\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-invalid\", \"prevoutStake in block header does not match coinstake in block body\");\n+        \n+        //the rest of the transactions must not be coinstake\n+        for (unsigned int i = 2; i < block.vtx.size(); i++)\n+            if (block.vtx[i]->IsCoinStake())\n+                return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-cs-multiple\", \"more than one coinstake\");\n+    }\n+\n+    // Check proof-of-stake block signature\n+    if (fCheckSig && !CheckBlockSignature(block))\n+        return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-blk-signature\", \"bad proof-of-stake block signature\");\n+\n+    bool fColdStakingActive = ::ChainActive().Height() >= consensusParams.BTCColdStakeEnableHeight;\n+\n+    // Check cold-stake outputs are not abused\n+    if (fColdStakingActive && block.IsProofOfStake()) {\n+        if (!CheckColdStakeOutputs(block)) {\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"bad-p2cs-outs\", \"invalid cold-stake output\");\n+        }\n+    }\n+\n     // Check transactions\n     // Must check for duplicate inputs (see CVE-2018-17144)\n     for (const auto& tx : block.vtx) {\n         TxValidationState tx_state;\n-        if (!CheckTransaction(*tx, tx_state)) {\n+        if (!CheckTransaction(*tx, tx_state, fColdStakingActive)) {\n             // CheckBlock() does context-free validation checks. The only\n             // possible failures are consensus failures.\n             assert(tx_state.GetResult() == TxValidationResult::TX_CONSENSUS);\n@@ -3439,14 +3982,14 @@ void UpdateUncommittedBlockStructures(CBlock& block, const CBlockIndex* pindexPr\n     }\n }\n \n-std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev, const Consensus::Params& consensusParams)\n+std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev, const Consensus::Params& consensusParams, bool fProofOfStake)\n {\n     std::vector<unsigned char> commitment;\n     int commitpos = GetWitnessCommitmentIndex(block);\n     std::vector<unsigned char> ret(32, 0x00);\n     if (consensusParams.SegwitHeight != std::numeric_limits<int>::max()) {\n         if (commitpos == NO_WITNESS_COMMITMENT) {\n-            uint256 witnessroot = BlockWitnessMerkleRoot(block, nullptr);\n+            uint256 witnessroot = BlockWitnessMerkleRoot(block, nullptr, &fProofOfStake);\n             CHash256().Write(witnessroot).Write(ret).Finalize(witnessroot);\n             CTxOut out;\n             out.nValue = 0;\n@@ -3468,22 +4011,6 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n     return commitment;\n }\n \n-//! Returns last CBlockIndex* that is a checkpoint\n-static CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n-{\n-    const MapCheckpoints& checkpoints = data.mapCheckpoints;\n-\n-    for (const MapCheckpoints::value_type& i : reverse_iterate(checkpoints))\n-    {\n-        const uint256& hash = i.second;\n-        CBlockIndex* pindex = LookupBlockIndex(hash);\n-        if (pindex) {\n-            return pindex;\n-        }\n-    }\n-    return nullptr;\n-}\n-\n /** Context-dependent validity checks.\n  *  By \"context\", we mean only the previous block headers, but not the UTXO\n  *  set; UTXO-related validity checks are done in ConnectBlock().\n@@ -3500,27 +4027,38 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, BlockValidatio\n \n     // Check proof of work\n     const Consensus::Params& consensusParams = params.GetConsensus();\n-    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams))\n+    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams, block.IsProofOfStake()))\n         return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-diffbits\", \"incorrect proof of work\");\n \n     // Check against checkpoints\n     if (fCheckpointsEnabled) {\n         // Don't accept any forks from the main chain prior to last checkpoint.\n         // GetLastCheckpoint finds the last checkpoint in MapCheckpoints that's in our\n-        // BlockIndex().\n-        CBlockIndex* pcheckpoint = GetLastCheckpoint(params.Checkpoints());\n+        // g_blockman.m_block_index.\n+        CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(params.Checkpoints());\n         if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n             LogPrintf(\"ERROR: %s: forked chain older than last checkpoint (height %d)\\n\", __func__, nHeight);\n             return state.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n         }\n+\n+        if(!Checkpoints::CheckHardened(nHeight, block.GetHash(), params.Checkpoints())) {\n+            LogPrintf(\"ERROR: %s: expected hardened checkpoint at height %d\\n\", __func__, nHeight);\n+            return state.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, \"bad-fork-hardened-checkpoint\");\n+        }\n+\n+        // Check that the block satisfies synchronized checkpoint\n+        if (!Checkpoints::CheckSync(nHeight)) {\n+            LogPrintf(\"ERROR: %s: forked chain older than last checkpoint (height %d)\\n\", __func__, nHeight);\n+            return state.Invalid(BlockValidationResult::BLOCK_HEADER_SYNC, \"bad-fork-prior-to-synch-checkpoint\");\n+        }\n     }\n \n     // Check timestamp against prev\n-    if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n+    if (pindexPrev && block.IsProofOfStake() && block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n         return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"time-too-old\", \"block's timestamp is too early\");\n \n     // Check timestamp\n-    if (block.GetBlockTime() > nAdjustedTime + MAX_FUTURE_BLOCK_TIME)\n+    if (block.IsProofOfStake() && block.GetBlockTime() > FutureDrift(nAdjustedTime))\n         return state.Invalid(BlockValidationResult::BLOCK_TIME_FUTURE, \"time-too-new\", \"block timestamp too far in the future\");\n \n     // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n@@ -3622,6 +4160,73 @@ static bool ContextualCheckBlock(const CBlock& block, BlockValidationState& stat\n     return true;\n }\n \n+bool CChainState::UpdateHashProof(const CBlock& block, BlockValidationState& state, const Consensus::Params& consensusParams, CBlockIndex* pindex, CCoinsViewCache& view)\n+{\n+    int nHeight = pindex->nHeight;\n+    uint256 hash = block.GetHash();\n+\n+    //reject proof of work at height consensusParams.nLastPOWBlock\n+    if (block.IsProofOfWork() && nHeight > consensusParams.nLastPOWBlock)\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-block-type\", strprintf(\"UpdateHashProof() : reject proof-of-work at height %d\", nHeight));\n+    \n+    // Check coinstake timestamp\n+    if (block.IsProofOfStake() && !CheckCoinStakeTimestamp(block.GetBlockTime()))\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-proof-of-stake-timestamp\", strprintf(\"UpdateHashProof() : coinstake timestamp violation nTimeBlock=%d\", block.GetBlockTime()));\n+\n+    // Check proof-of-work or proof-of-stake\n+    if (block.nBits != GetNextWorkRequired(pindex->pprev, &block, consensusParams, block.IsProofOfStake()))\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-proof-of-work-or-stake\", strprintf(\"UpdateHashProof() : incorrect %s\", block.IsProofOfWork() ? \"proof-of-work\" : \"proof-of-stake\"));\n+\n+    uint256 hashProof;\n+    // Verify hash target and signature of coinstake tx\n+    if (block.IsProofOfStake())\n+    {\n+        uint256 targetProofOfStake;\n+        if (!CheckProofOfStake(pindex->pprev, state, *block.vtx[1], block.nBits, block.nTime, hashProof, targetProofOfStake, view))\n+        {\n+            return error(\"UpdateHashProof() : check proof-of-stake failed for block %s\", hash.ToString());\n+        }\n+    }\n+    \n+    // PoW is checked in CheckBlock()\n+    if (block.IsProofOfWork())\n+    {\n+        hashProof = block.GetHash();\n+    }\n+    \n+    // Record proof hash value\n+    pindex->hashProof = hashProof;\n+    return true;\n+}\n+\n+bool CheckPOS(const CBlockHeader& block, CBlockIndex* pindexPrev)\n+{\n+    // Determining if PoS is possible to be checked in the header\n+    int diff = pindexPrev->nHeight + 1 - ::ChainActive().Height();\n+    if (pindexPrev && block.IsProofOfStake() && !::ChainstateActive().IsInitialBlockDownload()\n+    // Additional check if not triggered initial block download, like when PoW blocks were initially created\n+    // CheckPOS is called after ContextualCheckBlockHeader where future block headers are not accepted\n+            && (diff < COINBASE_MATURITY))\n+    {\n+        // Old header not child of the Tip\n+        if(diff < -COINBASE_MATURITY)\n+            return true;\n+\n+        // New header\n+        // Determining if the header is child of the Tip\n+        CBlockIndex* prev = pindexPrev;\n+        for (int i = 0; i < COINBASE_MATURITY; i++)\n+        {\n+            if (prev == ::ChainActive().Tip())\n+                return true;\n+            prev = prev->pprev;\n+        }\n+    }\n+\n+    // PoS header proofs are not validated\n+    return false;\n+}\n+\n bool BlockManager::AcceptBlockHeader(const CBlockHeader& block, BlockValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex)\n {\n     AssertLockHeld(cs_main);\n@@ -3642,11 +4247,22 @@ bool BlockManager::AcceptBlockHeader(const CBlockHeader& block, BlockValidationS\n             return true;\n         }\n \n-        if (!CheckBlockHeader(block, state, chainparams.GetConsensus())) {\n-            LogPrint(BCLog::VALIDATION, \"%s: Consensus::CheckBlockHeader: %s, %s\\n\", __func__, hash.ToString(), state.ToString());\n-            return false;\n+        // Check for the checkpoint\n+        if (::ChainActive().Tip() && block.hashPrevBlock != ::ChainActive().Tip()->GetBlockHash())\n+        {\n+            // Extra checks to prevent \"fill up memory by spamming with bogus blocks\"\n+            const CBlockIndex* pcheckpoint = Checkpoints::AutoSelectSyncCheckpoint();\n+            int64_t deltaTime = block.GetBlockTime() - pcheckpoint->nTime;\n+            if (deltaTime < 0)\n+            {\n+                return state.Invalid(BlockValidationResult::BLOCK_HEADER_SYNC, \"older-than-checkpoint\", \"AcceptBlockHeader(): Block with a timestamp before last checkpoint\");\n+            }\n         }\n \n+        // Check for the signiture encoding\n+        if (!CheckCanonicalBlockSignature(&block))\n+            return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-signature-encoding\", \"AcceptBlockHeader(): bad block signature encoding\");\n+\n         // Get prev block index\n         CBlockIndex* pindexPrev = nullptr;\n         BlockMap::iterator mi = m_block_index.find(block.hashPrevBlock);\n@@ -3700,6 +4316,27 @@ bool BlockManager::AcceptBlockHeader(const CBlockHeader& block, BlockValidationS\n                 }\n             }\n         }\n+\n+        // Reject proof of work at height consensusParams.nLastPOWBlock\n+        int nHeight = pindexPrev->nHeight + 1;\n+        if (block.IsProofOfWork() && nHeight > chainparams.GetConsensus().nLastPOWBlock)\n+            return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"reject-pow\", strprintf(\"reject proof-of-work at height %d\", nHeight));\n+\n+        if (block.IsProofOfStake())\n+        {\n+            // Reject proof of stake before height COINBASE_MATURITY\n+            if (nHeight < COINBASE_MATURITY)\n+                return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"reject-pos\", strprintf(\"reject proof-of-stake at height %d\", nHeight));\n+\n+            // Check coin stake timestamp\n+            if (!CheckCoinStakeTimestamp(block.nTime))\n+                return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"timestamp-invalid\", \"proof of stake failed due to invalid timestamp\");\n+        }\n+\n+        // Check block header\n+        // if (!CheckBlockHeader(block, state, chainparams.GetConsensus(), true, CheckPOS(block, pindexPrev)))\n+        if (!CheckBlockHeader(block, state, chainparams.GetConsensus()))\n+            return error(\"%s: Consensus::CheckBlockHeader: %s, %s\", __func__, hash.ToString(), state.ToString());\n     }\n     if (pindex == nullptr)\n         pindex = AddToBlockIndex(block);\n@@ -3711,22 +4348,64 @@ bool BlockManager::AcceptBlockHeader(const CBlockHeader& block, BlockValidationS\n }\n \n // Exposed wrapper for AcceptBlockHeader\n-bool ChainstateManager::ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex)\n+bool ChainstateManager::ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex, CBlockHeader *first_invalid,  const CBlockIndex** pindexFirst)\n {\n     AssertLockNotHeld(cs_main);\n+\n+    if (first_invalid != nullptr) first_invalid->SetNull();\n+    \n+    if(!::ChainstateActive().IsInitialBlockDownload() && headers.size() > 1) {\n+        const CBlockHeader last_header = headers[headers.size()-1];\n+        if (last_header.IsProofOfStake() && last_header.GetBlockTime() > FutureDrift(GetAdjustedTime())) {\n+            return state.Invalid(BlockValidationResult::BLOCK_TIME_FUTURE, \"time-too-new\", \"block timestamp too far in the future\");\n+        }\n+    }\n+\n     {\n         LOCK(cs_main);\n-        for (const CBlockHeader& header : headers) {\n+        bool bFirst = true;\n+        bool fInstantBan = false;\n+        for (size_t i = 0; i < headers.size(); ++i) {\n+            const CBlockHeader& header = headers[i];\n+\n+            // If the stake has been seen and the header has not yet been seen\n+            if (!fReindex && !fImporting && !::ChainstateActive().IsInitialBlockDownload() && header.IsProofOfStake() && ::StakeSeen().count(std::make_pair(header.prevoutStake, header.nTime)) && !::BlockIndex().count(header.GetHash())) {\n+                // if it is the last header of the list\n+                if(i+1 == headers.size()) {\n+                    if (first_invalid) *first_invalid = header;\n+                    if(fInstantBan) {\n+                        // if we've seen a dupe stake header already in this list, then instaban\n+                        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"duplicate-proof-of-stake\", strprintf(\"%s: duplicate proof-of-stake instant ban (%s, %d) for header %s\", __func__, header.prevoutStake.ToString(), header.nTime, header.GetHash().ToString()));\n+                    } else {\n+                        // otherwise just reject the block until it is part of a longer list\n+                        return state.Invalid(BlockValidationResult::BLOCK_HEADER_REJECT, \"duplicate-proof-of-stake\", strprintf(\"%s: duplicate proof-of-stake (%s, %d) for header %s\", __func__, header.prevoutStake.ToString(), header.nTime, header.GetHash().ToString()));\n+                    }\n+                } else {\n+                    // if it is not part of the longest chain, then any error on a subsequent header should result in an instant ban\n+                    fInstantBan = true;\n+                }\n+            }\n+\n             CBlockIndex *pindex = nullptr; // Use a temp pindex instead of ppindex to avoid a const_cast\n             bool accepted = m_blockman.AcceptBlockHeader(\n                 header, state, chainparams, &pindex);\n             ::ChainstateActive().CheckBlockIndex(chainparams.GetConsensus());\n \n             if (!accepted) {\n+                if (first_invalid) *first_invalid = header;\n+                 // if we have seen a duplicate stake in this header list previously, then ban immediately.\n+                if(fInstantBan) {\n+                    state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, state.GetRejectReason(), \"instant ban, due to duplicate header in the chain\");\n+                }\n                 return false;\n             }\n             if (ppindex) {\n                 *ppindex = pindex;\n+                if(bFirst && pindexFirst)\n+                {\n+                    *pindexFirst = pindex;\n+                    bFirst = false;\n+                }\n             }\n         }\n     }\n@@ -3774,6 +4453,54 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n     if (!accepted_header)\n         return false;\n \n+    if(block.IsProofOfWork()) {\n+        if (!UpdateHashProof(block, state, chainparams.GetConsensus(), pindex, ::ChainstateActive().CoinsTip()))\n+        {\n+            return error(\"%s: AcceptBlock(): %s\", __func__, state.GetRejectReason().c_str());\n+        }\n+    }\n+\n+    // Get prev block index\n+    CBlockIndex* pindexPrev = nullptr;\n+    if(pindex->nHeight > 0){\n+        BlockMap::iterator mi = ::BlockIndex().find(block.hashPrevBlock);\n+        if (mi == ::BlockIndex().end())\n+            return state.Invalid(BlockValidationResult::BLOCK_MISSING_PREV, \"prev-block-not-found\", \"AcceptBlock() : prev block not found\");\n+        pindexPrev = (*mi).second;\n+    }\n+\n+    // Get block height\n+    int nHeight = pindex->nHeight;\n+\n+    // Check for the last proof of work block\n+    if (block.IsProofOfWork() && nHeight > chainparams.GetConsensus().nLastPOWBlock)\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-proof-of-work\", strprintf(\"AcceptBlock() : reject proof-of-work at height %d\", nHeight));\n+\n+    // Check for the early proof of stake block\n+    if (block.IsProofOfStake() && nHeight <= chainparams.GetConsensus().nLastPOWBlock)\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, \"bad-proof-of-stake\", strprintf(\"AcceptBlock() : reject proof-of-stake at height %d\", nHeight));\n+\n+    // Check that the block satisfies synchronized checkpoint\n+    if (!Checkpoints::CheckSync(nHeight))\n+        return error(\"AcceptBlock() : rejected by synchronized checkpoint\");\n+\n+    // Check timestamp against prev\n+    if (pindexPrev && block.IsProofOfStake() && (block.GetBlockTime() <= pindexPrev->GetBlockTime() || FutureDrift(block.GetBlockTime()) < pindexPrev->GetBlockTime()))\n+        return error(\"AcceptBlock() : block's timestamp is too early\");\n+\n+    // Check timestamp\n+    if (block.IsProofOfStake() &&  block.GetBlockTime() > FutureDrift(GetAdjustedTime()))\n+        return error(\"AcceptBlock() : block timestamp too far in the future\");\n+\n+    // Enforce rule that the coinbase starts with serialized block height\n+    if (nHeight >= chainparams.GetConsensus().BIP34Height)\n+    {\n+        CScript expect = CScript() << nHeight;\n+        if (block.vtx[0]->vin[0].scriptSig.size() < expect.size() ||\n+            !std::equal(expect.begin(), expect.end(), block.vtx[0]->vin[0].scriptSig.begin()))\n+            return state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, \"block-height-mismatch\", \"AcceptBlock() : block height mismatch in coinbase\");\n+    }\n+\n     // Try to process all requested blocks that we don't have, but only\n     // process an unrequested block if it's new and has enough work to\n     // advance our tip, and isn't too many blocks ahead.\n@@ -3840,7 +4567,27 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n     return true;\n }\n \n-bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool* fNewBlock)\n+bool IsCanonicalBlockSignature(const CBlockHeader* pblock, bool checkLowS)\n+{\n+    if (pblock->IsProofOfWork()) {\n+        return pblock->vchBlockSig.empty();\n+    }\n+\n+    return checkLowS ? IsLowDERSignature(pblock->vchBlockSig, NULL, false) : IsDERSignature(pblock->vchBlockSig, NULL, false);\n+}\n+\n+bool CheckCanonicalBlockSignature(const CBlockHeader* pblock)\n+{\n+    //block signature encoding\n+    bool ret = IsCanonicalBlockSignature(pblock, false);\n+\n+    //block signature encoding (low-s)\n+    if(ret) ret = IsCanonicalBlockSignature(pblock, true);\n+\n+    return ret;\n+}\n+\n+bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n \n@@ -4303,7 +5050,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n         if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n             return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n         // check level 1: verify block validity\n-        if (nCheckLevel >= 1 && !CheckBlock(block, state, chainparams.GetConsensus()))\n+        if (nCheckLevel >= 1 && !CheckBlock(block, state, chainparams.GetConsensus(), false))\n             return error(\"%s: *** found bad block at %d, hash=%s (%s)\\n\", __func__,\n                          pindex->nHeight, pindex->GetBlockHash().ToString(), state.ToString());\n         // check level 2: verify undo validity\n@@ -4656,6 +5403,7 @@ bool CChainState::LoadGenesisBlock(const CChainParams& chainparams)\n         if (blockPos.IsNull())\n             return error(\"%s: writing genesis block to disk failed\", __func__);\n         CBlockIndex *pindex = m_blockman.AddToBlockIndex(block);\n+        pindex->hashProof = chainparams.GetConsensus().hashGenesisBlock;\n         ReceivedBlockTransactions(block, pindex, blockPos, chainparams.GetConsensus());\n     } catch (const std::runtime_error& e) {\n         return error(\"%s: failed to write genesis block: %s\", __func__, e.what());\n@@ -4741,10 +5489,11 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     }\n                 }\n \n-                // Activate the genesis block so normal node progress can continue\n-                if (hash == chainparams.GetConsensus().hashGenesisBlock) {\n+                // In Bitcoin POW this only needed to be done for genesis and at the end of block indexing\n+                // For POS we need to sync this after every block to ensure txdb is populated for validating PoS proofs\n+                {\n                     BlockValidationState state;\n-                    if (!ActivateBestChain(state, chainparams, nullptr)) {\n+                    if (!ActivateBestChain(state, chainparams)) {\n                         break;\n                     }\n                 }\n@@ -4972,6 +5721,50 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n     assert(nNodes == forward.size());\n }\n \n+bool CChainState::RemoveBlockIndex(CBlockIndex *pindex)\n+{\n+    // Check if the block index is present in any variable and remove it\n+    if(pindexBestInvalid == pindex)\n+        pindexBestInvalid = nullptr;\n+\n+    if(pindexBestHeader == pindex)\n+        pindexBestHeader = nullptr;\n+\n+    if(pindexBestForkTip == pindex)\n+        pindexBestForkTip = nullptr;\n+\n+    if(pindexBestForkBase == pindex)\n+        pindexBestForkBase = nullptr;\n+\n+\n+    // Check if the block index is present in any list and remove it\n+    for (auto it=m_blockman.m_blocks_unlinked.begin(); it!=m_blockman.m_blocks_unlinked.end();){\n+        if(it->first == pindex || it->second == pindex)\n+        {\n+            it = m_blockman.m_blocks_unlinked.erase(it);\n+        }\n+        else{\n+            it++;\n+        }\n+    }\n+\n+    setBlockIndexCandidates.erase(pindex);\n+\n+    m_blockman.m_failed_blocks.erase(pindex);\n+\n+    setDirtyBlockIndex.erase(pindex);\n+\n+    for (int b = 0; b < VERSIONBITS_NUM_BITS; b++) {\n+        warningcache[b].erase(pindex);\n+    }\n+\n+    for (int b = 0; b < Consensus::MAX_VERSION_BITS_DEPLOYMENTS; b++) {\n+        versionbitscache.caches[b].erase(pindex);\n+    }\n+\n+    return true;\n+}\n+\n std::string CChainState::ToString()\n {\n     CBlockIndex* tip = m_chain.Tip();\n@@ -5216,6 +6009,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     return std::min<double>(pindex->nChainTx / fTxTotal, 1.0);\n }\n \n+bool RemoveStateBlockIndex(CBlockIndex *pindex)\n+{\n+    return ::ChainstateActive().RemoveBlockIndex(pindex);\n+}\n+\n Optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n     if (m_active_chainstate != nullptr) {\n         // If a snapshot chainstate exists, it will always be our active."
      },
      {
        "sha": "a85bc1bb2b7ff293269b9e30c3b91e2353b4af3b",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 75,
        "deletions": 3,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -46,6 +46,8 @@ class CBlockPolicyEstimator;\n class CTxMemPool;\n class ChainstateManager;\n class TxValidationState;\n+class CWallet;\n+class CWalletTx;\n struct ChainTxData;\n \n struct DisconnectedBlockTransactions;\n@@ -112,6 +114,7 @@ enum class SynchronizationState {\n extern RecursiveMutex cs_main;\n extern CBlockPolicyEstimator feeEstimator;\n typedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\n+typedef std::set<std::pair<COutPoint, unsigned int>> StakeSeenSet;\n extern Mutex g_best_block_mutex;\n extern std::condition_variable g_best_block_cv;\n extern uint256 g_best_block;\n@@ -148,6 +151,8 @@ extern uint64_t nPruneTarget;\n /** Documentation for argument 'checklevel'. */\n extern const std::vector<std::string> CHECKLEVEL_DOC;\n \n+inline int64_t FutureDrift(uint32_t nTime) { return nTime + 15; }\n+\n /** Open a block file (blk?????.dat) */\n FILE* OpenBlockFile(const FlatFilePos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n@@ -294,8 +299,19 @@ bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex* pindex);\n \n /** Functions for validating blocks and updating the block tree */\n \n+/* Check index proof */\n+bool CheckIndexProof(const CBlockIndex& block, const Consensus::Params& consensusParams);\n+\n /** Context-independent validity checks */\n-bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n+bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true, bool fCheckMerkleRoot = true, bool fCheckSig=true);\n+\n+/* Check block signature */\n+bool CheckCanonicalBlockSignature(const CBlockHeader* pblock);\n+\n+#ifdef ENABLE_WALLET\n+/* Sign a block */\n+bool SignBlock(std::shared_ptr<CBlock> pblock, CWallet& wallet, const CAmount& nTotalFees, uint32_t nTime, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoins);\n+#endif\n \n /** Check a block is completely valid from start to finish (only works on top of our current best block) */\n bool TestBlockValidity(BlockValidationState& state, const CChainParams& chainparams, const CBlock& block, CBlockIndex* pindexPrev, bool fCheckPOW = true, bool fCheckMerkleRoot = true) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n@@ -308,7 +324,7 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n void UpdateUncommittedBlockStructures(CBlock& block, const CBlockIndex* pindexPrev, const Consensus::Params& consensusParams);\n \n /** Produce the necessary coinbase commitment for a block (modifies the hash, don't call for mined blocks). */\n-std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev, const Consensus::Params& consensusParams);\n+std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBlockIndex* pindexPrev, const Consensus::Params& consensusParams, bool fProofOfStake=false);\n \n /** RAII wrapper for VerifyDB: Verify consistency of the block and coin databases */\n class CVerifyDB {\n@@ -379,6 +395,7 @@ class BlockManager\n \n public:\n     BlockMap m_block_index GUARDED_BY(cs_main);\n+    StakeSeenSet m_stake_seen;\n \n     /** In order to efficiently track invalidity of headers, we keep the set of\n       * blocks which we tried to connect and found to be invalid here (ie which\n@@ -670,6 +687,8 @@ class CChainState\n     bool ConnectBlock(const CBlock& block, BlockValidationState& state, CBlockIndex* pindex,\n                       CCoinsViewCache& view, const CChainParams& chainparams, bool fJustCheck = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    bool UpdateHashProof(const CBlock& block, BlockValidationState& state, const Consensus::Params& consensusParams, CBlockIndex* pindex, CCoinsViewCache& view);\n+\n     // Apply the effects of a block disconnection on the UTXO set.\n     bool DisconnectTip(BlockValidationState& state, const CChainParams& chainparams, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool.cs);\n \n@@ -697,6 +716,8 @@ class CChainState\n      */\n     void CheckBlockIndex(const Consensus::Params& consensusParams);\n \n+    bool RemoveBlockIndex(CBlockIndex *pindex);\n+    \n     /** Load the persisted mempool from disk */\n     void LoadMempool(const ArgsManager& args);\n \n@@ -924,7 +945,7 @@ class ChainstateManager\n      * @param[in]  chainparams The params for the chain we want to connect to\n      * @param[out] ppindex If set, the pointer will be set to point to the last new block index object for the given headers\n      */\n-    bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& block, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex = nullptr) LOCKS_EXCLUDED(cs_main);\n+    bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& block, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex = nullptr, CBlockHeader* first_invalid = nullptr, const CBlockIndex** pindexFirst = nullptr) LOCKS_EXCLUDED(cs_main);\n \n     //! Load the block tree and coins database from disk, initializing state if we're running with -reindex\n     bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n@@ -949,6 +970,12 @@ CChainState& ChainstateActive();\n /** Please prefer the identical ChainstateManager::ActiveChain */\n CChain& ChainActive();\n \n+/** @returns the global block index map. */\n+BlockMap& BlockIndex();\n+\n+/** @returns the global stake seen set. */\n+StakeSeenSet& StakeSeen();\n+\n /** Global variable that points to the active block tree (protected by cs_main) */\n extern std::unique_ptr<CBlockTreeDB> pblocktree;\n \n@@ -975,10 +1002,55 @@ bool DumpMempool(const CTxMemPool& pool);\n /** Load the mempool from disk. */\n bool LoadMempool(CTxMemPool& pool);\n \n+bool CheckReward(const CBlock& block, BlockValidationState& state, int nHeight, const Consensus::Params& consensusParams, CAmount nFees, CAmount nActualStakeReward, const std::vector<CTxOut>& vouts);\n+\n+bool CheckColdStakeOutputs(const CBlock& block);\n+\n+bool RemoveStateBlockIndex(CBlockIndex *pindex);\n+\n+bool GetBlockPublicKey(const CBlock& block, std::vector<unsigned char>& vchPubKey);\n+\n+bool GetSpentCoinFromBlock(const CBlockIndex* pindex, COutPoint prevout, Coin* coin);\n+\n+bool GetSpentCoinFromMainChain(const CBlockIndex* pforkPrev, COutPoint prevoutStake, Coin* coin);\n+\n //! Check whether the block associated with this index entry is pruned or not.\n inline bool IsBlockPruned(const CBlockIndex* pblockindex)\n {\n     return (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\n }\n \n+struct CHeightTxIndexKey {\n+    unsigned int height;\n+    uint160 address;\n+\n+    size_t GetSerializeSize(int nType, int nVersion) const {\n+        return 24;\n+    }\n+    template<typename Stream>\n+    void Serialize(Stream& s) const {\n+        ser_writedata32be(s, height);\n+        address.Serialize(s);\n+    }\n+    template<typename Stream>\n+    void Unserialize(Stream& s) {\n+        height = ser_readdata32be(s);\n+        address.Unserialize(s);\n+    }\n+\n+    CHeightTxIndexKey(unsigned int _height, uint160 _address) {\n+        height = _height;\n+        address = _address;\n+    }\n+\n+    CHeightTxIndexKey() {\n+        SetNull();\n+    }\n+\n+    void SetNull() {\n+        height = 0;\n+        address.SetNull();\n+    }\n+};\n+\n #endif // BITCOIN_VALIDATION_H"
      },
      {
        "sha": "4cc599b4e877cb9234735f026f70e8bb9be561ff",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -8,14 +8,16 @@\n /**\n  * network protocol versioning\n  */\n-\n static const int PROTOCOL_VERSION = 70016;\n \n //! initial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;\n \n //! disconnect from peers older than this proto version\n-static const int MIN_PEER_PROTO_VERSION = 31800;\n+static const int MIN_PEER_PROTO_VERSION = 70016;\n+\n+//! disconnect from peers older than this proto version\n+static const int OLD_MIN_PEER_PROTO_VERSION = 70015;\n \n //! BIP 0031, pong message, is enabled for all versions AFTER this one\n static const int BIP0031_VERSION = 60000;"
      },
      {
        "sha": "138a8404e24b75840240ceb9876aa1da7f1def15",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -67,11 +67,16 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddArg(\"-walletnotify=<cmd>\", \"Execute command when a wallet transaction changes. %s in cmd is replaced by TxID and %w is replaced by wallet name. %w is not currently implemented on windows. On systems where %w is supported, it should NOT be quoted because this would break shell escaping used to invoke the command.\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n #endif\n     argsman.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n-\n     argsman.AddArg(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n     argsman.AddArg(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", DEFAULT_FLUSHWALLET), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n     argsman.AddArg(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", DEFAULT_WALLET_PRIVDB), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n     argsman.AddArg(\"-walletrejectlongchains\", strprintf(\"Wallet will not create transactions that violate mempool chain limits (default: %u)\", DEFAULT_WALLET_REJECT_LONG_CHAINS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n+    \n+    argsman.AddArg(\"-staking=<n>\", \"Enable or disable staking. 0 = disabled, 1 = enabled (default: enabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-coldstaking=<n>\", \"Enable or disable coldstaking. 0 = disabled, 1 = enabled (default: enabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-stakecache=<n>\", \"Enables or disables the staking cache; significantly improves staking performance, but can use a lot of memory. 0 = disabled, 1 = enabled (default: enabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-emergencystaking=<n>\", \"Enable or disable emergecy staking. 0 = disabled, 1 = enabled (default: disabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    argsman.AddArg(\"-aggressivestaking\", \"Check more often to publish immediately when valid block is found.\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n \n     argsman.AddHiddenArgs({\"-zapwallettxes\"});\n }"
      },
      {
        "sha": "4bee2831fbd7468102abb7d9a2604f91dac38f56",
        "filename": "src/wallet/ismine.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/ismine.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/ismine.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/ismine.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -21,7 +21,12 @@ enum isminetype : unsigned int\n     ISMINE_WATCH_ONLY = 1 << 0,\n     ISMINE_SPENDABLE  = 1 << 1,\n     ISMINE_USED       = 1 << 2,\n-    ISMINE_ALL        = ISMINE_WATCH_ONLY | ISMINE_SPENDABLE,\n+    //! Indicates that we have the staking key of a P2CS\n+    ISMINE_COLD       = 1 << 3,\n+    //! Indicates that we have the spending key of a P2CS\n+    ISMINE_SPENDABLE_DELEGATED = 1 << 4,\n+    ISMINE_SPENDABLE_ALL = ISMINE_SPENDABLE_DELEGATED | ISMINE_SPENDABLE,\n+    ISMINE_ALL        = ISMINE_WATCH_ONLY | ISMINE_SPENDABLE | ISMINE_COLD | ISMINE_SPENDABLE_DELEGATED,\n     ISMINE_ALL_USED   = ISMINE_ALL | ISMINE_USED,\n     ISMINE_ENUM_ELEMENTS,\n };"
      },
      {
        "sha": "f21612019e2996bf4dea84d757f35290f0bd08cf",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -136,6 +136,7 @@ void StartWallets(CScheduler& scheduler, const ArgsManager& args)\n void FlushWallets()\n {\n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets()) {\n+        pwallet->StopStake();\n         pwallet->Flush();\n     }\n }"
      },
      {
        "sha": "1a9fd97109cf991ba5ac5fb8007e908978628de4",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -157,6 +157,8 @@ RPCHelpMan importprivkey()\n \n         CKey key = DecodeSecret(strSecret);\n         if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (pwallet->m_wallet_unlock_staking_only)\n+            throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Wallet is unlocked for staking only.\");\n \n         CPubKey pubkey = key.GetPubKey();\n         CHECK_NONFATAL(key.VerifyPubKey(pubkey));\n@@ -169,7 +171,7 @@ RPCHelpMan importprivkey()\n             // label was passed.\n             for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n                 if (!request.params[1].isNull() || !pwallet->FindAddressBookEntry(dest)) {\n-                    pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+                    pwallet->SetAddressBook(dest, strLabel, AddressBook::AddressBookPurpose::RECEIVE);\n                 }\n             }\n \n@@ -631,7 +633,7 @@ RPCHelpMan importwallet()\n             }\n \n             if (has_label)\n-                pwallet->SetAddressBook(PKHash(keyid), label, \"receive\");\n+                pwallet->SetAddressBook(PKHash(keyid), label, AddressBook::AddressBookPurpose::RECEIVE);\n \n             nTimeBegin = std::min(nTimeBegin, time);\n             progress++;\n@@ -698,6 +700,8 @@ RPCHelpMan dumpprivkey()\n     CTxDestination dest = DecodeDestination(strAddress);\n     if (!IsValidDestination(dest)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        if (pwallet->m_wallet_unlock_staking_only)\n+            throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Wallet is unlocked for staking only.\");\n     }\n     auto keyid = GetKeyForDestination(spk_man, dest);\n     if (keyid.IsNull()) {"
      },
      {
        "sha": "8474512b7bffb421dc87d9e425a69b3b8b6681ef",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 252,
        "deletions": 12,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -3,10 +3,12 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <addressbook.h>\n #include <amount.h>\n #include <core_io.h>\n #include <interfaces/chain.h>\n #include <key_io.h>\n+#include <net.h>\n #include <node/context.h>\n #include <optional.h>\n #include <outputtype.h>\n@@ -122,6 +124,9 @@ void EnsureWalletIsUnlocked(const CWallet* pwallet)\n     if (pwallet->IsLocked()) {\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n     }\n+    if (pwallet->m_wallet_unlock_staking_only) {\n+        throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Wallet is unlocked for staking only.\");\n+    }\n }\n \n WalletContext& EnsureWalletContext(const util::Ref& context)\n@@ -356,9 +361,9 @@ static RPCHelpMan setlabel()\n     std::string label = LabelFromValue(request.params[1]);\n \n     if (pwallet->IsMine(dest)) {\n-        pwallet->SetAddressBook(dest, label, \"receive\");\n+        pwallet->SetAddressBook(dest, label, AddressBook::AddressBookPurpose::RECEIVE);\n     } else {\n-        pwallet->SetAddressBook(dest, label, \"send\");\n+        pwallet->SetAddressBook(dest, label, AddressBook::AddressBookPurpose::SEND);\n     }\n \n     return NullUniValue;\n@@ -400,6 +405,9 @@ UniValue SendMoney(CWallet* const pwallet, const CCoinControl &coin_control, std\n {\n     EnsureWalletIsUnlocked(pwallet);\n \n+    if (pwallet->m_wallet_unlock_staking_only)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error: Wallet unlocked for staking only, unable to create transaction.\");\n+\n     // Shuffle recipient list\n     std::shuffle(recipients.begin(), recipients.end(), FastRandomContext());\n \n@@ -526,6 +534,131 @@ static RPCHelpMan sendtoaddress()\n     };\n }\n \n+UniValue CreateColdStakeDelegation(const UniValue& params, CWallet* const pwallet)\n+{\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    if (pwallet->GetLastBlockHeight() < Params().GetConsensus().BTCColdStakeEnableHeight) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Cold Staking is enabled at block %d\\n\", Params().GetConsensus().BTCColdStakeEnableHeight));\n+    }\n+\n+    // Get Staking Address\n+    std::string stakerAddressStr = params[0].get_str();\n+    CTxDestination stakeAddr = DecodeDestination(stakerAddressStr);\n+    if (!IsValidDestination(stakeAddr))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid BitcoinPoS address\");\n+\n+    PKHash* stakeKey = boost::get<PKHash>(&stakeAddr);\n+    if (!stakeKey)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Unable to get stake pubkey hash from address\");\n+\n+    LegacyScriptPubKeyMan& spk_man = EnsureLegacyScriptPubKeyMan(*pwallet, true);\n+    if (spk_man.HaveKey(ToKeyID(*stakeKey))) {\n+        std::string errMsg = strprintf(\"The provided staker_address \\\"%s\\\" is present in this wallet.\\n\", params[0].get_str());\n+        errMsg += \"You can already stake the coins, there is no need to delegate them to yourself.\";\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errMsg);\n+    }\n+\n+    // Get Amount\n+    CAmount nValue = AmountFromValue(params[2]);\n+\n+    // include already delegated coins\n+    bool fIncludeDelegated = false;\n+    if (params.size() > 3 && !params[3].isNull())\n+        fIncludeDelegated = params[3].get_bool();\n+\n+    // Check amount\n+    CAmount currBalance = pwallet->GetAvailableBalance(nullptr, fIncludeDelegated);\n+    if (nValue > currBalance)\n+        throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Insufficient funds\");\n+\n+    std::string strError;\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    // Get Owner Address\n+    std::string ownerAddressStr;\n+    PKHash* ownerKey;\n+    if (params.size() > 1 && !params[1].isNull() && !params[1].get_str().empty()) {\n+        CTxDestination dest = DecodeDestination(params[1].get_str());\n+        if (!IsValidDestination(dest))\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid BitcoinPoS spending address.\");\n+        ownerKey = boost::get<PKHash>(&dest);\n+        if (!ownerKey)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Unable to get spend pubkey hash from owneraddress.\");\n+\n+        if (!spk_man.HaveKey(ToKeyID(*ownerKey))) {\n+            std::string errMsg = strprintf(\"The provided owneraddress \\\"%s\\\" is not present in this wallet.\\n\", params[1].get_str());\n+            errMsg += \"WARNING: Only the owner of the key to owneraddress will be allowed to spend these coins after the delegation.\";\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errMsg);\n+        }\n+        ownerAddressStr = params[1].get_str();\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Unable to get find owneraddress\");\n+    }\n+\n+    // Get P2CS script for addresses\n+    CScript scriptPubKey = GetScriptForStakeDelegation(ToKeyID(*stakeKey), ToKeyID(*ownerKey));\n+\n+    // Create the recipients list\n+    std::vector<CRecipient> recipients;\n+    recipients.push_back({scriptPubKey, nValue, false});\n+\n+    // Create the transaction\n+    bilingual_str error;\n+    CAmount nFeeRequired;\n+    int nChangePosRet = -1;\n+    CCoinControl coin_control;\n+    FeeCalculation fee_calc_out;\n+    CTransactionRef tx;\n+    if (!pwallet->CreateTransaction(recipients, tx, nFeeRequired, nChangePosRet, error, coin_control, fee_calc_out, !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS), fIncludeDelegated)) {\n+        throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, error.original);\n+    }\n+\n+    pwallet->CommitTransaction(tx, {}, {});\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"staker_address\", stakerAddressStr);\n+    result.pushKV(\"owner_address\", ownerAddressStr);\n+    result.pushKV(\"txid\", tx->GetHash().GetHex());\n+    return result;\n+}\n+\n+static RPCHelpMan delegatestake()\n+{\n+    return RPCHelpMan{\"delegatestake\",\n+                \"\\nDelegate an amount to a given address for cold staking. The amount is a real and is rounded to the nearest 0.00000001\\n\" +\n+                HELP_REQUIRING_PASSPHRASE,\n+                {\n+                    {\"staker_address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The BitcoinPoS address to delegate to.\"},\n+                    {\"owner_address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The BitcoinPoS address corresponding to the key that will be able to spend the stake.\"},\n+                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The amount in \" + CURRENCY_UNIT + \" to delegate for staking. eg 100\"},\n+                    {\"include_delegated\", RPCArg::Type::BOOL, \"false\", \"Include already delegated inputs if needed.\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR, \"staker_address\", \"The cold staker (delegate) staker_address.\"},\n+                        {RPCResult::Type::STR, \"owner_address\", \"The owner (delegator) owneraddress.\"},\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The stake delegation transaction id.\"},\n+                    },\n+                },\n+                RPCExamples{\n+                HelpExampleCli(\"delegatestake\", \"\\\"4VQ5qC2V4CsyhKfw7GvGVDu7EHGhaF1HHQ\\\" \\\"4SHsfHadrKeNj6hCajSeqwjD58QGtKke6f\\\" 1000\")\n+                + HelpExampleRpc(\"delegatestake\", \"\\\"4VQ5qC2V4CsyhKfw7GvGVDu7EHGhaF1HHQ\\\" \\\"4SHsfHadrKeNj6hCajSeqwjD58QGtKke6f\\\" 1000\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    UniValue ret = CreateColdStakeDelegation(request.params, pwallet);\n+\n+    return ret;\n+},\n+    };\n+}\n+\n static RPCHelpMan listaddressgroupings()\n {\n     return RPCHelpMan{\"listaddressgroupings\",\n@@ -587,6 +720,78 @@ static RPCHelpMan listaddressgroupings()\n     };\n }\n \n+static RPCHelpMan listunspentdelegations()\n+{\n+    return RPCHelpMan{\"listunspentdelegations\",\n+                \"\\nList P2CS unspent outputs received by this wallet as cold-staker.\\n\",\n+                {},\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR, \"txid\", \"The transaction id\"},\n+                            {RPCResult::Type::NUM, \"txidn\", \"The output number\"},\n+                            {RPCResult::Type::NUM, \"amount\", \"The amount delegated\"},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::NUM, \"staker_address\", \"The cold staker address\"},\n+                            {RPCResult::Type::NUM, \"owner_address\", \"The coin owner address\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                HelpExampleCli(\"listunspentdelegations\", \"\")\n+                + HelpExampleRpc(\"listunspentdelegations\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* const pwallet = wallet.get();\n+\n+    UniValue results(UniValue::VARR);\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        for (std::map<uint256, CWalletTx>::const_iterator it =\n+                pwallet->mapWallet.begin(); it != pwallet->mapWallet.end(); ++it) {\n+            const uint256& wtxid = it->first;\n+            const CWalletTx* pcoin = &(*it).second;\n+            if (!CheckFinalTx(*pcoin->tx) || !pcoin->IsTrusted())\n+                continue;\n+\n+            // if this tx has no unspent P2CS outputs for us, skip it\n+            if (pcoin->GetColdStakingCredit() == 0 && pcoin->GetStakeDelegationCredit() == 0)\n+                continue;\n+\n+            for (unsigned int i = 0; i < pcoin->tx->vout.size(); i++) {\n+                const CTxOut& out = pcoin->tx->vout[i];\n+                isminetype mine = pwallet->IsMine(out);\n+                bool isSpent =  pwallet->IsSpent(pcoin->tx->GetHash(), i);\n+                if ((!bool(mine & ISMINE_COLD) && !bool(mine & ISMINE_SPENDABLE_DELEGATED)) || isSpent)\n+                    continue;\n+                TxoutType type;\n+                std::vector<CTxDestination> addresses;\n+                int nRequired;\n+                if (!ExtractDestinations(out.scriptPubKey, type, addresses, nRequired))\n+                    continue;\n+                UniValue entry(UniValue::VOBJ);\n+                entry.pushKV(\"txid\", wtxid.GetHex());\n+                entry.pushKV(\"txidn\", (int)i);\n+                entry.pushKV(\"amount\", ValueFromAmount(out.nValue));\n+                entry.pushKV(\"confirmations\", pcoin->GetDepthInMainChain());\n+                entry.pushKV(\"staker-address\", EncodeDestination(addresses[0]));\n+                entry.pushKV(\"owner-address\", EncodeDestination(addresses[1]));\n+                results.push_back(entry);\n+            }\n+        }\n+    }\n+\n+    return results;\n+},\n+    };\n+}\n+\n static RPCHelpMan signmessage()\n {\n     return RPCHelpMan{\"signmessage\",\n@@ -1014,7 +1219,7 @@ static RPCHelpMan addmultisigaddress()\n     // Construct using pay-to-script-hash:\n     CScript inner;\n     CTxDestination dest = AddAndGetMultisigDestination(required, pubkeys, output_type, spk_man, inner);\n-    pwallet->SetAddressBook(dest, label, \"send\");\n+    pwallet->SetAddressBook(dest, label, AddressBook::AddressBookPurpose::SEND);\n \n     // Make the descriptor\n     std::unique_ptr<Descriptor> descriptor = InferDescriptor(GetScriptForDestination(dest), spk_man);\n@@ -1349,11 +1554,11 @@ static void ListTransactions(const CWallet* const pwallet, const CWalletTx& wtx,\n                 entry.pushKV(\"involvesWatchonly\", true);\n             }\n             MaybePushAddress(entry, r.destination);\n-            if (wtx.IsCoinBase())\n+            if (wtx.IsCoinBase() || wtx.IsCoinStake())\n             {\n                 if (wtx.GetDepthInMainChain() < 1)\n                     entry.pushKV(\"category\", \"orphan\");\n-                else if (wtx.IsImmatureCoinBase())\n+                else if (wtx.IsImmature())\n                     entry.pushKV(\"category\", \"immature\");\n                 else\n                     entry.pushKV(\"category\", \"generate\");\n@@ -1889,20 +2094,23 @@ static RPCHelpMan walletpassphrase()\n {\n     return RPCHelpMan{\"walletpassphrase\",\n                 \"\\nStores the wallet decryption key in memory for 'timeout' seconds.\\n\"\n-                \"This is needed prior to performing transactions related to private keys such as sending bitcoins\\n\"\n+                \"This is needed prior to performing transactions related to private keys such as sending bitcoins and staking\\n\"\n             \"\\nNote:\\n\"\n             \"Issuing the walletpassphrase command while the wallet is already unlocked will set a new unlock\\n\"\n             \"time that overrides the old one.\\n\",\n                 {\n                     {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The wallet passphrase\"},\n                     {\"timeout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The time to keep the decryption key in seconds; capped at 100000000 (~3 years).\"},\n+                    {\"stakingonly\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, \"Unlock wallet for staking only\"},\n                 },\n                 RPCResult{RPCResult::Type::NONE, \"\", \"\"},\n                 RPCExamples{\n             \"\\nUnlock the wallet for 60 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"my pass phrase\\\" 60\") +\n             \"\\nLock the wallet again (before 60 seconds)\\n\"\n             + HelpExampleCli(\"walletlock\", \"\") +\n+            \"\\nUnlock the wallet for staking only, for a long time\\n\"\n+            + HelpExampleCli(\"walletpassphrase\",\"\\\"my pass phrase\\\" 99999999 true\") +\n             \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"walletpassphrase\", \"\\\"my pass phrase\\\", 60\")\n                 },\n@@ -1946,7 +2154,17 @@ static RPCHelpMan walletpassphrase()\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n         }\n \n+        // Used to restore m_wallet_unlock_staking_only value in case of unlock failure\n+        bool tmpStakingOnly = pwallet->m_wallet_unlock_staking_only;\n+\n+        // ppcoin: if user OS account compromised prevent trivial sendmoney commands\n+        if (request.params.size() > 2)\n+            pwallet->m_wallet_unlock_staking_only = request.params[2].get_bool();\n+        else\n+            pwallet->m_wallet_unlock_staking_only = false;\n+\n         if (!pwallet->Unlock(strWalletPass)) {\n+            pwallet->m_wallet_unlock_staking_only = tmpStakingOnly;\n             throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n         }\n \n@@ -2432,6 +2650,16 @@ static RPCHelpMan getwalletinfo()\n                         {RPCResult::Type::STR_AMOUNT, \"balance\", \"DEPRECATED. Identical to getbalances().mine.trusted\"},\n                         {RPCResult::Type::STR_AMOUNT, \"unconfirmed_balance\", \"DEPRECATED. Identical to getbalances().mine.untrusted_pending\"},\n                         {RPCResult::Type::STR_AMOUNT, \"immature_balance\", \"DEPRECATED. Identical to getbalances().mine.immature\"},\n+                        {RPCResult::Type::STR_AMOUNT, \"stake\", \"the total stake balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"stakeable\", \"the total stakeable balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"immature_stakeable\", \"the total immature stakeable balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"stakeable_delegations\", \"the total stakeable balance from delegations in the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"immature_stakeable_delegations\", \"the total immature stakeable balance from delegations in the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"cold_stake\", \"the total cold stake balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"immature_cold_stake\", \"the total immature cold stake balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"delegated\", \"the total delegated balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"immature_delegated\", \"the total immature delegated balance of the wallet in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::STR_AMOUNT, \"total\", \"the total balance of the wallet in \" + CURRENCY_UNIT},\n                         {RPCResult::Type::NUM, \"txcount\", \"the total number of transactions in the wallet\"},\n                         {RPCResult::Type::NUM_TIME, \"keypoololdest\", \"the \" + UNIX_EPOCH_TIME + \" of the oldest pre-generated key in the key pool. Legacy wallets only.\"},\n                         {RPCResult::Type::NUM, \"keypoolsize\", \"how many new keys are pre-generated (only counts external keys)\"},\n@@ -2476,6 +2704,16 @@ static RPCHelpMan getwalletinfo()\n     obj.pushKV(\"balance\", ValueFromAmount(bal.m_mine_trusted));\n     obj.pushKV(\"unconfirmed_balance\", ValueFromAmount(bal.m_mine_untrusted_pending));\n     obj.pushKV(\"immature_balance\", ValueFromAmount(bal.m_mine_immature));\n+    obj.pushKV(\"stake\", ValueFromAmount(bal.m_mine_stake));\n+    obj.pushKV(\"stakeable\", ValueFromAmount(bal.m_mine_stakeable));\n+    obj.pushKV(\"immature_stakeable\", ValueFromAmount(bal.m_mine_immature_stakeable));\n+    obj.pushKV(\"stakeable_delegations\", ValueFromAmount(bal.m_mine_stakeable_delegations));\n+    obj.pushKV(\"immature_stakeable_delegations\", ValueFromAmount(bal.m_mine_immature_stakeable_delegations));\n+    obj.pushKV(\"cold_stake\", ValueFromAmount(bal.m_mine_cold_stake));\n+    obj.pushKV(\"immature_cold_stake\", ValueFromAmount(bal.m_mine_immature_cold_stake));\n+    obj.pushKV(\"delegated\", ValueFromAmount(bal.m_mine_delegated));\n+    obj.pushKV(\"immature_delegated\", ValueFromAmount(bal.m_mine_immature_delegated));\n+    obj.pushKV(\"total\", ValueFromAmount(bal.m_mine_trusted + bal.m_mine_untrusted_pending + bal.m_mine_immature + bal.m_mine_delegated));\n     obj.pushKV(\"txcount\",       (int)pwallet->mapWallet.size());\n     if (kp_oldest > 0) {\n         obj.pushKV(\"keypoololdest\", kp_oldest);\n@@ -2966,7 +3204,7 @@ static RPCHelpMan listunspent()\n         cctl.m_min_depth = nMinDepth;\n         cctl.m_max_depth = nMaxDepth;\n         LOCK(pwallet->cs_wallet);\n-        pwallet->AvailableCoins(vecOutputs, !include_unsafe, &cctl, nMinimumAmount, nMaximumAmount, nMinimumSumAmount, nMaximumCount);\n+        pwallet->AvailableCoins(vecOutputs, !include_unsafe, &cctl, true, false, nMinimumAmount, nMaximumAmount, nMinimumSumAmount, nMaximumCount);\n     }\n \n     LOCK(pwallet->cs_wallet);\n@@ -3747,7 +3985,7 @@ static UniValue DescribeWalletAddress(const CWallet* const pwallet, const CTxDes\n }\n \n /** Convert CAddressBookData to JSON record.  */\n-static UniValue AddressBookDataToJSON(const CAddressBookData& data, const bool verbose)\n+static UniValue AddressBookDataToJSON(const AddressBook::CAddressBookData& data, const bool verbose)\n {\n     UniValue ret(UniValue::VOBJ);\n     if (verbose) {\n@@ -3836,7 +4074,7 @@ RPCHelpMan getaddressinfo()\n     isminetype mine = pwallet->IsMine(dest);\n     ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n \n-    bool solvable = provider && IsSolvable(*provider, scriptPubKey);\n+    bool solvable = provider && IsSolvable(*provider, scriptPubKey, mine == ISMINE_COLD);\n     ret.pushKV(\"solvable\", solvable);\n \n     if (solvable) {\n@@ -3912,7 +4150,7 @@ static RPCHelpMan getaddressesbylabel()\n     // Find all addresses that have the given label\n     UniValue ret(UniValue::VOBJ);\n     std::set<std::string> addresses;\n-    for (const std::pair<const CTxDestination, CAddressBookData>& item : pwallet->m_address_book) {\n+    for (const std::pair<const CTxDestination, AddressBook::CAddressBookData>& item : pwallet->m_address_book) {\n         if (item.second.IsChange()) continue;\n         if (item.second.GetLabel() == label) {\n             std::string address = EncodeDestination(item.first);\n@@ -3976,7 +4214,7 @@ static RPCHelpMan listlabels()\n \n     // Add to a set to sort by label name, then insert into Univalue array\n     std::set<std::string> label_set;\n-    for (const std::pair<const CTxDestination, CAddressBookData>& entry : pwallet->m_address_book) {\n+    for (const std::pair<const CTxDestination, AddressBook::CAddressBookData>& entry : pwallet->m_address_book) {\n         if (entry.second.IsChange()) continue;\n         if (purpose.empty() || entry.second.purpose == purpose) {\n             label_set.insert(entry.second.GetLabel());\n@@ -4570,6 +4808,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"importwallet\",                     &importwallet,                  {\"filename\"} },\n     { \"wallet\",             \"keypoolrefill\",                    &keypoolrefill,                 {\"newsize\"} },\n     { \"wallet\",             \"listaddressgroupings\",             &listaddressgroupings,          {} },\n+    { \"wallet\",             \"listunspentdelegations\",           &listunspentdelegations,        {} },\n     { \"wallet\",             \"listlabels\",                       &listlabels,                    {\"purpose\"} },\n     { \"wallet\",             \"listlockunspent\",                  &listlockunspent,               {} },\n     { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\"} },\n@@ -4586,6 +4825,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"send\",                             &send,                          {\"outputs\",\"conf_target\",\"estimate_mode\",\"fee_rate\",\"options\"} },\n     { \"wallet\",             \"sendmany\",                         &sendmany,                      {\"dummy\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\",\"fee_rate\",\"verbose\"} },\n     { \"wallet\",             \"sendtoaddress\",                    &sendtoaddress,                 {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\",\"avoid_reuse\",\"fee_rate\",\"verbose\"} },\n+    { \"wallet\",             \"delegatestake\",                    &delegatestake,                 {\"staker_address\", \"owner_address\", \"amount\", \"include_delegated\"} },\n     { \"wallet\",             \"sethdseed\",                        &sethdseed,                     {\"newkeypool\",\"seed\"} },\n     { \"wallet\",             \"setlabel\",                         &setlabel,                      {\"address\",\"label\"} },\n     { \"wallet\",             \"settxfee\",                         &settxfee,                      {\"amount\"} },\n@@ -4596,7 +4836,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"upgradewallet\",                    &upgradewallet,                 {\"version\"} },\n     { \"wallet\",             \"walletcreatefundedpsbt\",           &walletcreatefundedpsbt,        {\"inputs\",\"outputs\",\"locktime\",\"options\",\"bip32derivs\"} },\n     { \"wallet\",             \"walletlock\",                       &walletlock,                    {} },\n-    { \"wallet\",             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\"} },\n+    { \"wallet\",             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\", \"stakingonly\"} },\n     { \"wallet\",             \"walletpassphrasechange\",           &walletpassphrasechange,        {\"oldpassphrase\",\"newpassphrase\"} },\n     { \"wallet\",             \"walletprocesspsbt\",                &walletprocesspsbt,             {\"psbt\",\"sign\",\"sighashtype\",\"bip32derivs\"} },\n };"
      },
      {
        "sha": "11f37a7c4874a75501606316ab8dd558a01046af",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -58,7 +58,9 @@ enum class IsMineResult\n     NO = 0,         //!< Not ours\n     WATCH_ONLY = 1, //!< Included in watch-only balance\n     SPENDABLE = 2,  //!< Included in all balances\n-    INVALID = 3,    //!< Not spendable by anyone (uncompressed pubkey in segwit, P2SH inside P2SH or witness, witness inside witness)\n+    COLD = 3,       //!< Indicates that we have the staking key of a P2CS\n+    SPENDABLE_DELEGATED = 4, //!< Indicates that we have the spending key of a P2CS\n+    INVALID = 5,    //!< Not spendable by anyone (uncompressed pubkey in segwit, P2SH inside P2SH or witness, witness inside witness)\n };\n \n bool PermitsUncompressed(IsMineSigVersion sigversion)\n@@ -191,6 +193,24 @@ IsMineResult IsMineInner(const LegacyScriptPubKeyMan& keystore, const CScript& s\n         }\n         break;\n     }\n+    case TxoutType::COLDSTAKE:\n+    {\n+        CKeyID stakeKeyID = CKeyID(uint160(vSolutions[0]));\n+        bool stakeKeyIsMine = keystore.HaveKey(stakeKeyID);\n+        CKeyID ownerKeyID = CKeyID(uint160(vSolutions[1]));\n+        bool spendKeyIsMine = keystore.HaveKey(ownerKeyID);\n+\n+        if (spendKeyIsMine) {\n+            // If the wallet has both keys, SPENDABLE_DELEGATED\n+            // takes precedence over COLD\n+            return IsMineResult::SPENDABLE_DELEGATED;\n+        } else if (stakeKeyIsMine) {\n+            return IsMineResult::COLD;\n+        } else {\n+            // todo: Include watch only..\n+        }\n+        break;\n+    }\n     }\n \n     if (ret == IsMineResult::NO && keystore.HaveWatchOnly(scriptPubKey)) {\n@@ -211,6 +231,10 @@ isminetype LegacyScriptPubKeyMan::IsMine(const CScript& script) const\n         return ISMINE_WATCH_ONLY;\n     case IsMineResult::SPENDABLE:\n         return ISMINE_SPENDABLE;\n+    case IsMineResult::SPENDABLE_DELEGATED:\n+        return ISMINE_SPENDABLE_DELEGATED;\n+    case IsMineResult::COLD:\n+        return ISMINE_COLD;\n     }\n     assert(false);\n }\n@@ -561,7 +585,7 @@ bool LegacyScriptPubKeyMan::CanProvide(const CScript& script, SignatureData& sig\n         return true;\n     } else {\n         // If, given the stuff in sigdata, we could make a valid sigature, then we can provide for this script\n-        ProduceSignature(*this, DUMMY_SIGNATURE_CREATOR, script, sigdata);\n+        ProduceSignature(*this, DUMMY_SIGNATURE_CREATOR, script, sigdata, ismine == IsMineResult::COLD);\n         if (!sigdata.signatures.empty()) {\n             // If we could make signatures, make sure we have a private key to actually make a signature\n             bool has_privkeys = false;"
      },
      {
        "sha": "dd343944dfa2034a8cba222dc43bb9b2c004a9d6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 698,
        "deletions": 38,
        "changes": 736,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <wallet/wallet.h>\n \n+#include <amount.h>\n #include <chain.h>\n #include <consensus/consensus.h>\n #include <consensus/validation.h>\n@@ -13,6 +14,7 @@\n #include <interfaces/wallet.h>\n #include <key.h>\n #include <key_io.h>\n+#include <validation.h>\n #include <optional.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n@@ -32,6 +34,8 @@\n #include <util/translation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n+#include <pos.h>\n+#include <miner.h>\n \n #include <univalue.h>\n \n@@ -55,6 +59,9 @@ static const size_t OUTPUT_GROUP_MAX_ENTRIES = 10;\n static RecursiveMutex cs_wallets;\n static std::vector<std::shared_ptr<CWallet>> vpwallets GUARDED_BY(cs_wallets);\n static std::list<LoadWalletFn> g_load_wallet_fns GUARDED_BY(cs_wallets);\n+CConnman* CWallet::defaultConnman = 0;\n+ChainstateManager* CWallet::defaultChainman = 0;\n+CTxMemPool* CWallet::defaultMempool = 0;\n \n bool AddWalletSetting(interfaces::Chain& chain, const std::string& wallet_name)\n {\n@@ -163,6 +170,7 @@ static void ReleaseWallet(CWallet* wallet)\n {\n     const std::string name = wallet->GetName();\n     wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->StopStake();\n     wallet->Flush();\n     delete wallet;\n     // Wallet is now released, notify UnloadWallet, if any.\n@@ -484,6 +492,8 @@ bool CWallet::HasWalletSpend(const uint256& txid) const\n \n void CWallet::Flush()\n {\n+    StopStake();\n+\n     database->Flush();\n }\n \n@@ -554,6 +564,35 @@ bool CWallet::IsSpent(const uint256& hash, unsigned int n) const\n     return false;\n }\n \n+void CWallet::RemoveFromSpends(const COutPoint& outpoint, const uint256& wtxid)\n+{\n+    std::pair<TxSpends::iterator, TxSpends::iterator> range;\n+    range = mapTxSpends.equal_range(outpoint);\n+    TxSpends::iterator it = range.first;\n+    for (; it != range.second; ++ it)\n+    {\n+        if (it->second == wtxid)\n+        {\n+            mapTxSpends.erase(it);\n+            break;\n+        }\n+    }\n+    range = mapTxSpends.equal_range(outpoint);\n+    if(range.first != range.second)\n+        SyncMetaData(range);\n+}\n+\n+void CWallet::RemoveFromSpends(const uint256& wtxid)\n+{\n+    assert(mapWallet.count(wtxid));\n+    CWalletTx& thisTx = mapWallet.at(wtxid);\n+\tif (thisTx.IsCoinBase()) // Coinbases don't spend anything!\n+        return;\n+\n+    for (const CTxIn& txin : thisTx.tx->vin)\n+        RemoveFromSpends(txin.prevout, wtxid);\n+}\n+\n void CWallet::AddToSpends(const COutPoint& outpoint, const uint256& wtxid)\n {\n     mapTxSpends.insert(std::make_pair(outpoint, wtxid));\n@@ -898,6 +937,11 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmatio\n             wtx.SetTx(tx);\n             fUpdated = true;\n         }\n+\n+        if(fUpdated && wtx.IsCoinStake())\n+        {\n+            AddToSpends(hash);\n+        }\n     }\n \n     //// debug print\n@@ -914,6 +958,19 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmatio\n     // Notify UI of new or updated transaction\n     NotifyTransactionChanged(this, hash, fInsertedNew ? CT_NEW : CT_UPDATED);\n \n+    if (fInsertedNew && wtx.HasP2CSInputs())\n+    {\n+        // Notify UI that the outputs of some transactions were spent\n+        for (const CTxIn& txin : wtx.tx->vin) {\n+            auto it = mapWallet.find(txin.prevout.hash);\n+            if (it != mapWallet.end()) {\n+                CWalletTx& prevtx = it->second;\n+                // Notify UI of new or updated transaction\n+                NotifyTransactionChanged(this, prevtx.GetHash(), CT_UPDATED);\n+            }\n+        }\n+    }\n+\n #if HAVE_SYSTEM\n     // notify an external script when a wallet transaction comes in or is updated\n     std::string strCmd = gArgs.GetArg(\"-walletnotify\", \"\");\n@@ -1055,6 +1112,7 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\n     assert(it != mapWallet.end());\n     CWalletTx& origtx = it->second;\n     if (origtx.GetDepthInMainChain() != 0 || origtx.InMempool()) {\n+        WalletLogPrintf(\"Transaction %s cannot be abandoned; DepthInMainChain %d, InMemPool %s\\n\", hashTx.ToString(), origtx.GetDepthInMainChain(), origtx.InMempool() ? \"true\":\"false\");\n         return false;\n     }\n \n@@ -1089,6 +1147,9 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\n             // If a transaction changes 'conflicted' state, that changes the balance\n             // available of the outputs it spends. So force those to be recomputed\n             MarkInputsDirty(wtx.tx);\n+            WalletLogPrintf(\"Transaction %s abandoned\\n\", hashTx.ToString());\n+        } else {\n+            WalletLogPrintf(\"Transaction %s cannot be abandoned; DepthInMainChain %d, IsAbandoned %s\\n\", currentconfirm, wtx.isAbandoned() ? \"true\":\"false\");\n         }\n     }\n \n@@ -1149,6 +1210,19 @@ void CWallet::MarkConflicted(const uint256& hashBlock, int conflicting_height, c\n \n void CWallet::SyncTransaction(const CTransactionRef& ptx, CWalletTx::Confirmation confirm, bool update_tx)\n {\n+    if (confirm.hashBlock.IsNull() && confirm.nIndex == -1)\n+    {\n+        const CTransaction& tx = *ptx;\n+        LogPrint(BCLog::COINSTAKE, \"SyncTransaction: tx %s\\n\", tx.GetHash().ToString());\n+\n+        // wallets need to refund inputs when disconnecting coinstake\n+        if (tx.IsCoinStake() && IsRelevantToMe_MPOS(tx)) {\n+            LogPrint(BCLog::COINSTAKE, \"%s: disabling coinstake tx %s\\n\", __func__, tx.GetHash().ToString());\n+            DisableTransaction(tx);\n+            return;\n+        }\n+    }\n+\n     if (!AddToWalletIfInvolvingMe(ptx, confirm, update_tx))\n         return; // Not one of ours\n \n@@ -1223,14 +1297,17 @@ void CWallet::blockDisconnected(const CBlock& block, int height)\n {\n     LOCK(cs_wallet);\n \n+    LogPrint(BCLog::COINSTAKE, \"%s: disconnected block %s at height %d\\n\", __func__, block.GetHash().ToString(), height);\n+\n     // At block disconnection, this will change an abandoned transaction to\n     // be unconfirmed, whether or not the transaction is added back to the mempool.\n     // User may have to call abandontransaction again. It may be addressed in the\n     // future with a stickier abandoned state or even removing abandontransaction call.\n     m_last_block_processed_height = height - 1;\n     m_last_block_processed = block.hashPrevBlock;\n     for (const CTransactionRef& ptx : block.vtx) {\n-        SyncTransaction(ptx, {CWalletTx::Status::UNCONFIRMED, /* block height */ 0, /* block hash */ {}, /* index */ 0});\n+        int posInBlock = ptx->IsCoinStake() ? -1 : 0;\n+        SyncTransaction(ptx, {CWalletTx::Status::UNCONFIRMED, /* block height */ 0, /* block hash */ {}, /* index */ posInBlock});\n     }\n }\n \n@@ -1356,6 +1433,11 @@ bool CWallet::IsMine(const CTransaction& tx) const\n     return false;\n }\n \n+bool CWallet::IsRelevantToMe_MPOS(const CTransaction& tx) const\n+{\n+    return (GetDebit(tx, ISMINE_ALL) > 0 || GetCredit(tx, ISMINE_ALL) > 0);\n+}\n+\n bool CWallet::IsFromMe(const CTransaction& tx) const\n {\n     return (GetDebit(tx, ISMINE_ALL) > 0);\n@@ -1518,7 +1600,7 @@ bool CWallet::DummySignInput(CTxIn &tx_in, const CTxOut &txout, bool use_max_sig\n         return false;\n     }\n \n-    if (!ProduceSignature(*provider, use_max_sig ? DUMMY_MAXIMUM_SIGNATURE_CREATOR : DUMMY_SIGNATURE_CREATOR, scriptPubKey, sigdata)) {\n+    if (!ProduceSignature(*provider, use_max_sig ? DUMMY_MAXIMUM_SIGNATURE_CREATOR : DUMMY_SIGNATURE_CREATOR, scriptPubKey, sigdata, false)) {\n         return false;\n     }\n     UpdateInput(tx_in, sigdata);\n@@ -1587,7 +1669,7 @@ bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScri\n             CTxDestination dest;\n             ExtractDestination(script, dest);\n             if (IsValidDestination(dest)) {\n-                SetAddressBookWithDB(batch, dest, label, \"receive\");\n+                SetAddressBookWithDB(batch, dest, label, AddressBook::AddressBookPurpose::RECEIVE);\n             }\n         }\n     }\n@@ -1664,8 +1746,9 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n \n         // In either case, we need to get the destination address\n         CTxDestination address;\n+        const bool fColdStake = (filter & ISMINE_COLD);\n \n-        if (!ExtractDestination(txout.scriptPubKey, address) && !txout.scriptPubKey.IsUnspendable())\n+        if (!ExtractDestination(txout.scriptPubKey, address, NULL, fColdStake) && !txout.scriptPubKey.IsUnspendable())\n         {\n             pwallet->WalletLogPrintf(\"CWalletTx::GetAmounts: Unknown transaction type found, txid %s\\n\",\n                                     this->GetHash().ToString());\n@@ -1851,8 +1934,14 @@ void CWallet::ReacceptWalletTransactions()\n \n         int nDepth = wtx.GetDepthInMainChain();\n \n-        if (!wtx.IsCoinBase() && (nDepth == 0 && !wtx.isAbandoned())) {\n-            mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+        if (nDepth == 0 && !wtx.isAbandoned()) {\n+            if (wtx.IsCoinBase() || wtx.IsCoinStake()) {\n+                LogPrint(BCLog::COINSTAKE, \"Abandoning coinbase/coinstake wtx %s\\n\", wtx.GetHash().ToString());\n+                if (!AbandonTransaction(wtxid))\n+                    LogPrint(BCLog::COINSTAKE, \"Failed to abandon tx %s\\n\", wtx.GetHash().ToString());\n+            } else {\n+                mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+            }\n         }\n     }\n \n@@ -1872,7 +1961,7 @@ bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n     if (isAbandoned()) return false;\n     // Don't try to submit coinbase transactions. These would fail anyway but would\n     // cause log spam.\n-    if (IsCoinBase()) return false;\n+    if (IsCoinBase() || IsCoinStake()) return false;\n     // Don't try to submit conflicted or confirmed transactions.\n     if (GetDepthInMainChain() != 0) return false;\n \n@@ -1926,9 +2015,25 @@ CAmount CWalletTx::GetDebit(const isminefilter& filter) const\n     if (filter & ISMINE_WATCH_ONLY) {\n         debit += GetCachableAmount(DEBIT, ISMINE_WATCH_ONLY);\n     }\n+    if (filter & ISMINE_COLD) {\n+        debit += GetCachableAmount(DEBIT, ISMINE_COLD);\n+    }\n+    if (filter & ISMINE_SPENDABLE_DELEGATED) {\n+        debit += GetCachableAmount(DEBIT, ISMINE_SPENDABLE_DELEGATED);\n+    }\n     return debit;\n }\n \n+CAmount CWalletTx::GetColdStakingDebit(const bool fUseCache) const\n+{\n+    return GetCachableAmount(DEBIT, ISMINE_COLD, !fUseCache);\n+}\n+\n+CAmount CWalletTx::GetStakeDelegationDebit(const bool fUseCache) const\n+{\n+    return GetCachableAmount(DEBIT, ISMINE_SPENDABLE_DELEGATED, !fUseCache);\n+}\n+\n CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n {\n     // Must wait until coinbase is safely deep enough in the chain before valuing it\n@@ -1943,18 +2048,67 @@ CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n     if (filter & ISMINE_WATCH_ONLY) {\n         credit += GetCachableAmount(CREDIT, ISMINE_WATCH_ONLY);\n     }\n+    if (filter & ISMINE_COLD) {\n+        credit += GetCachableAmount(CREDIT, ISMINE_COLD);\n+    }\n+    if (filter & ISMINE_SPENDABLE_DELEGATED) {\n+        credit += GetCachableAmount(CREDIT, ISMINE_SPENDABLE_DELEGATED);\n+    }\n     return credit;\n }\n \n-CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n+CAmount CWalletTx::GetImmatureCredit(bool fUseCache, const isminefilter& filter) const\n {\n-    if (IsImmatureCoinBase() && IsInMainChain()) {\n-        return GetCachableAmount(IMMATURE_CREDIT, ISMINE_SPENDABLE, !fUseCache);\n+    if ((IsImmatureCoinBase() || IsImmatureCoinStake()) && IsInMainChain()) {\n+        return GetCachableAmount(IMMATURE_CREDIT, filter, !fUseCache);\n     }\n \n     return 0;\n }\n \n+CAmount CWalletTx::GetStakeCredit(bool fUseCache, const isminefilter& filter) const\n+{\n+    if (pwallet == nullptr)\n+        return 0;\n+\n+    // Avoid caching ismine for NO or ALL cases (could remove this check and simplify in the future).\n+    bool allow_cache = (filter & ISMINE_ALL) && (filter & ISMINE_ALL) != ISMINE_ALL;\n+\n+    // Must wait until coinbase is safely deep enough in the chain before valuing it\n+    if (IsImmature())\n+        return 0;\n+\n+    if (fUseCache && allow_cache && m_amounts[STAKEABLE_CREDIT].m_cached[filter]) {\n+        return m_amounts[STAKEABLE_CREDIT].m_value[filter];\n+    }\n+\n+    const bool includeColdStaking = gArgs.GetBoolArg(\"-coldstaking\", DEFAULT_COLDSTAKING);\n+    bool allow_used_addresses = (filter & ISMINE_USED) || !pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n+    CAmount nCredit = 0;\n+    uint256 hashTx = GetHash();\n+    for (unsigned int i = 0; i < tx->vout.size(); i++)\n+    {\n+        if (!pwallet->IsSpent(hashTx, i) && (allow_used_addresses || !pwallet->IsSpentKey(hashTx, i))) {\n+            const CTxOut &txout = tx->vout[i];\n+            std::vector<valtype> solutions;\n+            auto whichtype = Solver(txout.scriptPubKey, solutions);\n+            bool stakeable = ((TxoutType::PUBKEY ==  whichtype) || (TxoutType::PUBKEYHASH == whichtype) ||\n+                (includeColdStaking && TxoutType::COLDSTAKE == whichtype));\n+            if (stakeable) {\n+                nCredit += pwallet->GetCredit(txout, filter);\n+                if (!MoneyRange(nCredit))\n+                    throw std::runtime_error(std::string(__func__) + \" : value out of range\");\n+            }\n+        }\n+    }\n+\n+    if (allow_cache) {\n+        m_amounts[STAKEABLE_CREDIT].Set(filter, nCredit);\n+    }\n+\n+    return nCredit;\n+}\n+\n CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n     if (pwallet == nullptr)\n@@ -1964,7 +2118,7 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n     bool allow_cache = (filter & ISMINE_ALL) && (filter & ISMINE_ALL) != ISMINE_ALL;\n \n     // Must wait until coinbase is safely deep enough in the chain before valuing it\n-    if (IsImmatureCoinBase())\n+    if (IsImmature())\n         return 0;\n \n     if (fUseCache && allow_cache && m_amounts[AVAILABLE_CREDIT].m_cached[filter]) {\n@@ -1994,13 +2148,23 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n \n CAmount CWalletTx::GetImmatureWatchOnlyCredit(const bool fUseCache) const\n {\n-    if (IsImmatureCoinBase() && IsInMainChain()) {\n+    if ((IsImmatureCoinBase() || IsImmatureCoinStake()) && IsInMainChain()) {\n         return GetCachableAmount(IMMATURE_CREDIT, ISMINE_WATCH_ONLY, !fUseCache);\n     }\n \n     return 0;\n }\n \n+CAmount CWalletTx::GetColdStakingCredit(const bool fUseCache) const\n+{\n+    return GetAvailableCredit(fUseCache, ISMINE_COLD);\n+}\n+\n+CAmount CWalletTx::GetStakeDelegationCredit(const bool fUseCache) const\n+{\n+    return GetAvailableCredit(fUseCache, ISMINE_SPENDABLE_DELEGATED);\n+}\n+\n CAmount CWalletTx::GetChange() const\n {\n     if (fChangeCached)\n@@ -2146,20 +2310,42 @@ CWallet::Balance CWallet::GetBalance(const int min_depth, bool avoid_reuse) cons\n                 ret.m_mine_untrusted_pending += tx_credit_mine;\n                 ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n             }\n-            ret.m_mine_immature += wtx.GetImmatureCredit();\n+            ret.m_mine_immature += wtx.GetImmatureCredit(true, ISMINE_SPENDABLE_ALL);\n             ret.m_watchonly_immature += wtx.GetImmatureWatchOnlyCredit();\n+            ret.m_mine_stake += wtx.GetImmatureCredit(true, ISMINE_SPENDABLE);\n+            ret.m_mine_immature_delegated += wtx.GetImmatureCredit(false, ISMINE_SPENDABLE_DELEGATED);\n+            ret.m_mine_immature_cold_stake += wtx.GetImmatureCredit(false, ISMINE_COLD);\n+\n+            const CAmount stakeCredit{wtx.GetStakeCredit(/* fUseCache */ false, ISMINE_SPENDABLE | ISMINE_COLD | reuse_filter)};\n+            if (is_trusted && tx_depth >= COINBASE_MATURITY) {\n+                ret.m_mine_stakeable += stakeCredit;\n+            } else if (is_trusted) {\n+                ret.m_mine_immature_stakeable += stakeCredit;\n+            }\n+\n+            if (wtx.HasP2CSOutputs() && is_trusted) {\n+                const CAmount coldStakeCredit{wtx.GetColdStakingCredit()};\n+                if (tx_depth >= COINBASE_MATURITY) {\n+                    ret.m_mine_stakeable_delegations += coldStakeCredit;\n+                } else {\n+                    ret.m_mine_immature_stakeable_delegations += coldStakeCredit;\n+                }\n+\n+                ret.m_mine_cold_stake += coldStakeCredit;\n+                ret.m_mine_delegated += wtx.GetStakeDelegationCredit();\n+            }\n         }\n     }\n     return ret;\n }\n \n-CAmount CWallet::GetAvailableBalance(const CCoinControl* coinControl) const\n+CAmount CWallet::GetAvailableBalance(const CCoinControl* coinControl, const bool fIncludeDelegated) const\n {\n     LOCK(cs_wallet);\n \n     CAmount balance = 0;\n     std::vector<COutput> vCoins;\n-    AvailableCoins(vCoins, true, coinControl);\n+    AvailableCoins(vCoins, true, coinControl, fIncludeDelegated, true);\n     for (const COutput& out : vCoins) {\n         if (out.fSpendable) {\n             balance += out.tx->tx->vout[out.i].nValue;\n@@ -2168,7 +2354,7 @@ CAmount CWallet::GetAvailableBalance(const CCoinControl* coinControl) const\n     return balance;\n }\n \n-void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount) const\n+void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const CCoinControl* coinControl, bool fIncludeDelegated, bool fIncludeColdStaking, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount) const\n {\n     AssertLockHeld(cs_wallet);\n \n@@ -2180,6 +2366,10 @@ void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const\n     const int min_depth = {coinControl ? coinControl->m_min_depth : DEFAULT_MIN_DEPTH};\n     const int max_depth = {coinControl ? coinControl->m_max_depth : DEFAULT_MAX_DEPTH};\n \n+    // include delegated coins when coinControl is active\n+    if (!fIncludeDelegated && (coinControl && coinControl->HasSelected()))\n+        fIncludeDelegated = true;\n+\n     std::set<uint256> trusted_parents;\n     for (const auto& entry : mapWallet)\n     {\n@@ -2190,7 +2380,7 @@ void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const\n             continue;\n         }\n \n-        if (wtx.IsImmatureCoinBase())\n+        if (wtx.IsImmature())\n             continue;\n \n         int nDepth = wtx.GetDepthInMainChain();\n@@ -2271,10 +2461,22 @@ void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const\n                 continue;\n             }\n \n+            // --Skip P2CS outputs\n+            // skip cold coins\n+            if (mine == ISMINE_COLD && !fIncludeColdStaking)\n+                continue;\n+\n+            // skip delegated coins\n+            if (mine == ISMINE_SPENDABLE_DELEGATED && !fIncludeDelegated)\n+                continue;\n+\n             std::unique_ptr<SigningProvider> provider = GetSolvingProvider(wtx.tx->vout[i].scriptPubKey);\n \n-            bool solvable = provider ? IsSolvable(*provider, wtx.tx->vout[i].scriptPubKey) : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n+            bool solvable = provider ? IsSolvable(*provider, wtx.tx->vout[i].scriptPubKey, mine == ISMINE_COLD) : false;\n+            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) ||\n+                                (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable)) ||\n+                                ((mine & ((fIncludeColdStaking ? ISMINE_COLD : ISMINE_NO) |\n+                                            (fIncludeDelegated ? ISMINE_SPENDABLE_DELEGATED : ISMINE_NO) )) != ISMINE_NO);\n \n             vCoins.push_back(COutput(&wtx, i, nDepth, spendable, solvable, safeTx, (coinControl && coinControl->fAllowWatchOnly)));\n \n@@ -2295,6 +2497,105 @@ void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const\n     }\n }\n \n+void CWallet::AvailableCoinsForStaking(std::vector<COutput>& vCoins) const\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    const bool includeColdStaking = gArgs.GetBoolArg(\"-coldstaking\", DEFAULT_COLDSTAKING);\n+    vCoins.clear();\n+\n+    for (std::map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        const uint256& wtxid = it->first;\n+        const CWalletTx* pcoin = &(*it).second;\n+        int nDepth = pcoin->GetDepthInMainChain();\n+\n+        if (nDepth < 1)\n+            continue;\n+\n+        if (nDepth < COINBASE_MATURITY)\n+            continue;\n+\n+        if (pcoin->GetBlocksToMaturity() > 0)\n+            continue;\n+\n+        for (unsigned int i = 0; i < pcoin->tx->vout.size(); i++)\n+        {\n+            if (!IsSpent(wtxid, i))\n+            {\n+                isminetype mine = IsMine(pcoin->tx->vout[i]);\n+                if ((mine != ISMINE_NO) && (mine != ISMINE_SPENDABLE_DELEGATED) && !IsLockedCoin((*it).first, i) && (pcoin->tx->vout[i].nValue > 0))\n+                {\n+                    if (mine == ISMINE_COLD && !includeColdStaking)\n+                        continue;\n+                    std::vector<valtype> solutions;\n+                    auto whichtype = Solver(pcoin->tx->vout[i].scriptPubKey, solutions);\n+                    if ((TxoutType::PUBKEY ==  whichtype) || (TxoutType::PUBKEYHASH == whichtype) ||\n+                            (includeColdStaking && TxoutType::COLDSTAKE == whichtype))\n+                    {\n+                        std::unique_ptr<SigningProvider> provider = GetSolvingProvider(pcoin->tx->vout[i].scriptPubKey);\n+                        bool solvable = IsSolvable(*provider, pcoin->tx->vout[i].scriptPubKey, mine == ISMINE_COLD);\n+                        bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) ||\n+                            (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && solvable) ||\n+                            ((mine & (includeColdStaking ? ISMINE_COLD : ISMINE_NO)) != ISMINE_NO);\n+                        vCoins.push_back(COutput(pcoin, i, nDepth, spendable, solvable, pcoin->IsTrusted()));\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+void CWallet::AvailableP2CSCoins(std::vector<COutput>& vCoins) const \n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    vCoins.clear();\n+    for (std::map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        const uint256& wtxid = it->first;\n+        const CWalletTx* pcoin = &it->second;\n+        int nDepth = pcoin->GetDepthInMainChain();\n+\n+        if (nDepth < 1)\n+            continue;\n+\n+        if (pcoin->GetBlocksToMaturity() > 0)\n+            continue;\n+\n+        if (pcoin->HasP2CSOutputs()) {\n+            for (int i = 0; i < (int) pcoin->tx->vout.size(); i++) {\n+                const auto &utxo = pcoin->tx->vout[i];\n+\n+                if (IsSpent(wtxid, i))\n+                    continue;\n+\n+                if (utxo.scriptPubKey.IsPayToColdStaking()) {\n+                    isminetype mine = IsMine(utxo);\n+                    bool isMineSpendable = mine & ISMINE_SPENDABLE_DELEGATED;\n+                    if (mine & ISMINE_COLD || isMineSpendable)\n+                        // Depth and solvability members are not used, no need waste resources and set them for now.\n+                        vCoins.emplace_back(pcoin, i, 0, isMineSpendable, true, pcoin->IsTrusted());\n+                }\n+            }\n+        }\n+    }\n+\n+}\n+\n+void CWallet::SelectCoinsForStaking(std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet) const\n+{\n+    std::vector<COutput> vCoins;\n+    AvailableCoinsForStaking(vCoins);\n+\n+    setCoinsRet.clear();\n+\n+    for(COutput output : vCoins)\n+    {\n+        setCoinsRet.insert(std::make_pair(output.tx, output.i));\n+    }\n+}\n+\n std::map<CTxDestination, std::vector<COutput>> CWallet::ListCoins() const\n {\n     AssertLockHeld(cs_wallet);\n@@ -2511,7 +2812,7 @@ bool CWallet::SignTransaction(CMutableTransaction& tx) const\n             return false;\n         }\n         const CWalletTx& wtx = mi->second;\n-        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase());\n+        coins[input.prevout] = Coin(wtx.tx->vout[input.prevout.n], wtx.m_confirm.block_height, wtx.IsCoinBase(), wtx.IsCoinStake());\n     }\n     std::map<int, std::string> input_errors;\n     return SignTransaction(tx, coins, SIGHASH_ALL, input_errors);\n@@ -2742,7 +3043,8 @@ bool CWallet::CreateTransactionInternal(\n         bilingual_str& error,\n         const CCoinControl& coin_control,\n         FeeCalculation& fee_calc_out,\n-        bool sign)\n+        bool sign,\n+        bool fIncludeDelegated)\n {\n     CAmount nValue = 0;\n     const OutputType change_type = TransactionChangeType(coin_control.m_change_type ? *coin_control.m_change_type : m_default_change_type, vecSend);\n@@ -2777,7 +3079,7 @@ bool CWallet::CreateTransactionInternal(\n         txNew.nLockTime = GetLocktimeForNewTransaction(chain(), GetLastBlockHash(), GetLastBlockHeight());\n         {\n             std::vector<COutput> vAvailableCoins;\n-            AvailableCoins(vAvailableCoins, true, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n+            AvailableCoins(vAvailableCoins, true, &coin_control, fIncludeDelegated, false, 1, MAX_MONEY, MAX_MONEY, 0);\n             CoinSelectionParams coin_selection_params; // Parameters for coin selection, init with dummy\n \n             // Create change script that will be used if we need change\n@@ -3098,6 +3400,9 @@ bool CWallet::CreateTransactionInternal(\n     return true;\n }\n \n+/**\n+ * Call after CreateTransaction unless you want to abort\n+ */\n bool CWallet::CreateTransaction(\n         const std::vector<CRecipient>& vecSend,\n         CTransactionRef& tx,\n@@ -3106,19 +3411,20 @@ bool CWallet::CreateTransaction(\n         bilingual_str& error,\n         const CCoinControl& coin_control,\n         FeeCalculation& fee_calc_out,\n-        bool sign)\n+        bool sign,\n+        bool fIncludeDelegated)\n {\n     int nChangePosIn = nChangePosInOut;\n     CTransactionRef tx2 = tx;\n-    bool res = CreateTransactionInternal(vecSend, tx, nFeeRet, nChangePosInOut, error, coin_control, fee_calc_out, sign);\n+    bool res = CreateTransactionInternal(vecSend, tx, nFeeRet, nChangePosInOut, error, coin_control, fee_calc_out, sign, fIncludeDelegated);\n     // try with avoidpartialspends unless it's enabled already\n     if (res && nFeeRet > 0 /* 0 means non-functional fee rate estimation */ && m_max_aps_fee > -1 && !coin_control.m_avoid_partial_spends) {\n         CCoinControl tmp_cc = coin_control;\n         tmp_cc.m_avoid_partial_spends = true;\n         CAmount nFeeRet2;\n         int nChangePosInOut2 = nChangePosIn;\n         bilingual_str error2; // fired and forgotten; if an error occurs, we discard the results\n-        if (CreateTransactionInternal(vecSend, tx2, nFeeRet2, nChangePosInOut2, error2, tmp_cc, fee_calc_out, sign)) {\n+        if (CreateTransactionInternal(vecSend, tx2, nFeeRet2, nChangePosInOut2, error2, tmp_cc, fee_calc_out, sign, fIncludeDelegated)) {\n             // if fee of this alternative one is within the range of the max fee, we use this one\n             const bool use_aps = nFeeRet2 <= nFeeRet + m_max_aps_fee;\n             WalletLogPrintf(\"Fee non-grouped = %lld, grouped = %lld, using %s\\n\", nFeeRet, nFeeRet2, use_aps ? \"grouped\" : \"non-grouped\");\n@@ -3132,6 +3438,281 @@ bool CWallet::CreateTransaction(\n     return res;\n }\n \n+uint64_t CWallet::GetStakeWeight() const\n+{\n+    // Choose coins to use\n+    std::set<std::pair<const CWalletTx*,unsigned int> > setCoins;\n+    SelectCoinsForStaking(setCoins);\n+\n+    if (setCoins.empty())\n+        return 0;\n+\n+    uint64_t nWeight = 0;\n+\n+    for(std::pair<const CWalletTx*,unsigned int> pcoin : setCoins)\n+    {\n+        if (pcoin.first->GetDepthInMainChain() >= COINBASE_MATURITY)\n+            nWeight += pcoin.first->tx->vout[pcoin.second].nValue;\n+    }\n+\n+    return nWeight;\n+}\n+\n+bool CWallet::CreateCoinStake(const CWallet& wallet, unsigned int nBits, const CAmount& nTotalFees, uint32_t nTimeBlock, CMutableTransaction& tx, CKey& key, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoins)\n+{\n+    CBlockIndex* pindexPrev = ::ChainActive().Tip();\n+    arith_uint256 bnTargetPerCoinDay;\n+    bnTargetPerCoinDay.SetCompact(nBits);\n+\n+    struct CMutableTransaction txNew(tx);\n+    txNew.vin.clear();\n+    txNew.vout.clear();\n+\n+    // Mark coin stake transaction\n+    CScript scriptEmpty;\n+    scriptEmpty.clear();\n+    txNew.vout.push_back(CTxOut(0, scriptEmpty));\n+\n+    // Choose coins to use\n+    CAmount nBalance = GetBalance().m_mine_stakeable;\n+\n+    std::vector<const CWalletTx*> vwtxPrev;\n+\n+    if (setCoins.empty())\n+        return false;\n+\n+    if(stakeCache.size() > setCoins.size() + 100){\n+        //Determining if the cache is still valid is harder than just clearing it when it gets too big, so instead just clear it\n+        //when it has more than 100 entries more than the actual setCoins.\n+        stakeCache.clear();\n+    }\n+    if(gArgs.GetBoolArg(\"-stakecache\", DEFAULT_STAKE_CACHE)) {\n+\n+        for(const std::pair<const CWalletTx*,unsigned int> &pcoin : setCoins)\n+        {\n+            boost::this_thread::interruption_point();\n+            COutPoint prevoutStake = COutPoint(pcoin.first->GetHash(), pcoin.second);\n+            CacheKernel(stakeCache, prevoutStake, pindexPrev, ::ChainstateActive().CoinsTip()); //this will do a 2 disk loads per op\n+        }\n+    }\n+    int64_t nCredit = 0;\n+    bool isColdStake = false;\n+    CScript scriptPubKeyKernel;\n+    CScript coldStakerScriptPubKeyOut;\n+    CScript aggregateScriptPubKeyHashKernel;\n+\n+    LegacyScriptPubKeyMan* spk_man = GetLegacyScriptPubKeyMan();\n+    if (!spk_man)\n+    {\n+        LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : failed to get signing provider\\n\");\n+        return false;\n+    }\n+\n+    for(const std::pair<const CWalletTx*,unsigned int> &pcoin : setCoins)\n+    {\n+        bool fKernelFound = false;\n+        boost::this_thread::interruption_point();\n+        // Search backward in time from the given txNew timestamp\n+        // Search nSearchInterval seconds back up to nMaxStakeSearchInterval\n+        COutPoint prevoutStake = COutPoint(pcoin.first->GetHash(), pcoin.second);\n+        if (CheckKernel(pindexPrev, nBits, nTimeBlock, prevoutStake, ::ChainstateActive().CoinsTip(), stakeCache))\n+        {\n+            // Found a kernel\n+            LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : kernel found\\n\");\n+            std::vector<valtype> vSolutions;\n+            CScript scriptPubKeyOut;\n+            scriptPubKeyKernel = pcoin.first->tx->vout[pcoin.second].scriptPubKey;\n+            TxoutType whichType = Solver(scriptPubKeyKernel, vSolutions);\n+            if (whichType == TxoutType::NONSTANDARD)\n+            {\n+                LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : failed to parse kernel\\n\");\n+                break;\n+            }\n+            LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : parsed kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+            if (whichType != TxoutType::PUBKEY && whichType != TxoutType::PUBKEYHASH && whichType != TxoutType::COLDSTAKE)\n+            {\n+                LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : no support for kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+                break;  // only support pay to public key and pay to address\n+            }\n+            if (whichType == TxoutType::PUBKEYHASH) // pay to address type\n+            {\n+                // convert to pay to public key type\n+                uint160 hash160(vSolutions[0]);\n+                CKeyID pubKeyHash(hash160);\n+                if (!spk_man->GetKey(pubKeyHash, key))\n+                {\n+                    LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : failed to get key for kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+                    break;  // unable to find corresponding public key\n+                }\n+                scriptPubKeyOut << key.GetPubKey().getvch() << OP_CHECKSIG;\n+                aggregateScriptPubKeyHashKernel = scriptPubKeyKernel;\n+            }\n+            else if (whichType == TxoutType::PUBKEY)\n+            {\n+                valtype& vchPubKey = vSolutions[0];\n+                CPubKey pubKey(vchPubKey);\n+                uint160 hash160(Hash160(vchPubKey));\n+                CKeyID pubKeyHash(hash160);\n+                if (!spk_man->GetKey(pubKeyHash, key))\n+                {\n+                    LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : failed to get key for kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+                    break;  // unable to find corresponding public key\n+                }\n+\n+                if (key.GetPubKey() != pubKey)\n+                {\n+                    LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : invalid key for kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+                    break; // keys mismatch\n+                }\n+\n+                scriptPubKeyOut = scriptPubKeyKernel;\n+                aggregateScriptPubKeyHashKernel = CScript() << OP_DUP << OP_HASH160 << ToByteVector(hash160) << OP_EQUALVERIFY << OP_CHECKSIG;\n+            }\n+            else if (whichType == TxoutType::COLDSTAKE)\n+            {\n+                // get public key\n+                uint160 hash160(vSolutions[0]);\n+                CKeyID pubKeyHash(hash160);\n+                if (!spk_man->GetKey(pubKeyHash, key))\n+                {\n+                    LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : failed to get key for kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+                    break;  // unable to find corresponding public key\n+                }\n+                scriptPubKeyOut = scriptPubKeyKernel;\n+                aggregateScriptPubKeyHashKernel = scriptPubKeyKernel;\n+                isColdStake = true;\n+                coldStakerScriptPubKeyOut << key.GetPubKey().getvch() << OP_CHECKSIG;\n+            }\n+\n+            txNew.vin.push_back(CTxIn(pcoin.first->GetHash(), pcoin.second));\n+            nCredit += pcoin.first->tx->vout[pcoin.second].nValue;\n+            vwtxPrev.push_back(pcoin.first);\n+            txNew.vout.push_back(CTxOut(0, scriptPubKeyOut));\n+\n+            LogPrint(BCLog::COINSTAKE, \"CreateCoinStake : added kernel type=%s\\n\", GetTxnOutputType(whichType).c_str());\n+            fKernelFound = true;\n+            break;\n+        }\n+\n+        if (fKernelFound)\n+            break; // if kernel is found stop searching\n+    }\n+\n+    if (nCredit == 0 || nCredit > nBalance)\n+        return false;\n+\n+    for(const std::pair<const CWalletTx*,unsigned int> &pcoin : setCoins)\n+    {\n+        // Attempt to add more inputs\n+        // Only add coins of the same key/address as kernel\n+        if (txNew.vout.size() == 2 && ((pcoin.first->tx->vout[pcoin.second].scriptPubKey == scriptPubKeyKernel || pcoin.first->tx->vout[pcoin.second].scriptPubKey == aggregateScriptPubKeyHashKernel))\n+                && pcoin.first->GetHash() != txNew.vin[0].prevout.hash)\n+        {\n+            // Stop adding more inputs if already too many inputs\n+            if (txNew.vin.size() >= GetStakeMaxCombineInputs())\n+                break;\n+            // Stop adding inputs if reached reserve limit\n+            if (nCredit + pcoin.first->tx->vout[pcoin.second].nValue > nBalance)\n+                break;\n+            // Do not add additional significant input\n+            if (pcoin.first->tx->vout[pcoin.second].nValue >= GetStakeCombineThreshold())\n+                continue;\n+\n+            txNew.vin.push_back(CTxIn(pcoin.first->GetHash(), pcoin.second));\n+            nCredit += pcoin.first->tx->vout[pcoin.second].nValue;\n+            vwtxPrev.push_back(pcoin.first);\n+        }\n+    }\n+\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n+    int64_t nRewardPiece = 0;\n+    int64_t nColdStakerRewardPiece = 0;\n+    // How much of the reward will the owner of the coins will get\n+    int cold_staker_fee_factor = std::max(std::min(COLD_STAKER_FEE, 100), 0);\n+    int owner_factor = 100 - cold_staker_fee_factor;\n+\n+    // Calculate reward\n+    {\n+        int64_t nReward = nTotalFees + GetBlockSubsidy(pindexPrev->nHeight + 1, consensusParams);\n+        if (nReward < 0)\n+            return false;\n+\n+        if (pindexPrev->nHeight < consensusParams.nFirstMPoSBlock || pindexPrev->nHeight > consensusParams.nLastMPoSBlock)\n+        {\n+            if (isColdStake)\n+            {\n+                nCredit += (nReward * owner_factor) / 100;\n+                nColdStakerRewardPiece = (nReward * cold_staker_fee_factor) / 100;\n+            }\n+            else\n+            {\n+                // Keep whole reward\n+                nCredit += nReward;\n+            }\n+        }\n+        else\n+        {\n+            // Split the reward when mpos is used\n+            nRewardPiece = nReward / consensusParams.nMPoSRewardRecipients;\n+            nCredit += nRewardPiece + nReward % consensusParams.nMPoSRewardRecipients;\n+        }\n+    }\n+\n+    if (isColdStake)\n+    {\n+        // Do not split the stake when ColdStaking\n+        txNew.vout[1].nValue = nCredit;\n+    }\n+    else\n+    {\n+        if (nCredit >= GetStakeSplitThreshold())\n+        {\n+            for(unsigned int i = 0; i < GetStakeSplitOutputs() - 1; i++)\n+                txNew.vout.push_back(CTxOut(0, txNew.vout[1].scriptPubKey)); //split stake\n+        }\n+\n+        // Set output amount\n+        if (txNew.vout.size() == GetStakeSplitOutputs() + 1)\n+        {\n+            CAmount nValue = (nCredit / GetStakeSplitOutputs() / CENT) * CENT;\n+            for(unsigned int i = 1; i < GetStakeSplitOutputs(); i++)\n+                txNew.vout[i].nValue = nValue;\n+            txNew.vout[GetStakeSplitOutputs()].nValue = nCredit - nValue * (GetStakeSplitOutputs() - 1);\n+        }\n+        else\n+            txNew.vout[1].nValue = nCredit;\n+    }\n+\n+    if (pindexPrev->nHeight >= consensusParams.nFirstMPoSBlock && pindexPrev->nHeight <= consensusParams.nLastMPoSBlock)\n+    {\n+        if(!CreateMPoSOutputs(txNew, nRewardPiece, pindexPrev->nHeight, consensusParams))\n+            return error(\"CreateCoinStake : failed to create MPoS reward outputs\");\n+    }\n+    else if (isColdStake)\n+    {\n+        // Append the staker reward output\n+        txNew.vout.push_back(CTxOut(nColdStakerRewardPiece, coldStakerScriptPubKeyOut));\n+    }\n+\n+    // Append the Refunds To Sender to the transaction outputs\n+    for(unsigned int i = 2; i < tx.vout.size(); i++)\n+    {\n+        txNew.vout.push_back(tx.vout[i]);\n+    }\n+\n+    // Sign the input coins\n+    int nIn = 0;\n+    for(const CWalletTx* pcoin : vwtxPrev)\n+    {\n+        if (!SignSignature(*spk_man, *pcoin->tx, txNew, nIn++, SIGHASH_ALL, true))\n+            return error(\"CreateCoinStake : failed to sign coinstake\");\n+    }\n+\n+    // Successfully generated coinstake\n+    tx = txNew;\n+    return true;\n+}\n+\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n@@ -3238,7 +3819,7 @@ bool CWallet::SetAddressBookWithDB(WalletBatch& batch, const CTxDestination& add\n     bool is_mine;\n     {\n         LOCK(cs_wallet);\n-        std::map<CTxDestination, CAddressBookData>::iterator mi = m_address_book.find(address);\n+        std::map<CTxDestination, AddressBook::CAddressBookData>::iterator mi = m_address_book.find(address);\n         fUpdated = (mi != m_address_book.end() && !mi->second.IsChange());\n         m_address_book[address].SetLabel(strName);\n         if (!strPurpose.empty()) /* update purpose only if requested */\n@@ -3320,7 +3901,7 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n     return res;\n }\n \n-bool CWallet::GetNewDestination(const OutputType type, const std::string label, CTxDestination& dest, std::string& error)\n+bool CWallet::GetNewDestination(const OutputType type, const std::string label,  CTxDestination& dest, std::string& error)\n {\n     LOCK(cs_wallet);\n     error.clear();\n@@ -3333,7 +3914,7 @@ bool CWallet::GetNewDestination(const OutputType type, const std::string label,\n         error = strprintf(\"Error: No %s addresses available.\", FormatOutputType(type));\n     }\n     if (result) {\n-        SetAddressBook(dest, label, \"receive\");\n+        SetAddressBook(dest, label, AddressBook::AddressBookPurpose::RECEIVE);\n     }\n \n     return result;\n@@ -3392,7 +3973,7 @@ std::map<CTxDestination, CAmount> CWallet::GetAddressBalances() const\n             if (!IsTrusted(wtx, trusted_parents))\n                 continue;\n \n-            if (wtx.IsImmatureCoinBase())\n+            if (wtx.IsImmature())\n                 continue;\n \n             int nDepth = wtx.GetDepthInMainChain();\n@@ -3404,7 +3985,8 @@ std::map<CTxDestination, CAmount> CWallet::GetAddressBalances() const\n                 CTxDestination addr;\n                 if (!IsMine(wtx.tx->vout[i]))\n                     continue;\n-                if(!ExtractDestination(wtx.tx->vout[i].scriptPubKey, addr))\n+                if(!ExtractDestination(wtx.tx->vout[i].scriptPubKey, addr) &&\n+                    !ExtractDestination(wtx.tx->vout[i].scriptPubKey, addr, NULL, true))\n                     continue;\n \n                 CAmount n = IsSpent(walletEntry.first, i) ? 0 : wtx.tx->vout[i].nValue;\n@@ -3513,7 +4095,7 @@ std::set<CTxDestination> CWallet::GetLabelAddresses(const std::string& label) co\n {\n     LOCK(cs_wallet);\n     std::set<CTxDestination> result;\n-    for (const std::pair<const CTxDestination, CAddressBookData>& item : m_address_book)\n+    for (const std::pair<const CTxDestination, AddressBook::CAddressBookData>& item : m_address_book)\n     {\n         if (item.second.IsChange()) continue;\n         const CTxDestination& address = item.first;\n@@ -3524,6 +4106,40 @@ std::set<CTxDestination> CWallet::GetLabelAddresses(const std::string& label) co\n     return result;\n }\n \n+// disable transaction (only for coinstake)\n+void CWallet::DisableTransaction(const CTransaction &tx)\n+{\n+    if (!tx.IsCoinStake() || !IsRelevantToMe_MPOS(tx))\n+        return; // only disconnecting coinstake requires marking input unspent\n+\n+    uint256 hash = tx.GetHash();\n+    bool is_from_me = IsFromMe(tx);\n+\n+    LogPrint(BCLog::COINSTAKE, \"Abandoning coinstake tx %s\\n\", hash.ToString());\n+\n+    if (AbandonTransaction(hash))\n+    {\n+        LOCK(cs_wallet);\n+        RemoveFromSpends(hash);\n+        // If the stake was done by me, update the transaction vins from the wallet also\n+        if (is_from_me)\n+        {\n+            LogPrint(BCLog::COINSTAKE, \"Reverting tx vins for %s\\n\", hash.ToString());\n+            for (const CTxIn& txin : tx.vin)\n+            {\n+                CWalletTx &coin = mapWallet.at(txin.prevout.hash);\n+                coin.MarkDirty();\n+                NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n+            }\n+        }\n+        CWalletTx& wtx = mapWallet.at(hash);\n+        wtx.MarkDirty();\n+        NotifyTransactionChanged(this, hash, CT_DELETED);\n+    } else {\n+        LogPrint(BCLog::COINSTAKE, \"Failed to abandon coinstake tx %s\\n\", hash.ToString());\n+    }\n+}\n+\n bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool internal)\n {\n     m_spk_man = pwallet->GetScriptPubKeyMan(type, internal);\n@@ -3741,10 +4357,10 @@ void CWallet::LoadDestData(const CTxDestination &dest, const std::string &key, c\n \n bool CWallet::GetDestData(const CTxDestination &dest, const std::string &key, std::string *value) const\n {\n-    std::map<CTxDestination, CAddressBookData>::const_iterator i = m_address_book.find(dest);\n+    std::map<CTxDestination, AddressBook::CAddressBookData>::const_iterator i = m_address_book.find(dest);\n     if(i != m_address_book.end())\n     {\n-        CAddressBookData::StringMap::const_iterator j = i->second.destdata.find(key);\n+        AddressBook::CAddressBookData::StringMap::const_iterator j = i->second.destdata.find(key);\n         if(j != i->second.destdata.end())\n         {\n             if(value)\n@@ -4092,7 +4708,7 @@ std::shared_ptr<CWallet> CWallet::Create(interfaces::Chain& chain, const std::st\n     return walletInstance;\n }\n \n-const CAddressBookData* CWallet::FindAddressBookEntry(const CTxDestination& dest, bool allow_change) const\n+const AddressBook::CAddressBookData* CWallet::FindAddressBookEntry(const CTxDestination& dest, bool allow_change) const\n {\n     const auto& address_book_it = m_address_book.find(dest);\n     if (address_book_it == m_address_book.end()) return nullptr;\n@@ -4146,6 +4762,11 @@ void CWallet::postInitProcess()\n \n     // Update wallet transactions with current mempool transactions.\n     chain().requestMempoolTransactions(*this);\n+\n+    // Start mine proof-of-stake blocks in the background\n+    if (gArgs.GetBoolArg(\"-staking\", DEFAULT_STAKE)) {\n+        StartStake();\n+    }\n }\n \n bool CWallet::BackupWallet(const std::string& strDest) const\n@@ -4179,19 +4800,36 @@ int CWalletTx::GetDepthInMainChain() const\n \n int CWalletTx::GetBlocksToMaturity() const\n {\n-    if (!IsCoinBase())\n+    if (!(IsCoinBase() || IsCoinStake()))\n         return 0;\n     int chain_depth = GetDepthInMainChain();\n-    assert(chain_depth >= 0); // coinbase tx should not be conflicted\n+    //BTCTODO Some wallets are still not abandoning coinstakes correctly\n+    //assert(chain_depth >= 0); // coinbase tx should not be conflicted\n     return std::max(0, (COINBASE_MATURITY+1) - chain_depth);\n }\n \n-bool CWalletTx::IsImmatureCoinBase() const\n+bool CWalletTx::IsImmature() const\n {\n     // note GetBlocksToMaturity is 0 for non-coinbase tx\n     return GetBlocksToMaturity() > 0;\n }\n \n+bool CWalletTx::IsImmatureCoinBase() const\n+{\n+    // note GetBlocksToMaturity is 0 for non-coinbase tx\n+    return IsCoinBase() && IsImmature();\n+}\n+\n+bool CWalletTx::IsImmatureCoinStake() const\n+{\n+    return IsCoinStake() && IsImmature();\n+}\n+\n+bool CWalletTx::HasP2CSInputs() const\n+{\n+    return GetStakeDelegationDebit(true) > 0 || GetColdStakingDebit(true) > 0;\n+}\n+\n std::vector<OutputGroup> CWallet::GroupOutputs(const std::vector<COutput>& outputs, bool single_coin, const size_t max_ancestors) const {\n     std::vector<OutputGroup> groups;\n     std::map<CTxDestination, OutputGroup> gmap;\n@@ -4554,7 +5192,7 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n         CTxDestination dest;\n         if (!internal && ExtractDestination(script_pub_keys.at(0), dest)) {\n-            SetAddressBook(dest, label, \"receive\");\n+            SetAddressBook(dest, label, AddressBook::AddressBookPurpose::RECEIVE);\n         }\n     }\n \n@@ -4567,3 +5205,25 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n \n     return ret;\n }\n+\n+void CWallet::StakeBTCs(bool fStake, CConnman* connman, ChainstateManager* chainman, CTxMemPool* mempool)\n+{\n+    ::StakeBTCs(fStake, this, connman, chainman, mempool, stakeThread);\n+}\n+\n+void CWallet::StartStake(CConnman* connman, ChainstateManager* chainman, CTxMemPool* mempool)\n+{\n+    m_enabled_staking = true;\n+    StakeBTCs(true, connman, chainman, mempool);\n+}\n+\n+void CWallet::StopStake()\n+{\n+    m_enabled_staking = false;\n+    if(stakeThread)\n+    {\n+        LOCK(cs_wallet);\n+        StakeBTCs(false, 0, 0, 0);\n+    }\n+    stakeThread = 0;\n+}"
      },
      {
        "sha": "da6b6a979bbde0dcf51112539ac61ccab7f5be12",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 79,
        "deletions": 32,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d37d06b507803edc82fc79a15f512fc5fc21718d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d37d06b507803edc82fc79a15f512fc5fc21718d",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_WALLET_WALLET_H\n #define BITCOIN_WALLET_WALLET_H\n \n+#include <addressbook.h>\n #include <amount.h>\n #include <interfaces/chain.h>\n #include <interfaces/handler.h>\n@@ -24,6 +25,7 @@\n #include <wallet/scriptpubkeyman.h>\n #include <wallet/walletdb.h>\n #include <wallet/walletutil.h>\n+#include <pos.h>\n \n #include <algorithm>\n #include <atomic>\n@@ -62,7 +64,7 @@ std::unique_ptr<WalletDatabase> MakeWalletDatabase(const std::string& name, cons\n //! -paytxfee default\n constexpr CAmount DEFAULT_PAY_TX_FEE = 0;\n //! -fallbackfee default\n-static const CAmount DEFAULT_FALLBACK_FEE = 0;\n+static const CAmount DEFAULT_FALLBACK_FEE = 10000;\n //! -discardfee default\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n@@ -106,9 +108,10 @@ class CWalletTx;\n struct FeeCalculation;\n enum class FeeEstimateMode;\n class ReserveDestination;\n+namespace boost { class thread_group; }\n \n //! Default for -addresstype\n-constexpr OutputType DEFAULT_ADDRESS_TYPE{OutputType::BECH32};\n+constexpr OutputType DEFAULT_ADDRESS_TYPE{OutputType::LEGACY};\n \n static constexpr uint64_t KNOWN_WALLET_FLAGS =\n         WALLET_FLAG_AVOID_REUSE\n@@ -183,28 +186,6 @@ class ReserveDestination\n     void KeepDestination();\n };\n \n-/** Address book data */\n-class CAddressBookData\n-{\n-private:\n-    bool m_change{true};\n-    std::string m_label;\n-public:\n-    std::string purpose;\n-\n-    CAddressBookData() : purpose(\"unknown\") {}\n-\n-    typedef std::map<std::string, std::string> StringMap;\n-    StringMap destdata;\n-\n-    bool IsChange() const { return m_change; }\n-    const std::string& GetLabel() const { return m_label; }\n-    void SetLabel(const std::string& label) {\n-        m_change = false;\n-        m_label = label;\n-    }\n-};\n-\n struct CRecipient\n {\n     CScript scriptPubKey;\n@@ -327,7 +308,7 @@ class CWalletTx\n     std::multimap<int64_t, CWalletTx*>::const_iterator m_it_wtxOrdered;\n \n     // memory only\n-    enum AmountType { DEBIT, CREDIT, IMMATURE_CREDIT, AVAILABLE_CREDIT, AMOUNTTYPE_ENUM_ELEMENTS };\n+    enum AmountType { DEBIT, CREDIT, IMMATURE_CREDIT, AVAILABLE_CREDIT, STAKEABLE_CREDIT, AMOUNTTYPE_ENUM_ELEMENTS };\n     CAmount GetCachableAmount(AmountType type, const isminefilter& filter, bool recalculate = false) const;\n     mutable CachableAmount m_amounts[AMOUNTTYPE_ENUM_ELEMENTS];\n     /**\n@@ -462,14 +443,16 @@ class CWalletTx\n         m_amounts[CREDIT].Reset();\n         m_amounts[IMMATURE_CREDIT].Reset();\n         m_amounts[AVAILABLE_CREDIT].Reset();\n+        m_amounts[STAKEABLE_CREDIT].Reset();\n         fChangeCached = false;\n         m_is_cache_empty = true;\n     }\n \n     //! filter decides which addresses will count towards the debit\n     CAmount GetDebit(const isminefilter& filter) const;\n     CAmount GetCredit(const isminefilter& filter) const;\n-    CAmount GetImmatureCredit(bool fUseCache = true) const;\n+    CAmount GetImmatureCredit(bool fUseCache = true, const isminefilter& filter = ISMINE_SPENDABLE) const;\n+    CAmount GetStakeCredit(bool fUseCache = true, const isminefilter& filter = ISMINE_SPENDABLE) const NO_THREAD_SAFETY_ANALYSIS;\n     // TODO: Remove \"NO_THREAD_SAFETY_ANALYSIS\" and replace it with the correct\n     // annotation \"EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\". The\n     // annotation \"NO_THREAD_SAFETY_ANALYSIS\" was temporarily added to avoid\n@@ -478,6 +461,12 @@ class CWalletTx\n     CAmount GetImmatureWatchOnlyCredit(const bool fUseCache = true) const;\n     CAmount GetChange() const;\n \n+    // Cold staking contracts credit/debit\n+    CAmount GetColdStakingCredit(const bool fUseCache = true) const;\n+    CAmount GetColdStakingDebit(const bool fUseCache = true) const;\n+    CAmount GetStakeDelegationCredit(const bool fUseCache = true) const;\n+    CAmount GetStakeDelegationDebit(const bool fUseCache = true) const;\n+\n     // Get the marginal bytes if spending the specified output from this transaction\n     int GetSpendSize(unsigned int out, bool use_max_sig = false) const\n     {\n@@ -548,7 +537,12 @@ class CWalletTx\n     void setConfirmed() { m_confirm.status = CWalletTx::CONFIRMED; }\n     const uint256& GetHash() const { return tx->GetHash(); }\n     bool IsCoinBase() const { return tx->IsCoinBase(); }\n+    bool IsCoinStake() const { return tx->IsCoinStake(); }\n+    bool IsImmature() const;\n     bool IsImmatureCoinBase() const;\n+    bool IsImmatureCoinStake() const;\n+    bool HasP2CSInputs() const;\n+    bool HasP2CSOutputs() const { return tx->HasP2CSOutputs(); }\n \n     // Disable copying of CWalletTx objects to prevent bugs where instances get\n     // copied in and out of the mapWallet map, and fields are updated in the\n@@ -641,6 +635,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     // Local time that the tip block was received. Used to schedule wallet rebroadcasts.\n     std::atomic<int64_t> m_best_block_time {0};\n \n+    std::map<COutPoint, CStakeCache> stakeCache;\n+\n     /**\n      * Used to keep track of spent outpoints, and\n      * detect and report conflicts (double-spends or\n@@ -650,6 +646,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     TxSpends mapTxSpends GUARDED_BY(cs_wallet);\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void AddToSpends(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RemoveFromSpends(const COutPoint& outpoint, const uint256& wtxid); EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RemoveFromSpends(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     /**\n      * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\n@@ -720,7 +718,13 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     // ScriptPubKeyMan::GetID. In many cases it will be the hash of an internal structure\n     std::map<uint256, std::unique_ptr<ScriptPubKeyMan>> m_spk_managers;\n \n-    bool CreateTransactionInternal(const std::vector<CRecipient>& vecSend, CTransactionRef& tx, CAmount& nFeeRet, int& nChangePosInOut, bilingual_str& error, const CCoinControl& coin_control, FeeCalculation& fee_calc_out, bool sign);\n+    /**\n+     * Wallet staking coins.\n+     */\n+    boost::thread_group* stakeThread = nullptr;\n+    void StakeBTCs(bool fStake, CConnman* connman, ChainstateManager* chainman, CTxMemPool* mempool);\n+    \n+    bool CreateTransactionInternal(const std::vector<CRecipient>& vecSend, CTransactionRef& tx, CAmount& nFeeRet, int& nChangePosInOut, bilingual_str& error, const CCoinControl& coin_control, FeeCalculation& fee_calc_out, bool sign, bool fIncludeDelegated);\n \n public:\n     /*\n@@ -764,6 +768,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     ~CWallet()\n     {\n+        // Stop stake\n+        StopStake();\n+\n         // Should not have slots connected at this point.\n         assert(NotifyUnload.empty());\n     }\n@@ -783,8 +790,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     int64_t nOrderPosNext GUARDED_BY(cs_wallet) = 0;\n     uint64_t nAccountingEntryNumber = 0;\n \n-    std::map<CTxDestination, CAddressBookData> m_address_book GUARDED_BY(cs_wallet);\n-    const CAddressBookData* FindAddressBookEntry(const CTxDestination&, bool allow_change = false) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::map<CTxDestination, AddressBook::CAddressBookData> m_address_book GUARDED_BY(cs_wallet);\n+    const AddressBook::CAddressBookData* FindAddressBookEntry(const CTxDestination&, bool allow_change = false) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     std::set<COutPoint> setLockedCoins GUARDED_BY(cs_wallet);\n \n@@ -800,10 +807,15 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! check whether we support the named feature\n     bool CanSupportFeature(enum WalletFeature wf) const override EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return IsFeatureSupported(nWalletVersion, wf); }\n \n+    //! select coins for staking from the available coins for staking.\n+    void SelectCoinsForStaking(std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet) const;\n+\t\n     /**\n      * populate vCoins with vector of available COutputs.\n      */\n-    void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe = true, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe = true, const CCoinControl* coinControl = nullptr, bool fIncludeDelegated = true, bool fIncludeColdStaking = false, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void AvailableCoinsForStaking(std::vector<COutput>& vCoins) const;\n+    void AvailableP2CSCoins(std::vector<COutput>& vCoins) const;\n \n     /**\n      * Return list of available coins and locked coins grouped by non-change output address.\n@@ -926,12 +938,21 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n         CAmount m_mine_trusted{0};           //!< Trusted, at depth=GetBalance.min_depth or more\n         CAmount m_mine_untrusted_pending{0}; //!< Untrusted, but in mempool (pending)\n         CAmount m_mine_immature{0};          //!< Immature coinbases in the main chain\n+        CAmount m_mine_stake{0};\n+        CAmount m_mine_stakeable{0};\n+        CAmount m_mine_immature_stakeable{0};\n+        CAmount m_mine_stakeable_delegations{0};\n+        CAmount m_mine_immature_stakeable_delegations{0};\n+        CAmount m_mine_cold_stake{0};\n+        CAmount m_mine_immature_cold_stake{0};\n+        CAmount m_mine_delegated{0};\n+        CAmount m_mine_immature_delegated{0};\n         CAmount m_watchonly_trusted{0};\n         CAmount m_watchonly_untrusted_pending{0};\n         CAmount m_watchonly_immature{0};\n     };\n     Balance GetBalance(int min_depth = 0, bool avoid_reuse = true) const;\n-    CAmount GetAvailableBalance(const CCoinControl* coinControl = nullptr) const;\n+    CAmount GetAvailableBalance(const CCoinControl* coinControl = nullptr, const bool fIncludeDelegated = true) const;\n \n     OutputType TransactionChangeType(const Optional<OutputType>& change_type, const std::vector<CRecipient>& vecSend);\n \n@@ -971,7 +992,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * selected by SelectCoins(); Also create the change output, when needed\n      * @note passing nChangePosInOut as -1 will result in setting a random position\n      */\n-    bool CreateTransaction(const std::vector<CRecipient>& vecSend, CTransactionRef& tx, CAmount& nFeeRet, int& nChangePosInOut, bilingual_str& error, const CCoinControl& coin_control, FeeCalculation& fee_calc_out, bool sign = true);\n+    bool CreateTransaction(const std::vector<CRecipient>& vecSend, CTransactionRef& tx, CAmount& nFeeRet, int& nChangePosInOut, bilingual_str& error, const CCoinControl& coin_control, FeeCalculation& fee_calc_out, bool sign = true, bool fIncludeDelegated = false);\n     /**\n      * Submit the transaction to the node's mempool and then relay to peers.\n      * Should be called after CreateTransaction unless you want to abort\n@@ -983,6 +1004,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      */\n     void CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm);\n \n+    uint64_t GetStakeWeight() const;\n+    bool CreateCoinStake(const CWallet &wallet, unsigned int nBits, const CAmount& nTotalFees, uint32_t nTimeBlock, CMutableTransaction& tx, CKey& key, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoins);\n+\n     bool DummySignTx(CMutableTransaction &txNew, const std::set<CTxOut> &txouts, bool use_max_sig = false) const\n     {\n         std::vector<CTxOut> v_txouts(txouts.size());\n@@ -1021,6 +1045,13 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     Optional<OutputType> m_default_change_type{};\n     /** Absolute maximum transaction fee (in satoshis) used by default for the wallet */\n     CAmount m_default_max_tx_fee{DEFAULT_TRANSACTION_MAXFEE};\n+    // optional setting to unlock wallet for staking only\n+    // serves to disable the trivial sendmoney when OS account compromised\n+    // provides no real security\n+    std::atomic<bool> m_wallet_unlock_staking_only{false};\n+    int64_t m_last_coin_stake_search_time{0};\n+    int64_t m_last_coin_stake_search_interval{0};\n+    std::atomic<bool> m_enabled_staking{false};\n \n     size_t KeypoolCountExternalKeys() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool TopUpKeyPool(unsigned int kpSize = 0);\n@@ -1055,6 +1086,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     bool IsChange(const CScript& script) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     CAmount GetChange(const CTxOut& txout) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool IsMine(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool IsRelevantToMe_MPOS(const CTransaction& tx) const;\n     /** should probably be renamed to IsRelevantToMe */\n     bool IsFromMe(const CTransaction& tx) const;\n     CAmount GetDebit(const CTransaction& tx, const isminefilter& filter) const;\n@@ -1079,6 +1111,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! get the current wallet format (the oldest client version guaranteed to understand this wallet)\n     int GetVersion() const { LOCK(cs_wallet); return nWalletVersion; }\n \n+    //! disable transaction for coinstake\n+    void DisableTransaction(const CTransaction &tx);  \n+\n     //! Get wallet transactions that conflict with given transaction (spend same outputs)\n     std::set<uint256> GetConflicts(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n@@ -1275,6 +1310,18 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     //! Add a descriptor to the wallet, return a ScriptPubKeyMan & associated output type\n     ScriptPubKeyMan* AddWalletDescriptor(WalletDescriptor& desc, const FlatSigningProvider& signing_provider, const std::string& label, bool internal);\n+\n+    /* Start staking BTCs */\n+    void StartStake(CConnman* connman = CWallet::defaultConnman, ChainstateManager* chainman = CWallet::defaultChainman, CTxMemPool* mempool = CWallet::defaultMempool);\n+\n+    /* Stop staking BTCs */\n+    void StopStake();\n+\n+    static CConnman* defaultConnman;\n+\n+    static ChainstateManager* defaultChainman;\n+\n+    static CTxMemPool* defaultMempool;\n };\n \n /**"
      }
    ]
  }
]