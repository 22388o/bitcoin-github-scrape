[
  {
    "sha": "0535076a29f77f1aefda9fe06c91fc171900c6f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTM1MDc2YTI5Zjc3ZjFhZWZkYTlmZTA2YzkxZmMxNzE5MDBjNmY0",
    "commit": {
      "author": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-09-11T08:59:52Z"
      },
      "committer": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-09-18T04:03:09Z"
      },
      "message": "Add '-pruneto' reserve block location option",
      "tree": {
        "sha": "de61b3e98aee17794a54d3945fbb057718202f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de61b3e98aee17794a54d3945fbb057718202f8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0535076a29f77f1aefda9fe06c91fc171900c6f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0535076a29f77f1aefda9fe06c91fc171900c6f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0535076a29f77f1aefda9fe06c91fc171900c6f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0535076a29f77f1aefda9fe06c91fc171900c6f4/comments",
    "author": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee50c9e48786dea0d9df2e45805c25565c100fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee50c9e48786dea0d9df2e45805c25565c100fe3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee50c9e48786dea0d9df2e45805c25565c100fe3"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4e333a72d2944c02d6c1868781726cacc1aabc7b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0535076a29f77f1aefda9fe06c91fc171900c6f4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0535076a29f77f1aefda9fe06c91fc171900c6f4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=0535076a29f77f1aefda9fe06c91fc171900c6f4",
        "patch": "@@ -362,6 +362,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. \"\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >%u = automatically prune block files to stay under the specified target size in MiB)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n+    strUsage += HelpMessageOpt(\"-pruneto=<dir>\", _(\"If pruning is enabled, optionally move pruned blocks to the specified location (on external drive, NAS, etc). This allows to limit the size of block storage while remaining compatible with -txindex and -rescan, assuming that the specified location is still available.\"\n+            \"(default: \\\"\\\" = disable moving, remove blocks as usual)\"));\n     strUsage += HelpMessageOpt(\"-reindex-chainstate\", _(\"Rebuild chain state from the currently indexed blocks\"));\n     strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild chain state and block index from the blk*.dat files on disk\"));\n #ifndef WIN32\n@@ -1023,6 +1025,9 @@ bool AppInitParameterInteraction()\n         LogPrintf(\"Prune configured to target %uMiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n         fPruneMode = true;\n     }\n+    // get reserve location to move blocks to\n+    strPruneLocation = gArgs.GetArg(\"-pruneto\", \"\");\n+\n \n     RegisterAllCoreRPCCommands(tableRPC);\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "cbfb9fc3f152c2031057c21fe7055a89ccc51f54",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0535076a29f77f1aefda9fe06c91fc171900c6f4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0535076a29f77f1aefda9fe06c91fc171900c6f4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0535076a29f77f1aefda9fe06c91fc171900c6f4",
        "patch": "@@ -73,6 +73,7 @@ bool fReindex = false;\n bool fTxIndex = false;\n bool fHavePruned = false;\n bool fPruneMode = false;\n+std::string strPruneLocation = \"\";\n bool fIsBareMultisigStd = DEFAULT_PERMIT_BAREMULTISIG;\n bool fRequireStandard = true;\n bool fCheckBlockIndex = false;"
      },
      {
        "sha": "8b731862fba59836ad0f24860d9d607f48186813",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0535076a29f77f1aefda9fe06c91fc171900c6f4/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0535076a29f77f1aefda9fe06c91fc171900c6f4/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=0535076a29f77f1aefda9fe06c91fc171900c6f4",
        "patch": "@@ -200,6 +200,8 @@ static const uint64_t nMinDiskSpace = 52428800;\n extern bool fHavePruned;\n /** True if we're running in -prune mode. */\n extern bool fPruneMode;\n+/** Reserve location to move pruned blocks instead of deleting them. */\n+extern std::string strPruneLocation;\n /** Number of MiB of block files that we're trying to stay below. */\n extern uint64_t nPruneTarget;\n /** Block files containing a block-height within MIN_BLOCKS_TO_KEEP of chainActive.Tip() will not be pruned. */"
      }
    ]
  },
  {
    "sha": "296f23b560836453f1c2a8c60ac3ceb3b11154d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTZmMjNiNTYwODM2NDUzZjFjMmE4YzYwYWMzY2ViM2IxMTE1NGQy",
    "commit": {
      "author": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-09-14T05:35:50Z"
      },
      "committer": {
        "name": "whythat",
        "email": "whythat@protonmail.com",
        "date": "2017-09-18T04:03:09Z"
      },
      "message": "Implement optional moving of pruned files",
      "tree": {
        "sha": "f83b5daf8e5172f0ae22a2457809092e7cdf0b36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f83b5daf8e5172f0ae22a2457809092e7cdf0b36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/296f23b560836453f1c2a8c60ac3ceb3b11154d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/296f23b560836453f1c2a8c60ac3ceb3b11154d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/296f23b560836453f1c2a8c60ac3ceb3b11154d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/296f23b560836453f1c2a8c60ac3ceb3b11154d2/comments",
    "author": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rodentrabies",
      "id": 7646953,
      "node_id": "MDQ6VXNlcjc2NDY5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodentrabies",
      "html_url": "https://github.com/rodentrabies",
      "followers_url": "https://api.github.com/users/rodentrabies/followers",
      "following_url": "https://api.github.com/users/rodentrabies/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodentrabies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodentrabies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
      "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
      "repos_url": "https://api.github.com/users/rodentrabies/repos",
      "events_url": "https://api.github.com/users/rodentrabies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0535076a29f77f1aefda9fe06c91fc171900c6f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0535076a29f77f1aefda9fe06c91fc171900c6f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0535076a29f77f1aefda9fe06c91fc171900c6f4"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 37,
      "deletions": 5
    },
    "files": [
      {
        "sha": "197dea797af115665ea2d4866faf8a5edab10697",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/296f23b560836453f1c2a8c60ac3ceb3b11154d2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/296f23b560836453f1c2a8c60ac3ceb3b11154d2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=296f23b560836453f1c2a8c60ac3ceb3b11154d2",
        "patch": "@@ -1947,8 +1947,20 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n                 }\n             }\n             // Finally remove any pruned files\n-            if (fFlushForPrune)\n-                UnlinkPrunedFiles(setFilesToPrune);\n+            if (fFlushForPrune) {\n+                fs::path location(strPruneLocation);\n+                if (// check if prune-to location is set\n+                    strPruneLocation != \"\" &&\n+                    // check if it exists in the filesystem\n+                    fs::exists(location) &&\n+                    // check if it is a directory\n+                    // TODO: add error reporting for this two cases\n+                    fs::is_directory(location)) {\n+                    MovePrunedFiles(setFilesToPrune, location);\n+                } else {\n+                    UnlinkPrunedFiles(setFilesToPrune);\n+                }\n+            }\n             nLastWrite = nNow;\n         }\n         // Flush best chain related state. This can only be done if the blocks / block index write was also done.\n@@ -3272,6 +3284,17 @@ void PruneOneBlockFile(const int fileNumber)\n     setDirtyFileInfo.insert(fileNumber);\n }\n \n+void MovePrunedFiles(const std::set<int>& setFilesToPrune, fs::path location)\n+{\n+    for (std::set<int>::iterator it = setFilesToPrune.begin(); it != setFilesToPrune.end(); ++it) {\n+        CDiskBlockPos pos(*it, 0);\n+        fs::path blk = GetBlockPosFilename(pos, \"blk\");\n+        fs::path rev = GetBlockPosFilename(pos, \"rev\");\n+        fs::rename(blk, location / GetBlockPosFilename(pos, \"blk\", true));\n+        fs::rename(rev, location / GetBlockPosFilename(pos, \"rev\", true));\n+        LogPrintf(\"Prune: %s moved blk/rev (%05u)\\n\", __func__, *it);\n+    }\n+}\n \n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune)\n {\n@@ -3418,9 +3441,12 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)\n+fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix, bool relative)\n {\n-    return GetDataDir() / \"blocks\" / strprintf(\"%s%05u.dat\", prefix, pos.nFile);\n+    fs::path filename = fs::path(\"blocks\") / strprintf(\"%s%05u.dat\", prefix, pos.nFile);\n+    if (!relative)\n+        filename = GetDataDir() / filename;\n+    return filename;\n }\n \n CBlockIndex * InsertBlockIndex(uint256 hash)"
      },
      {
        "sha": "8cda898a708d9821c946a3b9216f3df58f126c0e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/296f23b560836453f1c2a8c60ac3ceb3b11154d2/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/296f23b560836453f1c2a8c60ac3ceb3b11154d2/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=296f23b560836453f1c2a8c60ac3ceb3b11154d2",
        "patch": "@@ -258,7 +258,7 @@ bool CheckDiskSpace(uint64_t nAdditionalBytes = 0);\n /** Open a block file (blk?????.dat) */\n FILE* OpenBlockFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix);\n+fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix, bool relative = false);\n /** Import blocks from an external file */\n bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, CDiskBlockPos *dbp = nullptr);\n /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */\n@@ -293,6 +293,12 @@ void PruneOneBlockFile(const int fileNumber);\n  */\n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n+/**\n+ *  Unlink blocks files by moving them to reserve location while allowing for later\n+ *  linking them back from that location\n+ */\n+void MovePrunedFiles(const std::set<int>& setFilesToPrune, fs::path location);\n+\n /** Create a new block index entry for a given block hash */\n CBlockIndex * InsertBlockIndex(uint256 hash);\n /** Flush all state, indexes and buffers to disk. */"
      }
    ]
  }
]