[
  {
    "sha": "b7f565094296b727d1309418d3a284d942f15f11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2Y1NjUwOTQyOTZiNzI3ZDEzMDk0MThkM2EyODRkOTQyZjE1ZjEx",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-12T20:02:31Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-13T20:18:13Z"
      },
      "message": "Extract CWallet::MarkInputsDirty\n\nTo avoid repeated implementations.",
      "tree": {
        "sha": "afcec34584c4020c78efbec35b0e14146c66afa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afcec34584c4020c78efbec35b0e14146c66afa6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7f565094296b727d1309418d3a284d942f15f11",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbSQkGAAoJEG7l83hfeLNFRdIIAKfgU+kV7u0KdRgQnrSPGIt+\nmVRjncYE5y498rIl9psMy505gAWq9gxGRjb0YTPQlV4YuN683wmrcESsOY6Qq7hb\nS/b7M/gfSUrJtgivjIxn1Iu29Zg/lBAGqIzy2xabuFu/qgyoAR77E0JJHCicHJIN\ncPvWuKr46iMXV38LR1tCy4j3bZdYeRgQvRq9aImm5JSpAOtn8yxkQqf7Uu1k5ouQ\nUkrl45CZKICFz+d+8UYTcu24b93uyOf9djZYsLB3lFuixQlZoWeuvqbj0XObfIHe\nOgdVND/yATHjoRjbEaqkVy04+ETK7l//31l3Qr59sYtOMOJQQojmps4+EVf2dpI=\n=D1B8\n-----END PGP SIGNATURE-----",
        "payload": "tree afcec34584c4020c78efbec35b0e14146c66afa6\nparent 619cd29393b68426f3d9c0d7467509fadfa9f933\nauthor Ben Woosley <ben.woosley@gmail.com> 1531425751 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1531513093 -0400\n\nExtract CWallet::MarkInputsDirty\n\nTo avoid repeated implementations.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f565094296b727d1309418d3a284d942f15f11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7f565094296b727d1309418d3a284d942f15f11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f565094296b727d1309418d3a284d942f15f11/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "619cd29393b68426f3d9c0d7467509fadfa9f933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/619cd29393b68426f3d9c0d7467509fadfa9f933",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/619cd29393b68426f3d9c0d7467509fadfa9f933"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 16,
      "deletions": 21
    },
    "files": [
      {
        "sha": "0b4961162003675c74170a5342d69fad44905c91",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 21,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f565094296b727d1309418d3a284d942f15f11/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f565094296b727d1309418d3a284d942f15f11/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b7f565094296b727d1309418d3a284d942f15f11",
        "patch": "@@ -1107,6 +1107,16 @@ bool CWallet::TransactionCanBeAbandoned(const uint256& hashTx) const\n     return wtx && !wtx->isAbandoned() && wtx->GetDepthInMainChain() == 0 && !wtx->InMempool();\n }\n \n+void CWallet::MarkInputsDirty(const CTransactionRef& tx)\n+{\n+    for (const CTxIn& txin : tx->vin) {\n+        auto it = mapWallet.find(txin.prevout.hash);\n+        if (it != mapWallet.end()) {\n+            it->second.MarkDirty();\n+        }\n+    }\n+}\n+\n bool CWallet::AbandonTransaction(const uint256& hashTx)\n {\n     LOCK2(cs_main, cs_wallet);\n@@ -1155,13 +1165,7 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\n             }\n             // If a transaction changes 'conflicted' state, that changes the balance\n             // available of the outputs it spends. So force those to be recomputed\n-            for (const CTxIn& txin : wtx.tx->vin)\n-            {\n-                auto it = mapWallet.find(txin.prevout.hash);\n-                if (it != mapWallet.end()) {\n-                    it->second.MarkDirty();\n-                }\n-            }\n+            MarkInputsDirty(wtx.tx);\n         }\n     }\n \n@@ -1217,31 +1221,19 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n             }\n             // If a transaction changes 'conflicted' state, that changes the balance\n             // available of the outputs it spends. So force those to be recomputed\n-            for (const CTxIn& txin : wtx.tx->vin) {\n-                auto it = mapWallet.find(txin.prevout.hash);\n-                if (it != mapWallet.end()) {\n-                    it->second.MarkDirty();\n-                }\n-            }\n+            MarkInputsDirty(wtx.tx);\n         }\n     }\n }\n \n void CWallet::SyncTransaction(const CTransactionRef& ptx, const CBlockIndex *pindex, int posInBlock, bool update_tx) {\n-    const CTransaction& tx = *ptx;\n-\n     if (!AddToWalletIfInvolvingMe(ptx, pindex, posInBlock, update_tx))\n         return; // Not one of ours\n \n     // If a transaction changes 'conflicted' state, that changes the balance\n     // available of the outputs it spends. So force those to be\n     // recomputed, also:\n-    for (const CTxIn& txin : tx.vin) {\n-        auto it = mapWallet.find(txin.prevout.hash);\n-        if (it != mapWallet.end()) {\n-            it->second.MarkDirty();\n-        }\n-    }\n+    MarkInputsDirty(ptx);\n }\n \n void CWallet::TransactionAddedToMempool(const CTransactionRef& ptx) {"
      },
      {
        "sha": "16ae4034bd82a95b22435058a8e0d37999558448",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f565094296b727d1309418d3a284d942f15f11/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f565094296b727d1309418d3a284d942f15f11/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b7f565094296b727d1309418d3a284d942f15f11",
        "patch": "@@ -706,6 +706,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     /* Mark a transaction (and its in-wallet descendants) as conflicting with a particular block. */\n     void MarkConflicted(const uint256& hashBlock, const uint256& hashTx);\n \n+    /* Mark a transaction's inputs dirty, thus forcing the outputs to be recomputed */\n+    void MarkInputsDirty(const CTransactionRef& tx);\n+\n     void SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator>);\n \n     /* Used by TransactionAddedToMemorypool/BlockConnected/Disconnected/ScanForWalletTransactions."
      }
    ]
  },
  {
    "sha": "17e6aa8e333dbf3631fb09dc6eb7ede1937269df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2U2YWE4ZTMzM2RiZjM2MzFmYjA5ZGM2ZWI3ZWRlMTkzNzI2OWRm",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-12T20:07:19Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-13T20:18:14Z"
      },
      "message": "Privatize CWallet::AddToWalletIfInvolvingMe\n\nAnd document in the header.",
      "tree": {
        "sha": "bb73e4a0e544b7c716ecf3f9dc025caf485447fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb73e4a0e544b7c716ecf3f9dc025caf485447fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17e6aa8e333dbf3631fb09dc6eb7ede1937269df",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbSQkGAAoJEG7l83hfeLNF390H/1igJsy11PyNk227ZI95HGSN\nEQCl8JYtsSx50pMZOKy2NVh4LqHnrdnQZHfDlW+n+2EageUBPfZtg7VLMEpY7YZM\nBkk7nL+R9EGBPhDWn3APE5kbVj+JfRD4KCPtJktODb2/32HucXxvychV0iH44nwY\nsTyN0tlCLmCRke+eypfOXSm3tdo779wDE1kYWAwnLb8xQM4wZCsy0dNI4ups7/qz\nERm2HhWemhS+QRUb8b1UceM+3EP0xHdo6H4Z8OodqkHxVYdFSnU5GHVMdH2SyL9l\nYTXpXoC9U+69zYDSrYgRnGHeDTO+1qIKI+UXRvd0cpj5c7WjGkZolupMpJY6r50=\n=X6uw\n-----END PGP SIGNATURE-----",
        "payload": "tree bb73e4a0e544b7c716ecf3f9dc025caf485447fd\nparent b7f565094296b727d1309418d3a284d942f15f11\nauthor Ben Woosley <ben.woosley@gmail.com> 1531426039 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1531513094 -0400\n\nPrivatize CWallet::AddToWalletIfInvolvingMe\n\nAnd document in the header.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17e6aa8e333dbf3631fb09dc6eb7ede1937269df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17e6aa8e333dbf3631fb09dc6eb7ede1937269df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17e6aa8e333dbf3631fb09dc6eb7ede1937269df/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7f565094296b727d1309418d3a284d942f15f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f565094296b727d1309418d3a284d942f15f11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7f565094296b727d1309418d3a284d942f15f11"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 15,
      "deletions": 14
    },
    "files": [
      {
        "sha": "f093ad556107e7898b3e7f068629719a9da08433",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17e6aa8e333dbf3631fb09dc6eb7ede1937269df/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17e6aa8e333dbf3631fb09dc6eb7ede1937269df/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=17e6aa8e333dbf3631fb09dc6eb7ede1937269df",
        "patch": "@@ -1028,19 +1028,6 @@ bool CWallet::LoadToWallet(const CWalletTx& wtxIn)\n     return true;\n }\n \n-/**\n- * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\n- * be set when the transaction was known to be included in a block.  When\n- * pIndex == nullptr, then wallet state is not updated in AddToWallet, but\n- * notifications happen and cached balances are marked dirty.\n- *\n- * If fUpdate is true, existing transactions will be updated.\n- * TODO: One exception to this is that the abandoned state is cleared under the\n- * assumption that any further notification of a transaction that was considered\n- * abandoned is an indication that it is not safe to be considered abandoned.\n- * Abandoned state should probably be more carefully tracked via different\n- * posInBlock signals or by checking mempool presence when necessary.\n- */\n bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate)\n {\n     const CTransaction& tx = *ptx;"
      },
      {
        "sha": "979516da884c62022f884ae92c432fccaf5318c9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17e6aa8e333dbf3631fb09dc6eb7ede1937269df/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17e6aa8e333dbf3631fb09dc6eb7ede1937269df/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=17e6aa8e333dbf3631fb09dc6eb7ede1937269df",
        "patch": "@@ -703,6 +703,21 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid);\n     void AddToSpends(const uint256& wtxid);\n \n+    /**\n+     * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\n+     * be set when the transaction was known to be included in a block.  When\n+     * pIndex == nullptr, then wallet state is not updated in AddToWallet, but\n+     * notifications happen and cached balances are marked dirty.\n+     *\n+     * If fUpdate is true, existing transactions will be updated.\n+     * TODO: One exception to this is that the abandoned state is cleared under the\n+     * assumption that any further notification of a transaction that was considered\n+     * abandoned is an indication that it is not safe to be considered abandoned.\n+     * Abandoned state should probably be more carefully tracked via different\n+     * posInBlock signals or by checking mempool presence when necessary.\n+     */\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     /* Mark a transaction (and its in-wallet descendants) as conflicting with a particular block. */\n     void MarkConflicted(const uint256& hashBlock, const uint256& hashTx);\n \n@@ -937,7 +952,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex *pindex, const std::vector<CTransactionRef>& vtxConflicted) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) override;\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     int64_t RescanFromTime(int64_t startTime, const WalletRescanReserver& reserver, bool update);\n     CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver& reserver, bool fUpdate = false);\n     void TransactionRemovedFromMempool(const CTransactionRef &ptx) override;"
      }
    ]
  }
]