jtimon,2015-04-08T13:26:55Z,fixed after a discussion with @theuni on IRC \nNow CheckIndexAgainstCheckpoint() takes CChainParams instead of uint256& hashGenesisBlock as parameter to avoid conflicts with work that he is doing in parallel related to checkpoints.\nReady for squash.\n#5968 and #5970 probably need to be adapted to CheckIndexAgainstCheckpoint depending on CChainParams.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-90915036,90915036,
jtimon,2015-04-08T17:12:56Z,"2 more fixes, ready to squash\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-90977720,90977720,
jtimon,2015-04-15T12:00:18Z,Needed rebase.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-93355365,93355365,
jtimon,2015-04-19T21:35:20Z,Somehow I missed this one. Renamed params to chainparams like everywhere else.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-94317009,94317009,
jtimon,2015-04-22T10:01:08Z,ping @theuni \n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-95109804,95109804,
theuni,2015-04-22T23:14:47Z,ut ack other than the nit\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-95363950,95363950,
jtimon,2015-04-22T23:32:26Z,nit solved\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-95367137,95367137,
theuni,2015-04-23T21:06:37Z,"Thanks, looks good.\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-95719104,95719104,
jtimon,2015-05-06T10:45:42Z,Needed rebase\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99415255,99415255,
theuni,2015-05-06T16:29:42Z,"@jtimon I think #6055 was a big improvement in readability for the checkpoint functions because it moved the ""what if checkpoints aren't enabled"" case out of the actual checkpoint logic. This would undo some of that.\n\nHow about removing the early return from `CheckIndexAgainstCheckpoint()` and instead calling into it like `if (fCheckpointsEnabled && !CheckIndexAgainstCheckpoint(...))` ?\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99530132,99530132,
jtimon,2015-05-06T16:52:07Z,I disagree that this undoes part of #6055 but I'm ok with your proposed alternative. I thought about it too but I didn't wanted to  take the `assert(pindexPrev);` out of the function as well.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99535651,99535651,
theuni,2015-05-06T17:09:02Z,"Sorry, that was poorly worded. It wouldn't undo any of #6055, but it would negate one of the beneficial side-effects of it.\n\nAs for not removing the assert, I don't follow. pindexPrev is used whether checkpoints are enabled or not, so relying on the assert in CheckIndexAgainstCheckpoint() even if checkpoints are disabled makes no sense to me.\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99540013,99540013,
jtimon,2015-05-06T17:15:42Z,"I still disagree that it is removing one of the beneficial side effects of it, I don't think the negated condition is less readable...\n\nAnyway, what I mean is that if I want to maintain it almost equivalent (is not completely equivalent functionally because I'm changing the genesis check as discussed in the outdated comment by @sipa), I can't do just\n\n```\nif (fCheckpointsEnabled && !CheckInde",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99541662,99541662,
theuni,2015-05-06T17:27:16Z,"Yes, that looks good. Thanks.\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99544306,99544306,
jtimon,2015-05-06T17:44:19Z,"Done, changed as suggested by @theuni \n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-99549892,99549892,
jtimon,2015-05-08T10:34:16Z,@sipa I answered to your worries on checking the genesis block. You never answered back so I assume you were satisfied by my answer.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-100186656,100186656,
sipa,2015-05-10T21:30:56Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-100703967,100703967,
jtimon,2015-05-27T13:45:51Z,Updated without the unused blockIndexMap parameter.\nIt may take long until it gets used so better to just introduce it at that point.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-105916511,105916511,
laanwj,2015-06-10T08:42:43Z,"Sorry: needs rebase after #5927, will merge after that.\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-110656788,110656788,
jtimon,2015-06-10T11:13:53Z,"No worries, it was an easy rebase.\n",https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-110703198,110703198,
sdaftuar,2015-06-16T18:56:18Z,This appears to have broken running bitcoind with -reindex(!); it appears the `assert(pindexPrev)` in AcceptBlockHeader can be reached when processing the genesis block from disk.  Can be reproduced by running `qa/rpc-tests/reindex.py`.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-112528359,112528359,
jtimon,2015-06-17T19:30:45Z,@sdaftuar created #6299 to fix the bug.\n,https://github.com/bitcoin/bitcoin/pull/5975#issuecomment-112921324,112921324,
theuni,2015-04-08T16:35:01Z,Shouldn't these just return false? state is already set in CheckIndexAgainstCheckpoint().\n,https://github.com/bitcoin/bitcoin/pull/5975#discussion_r27987513,27987513,src/main.cpp
theuni,2015-04-22T22:28:53Z,"nit: mapBlockIndex shadows the global, will be confusing when it's used.\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r28921127,28921127,src/main.cpp
sipa,2015-04-24T10:11:39Z,"I'd rather keep comparisons with the genesis block out of the ""checkpoints"" logic. That's purely philosophical, but we may get rid of checkpoints at some point, though the genesis block will always remain part of consensus.\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29038007,29038007,src/main.cpp
jtimon,2015-04-25T10:11:47Z,"Well, the question is, should we validate the genesis block?\nI don't think so, the genesis block is hardcoded, no need to check it redundantly from many computers. \nSo this is more moving that check out of consensus than ""moving it to the checkpoints logic"".\n\nBut of course, if your the tip of the chain index you're using (your pindexPrev) is the genesis block (that is, if you're validating the",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29099547,29099547,src/main.cpp
sipa,2015-05-07T23:10:59Z,"Any reason why the checkpoints check is moved?\n\nI think it's harmless to do so, but I was wondering if there is a reason.\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29905113,29905113,src/main.cpp
sipa,2015-05-08T03:07:46Z,"No need to print an error in this case; it's perfectly legitimate that this fails.\n\nEDIT: Hmm, the rest of the checks prints stuff too. Never mind then, but I think we should fix that independently (there are probably already issues about that).\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29914432,29914432,src/main.cpp
jtimon,2015-05-08T10:28:47Z,Apparently having the check of the global boolean outside of the function is more readable according to @theuni.\n,https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29930305,29930305,src/main.cpp
jtimon,2015-05-08T10:32:28Z,"Yes I'm trying to move the errors up (because logging errrors shouldnt be done in consensus, but one step at a time. That is the kind of change that is better done after the moveonly, hopefully, one day...\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29930473,29930473,src/main.cpp
theuni,2015-05-09T19:39:01Z,"@sipa if you're referring to fCheckpointsEnabled moving out of CheckIndexAgainstCheckpoint(), I requested that to reduce the side-effects of CheckIndexAgainstCheckpoint(). Imo if possible the checkpoint functions should be side-effect free so that we know it's consensus-safe to simply not call them at all.\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29995610,29995610,src/main.cpp
sipa,2015-05-09T23:30:16Z,I'm referring to the fCheckpointsEnabled conditional. Just to the fact that\nthe checkpoints-checking point in this function moving.\n,https://github.com/bitcoin/bitcoin/pull/5975#discussion_r29997214,29997214,src/main.cpp
jtimon,2015-05-10T12:45:49Z,"@sipa I'm still not sure what you mean.\nThe checkpoints checks are moved out of ContextualCheckBlockHeader to keep them out of consensus.\nThen is moved up in the functions, because you should have your index checked before checking a new block, maybe they can be moved upper (and earlier in time) later. I suspect the index is checked in this way redundantly.\nIf this is an issue I can maintain th",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r30001749,30001749,src/main.cpp
sipa,2015-05-10T20:39:34Z,"Sorry, I missed this was in AcceptBlockHeader already, and not in ContextualCheckBlockHeader anymore. Looks good.\n",https://github.com/bitcoin/bitcoin/pull/5975#discussion_r30005789,30005789,src/main.cpp
