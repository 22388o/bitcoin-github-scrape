sdaftuar,2016-05-05T17:37:18Z,"Code review ACK, will test.\n",https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217220702,217220702,
dcousens,2016-05-06T02:51:34Z,"> [This object bimodality is necessary because lookup on a set requires\n> constructing an object of the set's key type, an inconvenience corrected in\n> C++14.]\n\nI thought we were only at C++11?  Or are you suggesting this is something else that would be corrected by moving to C++14?\n",https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217336579,217336579,
kazcw,2016-05-06T03:36:30Z,I'm just blaming C++<=11 for my tagged union. When we eventually switch to C++14 there's a much cleaner solution that doesn't require putting two things that should be different types in the same class.\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217340659,217340659,
sdaftuar,2016-05-06T18:41:17Z,ACK.  Nice improvement!\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217525452,217525452,
dcousens,2016-05-07T02:25:58Z,utACK 2642766\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217599789,217599789,
sipa,2016-05-09T19:33:41Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217965578,217965578,
kazcw,2016-05-09T22:32:03Z,"I just realized that no users of `mapNextTx` need to know which CTxIn of a transaction spends a particular prevout. This makes a map-based approach possible with the same memory usage as this set implementation. I'm going to replace this with the map implementation because it's definitely cleaner that way (doesn't require the CSpendRef trick, and a map better reflects the function of the data stru",https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-218009628,218009628,
TheBlueMatt,2016-05-15T19:50:05Z,"ACK 507437a0f067dd696c1fe9698f4ad60a3801ce3f +/- removing [] and forcing insertion through insert(). It'd also be nice to get a test for indirectmap, or at least the following, if you're feeling lazy:\n\n```\ndiff --git a/src/txmempool.cpp b/src/txmempool.cpp\nindex 2f867c8..42c3da4 100644\n--- a/src/txmempool.cpp\n+++ b/src/txmempool.cpp\n@@ -673,6 +673,7 @@ void CTxMemPool::check(const CCoinsVie",https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-219306578,219306578,
kazcw,2016-05-16T21:38:21Z,The find-and-maybe-insert operator does seem especially squirrelly in this case. Added a squashme with `insert(...)` instead; added the assertion.\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-219556261,219556261,
sipa,2016-05-16T22:34:09Z,utACK f379416127f0832ba4aa73c1af874df79b58124c\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-219568800,219568800,
TheBlueMatt,2016-05-17T05:05:26Z,Seems you forgot to add the assertion?\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-219620225,219620225,
kazcw,2016-05-17T05:22:07Z,"Oops, I hadn't saved the changes to the file yet\n",https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-219622071,219622071,
TheBlueMatt,2016-05-17T17:26:36Z,re-ACK 64949c7f9c7d47df170fa3814bb5aa89235c8e74\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-219791530,219791530,
sipa,2016-06-02T15:25:33Z,Can you squash?\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-223326917,223326917,
kazcw,2016-06-02T19:34:27Z,Squashed all my commits from 64949c7 -> 9805f4a\n,https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-223398068,223398068,
sipa,2016-06-02T23:18:44Z,"utACK 9805f4af7ecb6becf8a146bd845fb131ffa625c9, but well-tested by the CTxMemPool::check function.\n",https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-223450832,223450832,
dcousens,2016-05-06T04:05:54Z,"`noexcept`, then a `throw`\n\nDid I misunderstand the meaning of this qualifier?\n",https://github.com/bitcoin/bitcoin/pull/7997#discussion_r62286760,62286760,src/txmempool.h
kazcw,2016-05-06T05:31:07Z,`noexcept` guarantees `std::terminate` occurs if an exception escapes the function; it's a hard assert that's allowed inside a `constexpr`.\n,https://github.com/bitcoin/bitcoin/pull/7997#discussion_r62290026,62290026,src/txmempool.h
dcousens,2016-05-06T05:36:51Z,"TIL, thanks @kazcw \n",https://github.com/bitcoin/bitcoin/pull/7997#discussion_r62290239,62290239,src/txmempool.h
TheBlueMatt,2016-05-15T19:29:28Z,Feel like this might lead to errors at some point? I'd kinda prefer if you only do this for insert().\n,https://github.com/bitcoin/bitcoin/pull/7997#discussion_r63296674,63296674,src/indirectmap.h
sipa,2016-05-16T21:15:16Z,"I guess it's the correct thing to do if you want to mimic the std::map interface as good as possible, but operator[] automatically constructing elements is annoying...\n",https://github.com/bitcoin/bitcoin/pull/7997#discussion_r63426979,63426979,src/indirectmap.h
