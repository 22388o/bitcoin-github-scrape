[
  {
    "sha": "10be0c5b4623d2e595fc1f6d2915529b75f093b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGJlMGM1YjQ2MjNkMmU1OTVmYzFmNmQyOTE1NTI5Yjc1ZjA5M2Iy",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-11-07T19:03:42Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2017-02-24T05:30:15Z"
      },
      "message": "Really don't validate genesis block",
      "tree": {
        "sha": "41c906c53f595c4f0e4a71e6301e1cf921724f21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41c906c53f595c4f0e4a71e6301e1cf921724f21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10be0c5b4623d2e595fc1f6d2915529b75f093b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10be0c5b4623d2e595fc1f6d2915529b75f093b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10be0c5b4623d2e595fc1f6d2915529b75f093b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10be0c5b4623d2e595fc1f6d2915529b75f093b2/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "692c9eddba67d5a7ceb85fa4b2632f664c68f418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/692c9eddba67d5a7ceb85fa4b2632f664c68f418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/692c9eddba67d5a7ceb85fa4b2632f664c68f418"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4358f7e4741344bc65fcc6027de5155dcaaaab14",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10be0c5b4623d2e595fc1f6d2915529b75f093b2/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10be0c5b4623d2e595fc1f6d2915529b75f093b2/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=10be0c5b4623d2e595fc1f6d2915529b75f093b2",
        "patch": "@@ -197,7 +197,7 @@ bool CBlockTreeDB::LoadBlockIndexGuts(boost::function<CBlockIndex*(const uint256\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, Params().GetConsensus()))\n+                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, Params().GetConsensus()) && pindexNew->GetBlockHash() != Params().GetConsensus().hashGenesisBlock)\n                     return error(\"LoadBlockIndex(): CheckProofOfWork failed: %s\", pindexNew->ToString());\n \n                 pcursor->Next();"
      },
      {
        "sha": "52de4abdfa570791449c22886ddc4136f42f2519",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10be0c5b4623d2e595fc1f6d2915529b75f093b2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10be0c5b4623d2e595fc1f6d2915529b75f093b2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=10be0c5b4623d2e595fc1f6d2915529b75f093b2",
        "patch": "@@ -1147,7 +1147,8 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos, const Consensus:\n     }\n \n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams) &&\n+        block.GetHash() != consensusParams.hashGenesisBlock)\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n     return true;\n@@ -1742,10 +1743,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     int64_t nTimeStart = GetTimeMicros();\n \n-    // Check it again in case a previous version let a bad block in\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), !fJustCheck, !fJustCheck))\n-        return error(\"%s: Consensus::CheckBlock: %s\", __func__, FormatStateMessage(state));\n-\n     // verify that the view's current state corresponds to the previous block\n     uint256 hashPrevBlock = pindex->pprev == NULL ? uint256() : pindex->pprev->GetBlockHash();\n     assert(hashPrevBlock == view.GetBestBlock());\n@@ -1758,6 +1755,10 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         return true;\n     }\n \n+    // Check it again in case a previous version let a bad block in\n+    if (!CheckBlock(block, state, chainparams.GetConsensus(), !fJustCheck, !fJustCheck))\n+        return error(\"%s: Consensus::CheckBlock: %s\", __func__, FormatStateMessage(state));\n+\n     bool fScriptChecks = true;\n     if (!hashAssumeValid.IsNull()) {\n         // We've been configured with the hash of a block which has been externally verified to have a valid history.\n@@ -3187,8 +3188,9 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     }\n     if (fNewBlock) *fNewBlock = true;\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n+    if ((block.GetHash() != chainparams.GetConsensus().hashGenesisBlock) &&\n+        (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n+        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev))) {\n         if (state.IsInvalid() && !state.CorruptionPossible()) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             setDirtyBlockIndex.insert(pindex);"
      }
    ]
  }
]