jl2012,2017-09-27T15:53:45Z,@jnewbery fixed,https://github.com/bitcoin/bitcoin/pull/11399#issuecomment-332568192,332568192,
jonasschnelli,2017-09-28T03:10:28Z,utACK 49f869fe91716785b3276925d64bf8955feff69f,https://github.com/bitcoin/bitcoin/pull/11399#issuecomment-332715344,332715344,
laanwj,2017-10-02T12:48:53Z,"Agree with @jnewbery's comment, though I don't think that is serious enough to hold up the merge\nutACK 49f869f",https://github.com/bitcoin/bitcoin/pull/11399#issuecomment-333524203,333524203,
promag,2017-09-25T17:34:36Z,"Nit, spaces around operators.",https://github.com/bitcoin/bitcoin/pull/11399#discussion_r140844452,140844452,test/functional/bip68-sequence.py
jnewbery,2017-09-26T14:45:36Z,"also, prefer `assert_greater_than()` where possible (since it will print the result of both sides of the inequality if the assert fails)",https://github.com/bitcoin/bitcoin/pull/11399#discussion_r141079121,141079121,test/functional/bip68-sequence.py
jnewbery,2017-09-26T14:45:51Z,prefer `assert_equal()`,https://github.com/bitcoin/bitcoin/pull/11399#discussion_r141079203,141079203,test/functional/bip68-sequence.py
jnewbery,2017-09-26T14:52:17Z,"Seems like this could do with more commenting. Activation happens at the end of 3 periods since:\n- BIP68 bit is not yet defined in period 1\n- Signaling takes place in period 2\n- BIP68 is locked in during period 3.\n\n`getblockchaininfo` will show BIP68 as active on at block 431 (144 * 3 -1) since it's returning whether BIP68 is active for the *next* block.",https://github.com/bitcoin/bitcoin/pull/11399#discussion_r141081327,141081327,test/functional/bip68-sequence.py
jnewbery,2017-09-27T20:19:10Z,"Definitely a matter of personal taste, but:\n\n```python\nassert_greater_than(min_activation_height - 2, height)\n```\n\nseems to me to convey the meaning better: that the current height is less than (activation height - 2).",https://github.com/bitcoin/bitcoin/pull/11399#discussion_r141456406,141456406,test/functional/bip68-sequence.py
