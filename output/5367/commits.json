[
  {
    "sha": "63d1ae5556ea40dde0cca20addda4bba40005496",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2QxYWU1NTU2ZWE0MGRkZTBjY2EyMGFkZGRhNGJiYTQwMDA1NDk2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-25T15:26:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-25T15:26:35Z"
      },
      "message": "Do all block index writes in a batch",
      "tree": {
        "sha": "84300b58849b139c71381704d54f640ffff694f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84300b58849b139c71381704d54f640ffff694f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63d1ae5556ea40dde0cca20addda4bba40005496",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63d1ae5556ea40dde0cca20addda4bba40005496",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63d1ae5556ea40dde0cca20addda4bba40005496",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63d1ae5556ea40dde0cca20addda4bba40005496/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac0b2393a447bb20f8b0489a67237c98a1cfff4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac0b2393a447bb20f8b0489a67237c98a1cfff4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac0b2393a447bb20f8b0489a67237c98a1cfff4a"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 29,
      "deletions": 33
    },
    "files": [
      {
        "sha": "e76d5a3d9add16b7807e623fa9ab4452d15c8715",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63d1ae5556ea40dde0cca20addda4bba40005496/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63d1ae5556ea40dde0cca20addda4bba40005496/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=63d1ae5556ea40dde0cca20addda4bba40005496",
        "patch": "@@ -293,7 +293,7 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = 0;\n     }\n \n-    explicit CDiskBlockIndex(CBlockIndex* pindex) : CBlockIndex(*pindex) {\n+    explicit CDiskBlockIndex(const CBlockIndex* pindex) : CBlockIndex(*pindex) {\n         hashPrev = (pprev ? pprev->GetBlockHash() : 0);\n     }\n "
      },
      {
        "sha": "832d7747f82fe2366a32fa04499ca679eacd1da6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 16,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63d1ae5556ea40dde0cca20addda4bba40005496/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63d1ae5556ea40dde0cca20addda4bba40005496/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=63d1ae5556ea40dde0cca20addda4bba40005496",
        "patch": "@@ -1784,24 +1784,23 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n         // First make sure all block and undo data is flushed to disk.\n         FlushBlockFile();\n         // Then update all block file information (which may refer to block and undo files).\n-        bool fileschanged = false;\n-        for (set<int>::iterator it = setDirtyFileInfo.begin(); it != setDirtyFileInfo.end(); ) {\n-            if (!pblocktree->WriteBlockFileInfo(*it, vinfoBlockFile[*it])) {\n-                return state.Abort(\"Failed to write to block index\");\n+        {\n+            std::vector<std::pair<int, const CBlockFileInfo*> > vFiles;\n+            vFiles.reserve(setDirtyFileInfo.size());\n+            for (set<int>::iterator it = setDirtyFileInfo.begin(); it != setDirtyFileInfo.end(); ) {\n+                vFiles.push_back(make_pair(*it, &vinfoBlockFile[*it]));\n+                setDirtyFileInfo.erase(it++);\n+            }\n+            std::vector<const CBlockIndex*> vBlocks;\n+            vBlocks.reserve(setDirtyBlockIndex.size());\n+            for (set<CBlockIndex*>::iterator it = setDirtyBlockIndex.begin(); it != setDirtyBlockIndex.end(); ) {\n+                vBlocks.push_back(*it);\n+                setDirtyBlockIndex.erase(it++);\n+            }\n+            if (!pblocktree->WriteBatchSync(vFiles, nLastBlockFile, vBlocks)) {\n+                return state.Abort(\"Files to write to block index database\");\n             }\n-            fileschanged = true;\n-            setDirtyFileInfo.erase(it++);\n-        }\n-        if (fileschanged && !pblocktree->WriteLastBlockFile(nLastBlockFile)) {\n-            return state.Abort(\"Failed to write to block index\");\n-        }\n-        for (set<CBlockIndex*>::iterator it = setDirtyBlockIndex.begin(); it != setDirtyBlockIndex.end(); ) {\n-             if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(*it))) {\n-                 return state.Abort(\"Failed to write to block index\");\n-             }\n-             setDirtyBlockIndex.erase(it++);\n         }\n-        pblocktree->Sync();\n         // Finally flush the chainstate (which may refer to block index entries).\n         if (!pcoinsTip->Flush())\n             return state.Abort(\"Failed to write to coin database\");"
      },
      {
        "sha": "29ef35037498d328fcbf7d780a2773ca95d00d49",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63d1ae5556ea40dde0cca20addda4bba40005496/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63d1ae5556ea40dde0cca20addda4bba40005496/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=63d1ae5556ea40dde0cca20addda4bba40005496",
        "patch": "@@ -66,23 +66,10 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CLevelDBWrapper(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n }\n \n-bool CBlockTreeDB::WriteBlockIndex(const CDiskBlockIndex& blockindex)\n-{\n-    return Write(make_pair('b', blockindex.GetBlockHash()), blockindex);\n-}\n-\n-bool CBlockTreeDB::WriteBlockFileInfo(int nFile, const CBlockFileInfo &info) {\n-    return Write(make_pair('f', nFile), info);\n-}\n-\n bool CBlockTreeDB::ReadBlockFileInfo(int nFile, CBlockFileInfo &info) {\n     return Read(make_pair('f', nFile), info);\n }\n \n-bool CBlockTreeDB::WriteLastBlockFile(int nFile) {\n-    return Write('l', nFile);\n-}\n-\n bool CBlockTreeDB::WriteReindexing(bool fReindexing) {\n     if (fReindexing)\n         return Write('R', '1');\n@@ -152,6 +139,18 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n     return true;\n }\n \n+bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n+    CLevelDBBatch batch;\n+    for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n+        batch.Write(make_pair('f', it->first), *it->second);\n+    }\n+    batch.Write('l', nLastFile);\n+    for (std::vector<const CBlockIndex*>::const_iterator it=blockinfo.begin(); it != blockinfo.end(); it++) {\n+        batch.Write(make_pair('b', (*it)->GetBlockHash()), CDiskBlockIndex(*it));\n+    }\n+    return WriteBatch(batch, true);\n+}\n+\n bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n     return Read(make_pair('t', txid), pos);\n }"
      },
      {
        "sha": "f81fc6268978ae876eadb63c2b0784adc0de2e85",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63d1ae5556ea40dde0cca20addda4bba40005496/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63d1ae5556ea40dde0cca20addda4bba40005496/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=63d1ae5556ea40dde0cca20addda4bba40005496",
        "patch": "@@ -48,11 +48,9 @@ class CBlockTreeDB : public CLevelDBWrapper\n     CBlockTreeDB(const CBlockTreeDB&);\n     void operator=(const CBlockTreeDB&);\n public:\n-    bool WriteBlockIndex(const CDiskBlockIndex& blockindex);\n+    bool WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo);\n     bool ReadBlockFileInfo(int nFile, CBlockFileInfo &fileinfo);\n-    bool WriteBlockFileInfo(int nFile, const CBlockFileInfo &fileinfo);\n     bool ReadLastBlockFile(int &nFile);\n-    bool WriteLastBlockFile(int nFile);\n     bool WriteReindexing(bool fReindex);\n     bool ReadReindexing(bool &fReindex);\n     bool ReadTxIndex(const uint256 &txid, CDiskTxPos &pos);"
      }
    ]
  }
]