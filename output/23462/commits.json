[
  {
    "sha": "9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
    "node_id": "C_kwDOABII59oAKDlhMWFkN2JjMGRkOGEwNzY5NzM4Y2E0ZGZmYmViOGQ1NTQzOGIwZGM",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-11-07T12:13:39Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-11-13T14:54:56Z"
      },
      "message": "test: Enable SC2086 shellcheck rule",
      "tree": {
        "sha": "eb2ec6cb2b8dd61d246e0e077b875afe445044d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb2ec6cb2b8dd61d246e0e077b875afe445044d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmGP0cAACgkQQQEIES5+\nqB/6TA//XaX6sPGzuPkC8JFMQBbPVgtaK1BhA4qcGUXwuf3yBX+qMx0hbHUVzago\nr8rE7infEWv+GDoCJM6eDRF4gHzzoacQVBonqUfVDPUVYs5wWWaiiDUocYefPKof\no3Vd7R/x0X1A812oiilW3ocpYkobMG1TsPSTBxJ7rfd9yT5cbpFeKJmgAb64+Dg+\ni1BcwK96AXGdc217p6z02HnoZ6AX9c9r6ATlL+ga9QIbRR9D7rkc+ar/tMq/xlyj\nHJBg7H5CHEG/FEXzkyPelXgINVifGcDonTFC0gDVeR2csiByMmKxbMUpNTewOucj\nYQcSF5jYe/ZpNxm7omCHEMY4xqTNt1fBRpm+vtlt53WB/X3sRjEq9GN6P1lWd1+t\nU1QhwAxbTj2fNSfnK2KHjWVFS1K0e9y4/BjA4kfXsYNYpAmWdT4uyQYTlhk6sI6n\ngAlOrDYLrdfVHeIZHxBSuzN10wC9HI/OweXz3FvQlLlpkMoC7R8jF4XhKRR70D1a\nDqEIpGicx4gykNRYLSAl+9PCpaO4Yu+bnuqtMSUnMij76MXI0QFOQgonBkT0KrMi\niuvMK95ED4A0pZ/0Lu3HDknsf58Zv5zNza+TalPHMQFDa9bVidTaCZcibeJHQamV\n3VWnz1pB039ebz474JneR9blsBqaHBojd3A9LYFAcqRgquKjhas=\n=r0Ii\n-----END PGP SIGNATURE-----",
        "payload": "tree eb2ec6cb2b8dd61d246e0e077b875afe445044d0\nparent 5cc083cd46ad71510f56af957e2e8733c388c6f1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1636287219 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1636815296 +0200\n\ntest: Enable SC2086 shellcheck rule\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc083cd46ad71510f56af957e2e8733c388c6f1"
      }
    ],
    "stats": {
      "total": 119,
      "additions": 62,
      "deletions": 57
    },
    "files": [
      {
        "sha": "14b7b98782f96d2df6f66c93fac20deb5ee6cc6f",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -15,5 +15,5 @@ export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1 v0.20.1\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-reduce-exports\n+export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-reduce-exports \\\n --enable-debug --disable-fuzz-binary  CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CC=gcc-8 CXX=g++-8\""
      },
      {
        "sha": "eb19b9ee3652958f234aa856d475581e610e7351",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -12,6 +12,7 @@ fi\n \n if [ \"$CI_OS_NAME\" == \"macos\" ]; then\n   sudo -H pip3 install --upgrade pip\n+  # shellcheck disable=SC2086\n   IN_GETOPT_BIN=\"/usr/local/opt/gnu-getopt/bin/getopt\" ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n fi\n \n@@ -39,6 +40,7 @@ if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n     systemctl restart docker\n   fi\n \n+  # shellcheck disable=SC2086\n   DOCKER_ID=$(docker run $DOCKER_ADMIN --rm --interactive --detach --tty \\\n                   --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n                   --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n@@ -54,7 +56,7 @@ else\n fi\n \n DOCKER_EXEC () {\n-  $DOCKER_CI_CMD_PREFIX bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n+  $DOCKER_CI_CMD_PREFIX bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd \\\"$P_CI_DIR\\\" && $*\"\n }\n export -f DOCKER_EXEC\n \n@@ -64,11 +66,12 @@ fi\n \n if [[ $DOCKER_NAME_TAG == centos* ]]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC dnf -y install epel-release\n-  ${CI_RETRY_EXE} DOCKER_EXEC dnf -y --allowerasing install $DOCKER_PACKAGES $PACKAGES\n+  ${CI_RETRY_EXE} DOCKER_EXEC dnf -y --allowerasing install \"$DOCKER_PACKAGES\" \"$PACKAGES\"\n elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n-  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y \"$PACKAGES\" \"$DOCKER_PACKAGES\"\n   if [ -n \"$PIP_PACKAGES\" ]; then\n+    # shellcheck disable=SC2086\n     ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n   fi\n fi\n@@ -85,8 +88,8 @@ DOCKER_EXEC echo \"Free disk space:\"\n DOCKER_EXEC df -h\n \n if [ \"$RUN_FUZZ_TESTS\" = \"true\" ] || [ \"$RUN_UNIT_TESTS\" = \"true\" ] || [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  if [ ! -d ${DIR_QA_ASSETS} ]; then\n-    DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+  if [ ! -d \"${DIR_QA_ASSETS}\" ]; then\n+    DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets \"${DIR_QA_ASSETS}\"\n   fi\n \n   export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n@@ -106,17 +109,17 @@ fi\n \n if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n   echo \"Create $BASE_ROOT_DIR\"\n-  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n+  DOCKER_EXEC rsync -a /ro_base/ \"$BASE_ROOT_DIR\"\n fi\n \n if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n   echo \"Setup to use BusyBox utils\"\n-  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n+  DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/bins/\"\n   # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n   # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n   # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n   # shellcheck disable=SC1010\n-  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n+  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) \"${BASE_SCRATCH_DIR}/bins/\\$util\"\\; done\n   # Print BusyBox version\n   DOCKER_EXEC patch --help\n fi"
      },
      {
        "sha": "702b84d152944bef495177e46bbb1dde120893bf",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -8,12 +8,12 @@ export LC_ALL=C.UTF-8\n \n # Make sure default datadir does not exist and is never read by creating a dummy file\n if [ \"$CI_OS_NAME\" == \"macos\" ]; then\n-  echo > $HOME/Library/Application\\ Support/Bitcoin\n+  echo > \"${HOME}/Library/Application Support/Bitcoin\"\n else\n   DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n fi\n \n-DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n+DOCKER_EXEC mkdir -p \"${DEPENDS_DIR}/SDKs\" \"${DEPENDS_DIR}/sdk-sources\"\n \n OSX_SDK_BASENAME=\"Xcode-${XCODE_VERSION}-${XCODE_BUILD_ID}-extracted-SDK-with-libcxx-headers.tar.gz\"\n OSX_SDK_PATH=\"${DEPENDS_DIR}/sdk-sources/${OSX_SDK_BASENAME}\"\n@@ -42,7 +42,7 @@ if [ -n \"$XCODE_VERSION\" ] && [ -f \"$OSX_SDK_PATH\" ]; then\n   DOCKER_EXEC tar -C \"${DEPENDS_DIR}/SDKs\" -xf \"$OSX_SDK_PATH\"\n fi\n if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n+  DOCKER_EXEC update-alternatives --set \"${HOST}-g++\" \\$\\(which \"${HOST}-g++-posix\"\\)\n fi\n if [ -z \"$NO_DEPENDS\" ]; then\n   if [[ $DOCKER_NAME_TAG == centos* ]]; then\n@@ -53,7 +53,7 @@ if [ -z \"$NO_DEPENDS\" ]; then\n   else\n     SHELL_OPTS=\"CONFIG_SHELL=\"\n   fi\n-  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+  DOCKER_EXEC \"$SHELL_OPTS\" make \"$MAKEJOBS\" -C depends HOST=\"$HOST\" \"$DEP_OPTS\"\n fi\n if [ -n \"$PREVIOUS_RELEASES_TO_DOWNLOAD\" ]; then\n   DOCKER_EXEC test/get_previous_releases.py -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\""
      },
      {
        "sha": "c63724d5857feb3550010de1bd6c9f51f05ca844",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -9,7 +9,7 @@ export LC_ALL=C.UTF-8\n if [ -n \"$ANDROID_TOOLS_URL\" ]; then\n   DOCKER_EXEC make distclean || true\n   DOCKER_EXEC ./autogen.sh\n-  DOCKER_EXEC ./configure $BITCOIN_CONFIG --prefix=$DEPENDS_DIR/aarch64-linux-android || ( (DOCKER_EXEC cat config.log) && false)\n+  DOCKER_EXEC ./configure \"$BITCOIN_CONFIG\" --prefix=\"${DEPENDS_DIR}/aarch64-linux-android\" || ( (DOCKER_EXEC cat config.log) && false)\n   DOCKER_EXEC \"make $MAKEJOBS && cd src/qt && ANDROID_HOME=${ANDROID_HOME} ANDROID_NDK_HOME=${ANDROID_NDK_HOME} make apk\"\n   exit 0\n fi\n@@ -29,13 +29,13 @@ fi\n DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}\"\n export P_CI_DIR=\"${BASE_BUILD_DIR}\"\n \n-DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache \"$BITCOIN_CONFIG_ALL\" \"$BITCOIN_CONFIG\" || ( (DOCKER_EXEC cat config.log) && false)\n \n-DOCKER_EXEC make distdir VERSION=$HOST\n+DOCKER_EXEC make distdir VERSION=\"$HOST\"\n \n export P_CI_DIR=\"${BASE_BUILD_DIR}/bitcoin-$HOST\"\n \n-DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+DOCKER_EXEC ./configure --cache-file=../config.cache \"$BITCOIN_CONFIG_ALL\" \"$BITCOIN_CONFIG\" || ( (DOCKER_EXEC cat config.log) && false)\n \n set -o errtrace\n trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n@@ -48,7 +48,7 @@ if [[ ${USE_MEMORY_SANITIZER} == \"true\" ]]; then\n   DOCKER_EXEC 'grep -v HAVE_SYS_GETRANDOM src/config/bitcoin-config.h > src/config/bitcoin-config.h.tmp && mv src/config/bitcoin-config.h.tmp src/config/bitcoin-config.h'\n fi\n \n-DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n+DOCKER_EXEC make \"$MAKEJOBS\" \"$GOAL\" || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make \"$GOAL\" V=1 ; false )\n \n DOCKER_EXEC \"ccache --version | head -n 1 && ccache --show-stats\"\n DOCKER_EXEC du -sh \"${DEPENDS_DIR}\"/*/"
      },
      {
        "sha": "ce9252026a6f481c947635f2e909b2814d32edd6",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -8,13 +8,13 @@ export LC_ALL=C.UTF-8\n \n if [[ $HOST = *-mingw32 ]]; then\n   # Generate all binaries, so that they can be wrapped\n-  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make \"$MAKEJOBS\" -C src/secp256k1 VERBOSE=1\n   DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-wine.sh\"\n fi\n \n if [ -n \"$QEMU_USER_CMD\" ]; then\n   # Generate all binaries, so that they can be wrapped\n-  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make \"$MAKEJOBS\" -C src/secp256k1 VERBOSE=1\n   DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n fi\n \n@@ -23,21 +23,21 @@ if [ -n \"$USE_VALGRIND\" ]; then\n fi\n \n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n-  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  DOCKER_EXEC \"${TEST_RUNNER_ENV}\" DIR_UNIT_TEST_DATA=\"${DIR_UNIT_TEST_DATA}\" LD_LIBRARY_PATH=\"${DEPENDS_DIR}/${HOST}/lib\" make \"$MAKEJOBS\" check VERBOSE=1\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  DOCKER_EXEC ${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n+  DOCKER_EXEC \"${TEST_RUNNER_ENV}\" DIR_UNIT_TEST_DATA=\"${DIR_UNIT_TEST_DATA}\" LD_LIBRARY_PATH=\"${DEPENDS_DIR}/${HOST}/lib\" \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n fi\n \n if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib ${TEST_RUNNER_ENV} test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 --timeout-factor=${TEST_RUNNER_TIMEOUT_FACTOR} ${TEST_RUNNER_EXTRA} --quiet --failfast\n+  DOCKER_EXEC LD_LIBRARY_PATH=\"${DEPENDS_DIR}/${HOST}/lib\" \"${TEST_RUNNER_ENV}\" test/functional/test_runner.py --ci \"$MAKEJOBS\" --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 --timeout-factor=\"${TEST_RUNNER_TIMEOUT_FACTOR}\" \"${TEST_RUNNER_EXTRA}\" --quiet --failfast\n fi\n \n if [ \"$RUN_SECURITY_TESTS\" = \"true\" ]; then\n   DOCKER_EXEC make test-security-check\n fi\n \n if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib test/fuzz/test_runner.py ${FUZZ_TESTS_CONFIG} $MAKEJOBS -l DEBUG ${DIR_FUZZ_IN}\n+  DOCKER_EXEC LD_LIBRARY_PATH=\"${DEPENDS_DIR}/${HOST}/lib\" test/fuzz/test_runner.py \"${FUZZ_TESTS_CONFIG}\" \"$MAKEJOBS\" -l DEBUG \"${DIR_FUZZ_IN}\"\n fi"
      },
      {
        "sha": "649b52ed60afbb4ac88e074b9820250060be7eea",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/minisketch/test{,-verify},src/univalue/{no_nul,test_json,unitester,object}}; do\n     # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename \"$b_name\")); do\n       echo \"Wrap $b ...\"\n       mv \"$b\" \"${b}_orig\"\n       echo '#!/usr/bin/env bash' > \"$b\""
      },
      {
        "sha": "d3cdf77ded2f28fb6a4197cb679512a70105ac39",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n     # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename \"$b_name\")); do\n       echo \"Wrap $b ...\"\n       mv \"$b\" \"${b}_orig\"\n       echo '#!/usr/bin/env bash' > \"$b\""
      },
      {
        "sha": "2550abdb402d4cb0ed0dde1d11a0a50fe5577e31",
        "filename": "ci/test/wrap-wine.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/wrap-wine.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/ci/test/wrap-wine.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-wine.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/minisketch/test{,-verify},src/univalue/{no_nul,test_json,unitester,object}}.exe; do\n     # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name \"$(basename $b_name)\"); do\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name \"$(basename \"$b_name\")\"); do\n       if (file \"$b\" | grep \"Windows\"); then\n         echo \"Wrap $b ...\"\n         mv \"$b\" \"${b}_orig\""
      },
      {
        "sha": "753a5a2494052c96691737e135c775555592b39a",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -17,7 +17,7 @@ WALLET_TOOL=${WALLET_TOOL:-$BINDIR/bitcoin-wallet}\n BITCOINUTIL=${BITCOINQT:-$BINDIR/bitcoin-util}\n BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n \n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+[ ! -x \"$BITCOIND\" ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n \n # Don't allow man pages to be generated for binaries built from a dirty tree\n DIRTY=\"\"\n@@ -30,7 +30,7 @@ done\n if [ -n \"$DIRTY\" ]\n then\n   echo -e \"WARNING: the following binaries were built from a dirty tree:\\n\"\n-  echo -e $DIRTY\n+  echo -e \"$DIRTY\"\n   echo \"man pages generated from dirty binaries should NOT be committed.\"\n   echo \"To properly generate man pages, please commit your changes to the above binaries, rebuild them, then run this script again.\"\n fi\n@@ -46,8 +46,8 @@ $BITCOIND --version | sed -n '1!p' >> footer.h2m\n \n for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $WALLET_TOOL $BITCOINUTIL $BITCOINQT; do\n   cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+  help2man -N --version-string=\"${BTCVER[0]}\" --include=footer.h2m -o \"${MANDIR}/${cmdname}.1\" \"${cmd}\"\n+  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" \"${MANDIR}/${cmdname}.1\"\n done\n \n rm -f footer.h2m"
      },
      {
        "sha": "36a4ea08f6589976dac6db790ed3e141fad701a2",
        "filename": "contrib/install_db4.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -20,7 +20,7 @@ expand_path() {\n   cd \"${1}\" && pwd -P\n }\n \n-BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n+BDB_PREFIX=\"$(expand_path \"${1}\")/db4\"; shift;\n BDB_VERSION='db-4.8.30.NC'\n BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\""
      },
      {
        "sha": "813e99f9da5fad580ddb53a161d1a893d39db8a1",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -22,6 +22,6 @@ if [ -z \"$SIGNATURE\" ]; then\n   exit 1\n fi\n \n-${SIGNAPPLE} apply ${UNSIGNED} ${SIGNATURE}\n+${SIGNAPPLE} apply \"${UNSIGNED}\" \"${SIGNATURE}\"\n mv ${ROOTDIR} ${OUTDIR}\n echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "59d18137629035a36b26ea4a5316d1712b102ed3",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -9,11 +9,11 @@ if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n fi\n \n while read LINE; do\n-    set -- A $LINE\n+    set -- A \"$LINE\"\n     if [ \"$4\" != \"refs/heads/master\" ]; then\n         continue\n     fi\n-    if ! ./contrib/verify-commits/verify-commits.py $3 > /dev/null 2>&1; then\n+    if ! ./contrib/verify-commits/verify-commits.py \"$3\" > /dev/null 2>&1; then\n         echo \"ERROR: A commit is not signed, can't push\"\n         ./contrib/verify-commits/verify-commits.py\n         exit 1"
      },
      {
        "sha": "2ced24cd7bb0f8d5529e46553748295b559ba3cd",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -26,7 +26,7 @@ if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" ] && [ -e \"$(command -v git)\" ] && [ \"$\n \n     # if latest commit is tagged and not dirty, then override using the tag name\n     RAWDESC=$(git describe --abbrev=0 2>/dev/null)\n-    if [ \"$(git rev-parse HEAD)\" = \"$(git rev-list -1 $RAWDESC 2>/dev/null)\" ]; then\n+    if [ \"$(git rev-parse HEAD)\" = \"$(git rev-list -1 \"$RAWDESC\" 2>/dev/null)\" ]; then\n         git diff-index --quiet HEAD -- && GIT_TAG=$RAWDESC\n     fi\n "
      },
      {
        "sha": "647ee1aed86d3284831d63a87b5a0e318af78a75",
        "filename": "src/qt/res/animation/makespinner.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/src/qt/res/animation/makespinner.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/src/qt/res/animation/makespinner.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/animation/makespinner.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -5,10 +5,10 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C\n-FRAMEDIR=$(dirname $0)\n+FRAMEDIR=$(dirname \"$0\")\n for i in {0..35}\n do\n-    frame=$(printf \"%03d\" $i)\n+    frame=$(printf \"%03d\" \"$i\")\n     angle=$((i * 10))\n-    convert $FRAMEDIR/../src/spinner.png -background \"rgba(0,0,0,0.0)\" -distort SRT $angle $FRAMEDIR/spinner-$frame.png\n+    convert \"${FRAMEDIR}/../src/spinner.png\" -background \"rgba(0,0,0,0.0)\" -distort SRT $angle \"${FRAMEDIR}/spinner-${frame}.png\"\n done"
      },
      {
        "sha": "912bb24f9dfa7214a8a7e911406e3cbfa1618a0f",
        "filename": "test/lint/commit-script-check.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/commit-script-check.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -12,18 +12,18 @@\n # one. Any remaining diff signals an error.\n \n export LC_ALL=C\n-if test -z $1; then\n+if test -z \"$1\"; then\n     echo \"Usage: $0 <commit>...\"\n     exit 1\n fi\n \n RET=0\n PREV_BRANCH=$(git name-rev --name-only HEAD)\n PREV_HEAD=$(git rev-parse HEAD)\n-for commit in $(git rev-list --reverse $1); do\n-    if git rev-list -n 1 --pretty=\"%s\" $commit | grep -q \"^scripted-diff:\"; then\n-        git checkout --quiet $commit^ || exit\n-        SCRIPT=\"$(git rev-list --format=%b -n1 $commit | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d')\"\n+for commit in $(git rev-list --reverse \"$1\"); do\n+    if git rev-list -n 1 --pretty=\"%s\" \"$commit\" | grep -q \"^scripted-diff:\"; then\n+        git checkout --quiet \"$commit\"^ || exit\n+        SCRIPT=\"$(git rev-list --format=%b -n1 \"$commit\" | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d')\"\n         if test -z \"$SCRIPT\"; then\n             echo \"Error: missing script for: $commit\"\n             echo \"Failed\"\n@@ -32,16 +32,16 @@ for commit in $(git rev-list --reverse $1); do\n             echo \"Running script for: $commit\"\n             echo \"$SCRIPT\"\n             (eval \"$SCRIPT\")\n-            git --no-pager diff --exit-code $commit && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n+            git --no-pager diff --exit-code \"$commit\" && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n         fi\n         git reset --quiet --hard HEAD\n      else\n-        if git rev-list \"--format=%b\" -n1 $commit | grep -q '^-\\(BEGIN\\|END\\)[ a-zA-Z]*-$'; then\n+        if git rev-list \"--format=%b\" -n1 \"$commit\" | grep -q '^-\\(BEGIN\\|END\\)[ a-zA-Z]*-$'; then\n             echo \"Error: script block marker but no scripted-diff in title of commit $commit\"\n             echo \"Failed\"\n             RET=1\n         fi\n     fi\n done\n-git checkout --quiet $PREV_BRANCH 2>/dev/null || git checkout --quiet $PREV_HEAD\n+git checkout --quiet \"$PREV_BRANCH\" 2>/dev/null || git checkout --quiet \"$PREV_HEAD\"\n exit $RET"
      },
      {
        "sha": "cdaa5752ac9e1f7100148a380ba2d0ece93af49e",
        "filename": "test/lint/git-subtree-check.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/git-subtree-check.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -82,6 +82,7 @@ if [ -z \"$latest_squash\" ]; then\n     echo \"ERROR: $DIR is not a subtree\" >&2\n     exit 2\n fi\n+# shellcheck disable=SC2086\n set $latest_squash\n old=$1\n rev=$2\n@@ -92,6 +93,7 @@ if [ -z \"$tree_actual\" ]; then\n     echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n     exit 1\n fi\n+# shellcheck disable=SC2086\n set $tree_actual\n tree_actual_type=$2\n tree_actual_tree=$3\n@@ -102,23 +104,23 @@ if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n fi\n \n # get the tree at the time of the last subtree update\n-tree_commit=$(git show -s --format=\"%T\" $old)\n+tree_commit=$(git show -s --format=\"%T\" \"$old\")\n echo \"$DIR in $COMMIT was last updated in commit $old (tree $tree_commit)\"\n \n # ... and compare the actual tree with it\n if [ \"$tree_actual_tree\" != \"$tree_commit\" ]; then\n-    git diff $tree_commit $tree_actual_tree >&2\n+    git diff \"$tree_commit\" \"$tree_actual_tree\" >&2\n     echo \"FAIL: subtree directory was touched without subtree merge\" >&2\n     exit 1\n fi\n \n if [ \"$check_remote\" != \"0\" ]; then\n     # get the tree in the subtree commit referred to\n-    if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n+    if [ \"d$(git cat-file -t \"$rev\" 2>/dev/null)\" != dcommit ]; then\n         echo \"subtree commit $rev unavailable: cannot compare. Did you add and fetch the remote?\" >&2\n         exit 1\n     fi\n-    tree_subtree=$(git show -s --format=\"%T\" $rev)\n+    tree_subtree=$(git show -s --format=\"%T\" \"$rev\")\n     echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n \n     # ... and compare the actual tree with it"
      },
      {
        "sha": "f9ede4bc68d1ce09a3aee5c32be76fe5ba2e0b35",
        "filename": "test/lint/lint-files.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-files.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-files.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-files.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -3,5 +3,5 @@\n export LC_ALL=C\n \n set -e\n-cd \"$(dirname $0)/../..\"\n+cd \"$(dirname \"$0\")/../..\"\n test/lint/lint-files.py"
      },
      {
        "sha": "d1ab72658ba9084f73809defeae8dd79522b61ab",
        "filename": "test/lint/lint-git-commit-check.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-git-commit-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-git-commit-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-git-commit-check.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -38,7 +38,7 @@ while IFS= read -r commit_hash  || [[ -n \"$commit_hash\" ]]; do\n     while IFS= read -r line || [[ -n \"$line\" ]]; do\n         n_line=$((n_line+1))\n         length=${#line}\n-        if [ $n_line -eq 2 ] && [ $length -ne 0 ]; then\n+        if [ $n_line -eq 2 ] && [ \"$length\" -ne 0 ]; then\n             echo \"The subject line of commit hash ${commit_hash} is followed by a non-empty line. Subject lines should always be followed by a blank line.\"\n             EXIT_CODE=1\n         fi"
      },
      {
        "sha": "9b19699dab6ef1084ed060da373fd6b4e8f2324f",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -12,7 +12,7 @@ export LC_ALL=C\n IGNORE_REGEXP=\"/(leveldb|secp256k1|minisketch|univalue|crc32c)/\"\n \n # cd to root folder of git repo for git ls-files to work properly\n-cd \"$(dirname $0)/../..\" || exit 1\n+cd \"$(dirname \"$0\")/../..\" || exit 1\n \n filter_suffix() {\n     git ls-files | grep -E \"^src/.*\\.${1}\"'$' | grep -Ev \"${IGNORE_REGEXP}\""
      },
      {
        "sha": "1a12df65911612e5538a117784604dd5da68872b",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "patch": "@@ -11,7 +11,6 @@ export LC_ALL=C\n # Disabled warnings:\n disabled=(\n     SC2046 # Quote this to prevent word splitting.\n-    SC2086 # Double quote to prevent globbing and word splitting.\n     SC2162 # read without -r will mangle backslashes.\n )\n \n@@ -24,8 +23,9 @@ fi\n \n SHELLCHECK_CMD=(shellcheck --external-sources --check-sourced)\n EXCLUDE=\"--exclude=$(IFS=','; echo \"${disabled[*]}\")\"\n-SOURCED_FILES=$(git ls-files | xargs gawk '/^# shellcheck shell=/ {print FILENAME} {nextfile}')  # Check shellcheck directive used for sourced files\n-if ! \"${SHELLCHECK_CMD[@]}\" \"$EXCLUDE\" $SOURCED_FILES $(git ls-files -- '*.sh' | grep -vE 'src/(leveldb|secp256k1|minisketch|univalue)/'); then\n+# Check shellcheck directive used for sourced files\n+mapfile -t SOURCED_FILES < <(git ls-files | xargs gawk '/^# shellcheck shell=/ {print FILENAME} {nextfile}')\n+if ! \"${SHELLCHECK_CMD[@]}\" \"$EXCLUDE\" \"${SOURCED_FILES[@]}\" $(git ls-files -- '*.sh' | grep -vE 'src/(leveldb|secp256k1|minisketch|univalue)/'); then\n     EXIT_CODE=1\n fi\n "
      }
    ]
  },
  {
    "sha": "fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
    "node_id": "C_kwDOABII59oAKGZlMGZmNTY5ZWE2YzM1M2Y4ODYwOWMwZjVmOWI2ZmE4MGZmNzRmMTU",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-11-07T12:37:56Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-11-13T16:05:26Z"
      },
      "message": "test: Enable SC2046 shellcheck rule",
      "tree": {
        "sha": "53ed10068a39ef9a8423811ea75bdb8d4de3d0b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53ed10068a39ef9a8423811ea75bdb8d4de3d0b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmGP4kYACgkQQQEIES5+\nqB8LYRAAtnpX2OLyECkFqWanLERXrDy2fdVRvbxNJgVr56Agq7yh2geLWaCwSlx+\n3i6QnZrPnG/2JuELCGo4w4taswGkS4qz77Hn6l/M4ysBSrgGe5frFH80iGLg5UBl\nSmxxudsG8oK83g0a3ZeHQKMOzar8oHi1eTeK3v2h7Yv2JQSb9iuNa/t6IYHrdad3\nxENrKqMZEQPrUVmwZ47L/1DiqdZzxErf+9acisRkYHxBRUMB29uApEulrn5O/K3c\n1QZ/f+OYESjXMLYSefURAQMcMMeyClNKtBsqa7v86LkeOIiSvL1qm5/h7D7XSowT\noVCAmnPoolcf4yqKU5+Id9iZXIAaTYxNFRcQPaR+Ys40ZFrpyqiEj9dg6fYViPoh\nR9kFh0yBDI6uZWdtLRXotTLke0ES7dMS0T5e4cbdLM6iryjseSPhD7t5Tqh+EVkr\nMGn6J9c3MjOtmCH157jGb2i1LnznAuWDPBbEM6eePZD7T5W41BKExQzBLACKbAkS\nAt1UAWgR6OFd5uwpgFkNdYWARdZI41pQFfUnGtOg6fxGCN9wyYimmK0gbnzNPvwL\nos1GuaJqMxfDXveiq9Pl1nHVgIn9TnXB+LRI4mrNOEGWa/vI911/S3IzNQtP9NHb\niPyrRrjv+1FncgSnJoKIxroLhOnGr6oSk5EE5lNjLWHXXDjD/Bk=\n=xUNb\n-----END PGP SIGNATURE-----",
        "payload": "tree 53ed10068a39ef9a8423811ea75bdb8d4de3d0b3\nparent 9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1636288676 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1636819526 +0200\n\ntest: Enable SC2046 shellcheck rule\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a1ad7bc0dd8a0769738ca4dffbeb8d55438b0dc"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 17,
      "deletions": 13
    },
    "files": [
      {
        "sha": "251ac76cad5acf2f2a19e0fc19fd7735293e1533",
        "filename": "ci/lint/04_install.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -8,8 +8,8 @@ export LC_ALL=C\n \n ${CI_RETRY_EXE} apt-get update\n ${CI_RETRY_EXE} apt-get install -y clang-format-9 python3-pip curl git gawk jq\n-update-alternatives --install /usr/bin/clang-format      clang-format      $(which clang-format-9     ) 100\n-update-alternatives --install /usr/bin/clang-format-diff clang-format-diff $(which clang-format-diff-9) 100\n+update-alternatives --install /usr/bin/clang-format      clang-format      \"$(which clang-format-9     )\" 100\n+update-alternatives --install /usr/bin/clang-format-diff clang-format-diff \"$(which clang-format-diff-9)\" 100\n \n ${CI_RETRY_EXE} pip3 install codespell==2.0.0\n ${CI_RETRY_EXE} pip3 install flake8==3.8.3"
      },
      {
        "sha": "16bc00285f9ce40712514e17d955dcaf64975204",
        "filename": "ci/lint/06_script.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -31,7 +31,8 @@ if [ \"$CIRRUS_REPO_FULL_NAME\" = \"bitcoin/bitcoin\" ] && [ \"$CIRRUS_PR\" = \"\" ] ; t\n     # sanity checking only a few (10) commits seems sufficient and cheap.\n     git log HEAD~10 -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n     git log HEAD~10 -1 --format='%H' > ./contrib/verify-commits/trusted-git-root\n-    ${CI_RETRY_EXE}  gpg --keyserver hkps://keys.openpgp.org --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n+    mapfile -t KEYS < contrib/verify-commits/trusted-keys\n+    ${CI_RETRY_EXE} gpg --keyserver hkps://keys.openpgp.org --recv-keys \"${KEYS[@]}\" &&\n     ./contrib/verify-commits/verify-commits.py;\n fi\n "
      },
      {
        "sha": "8a416513f9d7492f6069e88ed9f7415efb028a7b",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -82,7 +82,7 @@ if [ \"$CI_OS_NAME\" == \"macos\" ]; then\n else\n   DOCKER_EXEC free -m -h\n   DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n-  DOCKER_EXEC echo $(lscpu | grep Endian)\n+  DOCKER_EXEC echo \"$(lscpu | grep Endian)\"\n fi\n DOCKER_EXEC echo \"Free disk space:\"\n DOCKER_EXEC df -h"
      },
      {
        "sha": "320fca78ede8980caa5383aaf6691cff024fce36",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/minisketch/test{,-verify},src/univalue/{no_nul,test_json,unitester,object}}; do\n     # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename \"$b_name\")); do\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name \"$(basename \"$b_name\")\"); do\n       echo \"Wrap $b ...\"\n       mv \"$b\" \"${b}_orig\"\n       echo '#!/usr/bin/env bash' > \"$b\""
      },
      {
        "sha": "38cc5e0ca77219e97f8f4a36d3f47b8a085b2d40",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n     # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename \"$b_name\")); do\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name \"$(basename \"$b_name\")\"); do\n       echo \"Wrap $b ...\"\n       mv \"$b\" \"${b}_orig\"\n       echo '#!/usr/bin/env bash' > \"$b\""
      },
      {
        "sha": "fb5cb4a4d9dd3f70c0048d9b95d835e372960734",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -23,6 +23,7 @@ TIMESERVER=http://timestamp.comodoca.com\n CERTFILE=\"win-codesign.cert\"\n \n mkdir -p \"${OUTSUBDIR}\"\n+# shellcheck disable=SC2046\n basename -a $(ls -1 \"${SRCDIR}\"/*-unsigned.exe) | while read UNSIGNED; do\n   echo Signing \"${UNSIGNED}\"\n   \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -h sha256 -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\""
      },
      {
        "sha": "247bfb310ae7fec6e7bba1ad6364f77f09d0cf2e",
        "filename": "test/lint/lint-python-dead-code.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-python-dead-code.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-python-dead-code.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python-dead-code.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -15,9 +15,8 @@ fi\n \n # --min-confidence 100 will only report code that is guaranteed to be unused within the analyzed files.\n # Any value below 100 introduces the risk of false positives, which would create an unacceptable maintenance burden.\n-if ! vulture \\\n-    --min-confidence 100 \\\n-    $(git ls-files -- \"*.py\"); then\n+mapfile -t FILES < <(git ls-files -- \"*.py\")\n+if ! vulture --min-confidence 100 \"${FILES[@]}\"; then\n     echo \"Python dead code detection found some issues\"\n     exit 1\n fi"
      },
      {
        "sha": "96b34d715ed5f9b67f37da5e8085aebc7c7eaab7",
        "filename": "test/lint/lint-python.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-python.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-python.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -92,6 +92,7 @@ fi\n \n EXIT_CODE=0\n \n+# shellcheck disable=SC2046\n if ! PYTHONWARNINGS=\"ignore\" flake8 --ignore=B,C,E,F,I,N,W --select=$(IFS=\",\"; echo \"${enabled[*]}\") $(\n     if [[ $# == 0 ]]; then\n         git ls-files \"*.py\"\n@@ -102,7 +103,8 @@ if ! PYTHONWARNINGS=\"ignore\" flake8 --ignore=B,C,E,F,I,N,W --select=$(IFS=\",\"; e\n     EXIT_CODE=1\n fi\n \n-if ! mypy --show-error-codes $(git ls-files \"test/functional/*.py\" \"contrib/devtools/*.py\"); then\n+mapfile -t FILES < <(git ls-files \"test/functional/*.py\" \"contrib/devtools/*.py\")\n+if ! mypy --show-error-codes \"${FILES[@]}\"; then\n     EXIT_CODE=1\n fi\n "
      },
      {
        "sha": "d697dfcbea82e787709ceceb205befadf4db97d4",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -10,7 +10,6 @@ export LC_ALL=C\n \n # Disabled warnings:\n disabled=(\n-    SC2046 # Quote this to prevent word splitting.\n     SC2162 # read without -r will mangle backslashes.\n )\n \n@@ -25,7 +24,8 @@ SHELLCHECK_CMD=(shellcheck --external-sources --check-sourced)\n EXCLUDE=\"--exclude=$(IFS=','; echo \"${disabled[*]}\")\"\n # Check shellcheck directive used for sourced files\n mapfile -t SOURCED_FILES < <(git ls-files | xargs gawk '/^# shellcheck shell=/ {print FILENAME} {nextfile}')\n-if ! \"${SHELLCHECK_CMD[@]}\" \"$EXCLUDE\" \"${SOURCED_FILES[@]}\" $(git ls-files -- '*.sh' | grep -vE 'src/(leveldb|secp256k1|minisketch|univalue)/'); then\n+mapfile -t FILES < <(git ls-files -- '*.sh' | grep -vE 'src/(leveldb|secp256k1|minisketch|univalue)/')\n+if ! \"${SHELLCHECK_CMD[@]}\" \"$EXCLUDE\" \"${SOURCED_FILES[@]}\" \"${FILES[@]}\"; then\n     EXIT_CODE=1\n fi\n "
      },
      {
        "sha": "c98003de8d98ec8497b3dcfbd6145fb129692c72",
        "filename": "test/lint/lint-spelling.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-spelling.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15/test/lint/lint-spelling.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-spelling.sh?ref=fe0ff569ea6c353f88609c0f5f9b6fa80ff74f15",
        "patch": "@@ -15,6 +15,7 @@ if ! command -v codespell > /dev/null; then\n fi\n \n IGNORE_WORDS_FILE=test/lint/lint-spelling.ignore-words.txt\n-if ! codespell --check-filenames --disable-colors --quiet-level=7 --ignore-words=${IGNORE_WORDS_FILE} $(git ls-files -- \":(exclude)build-aux/m4/\" \":(exclude)contrib/seeds/*.txt\" \":(exclude)depends/\" \":(exclude)doc/release-notes/\" \":(exclude)src/leveldb/\" \":(exclude)src/crc32c/\" \":(exclude)src/qt/locale/\" \":(exclude)src/qt/*.qrc\" \":(exclude)src/secp256k1/\" \":(exclude)src/minisketch/\" \":(exclude)src/univalue/\" \":(exclude)contrib/builder-keys/keys.txt\" \":(exclude)contrib/guix/patches\"); then\n+mapfile -t FILES < <(git ls-files -- \":(exclude)build-aux/m4/\" \":(exclude)contrib/seeds/*.txt\" \":(exclude)depends/\" \":(exclude)doc/release-notes/\" \":(exclude)src/leveldb/\" \":(exclude)src/crc32c/\" \":(exclude)src/qt/locale/\" \":(exclude)src/qt/*.qrc\" \":(exclude)src/secp256k1/\" \":(exclude)src/minisketch/\" \":(exclude)src/univalue/\" \":(exclude)contrib/builder-keys/keys.txt\" \":(exclude)contrib/guix/patches\")\n+if ! codespell --check-filenames --disable-colors --quiet-level=7 --ignore-words=${IGNORE_WORDS_FILE} \"${FILES[@]}\"; then\n     echo \"^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in ${IGNORE_WORDS_FILE}\"\n fi"
      }
    ]
  }
]