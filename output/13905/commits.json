[
  {
    "sha": "869193f5a6398bb9e4a6f4a7aeb8d2203193c80f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjkxOTNmNWE2Mzk4YmI5ZTRhNmY0YTdhZWI4ZDIyMDMxOTNjODBm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-08-07T18:11:52Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-08-13T09:12:03Z"
      },
      "message": "docs: fixed bitcoin-cli -help output for help2man\n\nThe `help2man` parses a string containing two spaces between words with an issue:\nit gives out `.TP` and `.IP` commands instead of a single `.IP` command.\nRemoving an extra space fixes this issue.\nCurrently the `-help` output for the `-stdin` option looks without any issue due to eliminating\nof two spaces between words by a `FormatParagraph` call for this particular case.\nFor consistency and preventing from future regressions extra spaces have been removed from the both lines.\nThe redundant `strprintf` call has been removed aswell.",
      "tree": {
        "sha": "8e9e8e0ce4dff7174d8143538aa1b7871fd57ab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e9e8e0ce4dff7174d8143538aa1b7871fd57ab4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/869193f5a6398bb9e4a6f4a7aeb8d2203193c80f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/869193f5a6398bb9e4a6f4a7aeb8d2203193c80f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/869193f5a6398bb9e4a6f4a7aeb8d2203193c80f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/869193f5a6398bb9e4a6f4a7aeb8d2203193c80f/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d86aad287f07e20066138b9f909758ad7a2e098",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d86aad287f07e20066138b9f909758ad7a2e098",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d86aad287f07e20066138b9f909758ad7a2e098"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "96828d822f468208273433873682cb8c201830c0",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/869193f5a6398bb9e4a6f4a7aeb8d2203193c80f/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/869193f5a6398bb9e4a6f4a7aeb8d2203193c80f/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=869193f5a6398bb9e4a6f4a7aeb8d2203193c80f",
        "patch": "@@ -49,8 +49,8 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\", false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-stdinrpcpass\", strprintf(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\"), false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n \n     // Hidden\n     gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);"
      }
    ]
  }
]