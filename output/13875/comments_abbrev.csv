Sjors,2018-08-04T16:08:17Z,"Something like this, plus some release notes, should do? https://github.com/bitcoin/bitcoin/compare/master...Sjors:2018/08/nChainTx-64",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410459634,410459634,
MarcoFalke,2018-08-04T16:18:22Z,"Could also rename both to `m_num_tx` according to release notes? (That would also help with review, since each usage of the member would have to be checked anyway)",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410460341,410460341,
Sjors,2018-08-04T17:06:44Z,"@MarcoFalke done (I updated the link above)\n\nI used `m_chain_num_tx` as distinct from `nTx` which can later be renamed to `m_num_tx`. That rename surfaced a bunch of things I hadn't thought about, which should be better now.",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410463574,410463574,
Sjors,2018-08-04T18:55:13Z,"If it's still necessary by that time, the following soft fork should prevent any issues for existing clients (unless I missed something):\n\n1. The block which reaches `nChainTx == UINT32_MAX` much reach exactly `UINT32_MAX` total transactions.\n2. The block afer that must have `nTx >= 2`.\n3. Repeat this every UINT32_MAX transactions if necessary.\n\nAlternatively, even simpler:\n1. `nChai",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410470328,410470328,
gmaxwell,2018-08-04T19:28:05Z,"Or we could eliminate the number, the only real use for it is progress estimation (vs just using it as a one bit flag to indicate if a block has been processed yet or not), and we could simply use a single shared counter and be slightly off due to reorgs (which shouldn't be happening during IBD regardless). \n\nAs an aside, segwit didn't change the size of the minimum workable transaction size, ",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410472259,410472259,
Sjors,2018-08-04T19:38:36Z,"I noticed it was used for progress measurement, which the above soft fork wouldn't fix, but that seemed unimportant. ~I didn't realize it was _only_ used for that; I assumed it was doing more given the many occurances, but hadn't digged into what yet.~ (nvm; you didn't say that)",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410472894,410472894,
sipa,2018-08-04T20:23:27Z,"As far as I know it is used (a) for progress estimation and (b) being nonzero is used as proxy for ""we have downloaded all blocks up to this point in the chain"".\n\nIt certainly has no effect on consensus rules.",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410475315,410475315,
gmaxwell,2018-08-05T00:44:37Z,"We should change the non-progress part to be a flag.  Separately, we might want to drop the field entirely just to reduce the size of the index, progress can be done in ways that don't involve megabytes of memory usage. :)",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-410486930,410486930,
Sjors,2018-11-30T11:55:10Z,"Anyway, the comment change itself is correct, right? (ignoring the other branch where I suggest a fix)",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-443181956,443181956,
MarcoFalke,2018-12-22T20:49:52Z,Making it a global counter would mean we'd have to keep both around for some grace period so that they could be stored in the database and allow downgrading the software?,https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-449596849,449596849,
practicalswift,2019-03-21T10:11:14Z,"utACK ca5ed1b2462520ca2df598cb2af115028534587c\n\nAdding a comment makes sense and can't hurt. I think we are ready for merge.",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-475173352,475173352,
jamesob,2019-03-21T14:40:21Z,"utACK https://github.com/bitcoin/bitcoin/pull/13875/commits/ca5ed1b2462520ca2df598cb2af115028534587c\n\nAgree that `nChainTx` is probably worth dropping longterm in lieu of a ""do we have all blocks downloaded up to this point in the chain"" flag since the only other usage is for progress logging. Memory savings on `CBlockIndex` are probably worth a slightly fuzzier indication of progress.",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-475256720,475256720,
DrahtBot,2019-10-16T20:59:43Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-542889400,542889400,
instagibbs,2020-12-24T02:53:44Z,"> Agree that nChainTx is probably worth dropping longterm in lieu of a ""do we have all blocks downloaded up to this point in the chain"" flag since the only other usage is for progress logging. \n\nIt's actually used for `verifytxoutproof` to check the merkle proof depth is correct to avoid https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html",https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-750715082,750715082,
Sjors,2021-02-17T15:34:56Z,Rebased after #19806,https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-780638681,780638681,
practicalswift,2021-03-20T21:41:39Z,re-ACK ef72e9bd4124645fe2d00521a71c1c298d760225,https://github.com/bitcoin/bitcoin/pull/13875#issuecomment-803467451,803467451,
MarcoFalke,2019-03-21T14:57:30Z,"I'd rather just put the worst-worst case here, which is 60 bytes per tx. Since it seems unlikely in the first place that everyone would be using 1-in-1-out txs with just OP_TRUE as witness.\n\n```\n    4 bytes version\n    1 byte input count\n        36 bytes outpoint\n        1 byte scriptSigLen (0x00)\n        0 bytes scriptSig\n        4 bytes sequence\n    1 byte output count\n      ",https://github.com/bitcoin/bitcoin/pull/13875#discussion_r267798652,267798652,src/chain.h
Sjors,2019-10-21T16:12:28Z,"Rebased, and updated PR description and source comment.",https://github.com/bitcoin/bitcoin/pull/13875#discussion_r337108182,337108182,src/chain.h
theStack,2020-01-24T00:40:54Z,"Being really pedantic here, but I think the worst-case tx size is 61 bytes rather than 60:\n- Skeleton: Version (4 bytes) + In-Count (1 byte) + Out-Count (1 byte) + Lock-Time (4 bytes) => 10 bytes\n- Input: Outpoint (36 bytes) + scriptSigLen (1 byte) + SequenceNr (4 bytes) => 41 bytes\n- Output: Value (8 bytes) + scriptPubKeyLen (1 byte) + scriptPubKey (1 byte) => 10 bytes\n\nA 60 byte tx wou",https://github.com/bitcoin/bitcoin/pull/13875#discussion_r370427544,370427544,src/chain.h
gmaxwell,2020-01-24T18:55:58Z,"Yes? A transaction can have both an empty scriptsig and an emptyscriptpubkey. It isn't spending itself, after all.",https://github.com/bitcoin/bitcoin/pull/13875#discussion_r370789971,370789971,src/chain.h
theStack,2020-01-24T19:19:11Z,"Okay, good to know. The minimum tx size breakdown in the [PR description](https://github.com/bitcoin/bitcoin/pull/13875#issue-206196000) (as well as a [comment by MarcoFalke](https://github.com/bitcoin/bitcoin/pull/13875#discussion_r267798652)) included a 1-byte scriptPubKey (OP_TRUE, i.e. anyonecanspend), which led me to the wrong conclusion that empty scriptPubKeys are not valid.",https://github.com/bitcoin/bitcoin/pull/13875#discussion_r370799850,370799850,src/chain.h
