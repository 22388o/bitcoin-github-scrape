[
  {
    "sha": "967e06ad91f4a32ea12eeb4e45ebb1fed3e05156",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjdlMDZhZDkxZjRhMzJlYTEyZWViNGU0NWViYjFmZWQzZTA1MTU2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-10-31T19:34:34Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-10-31T19:34:34Z"
      },
      "message": "Fix warnings when building with -Wthread-safety-analysis\n\nThis fix makes the build pass when building with -Werror=thread-safety-analysis.\n\nPrior to this commit:\n\n```\nnet_processing.cpp:615:10: error: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\n    if (!vExtraTxnForCompact.size())\n         ^\nnet_processing.cpp:616:9: error: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\n        vExtraTxnForCompact.resize(max_extra_txn);\n        ^\nnet_processing.cpp:617:5: error: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\n    vExtraTxnForCompact[vExtraTxnForCompactIt] = std::make_pair(tx->GetWitnessHash(), tx);\n    ^\n3 errors generated.\nMakefile:5617: recipe for target 'libbitcoin_server_a-net_processing.o' failed\n```\n\nThe full -Wthread-safety-analysis machinery (including new annotations) is added\nin #11226 (>100 commits, awaiting review). This small fix is worth doing just to\nget the current master branch buildable under -Werror=thread-safety-analysis.",
      "tree": {
        "sha": "8f5554cebcace7d40ea4c0d070ed42c16f111576",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f5554cebcace7d40ea4c0d070ed42c16f111576"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/967e06ad91f4a32ea12eeb4e45ebb1fed3e05156",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/967e06ad91f4a32ea12eeb4e45ebb1fed3e05156",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/967e06ad91f4a32ea12eeb4e45ebb1fed3e05156",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/967e06ad91f4a32ea12eeb4e45ebb1fed3e05156/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8335cb478183d800e274f6e96f9d7269ae584220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8335cb478183d800e274f6e96f9d7269ae584220",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8335cb478183d800e274f6e96f9d7269ae584220"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "86d570cacac413765470024bd0455bcfc9781e98",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/967e06ad91f4a32ea12eeb4e45ebb1fed3e05156/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/967e06ad91f4a32ea12eeb4e45ebb1fed3e05156/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=967e06ad91f4a32ea12eeb4e45ebb1fed3e05156",
        "patch": "@@ -607,7 +607,7 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n // mapOrphanTransactions\n //\n \n-void AddToCompactExtraTransactions(const CTransactionRef& tx)\n+void AddToCompactExtraTransactions(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     size_t max_extra_txn = gArgs.GetArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);\n     if (max_extra_txn <= 0)"
      }
    ]
  }
]