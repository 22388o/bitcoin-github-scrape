[
  {
    "sha": "ec95a809afa8014e92832372323021d5b6f0d490",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzk1YTgwOWFmYTgwMTRlOTI4MzIzNzIzMjMwMjFkNWI2ZjBkNDkw",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-01-11T16:36:53Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-01-11T16:36:53Z"
      },
      "message": "small main.h cleanup (no code changes)\n\n- removes some obsolete comments about CTransaction::FetchInputs(), a\n  space and a few new-lines",
      "tree": {
        "sha": "27de6b3af249746ca455bd2ef33f0d1866ca58ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27de6b3af249746ca455bd2ef33f0d1866ca58ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec95a809afa8014e92832372323021d5b6f0d490",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec95a809afa8014e92832372323021d5b6f0d490",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec95a809afa8014e92832372323021d5b6f0d490",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec95a809afa8014e92832372323021d5b6f0d490/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1f4b80a43798eff00167c529abd770635ea98a26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f4b80a43798eff00167c529abd770635ea98a26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f4b80a43798eff00167c529abd770635ea98a26"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 2,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3290b16318440da72a29e5cff309bc02a4fb8eed",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec95a809afa8014e92832372323021d5b6f0d490/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec95a809afa8014e92832372323021d5b6f0d490/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ec95a809afa8014e92832372323021d5b6f0d490",
        "patch": "@@ -119,7 +119,7 @@ void SyncWithWallets(const uint256 &hash, const CTransaction& tx, const CBlock*\n /** Process an incoming block */\n bool ProcessBlock(CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp = NULL);\n /** Check whether enough disk space is available for an incoming block */\n-bool CheckDiskSpace(uint64 nAdditionalBytes=0);\n+bool CheckDiskSpace(uint64 nAdditionalBytes = 0);\n /** Open a block file (blk?????.dat) */\n FILE* OpenBlockFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n /** Open an undo file (rev?????.dat) */\n@@ -441,7 +441,7 @@ enum CheckSig_mode\n };\n \n /** The basic transaction that is broadcasted on the network and contained in\n- * blocks.  A transaction can contain multiple inputs and outputs.\n+ * blocks. A transaction can contain multiple inputs and outputs.\n  */\n class CTransaction\n {\n@@ -548,21 +548,18 @@ class CTransaction\n     /** Check for standard transaction types\n         @param[in] mapInputs\tMap of previous transactions that have outputs we're spending\n         @return True if all inputs (scriptSigs) use only standard transaction forms\n-        @see CTransaction::FetchInputs\n     */\n     bool AreInputsStandard(CCoinsViewCache& mapInputs) const;\n \n     /** Count ECDSA signature operations the old-fashioned (pre-0.6) way\n         @return number of sigops this transaction's outputs will produce when spent\n-        @see CTransaction::FetchInputs\n     */\n     unsigned int GetLegacySigOpCount() const;\n \n     /** Count ECDSA signature operations in pay-to-script-hash inputs.\n \n         @param[in] mapInputs\tMap of previous transactions that have outputs we're spending\n         @return maximum number of sigops required to validate this transaction's inputs\n-        @see CTransaction::FetchInputs\n      */\n     unsigned int GetP2SHSigOpCount(CCoinsViewCache& mapInputs) const;\n \n@@ -587,7 +584,6 @@ class CTransaction\n \n         @param[in] mapInputs\tMap of previous transactions that have outputs we're spending\n         @return\tSum of value of all inputs (scriptSigs)\n-        @see CTransaction::FetchInputs\n      */\n     int64 GetValueIn(CCoinsViewCache& mapInputs) const;\n \n@@ -818,7 +814,6 @@ class CBlockUndo\n \n         return true;\n     }\n-\n };\n \n /** pruned version of CTransaction: only retains metadata and unspent transaction outputs\n@@ -1279,7 +1274,6 @@ class CBlock : public CBlockHeader\n         return hash;\n     }\n \n-\n     bool WriteToDisk(CDiskBlockPos &pos)\n     {\n         // Open history file to append"
      }
    ]
  }
]