gmaxwell,2017-01-18T09:03:17Z,NAK. The BIP9 quorum sensing is not a vote.,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273420146,273420146,
pinheadmz,2017-01-18T17:03:39Z,"[Signaling statistics for soft forks pre-BIP9 used to be reported by `getblockchaininfo`.](https://github.com/bitcoin/bitcoin/blob/381917f610e3c770acb5e323884e7eef6fd25841/src/rpc/blockchain.cpp#L832-L835)\n\nI think it's helpful to see the adoption rate to better predict when a soft fork will engage. Currently there are several 3rd party websites that report these statistics, I would rather get",https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273535447,273535447,
sipa,2017-01-18T17:06:52Z,"I think these are useful statistics to have. Just don't call it a vote in the RPC help.\n",https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273536320,273536320,
pinheadmz,2017-01-18T17:14:32Z,@sipa no V-word in the RPC help. I rephrased my commit description.,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273538493,273538493,
gmaxwell,2017-01-18T20:14:55Z,"yea, okay. Anyone interested in writing a test for one off on the possible boundary.",https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273588537,273588537,
pinheadmz,2017-01-18T22:00:24Z,"@gmaxwell Added tests, look ok?",https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273615396,273615396,
TheBlueMatt,2017-01-18T22:01:37Z,"Looks cool, I've previously written python crap to calculate similar stats from rpc data.",https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273615708,273615708,
pinheadmz,2017-01-18T23:26:14Z,"@TheBlueMatt  `UniValue` replaced with `struct` [(although not sure I returned the values the most elegant way)](https://github.com/pinheadmz/bitcoin/blob/719161ffcff5ea6a07975d4dcd950da43da11aac/src/rpc/blockchain.cpp#L1062-L1070) \n\n@robmcl4 Thanks, took out vector and just counted. If `pindexPrev == currentIndex == NULL` we're on the genesis block and count just stays at 0 anyway.\n\n@inst",https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-273634905,273634905,
pinheadmz,2017-01-20T19:19:29Z,squashed,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-274156098,274156098,
sipa,2017-02-10T07:01:50Z,utACK 83538dd86dc426dc252714d4ca1ae91ad2c5ac24,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-278872529,278872529,
TheBlueMatt,2017-02-22T16:27:31Z,utACK 9b9b68527dc95a1edca7de24286473ac9a59499c thanks so much for sticking with this :).,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-281721123,281721123,
pinheadmz,2017-03-25T00:00:29Z,rebased on master a0b1e57b20a17177ed5a9a54e4a8aab597a546b4,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-289170682,289170682,
gmaxwell,2017-03-28T00:15:58Z,Concept ACK ,https://github.com/bitcoin/bitcoin/pull/9571#issuecomment-289623897,289623897,
instagibbs,2017-01-18T03:15:35Z,try to avoid changing whitespace randomly,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96560845,96560845,src/rpc/blockchain.cpp
instagibbs,2017-01-18T03:17:28Z,remove?,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96560969,96560969,.gitignore
TheBlueMatt,2017-01-18T22:01:07Z,Preferably dont add a UniValue dependancy here...maybe just define a struct which carries the info you want?,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96744144,96744144,src/validation.h
robmcl4,2017-01-18T22:29:00Z,"What if `pindexPrev == currentIndex == NULL`? Also, why not keep a rolling count rather than using an accessory `vector`?",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96749751,96749751,src/versionbits.cpp
TheBlueMatt,2017-01-18T22:48:34Z,"That wasnt random, that was replacing an errant tab, I say leave it.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96753252,96753252,src/rpc/blockchain.cpp
sipa,2017-01-19T01:04:27Z,Agree.,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96772326,96772326,src/validation.h
sipa,2017-01-19T01:10:28Z,"Please don't add new boost foreach uses, use c++11 range-based for instead.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96773051,96773051,src/versionbits.cpp
sipa,2017-01-19T01:17:34Z,"Does this code need to be in the condition checker implementation? It seems like it could be written generically, as it doesn't need access to the cache or internal state machine.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96773830,96773830,src/versionbits.cpp
pinheadmz,2017-01-19T01:32:30Z,already gone :),https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96775321,96775321,src/versionbits.cpp
pinheadmz,2017-01-19T01:34:49Z,Should I take it out? `VersionBitsConditionChecker` already has `Condition()` function for the bitmask for the corresponding soft fork.,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r96775564,96775564,src/versionbits.cpp
jnewbery,2017-01-20T20:48:52Z,"nanonit: comma after `\""count\"": xx` please",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97152955,97152955,src/rpc/blockchain.cpp
jnewbery,2017-01-20T21:18:29Z,"nit: I suspect the name 'obj' is from when you were passing the object back as a univalue. I'd prefer for this variable to be named a little more descriptively, perhaps 'stats' or 'bip9Stats'.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97157582,97157582,src/versionbits.cpp
jnewbery,2017-01-20T21:26:03Z,"nit: perhaps add `(only for \""started\"" status)\n` (like for the bit field above)",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97158823,97158823,src/rpc/blockchain.cpp
jnewbery,2017-01-20T21:36:35Z,combine these lines?,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97160625,97160625,src/versionbits.cpp
jnewbery,2017-01-20T21:39:34Z,"You're checking that pindexPrev isn't NULL, but then dereferencing further down (in line 130) even if this check fails.\n\nPerhaps move this check to the top and return from the function if pindexPrev is NULL?",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97161162,97161162,src/versionbits.cpp
jnewbery,2017-01-20T21:41:27Z,Is it tidier to calculate elapsed directly from `(pindexPrev % nPeriod) + 1`?,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97161480,97161480,src/versionbits.cpp
jnewbery,2017-01-20T21:47:24Z,"You're declaring local variables, setting them once, and then setting the obj members to those values. Would it be cleaner to just set the obj members directly?",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97162439,97162439,src/versionbits.cpp
jnewbery,2017-01-20T23:03:23Z,"This comment is very misleading, and so is naming the variable `pindexPrev`.\n\nWhen `GetStateFor()` was written, the meaning of the function was: ""I have block B in hand, and I'm trying to connect it to block A in the tree. What are the BIP9 softfork consensus rules that I should enforce on block B based on block A?"" In that context, pindexPrev makes sense - we're judging block B's consensus ru",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97173335,97173335,src/versionbits.h
jnewbery,2017-01-23T14:28:38Z,"I don't much like this reassignment of pindexPrev to the first block in the current difficulty window. I know that the same thing happens in  AbstractThresholdConditionChecker() above, but I think it'd be clearer to have a local variable called something like pindexFirstInWindow. Reasoning about whether a function is doing what you want is easier if the variables are named what they're actually us",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97327788,97327788,src/versionbits.cpp
pinheadmz,2017-01-23T18:03:44Z,"`nPeriod` and  `nThreshold` are used again in line 137 (now line 135) to calculate the `possible` value. But you are right about `elapsedBlocks` and the actual `bool possible`, so I took those declarations out and simplified the assignments.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97378580,97378580,src/versionbits.cpp
pinheadmz,2017-01-23T18:03:47Z,"Moved the check up so the return struct is partially initialized. However, this function shouldn't ever be called unless `THRESHOLD_STARTED == thresholdState` anyway, which will never be the case at block 0.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97378588,97378588,src/versionbits.cpp
pinheadmz,2017-01-23T18:03:51Z,"Yes I was mostly copying the format of `AbstractThresholdConditionChecker::GetStateFor()` but I agree with you, changed variable name.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97378597,97378597,src/versionbits.cpp
pinheadmz,2017-01-23T18:03:53Z,"Not sure about this. After making this one line, it seems the same to me. Still need to get `nHeight` from each. Simpler to me to see ""Current - Start = Elapsed""",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97378608,97378608,src/versionbits.cpp
pinheadmz,2017-01-23T18:04:04Z,"Yeah ok this makes sense to me. I'll take my function out of the ""functions below"" list and rename variable to `pindex`. Should correcting `GetStateSinceHeightFor()` happen in a different commit though?",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97378639,97378639,src/versionbits.h
jnewbery,2017-01-23T18:33:18Z,"yep, sounds fine to me.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97384445,97384445,src/versionbits.cpp
jnewbery,2017-01-23T18:36:40Z,"I agree that this *should* always be non-NULL, but it's better to be conservative, and it's certainly better to be consistently conservative than conservative here and not conservative later :)",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97385143,97385143,src/versionbits.cpp
jnewbery,2017-01-23T18:39:45Z,ok,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97385803,97385803,src/versionbits.cpp
jnewbery,2017-01-23T18:43:11Z,"yeah, I'd suggest changing `GetStateSinceHeightFor()` in a different commit. I can open a PR for that or leave it to you if you prefer.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97386508,97386508,src/versionbits.h
pinheadmz,2017-01-23T19:52:08Z,"Actually just took out declarations for all those variables, assigned to return object directly and refer to those assignments downstream. (see https://github.com/bitcoin/bitcoin/pull/9571/commits/6eecfe0368525f70ff8b93914320356ae0070a0c)",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r97400822,97400822,src/versionbits.cpp
luke-jr,2017-02-02T21:22:43Z,Do we really want spaces in keys?,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r99222940,99222940,src/rpc/blockchain.cpp
pinheadmz,2017-02-02T22:08:57Z,"Whoops, thanks. Fixed and squashed ",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r99232450,99232450,src/rpc/blockchain.cpp
TheBlueMatt,2017-02-10T18:16:53Z,Please be careful to not introduce lines with whitespace at the end. Looks like this patch has it in 5 places (here and 4 lines in AbstractThreasholdConditionCHecker::GetStateStatisticsFor).,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100592174,100592174,src/rpc/blockchain.cpp
TheBlueMatt,2017-02-10T18:51:22Z,"Can we get a more descriptive name? This is actually the last block in the previous period, not the first in this period (though it looks like all the later math is correct).",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100599216,100599216,src/versionbits.cpp
TheBlueMatt,2017-02-10T18:53:18Z,I believe this should be >=?,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100599629,100599629,src/versionbits.cpp
pinheadmz,2017-02-10T19:14:39Z,thanks,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100603973,100603973,src/rpc/blockchain.cpp
pinheadmz,2017-02-10T19:14:48Z,good catch thanks,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100604010,100604010,src/versionbits.cpp
pinheadmz,2017-02-10T19:18:51Z,"Ah I think you're right. I copied this line from `AbstractThresholdConditionChecker::GetStateFor` \n\nhttps://github.com/pinheadmz/bitcoin/blob/83538dd86dc426dc252714d4ca1ae91ad2c5ac24/src/versionbits.cpp#L30-L33\n\nWe'll call it `pindexEndOfPrevPeriod` ?",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100604776,100604776,src/versionbits.cpp
pinheadmz,2017-02-10T19:21:08Z,I'll update my test to hit the edge too,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r100605211,100605211,src/versionbits.cpp
laanwj,2017-02-20T16:28:10Z,s/staistics/statistics/,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r102053436,102053436,src/validation.h
TheBlueMatt,2017-02-20T19:29:28Z,"I'd kinda prefer if you didnt change Test 2 here...just add more tests as ""Test 1"" with a 144-block-total. Also, though I /think/ the new code is right, it'd be really nice if you could add two tests: one which fails to active by 1 block (and checks the ""possible"" flag is false after the first N), and one which activates with one more signaling block, to make sure the possible flat is set right.",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r102080659,102080659,qa/rpc-tests/bip9-softforks.py
pinheadmz,2017-02-20T22:05:29Z,"I think I see what you mean, test the flag at the end of the period to make sure the flag matches the actual outcome in the end? That's cool for the negative test, but since it can only activate once, the positive test must borrow some blocks from Test 2?",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r102099499,102099499,qa/rpc-tests/bip9-softforks.py
pinheadmz,2017-02-21T22:18:45Z,"thanks, fixed",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r102333378,102333378,src/validation.h
pinheadmz,2017-02-21T22:20:34Z,"@TheBlueMatt I rearranged the tests to hit the thresholds. I put Test 2 back to where it was, but still had to modify Test 3 to cover everything (just borrowed one block and tested the `possible` flag right before period completion). LMK what you think, thanks",https://github.com/bitcoin/bitcoin/pull/9571#discussion_r102333784,102333784,qa/rpc-tests/bip9-softforks.py
kallewoof,2017-03-01T00:35:47Z,Nit: I keep getting this and `VersionBitsStatistics` mixed up when I read through the changes. I think it would help readability to name this e.g. `CurrentVersionBitsStatistics` or `ActiveVersionBitsStatistics` or something.,https://github.com/bitcoin/bitcoin/pull/9571#discussion_r103586737,103586737,src/validation.h
