[
  {
    "sha": "09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWU0NGJiMGRmNzUyMGI5YWE2YWZhNjkyYTljMzNmY2U4OWYxNmM0",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-09-05T06:00:01Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-09-05T06:00:01Z"
      },
      "message": "Add timer, timer list classes.",
      "tree": {
        "sha": "286e9c278166d948c89f364f74944dc0db8f760f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/286e9c278166d948c89f364f74944dc0db8f760f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "42613c97d5dd8581d8dfd2cbe443736f8c539973",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42613c97d5dd8581d8dfd2cbe443736f8c539973",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42613c97d5dd8581d8dfd2cbe443736f8c539973"
      }
    ],
    "stats": {
      "total": 156,
      "additions": 156,
      "deletions": 0
    },
    "files": [
      {
        "sha": "95f78f7ff1c822f16f3c6e4e15dc0110c3fe72fb",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -224,6 +224,7 @@ SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n     src/rpcwallet.cpp \\\n     src/rpcblockchain.cpp \\\n     src/rpcrawtransaction.cpp \\\n+    src/timer.cpp \\\n     src/qt/overviewpage.cpp \\\n     src/qt/csvmodelwriter.cpp \\\n     src/crypter.cpp \\"
      },
      {
        "sha": "5026f5c1ab45309ae8f1eb654d39829782f7d6c5",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -76,6 +76,7 @@ OBJS= \\\n     obj/rpcwallet.o \\\n     obj/rpcblockchain.o \\\n     obj/rpcrawtransaction.o \\\n+    obj/timer.o \\\n     obj/script.o \\\n     obj/sync.o \\\n     obj/util.o \\"
      },
      {
        "sha": "ec805a23c7a5aa09b9dbcf7a9286cb3fb3f8d1cd",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -72,6 +72,7 @@ OBJS= \\\n     obj/rpcwallet.o \\\n     obj/rpcblockchain.o \\\n     obj/rpcrawtransaction.o \\\n+    obj/timer.o \\\n     obj/script.o \\\n     obj/sync.o \\\n     obj/util.o \\"
      },
      {
        "sha": "405b1e2176cb13419606d288b681d9c82af51119",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -90,6 +90,7 @@ OBJS= \\\n     obj/rpcwallet.o \\\n     obj/rpcblockchain.o \\\n     obj/rpcrawtransaction.o \\\n+    obj/timer.o \\\n     obj/script.o \\\n     obj/sync.o \\\n     obj/util.o \\"
      },
      {
        "sha": "3eb985624b38937f02c01d6a6ec85a474c07acba",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -121,6 +121,7 @@ OBJS= \\\n     obj/rpcwallet.o \\\n     obj/rpcblockchain.o \\\n     obj/rpcrawtransaction.o \\\n+    obj/timer.o \\\n     obj/script.o \\\n     obj/sync.o \\\n     obj/util.o \\"
      },
      {
        "sha": "8576b15ef16be99f71c96ff60a4f019c30c82807",
        "filename": "src/test/timer_tests.cpp",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/test/timer_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/test/timer_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/timer_tests.cpp?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -0,0 +1,56 @@\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"timer.h\"\n+\n+BOOST_AUTO_TEST_SUITE(timer_tests)\n+\n+static void actor(CTimer *t, void *p)\n+{\n+}\n+\n+static void actor2(CTimer *t, void *p)\n+{\n+    t->expire_time += 10;\n+}\n+\n+BOOST_AUTO_TEST_CASE(timer_basics)\n+{\n+    CTimerList cl;\n+    BOOST_CHECK(cl.size() == 0);\n+\n+    int64 nNow = GetTime();\n+\n+    CTimer t1 = { (char *) \"t1\", nNow - 1, actor };\n+    CTimer t2 = { (char *) \"t2\", nNow, actor };\n+    CTimer t3 = { (char *) \"t3\", nNow + 1, actor };\n+    CTimer t4 = { (char *) \"t4\", nNow, actor2 };\n+\n+    BOOST_CHECK(cl.addTimer(t1) == true);\n+    BOOST_CHECK(cl.addTimer(t2) == true);\n+    BOOST_CHECK(cl.addTimer(t3) == true);\n+\n+    BOOST_CHECK(cl.size() == 3);\n+    BOOST_CHECK(cl.nextExpire() == (nNow - 1));\n+\n+    cl.clear();\n+    BOOST_CHECK(cl.size() == 0);\n+\n+    BOOST_CHECK(cl.addTimer(t1) == true);\n+    BOOST_CHECK(cl.addTimer(t2) == true);\n+    BOOST_CHECK(cl.addTimer(t3) == true);\n+\n+    BOOST_CHECK(cl.size() == 3);\n+    BOOST_CHECK(cl.nextExpire() == (nNow - 1));\n+\n+    int nRun = cl.runTimers();\n+    BOOST_CHECK(nRun == 2);\n+    BOOST_CHECK(cl.size() == 1);\n+\n+    BOOST_CHECK(cl.addTimer(t4) == true);\n+    nRun = cl.runTimers();\n+    BOOST_CHECK(nRun == 1);\n+    BOOST_CHECK(cl.size() == 2);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()\n+"
      },
      {
        "sha": "859b3bc681189ea7ecd4a496e821372a6f3848d8",
        "filename": "src/timer.cpp",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/timer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/timer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timer.cpp?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"timer.h\"\n+\n+using namespace std;\n+\n+\n+bool CTimerList::addTimer(CTimer t)\n+{\n+    if (fShutdown)\n+        return false;\n+\n+    if (mapTimers.count(t.expire_time))\n+        return false;\n+\n+    mapTimers[t.expire_time] = t;\n+    return true;\n+}\n+\n+unsigned int CTimerList::runTimers()\n+{\n+    int64 nNow = GetTime();\n+    unsigned int nRun = 0;\n+\n+    map<int64, CTimer>::iterator miLast = mapTimers.end();\n+    vector<CTimer> vAdd;\n+\n+    // execute any expired timers\n+    for (map<int64, CTimer>::iterator mi = mapTimers.begin();\n+         mi != mapTimers.end(); ++mi) {\n+        CTimer& t = (*mi).second;\n+        if (t.expire_time > nNow)\n+            break;\n+\n+        nRun++;\n+        miLast = mi;\n+\n+        t.actor(&t, t.privdata);\n+        if (t.expire_time > nNow)\n+            vAdd.push_back(t);\n+    }\n+\n+    // delete executed timers\n+    if (miLast != mapTimers.end()) {\n+        miLast++;\n+        mapTimers.erase(mapTimers.begin(), miLast);\n+    }\n+\n+    // re-add timers with new expired times\n+    for (unsigned int i = 0; i < vAdd.size(); i++)\n+        addTimer(vAdd[i]);\n+\n+    return nRun;\n+}"
      },
      {
        "sha": "f8a36f9b478cc340ee3f9affbe13dab6d488c2e0",
        "filename": "src/timer.h",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/timer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09e44bb0df7520b9aa6afa692a9c33fce89f16c4/src/timer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timer.h?ref=09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "patch": "@@ -0,0 +1,38 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef __BITCOIN_TIMER_H__\n+#define __BITCOIN_TIMER_H__\n+\n+\n+#include \"util.h\"\n+\n+\n+class CTimer {\n+public:\n+    void *privdata;\n+    int64 expire_time;\n+\n+    void (*actor)(CTimer *t, void *p);\n+};\n+\n+\n+class CTimerList {\n+private:\n+    std::map<int64, CTimer> mapTimers;\n+\n+public:\n+    unsigned int runTimers();\n+    bool addTimer(CTimer t);\n+    int64 nextExpire() {\n+        std::map<int64, CTimer>::iterator mi = mapTimers.begin();\n+        return (*mi).first;\n+    }\n+\n+    unsigned int size() { return mapTimers.size(); }\n+    void clear() { mapTimers.clear(); }\n+};\n+\n+\n+#endif // __BITCOIN_TIMER_H__"
      }
    ]
  },
  {
    "sha": "5cb618146cedc7630513afb016ef386e6bd4f172",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2I2MTgxNDZjZWRjNzYzMDUxM2FmYjAxNmVmMzg2ZTZiZDRmMTcy",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-09-05T06:19:34Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-09-05T06:19:34Z"
      },
      "message": "Replace ThreadDumpAddresses with a timer.",
      "tree": {
        "sha": "30a9c56aa90d157d40f0120006edd2cad092dc02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30a9c56aa90d157d40f0120006edd2cad092dc02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cb618146cedc7630513afb016ef386e6bd4f172",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cb618146cedc7630513afb016ef386e6bd4f172",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5cb618146cedc7630513afb016ef386e6bd4f172",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cb618146cedc7630513afb016ef386e6bd4f172/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09e44bb0df7520b9aa6afa692a9c33fce89f16c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09e44bb0df7520b9aa6afa692a9c33fce89f16c4"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 13,
      "deletions": 28
    },
    "files": [
      {
        "sha": "5ddc1998dfd6b386b6f4d5cf5138966d14d93d98",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 27,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cb618146cedc7630513afb016ef386e6bd4f172/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cb618146cedc7630513afb016ef386e6bd4f172/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=5cb618146cedc7630513afb016ef386e6bd4f172",
        "patch": "@@ -10,6 +10,7 @@\n #include \"strlcpy.h\"\n #include \"addrman.h\"\n #include \"ui_interface.h\"\n+#include \"timer.h\"\n \n #ifdef WIN32\n #include <string.h>\n@@ -66,6 +67,7 @@ map<CInv, CDataStream> mapRelay;\n deque<pair<int64, CInv> > vRelayExpiration;\n CCriticalSection cs_mapRelay;\n map<CInv, int64> mapAlreadyAskedFor;\n+static CTimerList timerList;\n \n static deque<string> vOneShots;\n CCriticalSection cs_vOneShots;\n@@ -980,6 +982,8 @@ void ThreadSocketHandler2(void* parg)\n                 pnode->Release();\n         }\n \n+        timerList.runTimers();\n+\n         Sleep(10);\n     }\n }\n@@ -1313,34 +1317,17 @@ void DumpAddresses()\n            addrman.size(), GetTimeMillis() - nStart);\n }\n \n-void ThreadDumpAddress2(void* parg)\n+static void DumpAddressTimer(CTimer *t, void *p)\n {\n-    vnThreadsRunning[THREAD_DUMPADDRESS]++;\n-    while (!fShutdown)\n-    {\n-        DumpAddresses();\n-        vnThreadsRunning[THREAD_DUMPADDRESS]--;\n-        Sleep(100000);\n-        vnThreadsRunning[THREAD_DUMPADDRESS]++;\n-    }\n-    vnThreadsRunning[THREAD_DUMPADDRESS]--;\n+    DumpAddresses();\n+\n+    t->expire_time += 100000;\n }\n \n-void ThreadDumpAddress(void* parg)\n+static bool StartDumpAddressTimer()\n {\n-    IMPLEMENT_RANDOMIZE_STACK(ThreadDumpAddress(parg));\n-\n-    // Make this thread recognisable as the address dumping thread\n-    RenameThread(\"bitcoin-adrdump\");\n-\n-    try\n-    {\n-        ThreadDumpAddress2(parg);\n-    }\n-    catch (std::exception& e) {\n-        PrintException(&e, \"ThreadDumpAddress()\");\n-    }\n-    printf(\"ThreadDumpAddress exited\\n\");\n+    CTimer t = { NULL, GetTime() + 100000, DumpAddressTimer };\n+    return timerList.addTimer(t);\n }\n \n void ThreadOpenConnections(void* parg)\n@@ -1939,8 +1926,8 @@ void StartNode(void* parg)\n         printf(\"Error: NewThread(ThreadMessageHandler) failed\\n\");\n \n     // Dump network addresses\n-    if (!NewThread(ThreadDumpAddress, NULL))\n-        printf(\"Error; NewThread(ThreadDumpAddress) failed\\n\");\n+    if (!StartDumpAddressTimer())\n+        printf(\"Error; StartDumpAddressTimer() failed\\n\");\n \n     // Generate coins in the background\n     GenerateBitcoins(GetBoolArg(\"-gen\", false), pwalletMain);\n@@ -1977,7 +1964,6 @@ bool StopNode()\n #endif\n     if (vnThreadsRunning[THREAD_DNSSEED] > 0) printf(\"ThreadDNSAddressSeed still running\\n\");\n     if (vnThreadsRunning[THREAD_ADDEDCONNECTIONS] > 0) printf(\"ThreadOpenAddedConnections still running\\n\");\n-    if (vnThreadsRunning[THREAD_DUMPADDRESS] > 0) printf(\"ThreadDumpAddresses still running\\n\");\n     while (vnThreadsRunning[THREAD_MESSAGEHANDLER] > 0 || vnThreadsRunning[THREAD_RPCHANDLER] > 0)\n         Sleep(20);\n     Sleep(50);"
      },
      {
        "sha": "ba25b88eee233cd0d1627afcb74445b7d4a1e1bf",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cb618146cedc7630513afb016ef386e6bd4f172/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cb618146cedc7630513afb016ef386e6bd4f172/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=5cb618146cedc7630513afb016ef386e6bd4f172",
        "patch": "@@ -104,7 +104,6 @@ enum threadId\n     THREAD_UPNP,\n     THREAD_DNSSEED,\n     THREAD_ADDEDCONNECTIONS,\n-    THREAD_DUMPADDRESS,\n     THREAD_RPCHANDLER,\n \n     THREAD_MAX"
      }
    ]
  }
]