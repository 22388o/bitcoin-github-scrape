Sjors,2018-02-27T11:36:08Z,"It seems I need to make some additional change...\n\n```\nmake HOST=aarch64-apple-darwin14 NO_QT=1\nheartbeat_test.c => ../test/heartbeat_test.c\nmaking links in engines...\nmaking links in tools...\nmake[2]: Nothing to be done for `links'.\ngenerating dummy tests (if needed)...\nmake[2]: Nothing to be done for `generate'.\n\nSince you've disabled or enabled at least one algorithm, you ",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-368845654,368845654,
fanquake,2018-04-20T01:46:30Z,@Sjors Are you still working on this?,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-382938717,382938717,
Sjors,2018-04-20T13:24:58Z,@fanquake waiting for hints.,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-383094816,383094816,
laanwj,2018-04-26T07:28:37Z,"@theuni can you take a look, looks like @sjors ran into a brick wall here",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-384541604,384541604,
jonasschnelli,2018-04-26T08:24:05Z,I think this PR alone makes little sense. IMO including the openssl change in https://github.com/bitcoin/bitcoin/issues/11720 seems after solving a real use case.,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-384556112,384556112,
theuni,2018-04-26T21:02:38Z,"See here for enough to get cross builds from Linux working: https://github.com/theuni/bitcoin/commit/3907e526b35b5e5f752f3f521ca21df51ea9c020\n\nI can confirm that I get valid aarch64/armv7 binaries using that. Though I have no idea if they work :)\nEdit: That's building depends with NO_QT=1. I assume the Qt build is horribly broken.\n\nNative builds are more painful, as for cross builds we c",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-384788001,384788001,
ken2812221,2018-06-18T11:07:21Z,"How about change make command to \n```\n$(MAKE) -j1 depend build_libs libcrypto.pc libssl.pc openssl.pc",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-398019383,398019383,
DrahtBot,2018-07-21T17:29:02Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 144 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-406811421,406811421,
MarcoFalke,2018-08-07T17:43:16Z,@Sjors Are you still working on this?,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-411141768,411141768,
Sjors,2018-08-28T13:30:50Z,"Rebased and incorporated\nhttps://github.com/theuni/bitcoin/commit/3907e526b35b5e5f752f3f521ca21df51ea9c020 (some of it has already been merged). I left out armv7 because Apple dropped support for that in iOs 11. I renamed to PR to cover all depends, rather than just OpenSSL.\n\n`make` will look in `depends/SDKs` by default, so you have to set `SDK_PATH` or add a symlink: `ln -s  /Applications/",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-416584633,416584633,
Sjors,2018-08-28T16:07:02Z,"As for cross-compilation from Ubuntu:\n\nThe Gitian build [instructions](https://github.com/bitcoin-core/docs/blob/master/gitian-building/gitian-building-mac-os-sdk.md) use an old version of Xcode. Nowadays it seems you need to use the App Store to download it. To extract the iOs SDK on macOS machine:\n\n```sh\ntar -C /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Deve",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-416645077,416645077,
Sjors,2018-08-28T16:32:53Z,"Prepending `LC_ALL=C ` before the `sed` [did the tick](https://stackoverflow.com/a/23584470).\n\nNext problem, when running `make`:\n```\n  CXX      libbitcoin_util_a-utiltime.o\nutil.cpp:1138:18: error: 'system' is unavailable: not available on iOS\n    int nErr = ::system(strCommand.c_str());\n                 ^\n/Users/bitcoin/dev/bitcoind/depends/SDKs/iPhoneOS11.4.sdk/usr/include/stdli",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-416653848,416653848,
Sjors,2018-08-28T17:41:50Z,"Disabling those notify commands seems to be the only workaround needed, although it's hard to tell without running a real device. The latter is not that easy, because iOs doesn't allow launching arbitrary executables, which is the approach ABcore uses.\n\nI do get a flood of the following warnings:\n\n```\nld: warning: direct access in function 'boost::unit_test::utils::print_escaped_cdata(st",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-416676948,416676948,
Sjors,2018-08-28T18:46:50Z,"It's probably easiest to work with headers and compiled `.a` files: http://www.swiftprogrammer.info/swift_call_cpp.html#step1\n\nAlthough that's beyond the scope of this project, I'd like to try to get this to work so that we know if this PR actually works. A minimum PoC would just print IBD progress in a console.\n\nGiven the following files:\n* src/libbitcoin_cli.a   \n* src/libbitcoin_com",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-416698391,416698391,
DrahtBot,2018-09-21T13:24:04Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18135 (build: add --enable-determinism configure flag by fanquake)\n\nIf you consider this pull request important, please",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-423529526,423529526,
kozyilmaz,2018-10-29T14:37:30Z,"@Sjors I was preparing a cross-platform Bitcoin SDK (https://github.com/kozyilmaz/glue-sdk) by using the original Bitcoin implementation so maybe you can consider these patches too (https://github.com/kozyilmaz/glue-sdk/tree/master/bitcoin/patches)? It is a work-in-progress and only builds `bitcoind` and other binaries/libraries for macOS, iOS and iOSSim at the moment.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-433934315,433934315,
Sjors,2018-11-02T17:29:40Z,"@kozyilmaz nice! I was able to run `make all` for `environment.ios64`. How do I run `bitrootfs/ios64/bin/bitcoind` on a device or simulator? Once that works I could connect to it remotely via `bitcoin-cli`, which is a good enough start for me.\n\nIdeally I would want to be able to include this into an app project, which then has some control over the node (could be via RPC on the same device, or",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-435452728,435452728,
Sjors,2019-02-21T10:30:51Z,"* rebased\n* bumped minimum SDK to 12.1. Tested building depends and bitcoind on macOS 10.14.3\n* added [instructions](https://github.com/Sjors/bitcoin/tree/2018/02/depends-openssl-aarch64-apple-darwin1/depends#for-ios-cross-compilation)\n\nNote that if it can't find the right SDK version you'll get a bunch of ""fatal error: 'unistd.h' file not found"" messages.\n\nI haven't made progress othe",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-465947521,465947521,
kozyilmaz,2019-02-21T11:07:48Z,"> @kozyilmaz nice! I was able to run `make all` for `environment.ios64`. How do I run `bitrootfs/ios64/bin/bitcoind` on a device or simulator? Once that works I could connect to it remotely via `bitcoin-cli`, which is a good enough start for me.\n> \n> Ideally I would want to be able to include this into an app project, which then has some control over the node (could be via RPC on the same devi",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-465959180,465959180,
Sjors,2019-02-21T13:22:25Z,"@kozyilmaz thanks, I cherry-picked your patch for detecting the iOs simulator / target (unused in the current version, but I assume it will be useful later)",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-465997359,465997359,
Sjors,2019-02-22T10:55:43Z,@fanquake I have no idea what's causing the `make` error you're seeing.,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-466357983,466357983,
Sjors,2019-07-05T16:33:50Z,"Rebased after #15457. Dropped the Boost 1.69 commit, because #15461 bumped Boost to 1.70. So now we're down to 3 commits. Also bumped iOs from 12.1 to 12.2.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-508810813,508810813,
Sjors,2019-07-05T19:49:36Z,I'm still having a hard time getting this to run on a device. Tracking progress [here](https://github.com/Sjors/iOS-bitcoin-full-node/issues/1).,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-508848908,508848908,
BlockMechanic,2019-08-06T14:14:10Z," +1 Awesome work! Mobile devices now have adaquate storage , though i wonder about processing prower. ",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-518687669,518687669,
BlockMechanic,2019-10-18T12:19:27Z,"We've had success on the android side, has there been any more progress here? We have Qt wallet running and thought about completing the mobile experience. ",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-543710627,543710627,
BlockMechanic,2019-11-02T07:26:25Z,Is this still being actively worked on ?,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-549018864,549018864,
Sjors,2019-11-03T14:59:41Z,I work on this occasionally. Don't let that hold you back to make your own PR; happy to review.,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-549144902,549144902,
Sjors,2019-11-19T10:29:38Z,"Rebased and dropped af156c279386fdf6d649c9cff9c61b58d7588eef since we no longer need OpenSSL (#17265). Also bumped the iOs version and aarch64-apple-darwin19.\n\nUnfortunately now I run into a new issue, possibly related to  #17118 (though reverting doesn't help):\n```\nclang: warning: using sysroot for 'MacOSX' but targeting 'iPhone' [-Wincompatible-sysroot]\n```\n\n",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-555441419,555441419,
RandyMcMillan,2019-11-21T09:52:52Z,"This config is building and ""installing"".\n\nhttps://travis-ci.com/RandyMcMillan/bitcoin/jobs/258943857\n\nhttps://github.com/RandyMcMillan/bitcoin/commit/982f4ea45996d88662d3f22b8e4e65a3cbe90d46\n\n![Screen Shot 2019-11-21 at 4 41 56 AM](https://user-images.githubusercontent.com/152159/69326858-89df0980-0c1a-11ea-869d-bd135c4ed6e7.png)",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-557006857,557006857,
Sjors,2019-11-22T12:55:31Z,"@RandyMcMillan I don't think that new Travis instance is actually building for iOs: https://travis-ci.com/RandyMcMillan/bitcoin/jobs/258943857#L242 . macOS travis machines are pretty scarce at the moment, so we probably can't add that anyway. Though perhaps we could expand the current macOS machine to cross-compile iOs.\n\nWhat did the trick for me was using your `IOS_SDK=$(xcrun --sdk iphoneos ",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-557521256,557521256,
Sjors,2020-02-10T14:02:56Z,"Rebased, but it's not compiling for me anymore:\n\n```\nUndefined symbols for architecture arm64:\n  ""_getauxval"", referenced from:\n      crc32c::Extend(unsigned int, unsigned char const*, unsigned long) in libcrc32c.a(libcrc32c_a-crc32c.o)\nld: symbol(s) not found for architecture arm64\n```",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-584136936,584136936,
DrahtBot,2020-02-28T18:28:20Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-592663131,592663131,
DrahtBot,2020-03-14T17:35:53Z,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-599106204,599106204,
Sjors,2020-04-23T17:04:30Z,I'm declaring this up for grabs...,https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-618520520,618520520,
dr-orlovsky,2020-04-23T18:51:29Z,"I have a vague plan to use https://github.com/LNP-BP/bp-node (rust-bitcoin based), once it will be more complete, and embed it into C FFI to be called from iOS Swift.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-618588964,618588964,
BlockMechanic,2020-12-28T09:28:40Z,"A lot of progress was made on the Android front. I keep looking back at this, i hope i can make time and try get the iOS effort on par with android.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-751648078,751648078,
congtungWonder,2021-02-17T08:38:35Z,"@BlockMechanic : Do you have any update at your side? \nI'm trying to support iOS right now but still no hope\nPlease help me to update if you see anything we can work around",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-780396317,780396317,
laanwj,2021-02-18T12:44:34Z,"I missed when this was closed. Actually added ""Up for grabs"" label.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-781317271,781317271,
BlockMechanic,2021-07-24T12:49:09Z,"With the introduction of sqlite, it may be worth while to push this. If i can get a moment i will try this again",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-886049049,886049049,
Sjors,2021-07-28T14:03:39Z,"@BlockMechanic I couldn't even get the node to work without a wallet, so Sqlite wasn't the bottleneck.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-888335713,888335713,
CaptThomas,2021-11-07T14:20:11Z,"Just a thought, but what if you just opened the QT project on like MacOS, got QT5 to convert it to an XCode project and see if that will work? Just a thought, let me know if anyone has tested.",https://github.com/bitcoin/bitcoin/pull/12557#issuecomment-962619179,962619179,
Sjors,2018-08-28T16:36:15Z,This also works with a symlink.,https://github.com/bitcoin/bitcoin/pull/12557#discussion_r213386200,213386200,depends/.gitignore
MarcoFalke,2018-08-28T17:29:33Z,"Is bumping the boost version required?\n\nEdit: Ah, it is only for depends as workaround.",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r213404474,213404474,depends/packages/boost.mk
luke-jr,2018-08-28T18:04:18Z,Would prefer to have a `configure` check for `system` usability.,https://github.com/bitcoin/bitcoin/pull/12557#discussion_r213416577,213416577,src/wallet/wallet.cpp
Sjors,2018-08-28T18:39:46Z,"Ok, I'll see if I can figure out how to do that.",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r213428094,213428094,src/wallet/wallet.cpp
Sjors,2018-08-29T16:56:36Z,"Mmm, Travis is unhappy with the armv7 cross compile. @TheCharlatan any idea? I'm also mystified why Boost 1.64 works fine for our regular aarch64 builds, but why iOs is more picky. ",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r213756878,213756878,depends/packages/boost.mk
practicalswift,2018-09-26T05:45:10Z,"Check if `TARGET_OS_IPHONE` is defined before using. Please fix throughout: applies to all reading of `TARGET_*` in `util.h`, `init.cpp`, `validation.cpp`, `util.cpp`, `wallet/init.cpp` and `wallet/wallet.cpp`.",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r220432246,220432246,src/util.h
practicalswift,2018-10-11T13:36:16Z,Check if defined instead? Same goes for `TARGET_*` throughout this PR :-),https://github.com/bitcoin/bitcoin/pull/12557#discussion_r224450141,224450141,src/util.h
Sjors,2019-02-21T13:08:27Z,"I replaced them all with `#if defined(HAVE_STD__SYSTEM) || defined(WIN32)\n`, which is now set in configure.ac.",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r258918570,258918570,src/util.h
Sjors,2019-02-21T13:20:22Z,@luke-jr I made a separate PR for that #15457,https://github.com/bitcoin/bitcoin/pull/12557#discussion_r258922593,258922593,src/wallet/wallet.cpp
fanquake,2019-02-22T01:46:30Z,"nit: iOS, here and in the iOS cross compilation section below",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259186885,259186885,depends/README.md
fanquake,2019-02-22T01:47:22Z,Concept ACK iOS 12.1 as min version,https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259187022,259187022,depends/hosts/darwin.mk
fanquake,2019-02-22T01:56:30Z,"Can you split the boost bump into a separate change, so that can be discussed/merged. We could also bump straight to 1.69.0. ",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259188631,259188631,depends/packages/boost.mk
fanquake,2019-02-22T01:56:56Z,Could you split this change into it's own commit,https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259188693,259188693,depends/packages/openssl.mk
fanquake,2019-02-22T01:59:50Z,"When I run `./autogen.sh`:\n```\nconfigure.ac:914: warning: The macro `AC_TRY_LINK' is obsolete.\nconfigure.ac:914: You should run autoupdate.\n../../lib/autoconf/general.m4:2688: AC_TRY_LINK is expanded from...\nconfigure.ac:914: the top level\nglibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, 'build-aux'.\nglibtoolize: copying file 'build-aux/ltmain.sh'\n```",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259189221,259189221,configure.ac
Sjors,2019-02-22T10:14:55Z,#15461,https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259283043,259283043,depends/packages/boost.mk
Sjors,2019-02-22T10:55:28Z,"Switched to `AC_LINK_IFELSE`, also updated #15457.\n\nYou know you've entered a deep rabbit hole when there's only 66 installs for a syntax highlighter package... :-)\n<img width=""731"" alt=""schermafbeelding 2019-02-22 om 11 30 14"" src=""https://user-images.githubusercontent.com/10217/53236715-3fcdf500-3695-11e9-9cf4-b8c196c77e7f.png"">\n",https://github.com/bitcoin/bitcoin/pull/12557#discussion_r259296439,259296439,configure.ac
