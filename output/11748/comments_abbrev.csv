sipa,2017-11-22T01:39:52Z,"> blockchain.cpp has low unit test coverage.\n\nIs that statement only about the unit tests as such, or does it include coverage from the RPC functional tests? As rpc/blockchain.cpp is an externally visible RPC interface implementation, I would expect most of its testing to happen through functional tests. Of course, I'm not opposed to improving unit tests too, where possible.",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-346216831,346216831,
merehap,2017-11-22T01:43:13Z,"@sipa I've only checked the results of ""make cov"". I don't know anything about the RPC functional test coverage.",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-346217384,346217384,
merehap,2017-11-22T03:25:44Z,"I'm unable to reproduce locally the errors that Travis is seeing with ""make -j3 check VERBOSE=1"".\n\nIt appears that either CChain.SetTip() or GetDifficulty() has undefined behavior in certain cases, such that my tests succeed on certain build targets but fail on others. For my new test get_difficulty_for_null_block_index, GetDifficulty() is returning 0.0 for Travis jobs X.4 and X.6, but returni",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-346232467,346232467,
MarcoFalke,2017-11-22T16:22:31Z,We have two targets for coverage builds: `test_bitcoin` (just the unit tests) and `total` (including functional tests). See for example here: https://marcofalke.github.io/btc_cov/,https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-346400758,346400758,
merehap,2017-11-23T00:11:34Z,"@MarcoFalke It looks like the test coverage with functional tests included is almost 70%, but is still missing some functions entirely. For the time being I'll only be working on unit test coverage though.",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-346506096,346506096,
MarcoFalke,2017-11-23T00:21:01Z,@merehap That is fine. Unit test run way quicker and are probably run more often (compared to the extended functional tests).,https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-346507262,346507262,
merehap,2017-11-29T21:24:42Z,"@MarcoFalke @sipa As far as I know I've done everything needed for this PR. Is there anything else I need to do to move this along? Or just wait until someone else has time to review and test this?\n\nThanks! And apologies if I'm being overly impatient.",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-348000981,348000981,
laanwj,2017-12-23T10:15:44Z,"utACK 3e1ee31, thanks for adding tests.",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-353718293,353718293,
laanwj,2017-12-23T10:18:55Z,"Regarding future direction, I think it's ok to add unit tests for utility functions used by RPC functions, such as this `GetDifficulty`. It is not directly testable externally.\n\nBut for really testing RPC functions, it is better to do so in the functional test framework than in unit tests as this directly tests API usability.",https://github.com/bitcoin/bitcoin/pull/11748#issuecomment-353718429,353718429,
MarcoFalke,2017-11-22T16:20:47Z,That pointer will most likely point to something unwanted after `return` in the line below.,https://github.com/bitcoin/bitcoin/pull/11748#discussion_r152613717,152613717,src/test/blockchain_tests.cpp
merehap,2017-11-23T00:09:19Z,"Yep, you're right! That was the cause of the non-deterministic test failures. Please forgive my C++ inexperience. Fixed.",https://github.com/bitcoin/bitcoin/pull/11748#discussion_r152704894,152704894,src/test/blockchain_tests.cpp
