[
  {
    "sha": "d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjYyN2IxZGJjOWFiODE5NTM2ZGY4YjlhOGY3ZGNkY2I5ZTU4Y2Mx",
    "commit": {
      "author": {
        "name": "Peter Yordanov",
        "email": "ppyordanov@yahoo.com",
        "date": "2021-01-03T02:34:35Z"
      },
      "committer": {
        "name": "Peter Yordanov",
        "email": "ppyordanov@yahoo.com",
        "date": "2021-01-03T02:34:35Z"
      },
      "message": "doc:fix typos.",
      "tree": {
        "sha": "2a3a0ab1f15c007e1a9204c93af01db09a2508e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a3a0ab1f15c007e1a9204c93af01db09a2508e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/comments",
    "author": {
      "login": "ppyordanov",
      "id": 5113984,
      "node_id": "MDQ6VXNlcjUxMTM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5113984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppyordanov",
      "html_url": "https://github.com/ppyordanov",
      "followers_url": "https://api.github.com/users/ppyordanov/followers",
      "following_url": "https://api.github.com/users/ppyordanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppyordanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppyordanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppyordanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ppyordanov/orgs",
      "repos_url": "https://api.github.com/users/ppyordanov/repos",
      "events_url": "https://api.github.com/users/ppyordanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppyordanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ppyordanov",
      "id": 5113984,
      "node_id": "MDQ6VXNlcjUxMTM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5113984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppyordanov",
      "html_url": "https://github.com/ppyordanov",
      "followers_url": "https://api.github.com/users/ppyordanov/followers",
      "following_url": "https://api.github.com/users/ppyordanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppyordanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppyordanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppyordanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ppyordanov/orgs",
      "repos_url": "https://api.github.com/users/ppyordanov/repos",
      "events_url": "https://api.github.com/users/ppyordanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppyordanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c3765ad7cee5b4344a28c06fdb8cc56c465d277",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c3765ad7cee5b4344a28c06fdb8cc56c465d277",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c3765ad7cee5b4344a28c06fdb8cc56c465d277"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b5fc93886df774da20e156e0bdd98e6046243227",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "patch": "@@ -128,7 +128,7 @@ static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>&\n {\n     // General strategy:\n     // - Decode both with extended serialization (which interprets the 0x0001 tag as a marker for\n-    //   the presense of witnesses) and with legacy serialization (which interprets the tag as a\n+    //   the presence of witnesses) and with legacy serialization (which interprets the tag as a\n     //   0-input 1-output incomplete transaction).\n     //   - Restricted by try_no_witness (which disables legacy if false) and try_witness (which\n     //     disables extended if false)."
      },
      {
        "sha": "322fabbe1150916a2ab0fbebf83d71c429f6cf55",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "patch": "@@ -64,7 +64,7 @@ struct Peer {\n \n     /** Protects block inventory data members */\n     Mutex m_block_inv_mutex;\n-    /** List of blocks that we'll anounce via an `inv` message.\n+    /** List of blocks that we'll announce via an `inv` message.\n      * There is no final sorting before sending, as they are always sent\n      * immediately and in the order requested. */\n     std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);"
      },
      {
        "sha": "cf878fe3748982d01fbad7e078dfc63edbbdffd2",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "patch": "@@ -483,7 +483,7 @@ class CSubNet\n             READWRITE(obj.network);\n             if (obj.network.IsIPv4()) {\n                 // Before commit 102867c587f5f7954232fb8ed8e85cda78bb4d32, CSubNet used the last 4 bytes of netmask\n-                // to store the relevant bytes for an IPv4 mask. For compatiblity reasons, keep doing so in\n+                // to store the relevant bytes for an IPv4 mask. For compatibility reasons, keep doing so in\n                 // serialized form.\n                 unsigned char dummy[12] = {0};\n                 READWRITE(dummy);"
      },
      {
        "sha": "4e6270220e0b9656b6e3f34926ff7cdbe563f90b",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "patch": "@@ -426,7 +426,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 uint256 checksum;\n                 ssValue >> checksum;\n                 if ((checksum_valid = Hash(vchPrivKey) != checksum)) {\n-                    strErr = \"Error reading wallet database: Crypted key corrupt\";\n+                    strErr = \"Error reading wallet database: Encrypted key corrupt\";\n                     return false;\n                 }\n             }"
      },
      {
        "sha": "bdbfa5aed1161e26bdafb58df4d9bf5924d2581d",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "patch": "@@ -60,7 +60,7 @@ def run_test(self):\n         self.wit_address = w0.getnewaddress(address_type='p2sh-segwit')\n         self.wit_ms_address = wmulti.addmultisigaddress(1, [self.pubkey], '', 'p2sh-segwit')['address']\n         if not self.options.descriptors:\n-            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecssary (and does not need to be tested) for descriptor wallets\n+            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecessary (and does not need to be tested) for descriptor wallets\n             wmulti.importaddress(self.ms_address)\n             wmulti.importaddress(self.wit_ms_address)\n "
      }
    ]
  },
  {
    "sha": "9837ca1adfed9b93e9a0d77692b05b974c222b2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODM3Y2ExYWRmZWQ5YjkzZTlhMGQ3NzY5MmIwNWI5NzRjMjIyYjJm",
    "commit": {
      "author": {
        "name": "Peter Yordanov",
        "email": "ppyordanov@yahoo.com",
        "date": "2021-01-03T07:12:50Z"
      },
      "committer": {
        "name": "Peter Yordanov",
        "email": "ppyordanov@yahoo.com",
        "date": "2021-01-03T07:12:50Z"
      },
      "message": "Documentation:Fix typos. Correct translation inaccuracy.",
      "tree": {
        "sha": "35da076b2ca6988ec2369d9c9a2f27a2a8c8d167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35da076b2ca6988ec2369d9c9a2f27a2a8c8d167"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9837ca1adfed9b93e9a0d77692b05b974c222b2f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9837ca1adfed9b93e9a0d77692b05b974c222b2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9837ca1adfed9b93e9a0d77692b05b974c222b2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9837ca1adfed9b93e9a0d77692b05b974c222b2f/comments",
    "author": {
      "login": "ppyordanov",
      "id": 5113984,
      "node_id": "MDQ6VXNlcjUxMTM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5113984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppyordanov",
      "html_url": "https://github.com/ppyordanov",
      "followers_url": "https://api.github.com/users/ppyordanov/followers",
      "following_url": "https://api.github.com/users/ppyordanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppyordanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppyordanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppyordanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ppyordanov/orgs",
      "repos_url": "https://api.github.com/users/ppyordanov/repos",
      "events_url": "https://api.github.com/users/ppyordanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppyordanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ppyordanov",
      "id": 5113984,
      "node_id": "MDQ6VXNlcjUxMTM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5113984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppyordanov",
      "html_url": "https://github.com/ppyordanov",
      "followers_url": "https://api.github.com/users/ppyordanov/followers",
      "following_url": "https://api.github.com/users/ppyordanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppyordanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppyordanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppyordanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ppyordanov/orgs",
      "repos_url": "https://api.github.com/users/ppyordanov/repos",
      "events_url": "https://api.github.com/users/ppyordanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppyordanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2627b1dbc9ab819536df8b9a8f7dcdcb9e58cc1"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 41,
      "deletions": 41
    },
    "files": [
      {
        "sha": "350ac638554e5e5930792f35f2f3c477132fd4a3",
        "filename": ".style.yapf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/.style.yapf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/.style.yapf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.style.yapf?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -107,7 +107,7 @@ each_dict_entry_on_separate_line=True\n i18n_comment=\n \n # The i18n function call names. The presence of this function stops\n-# reformattting on that line, because the string it has cannot be moved\n+# reformatting on that line, because the string it has cannot be moved\n # away from the i18n comment.\n i18n_function_call=\n "
      },
      {
        "sha": "b42c1f5a319115c2d8b18bb7ab8fc4f642c090a2",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -10,7 +10,7 @@\n #\n #   Test for the Boost C++ libraries of a particular version (or newer)\n #\n-#   If no path to the installed boost library is given the macro searchs\n+#   If no path to the installed boost library is given the macro searches\n #   under /usr, /usr/local, /opt and /opt/local and evaluates the\n #   $BOOST_ROOT environment variable. Further documentation is available at\n #   <http://randspringer.de/boost/index.html>."
      },
      {
        "sha": "194ac471f6f45501b2ffb576c9224ebe3bdb546b",
        "filename": "depends/patches/native_cctools/ld64_disable_threading.patch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/depends/patches/native_cctools/ld64_disable_threading.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/depends/patches/native_cctools/ld64_disable_threading.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cctools/ld64_disable_threading.patch?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -8,7 +8,7 @@ Date:   Tue Aug 18 01:20:24 2020 +0000\n     differently based on which files have already been parsed. This is more\n     likely to occur on systems with more CPUs.\n \n-    Just disable threading for now. There is no noticable slowdown.\n+    Just disable threading for now. There is no notic\u0435able slowdown.\n \n     See #9891.\n "
      },
      {
        "sha": "6bcad7006b08c537e4b9e0654af16a71a48c3949",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -2,4 +2,4 @@\n .SH NAME\n bitcoin-cli \\- manual page for bitcoin-cli\n \n-This is a placefolder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release.\n+This is a placeholder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release."
      },
      {
        "sha": "ff4d1d2c7ac2e5f893932d286f9f0ab4ae5e18a5",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -2,4 +2,4 @@\n .SH NAME\n bitcoin-qt \\- manual page for bitcoin-qt\n \n-This is a placefolder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release.\n+This is a placeholder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release."
      },
      {
        "sha": "776bb462342a6f39cb60a1664f03de4a7b581ef1",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -2,4 +2,4 @@\n .SH NAME\n bitcoin-tx \\- manual page for bitcoin-tx\n \n-This is a placefolder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release.\n+This is a placeholder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release."
      },
      {
        "sha": "2da43dec663982b7ae1c52eff159e4280ca541fd",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -2,4 +2,4 @@\n .SH NAME\n bitcoin-wallet \\- manual page for bitcoin-wallet\n \n-This is a placefolder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release.\n+This is a placeholder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release."
      },
      {
        "sha": "2c88f745205bc00db0cfa26797af00a2d8bf1865",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -2,4 +2,4 @@\n .SH NAME\n bitcoind \\- manual page for bitcoind\n \n-This is a placefolder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release.\n+This is a placeholder file. Please follow the instructions in \\fIcontrib/devtools/README.md\\fR to generate the manual pages after a release."
      },
      {
        "sha": "ae42b041d51f5ad8f3a4ccf08900a653463405d9",
        "filename": "doc/psbt.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -1,4 +1,4 @@\n-# PSBT Howto for Bitcoin Core\n+# PSBT How-to for Bitcoin Core\n \n Since Bitcoin Core 0.17, an RPC interface exists for Partially Signed Bitcoin\n Transactions (PSBTs, as specified in"
      },
      {
        "sha": "ddcb00b9dc9b23499b998cf844b62a489c7769aa",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -110,7 +110,7 @@ Memory pool limiting\n Previous versions of Bitcoin Core had their mempool limited by checking\n a transaction's fees against the node's minimum relay fee. There was no\n upper bound on the size of the mempool and attackers could send a large\n-number of transactions paying just slighly more than the default minimum\n+number of transactions paying just slightly more than the default minimum\n relay fee to crash nodes with relatively low RAM. A temporary workaround\n for previous versions of Bitcoin Core was to raise the default minimum\n relay fee."
      },
      {
        "sha": "728ccd2c9a5b0736d8689d717fed1383520a6275",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -65,7 +65,7 @@ GUI startup crash issue\n \n After upgrade to 0.15.0, some clients would crash at startup because a custom\n fee setting was configured that no longer exists in the GUI. This is a minimal\n-patch to avoid this issue from occuring.\n+patch to avoid this issue from occurring.\n \n 0.15.0.1 Change log\n ===================="
      },
      {
        "sha": "40224f056f2f6b54eeff2c7519c8e66c520723cd",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -71,7 +71,7 @@ Rescanning with encrypted wallets\n As in previous versions, when using an encrypted HD wallet, the keypool cannot be topped up without unlocking\n the wallet. This means that currently, in order to recover from a backup of an encrypted HD wallet, the user\n must unlock the wallet with a really long timeout and manually trigger a rescan, otherwise they risk missing\n-some keys when auto-topup cannot run. Unfortunately there is no `rescan` RPC in this version, that will be\n+some keys when auto top-up cannot run. Unfortunately there is no `rescan` RPC in this version, that will be\n included in a future version, so for now a rescan can be triggered using one of the `import*` commands, using\n a dummy address generated by another (trusted) wallet.\n "
      },
      {
        "sha": "fcda5be646f51b61a7d4933ad28d58c6befcfc6d",
        "filename": "doc/release-notes/release-notes-0.16.0.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.16.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.16.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.0.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -236,7 +236,7 @@ Testing changes\n - #11583 `37ffa16` Do not make it trivial for inbound peers to generate log entries (TheBlueMatt)\n - #11363 `ba2f195` Split socket create/connect (theuni)\n - #11917 `bc66765` Add testnet DNS seed:  seed.testnet.bitcoin.sprovoost.nl (Sjors)\n-- #11512 `6e89de5` Use GetDesireableServiceFlags in seeds, dnsseeds, fixing static seed adding (TheBlueMatt)\n+- #11512 `6e89de5` Use GetDesirableServiceFlags in seeds, dnsseeds, fixing static seed adding (TheBlueMatt)\n - #12262 `16bac24` Hardcoded seed update (laanwj)\n - #12270 `9cf6393` Update chainTxData for 0.16 (laanwj)\n - #12392 `0f61651` Fix ignoring tx data requests when fPauseSend is set on a peer (TheBlueMatt)\n@@ -538,7 +538,7 @@ Testing changes\n - #11143 `3aa60b7` Fix include path for bitcoin-config.h (danra)\n - #8330 `59e1789` Structure Packing Optimizations in C{,Mutable}Transaction (JeremyRubin)\n - #10845 `39ae413` Remove unreachable code (practicalswift)\n-- #11238 `6acdb1f` Add assertions before potential null deferences (MeshCollider)\n+- #11238 `6acdb1f` Add assertions before potential null dereferences (MeshCollider)\n - #11259 `089b742` Remove duplicate destination decoding (promag)\n - #11232 `2f0d3e6` Ensure that data types are consistent (jjz)\n - #10793 `efb4383` Changing &var[0] to var.data() (MeshCollider)"
      },
      {
        "sha": "23be250e57064d6a7021758f3b7bd7224e6fd3f3",
        "filename": "doc/release-notes/release-notes-0.16.2.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.16.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.16.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.2.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -52,19 +52,19 @@ frequently tested on them.\n ### Wallet\n - #13622 `c04a4a5` Remove mapRequest tracking that just effects Qt display. (TheBlueMatt)\n - #12905 `cfc6f74` [rpcwallet] Clamp walletpassphrase value at 100M seconds (sdaftuar)\n-- #13437 `ed82e71` wallet: Erase wtxOrderd wtx pointer on removeprunedfunds (MarcoFalke)\n+- #13437 `ed82e71` wallet: Erase wtxOrdered wtx pointer on removeprunedfunds (MarcoFalke)\n \n ### RPC and other APIs\n - #13451 `cbd2f70` rpc: expose CBlockIndex::nTx in getblock(header) (instagibbs)\n - #13507 `f7401c8` RPC: Fix parameter count check for importpubkey (kristapsk)\n - #13452 `6b9dc8c` rpc: have verifytxoutproof check the number of txns in proof structure (instagibbs)\n-- #12837 `bf1f150` rpc: fix type mistmatch in `listreceivedbyaddress` (joemphilips)\n+- #12837 `bf1f150` rpc: fix type mismatch in `listreceivedbyaddress` (joemphilips)\n - #12743 `657dfc5` Fix csBestBlock/cvBlockChange waiting in rpc/mining (sipa)\n \n ### GUI\n - #12432 `f78e7f6` [qt] send: Clear All also resets coin control options (Sjors)\n - #12617 `21dd512` gui: Show messages as text not html (laanwj)\n-- #12793 `cf6feb7` qt: Avoid reseting on resetguisettigs=0 (MarcoFalke)\n+- #12793 `cf6feb7` qt: Avoid resetting on resetguisettigs=0 (MarcoFalke)\n \n ### Build system\n - #13544 `9fd3e00` depends: Update Qt download url (fanquake)"
      },
      {
        "sha": "9e87a1e14b8b13fc039599ca26f27ae96b1c0527",
        "filename": "doc/release-notes/release-notes-0.18.0.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.18.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.18.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.18.0.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -684,7 +684,7 @@ Changes for particular platforms\n - #15122 Expand help text for `importmulti` changes (jnewbery)\n - #15186 remove duplicate solvable field from `getaddressinfo` (fanquake)\n - #15209 zmq: log outbound message high water mark when reusing socket (fanquake)\n-- #15177 rest: Improve tests and documention of /headers and /block (promag)\n+- #15177 rest: Improve tests and documentation of /headers and /block (promag)\n - #14353 rest: Add blockhash call, fetch blockhash by height (jonasschnelli)\n - #15248 Compile on GCC4.8 (MarcoFalke)\n - #14987 RPCHelpMan: Pass through Result and Examples (MarcoFalke)\n@@ -819,7 +819,7 @@ Changes for particular platforms\n - #14081 travis: Fix missing differentiation between unit and functional tests (scravy)\n - #14042 travis: Add cxxflags=-wno-psabi at arm job (ken2812221)\n - #14051 Make `combine_logs.py` handle multi-line logs (jnewbery)\n-- #14093 Fix accidental trunction from int to bool (practicalswift)\n+- #14093 Fix accidental truncation from int to bool (practicalswift)\n - #14108 Add missing locking annotations and locks (`g_cs_orphans`) (practicalswift)\n - #14088 Don't assert(\u2026) with side effects (practicalswift)\n - #14086 appveyor: Use clcache to speed up build (ken2812221)\n@@ -924,7 +924,7 @@ Changes for particular platforms\n - #14958 Remove race between connecting and shutdown on separate connections (promag)\n - #15166 Pin shellcheck version (practicalswift)\n - #15196 Update all `subprocess.check_output` functions to be Python 3.4 compatible (gkrizek)\n-- #15043 Build fuzz targets into seperate executables (MarcoFalke)\n+- #15043 Build fuzz targets into separate executables (MarcoFalke)\n - #15276 travis: Compile once on trusty (MarcoFalke)\n - #15246 Add tests for invalid message headers (MarcoFalke)\n - #15301 When testing with --usecli, unify RPC arg to cli arg conversion and handle dicts and lists (achow101)"
      },
      {
        "sha": "f288d7bde5ad3a9ee6df8bed95a9f1b9dbc6d79a",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -18,7 +18,7 @@ Fix possible buffer overflow on systems with very long application data paths. T\n Resolved multiple bugs preventing long-term unlocking of encrypted wallets (issue #922).\n Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n-Various memory leaks and potential null pointer deferences have been\n+Various memory leaks and potential null pointer dereferences have been\n fixed.\n Several shutdown issues have been fixed.\n Check that keys stored in the wallet are valid at startup, and if not,"
      },
      {
        "sha": "058707e00659e800335b40f2269fc5f1e958d258",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -26,7 +26,7 @@ Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring o\n Skip splash screen when -min is used, and fix Minimize to Tray function.\n Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n Correct various labels and messages.\n-Various memory leaks and potential null pointer deferences have been fixed.\n+Various memory leaks and potential null pointer dereferences have been fixed.\n Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n Several shutdown issues have been fixed.\n Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users."
      },
      {
        "sha": "d56aa66db9381ebf7b4d152515e73c449fa77308",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -80,7 +80,7 @@ JSON-RPC API\n * Added 'listaddressgroupings' for better coin control\n * Rework getblock call.\n * Remove deprecated RPC 'getblocknumber'\n-* Remove superceded RPC 'getmemorypool' (see BIP 22, above)\n+* Remove superseded RPC 'getmemorypool' (see BIP 22, above)\n * listtransactions output now displays \"smart\" times for transactions,\n   and 'blocktime' and 'timereceived' fields were added\n "
      },
      {
        "sha": "04f31db5a0de3af7034332c977d294e1caa5e96e",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -61,7 +61,7 @@ Command-line options:\n - `cd5164a` Make -proxy set all network types, avoiding a connect leak.\n \n P2P:\n-- `bb424e4` Limit the number of new addressses to accumulate\n+- `bb424e4` Limit the number of new addresses to accumulate\n \n RPC:\n - `0a94661` Disable SSLv3 (in favor of TLS) for the RPC client and server."
      },
      {
        "sha": "8ac0f32d4015d32c5db45f9fa7d91a4f303e47fe",
        "filename": "src/bench/nanobench.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/bench/nanobench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/bench/nanobench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/nanobench.h?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -170,7 +170,7 @@ class BigO;\n  *    Apart from these tags, it is also possible to use some mathematical operations on the measurement data. The operations\n  *    are of the form `{{command(name)}}`.  Currently `name` can be one of `elapsed`, `iterations`. If performance counters\n  *    are available (currently only on current Linux systems), you also have `pagefaults`, `cpucycles`,\n- *    `contextswitches`, `instructions`, `branchinstructions`, and `branchmisses`. All the measuers (except `iterations`) are\n+ *    `contextswitches`, `instructions`, `branchinstructions`, and `branchmisses`. All the measures (except `iterations`) are\n  *    provided for a single iteration (so `elapsed` is the time a single iteration took). The following tags are available:\n  *\n  *    * `{{median(<name>>)}}` Calculate median of a measurement data set, e.g. `{{median(elapsed)}}`."
      },
      {
        "sha": "5469a760eec250388c991744a10ef8e21540c7e5",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -30,7 +30,7 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n /**\n  * Parse a hex string into 256 bits\n  * @param[in] strHex a hex-formatted, 64-character string\n- * @param[out] result the result of the parasing\n+ * @param[out] result the result of the parsing\n  * @returns true if successful, false if not\n  *\n  * @see ParseHashV for an RPC-oriented version of this"
      },
      {
        "sha": "288d44696d1f70517e0a48f524dfab430c0a89ae",
        "filename": "src/crc32c/.ycm_extra_conf.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/crc32c/.ycm_extra_conf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/crc32c/.ycm_extra_conf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crc32c/.ycm_extra_conf.py?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -3,7 +3,7 @@\n # found in the LICENSE file.\n \"\"\"YouCompleteMe configuration that interprets a .clang_complete file.\n \n-This module implementes the YouCompleteMe configuration API documented at:\n+This module implements the YouCompleteMe configuration API documented at:\n https://github.com/Valloric/ycmd#ycm_extra_confpy-specification\n \n The implementation loads and processes a .clang_complete file, documented at:"
      },
      {
        "sha": "817bb7ba111a2cc965bcaa6d783653c7b120932a",
        "filename": "src/leveldb/db/snapshot.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/leveldb/db/snapshot.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/leveldb/db/snapshot.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/snapshot.h?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -25,7 +25,7 @@ class SnapshotImpl : public Snapshot {\n   friend class SnapshotList;\n \n   // SnapshotImpl is kept in a doubly-linked circular list. The SnapshotList\n-  // implementation operates on the next/previous fields direcly.\n+  // implementation operates on the next/previous fields directly.\n   SnapshotImpl* prev_;\n   SnapshotImpl* next_;\n "
      },
      {
        "sha": "3ffe1465da5982449b04402fa02fc59720e6f54d",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -59,7 +59,7 @@ uint256 CPartialMerkleTree::CalcHash(int height, unsigned int pos, const std::ve\n     //if we do not have this assert, we can hit a memory access violation when indexing into vTxid\n     assert(vTxid.size() != 0);\n     if (height == 0) {\n-        // hash at height 0 is the txids themself\n+        // hash at height 0 is the txids themselves\n         return vTxid[pos];\n     } else {\n         // calculate left hash"
      },
      {
        "sha": "a4d246992386960286086ef4ff20039131555254",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -173,7 +173,7 @@\n     </message>\n     <message>\n         <source>Wallet encrypted</source>\n-        <translation>\u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043ba \u0435 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d</translation>\n+        <translation>\u041f\u043e\u0440\u0442\u0444\u0435\u0439\u043b\u044a\u0442 \u0435 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d</translation>\n     </message>\n     <message>\n         <source>Wallet to be encrypted</source>"
      },
      {
        "sha": "24d7735447c35c48811d67d08cd033634632cb82",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -127,10 +127,10 @@ void RPCNestedTests::rpcNestedTests()\n     QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"getblockchaininfo() .\\n\"), std::runtime_error); //invalid syntax\n     QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"getblockchaininfo() getblockchaininfo()\"), std::runtime_error); //invalid syntax\n     (RPCConsole::RPCExecuteCommandLine(m_node, result, \"getblockchaininfo(\")); //tolerate non closing brackets if we have no arguments\n-    (RPCConsole::RPCExecuteCommandLine(m_node, result, \"getblockchaininfo()()()\")); //tolerate non command brackts\n+    (RPCConsole::RPCExecuteCommandLine(m_node, result, \"getblockchaininfo()()()\")); //tolerate non command brackets\n     QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"getblockchaininfo(True)\"), UniValue); //invalid argument\n     QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"a(getblockchaininfo(True))\"), UniValue); //method not found\n-    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"rpcNestedTest abc,,abc\"), std::runtime_error); //don't tollerate empty arguments when using ,\n-    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"rpcNestedTest(abc,,abc)\"), std::runtime_error); //don't tollerate empty arguments when using ,\n-    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"rpcNestedTest(abc,,)\"), std::runtime_error); //don't tollerate empty arguments when using ,\n+    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"rpcNestedTest abc,,abc\"), std::runtime_error); //don't tolerate empty arguments when using ,\n+    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"rpcNestedTest(abc,,abc)\"), std::runtime_error); //don't tolerate empty arguments when using ,\n+    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(m_node, result, \"rpcNestedTest(abc,,)\"), std::runtime_error); //don't tolerate empty arguments when using ,\n }"
      },
      {
        "sha": "7a89325ddf44b0fc7508ced1a4d6f34797aad7f5",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -152,7 +152,7 @@ WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wal\n \n     connect(wallet_model, &WalletModel::unload, this, [this, wallet_model] {\n         // Defer removeAndDeleteWallet when no modal widget is active.\n-        // TODO: remove this workaround by removing usage of QDiallog::exec.\n+        // TODO: remove this workaround by removing usage of QDialog::exec.\n         if (QApplication::activeModalWidget()) {\n             connect(qApp, &QApplication::focusWindowChanged, wallet_model, [this, wallet_model]() {\n                 if (!QApplication::activeModalWidget()) {"
      },
      {
        "sha": "344d28b412bf261401af3c913049dc589e8a54de",
        "filename": "src/secp256k1/include/secp256k1.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/secp256k1/include/secp256k1.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/secp256k1/include/secp256k1.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1.h?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -43,7 +43,7 @@ extern \"C\" {\n  */\n typedef struct secp256k1_context_struct secp256k1_context;\n \n-/** Opaque data structure that holds rewriteable \"scratch space\"\n+/** Opaque data structure that holds rewritable \"scratch space\"\n  *\n  *  The purpose of this structure is to replace dynamic memory allocations,\n  *  because we target architectures where this may not be available. It is"
      },
      {
        "sha": "39158482024672f5c00f1088696e7a21d87437a8",
        "filename": "src/secp256k1/src/ecmult_impl.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/secp256k1/src/ecmult_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/secp256k1/src/ecmult_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_impl.h?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -44,7 +44,7 @@\n #  define WINDOW_G ECMULT_WINDOW_SIZE\n #endif\n \n-/* Noone will ever need more than a window size of 24. The code might\n+/* No one will ever need more than a window size of 24. The code might\n  * be correct for larger values of ECMULT_WINDOW_SIZE but this is not\n  * not tested.\n  *"
      },
      {
        "sha": "8ec53bdaeb5ad0f2676744a81d626ec81f8c51f5",
        "filename": "src/test/pow_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -90,7 +90,7 @@ BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_too_easy_target)\n     BOOST_CHECK(!CheckProofOfWork(hash, nBits, consensus));\n }\n \n-BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_biger_hash_than_target)\n+BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_bigger_hash_than_target)\n {\n     const auto consensus = CreateChainParams(*m_node.args, CBaseChainParams::MAIN)->GetConsensus();\n     uint256 hash;"
      },
      {
        "sha": "70ab4f797a720a603290a4ccf144f456d1d5d989",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -37,7 +37,7 @@ class SQLiteBatch : public DatabaseBatch\n     explicit SQLiteBatch(SQLiteDatabase& database);\n     ~SQLiteBatch() override { Close(); }\n \n-    /* No-op. See commeng on SQLiteDatabase::Flush */\n+    /* No-op. See comment on SQLiteDatabase::Flush */\n     void Flush() override {}\n \n     void Close() override;"
      },
      {
        "sha": "fd317c312e8f229331812a185f155e5e0faf0154",
        "filename": "test/functional/mempool_reorg.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/test/functional/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/test/functional/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_reorg.py?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -94,7 +94,7 @@ def run_test(self):\n         for node in self.nodes:\n             node.invalidateblock(last_block[0])\n         # Time-locked transaction is now too immature and has been removed from the mempool\n-        # spend_103_1 has been re-orged out of the chain and is back in the mempool\n+        # spend_103_1 has been reorged out of the chain and is back in the mempool\n         assert_equal(set(self.nodes[0].getrawmempool()), {spend_101_id, spend_102_1_id, spend_103_1_id})\n \n         # Use invalidateblock to re-org back and make all those coinbase spends"
      },
      {
        "sha": "cca7390ae38a2377b25a92a7cc44bbad3a065ddc",
        "filename": "test/functional/p2p_invalid_tx.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9837ca1adfed9b93e9a0d77692b05b974c222b2f/test/functional/p2p_invalid_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9837ca1adfed9b93e9a0d77692b05b974c222b2f/test/functional/p2p_invalid_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_tx.py?ref=9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "patch": "@@ -143,7 +143,7 @@ def run_test(self):\n         }\n         # Transactions that do not end up in the mempool\n         # tx_orphan_no_fee, because it has too low fee (p2ps[0] is not disconnected for relaying that tx)\n-        # tx_orphan_invaid, because it has negative fee (p2ps[1] is disconnected for relaying that tx)\n+        # tx_orphan_invalid, because it has negative fee (p2ps[1] is disconnected for relaying that tx)\n \n         self.wait_until(lambda: 1 == len(node.getpeerinfo()), timeout=12)  # p2ps[1] is no longer connected\n         assert_equal(expected_mempool, set(node.getrawmempool()))"
      }
    ]
  },
  {
    "sha": "66fde502c9630b11643434cc8db81ed74db97615",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmZkZTUwMmM5NjMwYjExNjQzNDM0Y2M4ZGI4MWVkNzRkYjk3NjE1",
    "commit": {
      "author": {
        "name": "Peter Yordanov",
        "email": "ppyordanov@yahoo.com",
        "date": "2021-01-03T07:15:32Z"
      },
      "committer": {
        "name": "Peter Yordanov",
        "email": "ppyordanov@yahoo.com",
        "date": "2021-01-03T07:15:32Z"
      },
      "message": "Documentation:Fix typos.",
      "tree": {
        "sha": "c29eb8269ba78d0b09fa204f870e739c897e159a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c29eb8269ba78d0b09fa204f870e739c897e159a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66fde502c9630b11643434cc8db81ed74db97615",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66fde502c9630b11643434cc8db81ed74db97615",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66fde502c9630b11643434cc8db81ed74db97615",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66fde502c9630b11643434cc8db81ed74db97615/comments",
    "author": {
      "login": "ppyordanov",
      "id": 5113984,
      "node_id": "MDQ6VXNlcjUxMTM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5113984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppyordanov",
      "html_url": "https://github.com/ppyordanov",
      "followers_url": "https://api.github.com/users/ppyordanov/followers",
      "following_url": "https://api.github.com/users/ppyordanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppyordanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppyordanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppyordanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ppyordanov/orgs",
      "repos_url": "https://api.github.com/users/ppyordanov/repos",
      "events_url": "https://api.github.com/users/ppyordanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppyordanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ppyordanov",
      "id": 5113984,
      "node_id": "MDQ6VXNlcjUxMTM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5113984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ppyordanov",
      "html_url": "https://github.com/ppyordanov",
      "followers_url": "https://api.github.com/users/ppyordanov/followers",
      "following_url": "https://api.github.com/users/ppyordanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ppyordanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ppyordanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ppyordanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ppyordanov/orgs",
      "repos_url": "https://api.github.com/users/ppyordanov/repos",
      "events_url": "https://api.github.com/users/ppyordanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ppyordanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9837ca1adfed9b93e9a0d77692b05b974c222b2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9837ca1adfed9b93e9a0d77692b05b974c222b2f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7d122ea5f97255b27e0f2f5dc7d218a57372be36",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66fde502c9630b11643434cc8db81ed74db97615/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66fde502c9630b11643434cc8db81ed74db97615/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=66fde502c9630b11643434cc8db81ed74db97615",
        "patch": "@@ -217,7 +217,7 @@ endef\n #\n # 7. In clang.conf, swap out clang & clang++, for our compiler + flags. See #17466.\n #\n-# 8. Adjust a regex in toolchain.prf, to accomodate Guix's usage of\n+# 8. Adjust a regex in toolchain.prf, to accommodate Guix's usage of\n # CROSS_LIBRARY_PATH. See #15277.\n define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/freetype_back_compat.patch && \\"
      },
      {
        "sha": "8a2a0e66e8728bfe70e2988face954667143cffa",
        "filename": "doc/release-notes/release-notes-0.20.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66fde502c9630b11643434cc8db81ed74db97615/doc/release-notes/release-notes-0.20.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66fde502c9630b11643434cc8db81ed74db97615/doc/release-notes/release-notes-0.20.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.20.0.md?ref=66fde502c9630b11643434cc8db81ed74db97615",
        "patch": "@@ -698,7 +698,7 @@ Build system\n - #18224 Make AnalyzePSBT next role calculation simple, correct (instagibbs)\n - #18228 Add missing syncwithvalidationinterfacequeue (MarcoFalke)\n - #18247 Wait for both veracks in `add_p2p_connection` (MarcoFalke)\n-- #18249 Bump timeouts to accomodate really slow disks (MarcoFalke)\n+- #18249 Bump timeouts to accommodate really slow disks (MarcoFalke)\n - #18255 Add `bad-txns-*-toolarge` test cases to `invalid_txs` (MarcoFalke)\n - #18263 rpc: change setmocktime check to use IsMockableChain (gzhao408)\n - #18285 Check that `wait_until` returns if time point is in the past (MarcoFalke)"
      }
    ]
  }
]